   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"logistic.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN6tflite3ops5micro11activations12LogisticInitEP13TfLiteContextPKcj,"ax",%progbits
  17              		.align	2
  18              		.global	_ZN6tflite3ops5micro11activations12LogisticInitEP13TfLiteContextPKcj
  19              		.syntax unified
  20              		.arm
  21              		.fpu neon
  23              	_ZN6tflite3ops5micro11activations12LogisticInitEP13TfLiteContextPKcj:
  24              		.fnstart
  25              	.LFB4174:
  26              		.file 1 "../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp"
   1:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
   3:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** you may not use this file except in compliance with the License.
   5:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** You may obtain a copy of the License at
   6:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
   7:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
   9:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** See the License for the specific language governing permissions and
  13:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** limitations under the License.
  14:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** ==============================================================================*/
  15:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  16:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** #include "tensorflow/lite/kernels/internal/reference/integer_ops/logistic.h"
  17:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  18:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** #include "tensorflow/lite/c/builtin_op_data.h"
  19:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** #include "tensorflow/lite/c/common.h"
  20:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** #include "tensorflow/lite/kernels/internal/common.h"
  21:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  22:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** #include "tensorflow/lite/kernels/internal/reference/logistic.h"
  23:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** #include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
  24:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** #include "tensorflow/lite/kernels/kernel_util.h"
  25:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** #include "tensorflow/lite/kernels/op_macros.h"
  26:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** #include "tensorflow/lite/micro/kernels/kernel_util.h"
  27:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  28:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** namespace tflite {
  29:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** namespace ops {
  30:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** namespace micro {
  31:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** namespace activations {
  32:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** namespace {
  33:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** constexpr int kInputTensor = 0;
  34:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** constexpr int kOutputTensor = 0;
  35:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  36:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** struct OpData {
  37:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   int32_t input_zero_point;
  38:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   int32_t input_range_radius;
  39:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   int32_t input_multiplier;
  40:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   int input_left_shift;
  41:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** };
  42:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  43:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** TfLiteStatus CalculateArithmeticOpData(TfLiteContext* context, TfLiteNode* node,
  44:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                                        OpData* data) {
  45:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   const TfLiteTensor* input = GetInput(context, node, kInputTensor);
  46:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TF_LITE_ENSURE(context, input != nullptr);
  47:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
  48:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TF_LITE_ENSURE(context, output != nullptr);
  49:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);
  51:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   if (input->type == kTfLiteInt8) {
  52:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     TF_LITE_ENSURE_EQ(context, output->params.zero_point,
  53:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                       std::numeric_limits<int8_t>::min());
  54:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  55:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     static constexpr int kInputIntegerBits = 4;
  56:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     const double input_real_multiplier =
  57:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         static_cast<double>(input->params.scale) *
  58:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         static_cast<double>(1 << (31 - kInputIntegerBits));
  59:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  60:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     data->input_zero_point = input->params.zero_point;
  61:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  62:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     const double q = std::frexp(input_real_multiplier, &data->input_left_shift);
  63:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     data->input_multiplier = static_cast<int32_t>(TfLiteRound(q * (1ll << 31)));
  64:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  65:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     data->input_range_radius =
  66:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         CalculateInputRadius(kInputIntegerBits, data->input_left_shift, 31);
  67:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   }
  68:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   return kTfLiteOk;
  69:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** }
  70:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** }  // namespace
  71:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  72:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** void* LogisticInit(TfLiteContext* context, const char* buffer, size_t length) {
  27              		.loc 1 72 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  73:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  32              		.loc 1 73 0
  33 0000 383090E5 		ldr	r3, [r0, #56]
  34 0004 000053E3 		cmp	r3, #0
  35 0008 0100000A 		beq	.L7
  74:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   return context->AllocatePersistentBuffer(context, sizeof(OpData));
  36              		.loc 1 74 0
  37 000c 1010A0E3 		mov	r1, #16
  38              	.LVL1:
  39 0010 13FF2FE1 		bx	r3
  40              	.LVL2:
  41              	.L7:
  72:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  42              		.loc 1 72 0 discriminator 1
  43 0014 10402DE9 		push	{r4, lr}
  44              		.save {r4, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 4, -8
  47              		.cfi_offset 14, -4
  73:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  48              		.loc 1 73 0 discriminator 1
  49 0018 FEFFFFEB 		bl	abort
  50              	.LVL3:
  51              		.cfi_endproc
  52              	.LFE4174:
  53              		.fnend
  55              		.section	.text._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode,"a
  56              		.align	2
  57              		.global	_ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode
  58              		.syntax unified
  59              		.arm
  60              		.fpu neon
  62              	_ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode:
  63              		.fnstart
  64              	.LFB4175:
  75:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** }
  76:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  77:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** TfLiteStatus LogisticPrepare(TfLiteContext* context, TfLiteNode* node) {
  65              		.loc 1 77 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              	.LVL4:
  70 0000 F0402DE9 		push	{r4, r5, r6, r7, lr}
  71              		.save {r4, r5, r6, r7, lr}
  72              		.cfi_def_cfa_offset 20
  73              		.cfi_offset 4, -20
  74              		.cfi_offset 5, -16
  75              		.cfi_offset 6, -12
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78              		.pad #20
  79 0004 14D04DE2 		sub	sp, sp, #20
  80              		.cfi_def_cfa_offset 40
  78:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TFLITE_DCHECK(node->user_data != nullptr);
  81              		.loc 1 78 0
  82 0008 106091E5 		ldr	r6, [r1, #16]
  83 000c 000056E3 		cmp	r6, #0
  84 0010 7500000A 		beq	.L17
  85              	.LVL5:
  86              	.LBB1066:
  87              	.LBB1067:
  45:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TF_LITE_ENSURE(context, input != nullptr);
  88              		.loc 1 45 0
  89 0014 0020A0E3 		mov	r2, #0
  90 0018 0150A0E1 		mov	r5, r1
  91 001c 0040A0E1 		mov	r4, r0
  92              	.LVL6:
  93 0020 FEFFFFEB 		bl	_ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
  94              	.LVL7:
  46:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
  95              		.loc 1 46 0
  96 0024 007050E2 		subs	r7, r0, #0
  97 0028 3F00000A 		beq	.L18
  47:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TF_LITE_ENSURE(context, output != nullptr);
  98              		.loc 1 47 0
  99 002c 0510A0E1 		mov	r1, r5
 100 0030 0020A0E3 		mov	r2, #0
 101 0034 0400A0E1 		mov	r0, r4
 102              	.LVL8:
 103 0038 FEFFFFEB 		bl	_ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
 104              	.LVL9:
  48:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 105              		.loc 1 48 0
 106 003c 005050E2 		subs	r5, r0, #0
 107              	.LVL10:
 108 0040 5C00000A 		beq	.L19
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   if (input->type == kTfLiteInt8) {
 109              		.loc 1 50 0
 110 0044 0000D7E5 		ldrb	r0, [r7]	@ zero_extendqisi2
 111              	.LVL11:
 112 0048 0030D5E5 		ldrb	r3, [r5]	@ zero_extendqisi2
 113 004c 000053E1 		cmp	r3, r0
 114 0050 0500001A 		bne	.L20
 115              	.LBB1068:
  51:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     TF_LITE_ENSURE_EQ(context, output->params.zero_point,
 116              		.loc 1 51 0
 117 0054 090053E3 		cmp	r3, #9
 118              	.LBE1068:
  68:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** }
 119              		.loc 1 68 0
 120 0058 0030A013 		movne	r3, #0
 121              	.LBB1074:
  51:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     TF_LITE_ENSURE_EQ(context, output->params.zero_point,
 122              		.loc 1 51 0
 123 005c 1A00000A 		beq	.L21
 124              	.LVL12:
 125              	.L11:
 126              	.LBE1074:
 127              	.LBE1067:
 128              	.LBE1066:
  79:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   OpData* data = static_cast<OpData*>(node->user_data);
  80:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  81:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   return CalculateArithmeticOpData(context, node, data);
  82:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** }
 129              		.loc 1 82 0
 130 0060 0300A0E1 		mov	r0, r3
 131 0064 14D08DE2 		add	sp, sp, #20
 132              		.cfi_remember_state
 133              		.cfi_def_cfa_offset 20
 134              		@ sp needed
 135 0068 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 136              	.LVL13:
 137              	.L20:
 138              		.cfi_restore_state
 139              	.LBB1082:
 140              	.LBB1078:
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   if (input->type == kTfLiteInt8) {
 141              		.loc 1 50 0
 142 006c 146094E5 		ldr	r6, [r4, #20]
 143              	.LVL14:
 144 0070 FEFFFFEB 		bl	TfLiteTypeGetName
 145              	.LVL15:
 146 0074 0070A0E1 		mov	r7, r0
 147              	.LVL16:
 148 0078 0000D5E5 		ldrb	r0, [r5]	@ zero_extendqisi2
 149 007c FEFFFFEB 		bl	TfLiteTypeGetName
 150              	.LVL17:
 151 0080 00C000E3 		movw	ip, #:lower16:.LC6
 152 0084 003000E3 		movw	r3, #:lower16:.LC7
 153 0088 00C040E3 		movt	ip, #:upper16:.LC6
 154 008c 003040E3 		movt	r3, #:upper16:.LC7
 155 0090 002000E3 		movw	r2, #:lower16:.LC1
 156 0094 001000E3 		movw	r1, #:lower16:.LC5
 157 0098 0C008DE5 		str	r0, [sp, #12]
 158 009c 002040E3 		movt	r2, #:upper16:.LC1
 159 00a0 0400A0E1 		mov	r0, r4
 160 00a4 00308DE5 		str	r3, [sp]
 161 00a8 08708DE5 		str	r7, [sp, #8]
 162 00ac 001040E3 		movt	r1, #:upper16:.LC5
 163 00b0 04C08DE5 		str	ip, [sp, #4]
 164 00b4 3230A0E3 		mov	r3, #50
 165 00b8 36FF2FE1 		blx	r6
 166              	.LVL18:
 167 00bc 0130A0E3 		mov	r3, #1
 168              	.LVL19:
 169              	.LBE1078:
 170              	.LBE1082:
 171              		.loc 1 82 0
 172 00c0 0300A0E1 		mov	r0, r3
 173 00c4 14D08DE2 		add	sp, sp, #20
 174              		.cfi_remember_state
 175              		.cfi_def_cfa_offset 20
 176              		@ sp needed
 177 00c8 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 178              	.LVL20:
 179              	.L21:
 180              		.cfi_restore_state
 181              	.LBB1083:
 182              	.LBB1079:
 183              	.LBB1075:
 184              	.LBB1069:
  52:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                       std::numeric_limits<int8_t>::min());
 185              		.loc 1 52 0
 186 00cc 103095E5 		ldr	r3, [r5, #16]
 187 00d0 800073E3 		cmn	r3, #128
 188 00d4 2300000A 		beq	.L14
 189 00d8 00C000E3 		movw	ip, #:lower16:.LC9
 190 00dc 000000E3 		movw	r0, #:lower16:.LC10
 191 00e0 00C040E3 		movt	ip, #:upper16:.LC9
 192 00e4 7FE0E0E3 		mvn	lr, #127
 193 00e8 000040E3 		movt	r0, #:upper16:.LC10
 194 00ec 002000E3 		movw	r2, #:lower16:.LC1
 195 00f0 001000E3 		movw	r1, #:lower16:.LC8
 196 00f4 08308DE5 		str	r3, [sp, #8]
 197 00f8 00008DE5 		str	r0, [sp]
 198 00fc 002040E3 		movt	r2, #:upper16:.LC1
 199 0100 04C08DE5 		str	ip, [sp, #4]
 200 0104 0400A0E1 		mov	r0, r4
 201 0108 0CE08DE5 		str	lr, [sp, #12]
 202 010c 001040E3 		movt	r1, #:upper16:.LC8
 203 0110 144094E5 		ldr	r4, [r4, #20]
 204              	.LVL21:
 205 0114 3530A0E3 		mov	r3, #53
 206 0118 34FF2FE1 		blx	r4
 207              	.LVL22:
 208 011c 0130A0E3 		mov	r3, #1
 209              	.LVL23:
 210              	.LBE1069:
 211              	.LBE1075:
 212              	.LBE1079:
 213              	.LBE1083:
 214              		.loc 1 82 0
 215 0120 0300A0E1 		mov	r0, r3
 216 0124 14D08DE2 		add	sp, sp, #20
 217              		.cfi_remember_state
 218              		.cfi_def_cfa_offset 20
 219              		@ sp needed
 220 0128 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 221              	.LVL24:
 222              	.L18:
 223              		.cfi_restore_state
 224              	.LBB1084:
 225              	.LBB1080:
  46:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);
 226              		.loc 1 46 0
 227 012c 003000E3 		movw	r3, #:lower16:.LC3
 228 0130 002000E3 		movw	r2, #:lower16:.LC1
 229 0134 003040E3 		movt	r3, #:upper16:.LC3
 230 0138 001000E3 		movw	r1, #:lower16:.LC2
 231 013c 00308DE5 		str	r3, [sp]
 232 0140 0400A0E1 		mov	r0, r4
 233              	.LVL25:
 234 0144 002040E3 		movt	r2, #:upper16:.LC1
 235 0148 001040E3 		movt	r1, #:upper16:.LC2
 236 014c 145094E5 		ldr	r5, [r4, #20]
 237              	.LVL26:
 238 0150 2E30A0E3 		mov	r3, #46
 239 0154 35FF2FE1 		blx	r5
 240              	.LVL27:
 241 0158 0130A0E3 		mov	r3, #1
 242              	.LVL28:
 243              	.LBE1080:
 244              	.LBE1084:
 245              		.loc 1 82 0
 246 015c 0300A0E1 		mov	r0, r3
 247 0160 14D08DE2 		add	sp, sp, #20
 248              		.cfi_remember_state
 249              		.cfi_def_cfa_offset 20
 250              		@ sp needed
 251 0164 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 252              	.LVL29:
 253              	.L14:
 254              		.cfi_restore_state
 255              	.LBB1085:
 256              	.LBB1081:
 257              	.LBB1076:
 258              	.LBB1072:
  57:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         static_cast<double>(1 << (31 - kInputIntegerBits));
 259              		.loc 1 57 0
 260 0168 037AD7ED 		vldr.32	s15, [r7, #12]
  60:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 261              		.loc 1 60 0
 262 016c 0600A0E1 		mov	r0, r6
  58:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 263              		.loc 1 58 0
 264 0170 1E0B9FED 		vldr.64	d0, .L22
  60:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 265              		.loc 1 60 0
 266 0174 103097E5 		ldr	r3, [r7, #16]
  57:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         static_cast<double>(1 << (31 - kInputIntegerBits));
 267              		.loc 1 57 0
 268 0178 E70AF7EE 		vcvt.f64.f32	d16, s15
 269              	.LVL30:
  60:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 270              		.loc 1 60 0
 271 017c 0C3080E4 		str	r3, [r0], #12
  62:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     data->input_multiplier = static_cast<int32_t>(TfLiteRound(q * (1ll << 31)));
 272              		.loc 1 62 0
 273 0180 800B20EE 		vmul.f64	d0, d16, d0
 274              	.LVL31:
 275 0184 FEFFFFEB 		bl	frexp
 276              	.LVL32:
  63:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 277              		.loc 1 63 0
 278 0188 1A0BDFED 		vldr.64	d16, .L22+8
 279              	.LBB1070:
 280              	.LBB1071:
 281              		.file 2 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_CPPMATH_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_CPPMATH_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #include <cmath>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** namespace tflite {
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #if defined(TF_LITE_USE_GLOBAL_CMATH_FUNCTIONS) ||                           \
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****     (defined(__ANDROID__) && !defined(__NDK_MAJOR__)) || defined(ARDUINO) || \
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****     defined(__ZEPHYR__)
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #define TF_LITE_GLOBAL_STD_PREFIX
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #else
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #define TF_LITE_GLOBAL_STD_PREFIX std
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #endif
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #define DECLARE_STD_GLOBAL_SWITCH1(tf_name, std_name) \
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****   template <class T>                                  \
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****   inline T tf_name(const T x) {                       \
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****     return TF_LITE_GLOBAL_STD_PREFIX::std_name(x);    \
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****   }
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** DECLARE_STD_GLOBAL_SWITCH1(TfLiteRound, round);
 282              		.loc 2 36 0
 283 018c 200B20EE 		vmul.f64	d0, d0, d16
 284              	.LVL33:
 285 0190 FEFFFFEB 		bl	round
 286              	.LVL34:
 287              	.LBE1071:
 288              	.LBE1070:
  63:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 289              		.loc 1 63 0
 290 0194 C00BBDEE 		vcvt.s32.f64	s0, d0
  66:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   }
 291              		.loc 1 66 0
 292 0198 1F20A0E3 		mov	r2, #31
 293 019c 0C1096E5 		ldr	r1, [r6, #12]
 294 01a0 0400A0E3 		mov	r0, #4
  63:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 295              		.loc 1 63 0
 296 01a4 020A86ED 		vstr.32	s0, [r6, #8]	@ int
  66:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   }
 297              		.loc 1 66 0
 298 01a8 FEFFFFEB 		bl	_ZN6tflite20CalculateInputRadiusEiii
 299              	.LVL35:
 300              	.LBE1072:
 301              	.LBE1076:
  68:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** }
 302              		.loc 1 68 0
 303 01ac 0030A0E3 		mov	r3, #0
 304              	.LBB1077:
 305              	.LBB1073:
  65:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         CalculateInputRadius(kInputIntegerBits, data->input_left_shift, 31);
 306              		.loc 1 65 0
 307 01b0 040086E5 		str	r0, [r6, #4]
 308 01b4 A9FFFFEA 		b	.L11
 309              	.LVL36:
 310              	.L19:
 311              	.LBE1073:
 312              	.LBE1077:
  48:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 313              		.loc 1 48 0
 314 01b8 003000E3 		movw	r3, #:lower16:.LC4
 315 01bc 002000E3 		movw	r2, #:lower16:.LC1
 316 01c0 003040E3 		movt	r3, #:upper16:.LC4
 317 01c4 001000E3 		movw	r1, #:lower16:.LC2
 318 01c8 00308DE5 		str	r3, [sp]
 319 01cc 002040E3 		movt	r2, #:upper16:.LC1
 320 01d0 3030A0E3 		mov	r3, #48
 321 01d4 001040E3 		movt	r1, #:upper16:.LC2
 322 01d8 145094E5 		ldr	r5, [r4, #20]
 323 01dc 0400A0E1 		mov	r0, r4
 324              	.LVL37:
 325 01e0 35FF2FE1 		blx	r5
 326              	.LVL38:
 327 01e4 0130A0E3 		mov	r3, #1
 328 01e8 9CFFFFEA 		b	.L11
 329              	.LVL39:
 330              	.L17:
 331              	.LBE1081:
 332              	.LBE1085:
  78:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   OpData* data = static_cast<OpData*>(node->user_data);
 333              		.loc 1 78 0 discriminator 1
 334 01ec FEFFFFEB 		bl	abort
 335              	.LVL40:
 336              	.L23:
 337              		.align	3
 338              	.L22:
 339 01f0 00000000 		.word	0
 340 01f4 0000A041 		.word	1101004800
 341 01f8 00000000 		.word	0
 342 01fc 0000E041 		.word	1105199104
 343              		.cfi_endproc
 344              	.LFE4175:
 345              		.fnend
 347              		.section	.text._ZN6tflite3ops5micro17Register_LOGISTICEv,"ax",%progbits
 348              		.align	2
 349              		.global	_ZN6tflite3ops5micro17Register_LOGISTICEv
 350              		.syntax unified
 351              		.arm
 352              		.fpu neon
 354              	_ZN6tflite3ops5micro17Register_LOGISTICEv:
 355              		.fnstart
 356              	.LFB4177:
  83:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** TfLiteStatus LogisticEval(TfLiteContext* context, TfLiteNode* node) {
  85:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   const TfLiteEvalTensor* input =
  86:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****       tflite::micro::GetEvalInput(context, node, kInputTensor);
  87:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TfLiteEvalTensor* output =
  88:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****       tflite::micro::GetEvalOutput(context, node, kOutputTensor);
  89:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  90:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   TFLITE_DCHECK(node->user_data != nullptr);
  91:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   OpData* data = static_cast<OpData*>(node->user_data);
  92:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
  93:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   if (input->type == kTfLiteFloat32) {
  94:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     switch (output->type) {
  95:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****       case kTfLiteFloat32: {
  96:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         reference_ops::Logistic(tflite::micro::GetTensorShape(input),
  97:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                                 tflite::micro::GetTensorData<float>(input),
  98:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                                 tflite::micro::GetTensorShape(output),
  99:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                                 tflite::micro::GetTensorData<float>(output));
 100:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         return kTfLiteOk;
 101:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****       }
 102:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****       default:
 103:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 104:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                            TfLiteTypeGetName(input->type),
 105:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                            TfLiteTypeGetName(output->type));
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         return kTfLiteError;
 107:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     }
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   } else if (input->type == kTfLiteInt8) {
 109:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     switch (output->type) {
 110:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****       case kTfLiteInt8: {
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         reference_integer_ops::Logistic(
 112:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             data->input_zero_point, data->input_range_radius,
 113:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             data->input_multiplier, data->input_left_shift,
 114:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             NumElements(input->dims),
 115:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             tflite::micro::GetTensorData<int8_t>(input),
 116:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             tflite::micro::GetTensorData<int8_t>(output));
 117:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         return kTfLiteOk;
 118:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****       }
 119:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****       default:
 120:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 121:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                            TfLiteTypeGetName(input->type),
 122:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                            TfLiteTypeGetName(output->type));
 123:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****         return kTfLiteError;
 124:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     }
 125:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   } else {
 126:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     // TODO(b/141211002): Also support other data types once we have supported
 127:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     // temporary tensors in TFLM.
 128:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     TF_LITE_KERNEL_LOG(context, "Input %s, output %s not supported.",
 129:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                        TfLiteTypeGetName(input->type),
 130:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                        TfLiteTypeGetName(output->type));
 131:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     return kTfLiteError;
 132:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   }
 133:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   return kTfLiteOk;
 134:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** }
 135:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 136:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** }  // namespace activations
 137:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 138:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** TfLiteRegistration Register_LOGISTIC() {
 357              		.loc 1 138 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              	.LVL41:
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   return {/*init=*/activations::LogisticInit,
 140:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****           /*free=*/nullptr,
 141:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****           /*prepare=*/activations::LogisticPrepare,
 142:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****           /*invoke=*/activations::LogisticEval,
 143:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****           /*profiling_string=*/nullptr,
 144:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****           /*builtin_code=*/0,
 145:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****           /*custom_name=*/nullptr,
 146:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****           /*version=*/0};
 362              		.loc 1 146 0
 363 0000 00C000E3 		movw	ip, #:lower16:.LANCHOR0
 138:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   return {/*init=*/activations::LogisticInit,
 364              		.loc 1 138 0
 365 0004 10402DE9 		push	{r4, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 4, -8
 368              		.cfi_offset 14, -4
 369              		.loc 1 146 0
 370 0008 00C040E3 		movt	ip, #:upper16:.LANCHOR0
 138:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   return {/*init=*/activations::LogisticInit,
 371              		.loc 1 138 0
 372 000c 0040A0E1 		mov	r4, r0
 373              		.loc 1 146 0
 374 0010 00E0A0E1 		mov	lr, r0
 375 0014 0F00BCE8 		ldmia	ip!, {r0, r1, r2, r3}
 376              	.LVL42:
 377 0018 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 378 001c 0F009CE8 		ldm	ip, {r0, r1, r2, r3}
 379 0020 0F008EE8 		stm	lr, {r0, r1, r2, r3}
 147:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** }
 380              		.loc 1 147 0
 381 0024 0400A0E1 		mov	r0, r4
 382 0028 1080BDE8 		pop	{r4, pc}
 383              		.cfi_endproc
 384              	.LFE4177:
 385              		.cantunwind
 386              		.fnend
 388              		.section	.text._ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_,"axG"
 389              		.align	2
 390              		.weak	_ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_
 391              		.syntax unified
 392              		.arm
 393              		.fpu neon
 395              	_ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_:
 396              		.fnstart
 397              	.LFB4345:
 398              		.file 3 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Copyright 2015 The Gemmlowp Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // fixedpoint.h: fixed-point arithmetic, with basic operations and
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // a few math functions such as tanh.
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #ifndef GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <algorithm>
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cassert>
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cmath>
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cstdint>
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <limits>
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include "../internal/detect_platform.h"
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** namespace gemmlowp {
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Part 1: Low-level integer-arithmetic primitives.
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The implementations here are generic implementations valid for
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // scalar types (e.g. std::int32_t). Architecture-specific SIMD types
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // (e.g. NEON int32x4_t) may be supported by providing
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // specializations for them in separate files.
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The purpose of these primitives is two-fold:
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be used to implement higher-level fixed-point
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    abstractions, namely the FixedPoint class and its arithmetic
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    operators.
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be directly used to implement some more involved
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    fixed-point computations, e.g. the fixed-point implementation
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    of math functions such as tanh.
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Some compile-time traits around raw types to handle SIMD aspects:
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // number of lanes, underlying scalar type.
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits {};
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int32_t> {
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int32_t ScalarRawType;
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int16_t> {
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int16_t ScalarRawType;
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns a SIMD value duplicating a scalar value across all lanes.
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tRawType Dup(typename FixedPointRawTypeTraits<tRawType>::ScalarRawType x) {
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return x;
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise AND
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitAnd(tIntegerType a, tIntegerType b) {
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a & b;
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise OR
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitOr(tIntegerType a, tIntegerType b) {
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a | b;
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise XOR
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitXor(tIntegerType a, tIntegerType b) {
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a ^ b;
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise NOT
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitNot(tIntegerType a) {
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return ~a;
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer addition. Not saturating. Overflow is undefined behavior.
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Add(tIntegerType a, tIntegerType b) {
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a + b;
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer subtraction. Not saturating. Overflow is undefined behavior.
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Mul(tIntegerType a, tIntegerType b) {
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a * b;
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Sub(tIntegerType a, tIntegerType b) {
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a - b;
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer unary negative. Not saturating. Overflow is undefined behavior.
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Neg(tIntegerType a) {
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return -a;
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic left-shift, equivalent to multiplying with a power of two.
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Negative values are OK. In case of overflow, no Undefined
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Behavior, but the results are implementation-defined (in practice,
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // they currently are saturated, but we make no commitment to that). The idea
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // is that the caller will want to implement the overflowing cases with
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // saturation with compare-and-mask, so we don't care about the results
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // in the overflow case, we just want to avoid undefined behavior.
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerType may be int32 or any narrower signed type.
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftLeft(tIntegerType a, int offset) {
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_a = static_cast<std::int64_t>(a);
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_shifted = wide_a * (1 << offset);
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto max = std::numeric_limits<tIntegerType>::max();
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return wide_shifted < min
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              ? min
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic right-shift. Not rounding.
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Relying on implementation-defined, but in-practice-consistent,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // C++ compiler behavior.
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftRight(tIntegerType a, int offset) {
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a >> offset;
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Each bit of the result is set to the corresponding bit of either then_val or
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // else_val depending on whether the corresponding bit of if_mask is set.
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to the VBSL instruction in ARM NEON.
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType SelectUsingMask(tIntegerType if_mask, tIntegerType then_val,
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                              tIntegerType else_val) {
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return BitXor(BitAnd(if_mask, then_val), BitAnd(BitNot(if_mask), else_val));
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is non-zero.
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNonZero(tIntegerType a) {
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr tIntegerType zero = 0;
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a ? BitNot(zero) : zero;
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is zero.
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfZero(tIntegerType a) {
 165:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(!a);
 166:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 167:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 168:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 169:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are equal.
 170:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 171:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfEqual(tIntegerType a, tIntegerType b) {
 172:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a == b);
 173:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 174:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 175:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 176:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are not equal.
 177:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 178:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNotEqual(tIntegerType a, tIntegerType b) {
 179:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a != b);
 180:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 181:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 182:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 183:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a > b.
 184:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 185:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThan(tIntegerType a, tIntegerType b) {
 186:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a > b);
 187:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 188:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 189:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 190:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a >= b.
 191:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 192:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThanOrEqual(tIntegerType a, tIntegerType b) {
 193:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a >= b);
 194:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 195:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 196:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 197:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a < b.
 198:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 199:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThan(tIntegerType a, tIntegerType b) {
 200:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a < b);
 201:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 202:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 204:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a <= b.
 205:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 206:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThanOrEqual(tIntegerType a, tIntegerType b) {
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a <= b);
 208:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 209:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 210:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if all of the input scalars are nonzero.
 211:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 212:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 213:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 214:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** bool All(tIntegerType a) {
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 217:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 218:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if any of the input scalars are nonzero.
 219:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 220:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 221:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 222:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** bool Any(tIntegerType a) {
 223:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 224:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 225:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 226:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns (a+b)/2, rounded to the nearest integer.
 227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to VRHADD in the ARM NEON instruction set.
 228:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 229:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType RoundingHalfSum(IntegerType a, IntegerType b) {
 230:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 231:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 233:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 234:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 235:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 236:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t RoundingHalfSum(std::int32_t a, std::int32_t b) {
 237:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a64 = a;
 238:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b64 = b;
 239:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sum = a64 + b64;
 240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sign = sum >= 0 ? 1 : -1;
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 242:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 243:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 244:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 245:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t RoundingHalfSum(std::int16_t a, std::int16_t b) {
 246:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 247:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 248:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 249:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sign = sum >= 0 ? 1 : -1;
 250:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>((sum + sign) / 2);
 251:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 253:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 254:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingAdd(IntegerType a, IntegerType b) {
 255:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 256:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 257:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 258:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 259:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 260:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // So far this is only needed for int16.
 261:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 262:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingAdd(std::int16_t a, std::int16_t b) {
 263:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 265:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 266:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 267:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       std::min(static_cast<std::int32_t>(32767),
 268:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                std::max(static_cast<std::int32_t>(-32768), sum)));
 269:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 270:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 271:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns a+b, saturating if the integers are 16bit or narrower,
 272:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // otherwise just a plain addition.
 273:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, bool Is16Bit>
 274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl {
 275:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) { return Add(a, b); }
 276:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 277:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 278:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl<IntegerType, true> {
 279:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) {
 280:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return SaturatingAdd(a, b);
 281:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 282:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 283:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 284:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType AddSaturatingIf16Bit(IntegerType a, IntegerType b) {
 285:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   using ScalarType =
 286:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       typename FixedPointRawTypeTraits<IntegerType>::ScalarRawType;
 287:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return AddSaturatingIf16BitImpl<IntegerType, sizeof(ScalarType) == 2>::Run(a,
 288:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                                              b);
 289:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 291:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns the integer that represents the product of two fixed-point
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // numbers, interpreting all integers as fixed-point values in the
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1), rounding to the nearest value, and saturating
 294:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // -1 * -1 to the maximum value (since 1 is not in the half-open
 295:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1)).
 296:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 297:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // [The explanation below specializes to std::int32_t for example purpose.]
 298:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 299:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The mapping between IntegerType and the interval [-1, 1) is unique and
 300:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // implied by IntegerType, which is assumed to be signed. For example,
 301:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // for IntegerType==std::int32_t, the mapping is
 302:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   real_value = integer_value / 2^31.
 303:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // So in this case, and leaving aside rounding and saturating, this
 304:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // function computes ((a / 2^31) * (b / 2^31)) * 2^31, which simplifies to
 305:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^31.
 306:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 307:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The 'doubling' part in the name of this function comes from the fact that
 308:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // this operation is very close to a "multiply-high" operation, keeping only
 309:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // the top half bits, except that that would be effectively computing
 310:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^32,
 311:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // so here we are computing 2x that, since
 312:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   1/2^31 = 2 * 1/2^32.
 313:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The idea is to use all of the available 32 bits in the destination int32
 314:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // value.
 315:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 316:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // [End of the explanation specializing to int32.]
 317:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 318:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This is equivalent to the VQRDMULH instruction in ARM NEON.
 319:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 320:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingRoundingDoublingHighMul(IntegerType a, IntegerType b) {
 321:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 322:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 323:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 324:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 325:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 326:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function implements the same computation as the ARMv7 NEON VQRDMULH
 327:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // instruction.
 328:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 329:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t SaturatingRoundingDoublingHighMul(std::int32_t a,
 330:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int32_t b) {
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int32_t>::min();
 332:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 336:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 339:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 340:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 341:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 342:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingRoundingDoublingHighMul(std::int16_t a,
 343:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int16_t b) {
 344:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int16_t>::min();
 345:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 346:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 347:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 348:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 349:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 350:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 351:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 352:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 353:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 354:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Correctly-rounded-to-nearest division by a power-of-two.
 355:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Also known as a rounding arithmetic right shift.
 356:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 357:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline IntegerType RoundingDivideByPOT(IntegerType x, int exponent) {
 358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent >= 0);
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 361:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType zero = Dup<IntegerType>(0);
 362:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType one = Dup<IntegerType>(1);
 363:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType remainder = BitAnd(x, mask);
 364:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType threshold =
 365:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       Add(ShiftRight(mask, 1), BitAnd(MaskIfLessThan(x, zero), one));
 366:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return Add(ShiftRight(x, exponent),
 367:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              BitAnd(MaskIfGreaterThan(remainder, threshold), one));
 368:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 369:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 370:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns the product of a run-time integer value by a compile-time power
 371:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // of two, with either a positive exponent (equivalent to an arithmetic
 372:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // left shift, saturating) or a negative exponent (equivalent to an arithmetic
 373:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // right shift, rounding to nearest).
 374:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <int Exponent, typename IntegerType,
 375:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****           int ExponentSign = (Exponent > 0 ? 1 : Exponent < 0 ? -1 : 0)>
 376:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct ImplSaturatingRoundingMultiplyByPOT {};
 377:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 378:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <int Exponent, typename IntegerType>
 379:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType, 0> {
 380:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType eval(IntegerType x) { return x; }
 381:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 382:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 383:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <int Exponent, typename IntegerType>
 384:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType, 1> {
 385:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType eval(IntegerType x) {
 386:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     using ScalarIntegerType =
 387:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         typename FixedPointRawTypeTraits<IntegerType>::ScalarRawType;
 388:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     const IntegerType min =
 389:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         Dup<IntegerType>(std::numeric_limits<ScalarIntegerType>::min());
 390:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     const IntegerType max =
 391:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         Dup<IntegerType>(std::numeric_limits<ScalarIntegerType>::max());
 392:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     const int ScalarIntegerTypeBits = 8 * sizeof(ScalarIntegerType);
 393:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 394:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     const std::int32_t threshold =
 395:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         ((1 << (ScalarIntegerTypeBits - 1 - Exponent)) - 1);
 396:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     const IntegerType positive_mask =
 397:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         MaskIfGreaterThan(x, Dup<IntegerType>(threshold));
 398:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     const IntegerType negative_mask =
 399:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         MaskIfLessThan(x, Dup<IntegerType>(-threshold));
 400:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 401:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     IntegerType result = ShiftLeft(x, Exponent);
 402:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     result = SelectUsingMask(positive_mask, max, result);
 403:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     result = SelectUsingMask(negative_mask, min, result);
 404:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return result;
 405:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 406:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 407:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 408:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <int Exponent, typename IntegerType>
 409:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType, -1> {
 410:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType eval(IntegerType x) {
 411:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return RoundingDivideByPOT<IntegerType>(x, -Exponent);
 412:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 413:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 414:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 415:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <int Exponent, typename IntegerType>
 416:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingRoundingMultiplyByPOT(IntegerType x) {
 417:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType>::eval(x);
 418:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 419:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 420:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Part 2: the FixedPoint class.
 421:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 422:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // A FixedPoint object represents a fixed-point value stored in the underlying
 423:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // integer type tRawType, if tRawType is a plain scalar integer type.
 424:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Alternatively, tRawType may be a SIMD type (e.g. NEON int32x4_t) in which
 425:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // case a FixedPoint object represents a corresponding SIMD vector of fixed
 426:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // point values.
 427:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 428:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerBits describes the range of the fixed-point format: if
 429:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerBits == m then the range of representable values is the half-open
 430:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // interval [-2^m; 2^m) where the open boundary on the right side means that
 431:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // 2^m is not representable (how close the maximum representable value is to
 432:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // it, depends on bit-depth of tRawType).
 433:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 434:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // In "Q format notation",
 435:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   https://en.wikipedia.org/wiki/Q_(number_format)
 436:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // we are describing the format
 437:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   Qm.n
 438:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // where
 439:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   m = tIntegerBits
 440:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // and
 441:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   n = NumberOfBits(tRawType) - (m + 1)
 442:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Note that the (m + 1) in the above line is because we adopt the convention
 443:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // that we count the integer bits exclusively of the sign bit; so (m + 1) is
 444:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // the total number of integer bits inclusive of the sign bit.
 445:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 446:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Accordingly, the number of integral representable values in our range
 447:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   [-2^m ; 2^m)
 448:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // is equal to 2^(m+1).
 449:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 450:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** class FixedPoint {
 451:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****  public:
 452:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef tRawType RawType;
 453:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 454:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPointRawTypeTraits<RawType> RawTypeTraits;
 455:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef typename RawTypeTraits::ScalarRawType ScalarRawType;
 456:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 457:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kTotalBits = 8 * sizeof(ScalarRawType);
 458:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kIntegerBits = tIntegerBits;
 459:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kFractionalBits = kTotalBits - 1 - kIntegerBits;
 460:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(kIntegerBits >= 0 && kIntegerBits < kTotalBits,
 461:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                 "bad IntegerBits");
 462:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 463:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<ScalarRawType, kIntegerBits> ScalarFixedPointType;
 464:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 465:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static const ScalarRawType ScalarRawMin() {
 466:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return std::numeric_limits<ScalarRawType>::min();
 467:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 468:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 469:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static const ScalarRawType ScalarRawMax() {
 470:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return std::numeric_limits<ScalarRawType>::max();
 471:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 472:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 473:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static const ScalarRawType RawMin() {
 474:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return VectorFromScalar(ScalarRawMin());
 475:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 476:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 477:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static const ScalarRawType RawMax() {
 478:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return VectorFromScalar(ScalarRawMax());
 479:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 480:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 481:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint FromRaw(RawType x) {
 482:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint retval;
 483:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     retval.raw() = x;
 484:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return retval;
 485:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 486:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 487:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint FromScalarRaw(ScalarRawType x) {
 488:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint retval;
 489:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     retval.raw() = Dup<RawType>(x);
 490:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return retval;
 491:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 492:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 493:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint FromScalarFixedPoint(ScalarFixedPointType x) {
 494:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return FromScalarRaw(x.raw());
 495:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 496:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 497:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   template <int Exponent>
 498:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint ConstantPOT() {
 499:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     static constexpr int kOffset = kFractionalBits + Exponent;
 500:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     static_assert(
 501:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         kOffset < 31,
 502:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         "Constant not exactly representable in this fixed-point format");
 503:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return FromScalarRaw(ScalarRawType(1) << kOffset);
 504:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 505:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 506:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint Zero() { return FromScalarRaw(0); }
 507:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 508:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint One() {
 509:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return FromScalarRaw(
 510:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         kIntegerBits == 0
 511:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****             ? ScalarRawMax()
 512:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****             : (ScalarRawType(1) << (kIntegerBits == 0 ? 0 : kFractionalBits)));
 513:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 514:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 515:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static FixedPoint FromDouble(double x) {
 516:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     const double min_bound = static_cast<double>(ScalarRawMin());
 517:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     const double max_bound = static_cast<double>(ScalarRawMax());
 518:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return FromScalarRaw(static_cast<ScalarRawType>(std::min(
 519:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         std::max(round(x * static_cast<double>(1ll << kFractionalBits)),
 520:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                  min_bound),
 521:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         max_bound)));
 522:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 524:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   RawType raw() const { return i_; }
 525:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   RawType& raw() { return i_; }
 526:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 527:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****  private:
 528:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   RawType i_;
 529:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 530:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 531:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Part 3: implementation of arithmetic operators for the
 532:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // FixedPoint class, and a few related functions.
 533:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 534:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // A FixedPoint multiplication is just a
 535:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // SaturatingRoundingDoublingHighMul operation on the underlying
 536:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // raw integer values. The IntegerBits simply add up, as is obvious
 537:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // from the fact that the range is [-2^IntegerBits, 2^IntegerBits).
 538:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits_a, int tIntegerBits_b>
 539:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBits_a + tIntegerBits_b> operator*(
 540:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits_a> a,
 541:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits_b> b) {
 542:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   FixedPoint<tRawType, tIntegerBits_a + tIntegerBits_b> c;
 543:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   c.raw() = SaturatingRoundingDoublingHighMul(a.raw(), b.raw());
 544:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return c;
 545:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 546:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 547:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Tweaking IntegerBits gives exact multiplication by a power of two.
 548:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <int tExponent, typename tRawType, int tIntegerBits>
 549:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tExponent + tIntegerBits> ExactMulByPot(
 550:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 551:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   FixedPoint<tRawType, tExponent + tIntegerBits> c;
 552:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   c.raw() = a.raw();
 553:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return c;
 554:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 555:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 556:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // If we want to leave IntegerBits fixed, then multiplication
 557:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // by a power of two has to be saturating/rounding, not exact anymore.
 558:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <int tExponent, typename tRawType, int tIntegerBits>
 559:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBits> SaturatingRoundingMultiplyByPOT(
 560:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 561:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return FixedPoint<tRawType, tIntegerBits>::FromRaw(
 562:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       SaturatingRoundingMultiplyByPOT<tExponent>(a.raw()));
 563:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 564:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 565:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Generic arithmetic operators.
 566:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 567:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #define MAKE_FIXEDPOINT_UNARY_FUNC(FuncName, ImplFuncName)                     \
 568:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   template <typename tRawType, int tIntegerBits>                               \
 569:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   FixedPoint<tRawType, tIntegerBits> FuncName(                                 \
 570:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       FixedPoint<tRawType, tIntegerBits> a) {                                  \
 571:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return FixedPoint<tRawType, tIntegerBits>::FromRaw(ImplFuncName(a.raw())); \
 572:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 573:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 574:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #define MAKE_FIXEDPOINT_BINARY_FUNC(FuncName, ImplFuncName) \
 575:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   template <typename tRawType, int tIntegerBits>            \
 576:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   FixedPoint<tRawType, tIntegerBits> FuncName(              \
 577:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       FixedPoint<tRawType, tIntegerBits> a,                 \
 578:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       FixedPoint<tRawType, tIntegerBits> b) {               \
 579:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return FixedPoint<tRawType, tIntegerBits>::FromRaw(     \
 580:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         ImplFuncName(a.raw(), b.raw()));                    \
 581:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 582:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 583:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_UNARY_FUNC(operator-, Neg)
 584:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_UNARY_FUNC(operator~, BitNot)
 585:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(operator+, Add)
 586:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(operator-, Sub)
 587:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(operator&, BitAnd)
 588:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(operator^, BitXor)
 589:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(operator|, BitOr)
 590:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC(RoundingHalfSum, RoundingHalfSum)
 591:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 592:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #undef MAKE_FIXEDPOINT_UNARY_FUNC
 593:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #undef MAKE_FIXEDPOINT_BINARY_FUNC
 594:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 595:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #define MAKE_FIXEDPOINT_UNARY_FUNC_RETURNING_RAW(FuncName)  \
 596:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   template <typename tRawType, int tIntegerBits>            \
 597:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   tRawType FuncName(FixedPoint<tRawType, tIntegerBits> a) { \
 598:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return FuncName(a.raw());                               \
 599:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 600:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 601:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #define MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(FuncName) \
 602:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   template <typename tRawType, int tIntegerBits>            \
 603:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   tRawType FuncName(FixedPoint<tRawType, tIntegerBits> a,   \
 604:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                     FixedPoint<tRawType, tIntegerBits> b) { \
 605:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return FuncName(a.raw(), b.raw());                      \
 606:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 607:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 608:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_UNARY_FUNC_RETURNING_RAW(MaskIfZero)
 609:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_UNARY_FUNC_RETURNING_RAW(MaskIfNonZero)
 610:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfEqual)
 611:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfNotEqual)
 612:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfGreaterThan)
 613:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfGreaterThanOrEqual)
 614:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfLessThan)
 615:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW(MaskIfLessThanOrEqual)
 616:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 617:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #undef MAKE_FIXEDPOINT_UNARY_FUNC_RETURNING_RAW
 618:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #undef MAKE_FIXEDPOINT_BINARY_FUNC_RETURNING_RAW
 619:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 620:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 621:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBits> SelectUsingMask(
 622:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     tRawType if_mask, FixedPoint<tRawType, tIntegerBits> then_val,
 623:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> else_val) {
 624:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return FixedPoint<tRawType, tIntegerBits>::FromRaw(
 625:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       SelectUsingMask(if_mask, then_val.raw(), else_val.raw()));
 626:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 627:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 628:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 629:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** bool operator==(FixedPoint<tRawType, tIntegerBits> a,
 630:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                 FixedPoint<tRawType, tIntegerBits> b) {
 631:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return All(MaskIfEqual(a.raw(), b.raw()));
 632:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 633:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 634:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 635:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** bool operator!=(FixedPoint<tRawType, tIntegerBits> a,
 636:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                 FixedPoint<tRawType, tIntegerBits> b) {
 637:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return !(a == b);
 638:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 639:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 640:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 641:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBits> SaturatingAdd(
 642:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a,
 643:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> b) {
 644:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return FixedPoint<tRawType, tIntegerBits>::FromRaw(
 645:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       SaturatingAdd(a.raw(), b.raw()));
 646:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 647:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 648:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 649:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBits> AddSaturatingIf16Bit(
 650:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a,
 651:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> b) {
 652:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return FixedPoint<tRawType, tIntegerBits>::FromRaw(
 653:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       AddSaturatingIf16Bit(a.raw(), b.raw()));
 654:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 655:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 656:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Conversion to floating-point.
 657:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 658:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** double ToDouble(FixedPoint<tRawType, tIntegerBits> x) {
 659:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(FixedPointRawTypeTraits<tRawType>::kLanes == 1,
 660:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                 "not applicable to SIMD types");
 661:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, tIntegerBits> F;
 662:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return x.raw() / static_cast<double>(1ll << F::kFractionalBits);
 663:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 664:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 665:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Rescale changes the number of IntegerBits and updates the underlying
 666:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // raw integer value accordingly.
 667:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <int tIntegerBitsDst, typename tRawType, int tIntegerBitsSrc>
 668:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, tIntegerBitsDst> Rescale(
 669:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBitsSrc> x) {
 670:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kExponent = tIntegerBitsSrc - tIntegerBitsDst;
 671:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   FixedPoint<tRawType, tIntegerBitsDst> result;
 672:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   result.raw() = SaturatingRoundingMultiplyByPOT<kExponent>(x.raw());
 673:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return result;
 674:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 675:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 676:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // CheckedFixedPointConstant allows to specify fixed-point constants
 677:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // initialized as real numbers, in a way that does not compile floating-point
 678:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // arithmetic in production code, yet still checks agreement with the
 679:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // floating-point expressions when asserts are enabled.
 680:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 681:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The raw integer value provided is always a int32, encoding a 32-bit
 682:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // fixed-point value, regardless of the actual Scalar type. This allows
 683:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // writing generic code that applies just as well to the 32-bit and 16-bit
 684:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // cases. In the 16-bit case, the raw integer value is internally
 685:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // rounding-shifted by 16 bits to the right.
 686:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename FixedPointType>
 687:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline typename FixedPointType::ScalarRawType RescaleConstantInitializer(
 688:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     std::int32_t int32_value) {
 689:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef typename FixedPointType::ScalarRawType ScalarRawType;
 690:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int ScalarTypeBits = 8 * sizeof(ScalarRawType);
 691:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<ScalarRawType>(
 692:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       RoundingDivideByPOT<std::int32_t>(int32_value, 32 - ScalarTypeBits));
 693:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 694:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #ifdef GEMMLOWP_ENABLE_FIXEDPOINT_CONSTANTS_CHECKS
 695:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename FixedPointType>
 696:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPointType CheckedFixedPointConstant(std::int32_t raw_value,
 697:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                          double double_value) {
 698:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const FixedPointType result = FixedPointType::FromScalarRaw(raw_value);
 699:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(result == FixedPointType::FromDouble(double_value));
 700:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return result;
 701:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 702:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(FixedPointType,                   \
 703:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                              ScalarRawInt32Value, DoubleValue) \
 704:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (gemmlowp::CheckedFixedPointConstant<FixedPointType>(                        \
 705:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       gemmlowp::RescaleConstantInitializer<FixedPointType>(                    \
 706:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****           ScalarRawInt32Value),                                                \
 707:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       DoubleValue))
 708:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 709:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #else
 710:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(FixedPointType,                   \
 711:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                              ScalarRawInt32Value, DoubleValue) \
 712:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (FixedPointType::FromScalarRaw(                                              \
 713:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       gemmlowp::RescaleConstantInitializer<FixedPointType>(                    \
 714:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****           ScalarRawInt32Value)))
 715:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #endif
 716:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 717:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Implementation of exponential function.
 718:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 719:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns exp(x) for x in [-1/4, 0).
 720:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
 721:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, 0> exp_on_interval_between_negative_one_quarter_and_0_excl(
 722:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, 0> a) {
 723:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, 0> F;
 724:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const F constant_term =
 725:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(F, 1895147668, std::exp(-1.0 / 8.0));
 726:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const F constant_1_over_3 =
 727:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(F, 715827883, 1.0 / 3.0);
 728:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   // We're evaluating a Taylor expansion around -1/8, so we do the change of
 729:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   // variable: x = a + 1/8.
 730:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   // In fixed-point with 0 integer bits, 1/8 is represented by 1 << 28.
 731:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   F x = a + F::template ConstantPOT<-3>();
 732:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   F x2 = x * x;
 733:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   F x3 = x2 * x;
 734:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   F x4 = x2 * x2;
 735:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   F x4_over_4 = SaturatingRoundingMultiplyByPOT<-2>(x4);
 736:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   F x4_over_24_plus_x3_over_6_plus_x2_over_2 =
 737:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       SaturatingRoundingMultiplyByPOT<-1>(
 738:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****           ((x4_over_4 + x3) * constant_1_over_3) + x2);
 739:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return AddSaturatingIf16Bit(
 740:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       constant_term,
 741:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       constant_term * (x + x4_over_24_plus_x3_over_6_plus_x2_over_2));
 742:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 743:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 744:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns exp(x) for x < 0.
 745:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 746:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, 0> exp_on_negative_values(
 747:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 748:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, tIntegerBits> InputF;
 749:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, 0> ResultF;
 750:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kFractionalBits = InputF::kFractionalBits;
 751:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kIntegerBits = InputF::kIntegerBits;
 752:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const InputF kOneQuarter = InputF::template ConstantPOT<-2>();
 753:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   InputF mask = kOneQuarter - InputF::FromScalarRaw(1);
 754:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   InputF a_mod_quarter_minus_one_quarter = (a & mask) - kOneQuarter;
 755:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   ResultF result = exp_on_interval_between_negative_one_quarter_and_0_excl(
 756:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       Rescale<0>(a_mod_quarter_minus_one_quarter));
 757:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   tRawType remainder = (a_mod_quarter_minus_one_quarter - a).raw();
 758:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 759:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_EXP_BARREL_SHIFTER(Exponent, FixedPointMultiplier)         \
 760:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   if (kIntegerBits > Exponent) {                                            \
 761:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     const ResultF kMultiplier = GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(       \
 762:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         ResultF, FixedPointMultiplier, std::exp(-std::pow(2.0, Exponent))); \
 763:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     static constexpr int kShiftAmount =                                     \
 764:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         kIntegerBits > Exponent ? kFractionalBits + Exponent : 0;           \
 765:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     result = SelectUsingMask(                                               \
 766:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         MaskIfNonZero(BitAnd(remainder, Dup<tRawType>(1 << kShiftAmount))), \
 767:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         result * kMultiplier, result);                                      \
 768:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 769:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 770:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(-2, 1672461947);
 771:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(-1, 1302514674);
 772:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(+0, 790015084);
 773:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(+1, 290630308);
 774:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(+2, 39332535);
 775:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(+3, 720401);
 776:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   GEMMLOWP_EXP_BARREL_SHIFTER(+4, 242);
 777:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 778:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #undef GEMMLOWP_EXP_BARREL_SHIFTER
 779:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 780:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int clampB = kIntegerBits > 5 ? 36 - kIntegerBits : 0;
 781:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   if (kIntegerBits > 5) {
 782:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     const InputF clamp =
 783:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(InputF, -(1 << clampB), -32.0);
 784:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     result = SelectUsingMask(MaskIfLessThan(a, clamp), ResultF::Zero(), result);
 785:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 786:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 787:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   result = SelectUsingMask(MaskIfZero(a), ResultF::One(), result);
 788:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return result;
 789:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 790:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 791:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Implementation of tanh: (1 - exp(-2x)) / (1 + exp(-2x)).
 792:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 793:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns (1 - x) / (1 + x) for x in (0, 1).
 794:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
 795:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, 0> one_minus_x_over_one_plus_x_for_x_in_0_1(
 796:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, 0> a) {
 797:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, 0> F0;
 798:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, 2> F2;
 799:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   F0 half_denominator = RoundingHalfSum(a, F0::One());
 800:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   // Newton-Raphson division
 801:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   // https://en.wikipedia.org/wiki/Division_algorithm#Newton.E2.80.93Raphson_division
 802:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   // Refer to that page for the logic behind the 48/17 and 32/17 constants.
 803:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const F2 constant_48_over_17 =
 804:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(F2, 1515870810, 48.0 / 17.0);
 805:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const F2 constant_neg_32_over_17 =
 806:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(F2, -1010580540, -32.0 / 17.0);
 807:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   F2 x = constant_48_over_17 + half_denominator * constant_neg_32_over_17;
 808:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   for (int i = 0; i < 3; i++) {
 809:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     F2 half_denominator_times_x = half_denominator * x;
 810:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     F2 one_minus_half_denominator_times_x =
 811:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         F2::One() - half_denominator_times_x;
 812:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     x = x + Rescale<2>(x * one_minus_half_denominator_times_x);
 813:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 814:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return Rescale<0>(x - F2::One());
 815:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 816:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 817:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns -tanh(x) for x < 0.
 818:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 819:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, 0> neg_tanh_on_negative_values(
 820:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 821:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return one_minus_x_over_one_plus_x_for_x_in_0_1(
 822:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       exp_on_negative_values(ExactMulByPot<1>(a)));
 823:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 824:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 825:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns tanh(x) for any x.
 826:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 827:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, 0> tanh(FixedPoint<tRawType, tIntegerBits> a) {
 828:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, tIntegerBits> InputF;
 829:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, 0> ResultF;
 830:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   tRawType mask_if_negative = MaskIfLessThan(a, InputF::Zero());
 831:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   tRawType mask_if_zero = MaskIfZero(a);
 832:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   InputF n = SelectUsingMask(mask_if_negative, a, -a);
 833:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   ResultF t = neg_tanh_on_negative_values(n);
 834:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return SelectUsingMask(mask_if_zero, ResultF::Zero(),
 835:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                          SelectUsingMask(mask_if_negative, -t, t));
 836:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 837:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 838:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Implementation of logistic function.
 839:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 840:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns 1 / (1 + x) for x in (0, 1).
 841:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
 842:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, 0> one_over_one_plus_x_for_x_in_0_1(
 399              		.loc 3 842 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              	.LVL43:
 404              	.LBB1222:
 405              	.LBB1223:
 406              	.LBB1224:
 240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 407              		.loc 3 240 0
 408 0000 020150E3 		cmp	r0, #-2147483648
 409              	.LBE1224:
 410              	.LBE1223:
 411              	.LBE1222:
 412              		.loc 3 842 0
 413 0004 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 414              		.cfi_def_cfa_offset 28
 415              		.cfi_offset 4, -28
 416              		.cfi_offset 5, -24
 417              		.cfi_offset 6, -20
 418              		.cfi_offset 7, -16
 419              		.cfi_offset 8, -12
 420              		.cfi_offset 9, -8
 421              		.cfi_offset 14, -4
 422              	.LBB1235:
 423              	.LBB1230:
 424              	.LBB1225:
 240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 425              		.loc 3 240 0
 426 0008 1C01000A 		beq	.L48
 427              	.LVL44:
 428 000c C01FA0E1 		asr	r1, r0, #31
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 429              		.loc 3 241 0
 430 0010 020190E2 		adds	r0, r0, #-2147483648
 431              	.LVL45:
 432              	.LBE1225:
 433              	.LBE1230:
 434              	.LBE1235:
 435              	.LBB1236:
 436              	.LBB1237:
 437              	.LBB1238:
 438              	.LBB1239:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 439              		.loc 3 334 0
 440 0014 C4330CE3 		movw	r3, #50116
 441              	.LBE1239:
 442              	.LBE1238:
 443              	.LBE1237:
 444              	.LBE1236:
 445              	.LBB1249:
 446              	.LBB1231:
 447              	.LBB1226:
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 448              		.loc 3 241 0
 449 0018 0010A1E2 		adc	r1, r1, #0
 450              	.LBE1226:
 451              	.LBE1231:
 452              	.LBE1249:
 453              	.LBB1250:
 454              	.LBB1246:
 455              	.LBB1243:
 456              	.LBB1240:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 457              		.loc 3 334 0
 458 001c C3334CE3 		movt	r3, 50115
 459              	.LBE1240:
 460              	.LBE1243:
 461              	.LBE1246:
 462              	.LBE1250:
 463              	.LBB1251:
 464              	.LBB1232:
 465              	.LBB1227:
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 466              		.loc 3 241 0
 467 0020 C110B0E1 		movs	r1, r1, asr #1
 468 0024 6000A0E1 		mov	r0, r0, rrx
 469              	.LVL46:
 470              	.LBE1227:
 471              	.LBE1232:
 472              	.LBE1251:
 473              	.LBB1252:
 474              	.LBB1253:
 475              	.LBB1254:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 476              		.loc 3 95 0
 477 0028 5ACA05E3 		movw	ip, #23130
 478              	.LBE1254:
 479              	.LBE1253:
 480              	.LBE1252:
 481              	.LBB1263:
 482              	.LBB1247:
 483              	.LBB1244:
 484              	.LBB1241:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 485              		.loc 3 334 0
 486 002c 002060E2 		rsb	r2, r0, #0
 487 0030 904385E0 		umull	r4, r5, r0, r3
 488              	.LBE1241:
 489              	.LBE1244:
 490              	.LBE1247:
 491              	.LBE1263:
 492              	.LBB1264:
 493              	.LBB1259:
 494              	.LBB1255:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 495              		.loc 3 95 0
 496 0034 5ACA45E3 		movt	ip, 23130
 497              	.LBE1255:
 498              	.LBE1259:
 499              	.LBE1264:
 500              	.LBB1265:
 501              	.LBB1248:
 502              	.LBB1245:
 503              	.LBB1242:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 504              		.loc 3 334 0
 505 0038 932123E0 		mla	r3, r3, r1, r2
 506 003c 055083E0 		add	r5, r3, r5
 507              	.LVL47:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 508              		.loc 3 335 0
 509 0040 053094E1 		orrs	r3, r4, r5
 510 0044 0121A003 		moveq	r2, #1073741824
 511 0048 0721A013 		movne	r2, #-1073741823
 512 004c 0030A003 		moveq	r3, #0
 513 0050 0030E013 		mvnne	r3, #0
 514              	.LVL48:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 515              		.loc 3 337 0
 516 0054 024094E0 		adds	r4, r4, r2
 517              	.LVL49:
 518 0058 0350A5E0 		adc	r5, r5, r3
 519 005c 0030A0E3 		mov	r3, #0
 520 0060 C52FA0E1 		asr	r2, r5, #31
 521 0064 0221C2E3 		bic	r2, r2, #-2147483648
 522 0068 042092E0 		adds	r2, r2, r4
 523 006c A22FA0E1 		lsr	r2, r2, #31
 524 0070 0530A3E0 		adc	r3, r3, r5
 525 0074 832082E1 		orr	r2, r2, r3, lsl #1
 526              	.LBE1242:
 527              	.LBE1245:
 528              	.LBE1248:
 529              	.LBE1265:
 530              	.LBB1266:
 531              	.LBB1260:
 532              	.LBB1256:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 533              		.loc 3 95 0
 534 0078 02C08CE0 		add	ip, ip, r2
 535              	.LVL50:
 536              	.LBE1256:
 537              	.LBE1260:
 538              	.LBE1266:
 539              	.LBB1267:
 540              	.LBB1268:
 541              	.LBB1269:
 542              	.LBB1270:
 543              	.LBB1271:
 544              	.LBB1272:
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 545              		.loc 3 333 0
 546 007c CC5FA0E1 		asr	r5, ip, #31
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 547              		.loc 3 334 0
 548 0080 902C83E0 		umull	r2, r3, r0, ip
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 549              		.loc 3 333 0
 550 0084 0C40A0E1 		mov	r4, ip
 551              	.LVL51:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 552              		.loc 3 334 0
 553 0088 90050EE0 		mul	lr, r0, r5
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 554              		.loc 3 335 0
 555 008c 000052E3 		cmp	r2, #0
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 556              		.loc 3 334 0
 557 0090 9CE12EE0 		mla	lr, ip, r1, lr
 558 0094 03308EE0 		add	r3, lr, r3
 559              	.LVL52:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 560              		.loc 3 335 0
 561 0098 00E0D3E2 		sbcs	lr, r3, #0
 562 009c 0161A0A3 		movge	r6, #1073741824
 563 00a0 0070A0A3 		movge	r7, #0
 564 00a4 FE0000BA 		blt	.L27
 565              	.LVL53:
 566              	.L29:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 567              		.loc 3 337 0
 568 00a8 026096E0 		adds	r6, r6, r2
 569              	.LVL54:
 570 00ac 0370A7E0 		adc	r7, r7, r3
 571 00b0 0030A0E3 		mov	r3, #0
 572 00b4 C72FA0E1 		asr	r2, r7, #31
 573 00b8 0221C2E3 		bic	r2, r2, #-2147483648
 574 00bc 062092E0 		adds	r2, r2, r6
 575 00c0 A22FA0E1 		lsr	r2, r2, #31
 576 00c4 0730A3E0 		adc	r3, r3, r7
 577 00c8 832082E1 		orr	r2, r2, r3, lsl #1
 578              	.LBE1272:
 579              	.LBE1271:
 580              	.LBE1270:
 581              	.LBE1269:
 582              	.LBB1288:
 583              	.LBB1289:
 584              	.LBB1290:
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 585              		.loc 3 106 0
 586 00cc 022262E2 		rsb	r2, r2, #536870912
 587              	.LBE1290:
 588              	.LBE1289:
 589              	.LBE1288:
 590              	.LBB1295:
 591              	.LBB1296:
 592              	.LBB1297:
 593              	.LBB1298:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 594              		.loc 3 334 0
 595 00d0 92050EE0 		mul	lr, r2, r5
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 596              		.loc 3 333 0
 597 00d4 C27FA0E1 		asr	r7, r2, #31
 598 00d8 0260A0E1 		mov	r6, r2
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 599              		.loc 3 334 0
 600 00dc 922483E0 		umull	r2, r3, r2, r4
 601              	.LBE1298:
 602              	.LBE1297:
 603              	.LBE1296:
 604              	.LBE1295:
 605              	.LBB1314:
 606              	.LBB1315:
 607              	.LBB1316:
 608              	.LBB1317:
 609              	.LBB1318:
 610              	.LBB1319:
 611              	.LBB1320:
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 612              		.loc 3 131 0
 613 00e0 0050E0E3 		mvn	r5, #0
 614              	.LBE1320:
 615              	.LBE1319:
 616              	.LBE1318:
 617              	.LBE1317:
 618              	.LBE1316:
 619              	.LBE1315:
 620              	.LBE1314:
 621              	.LBB1362:
 622              	.LBB1309:
 623              	.LBB1304:
 624              	.LBB1299:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 625              		.loc 3 334 0
 626 00e4 94E724E0 		mla	r4, r4, r7, lr
 627              	.LVL55:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 628              		.loc 3 335 0
 629 00e8 000052E3 		cmp	r2, #0
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 630              		.loc 3 334 0
 631 00ec 033084E0 		add	r3, r4, r3
 632              	.LVL56:
 633              	.LBE1299:
 634              	.LBE1304:
 635              	.LBE1309:
 636              	.LBE1362:
 637              	.LBB1363:
 638              	.LBB1358:
 639              	.LBB1354:
 640              	.LBB1350:
 641              	.LBB1346:
 642              	.LBB1326:
 643              	.LBB1321:
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 644              		.loc 3 131 0
 645 00f0 0241A0E3 		mov	r4, #-2147483648
 646              	.LBE1321:
 647              	.LBE1326:
 648              	.LBE1346:
 649              	.LBE1350:
 650              	.LBE1354:
 651              	.LBE1358:
 652              	.LBE1363:
 653              	.LBB1364:
 654              	.LBB1310:
 655              	.LBB1305:
 656              	.LBB1300:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 657              		.loc 3 335 0
 658 00f4 00E0D3E2 		sbcs	lr, r3, #0
 659 00f8 0161A0A3 		movge	r6, #1073741824
 660 00fc 0761A0B3 		movlt	r6, #-1073741823
 661 0100 0070A0A3 		movge	r7, #0
 662 0104 0070E0B3 		mvnlt	r7, #0
 663              	.LVL57:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 664              		.loc 3 337 0
 665 0108 026096E0 		adds	r6, r6, r2
 666              	.LVL58:
 667 010c 0370A7E0 		adc	r7, r7, r3
 668 0110 0030A0E3 		mov	r3, #0
 669 0114 C72FA0E1 		asr	r2, r7, #31
 670              	.LVL59:
 671 0118 0221C2E3 		bic	r2, r2, #-2147483648
 672 011c 062092E0 		adds	r2, r2, r6
 673 0120 A22FA0E1 		lsr	r2, r2, #31
 674 0124 0730A3E0 		adc	r3, r3, r7
 675 0128 832082E1 		orr	r2, r2, r3, lsl #1
 676 012c C33FA0E1 		asr	r3, r3, #31
 677              	.LVL60:
 678              	.LBE1300:
 679              	.LBE1305:
 680              	.LBE1310:
 681              	.LBE1364:
 682              	.LBB1365:
 683              	.LBB1359:
 684              	.LBB1355:
 685              	.LBB1351:
 686              	.LBB1347:
 687              	.LBB1327:
 688              	.LBB1322:
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 689              		.loc 3 127 0
 690 0130 0371A0E1 		lsl	r7, r3, #2
 691 0134 0261A0E1 		lsl	r6, r2, #2
 692 0138 227F87E1 		orr	r7, r7, r2, lsr #30
 693              	.LBE1322:
 694              	.LBE1327:
 695              	.LBB1328:
 696              	.LBB1329:
 697              	.LBB1330:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 698              		.loc 3 158 0
 699 013c 1E0252E3 		cmp	r2, #-536870911
 700 0140 0020A0A3 		movge	r2, #0
 701 0144 0120A0B3 		movlt	r2, #1
 702              	.LBE1330:
 703              	.LBE1329:
 704              	.LBE1328:
 705              	.LBB1335:
 706              	.LBB1323:
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 707              		.loc 3 131 0
 708 0148 040056E1 		cmp	r6, r4
 709 014c 0530D7E0 		sbcs	r3, r7, r5
 710              	.LBE1323:
 711              	.LBE1335:
 712              	.LBB1336:
 713              	.LBB1333:
 714              	.LBB1331:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 715              		.loc 3 158 0
 716 0150 003062E2 		rsb	r3, r2, #0
 717 0154 012042E2 		sub	r2, r2, #1
 718              	.LVL61:
 719 0158 02E103E2 		and	lr, r3, #-2147483648
 720 015c 062002A0 		andge	r2, r2, r6
 721 0160 023023B0 		eorlt	r3, r3, r2
 722 0164 0E3022A0 		eorge	r3, r2, lr
 723 0168 023103B2 		andlt	r3, r3, #-2147483648
 724              	.LBE1331:
 725              	.LBE1333:
 726              	.LBE1336:
 727              	.LBE1347:
 728              	.LBE1351:
 729              	.LBE1355:
 730              	.LBE1359:
 731              	.LBE1365:
 732              	.LBB1366:
 733              	.LBB1367:
 734              	.LBB1368:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 735              		.loc 3 95 0
 736 016c 0C3083E0 		add	r3, r3, ip
 737              	.LVL62:
 738              	.LBE1368:
 739              	.LBE1367:
 740              	.LBE1366:
 741              	.LBB1373:
 742              	.LBB1283:
 743              	.LBB1278:
 744              	.LBB1273:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 745              		.loc 3 334 0
 746 0170 930102E0 		mul	r2, r3, r1
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 747              		.loc 3 333 0
 748 0174 C37FA0E1 		asr	r7, r3, #31
 749 0178 0360A0E1 		mov	r6, r3
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 750              		.loc 3 334 0
 751 017c 934085E0 		umull	r4, r5, r3, r0
 752 0180 902722E0 		mla	r2, r0, r7, r2
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 753              		.loc 3 335 0
 754 0184 000054E3 		cmp	r4, #0
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 755              		.loc 3 334 0
 756 0188 055082E0 		add	r5, r2, r5
 757              	.LVL63:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 758              		.loc 3 335 0
 759 018c 0020D5E2 		sbcs	r2, r5, #0
 760 0190 0161A0A3 		movge	r6, #1073741824
 761 0194 0761A0B3 		movlt	r6, #-1073741823
 762 0198 0070A0A3 		movge	r7, #0
 763 019c 0070E0B3 		mvnlt	r7, #0
 764              	.LVL64:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 765              		.loc 3 337 0
 766 01a0 046096E0 		adds	r6, r6, r4
 767              	.LVL65:
 768 01a4 0570A7E0 		adc	r7, r7, r5
 769 01a8 0050A0E3 		mov	r5, #0
 770 01ac C74FA0E1 		asr	r4, r7, #31
 771 01b0 0241C4E3 		bic	r4, r4, #-2147483648
 772 01b4 064094E0 		adds	r4, r4, r6
 773 01b8 A44FA0E1 		lsr	r4, r4, #31
 774 01bc 0750A5E0 		adc	r5, r5, r7
 775 01c0 854084E1 		orr	r4, r4, r5, lsl #1
 776              	.LBE1273:
 777              	.LBE1278:
 778              	.LBE1283:
 779              	.LBE1373:
 780              	.LBB1374:
 781              	.LBB1293:
 782              	.LBB1291:
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 783              		.loc 3 106 0
 784 01c4 024264E2 		rsb	r4, r4, #536870912
 785              	.LVL66:
 786              	.LBE1291:
 787              	.LBE1293:
 788              	.LBE1374:
 789              	.LBB1375:
 790              	.LBB1311:
 791              	.LBB1306:
 792              	.LBB1301:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 793              		.loc 3 334 0
 794 01c8 9463C7E0 		smull	r6, r7, r4, r3
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 795              		.loc 3 331 0
 796 01cc 020153E3 		cmp	r3, #-2147483648
 797 01d0 03005401 		cmpeq	r4, r3
 798 01d4 0140A003 		moveq	r4, #1
 799              	.LVL67:
 800 01d8 0040A013 		movne	r4, #0
 801              	.LVL68:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 802              		.loc 3 335 0
 803 01dc 000056E3 		cmp	r6, #0
 804 01e0 0020D7E2 		sbcs	r2, r7, #0
 805 01e4 0181A0A3 		movge	r8, #1073741824
 806 01e8 0090A0A3 		movge	r9, #0
 807 01ec 0781A0B3 		movlt	r8, #-1073741823
 808 01f0 0090E0B3 		mvnlt	r9, #0
 809              	.LVL69:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 810              		.loc 3 338 0
 811 01f4 000054E3 		cmp	r4, #0
 812 01f8 0241E013 		mvnne	r4, #-2147483648
 813              	.LVL70:
 814 01fc 2000001A 		bne	.L35
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 815              		.loc 3 337 0
 816 0200 068098E0 		adds	r8, r8, r6
 817              	.LVL71:
 818 0204 0790A9E0 		adc	r9, r9, r7
 819 0208 0070A0E3 		mov	r7, #0
 820 020c C96FA0E1 		asr	r6, r9, #31
 821              	.LVL72:
 822 0210 0261C6E3 		bic	r6, r6, #-2147483648
 823 0214 086096E0 		adds	r6, r6, r8
 824 0218 A66FA0E1 		lsr	r6, r6, #31
 825 021c 0970A7E0 		adc	r7, r7, r9
 826 0220 876086E1 		orr	r6, r6, r7, lsl #1
 827              	.LVL73:
 828              	.LBE1301:
 829              	.LBE1306:
 830              	.LBE1311:
 831              	.LBE1375:
 832              	.LBB1376:
 833              	.LBB1360:
 834              	.LBB1356:
 835              	.LBB1352:
 836              	.LBB1348:
 837              	.LBB1337:
 838              	.LBB1338:
 839              	.LBB1339:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 840              		.loc 3 158 0
 841 0224 1E0276E3 		cmn	r6, #-536870911
 842 0228 8A0000DA 		ble	.L36
 843 022c 02C1E0E3 		mvn	ip, #-2147483648
 844              	.LVL74:
 845 0230 0420A0E1 		mov	r2, r4
 846 0234 0C50A0E1 		mov	r5, ip
 847 0238 00E0E0E3 		mvn	lr, #0
 848              	.L39:
 849              	.LVL75:
 850              	.LBE1339:
 851              	.LBE1338:
 852              	.LBE1337:
 853              	.LBB1342:
 854              	.LBB1324:
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 855              		.loc 3 127 0
 856 023c 906B80EE 		vdup.32	d16, r6
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 857              		.loc 3 131 0
 858 0240 0261A0E3 		mov	r6, #-2147483648
 859              	.LVL76:
 860 0244 0070E0E3 		mvn	r7, #0
 861              	.LVL77:
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 862              		.loc 3 127 0
 863 0248 B000E0F2 		vshr.s64	d16, d16, #32
 864 024c B015C2F2 		vshl.u64	d17, d16, #2
 865 0250 318B59EC 		vmov	r8, r9, d17	@ int
 866              	.LVL78:
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 867              		.loc 3 131 0
 868 0254 060058E1 		cmp	r8, r6
 869 0258 0760D9E0 		sbcs	r6, r9, r7
 870 025c 0E400CB0 		andlt	r4, ip, lr
 871 0260 024024B0 		eorlt	r4, r4, r2
 872 0264 060000BA 		blt	.L35
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 873              		.loc 3 132 0
 874 0268 020158E3 		cmp	r8, #-2147483648
 875 026c 00C0D9E2 		sbcs	ip, r9, #0
 876 0270 08C004B0 		andlt	ip, r4, r8
 877 0274 0241CEA3 		bicge	r4, lr, #-2147483648
 878 0278 05402CB0 		eorlt	r4, ip, r5
 879 027c 0E4004B0 		andlt	r4, r4, lr
 880 0280 024024E0 		eor	r4, r4, r2
 881              	.LVL79:
 882              	.L35:
 883              	.LBE1324:
 884              	.LBE1342:
 885              	.LBE1348:
 886              	.LBE1352:
 887              	.LBE1356:
 888              	.LBE1360:
 889              	.LBE1376:
 890              	.LBB1377:
 891              	.LBB1371:
 892              	.LBB1369:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 893              		.loc 3 95 0
 894 0284 033084E0 		add	r3, r4, r3
 895              	.LVL80:
 896              	.LBE1369:
 897              	.LBE1371:
 898              	.LBE1377:
 899              	.LBB1378:
 900              	.LBB1284:
 901              	.LBB1279:
 902              	.LBB1274:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 903              		.loc 3 334 0
 904 0288 930102E0 		mul	r2, r3, r1
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 905              		.loc 3 333 0
 906 028c C37FA0E1 		asr	r7, r3, #31
 907 0290 0360A0E1 		mov	r6, r3
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 908              		.loc 3 334 0
 909 0294 934085E0 		umull	r4, r5, r3, r0
 910 0298 902720E0 		mla	r0, r0, r7, r2
 911              	.LVL81:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 912              		.loc 3 335 0
 913 029c 000054E3 		cmp	r4, #0
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 914              		.loc 3 334 0
 915 02a0 055080E0 		add	r5, r0, r5
 916              	.LVL82:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 917              		.loc 3 335 0
 918 02a4 0020D5E2 		sbcs	r2, r5, #0
 919 02a8 0101A0A3 		movge	r0, #1073741824
 920 02ac 0701A0B3 		movlt	r0, #-1073741823
 921 02b0 0010A0A3 		movge	r1, #0
 922 02b4 0010E0B3 		mvnlt	r1, #0
 923              	.LVL83:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 924              		.loc 3 337 0
 925 02b8 004094E0 		adds	r4, r4, r0
 926              	.LVL84:
 927 02bc 0150A5E0 		adc	r5, r5, r1
 928 02c0 0010A0E3 		mov	r1, #0
 929 02c4 C50FA0E1 		asr	r0, r5, #31
 930 02c8 0201C0E3 		bic	r0, r0, #-2147483648
 931 02cc 040090E0 		adds	r0, r0, r4
 932 02d0 A00FA0E1 		lsr	r0, r0, #31
 933 02d4 0510A1E0 		adc	r1, r1, r5
 934 02d8 810080E1 		orr	r0, r0, r1, lsl #1
 935 02dc C11FA0E1 		asr	r1, r1, #31
 936              	.LBE1274:
 937              	.LBE1279:
 938              	.LBE1284:
 939              	.LBE1378:
 940              	.LBB1379:
 941              	.LBB1294:
 942              	.LBB1292:
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 943              		.loc 3 106 0
 944 02e0 020260E2 		rsb	r0, r0, #536870912
 945              	.LVL85:
 946              	.LBE1292:
 947              	.LBE1294:
 948              	.LBE1379:
 949              	.LBB1380:
 950              	.LBB1312:
 951              	.LBB1307:
 952              	.LBB1302:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 953              		.loc 3 334 0
 954 02e4 9043C5E0 		smull	r4, r5, r0, r3
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 955              		.loc 3 331 0
 956 02e8 030050E1 		cmp	r0, r3
 957 02ec 02015303 		cmpeq	r3, #-2147483648
 958 02f0 0100A003 		moveq	r0, #1
 959              	.LVL86:
 960 02f4 0000A013 		movne	r0, #0
 961              	.LVL87:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 962              		.loc 3 335 0
 963 02f8 000054E3 		cmp	r4, #0
 964 02fc 0020D5E2 		sbcs	r2, r5, #0
 965 0300 0161A0A3 		movge	r6, #1073741824
 966 0304 0070A0A3 		movge	r7, #0
 967 0308 0761A0B3 		movlt	r6, #-1073741823
 968 030c 0070E0B3 		mvnlt	r7, #0
 969              	.LVL88:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 970              		.loc 3 338 0
 971 0310 000050E3 		cmp	r0, #0
 972 0314 0221E013 		mvnne	r2, #-2147483648
 973 0318 2200000A 		beq	.L62
 974              	.LVL89:
 975              	.L42:
 976              	.LBE1302:
 977              	.LBE1307:
 978              	.LBE1312:
 979              	.LBE1380:
 980              	.LBB1381:
 981              	.LBB1372:
 982              	.LBB1370:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 983              		.loc 3 95 0
 984 031c 023083E0 		add	r3, r3, r2
 985              	.LVL90:
 986              	.LBE1370:
 987              	.LBE1372:
 988              	.LBE1381:
 989              	.LBE1268:
 990              	.LBE1267:
 991              	.LBB1390:
 992              	.LBB1391:
 993              	.LBB1392:
 994              	.LBB1393:
 995              	.LBB1394:
 996              	.LBB1395:
 997              	.LBB1396:
 998              	.LBB1397:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 999              		.loc 3 158 0
 1000 0320 070173E3 		cmn	r3, #-1073741823
 1001 0324 190000CA 		bgt	.L59
 1002              	.LVL91:
 1003              	.LBE1397:
 1004              	.LBE1396:
 1005              	.LBE1395:
 1006              	.LBB1400:
 1007              	.LBB1401:
 1008              	.LBB1402:
 1009 0328 070153E3 		cmp	r3, #-1073741823
 1010 032c 02C1A0E3 		mov	ip, #-2147483648
 1011 0330 0010A0A3 		movge	r1, #0
 1012 0334 0110A0B3 		movlt	r1, #1
 1013 0338 000061E2 		rsb	r0, r1, #0
 1014 033c 00E0E0E3 		mvn	lr, #0
 1015 0340 011041E2 		sub	r1, r1, #1
 1016 0344 0C0000E0 		and	r0, r0, ip
 1017 0348 0060A0E3 		mov	r6, #0
 1018              	.LVL92:
 1019              	.L46:
 1020              	.LBE1402:
 1021              	.LBE1401:
 1022              	.LBE1400:
 1023              	.LBB1403:
 1024              	.LBB1404:
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 1025              		.loc 3 127 0
 1026 034c 0320A0E1 		mov	r2, r3
 1027 0350 C33FA0E1 		asr	r3, r3, #31
 1028              	.LVL93:
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1029              		.loc 3 131 0
 1030 0354 0241A0E3 		mov	r4, #-2147483648
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 1031              		.loc 3 127 0
 1032 0358 022092E0 		adds	r2, r2, r2
 1033              	.LVL94:
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1034              		.loc 3 131 0
 1035 035c 0050E0E3 		mvn	r5, #0
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 1036              		.loc 3 127 0
 1037 0360 0330A3E0 		adc	r3, r3, r3
 1038              	.LVL95:
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1039              		.loc 3 131 0
 1040 0364 040052E1 		cmp	r2, r4
 1041 0368 0540D3E0 		sbcs	r4, r3, r5
 1042 036c 040000BA 		blt	.L47
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 1043              		.loc 3 132 0
 1044 0370 020152E3 		cmp	r2, #-2147483648
 1045 0374 00C0D3E2 		sbcs	ip, r3, #0
 1046 0378 0E2002B0 		andlt	r2, r2, lr
 1047              	.LVL96:
 1048 037c 02C1E0A3 		mvnge	ip, #-2147483648
 1049 0380 06C022B0 		eorlt	ip, r2, r6
 1050              	.L47:
 1051              	.LVL97:
 1052              	.LBE1404:
 1053              	.LBE1403:
 1054              	.LBB1405:
 1055              	.LBB1406:
 1056              	.LBB1407:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1057              		.loc 3 71 0
 1058 0384 0C1001E0 		and	r1, r1, ip
 1059              	.LVL98:
 1060              	.LBE1407:
 1061              	.LBE1406:
 1062              	.LBE1405:
 1063              	.LBE1394:
 1064              	.LBE1393:
 1065              	.LBE1392:
 1066              	.LBE1391:
 1067              	.LBE1390:
 843:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, 0> a) {
 844:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, 0> F0;
 845:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef FixedPoint<tRawType, 2> F2;
 846:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   F0 half_denominator = RoundingHalfSum(a, F0::One());
 847:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   // Newton-Raphson division
 848:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   // https://en.wikipedia.org/wiki/Division_algorithm#Newton.E2.80.93Raphson_division
 849:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   // Refer to that page for the logic behind the 48/17 and 32/17 constants.
 850:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const F2 constant_48_over_17 =
 851:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(F2, 1515870810, 48.0 / 17.0);
 852:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const F2 constant_neg_32_over_17 =
 853:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       GEMMLOWP_CHECKED_FIXEDPOINT_CONSTANT(F2, -1010580540, -32.0 / 17.0);
 854:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   F2 x = constant_48_over_17 + half_denominator * constant_neg_32_over_17;
 855:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   for (int i = 0; i < 3; i++) {
 856:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     F2 half_denominator_times_x = half_denominator * x;
 857:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     F2 one_minus_half_denominator_times_x =
 858:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****         F2::One() - half_denominator_times_x;
 859:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     x = x + Rescale<2>(x * one_minus_half_denominator_times_x);
 860:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 861:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return Rescale<0>(ExactMulByPot<-1>(x));
 862:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1068              		.loc 3 862 0
 1069 0388 010020E0 		eor	r0, r0, r1
 1070              	.LVL99:
 1071 038c F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1072              	.LVL100:
 1073              	.L59:
 1074              	.LBB1413:
 1075              	.LBB1412:
 1076              	.LBB1411:
 1077              	.LBB1410:
 1078              	.LBB1409:
 1079              	.LBB1408:
 1080              	.LBB1399:
 1081              	.LBB1398:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1082              		.loc 3 158 0
 1083 0390 02C1E0E3 		mvn	ip, #-2147483648
 1084 0394 0000A0E3 		mov	r0, #0
 1085 0398 0C60A0E1 		mov	r6, ip
 1086 039c 00E0A0E1 		mov	lr, r0
 1087 03a0 0010E0E3 		mvn	r1, #0
 1088 03a4 E8FFFFEA 		b	.L46
 1089              	.LVL101:
 1090              	.L62:
 1091              	.LBE1398:
 1092              	.LBE1399:
 1093              	.LBE1408:
 1094              	.LBE1409:
 1095              	.LBE1410:
 1096              	.LBE1411:
 1097              	.LBE1412:
 1098              	.LBE1413:
 1099              	.LBB1414:
 1100              	.LBB1387:
 1101              	.LBB1382:
 1102              	.LBB1313:
 1103              	.LBB1308:
 1104              	.LBB1303:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1105              		.loc 3 337 0
 1106 03a8 046096E0 		adds	r6, r6, r4
 1107              	.LVL102:
 1108 03ac 0570A7E0 		adc	r7, r7, r5
 1109 03b0 0050A0E3 		mov	r5, #0
 1110 03b4 C74FA0E1 		asr	r4, r7, #31
 1111              	.LVL103:
 1112 03b8 0241C4E3 		bic	r4, r4, #-2147483648
 1113 03bc 064094E0 		adds	r4, r4, r6
 1114 03c0 A44FA0E1 		lsr	r4, r4, #31
 1115 03c4 0750A5E0 		adc	r5, r5, r7
 1116 03c8 854084E1 		orr	r4, r4, r5, lsl #1
 1117              	.LVL104:
 1118              	.LBE1303:
 1119              	.LBE1308:
 1120              	.LBE1313:
 1121              	.LBE1382:
 1122              	.LBB1383:
 1123              	.LBB1361:
 1124              	.LBB1357:
 1125              	.LBB1353:
 1126              	.LBB1349:
 1127              	.LBB1343:
 1128              	.LBB1341:
 1129              	.LBB1340:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1130              		.loc 3 158 0
 1131 03cc 1E0274E3 		cmn	r4, #-536870911
 1132 03d0 160000DA 		ble	.L63
 1133 03d4 0211E0E3 		mvn	r1, #-2147483648
 1134 03d8 0020A0E1 		mov	r2, r0
 1135 03dc 01E0A0E1 		mov	lr, r1
 1136 03e0 00C0E0E3 		mvn	ip, #0
 1137              	.L43:
 1138              	.LVL105:
 1139              	.LBE1340:
 1140              	.LBE1341:
 1141              	.LBE1343:
 1142              	.LBB1344:
 1143              	.LBB1325:
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 1144              		.loc 3 127 0
 1145 03e4 904B80EE 		vdup.32	d16, r4
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1146              		.loc 3 131 0
 1147 03e8 0261A0E3 		mov	r6, #-2147483648
 1148 03ec 0070E0E3 		mvn	r7, #0
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 1149              		.loc 3 127 0
 1150 03f0 B000E0F2 		vshr.s64	d16, d16, #32
 1151 03f4 B015C2F2 		vshl.u64	d17, d16, #2
 1152 03f8 314B55EC 		vmov	r4, r5, d17	@ int
 1153              	.LVL106:
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 1154              		.loc 3 131 0
 1155 03fc 060054E1 		cmp	r4, r6
 1156 0400 0760D5E0 		sbcs	r6, r5, r7
 1157 0404 01000CB0 		andlt	r0, ip, r1
 1158 0408 002022B0 		eorlt	r2, r2, r0
 1159 040c C2FFFFBA 		blt	.L42
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 1160              		.loc 3 132 0
 1161 0410 020154E3 		cmp	r4, #-2147483648
 1162 0414 0010D5E2 		sbcs	r1, r5, #0
 1163 0418 041000B0 		andlt	r1, r0, r4
 1164 041c 0201CCA3 		bicge	r0, ip, #-2147483648
 1165 0420 0E0021B0 		eorlt	r0, r1, lr
 1166 0424 0C0000B0 		andlt	r0, r0, ip
 1167 0428 002022E0 		eor	r2, r2, r0
 1168 042c BAFFFFEA 		b	.L42
 1169              	.LVL107:
 1170              	.L63:
 1171              	.LBE1325:
 1172              	.LBE1344:
 1173              	.LBB1345:
 1174              	.LBB1334:
 1175              	.LBB1332:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1176              		.loc 3 158 0
 1177 0430 1E0254E3 		cmp	r4, #-536870911
 1178 0434 00E0A0E1 		mov	lr, r0
 1179 0438 0010A0A3 		movge	r1, #0
 1180 043c 0110A0B3 		movlt	r1, #1
 1181 0440 002061E2 		rsb	r2, r1, #0
 1182 0444 01C041E2 		sub	ip, r1, #1
 1183 0448 022102E2 		and	r2, r2, #-2147483648
 1184 044c 0211A0E3 		mov	r1, #-2147483648
 1185 0450 0000E0E3 		mvn	r0, #0
 1186 0454 E2FFFFEA 		b	.L43
 1187              	.LVL108:
 1188              	.L36:
 1189 0458 1E0256E3 		cmp	r6, #-536870911
 1190 045c 0450A0E1 		mov	r5, r4
 1191 0460 00E0A0A3 		movge	lr, #0
 1192 0464 01E0A0B3 		movlt	lr, #1
 1193 0468 00406EE2 		rsb	r4, lr, #0
 1194 046c 02C1A0E3 		mov	ip, #-2147483648
 1195              	.LVL109:
 1196 0470 022104E2 		and	r2, r4, #-2147483648
 1197 0474 01E04EE2 		sub	lr, lr, #1
 1198 0478 0040E0E3 		mvn	r4, #0
 1199 047c 6EFFFFEA 		b	.L39
 1200              	.LVL110:
 1201              	.L48:
 1202              	.LBE1332:
 1203              	.LBE1334:
 1204              	.LBE1345:
 1205              	.LBE1349:
 1206              	.LBE1353:
 1207              	.LBE1357:
 1208              	.LBE1361:
 1209              	.LBE1383:
 1210              	.LBB1384:
 1211              	.LBB1285:
 1212              	.LBB1280:
 1213              	.LBB1275:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1214              		.loc 3 334 0
 1215 0480 28308FE2 		adr	r3, .L64
 1216 0484 D020C3E1 		ldrd	r2, [r3]
 1217              	.LBE1275:
 1218              	.LBE1280:
 1219              	.LBE1285:
 1220              	.LBE1384:
 1221              	.LBE1387:
 1222              	.LBE1414:
 1223              	.LBB1415:
 1224              	.LBB1261:
 1225              	.LBB1257:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1226              		.loc 3 95 0
 1227 0488 5ACA05E3 		movw	ip, #23130
 1228              	.LBE1257:
 1229              	.LBE1261:
 1230              	.LBE1415:
 1231              	.LBB1416:
 1232              	.LBB1388:
 1233              	.LBB1385:
 1234              	.LBB1286:
 1235              	.LBB1281:
 1236              	.LBB1276:
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 1237              		.loc 3 333 0
 1238 048c 5A4A05E3 		movw	r4, #23130
 1239              	.LBE1276:
 1240              	.LBE1281:
 1241              	.LBE1286:
 1242              	.LBE1385:
 1243              	.LBE1388:
 1244              	.LBE1416:
 1245              	.LBB1417:
 1246              	.LBB1233:
 1247              	.LBB1228:
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1248              		.loc 3 241 0
 1249 0490 0000E0E3 		mvn	r0, #0
 1250              	.LVL111:
 1251 0494 0010E0E3 		mvn	r1, #0
 1252              	.LBE1228:
 1253              	.LBE1233:
 1254              	.LBE1417:
 1255              	.LBB1418:
 1256              	.LBB1262:
 1257              	.LBB1258:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1258              		.loc 3 95 0
 1259 0498 5ACA45E3 		movt	ip, 23130
 1260              	.LBE1258:
 1261              	.LBE1262:
 1262              	.LBE1418:
 1263              	.LBB1419:
 1264              	.LBB1389:
 1265              	.LBB1386:
 1266              	.LBB1287:
 1267              	.LBB1282:
 1268              	.LBB1277:
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 1269              		.loc 3 333 0
 1270 049c 5A4A45E3 		movt	r4, 23130
 1271 04a0 0050A0E3 		mov	r5, #0
 1272              	.LVL112:
 1273              	.L27:
 1274              	.LBE1277:
 1275              	.LBE1282:
 1276              	.LBE1287:
 1277              	.LBE1386:
 1278              	.LBE1389:
 1279              	.LBE1419:
 1280              	.LBB1420:
 1281              	.LBB1234:
 1282              	.LBB1229:
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1283              		.loc 3 241 0
 1284 04a4 0761A0E3 		mov	r6, #-1073741823
 1285 04a8 0070E0E3 		mvn	r7, #0
 1286 04ac FDFEFFEA 		b	.L29
 1287              	.L65:
 1288              		.align	3
 1289              	.L64:
 1290 04b0 A6A5A5A5 		.word	-1515870810
 1291 04b4 FFFFFFFF 		.word	-1
 1292              	.LBE1229:
 1293              	.LBE1234:
 1294              	.LBE1420:
 1295              		.cfi_endproc
 1296              	.LFE4345:
 1297              		.cantunwind
 1298              		.fnend
 1300              		.section	.text._ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10Fixed
 1301              		.align	2
 1302              		.weak	_ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10FixedPointIT_L
 1303              		.syntax unified
 1304              		.arm
 1305              		.fpu neon
 1307              	_ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10FixedPointIT_Li0EEES3
 1308              		.fnstart
 1309              	.LFB4540:
 721:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, 0> a) {
 1310              		.loc 3 721 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 1315              	.LVL113:
 1316 0000 F0032DE9 		push	{r4, r5, r6, r7, r8, r9}
 1317              		.cfi_def_cfa_offset 24
 1318              		.cfi_offset 4, -24
 1319              		.cfi_offset 5, -20
 1320              		.cfi_offset 6, -16
 1321              		.cfi_offset 7, -12
 1322              		.cfi_offset 8, -8
 1323              		.cfi_offset 9, -4
 1324              	.LBB1559:
 1325              	.LBB1560:
 1326              	.LBB1561:
 1327              	.LBB1562:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1328              		.loc 3 337 0
 1329 0004 0141A0E3 		mov	r4, #1073741824
 1330 0008 0050A0E3 		mov	r5, #0
 1331              	.LBE1562:
 1332              	.LBE1561:
 1333              	.LBE1560:
 1334              	.LBE1559:
 1335              	.LBB1566:
 1336              	.LBB1567:
 1337              	.LBB1568:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1338              		.loc 3 95 0
 1339 000c 010280E2 		add	r0, r0, #268435456
 1340              	.LVL114:
 1341              	.LBE1568:
 1342              	.LBE1567:
 1343              	.LBE1566:
 1344              	.LBB1569:
 1345              	.LBB1565:
 1346              	.LBB1564:
 1347              	.LBB1563:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1348              		.loc 3 337 0
 1349 0010 0460A0E1 		mov	r6, r4
 1350 0014 0570A0E1 		mov	r7, r5
 1351 0018 9060E7E0 		smlal	r6, r7, r0, r0
 1352 001c 0030A0E3 		mov	r3, #0
 1353 0020 C72FA0E1 		asr	r2, r7, #31
 1354 0024 0221C2E3 		bic	r2, r2, #-2147483648
 1355 0028 062092E0 		adds	r2, r2, r6
 1356 002c A22FA0E1 		lsr	r2, r2, #31
 1357 0030 0730A3E0 		adc	r3, r3, r7
 1358 0034 832082E1 		orr	r2, r2, r3, lsl #1
 1359              	.LVL115:
 1360              	.LBE1563:
 1361              	.LBE1564:
 1362              	.LBE1565:
 1363              	.LBE1569:
 1364              	.LBB1570:
 1365              	.LBB1571:
 1366              	.LBB1572:
 1367              	.LBB1573:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1368              		.loc 3 334 0
 1369 0038 9260C7E0 		smull	r6, r7, r2, r0
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 1370              		.loc 3 331 0
 1371 003c 020050E1 		cmp	r0, r2
 1372 0040 02015203 		cmpeq	r2, #-2147483648
 1373 0044 0110A003 		moveq	r1, #1
 1374 0048 0010A013 		movne	r1, #0
 1375              	.LVL116:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1376              		.loc 3 335 0
 1377 004c 000056E3 		cmp	r6, #0
 1378 0050 00C0D7E2 		sbcs	ip, r7, #0
 1379 0054 0741A0B3 		movlt	r4, #-1073741823
 1380 0058 0050E0B3 		mvnlt	r5, #0
 1381              	.LVL117:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1382              		.loc 3 338 0
 1383 005c 000051E3 		cmp	r1, #0
 1384 0060 4D00001A 		bne	.L74
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1385              		.loc 3 337 0
 1386 0064 046096E0 		adds	r6, r6, r4
 1387              	.LVL118:
 1388 0068 0570A7E0 		adc	r7, r7, r5
 1389 006c 0050A0E3 		mov	r5, #0
 1390 0070 C74FA0E1 		asr	r4, r7, #31
 1391              	.LVL119:
 1392 0074 0241C4E3 		bic	r4, r4, #-2147483648
 1393 0078 046096E0 		adds	r6, r6, r4
 1394 007c 0570A7E0 		adc	r7, r7, r5
 1395 0080 A66FA0E1 		lsr	r6, r6, #31
 1396              	.LBE1573:
 1397              	.LBE1572:
 1398              	.LBE1571:
 1399              	.LBE1570:
 1400              	.LBB1580:
 1401              	.LBB1581:
 1402              	.LBB1582:
 1403              	.LBB1583:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1404              		.loc 3 338 0
 1405 0084 020152E3 		cmp	r2, #-2147483648
 1406              	.LBE1583:
 1407              	.LBE1582:
 1408              	.LBE1581:
 1409              	.LBE1580:
 1410              	.LBB1590:
 1411              	.LBB1578:
 1412              	.LBB1576:
 1413              	.LBB1574:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1414              		.loc 3 337 0
 1415 0088 876086E1 		orr	r6, r6, r7, lsl #1
 1416              	.LVL120:
 1417              	.LBE1574:
 1418              	.LBE1576:
 1419              	.LBE1578:
 1420              	.LBE1590:
 1421              	.LBB1591:
 1422              	.LBB1588:
 1423              	.LBB1586:
 1424              	.LBB1584:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1425              		.loc 3 338 0
 1426 008c 0242A003 		moveq	r4, #536870912
 1427 0090 2F00001A 		bne	.L80
 1428              	.LVL121:
 1429              	.L69:
 1430              	.LBE1584:
 1431              	.LBE1586:
 1432              	.LBE1588:
 1433              	.LBE1591:
 1434              	.LBB1592:
 1435              	.LBB1593:
 1436              	.LBB1594:
 1437              	.LBB1595:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1438              		.loc 3 334 0
 1439 0094 AB1A0AE3 		movw	r1, #43691
 1440              	.LBE1595:
 1441              	.LBE1594:
 1442              	.LBE1593:
 1443              	.LBE1592:
 1444              	.LBB1605:
 1445              	.LBB1606:
 1446              	.LBB1607:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1447              		.loc 3 95 0
 1448 0098 064084E0 		add	r4, r4, r6
 1449              	.LVL122:
 1450              	.LBE1607:
 1451              	.LBE1606:
 1452              	.LBE1605:
 1453              	.LBB1608:
 1454              	.LBB1602:
 1455              	.LBB1599:
 1456              	.LBB1596:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1457              		.loc 3 334 0
 1458 009c AA1A42E3 		movt	r1, 10922
 1459 00a0 9441C5E0 		smull	r4, r5, r4, r1
 1460              	.LVL123:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1461              		.loc 3 335 0
 1462 00a4 000054E3 		cmp	r4, #0
 1463 00a8 0010D5E2 		sbcs	r1, r5, #0
 1464 00ac 3F0000BA 		blt	.L76
 1465 00b0 0161A0E3 		mov	r6, #1073741824
 1466 00b4 0070A0E3 		mov	r7, #0
 1467              	.LVL124:
 1468              	.L68:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1469              		.loc 3 337 0
 1470 00b8 046096E0 		adds	r6, r6, r4
 1471              	.LVL125:
 1472 00bc 0570A7E0 		adc	r7, r7, r5
 1473 00c0 0050A0E3 		mov	r5, #0
 1474 00c4 C74FA0E1 		asr	r4, r7, #31
 1475 00c8 0241C4E3 		bic	r4, r4, #-2147483648
 1476 00cc 064094E0 		adds	r4, r4, r6
 1477 00d0 A44FA0E1 		lsr	r4, r4, #31
 1478 00d4 0750A5E0 		adc	r5, r5, r7
 1479 00d8 854084E1 		orr	r4, r4, r5, lsl #1
 1480              	.LVL126:
 1481              	.LBE1596:
 1482              	.LBE1599:
 1483              	.LBE1602:
 1484              	.LBE1608:
 1485              	.LBB1609:
 1486              	.LBB1610:
 1487              	.LBB1611:
 1488              	.LBB1612:
 1489              	.LBB1613:
 1490              	.LBB1614:
 1491              	.LBB1615:
 1492              	.LBB1616:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1493              		.loc 3 158 0
 1494 00dc 042092E0 		adds	r2, r2, r4
 1495              	.LVL127:
 1496              	.LBE1616:
 1497              	.LBE1615:
 1498              	.LBE1614:
 1499              	.LBE1613:
 1500              	.LBE1612:
 1501              	.LBE1611:
 1502              	.LBE1610:
 1503              	.LBE1609:
 742:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 1504              		.loc 3 742 0
 1505 00e0 F003BDE8 		pop	{r4, r5, r6, r7, r8, r9}
 1506              		.cfi_remember_state
 1507              		.cfi_restore 9
 1508              		.cfi_restore 8
 1509              		.cfi_restore 7
 1510              		.cfi_restore 6
 1511              		.cfi_restore 5
 1512              		.cfi_restore 4
 1513              		.cfi_def_cfa_offset 0
 1514              	.LBB1625:
 1515              	.LBB1624:
 1516              	.LBB1623:
 1517              	.LBB1622:
 1518              	.LBB1621:
 1519              	.LBB1617:
 1520              	.LBB1618:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1521              		.loc 3 141 0
 1522 00e4 C230A0E1 		asr	r3, r2, #1
 1523 00e8 0020A043 		movmi	r2, #0
 1524              	.LVL128:
 1525 00ec 01200252 		andpl	r2, r2, #1
 1526              	.LVL129:
 1527              	.LBE1618:
 1528              	.LBE1617:
 1529              	.LBB1619:
 1530              	.LBB1620:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1531              		.loc 3 95 0
 1532 00f0 022083E0 		add	r2, r3, r2
 1533              	.LVL130:
 1534              	.LBE1620:
 1535              	.LBE1619:
 1536              	.LBE1621:
 1537              	.LBE1622:
 1538              	.LBE1623:
 1539              	.LBE1624:
 1540              	.LBE1625:
 1541              	.LBB1626:
 1542              	.LBB1627:
 1543              	.LBB1628:
 1544              	.LBB1629:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1545              		.loc 3 334 0
 1546 00f4 94380AE3 		movw	r3, #43156
 1547              	.LBE1629:
 1548              	.LBE1628:
 1549              	.LBE1627:
 1550              	.LBE1626:
 1551              	.LBB1633:
 1552              	.LBB1634:
 1553              	.LBB1635:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1554              		.loc 3 95 0
 1555 00f8 002082E0 		add	r2, r2, r0
 1556              	.LBE1635:
 1557              	.LBE1634:
 1558              	.LBE1633:
 1559              	.LBB1636:
 1560              	.LBB1632:
 1561              	.LBB1631:
 1562              	.LBB1630:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1563              		.loc 3 334 0
 1564 00fc F53047E3 		movt	r3, 28917
 1565 0100 9203C1E0 		smull	r0, r1, r2, r3
 1566              	.LVL131:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1567              		.loc 3 335 0
 1568 0104 000050E3 		cmp	r0, #0
 1569 0108 0030D1E2 		sbcs	r3, r1, #0
 1570 010c 0121A0A3 		movge	r2, #1073741824
 1571 0110 0721A0B3 		movlt	r2, #-1073741823
 1572 0114 0030A0A3 		movge	r3, #0
 1573 0118 0030E0B3 		mvnlt	r3, #0
 1574              	.LVL132:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1575              		.loc 3 337 0
 1576 011c 002092E0 		adds	r2, r2, r0
 1577              	.LVL133:
 1578 0120 0130A3E0 		adc	r3, r3, r1
 1579 0124 0010A0E3 		mov	r1, #0
 1580 0128 C30FA0E1 		asr	r0, r3, #31
 1581 012c 0201C0E3 		bic	r0, r0, #-2147483648
 1582 0130 020090E0 		adds	r0, r0, r2
 1583 0134 A00FA0E1 		lsr	r0, r0, #31
 1584 0138 0310A1E0 		adc	r1, r1, r3
 1585 013c 810080E1 		orr	r0, r0, r1, lsl #1
 1586              	.LBE1630:
 1587              	.LBE1631:
 1588              	.LBE1632:
 1589              	.LBE1636:
 1590              	.LBB1637:
 1591              	.LBB1638:
 1592              	.LBB1639:
 1593              	.LBB1640:
 1594              	.LBB1641:
 1595              	.LBB1642:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1596              		.loc 3 95 0
 1597 0140 070280E2 		add	r0, r0, #1879048192
 1598 0144 F50880E2 		add	r0, r0, #16056320
 1599 0148 2A0B80E2 		add	r0, r0, #43008
 1600 014c 940080E2 		add	r0, r0, #148
 1601              	.LVL134:
 1602              	.LBE1642:
 1603              	.LBE1641:
 1604              	.LBE1640:
 1605              	.LBE1639:
 1606              	.LBE1638:
 1607              	.LBE1637:
 742:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 1608              		.loc 3 742 0
 1609 0150 1EFF2FE1 		bx	lr
 1610              	.LVL135:
 1611              	.L80:
 1612              		.cfi_restore_state
 1613              	.LBB1643:
 1614              	.LBB1589:
 1615              	.LBB1587:
 1616              	.LBB1585:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1617              		.loc 3 337 0
 1618 0154 0141A0E3 		mov	r4, #1073741824
 1619 0158 0050A0E3 		mov	r5, #0
 1620 015c 9242E5E0 		smlal	r4, r5, r2, r2
 1621 0160 0090A0E3 		mov	r9, #0
 1622 0164 C58FA0E1 		asr	r8, r5, #31
 1623 0168 0281C8E3 		bic	r8, r8, #-2147483648
 1624 016c 048098E0 		adds	r8, r8, r4
 1625 0170 A88FA0E1 		lsr	r8, r8, #31
 1626 0174 0590A9E0 		adc	r9, r9, r5
 1627 0178 898088E1 		orr	r8, r8, r9, lsl #1
 1628              	.LVL136:
 1629 017c A84FA0E1 		lsr	r4, r8, #31
 1630 0180 4811A0E1 		asr	r1, r8, #2
 1631 0184 01C084E2 		add	ip, r4, #1
 1632              	.LBE1585:
 1633              	.LBE1587:
 1634              	.LBE1589:
 1635              	.LBE1643:
 1636              	.LBB1644:
 1637              	.LBB1645:
 1638              	.LBB1646:
 1639              	.LBB1647:
 1640              	.LBB1648:
 1641              	.LBB1649:
 1642              	.LBB1650:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1643              		.loc 3 71 0
 1644 0188 034008E2 		and	r4, r8, #3
 1645 018c 0C0054E1 		cmp	r4, ip
 1646 0190 0140A0D1 		movle	r4, r1
 1647 0194 014081C2 		addgt	r4, r1, #1
 1648 0198 BDFFFFEA 		b	.L69
 1649              	.LVL137:
 1650              	.L74:
 1651              	.LBE1650:
 1652              	.LBE1649:
 1653              	.LBE1648:
 1654              	.LBE1647:
 1655              	.LBE1646:
 1656              	.LBE1645:
 1657              	.LBE1644:
 1658              	.LBB1651:
 1659              	.LBB1603:
 1660              	.LBB1600:
 1661              	.LBB1597:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1662              		.loc 3 334 0
 1663 019c 1C508FE2 		adr	r5, .L81
 1664 01a0 D040C5E1 		ldrd	r4, [r5]
 1665              	.LVL138:
 1666              	.LBE1597:
 1667              	.LBE1600:
 1668              	.LBE1603:
 1669              	.LBE1651:
 1670              	.LBB1652:
 1671              	.LBB1579:
 1672              	.LBB1577:
 1673              	.LBB1575:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1674              		.loc 3 338 0
 1675 01a4 0761A0E3 		mov	r6, #-1073741823
 1676              	.LVL139:
 1677 01a8 0070E0E3 		mvn	r7, #0
 1678 01ac C1FFFFEA 		b	.L68
 1679              	.LVL140:
 1680              	.L76:
 1681              	.LBE1575:
 1682              	.LBE1577:
 1683              	.LBE1579:
 1684              	.LBE1652:
 1685              	.LBB1653:
 1686              	.LBB1604:
 1687              	.LBB1601:
 1688              	.LBB1598:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1689              		.loc 3 335 0
 1690 01b0 0761A0E3 		mov	r6, #-1073741823
 1691 01b4 0070E0E3 		mvn	r7, #0
 1692 01b8 BEFFFFEA 		b	.L68
 1693              	.L82:
 1694 01bc 00F020E3 		.align	3
 1695              	.L81:
 1696 01c0 555555B5 		.word	-1252698795
 1697 01c4 FFFFFFEF 		.word	-268435457
 1698              	.LBE1598:
 1699              	.LBE1601:
 1700              	.LBE1604:
 1701              	.LBE1653:
 1702              		.cfi_endproc
 1703              	.LFE4540:
 1704              		.cantunwind
 1705              		.fnend
 1707              		.section	.text._ZN8gemmlowp22exp_on_negative_valuesIlLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
 1708              		.align	2
 1709              		.weak	_ZN8gemmlowp22exp_on_negative_valuesIlLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
 1710              		.syntax unified
 1711              		.arm
 1712              		.fpu neon
 1714              	_ZN8gemmlowp22exp_on_negative_valuesIlLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE:
 1715              		.fnstart
 1716              	.LFB4505:
 746:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 1717              		.loc 3 746 0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 0
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 1721              	.LVL141:
 1722 0000 F84F2DE9 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1723              		.cfi_def_cfa_offset 40
 1724              		.cfi_offset 3, -40
 1725              		.cfi_offset 4, -36
 1726              		.cfi_offset 5, -32
 1727              		.cfi_offset 6, -28
 1728              		.cfi_offset 7, -24
 1729              		.cfi_offset 8, -20
 1730              		.cfi_offset 9, -16
 1731              		.cfi_offset 10, -12
 1732              		.cfi_offset 11, -8
 1733              		.cfi_offset 14, -4
 1734              	.LBB1966:
 1735              	.LBB1967:
 1736              	.LBB1968:
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1737              		.loc 3 106 0
 1738 0004 FE5480E3 		orr	r5, r0, #-33554432
 1739              	.LBE1968:
 1740              	.LBE1967:
 1741              	.LBE1966:
 1742              	.LBB1969:
 1743              	.LBB1970:
 1744              	.LBB1971:
 1745              	.LBB1972:
 1746              	.LBB1973:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1747              		.loc 3 334 0
 1748 0008 7B8E0BE3 		movw	r8, #48763
 1749              	.LBE1973:
 1750              	.LBE1972:
 1751              	.LBE1971:
 1752              	.LBE1970:
 1753              	.LBE1969:
 746:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 1754              		.loc 3 746 0
 1755 000c 0040A0E1 		mov	r4, r0
 1756              	.LVL142:
 1757              	.LBB2016:
 1758              	.LBB1995:
 1759              	.LBB1988:
 1760              	.LBB1981:
 1761              	.LBB1974:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1762              		.loc 3 334 0
 1763 0010 AF8346E3 		movt	r8, 25519
 1764              	.LBE1974:
 1765              	.LBE1981:
 1766              	.LBE1988:
 1767              	.LBE1995:
 1768              	.LBE2016:
 756:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   tRawType remainder = (a_mod_quarter_minus_one_quarter - a).raw();
 1769              		.loc 3 756 0
 1770 0014 0502A0E1 		lsl	r0, r5, #4
 1771              	.LVL143:
 1772 0018 FEFFFFEB 		bl	_ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10FixedPointIT_Li0E
 1773              	.LVL144:
 1774              	.LBB2017:
 1775              	.LBB1996:
 1776              	.LBB1989:
 1777              	.LBB1982:
 1778              	.LBB1975:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1779              		.loc 3 334 0
 1780 001c 9088C9E0 		smull	r8, r9, r0, r8
 1781              	.LBE1975:
 1782              	.LBE1982:
 1783              	.LBE1989:
 1784              	.LBE1996:
 1785              	.LBE2017:
 1786              	.LBB2018:
 1787              	.LBB2019:
 1788              	.LBB2020:
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1789              		.loc 3 106 0
 1790 0020 043045E0 		sub	r3, r5, r4
 1791              	.LVL145:
 1792              	.LBE2020:
 1793              	.LBE2019:
 1794              	.LBE2018:
 1795              	.LBB2021:
 1796              	.LBB1997:
 1797              	.LBB1998:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1798              		.loc 3 158 0
 1799 0024 D32CE0E7 		ubfx	r2, r3, #25, #1
 1800              	.LBE1998:
 1801              	.LBE1997:
 1802              	.LBE2021:
 1803              	.LBB2022:
 1804              	.LBB2023:
 1805              	.LBB2024:
 1806 0028 D35DE0E7 		ubfx	r5, r3, #27, #1
 1807              	.LVL146:
 1808              	.LBE2024:
 1809              	.LBE2023:
 1810              	.LBE2022:
 1811              	.LBB2057:
 1812              	.LBB2000:
 1813              	.LBB1999:
 1814 002c 001062E2 		rsb	r1, r2, #0
 1815              	.LVL147:
 1816              	.LBE1999:
 1817              	.LBE2000:
 1818              	.LBB2001:
 1819              	.LBB2002:
 1820              	.LBB2003:
 1821              	.LBB2004:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1822              		.loc 3 71 0
 1823 0030 012042E2 		sub	r2, r2, #1
 1824 0034 020000E0 		and	r0, r0, r2
 1825              	.LVL148:
 1826              	.LBE2004:
 1827              	.LBE2003:
 1828              	.LBE2002:
 1829              	.LBE2001:
 1830              	.LBE2057:
 1831              	.LBB2058:
 1832              	.LBB2059:
 1833              	.LBB2060:
 1834              	.LBB2061:
 1835              	.LBB2062:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1836              		.loc 3 334 0
 1837 0038 F22B0CE3 		movw	r2, #52210
 1838              	.LBE2062:
 1839              	.LBE2061:
 1840              	.LBE2060:
 1841              	.LBE2059:
 1842              	.LBE2058:
 1843              	.LBB2103:
 1844              	.LBB2104:
 1845              	.LBB2105:
 1846              	.LBB2106:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1847              		.loc 3 158 0
 1848 003c 144F6FE1 		clz	r4, r4
 1849              	.LVL149:
 1850              	.LBE2106:
 1851              	.LBE2105:
 1852              	.LBE2104:
 1853              	.LBE2103:
 1854              	.LBB2113:
 1855              	.LBB2010:
 1856              	.LBB1990:
 1857              	.LBB1983:
 1858              	.LBB1976:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1859              		.loc 3 335 0
 1860 0040 000058E3 		cmp	r8, #0
 1861              	.LBE1976:
 1862              	.LBE1983:
 1863              	.LBE1990:
 1864              	.LBE2010:
 1865              	.LBE2113:
 1866              	.LBB2114:
 1867              	.LBB2078:
 1868              	.LBB2073:
 1869              	.LBB2068:
 1870              	.LBB2063:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1871              		.loc 3 334 0
 1872 0044 A22D44E3 		movt	r2, 19874
 1873              	.LBE2063:
 1874              	.LBE2068:
 1875              	.LBE2073:
 1876              	.LBE2078:
 1877              	.LBE2114:
 1878              	.LBB2115:
 1879              	.LBB2011:
 1880              	.LBB1991:
 1881              	.LBB1984:
 1882              	.LBB1977:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1883              		.loc 3 335 0
 1884 0048 00C0D9E2 		sbcs	ip, r9, #0
 1885              	.LBE1977:
 1886              	.LBE1984:
 1887              	.LBE1991:
 1888              	.LBE2011:
 1889              	.LBE2115:
 1890              	.LBB2116:
 1891              	.LBB2079:
 1892              	.LBB2080:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1893              		.loc 3 158 0
 1894 004c 53CDE0E7 		ubfx	ip, r3, #26, #1
 1895              	.LBE2080:
 1896              	.LBE2079:
 1897              	.LBE2116:
 1898              	.LBB2117:
 1899              	.LBB2012:
 1900              	.LBB1992:
 1901              	.LBB1985:
 1902              	.LBB1978:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1903              		.loc 3 335 0
 1904 0050 0161A0A3 		movge	r6, #1073741824
 1905 0054 0761A0B3 		movlt	r6, #-1073741823
 1906 0058 0070A0A3 		movge	r7, #0
 1907 005c 0070E0B3 		mvnlt	r7, #0
 1908              	.LVL150:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1909              		.loc 3 337 0
 1910 0060 068098E0 		adds	r8, r8, r6
 1911              	.LVL151:
 1912              	.LBE1978:
 1913              	.LBE1985:
 1914              	.LBE1992:
 1915              	.LBE2012:
 1916              	.LBE2117:
 1917              	.LBB2118:
 1918              	.LBB2082:
 1919              	.LBB2081:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1920              		.loc 3 158 0
 1921 0064 00E06CE2 		rsb	lr, ip, #0
 1922              	.LBE2081:
 1923              	.LBE2082:
 1924              	.LBE2118:
 1925              	.LBB2119:
 1926              	.LBB2013:
 1927              	.LBB1993:
 1928              	.LBB1986:
 1929              	.LBB1979:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1930              		.loc 3 337 0
 1931 0068 0790A9E0 		adc	r9, r9, r7
 1932 006c 0070A0E3 		mov	r7, #0
 1933 0070 C96FA0E1 		asr	r6, r9, #31
 1934              	.LBE1979:
 1935              	.LBE1986:
 1936              	.LBE1993:
 1937              	.LBE2013:
 1938              	.LBE2119:
 1939              	.LBB2120:
 1940              	.LBB2083:
 1941              	.LBB2084:
 1942              	.LBB2085:
 1943              	.LBB2086:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1944              		.loc 3 71 0
 1945 0074 01C04CE2 		sub	ip, ip, #1
 1946              	.LBE2086:
 1947              	.LBE2085:
 1948              	.LBE2084:
 1949              	.LBE2083:
 1950              	.LBE2120:
 1951              	.LBB2121:
 1952              	.LBB2111:
 1953              	.LBB2109:
 1954              	.LBB2107:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1955              		.loc 3 158 0
 1956 0078 A442A0E1 		lsr	r4, r4, #5
 1957              	.LBE2107:
 1958              	.LBE2109:
 1959              	.LBE2111:
 1960              	.LBE2121:
 1961              	.LBB2122:
 1962              	.LBB2014:
 1963              	.LBB1994:
 1964              	.LBB1987:
 1965              	.LBB1980:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1966              		.loc 3 337 0
 1967 007c 0261C6E3 		bic	r6, r6, #-2147483648
 1968 0080 086096E0 		adds	r6, r6, r8
 1969 0084 A66FA0E1 		lsr	r6, r6, #31
 1970 0088 0970A7E0 		adc	r7, r7, r9
 1971 008c 876086E1 		orr	r6, r6, r7, lsl #1
 1972              	.LBE1980:
 1973              	.LBE1987:
 1974              	.LBE1994:
 1975              	.LBE2014:
 1976              	.LBB2015:
 1977              	.LBB2009:
 1978              	.LBB2005:
 1979              	.LBB2006:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1980              		.loc 3 71 0
 1981 0090 061001E0 		and	r1, r1, r6
 1982              	.LVL152:
 1983              	.LBE2006:
 1984              	.LBE2005:
 1985              	.LBB2007:
 1986              	.LBB2008:
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1987              		.loc 3 83 0
 1988 0094 010020E0 		eor	r0, r0, r1
 1989              	.LVL153:
 1990              	.LBE2008:
 1991              	.LBE2007:
 1992              	.LBE2009:
 1993              	.LBE2015:
 1994              	.LBE2122:
 1995              	.LBB2123:
 1996              	.LBB2026:
 1997              	.LBB2027:
 1998              	.LBB2028:
 1999              	.LBB2029:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2000              		.loc 3 334 0
 2001 0098 6C1C0AE3 		movw	r1, #44140
 2002              	.LBE2029:
 2003              	.LBE2028:
 2004              	.LBE2027:
 2005              	.LBE2026:
 2006              	.LBE2123:
 2007              	.LBB2124:
 2008              	.LBB2096:
 2009              	.LBB2074:
 2010              	.LBB2069:
 2011              	.LBB2064:
 2012 009c 9082C9E0 		smull	r8, r9, r0, r2
 2013              	.LVL154:
 2014              	.LBE2064:
 2015              	.LBE2069:
 2016              	.LBE2074:
 2017              	.LBE2096:
 2018              	.LBB2097:
 2019              	.LBB2093:
 2020              	.LBB2088:
 2021              	.LBB2087:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2022              		.loc 3 71 0
 2023 00a0 0C0000E0 		and	r0, r0, ip
 2024              	.LVL155:
 2025              	.LBE2087:
 2026              	.LBE2088:
 2027              	.LBE2093:
 2028              	.LBE2097:
 2029              	.LBE2124:
 2030              	.LBB2125:
 2031              	.LBB2039:
 2032              	.LBB2036:
 2033              	.LBB2033:
 2034              	.LBB2030:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2035              		.loc 3 334 0
 2036 00a4 161F42E3 		movt	r1, 12054
 2037              	.LBE2030:
 2038              	.LBE2033:
 2039              	.LBE2036:
 2040              	.LBE2039:
 2041              	.LBE2125:
 2042              	.LBB2126:
 2043              	.LBB2127:
 2044              	.LBB2128:
 2045              	.LBB2129:
 2046              	.LBB2130:
 2047 00a8 A4CA0AE3 		movw	ip, #43684
 2048 00ac 52C141E3 		movt	ip, 4434
 2049              	.LBE2130:
 2050              	.LBE2129:
 2051              	.LBE2128:
 2052              	.LBE2127:
 2053              	.LBE2126:
 2054              	.LBB2169:
 2055              	.LBB2098:
 2056              	.LBB2075:
 2057              	.LBB2070:
 2058              	.LBB2065:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2059              		.loc 3 335 0
 2060 00b0 000058E3 		cmp	r8, #0
 2061 00b4 0020D9E2 		sbcs	r2, r9, #0
 2062              	.LBE2065:
 2063              	.LBE2070:
 2064              	.LBE2075:
 2065              	.LBE2098:
 2066              	.LBE2169:
 2067              	.LBB2170:
 2068              	.LBB2040:
 2069              	.LBB2025:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2070              		.loc 3 158 0
 2071 00b8 002065E2 		rsb	r2, r5, #0
 2072              	.LBE2025:
 2073              	.LBE2040:
 2074              	.LBE2170:
 2075              	.LBB2171:
 2076              	.LBB2099:
 2077              	.LBB2076:
 2078              	.LBB2071:
 2079              	.LBB2066:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2080              		.loc 3 335 0
 2081 00bc 0161A0A3 		movge	r6, #1073741824
 2082 00c0 0761A0B3 		movlt	r6, #-1073741823
 2083 00c4 0070A0A3 		movge	r7, #0
 2084 00c8 0070E0B3 		mvnlt	r7, #0
 2085              	.LVL156:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2086              		.loc 3 337 0
 2087 00cc 068098E0 		adds	r8, r8, r6
 2088              	.LVL157:
 2089              	.LBE2066:
 2090              	.LBE2071:
 2091              	.LBE2076:
 2092              	.LBE2099:
 2093              	.LBE2171:
 2094              	.LBB2172:
 2095              	.LBB2041:
 2096              	.LBB2042:
 2097              	.LBB2043:
 2098              	.LBB2044:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2099              		.loc 3 71 0
 2100 00d0 015045E2 		sub	r5, r5, #1
 2101              	.LBE2044:
 2102              	.LBE2043:
 2103              	.LBE2042:
 2104              	.LBE2041:
 2105              	.LBE2172:
 2106              	.LBB2173:
 2107              	.LBB2100:
 2108              	.LBB2077:
 2109              	.LBB2072:
 2110              	.LBB2067:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2111              		.loc 3 337 0
 2112 00d4 0790A9E0 		adc	r9, r9, r7
 2113 00d8 0070A0E3 		mov	r7, #0
 2114 00dc C96FA0E1 		asr	r6, r9, #31
 2115 00e0 0261C6E3 		bic	r6, r6, #-2147483648
 2116 00e4 086096E0 		adds	r6, r6, r8
 2117 00e8 A66FA0E1 		lsr	r6, r6, #31
 2118 00ec 0970A7E0 		adc	r7, r7, r9
 2119 00f0 876086E1 		orr	r6, r6, r7, lsl #1
 2120              	.LBE2067:
 2121              	.LBE2072:
 2122              	.LBE2077:
 2123              	.LBE2100:
 2124              	.LBB2101:
 2125              	.LBB2094:
 2126              	.LBB2089:
 2127              	.LBB2090:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2128              		.loc 3 71 0
 2129 00f4 06E00EE0 		and	lr, lr, r6
 2130              	.LVL158:
 2131              	.LBE2090:
 2132              	.LBE2089:
 2133              	.LBE2094:
 2134              	.LBE2101:
 2135              	.LBE2173:
 2136              	.LBB2174:
 2137              	.LBB2175:
 2138              	.LBB2176:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2139              		.loc 3 158 0
 2140 00f8 D36EE0E7 		ubfx	r6, r3, #29, #1
 2141              	.LBE2176:
 2142              	.LBE2175:
 2143              	.LBE2174:
 2144              	.LBB2229:
 2145              	.LBB2102:
 2146              	.LBB2095:
 2147              	.LBB2091:
 2148              	.LBB2092:
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2149              		.loc 3 83 0
 2150 00fc 0E0020E0 		eor	r0, r0, lr
 2151              	.LVL159:
 2152              	.LBE2092:
 2153              	.LBE2091:
 2154              	.LBE2095:
 2155              	.LBE2102:
 2156              	.LBE2229:
 2157              	.LBB2230:
 2158              	.LBB2146:
 2159              	.LBB2147:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2160              		.loc 3 158 0
 2161 0100 53EEE0E7 		ubfx	lr, r3, #28, #1
 2162              	.LBE2147:
 2163              	.LBE2146:
 2164              	.LBE2230:
 2165              	.LBB2231:
 2166              	.LBB2053:
 2167              	.LBB2037:
 2168              	.LBB2034:
 2169              	.LBB2031:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2170              		.loc 3 334 0
 2171 0104 9081C9E0 		smull	r8, r9, r0, r1
 2172              	.LVL160:
 2173              	.LBE2031:
 2174              	.LBE2034:
 2175              	.LBE2037:
 2176              	.LBE2053:
 2177              	.LBB2054:
 2178              	.LBB2051:
 2179              	.LBB2046:
 2180              	.LBB2045:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2181              		.loc 3 71 0
 2182 0108 005005E0 		and	r5, r5, r0
 2183              	.LBE2045:
 2184              	.LBE2046:
 2185              	.LBE2051:
 2186              	.LBE2054:
 2187              	.LBE2231:
 2188              	.LBB2232:
 2189              	.LBB2149:
 2190              	.LBB2148:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2191              		.loc 3 158 0
 2192 010c 00706EE2 		rsb	r7, lr, #0
 2193              	.LBE2148:
 2194              	.LBE2149:
 2195              	.LBB2150:
 2196              	.LBB2151:
 2197              	.LBB2152:
 2198              	.LBB2153:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2199              		.loc 3 71 0
 2200 0110 01E04EE2 		sub	lr, lr, #1
 2201              	.LBE2153:
 2202              	.LBE2152:
 2203              	.LBE2151:
 2204              	.LBE2150:
 2205              	.LBE2232:
 2206              	.LBB2233:
 2207              	.LBB2234:
 2208              	.LBB2235:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2209              		.loc 3 158 0
 2210 0114 533FE0E7 		ubfx	r3, r3, #30, #1
 2211              	.LVL161:
 2212              	.LBE2235:
 2213              	.LBE2234:
 2214              	.LBE2233:
 2215              	.LBB2268:
 2216              	.LBB2055:
 2217              	.LBB2038:
 2218              	.LBB2035:
 2219              	.LBB2032:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2220              		.loc 3 335 0
 2221 0118 000058E3 		cmp	r8, #0
 2222 011c 0010D9E2 		sbcs	r1, r9, #0
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2223              		.loc 3 337 0
 2224 0120 0010A0E3 		mov	r1, #0
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2225              		.loc 3 335 0
 2226 0124 01A1A0A3 		movge	r10, #1073741824
 2227 0128 07A1A0B3 		movlt	r10, #-1073741823
 2228 012c 00B0A0A3 		movge	fp, #0
 2229 0130 00B0E0B3 		mvnlt	fp, #0
 2230              	.LVL162:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2231              		.loc 3 337 0
 2232 0134 0A8098E0 		adds	r8, r8, r10
 2233              	.LVL163:
 2234 0138 0B90A9E0 		adc	r9, r9, fp
 2235 013c C90FA0E1 		asr	r0, r9, #31
 2236              	.LVL164:
 2237 0140 0201C0E3 		bic	r0, r0, #-2147483648
 2238 0144 080090E0 		adds	r0, r0, r8
 2239 0148 A00FA0E1 		lsr	r0, r0, #31
 2240 014c 0910A1E0 		adc	r1, r1, r9
 2241 0150 810080E1 		orr	r0, r0, r1, lsl #1
 2242              	.LBE2032:
 2243              	.LBE2035:
 2244              	.LBE2038:
 2245              	.LBE2055:
 2246              	.LBE2268:
 2247              	.LBB2269:
 2248              	.LBB2162:
 2249              	.LBB2141:
 2250              	.LBB2136:
 2251              	.LBB2131:
 2252 0154 0010A0E3 		mov	r1, #0
 2253              	.LBE2131:
 2254              	.LBE2136:
 2255              	.LBE2141:
 2256              	.LBE2162:
 2257              	.LBE2269:
 2258              	.LBB2270:
 2259              	.LBB2056:
 2260              	.LBB2052:
 2261              	.LBB2047:
 2262              	.LBB2048:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2263              		.loc 3 71 0
 2264 0158 002002E0 		and	r2, r2, r0
 2265              	.LVL165:
 2266              	.LBE2048:
 2267              	.LBE2047:
 2268              	.LBB2049:
 2269              	.LBB2050:
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2270              		.loc 3 83 0
 2271 015c 025025E0 		eor	r5, r5, r2
 2272              	.LVL166:
 2273              	.LBE2050:
 2274              	.LBE2049:
 2275              	.LBE2052:
 2276              	.LBE2056:
 2277              	.LBE2270:
 2278              	.LBB2271:
 2279              	.LBB2163:
 2280              	.LBB2142:
 2281              	.LBB2137:
 2282              	.LBB2132:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2283              		.loc 3 334 0
 2284 0160 958CC9E0 		smull	r8, r9, r5, ip
 2285              	.LVL167:
 2286              	.LBE2132:
 2287              	.LBE2137:
 2288              	.LBE2142:
 2289              	.LBE2163:
 2290              	.LBB2164:
 2291              	.LBB2160:
 2292              	.LBB2155:
 2293              	.LBB2154:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2294              		.loc 3 71 0
 2295 0164 05E00EE0 		and	lr, lr, r5
 2296              	.LBE2154:
 2297              	.LBE2155:
 2298              	.LBE2160:
 2299              	.LBE2164:
 2300              	.LBE2271:
 2301              	.LBB2272:
 2302              	.LBB2178:
 2303              	.LBB2177:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2304              		.loc 3 158 0
 2305 0168 00C066E2 		rsb	ip, r6, #0
 2306              	.LBE2177:
 2307              	.LBE2178:
 2308              	.LBB2179:
 2309              	.LBB2180:
 2310              	.LBB2181:
 2311              	.LBB2182:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2312              		.loc 3 71 0
 2313 016c 016046E2 		sub	r6, r6, #1
 2314              	.LBE2182:
 2315              	.LBE2181:
 2316              	.LBE2180:
 2317              	.LBE2179:
 2318              	.LBE2272:
 2319              	.LBB2273:
 2320              	.LBB2165:
 2321              	.LBB2143:
 2322              	.LBB2138:
 2323              	.LBB2133:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2324              		.loc 3 335 0
 2325 0170 000058E3 		cmp	r8, #0
 2326 0174 0020D9E2 		sbcs	r2, r9, #0
 2327              	.LBE2133:
 2328              	.LBE2138:
 2329              	.LBE2143:
 2330              	.LBE2165:
 2331              	.LBE2273:
 2332              	.LBB2274:
 2333              	.LBB2191:
 2334              	.LBB2192:
 2335              	.LBB2193:
 2336              	.LBB2194:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2337              		.loc 3 334 0
 2338 0178 B72A02E3 		movw	r2, #10935
 2339              	.LBE2194:
 2340              	.LBE2193:
 2341              	.LBE2192:
 2342              	.LBE2191:
 2343              	.LBE2274:
 2344              	.LBB2275:
 2345              	.LBB2166:
 2346              	.LBB2144:
 2347              	.LBB2139:
 2348              	.LBB2134:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2349              		.loc 3 335 0
 2350 017c 01A1A0A3 		movge	r10, #1073741824
 2351 0180 07A1A0B3 		movlt	r10, #-1073741823
 2352 0184 00B0A0A3 		movge	fp, #0
 2353 0188 00B0E0B3 		mvnlt	fp, #0
 2354              	.LVL168:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2355              		.loc 3 337 0
 2356 018c 0A8098E0 		adds	r8, r8, r10
 2357              	.LVL169:
 2358              	.LBE2134:
 2359              	.LBE2139:
 2360              	.LBE2144:
 2361              	.LBE2166:
 2362              	.LBE2275:
 2363              	.LBB2276:
 2364              	.LBB2219:
 2365              	.LBB2211:
 2366              	.LBB2203:
 2367              	.LBB2195:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2368              		.loc 3 334 0
 2369 0190 582240E3 		movt	r2, 600
 2370              	.LBE2195:
 2371              	.LBE2203:
 2372              	.LBE2211:
 2373              	.LBE2219:
 2374              	.LBE2276:
 2375              	.LBB2277:
 2376              	.LBB2167:
 2377              	.LBB2145:
 2378              	.LBB2140:
 2379              	.LBB2135:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2380              		.loc 3 337 0
 2381 0194 0B90A9E0 		adc	r9, r9, fp
 2382 0198 C90FA0E1 		asr	r0, r9, #31
 2383 019c 0201C0E3 		bic	r0, r0, #-2147483648
 2384 01a0 008098E0 		adds	r8, r8, r0
 2385 01a4 A88FA0E1 		lsr	r8, r8, #31
 2386 01a8 0190A9E0 		adc	r9, r9, r1
 2387 01ac 898088E1 		orr	r8, r8, r9, lsl #1
 2388              	.LBE2135:
 2389              	.LBE2140:
 2390              	.LBE2145:
 2391              	.LBE2167:
 2392              	.LBE2277:
 2393              	.LBB2278:
 2394              	.LBB2220:
 2395              	.LBB2212:
 2396              	.LBB2204:
 2397              	.LBB2196:
 2398 01b0 0090A0E3 		mov	r9, #0
 2399              	.LBE2196:
 2400              	.LBE2204:
 2401              	.LBE2212:
 2402              	.LBE2220:
 2403              	.LBE2278:
 2404              	.LBB2279:
 2405              	.LBB2168:
 2406              	.LBB2161:
 2407              	.LBB2156:
 2408              	.LBB2157:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2409              		.loc 3 71 0
 2410 01b4 078008E0 		and	r8, r8, r7
 2411              	.LBE2157:
 2412              	.LBE2156:
 2413              	.LBB2158:
 2414              	.LBB2159:
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2415              		.loc 3 83 0
 2416 01b8 08E02EE0 		eor	lr, lr, r8
 2417              	.LVL170:
 2418              	.LBE2159:
 2419              	.LBE2158:
 2420              	.LBE2161:
 2421              	.LBE2168:
 2422              	.LBE2279:
 2423              	.LBB2280:
 2424              	.LBB2221:
 2425              	.LBB2213:
 2426              	.LBB2205:
 2427              	.LBB2197:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2428              		.loc 3 334 0
 2429 01bc 9EA2CBE0 		smull	r10, fp, lr, r2
 2430              	.LVL171:
 2431              	.LBE2197:
 2432              	.LBE2205:
 2433              	.LBE2213:
 2434              	.LBE2221:
 2435              	.LBB2222:
 2436              	.LBB2189:
 2437              	.LBB2184:
 2438              	.LBB2183:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2439              		.loc 3 71 0
 2440 01c0 06E00EE0 		and	lr, lr, r6
 2441              	.LVL172:
 2442              	.LBE2183:
 2443              	.LBE2184:
 2444              	.LBE2189:
 2445              	.LBE2222:
 2446              	.LBB2223:
 2447              	.LBB2214:
 2448              	.LBB2206:
 2449              	.LBB2198:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2450              		.loc 3 335 0
 2451 01c4 00005AE3 		cmp	r10, #0
 2452 01c8 0020DBE2 		sbcs	r2, fp, #0
 2453              	.LBE2198:
 2454              	.LBE2206:
 2455              	.LBE2214:
 2456              	.LBE2223:
 2457              	.LBE2280:
 2458              	.LBB2281:
 2459              	.LBB2237:
 2460              	.LBB2236:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2461              		.loc 3 158 0
 2462 01cc 002063E2 		rsb	r2, r3, #0
 2463              	.LBE2236:
 2464              	.LBE2237:
 2465              	.LBE2281:
 2466              	.LBB2282:
 2467              	.LBB2224:
 2468              	.LBB2215:
 2469              	.LBB2207:
 2470              	.LBB2199:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2471              		.loc 3 335 0
 2472 01d0 0101A0A3 		movge	r0, #1073741824
 2473 01d4 0701A0B3 		movlt	r0, #-1073741823
 2474 01d8 0010A0A3 		movge	r1, #0
 2475 01dc 0010E0B3 		mvnlt	r1, #0
 2476              	.LVL173:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2477              		.loc 3 337 0
 2478 01e0 00A09AE0 		adds	r10, r10, r0
 2479              	.LVL174:
 2480              	.LBE2199:
 2481              	.LBE2207:
 2482              	.LBE2215:
 2483              	.LBE2224:
 2484              	.LBE2282:
 2485              	.LBB2283:
 2486              	.LBB2238:
 2487              	.LBB2239:
 2488              	.LBB2240:
 2489              	.LBB2241:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2490              		.loc 3 71 0
 2491 01e4 013043E2 		sub	r3, r3, #1
 2492              	.LBE2241:
 2493              	.LBE2240:
 2494              	.LBE2239:
 2495              	.LBE2238:
 2496              	.LBE2283:
 2497              	.LBB2284:
 2498              	.LBB2225:
 2499              	.LBB2216:
 2500              	.LBB2208:
 2501              	.LBB2200:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2502              		.loc 3 337 0
 2503 01e8 01B0ABE0 		adc	fp, fp, r1
 2504              	.LBE2200:
 2505              	.LBE2208:
 2506              	.LBE2216:
 2507              	.LBE2225:
 2508              	.LBE2284:
 2509              	.LBB2285:
 2510              	.LBB2250:
 2511              	.LBB2251:
 2512              	.LBB2252:
 2513              	.LBB2253:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2514              		.loc 3 334 0
 2515 01ec 111E0FE3 		movw	r1, #65041
 2516              	.LBE2253:
 2517              	.LBE2252:
 2518              	.LBE2251:
 2519              	.LBE2250:
 2520              	.LBE2285:
 2521              	.LBB2286:
 2522              	.LBB2226:
 2523              	.LBB2217:
 2524              	.LBB2209:
 2525              	.LBB2201:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2526              		.loc 3 337 0
 2527 01f0 CB8FA0E1 		asr	r8, fp, #31
 2528              	.LVL175:
 2529              	.LBE2201:
 2530              	.LBE2209:
 2531              	.LBE2217:
 2532              	.LBE2226:
 2533              	.LBE2286:
 2534              	.LBB2287:
 2535              	.LBB2263:
 2536              	.LBB2260:
 2537              	.LBB2257:
 2538              	.LBB2254:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2539              		.loc 3 334 0
 2540 01f4 0A1040E3 		movt	r1, 10
 2541              	.LBE2254:
 2542              	.LBE2257:
 2543              	.LBE2260:
 2544              	.LBE2263:
 2545              	.LBE2287:
 2546              	.LBB2288:
 2547              	.LBB2227:
 2548              	.LBB2218:
 2549              	.LBB2210:
 2550              	.LBB2202:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2551              		.loc 3 337 0
 2552 01f8 0281C8E3 		bic	r8, r8, #-2147483648
 2553 01fc 08A09AE0 		adds	r10, r10, r8
 2554 0200 AAAFA0E1 		lsr	r10, r10, #31
 2555 0204 09B0ABE0 		adc	fp, fp, r9
 2556 0208 8BA08AE1 		orr	r10, r10, fp, lsl #1
 2557 020c CBBFA0E1 		asr	fp, fp, #31
 2558              	.LBE2202:
 2559              	.LBE2210:
 2560              	.LBE2218:
 2561              	.LBE2227:
 2562              	.LBB2228:
 2563              	.LBB2190:
 2564              	.LBB2185:
 2565              	.LBB2186:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2566              		.loc 3 71 0
 2567 0210 0CA00AE0 		and	r10, r10, ip
 2568              	.LBE2186:
 2569              	.LBE2185:
 2570              	.LBB2187:
 2571              	.LBB2188:
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2572              		.loc 3 83 0
 2573 0214 0AE02EE0 		eor	lr, lr, r10
 2574              	.LVL176:
 2575              	.LBE2188:
 2576              	.LBE2187:
 2577              	.LBE2190:
 2578              	.LBE2228:
 2579              	.LBE2288:
 2580              	.LBB2289:
 2581              	.LBB2264:
 2582              	.LBB2261:
 2583              	.LBB2258:
 2584              	.LBB2255:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 2585              		.loc 3 334 0
 2586 0218 9E81C9E0 		smull	r8, r9, lr, r1
 2587              	.LVL177:
 2588              	.LBE2255:
 2589              	.LBE2258:
 2590              	.LBE2261:
 2591              	.LBE2264:
 2592              	.LBB2265:
 2593              	.LBB2248:
 2594              	.LBB2243:
 2595              	.LBB2242:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2596              		.loc 3 71 0
 2597 021c 0E3003E0 		and	r3, r3, lr
 2598              	.LBE2242:
 2599              	.LBE2243:
 2600              	.LBE2248:
 2601              	.LBE2265:
 2602              	.LBE2289:
 2603              	.LBB2290:
 2604              	.LBB2291:
 2605              	.LBB2292:
 2606              	.LBB2293:
 2607 0220 01E044E2 		sub	lr, r4, #1
 2608              	.LVL178:
 2609              	.LBE2293:
 2610              	.LBE2292:
 2611              	.LBE2291:
 2612              	.LBE2290:
 2613              	.LBB2300:
 2614              	.LBB2112:
 2615              	.LBB2110:
 2616              	.LBB2108:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2617              		.loc 3 158 0
 2618 0224 004064E2 		rsb	r4, r4, #0
 2619              	.LBE2108:
 2620              	.LBE2110:
 2621              	.LBE2112:
 2622              	.LBE2300:
 2623              	.LBB2301:
 2624              	.LBB2298:
 2625              	.LBB2295:
 2626              	.LBB2296:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2627              		.loc 3 71 0
 2628 0228 0241C4E3 		bic	r4, r4, #-2147483648
 2629              	.LBE2296:
 2630              	.LBE2295:
 2631              	.LBE2298:
 2632              	.LBE2301:
 2633              	.LBB2302:
 2634              	.LBB2266:
 2635              	.LBB2262:
 2636              	.LBB2259:
 2637              	.LBB2256:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 2638              		.loc 3 335 0
 2639 022c 000058E3 		cmp	r8, #0
 2640 0230 0010D9E2 		sbcs	r1, r9, #0
 2641 0234 0101A0A3 		movge	r0, #1073741824
 2642 0238 0701A0B3 		movlt	r0, #-1073741823
 2643 023c 0010A0A3 		movge	r1, #0
 2644 0240 0010E0B3 		mvnlt	r1, #0
 2645              	.LVL179:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 2646              		.loc 3 337 0
 2647 0244 008098E0 		adds	r8, r8, r0
 2648              	.LVL180:
 2649 0248 0190A9E0 		adc	r9, r9, r1
 2650 024c 0010A0E3 		mov	r1, #0
 2651 0250 C96FA0E1 		asr	r6, r9, #31
 2652 0254 0201C6E3 		bic	r0, r6, #-2147483648
 2653 0258 C67FA0E1 		asr	r7, r6, #31
 2654 025c 080090E0 		adds	r0, r0, r8
 2655 0260 A00FA0E1 		lsr	r0, r0, #31
 2656 0264 0910A1E0 		adc	r1, r1, r9
 2657 0268 810080E1 		orr	r0, r0, r1, lsl #1
 2658              	.LBE2256:
 2659              	.LBE2259:
 2660              	.LBE2262:
 2661              	.LBE2266:
 2662              	.LBB2267:
 2663              	.LBB2249:
 2664              	.LBB2244:
 2665              	.LBB2245:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2666              		.loc 3 71 0
 2667 026c 020000E0 		and	r0, r0, r2
 2668              	.LBE2245:
 2669              	.LBE2244:
 2670              	.LBB2246:
 2671              	.LBB2247:
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2672              		.loc 3 83 0
 2673 0270 030020E0 		eor	r0, r0, r3
 2674              	.LBE2247:
 2675              	.LBE2246:
 2676              	.LBE2249:
 2677              	.LBE2267:
 2678              	.LBE2302:
 2679              	.LBB2303:
 2680              	.LBB2299:
 2681              	.LBB2297:
 2682              	.LBB2294:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2683              		.loc 3 71 0
 2684 0274 0E0000E0 		and	r0, r0, lr
 2685              	.LBE2294:
 2686              	.LBE2297:
 2687              	.LBE2299:
 2688              	.LBE2303:
 789:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 2689              		.loc 3 789 0
 2690 0278 040020E0 		eor	r0, r0, r4
 2691 027c F88FBDE8 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2692              		.cfi_endproc
 2693              	.LFE4505:
 2694              		.cantunwind
 2695              		.fnend
 2697              		.section	.text._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode,"ax",
 2698              		.align	2
 2699              		.global	_ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode
 2700              		.syntax unified
 2701              		.arm
 2702              		.fpu neon
 2704              	_ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode:
 2705              		.fnstart
 2706              	.LFB4176:
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   const TfLiteEvalTensor* input =
 2707              		.loc 1 84 0
 2708              		.cfi_startproc
 2709              		.cfi_personality 0,__gxx_personality_v0
 2710              		.cfi_lsda 0,.LLSDA4176
 2711              		@ args = 0, pretend = 0, frame = 96
 2712              		@ frame_needed = 0, uses_anonymous_args = 0
 2713              	.LVL181:
 2714 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2715              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2716              		.cfi_def_cfa_offset 36
 2717              		.cfi_offset 4, -36
 2718              		.cfi_offset 5, -32
 2719              		.cfi_offset 6, -28
 2720              		.cfi_offset 7, -24
 2721              		.cfi_offset 8, -20
 2722              		.cfi_offset 9, -16
 2723              		.cfi_offset 10, -12
 2724              		.cfi_offset 11, -8
 2725              		.cfi_offset 14, -4
 2726              	.LBB2481:
 2727              	.LBB2482:
 2728              	.LBB2483:
 2729              		.file 4 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #define TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #include <cstdint>
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/types.h"
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace tflite {
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace micro {
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns a mutable tensor for a given input index. is_variable must be checked
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // during prepare when the full TfLiteTensor is available.
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetMutableEvalInput(const TfLiteContext* context,
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              const TfLiteNode* node,
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              int index) {
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
 2730              		.loc 4 34 0
 2731 0004 005050E2 		subs	r5, r0, #0
 2732              	.LVL182:
 2733              	.LBE2483:
 2734              	.LBE2482:
 2735              	.LBE2481:
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   const TfLiteEvalTensor* input =
 2736              		.loc 1 84 0
 2737 0008 048B2DED 		vpush.64	{d8, d9}
 2738              		.vsave {d8, d9}
 2739              		.cfi_def_cfa_offset 52
 2740              		.cfi_offset 80, -52
 2741              		.cfi_offset 81, -48
 2742              		.cfi_offset 82, -44
 2743              		.cfi_offset 83, -40
 2744              		.pad #100
 2745 000c 64D04DE2 		sub	sp, sp, #100
 2746              		.cfi_def_cfa_offset 152
 2747              	.LBB2490:
 2748              	.LBB2487:
 2749              	.LBB2484:
 2750              		.loc 4 34 0
 2751 0010 1A02000A 		beq	.L99
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 2752              		.loc 4 35 0
 2753 0014 000051E3 		cmp	r1, #0
 2754 0018 0140A0E1 		mov	r4, r1
 2755 001c 1702000A 		beq	.L99
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 2756              		.loc 4 36 0
 2757 0020 002091E5 		ldr	r2, [r1]
 2758 0024 543095E5 		ldr	r3, [r5, #84]
 2759 0028 041092E5 		ldr	r1, [r2, #4]
 2760              	.LVL183:
 2761              	.LEHB0:
 2762 002c 33FF2FE1 		blx	r3
 2763              	.LVL184:
 2764              	.LBE2484:
 2765              	.LBE2487:
 2766              	.LBE2490:
 2767              	.LBB2491:
 2768              	.LBB2492:
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given input index in a node.
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** inline const TfLiteEvalTensor* GetEvalInput(const TfLiteContext* context,
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****                                             const TfLiteNode* node, int index) {
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return GetMutableEvalInput(context, node, index);
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given output index in a node.
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetEvalOutput(const TfLiteContext* context,
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****                                        const TfLiteNode* node, int index) {
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
 2769              		.loc 4 50 0
 2770 0030 042094E5 		ldr	r2, [r4, #4]
 2771              	.LBE2492:
 2772              	.LBE2491:
 2773              	.LBB2495:
 2774              	.LBB2488:
 2775              	.LBB2485:
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 2776              		.loc 4 36 0
 2777 0034 0060A0E1 		mov	r6, r0
 2778 0038 08008DE5 		str	r0, [sp, #8]
 2779              	.LVL185:
 2780              	.LBE2485:
 2781              	.LBE2488:
 2782              	.LBE2495:
 2783              	.LBB2496:
 2784              	.LBB2493:
 2785              		.loc 4 50 0
 2786 003c 0500A0E1 		mov	r0, r5
 2787 0040 543095E5 		ldr	r3, [r5, #84]
 2788 0044 041092E5 		ldr	r1, [r2, #4]
 2789 0048 33FF2FE1 		blx	r3
 2790              	.LVL186:
 2791              	.LBE2493:
 2792              	.LBE2496:
  90:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   OpData* data = static_cast<OpData*>(node->user_data);
 2793              		.loc 1 90 0
 2794 004c 103094E5 		ldr	r3, [r4, #16]
 2795              	.LBB2497:
 2796              	.LBB2494:
 2797              		.loc 4 50 0
 2798 0050 04008DE5 		str	r0, [sp, #4]
 2799              	.LVL187:
 2800              	.LBE2494:
 2801              	.LBE2497:
  90:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   OpData* data = static_cast<OpData*>(node->user_data);
 2802              		.loc 1 90 0
 2803 0054 000053E3 		cmp	r3, #0
 2804 0058 0802000A 		beq	.L99
 2805              	.LVL188:
  93:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     switch (output->type) {
 2806              		.loc 1 93 0
 2807 005c 0840D6E5 		ldrb	r4, [r6, #8]	@ zero_extendqisi2
 2808              	.LVL189:
 2809 0060 010054E3 		cmp	r4, #1
 2810 0064 0001000A 		beq	.L219
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     switch (output->type) {
 2811              		.loc 1 108 0
 2812 0068 090054E3 		cmp	r4, #9
 2813 006c 1000000A 		beq	.L220
 2814              	.L131:
 128:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                        TfLiteTypeGetName(input->type),
 2815              		.loc 1 128 0
 2816 0070 0400A0E1 		mov	r0, r4
 2817 0074 144095E5 		ldr	r4, [r5, #20]
 2818 0078 FEFFFFEB 		bl	TfLiteTypeGetName
 2819              	.LVL190:
 2820 007c 04309DE5 		ldr	r3, [sp, #4]
 2821 0080 0060A0E1 		mov	r6, r0
 2822 0084 0800D3E5 		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 2823 0088 FEFFFFEB 		bl	TfLiteTypeGetName
 2824              	.LVL191:
 2825 008c 001000E3 		movw	r1, #:lower16:.LC11
 2826 0090 0030A0E1 		mov	r3, r0
 2827 0094 0620A0E1 		mov	r2, r6
 2828 0098 0500A0E1 		mov	r0, r5
 2829 009c 001040E3 		movt	r1, #:upper16:.LC11
 2830 00a0 34FF2FE1 		blx	r4
 2831              	.LVL192:
 131:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****   }
 2832              		.loc 1 131 0
 2833 00a4 0100A0E3 		mov	r0, #1
 134:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 2834              		.loc 1 134 0
 2835 00a8 64D08DE2 		add	sp, sp, #100
 2836              		.cfi_remember_state
 2837              		.cfi_def_cfa_offset 52
 2838              		@ sp needed
 2839 00ac 048BBDEC 		vldm	sp!, {d8-d9}
 2840              		.cfi_restore 82
 2841              		.cfi_restore 83
 2842              		.cfi_restore 80
 2843              		.cfi_restore 81
 2844              		.cfi_def_cfa_offset 36
 2845 00b0 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2846              	.LVL193:
 2847              	.L220:
 2848              		.cfi_restore_state
 109:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****       case kTfLiteInt8: {
 2849              		.loc 1 109 0
 2850 00b4 0820D0E5 		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 2851 00b8 090052E3 		cmp	r2, #9
 2852 00bc EBFFFF1A 		bne	.L131
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             data->input_zero_point, data->input_range_radius,
 2853              		.loc 1 111 0
 2854 00c0 001093E5 		ldr	r1, [r3]
 114:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             tflite::micro::GetTensorData<int8_t>(input),
 2855              		.loc 1 114 0
 2856 00c4 08209DE5 		ldr	r2, [sp, #8]
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             data->input_zero_point, data->input_range_radius,
 2857              		.loc 1 111 0
 2858 00c8 080093E5 		ldr	r0, [r3, #8]
 2859 00cc 10108DE5 		str	r1, [sp, #16]
 114:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             tflite::micro::GetTensorData<int8_t>(input),
 2860              		.loc 1 114 0
 2861 00d0 042092E5 		ldr	r2, [r2, #4]
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             data->input_zero_point, data->input_range_radius,
 2862              		.loc 1 111 0
 2863 00d4 041093E5 		ldr	r1, [r3, #4]
 113:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             NumElements(input->dims),
 2864              		.loc 1 113 0
 2865 00d8 0C3093E5 		ldr	r3, [r3, #12]
 2866              	.LVL194:
 114:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             tflite::micro::GetTensorData<int8_t>(input),
 2867              		.loc 1 114 0
 2868 00dc 1C208DE5 		str	r2, [sp, #28]
 2869              	.LVL195:
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             data->input_zero_point, data->input_range_radius,
 2870              		.loc 1 111 0
 2871 00e0 24108DE5 		str	r1, [sp, #36]
 2872              	.LBB2498:
 2873              	.LBB2499:
 2874              	.LBB2500:
 2875              		.file 5 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #define TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #include <stdint.h>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #include <limits>
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** namespace tflite {
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // A fair number of functions in this header have historically been inline.
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // It is ok to change functions to not be inline if the latency with
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // benchmark_model for MobileNet + MobileBERT is unaffected. If such a change is
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // made, move the newly non-inlined function declarations to the top of this
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // header file.
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetInput(context, node, kMyTensorIdx);
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetInput(const TfLiteContext* context,
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                              const TfLiteNode* node, int index);
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetInput` but returns boolean and uses output argument for tensor.
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     GetInputSafe(context, node, kMyTensorIdx, &my_tensor));
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                           int index, const TfLiteTensor** tensor);
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetVariableInput(context, node, kMyTensorIdx);
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                                int index);
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOutput(context, node, kMyTensorIdx);
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                         int index);
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetOutput` but returns boolean and uses output argument for tensor.
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     GetOutputSafe(context, node, kMyTensorIdx, &my_tensor));
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                            int index, TfLiteTensor** tensor);
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOptionalInputTensor(context, node, kIdx);
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Deprecated. GetInput has the same functionality.
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                                            const TfLiteNode* node, int index);
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetTemporary(context, node, kMyTensorIdx);
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                            int index);
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetTemporary` but returns boolean and uses output argument for
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     GetTemporarySafe(context, node, kMyTensorIdx,
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                               const TfLiteNode* node, int index,
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                               TfLiteTensor** tensor);
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetIntermediates(context, node, kMyTensorIdx);
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                                      const TfLiteNode* node, int index);
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetIntermediates` but returns boolean and uses output argument for
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     GetIntermediatesSafe(context, node, kMyTensorIdx,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                                   const TfLiteNode* node, int index,
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                                   TfLiteTensor** tensor);
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** inline int NumDimensions(const TfLiteTensor* t) { return t->dims->size; }
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****   return t->dims->data[dim];
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** }
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** inline int NumInputs(const TfLiteNode* node) { return node->inputs->size; }
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** inline int NumIntermediates(const TfLiteNode* node) {
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****   return node->intermediates->size;
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** }
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** inline int64_t NumElements(const TfLiteIntArray* dims) {
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****   int64_t count = 1;
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****   for (int i = 0; i < dims->size; ++i) {
 2876              		.loc 5 163 0
 2877 00e4 0210A0E1 		mov	r1, r2
 2878 00e8 002092E5 		ldr	r2, [r2]
 2879              	.LVL196:
 2880              	.LBE2500:
 2881              	.LBE2499:
 2882              	.LBE2498:
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             data->input_zero_point, data->input_range_radius,
 2883              		.loc 1 111 0
 2884 00ec 14008DE5 		str	r0, [sp, #20]
 113:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             NumElements(input->dims),
 2885              		.loc 1 113 0
 2886 00f0 18308DE5 		str	r3, [sp, #24]
 2887              	.LBB2505:
 2888              	.LBB2503:
 2889              	.LBB2501:
 2890              		.loc 5 163 0
 2891 00f4 000052E3 		cmp	r2, #0
 2892 00f8 20208DE5 		str	r2, [sp, #32]
 2893 00fc C80100DA 		ble	.L134
 2894 0100 080052E3 		cmp	r2, #8
 2895 0104 C10100DA 		ble	.L171
 2896 0108 093042E2 		sub	r3, r2, #9
 2897 010c 0080A0E3 		mov	r8, #0
 2898 0110 A4E081E2 		add	lr, r1, #164
 2899 0114 0730C3E3 		bic	r3, r3, #7
 2900 0118 0100A0E3 		mov	r0, #1
 2901 011c 0010A0E3 		mov	r1, #0
 2902              	.LVL197:
 2903 0120 08C0A0E1 		mov	ip, r8
 2904 0124 083083E2 		add	r3, r3, #8
 2905 0128 0C308DE5 		str	r3, [sp, #12]
 2906              	.LVL198:
 2907              	.L136:
 164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 2908              		.loc 5 164 0
 2909 012c A0801EE5 		ldr	r8, [lr, #-160]
 2910 0130 08C08CE2 		add	ip, ip, #8
 2911 0134 0C309DE5 		ldr	r3, [sp, #12]
 2912 0138 9C601EE5 		ldr	r6, [lr, #-156]
 2913 013c 98401EE5 		ldr	r4, [lr, #-152]
 2914 0140 03005CE1 		cmp	ip, r3
 2915 0144 980103E0 		mul	r3, r8, r1
 2916 0148 C8BFA0E1 		asr	fp, r8, #31
 2917 014c 94501EE5 		ldr	r5, [lr, #-148]
 2918 0150 988089E0 		umull	r8, r9, r8, r0
 2919 0154 8C201EE5 		ldr	r2, [lr, #-140]
 2920 0158 00F0DEF5 		pld	[lr]
 2921 015c 20E08EE2 		add	lr, lr, #32
 2922 0160 903B23E0 		mla	r3, r0, fp, r3
 2923 0164 C6BFA0E1 		asr	fp, r6, #31
 2924 0168 960881E0 		umull	r0, r1, r6, r8
 2925              	.LVL199:
 2926 016c 099083E0 		add	r9, r3, r9
 2927              	.LVL200:
 2928 0170 B0301EE5 		ldr	r3, [lr, #-176]
 2929 0174 960907E0 		mul	r7, r6, r9
 2930 0178 C49FA0E1 		asr	r9, r4, #31
 2931 017c 987B27E0 		mla	r7, r8, fp, r7
 2932 0180 011087E0 		add	r1, r7, r1
 2933              	.LVL201:
 2934 0184 946087E0 		umull	r6, r7, r4, r0
 2935 0188 94010AE0 		mul	r10, r4, r1
 2936 018c A8101EE5 		ldr	r1, [lr, #-168]
 2937 0190 90A92AE0 		mla	r10, r0, r9, r10
 2938 0194 A4001EE5 		ldr	r0, [lr, #-164]
 2939              	.LVL202:
 2940 0198 C59FA0E1 		asr	r9, r5, #31
 2941 019c 07708AE0 		add	r7, r10, r7
 2942              	.LVL203:
 2943 01a0 950708E0 		mul	r8, r5, r7
 2944 01a4 C37FA0E1 		asr	r7, r3, #31
 2945 01a8 954685E0 		umull	r4, r5, r5, r6
 2946 01ac 968928E0 		mla	r8, r6, r9, r8
 2947 01b0 C29FA0E1 		asr	r9, r2, #31
 2948 01b4 055088E0 		add	r5, r8, r5
 2949              	.LVL204:
 2950 01b8 93050AE0 		mul	r10, r3, r5
 2951 01bc 94A72AE0 		mla	r10, r4, r7, r10
 2952 01c0 934485E0 		umull	r4, r5, r3, r4
 2953              	.LVL205:
 2954 01c4 C17FA0E1 		asr	r7, r1, #31
 2955 01c8 05508AE0 		add	r5, r10, r5
 2956              	.LVL206:
 2957 01cc 920506E0 		mul	r6, r2, r5
 2958 01d0 C05FA0E1 		asr	r5, r0, #31
 2959 01d4 922483E0 		umull	r2, r3, r2, r4
 2960 01d8 946926E0 		mla	r6, r4, r9, r6
 2961 01dc 033086E0 		add	r3, r6, r3
 2962              	.LVL207:
 2963 01e0 910304E0 		mul	r4, r1, r3
 2964 01e4 924724E0 		mla	r4, r2, r7, r4
 2965 01e8 912283E0 		umull	r2, r3, r1, r2
 2966              	.LVL208:
 2967 01ec 033084E0 		add	r3, r4, r3
 2968              	.LVL209:
 2969 01f0 900303E0 		mul	r3, r0, r3
 2970 01f4 900281E0 		umull	r0, r1, r0, r2
 2971 01f8 923522E0 		mla	r2, r2, r5, r3
 2972              	.LVL210:
 2973 01fc 011082E0 		add	r1, r2, r1
 2974              	.LVL211:
 2975 0200 C9FFFF1A 		bne	.L136
 2976 0204 0C80A0E1 		mov	r8, ip
 2977 0208 20C09DE5 		ldr	ip, [sp, #32]
 2978              	.LVL212:
 2979              	.L135:
 2980 020c 1C309DE5 		ldr	r3, [sp, #28]
 2981 0210 018088E2 		add	r8, r8, #1
 2982 0214 08E183E0 		add	lr, r3, r8, lsl #2
 2983 0218 000000EA 		b	.L137
 2984              	.LVL213:
 2985              	.L221:
 2986 021c 018088E2 		add	r8, r8, #1
 2987              	.LVL214:
 2988              	.L137:
 2989 0220 04209EE4 		ldr	r2, [lr], #4
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 2990              		.loc 5 163 0
 2991 0224 08005CE1 		cmp	ip, r8
 2992              		.loc 5 164 0
 2993 0228 C25FA0E1 		asr	r5, r2, #31
 2994 022c 900503E0 		mul	r3, r0, r5
 2995 0230 923123E0 		mla	r3, r2, r1, r3
 2996 0234 900281E0 		umull	r0, r1, r0, r2
 2997              	.LVL215:
 2998 0238 011083E0 		add	r1, r3, r1
 2999              	.LVL216:
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 3000              		.loc 5 163 0
 3001 023c F6FFFFCA 		bgt	.L221
 3002              	.LVL217:
 3003              	.LBE2501:
 3004              	.LBE2503:
 3005              	.LBE2505:
 3006              	.LBB2506:
 3007              	.LBB2507:
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns data for a TfLiteEvalTensor struct.
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** T* GetTensorData(TfLiteEvalTensor* tensor) {
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns const data for a TfLiteEvalTensor struct.
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** const T* GetTensorData(const TfLiteEvalTensor* tensor) {
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(tensor != nullptr);
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 3008              		.loc 4 63 0
 3009 0240 08309DE5 		ldr	r3, [sp, #8]
 3010              	.LBE2507:
 3011              	.LBE2506:
 3012              	.LBB2511:
 3013              	.LBB2512:
 3014              	.LBB2513:
 3015              		.file 6 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_INTEGER_OPS_LOGISTIC_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_INTEGER_OPS_LOGISTIC_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** #include <limits>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** #include "tensorflow/lite/kernels/internal/common.h"
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** 
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** namespace tflite {
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** namespace reference_integer_ops {
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** 
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** inline void Logistic(int32_t input_zero_point, int32_t input_range_radius,
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****                      int32_t input_multiplier, int32_t input_left_shift,
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****                      int32_t input_size, const int8_t* input_data,
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****                      int8_t* output_data) {
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****   // Integer bits must be in sync with Prepare() function.
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****   static constexpr int32_t kInputIntegerBits = 4;
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****   static constexpr int32_t kOutputIntegerBits = 8;
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****   static constexpr int8_t kMinInt8 = std::numeric_limits<int8_t>::min();
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****   static constexpr int8_t kMaxInt8 = std::numeric_limits<int8_t>::max();
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****   static constexpr int32_t kOutputZeroPoint = -128;
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** 
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****   for (int i = 0; i < input_size; ++i) {
 3016              		.loc 6 35 0
 3017 0244 000050E3 		cmp	r0, #0
 3018              	.LBE2513:
 3019              	.LBE2512:
 3020              	.LBE2511:
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             data->input_zero_point, data->input_range_radius,
 3021              		.loc 1 111 0
 3022 0248 0060A0E1 		mov	r6, r0
 3023              	.LBB2676:
 3024              	.LBB2508:
 3025              		.loc 4 63 0
 3026 024c 007093E5 		ldr	r7, [r3]
 3027              	.LBE2508:
 3028              	.LBE2676:
 3029              	.LBB2677:
 3030              	.LBB2678:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 3031              		.loc 4 56 0
 3032 0250 04309DE5 		ldr	r3, [sp, #4]
 3033 0254 004093E5 		ldr	r4, [r3]
 3034              	.LVL218:
 3035              	.LBE2678:
 3036              	.LBE2677:
 3037              	.LBB2680:
 3038              	.LBB2672:
 3039              	.LBB2668:
 3040              		.loc 6 35 0
 3041 0258 770000DA 		ble	.L147
 3042              	.L138:
 3043              	.LVL219:
 3044 025c 18109DE5 		ldr	r1, [sp, #24]
 3045 0260 017047E2 		sub	r7, r7, #1
 3046              	.LVL220:
 3047              	.LBB2514:
 3048              	.LBB2515:
 3049              	.LBB2516:
 3050              	.LBB2517:
 3051              	.LBB2518:
 3052              	.LBB2519:
 3053              	.LBB2520:
 3054              	.LBB2521:
 360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType zero = Dup<IntegerType>(0);
 3055              		.loc 3 360 0
 3056 0264 7D0BDFED 		vldr.64	d16, .L229	@ int
 3057              	.LBB2522:
 3058              	.LBB2523:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3059              		.loc 3 141 0
 3060 0268 0050A0E3 		mov	r5, #0
 3061 026c 000051E3 		cmp	r1, #0
 3062              	.LBE2523:
 3063              	.LBE2522:
 3064              	.LBE2521:
 3065              	.LBE2520:
 3066              		.file 7 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #ifndef ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #ifdef GEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #define ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #endif
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #endif
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #include <functional>
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #include "third_party/gemmlowp/fixedpoint/fixedpoint.h"
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/optimized/neon_check.h"
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/types.h"
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** namespace tflite {
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** constexpr int kReverseShift = -1;
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline void GetActivationMinMax(FusedActivationFunctionType ac,
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_min,
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_max) {
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   switch (ac) {
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kNone:
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = std::numeric_limits<float>::lowest();
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       break;
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu:
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       break;
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu1:
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = -1.f;
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 1.f;
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       break;
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu6:
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 6.f;
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       break;
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   }
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** template <typename T>
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline T ActivationFunctionWithMinMax(T x, T output_activation_min,
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                       T output_activation_max) {
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using std::max;
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using std::min;
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return min(max(x, output_activation_min), output_activation_max);
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** // Legacy function, left for compatibility only.
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** template <FusedActivationFunctionType Ac>
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** float ActivationFunction(float x) {
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   float output_activation_min, output_activation_max;
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   GetActivationMinMax(Ac, &output_activation_min, &output_activation_max);
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return ActivationFunctionWithMinMax(x, output_activation_min,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                       output_activation_max);
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                          const float* bias_data, int array_size,
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                          float* array_data) {
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   // Note: see b/132215220: in May 2019 we thought it would be OK to replace
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   // this with the Eigen one-liner:
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   //   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max).
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   // This turned out to severely regress performance: +4ms (i.e. 8%) on
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   // MobileNet v2 / 1.0 / 224. So we keep custom NEON code for now.
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   TFLITE_DCHECK_EQ((array_size % bias_size), 0);
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #ifdef USE_NEON
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   float* array_ptr = array_data;
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   float* array_end_ptr = array_ptr + array_size;
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_min_vec = vdupq_n_f32(clamp_min);
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_max_vec = vdupq_n_f32(clamp_max);
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   for (; array_ptr != array_end_ptr; array_ptr += bias_size) {
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     int i = 0;
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 16; i += 16) {
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto b0 = vld1q_f32(bias_data + i);
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto b1 = vld1q_f32(bias_data + i + 4);
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto b2 = vld1q_f32(bias_data + i + 8);
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto b3 = vld1q_f32(bias_data + i + 12);
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto a0 = vld1q_f32(array_ptr + i);
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto a1 = vld1q_f32(array_ptr + i + 4);
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto a2 = vld1q_f32(array_ptr + i + 8);
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto a3 = vld1q_f32(array_ptr + i + 12);
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto x0 = vaddq_f32(a0, b0);
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto x1 = vaddq_f32(a1, b1);
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto x2 = vaddq_f32(a2, b2);
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto x3 = vaddq_f32(a3, b3);
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x0 = vmaxq_f32(clamp_min_vec, x0);
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x1 = vmaxq_f32(clamp_min_vec, x1);
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x2 = vmaxq_f32(clamp_min_vec, x2);
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x3 = vmaxq_f32(clamp_min_vec, x3);
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x0 = vminq_f32(clamp_max_vec, x0);
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x1 = vminq_f32(clamp_max_vec, x1);
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x2 = vminq_f32(clamp_max_vec, x2);
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x3 = vminq_f32(clamp_max_vec, x3);
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x0);
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 4, x1);
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 8, x2);
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 12, x3);
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     }
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 4; i += 4) {
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto b = vld1q_f32(bias_data + i);
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto a = vld1q_f32(array_ptr + i);
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto x = vaddq_f32(a, b);
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x = vmaxq_f32(clamp_min_vec, x);
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x = vminq_f32(clamp_max_vec, x);
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x);
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     }
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     for (; i < bias_size; i++) {
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       array_ptr[i] = ActivationFunctionWithMinMax(array_ptr[i] + bias_data[i],
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                                   clamp_min, clamp_max);
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     }
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   }
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #else  // not NEON
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   for (int array_offset = 0; array_offset < array_size;
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****        array_offset += bias_size) {
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     for (int i = 0; i < bias_size; i++) {
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       array_data[array_offset + i] = ActivationFunctionWithMinMax(
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****           array_data[array_offset + i] + bias_data[i], clamp_min, clamp_max);
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     }
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   }
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #endif
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierSmallerThanOneExp(
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       SaturatingRoundingDoublingHighMul(x, quantized_multiplier), -left_shift);
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierGreaterThanOne(
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return SaturatingRoundingDoublingHighMul(x * (1 << left_shift),
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                            quantized_multiplier);
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplier(int32_t x,
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                              int32_t quantized_multiplier,
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                              int shift) {
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 3067              		.loc 7 162 0
 3068 0270 009061E2 		rsb	r9, r1, #0
 3069 0274 0090A0C3 		movgt	r9, #0
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 3070              		.loc 7 161 0
 3071 0278 C11FC1E1 		bic	r1, r1, r1, asr #31
 3072              	.LBB2546:
 3073              	.LBB2542:
 3074              	.LBB2527:
 3075              	.LBB2524:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3076              		.loc 3 141 0
 3077 027c 04908DE5 		str	r9, [sp, #4]
 3078              	.LBE2524:
 3079              	.LBE2527:
 360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType zero = Dup<IntegerType>(0);
 3080              		.loc 3 360 0
 3081 0280 909B01EE 		vmov.32	d17[0], r9
 3082              	.LBE2542:
 3083              	.LBE2546:
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 3084              		.loc 7 161 0
 3085 0284 18108DE5 		str	r1, [sp, #24]
 3086              	.LVL221:
 3087              	.LBB2547:
 3088              	.LBB2543:
 360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType zero = Dup<IntegerType>(0);
 3089              		.loc 3 360 0
 3090 0288 A00471F3 		vshl.u64	d16, d16, d17
 3091              	.LBB2528:
 3092              	.LBB2525:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3093              		.loc 3 141 0
 3094 028c 10909DE5 		ldr	r9, [sp, #16]
 3095              	.LBE2525:
 3096              	.LBE2528:
 360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType zero = Dup<IntegerType>(0);
 3097              		.loc 3 360 0
 3098 0290 302B53EC 		vmov	r2, r3, d16	@ int
 3099 0294 013042E2 		sub	r3, r2, #1
 3100 0298 1C308DE5 		str	r3, [sp, #28]
 3101              	.LBB2529:
 3102              	.LBB2526:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3103              		.loc 3 141 0
 3104 029c C330A0E1 		asr	r3, r3, #1
 3105 02a0 20308DE5 		str	r3, [sp, #32]
 3106 02a4 24309DE5 		ldr	r3, [sp, #36]
 3107 02a8 008063E2 		rsb	r8, r3, #0
 3108 02ac 03A0A0E1 		mov	r10, r3
 3109 02b0 050000EA 		b	.L148
 3110              	.LVL222:
 3111              	.L222:
 3112              	.LBE2526:
 3113              	.LBE2529:
 3114              	.LBE2543:
 3115              	.LBE2547:
 3116              	.LBE2519:
 3117              	.LBE2518:
 3118              	.LBE2517:
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****     const int32_t input =
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****         static_cast<int32_t>(input_data[i]) - input_zero_point;
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****     if (input <= -input_range_radius) {
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       output_data[i] = kMinInt8;
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****     } else if (input >= input_range_radius) {
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       output_data[i] = kMaxInt8;
 3119              		.loc 6 41 0
 3120 02b4 7F30A0E3 		mov	r3, #127
 3121 02b8 0030C4E5 		strb	r3, [r4]
 3122              	.L140:
 3123              	.LBE2516:
 3124              	.LBE2515:
 3125              	.LBE2514:
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****     const int32_t input =
 3126              		.loc 6 35 0
 3127 02bc 015085E2 		add	r5, r5, #1
 3128              	.LVL223:
 3129 02c0 014084E2 		add	r4, r4, #1
 3130 02c4 060055E1 		cmp	r5, r6
 3131 02c8 5B0000AA 		bge	.L147
 3132              	.LVL224:
 3133              	.L148:
 3134              	.LBB2664:
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****     if (input <= -input_range_radius) {
 3135              		.loc 6 37 0
 3136 02cc D130F7E1 		ldrsb	r3, [r7, #1]!
 3137 02d0 093043E0 		sub	r3, r3, r9
 3138              	.LVL225:
 3139              	.LBB2660:
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       output_data[i] = kMinInt8;
 3140              		.loc 6 38 0
 3141 02d4 080053E1 		cmp	r3, r8
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****     } else if (input >= input_range_radius) {
 3142              		.loc 6 39 0
 3143 02d8 7F30E0D3 		mvnle	r3, #127
 3144              	.LVL226:
 3145 02dc 0030C4D5 		strble	r3, [r4]
 3146              	.LVL227:
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       output_data[i] = kMinInt8;
 3147              		.loc 6 38 0
 3148 02e0 F5FFFFDA 		ble	.L140
 3149              	.LBB2656:
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       output_data[i] = kMaxInt8;
 3150              		.loc 6 40 0
 3151 02e4 03005AE1 		cmp	r10, r3
 3152 02e8 F1FFFFDA 		ble	.L222
 3153              	.LVL228:
 3154              	.LBB2652:
 3155              	.LBB2559:
 3156              	.LBB2556:
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 3157              		.loc 7 163 0
 3158 02ec 18209DE5 		ldr	r2, [sp, #24]
 3159              	.LBB2548:
 3160              	.LBB2549:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3161              		.loc 3 334 0
 3162 02f0 14009DE5 		ldr	r0, [sp, #20]
 3163              	.LBE2549:
 3164              	.LBE2548:
 3165              		.loc 7 163 0
 3166 02f4 1312A0E1 		lsl	r1, r3, r2
 3167              	.LVL229:
 3168              	.LBB2552:
 3169              	.LBB2550:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 3170              		.loc 3 334 0
 3171 02f8 9120C3E0 		smull	r2, r3, r1, r0
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 3172              		.loc 3 331 0
 3173 02fc 010050E1 		cmp	r0, r1
 3174 0300 02015103 		cmpeq	r1, #-2147483648
 3175 0304 01C0A003 		moveq	ip, #1
 3176 0308 00C0A013 		movne	ip, #0
 3177              	.LVL230:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 3178              		.loc 3 335 0
 3179 030c 000052E3 		cmp	r2, #0
 3180 0310 0010D3E2 		sbcs	r1, r3, #0
 3181              	.LVL231:
 3182 0314 1B0100BA 		blt	.L172
 3183 0318 0101A0E3 		mov	r0, #1073741824
 3184 031c 0010A0E3 		mov	r1, #0
 3185              	.L142:
 3186              	.LVL232:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3187              		.loc 3 338 0
 3188 0320 00005CE3 		cmp	ip, #0
 3189 0324 1501001A 		bne	.L223
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 3190              		.loc 3 337 0
 3191 0328 020090E0 		adds	r0, r0, r2
 3192              	.LVL233:
 3193 032c 0310A1E0 		adc	r1, r1, r3
 3194 0330 0030A0E3 		mov	r3, #0
 3195              	.LVL234:
 3196 0334 C12FA0E1 		asr	r2, r1, #31
 3197              	.LVL235:
 3198 0338 0221C2E3 		bic	r2, r2, #-2147483648
 3199 033c 002092E0 		adds	r2, r2, r0
 3200 0340 A22FA0E1 		lsr	r2, r2, #31
 3201 0344 0130A3E0 		adc	r3, r3, r1
 3202 0348 832082E1 		orr	r2, r2, r3, lsl #1
 3203              	.L153:
 3204              	.LVL236:
 3205              	.LBE2550:
 3206              	.LBE2552:
 3207              	.LBB2553:
 3208              	.LBB2544:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 3209              		.loc 3 359 0
 3210 034c 04309DE5 		ldr	r3, [sp, #4]
 3211 0350 1F0053E3 		cmp	r3, #31
 3212 0354 4A0100CA 		bgt	.L224
 3213              	.LBB2530:
 3214              	.LBB2531:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3215              		.loc 3 95 0
 3216 0358 20309DE5 		ldr	r3, [sp, #32]
 3217              	.LBE2531:
 3218              	.LBE2530:
 3219              	.LBB2533:
 3220              	.LBB2534:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3221              		.loc 3 71 0
 3222 035c 1C009DE5 		ldr	r0, [sp, #28]
 3223              	.LBE2534:
 3224              	.LBE2533:
 3225              	.LBB2536:
 3226              	.LBB2532:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3227              		.loc 3 95 0
 3228 0360 A21F83E0 		add	r1, r3, r2, lsr #31
 3229              	.LBE2532:
 3230              	.LBE2536:
 3231              	.LBB2537:
 3232              	.LBB2538:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3233              		.loc 3 141 0
 3234 0364 04309DE5 		ldr	r3, [sp, #4]
 3235 0368 5233A0E1 		asr	r3, r2, r3
 3236              	.LBE2538:
 3237              	.LBE2537:
 3238              	.LBB2539:
 3239              	.LBB2535:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3240              		.loc 3 71 0
 3241 036c 002002E0 		and	r2, r2, r0
 3242              	.LBE2535:
 3243              	.LBE2539:
 3244              	.LBB2540:
 3245              	.LBB2541:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3246              		.loc 3 95 0
 3247 0370 010052E1 		cmp	r2, r1
 3248 0374 0300A0D1 		movle	r0, r3
 3249 0378 010083C2 		addgt	r0, r3, #1
 3250              	.LVL237:
 3251              	.LBE2541:
 3252              	.LBE2540:
 3253              	.LBE2544:
 3254              	.LBE2553:
 3255              	.LBE2556:
 3256              	.LBE2559:
 3257              	.LBB2560:
 3258              	.LBB2561:
 3259              	.LBB2562:
 3260              	.LBB2563:
 3261              	.LBB2564:
 3262              	.LBB2565:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3263              		.loc 3 158 0
 3264 037c 000050E3 		cmp	r0, #0
 3265 0380 030100DA 		ble	.L225
 3266 0384 0030A0E3 		mov	r3, #0
 3267 0388 0020E0E3 		mvn	r2, #0
 3268 038c 02B0A0E1 		mov	fp, r2
 3269 0390 03C0A0E1 		mov	ip, r3
 3270 0394 0310A0E1 		mov	r1, r3
 3271              	.LVL238:
 3272              	.L144:
 3273              	.LBE2565:
 3274              	.LBE2564:
 3275              	.LBE2563:
 3276              	.LBE2562:
 3277              	.LBB2569:
 3278              	.LBB2570:
 3279              	.LBB2571:
 3280              	.LBB2572:
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3281              		.loc 3 83 0
 3282 0398 0C0020E0 		eor	r0, r0, ip
 3283              	.LVL239:
 3284 039c 10308DE5 		str	r3, [sp, #16]
 3285              	.LBE2572:
 3286              	.LBE2571:
 3287              	.LBE2570:
 3288              	.LBE2569:
 3289              	.LBB2573:
 3290              	.LBB2574:
 863:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 864:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns logistic(x) = 1 / (1 + exp(-x)) for x > 0.
 865:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType, int tIntegerBits>
 866:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** FixedPoint<tRawType, 0> logistic_on_positive_values(
 867:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     FixedPoint<tRawType, tIntegerBits> a) {
 868:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return one_over_one_plus_x_for_x_in_0_1(exp_on_negative_values(-a));
 3291              		.loc 3 868 0
 3292 03a0 000060E2 		rsb	r0, r0, #0
 3293              	.LVL240:
 3294 03a4 0C108DE5 		str	r1, [sp, #12]
 3295 03a8 08208DE5 		str	r2, [sp, #8]
 3296 03ac FEFFFFEB 		bl	_ZN8gemmlowp22exp_on_negative_valuesIlLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
 3297              	.LVL241:
 3298 03b0 FEFFFFEB 		bl	_ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_
 3299              	.LVL242:
 3300              	.LBE2574:
 3301              	.LBE2573:
 3302              	.LBB2575:
 3303              	.LBB2576:
 3304              	.LBB2577:
 3305              	.LBB2578:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3306              		.loc 3 71 0
 3307 03b4 0C109DE5 		ldr	r1, [sp, #12]
 3308              	.LBE2578:
 3309              	.LBE2577:
 3310              	.LBE2576:
 3311              	.LBE2575:
 3312              	.LBB2588:
 3313              	.LBB2589:
 3314              	.LBB2590:
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3315              		.loc 3 106 0
 3316 03b8 02C1E0E3 		mvn	ip, #-2147483648
 3317              	.LBE2590:
 3318              	.LBE2589:
 3319              	.LBE2588:
 3320              	.LBB2593:
 3321              	.LBB2585:
 3322              	.LBB2580:
 3323              	.LBB2581:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3324              		.loc 3 71 0
 3325 03bc 00B00BE0 		and	fp, fp, r0
 3326              	.LVL243:
 3327              	.LBE2581:
 3328              	.LBE2580:
 3329              	.LBE2585:
 3330              	.LBE2593:
 3331              	.LBB2594:
 3332              	.LBB2595:
 3333              	.LBB2596:
 3334              	.LBB2597:
 3335 03c0 08209DE5 		ldr	r2, [sp, #8]
 3336              	.LBE2597:
 3337              	.LBE2596:
 3338              	.LBE2595:
 3339              	.LBE2594:
 3340              	.LBB2606:
 3341              	.LBB2592:
 3342              	.LBB2591:
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3343              		.loc 3 106 0
 3344 03c4 00004CE0 		sub	r0, ip, r0
 3345              	.LVL244:
 3346              	.LBE2591:
 3347              	.LBE2592:
 3348              	.LBE2606:
 3349              	.LBB2607:
 3350              	.LBB2604:
 3351              	.LBB2599:
 3352              	.LBB2600:
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3353              		.loc 3 83 0
 3354 03c8 10309DE5 		ldr	r3, [sp, #16]
 3355              	.LBE2600:
 3356              	.LBE2599:
 3357              	.LBE2604:
 3358              	.LBE2607:
 3359              	.LBB2608:
 3360              	.LBB2586:
 3361              	.LBB2582:
 3362              	.LBB2579:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3363              		.loc 3 71 0
 3364 03cc 001001E0 		and	r1, r1, r0
 3365              	.LBE2579:
 3366              	.LBE2582:
 3367              	.LBE2586:
 3368              	.LBE2608:
 3369              	.LBE2561:
 3370              	.LBE2560:
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****     } else {
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       const int32_t input_in_q4 = MultiplyByQuantizedMultiplier(
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****           input, input_multiplier, input_left_shift);
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       using FixedPoint4 = gemmlowp::FixedPoint<int32_t, kInputIntegerBits>;
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       const int32_t output_in_q0 =
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****           gemmlowp::logistic(FixedPoint4::FromRaw(input_in_q4)).raw();
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h **** 
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       // Rescale and downcast.
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       using gemmlowp::RoundingDivideByPOT;
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       int32_t output_in_q23 =
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****           RoundingDivideByPOT(output_in_q0, 31 - kOutputIntegerBits);
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       output_in_q23 = std::min(std::max(output_in_q23 + kOutputZeroPoint,
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****                                         static_cast<int32_t>(kMinInt8)),
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****                                static_cast<int32_t>(kMaxInt8));
 3371              		.loc 6 55 0
 3372 03d0 7FC0E0E3 		mvn	ip, #127
 3373              	.LBB2623:
 3374              	.LBB2620:
 3375              	.LBB2609:
 3376              	.LBB2587:
 3377              	.LBB2583:
 3378              	.LBB2584:
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3379              		.loc 3 83 0
 3380 03d4 0B1021E0 		eor	r1, r1, fp
 3381              	.LVL245:
 3382              	.LBE2584:
 3383              	.LBE2583:
 3384              	.LBE2587:
 3385              	.LBE2609:
 3386              	.LBE2620:
 3387              	.LBE2623:
 3388              		.loc 6 55 0
 3389 03d8 30C08DE5 		str	ip, [sp, #48]
 3390              	.LBB2624:
 3391              	.LBB2621:
 3392              	.LBB2610:
 3393              	.LBB2605:
 3394              	.LBB2602:
 3395              	.LBB2598:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3396              		.loc 3 71 0
 3397 03dc 012002E0 		and	r2, r2, r1
 3398              	.LBE2598:
 3399              	.LBE2602:
 3400              	.LBB2603:
 3401              	.LBB2601:
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3402              		.loc 3 83 0
 3403 03e0 023023E0 		eor	r3, r3, r2
 3404              	.LVL246:
 3405              	.LBE2601:
 3406              	.LBE2603:
 3407              	.LBE2605:
 3408              	.LBE2610:
 3409              	.LBE2621:
 3410              	.LBE2624:
 3411              	.LBB2625:
 3412              	.LBB2626:
 3413              	.LBB2627:
 3414              	.LBB2628:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3415              		.loc 3 71 0
 3416 03e4 A30FA0E1 		lsr	r0, r3, #31
 3417              	.LVL247:
 3418              	.LBE2628:
 3419              	.LBE2627:
 3420              	.LBB2629:
 3421              	.LBB2630:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3422              		.loc 3 141 0
 3423 03e8 C31BA0E1 		asr	r1, r3, #23
 3424              	.LVL248:
 3425              	.LBE2630:
 3426              	.LBE2629:
 3427              	.LBB2631:
 3428              	.LBB2632:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3429              		.loc 3 95 0
 3430 03ec 7F0340E2 		sub	r0, r0, #-67108863
 3431              	.LBE2632:
 3432              	.LBE2631:
 3433              	.LBB2634:
 3434              	.LBB2635:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3435              		.loc 3 71 0
 3436 03f0 5330F6E7 		ubfx	r3, r3, #0, #23
 3437              	.LVL249:
 3438              	.LBE2635:
 3439              	.LBE2634:
 3440              	.LBB2636:
 3441              	.LBB2633:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 3442              		.loc 3 95 0
 3443 03f4 0F0540E2 		sub	r0, r0, #62914560
 3444              	.LBE2633:
 3445              	.LBE2636:
 3446              	.LBB2637:
 3447              	.LBB2638:
 3448 03f8 000053E1 		cmp	r3, r0
 3449 03fc 0130A0D1 		movle	r3, r1
 3450 0400 013081C2 		addgt	r3, r1, #1
 3451              	.LBE2638:
 3452              	.LBE2637:
 3453              	.LBE2626:
 3454              	.LBE2625:
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****                                         static_cast<int32_t>(kMinInt8)),
 3455              		.loc 6 53 0
 3456 0404 0C3083E0 		add	r3, r3, ip
 3457              	.LBB2639:
 3458              	.LBB2640:
 3459              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** /*
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  */
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  */
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** {
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<bool _BoolType>
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __iter_swap
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static void
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         {
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****             _ValueType1;
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	}
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<>
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __iter_swap<true>
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static void 
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         {
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           swap(*__a, *__b);
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         }
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #endif
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   Nothing.
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  iterators themselves.
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline void
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ValueType1;
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ValueType2;
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ValueType2>)
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ValueType1>)
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ReferenceType1;
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ReferenceType2;
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #else
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #endif
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _ForwardIterator2
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       return __first2;
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  preprocessor macro.
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline const _Tp&
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       if (__b < __a)
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       return __a;
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  preprocessor macro.
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _Tp>
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline const _Tp&
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       if (__a < __b)
 3460              		.loc 8 224 0
 3461 0408 0C0053E1 		cmp	r3, ip
 3462              	.LBE2640:
 3463              	.LBE2639:
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****                                         static_cast<int32_t>(kMinInt8)),
 3464              		.loc 6 53 0
 3465 040c 48308DE5 		str	r3, [sp, #72]
 3466              	.LBB2643:
 3467              	.LBB2641:
 3468              		.loc 8 224 0
 3469 0410 0D0000BA 		blt	.L174
 3470              	.LVL250:
 3471              	.LBE2641:
 3472              	.LBE2643:
 3473              	.LBB2644:
 3474              	.LBB2645:
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 3475              		.loc 8 200 0
 3476 0414 800053E3 		cmp	r3, #128
 3477              	.LBE2645:
 3478              	.LBE2644:
 3479              		.loc 6 55 0
 3480 0418 7F20A0E3 		mov	r2, #127
 3481              	.LVL251:
 3482 041c 2C208DE5 		str	r2, [sp, #44]
 3483              	.LVL252:
 3484              	.LBB2647:
 3485              	.LBB2646:
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 3486              		.loc 8 200 0
 3487 0420 0230A001 		moveq	r3, r2
 3488 0424 0900001A 		bne	.L145
 3489              	.LVL253:
 3490              	.LBE2646:
 3491              	.LBE2647:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****       output_data[i] = static_cast<int8_t>(output_in_q23);
 3492              		.loc 6 56 0
 3493 0428 0030C4E5 		strb	r3, [r4]
 3494              	.L226:
 3495              	.LBE2652:
 3496              	.LBE2656:
 3497              	.LBE2660:
 3498              	.LBE2664:
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/integer_ops\logistic.h ****     const int32_t input =
 3499              		.loc 6 35 0
 3500 042c 015085E2 		add	r5, r5, #1
 3501              	.LVL254:
 3502 0430 014084E2 		add	r4, r4, #1
 3503 0434 060055E1 		cmp	r5, r6
 3504 0438 A3FFFFBA 		blt	.L148
 3505              	.LVL255:
 3506              	.L147:
 3507              	.LBE2668:
 3508              	.LBE2672:
 3509              	.LBE2680:
 117:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****       }
 3510              		.loc 1 117 0
 3511 043c 0000A0E3 		mov	r0, #0
 134:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 3512              		.loc 1 134 0
 3513 0440 64D08DE2 		add	sp, sp, #100
 3514              		.cfi_remember_state
 3515              		.cfi_def_cfa_offset 52
 3516              		@ sp needed
 3517 0444 048BBDEC 		vldm	sp!, {d8-d9}
 3518              		.cfi_restore 80
 3519              		.cfi_restore 81
 3520              		.cfi_restore 82
 3521              		.cfi_restore 83
 3522              		.cfi_def_cfa_offset 36
 3523 0448 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3524              	.LVL256:
 3525              	.L174:
 3526              		.cfi_restore_state
 3527              	.LBB2681:
 3528              	.LBB2673:
 3529              	.LBB2669:
 3530              	.LBB2665:
 3531              	.LBB2661:
 3532              	.LBB2657:
 3533              	.LBB2653:
 3534              	.LBB2648:
 3535              	.LBB2642:
 3536              		.loc 8 224 0
 3537 044c 0C30A0E1 		mov	r3, ip
 3538              	.LVL257:
 3539              	.L145:
 3540 0450 7330AFE6 		sxtb	r3, r3
 3541              	.LVL258:
 3542              	.LBE2642:
 3543              	.LBE2648:
 3544              		.loc 6 56 0
 3545 0454 0030C4E5 		strb	r3, [r4]
 3546 0458 F3FFFFEA 		b	.L226
 3547              	.L230:
 3548 045c 00F020E3 		.align	3
 3549              	.L229:
 3550 0460 01000000 		.word	1
 3551 0464 00000000 		.word	0
 3552 0468 CFF38441 		.word	1099232207
 3553              	.LVL259:
 3554              	.L219:
 3555              	.LBE2653:
 3556              	.LBE2657:
 3557              	.LBE2661:
 3558              	.LBE2665:
 3559              	.LBE2669:
 3560              	.LBE2673:
 3561              	.LBE2681:
  94:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****       case kTfLiteFloat32: {
 3562              		.loc 1 94 0
 3563 046c 0830D0E5 		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 3564              	.LVL260:
 3565 0470 0060A0E1 		mov	r6, r0
 3566 0474 010053E3 		cmp	r3, #1
 3567 0478 AF00001A 		bne	.L209
  96:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                                 tflite::micro::GetTensorData<float>(input),
 3568              		.loc 1 96 0
 3569 047c 08409DE5 		ldr	r4, [sp, #8]
 3570 0480 30008DE2 		add	r0, sp, #48
 3571 0484 0410A0E1 		mov	r1, r4
 3572 0488 FEFFFFEB 		bl	_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 3573              	.LVL261:
 3574              	.LEHE0:
  98:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                                 tflite::micro::GetTensorData<float>(output));
 3575              		.loc 1 98 0
 3576 048c 0610A0E1 		mov	r1, r6
 3577 0490 48008DE2 		add	r0, sp, #72
 3578              	.LBB2682:
 3579              	.LBB2683:
 3580              		.loc 4 63 0
 3581 0494 007094E5 		ldr	r7, [r4]
 3582              	.LEHB1:
 3583              	.LBE2683:
 3584              	.LBE2682:
  98:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                                 tflite::micro::GetTensorData<float>(output));
 3585              		.loc 1 98 0
 3586 0498 FEFFFFEB 		bl	_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 3587              	.LVL262:
 3588              	.LEHE1:
 3589 049c 30209DE5 		ldr	r2, [sp, #48]
 3590 04a0 48409DE5 		ldr	r4, [sp, #72]
 3591              	.LBB2684:
 3592              	.LBB2685:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 3593              		.loc 4 56 0
 3594 04a4 006096E5 		ldr	r6, [r6]
 3595              	.LVL263:
 3596              	.LBE2685:
 3597              	.LBE2684:
 3598              	.LBB2686:
 3599              	.LBB2687:
 3600              	.LBB2688:
 3601              	.LBB2689:
 3602              		.file 9 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** /* Copyright 2018 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #include <algorithm>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #include <cstdint>
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #include <cstring>
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #include <initializer_list>
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** namespace tflite {
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** enum class FusedActivationFunctionType : uint8_t {
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   kNone,
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   kRelu6,
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   kRelu1,
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   kRelu
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** };
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** enum class PaddingType : uint8_t { kNone, kSame, kValid };
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** struct PaddingValues {
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int16_t width;
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int16_t height;
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // offset is used for calculating "remaining" padding, for example, `width`
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // is 1 and `width_offset` is 1, so padding_left is 1 while padding_right is
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // 1 + 1 = 2.
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int16_t width_offset;
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the height dimension.
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int16_t height_offset;
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** };
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** struct Padding3DValues {
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int16_t width;
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int16_t height;
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int16_t depth;
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // offset is used for calculating "remaining" padding, for example, `width`
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // is 1 and `width_offset` is 1, so padding_left is 1 while padding_right is
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // 1 + 1 = 2.
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int16_t width_offset;
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the height dimension.
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int16_t height_offset;
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the depth dimension.
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int16_t depth_offset;
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** };
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // This enumeration allows for non-default formats for the weights array
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // of a fully-connected operator, allowing the use of special optimized
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // runtime paths.
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** enum class FullyConnectedWeightsFormat : uint8_t {
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // Default format (flat 2D layout, the inner contiguous dimension
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // is input_depth, the outer non-contiguous dimension is output_depth)
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   kDefault,
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // Summary: optimized layout for fast CPU runtime implementation,
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // aimed specifically at ARM CPUs at the moment, and specialized for
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // 8-bit quantized layers.
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // The use case we're concerned with here is: 8-bit quantization,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // large weights matrix that doesn't fit in cache (e.g. 4096x2048 in
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // a key application that drove this), very small batch size (e.g. 1 -- 4).
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // Even with 8-bit quantization of weights, the performance of memory
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // accesses to the weights can become the dominant issue when
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // the batch size is small, so each weight value is used in only a few
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // arithmetic ops, i.e. the fully-connected node has a low arithmetic
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // intensity. The specific issues that arise are of three kinds:
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // (1) One may, ideally, max out DRAM bandwidth, i.e. be truly memory
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //     bound. That's the "good" issue to run into.
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // (2) One may run into sub-optimal pre-fetching: the data hasn't been
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //     prefetched into the cache by the time we need it.
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // (3) One may run into cache aliasing: multiple values that are
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //     pre-fetched, alias each other in the L1 cache (which typically
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //     has only 4-way set associativity in ARM CPUs) and thus evict
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //     each other before we get to using them.
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // The point of this shuffling is to avoid issues (2) and (3) so that
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // we get as fast as possible given only the hard constraint (1).
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // This is achieved by turning the difficulty into a solution: the
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // difficulty, that each value loaded from memory is used only in
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // one kernel iteration, making this operation memory-intensive, hints at
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // the solution, of shuffling the weights so that they are stored in the
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // exact order as the kernel needs to load them, so that the memory
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // accesses made by the kernel are trivial. This solves (2) because the
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // trivial memory access pattern allows the CPU's automatic prefetching
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // to perform very well (no need even for preload instructions), and this
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // solves (3) because the values being loaded concurrently are now
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // contiguous in the address space, thus don't alias each other in the cache.
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // On ARM, we typically want our kernel to process a 4x16 block of weights
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // at a time, because:
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //   - 16 is the number of bytes in a NEON register.
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //   - 4 is how many rows we need to handle concurrently in the kernel in
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //     order to have sufficient mutual independence of instructions to
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //     maximize arithmetic throughput.
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // Finally, the 'Int8' part in the name refers to the fact that this
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // weights format has each weights value encoded as a signed int8_t value,
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // even if the data type of the weights buffer is uint8_t.  This is intended
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // to save runtime kernels the effort to have to XOR the top bit of these
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // bytes before using them in signed arithmetic, see this file for more
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // explanations on the 'signed int8_t trick' in matrix multiplication kernels:
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //   tensorflow/lite/toco/graph_transformations/ensure_uint8_weights_safe_for_fast_int8_kernels.c
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   //
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   kShuffled4x16Int8,
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** };
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // Quantization parameters, determining the mapping of quantized values
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // to real values (i.e. determining how quantized values are mathematically
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // interpreted).
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** //
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // The correspondence is as follows:
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** //
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** //   real_value = scale * (quantized_value - zero_point);
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** //
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // In other words, zero_point designates which quantized value corresponds to
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // the real 0 value, and scale designates the difference between the real values
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // corresponding to consecutive quantized values differing by 1.
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** struct QuantizationParams {
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int32_t zero_point = 0;
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   double scale = 0.0;
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** };
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline bool operator==(const QuantizationParams& qp1,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                        const QuantizationParams& qp2) {
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return qp1.zero_point == qp2.zero_point && qp1.scale == qp2.scale;
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** struct Dims {
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int sizes[N];
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int strides[N];
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** };
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** class RuntimeShape {
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****  public:
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // Shapes with dimensions up to 5 are stored directly in the structure, while
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // larger shapes are separately allocated.
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   static constexpr int kMaxSmallSize = 5;
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape& operator=(RuntimeShape const&) = delete;
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape() : size_(0) {}
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   explicit RuntimeShape(int dimensions_count) : size_(dimensions_count) {
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 165:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 166:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 167:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 168:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int shape_size, int32_t value) : size_(0) {
 169:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     Resize(shape_size);
 170:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < shape_size; ++i) {
 171:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, value);
 172:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 173:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 174:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 175:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int dimensions_count, const int32_t* dims_data) : size_(0) {
 176:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     ReplaceWith(dimensions_count, dims_data);
 177:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 178:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 179:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(const std::initializer_list<int> init_list) : size_(0) {
 180:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom(init_list);
 181:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 182:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 183:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // Avoid using this constructor.  We should be able to delete it when C++17
 184:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // rolls out.
 185:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(RuntimeShape const& other) : size_(other.DimensionsCount()) {
 186:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 187:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 188:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 189:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #else
 190:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[size_];
 191:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #endif
 192:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 193:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData(), other.DimsData(), sizeof(int32_t) * size_);
 194:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 195:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 196:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   bool operator==(const RuntimeShape& comp) const {
 197:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return this->size_ == comp.size_ &&
 198:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****            std::memcmp(DimsData(), comp.DimsData(), size_ * sizeof(int32_t)) ==
 199:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                0;
 200:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 201:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 202:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   ~RuntimeShape() {
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 204:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 205:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 206:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 208:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 209:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 210:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 211:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 212:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t DimensionsCount() const { return size_; }
 213:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 214:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 217:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 218:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline void SetDim(int i, int32_t val) {
 219:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 220:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 221:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 222:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_[i] = val;
 223:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     } else {
 224:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       dims_[i] = val;
 225:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 226:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 228:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline int32_t* DimsData() {
 229:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 230:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 231:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsData() const {
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 233:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 234:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // The caller must ensure that the shape is no bigger than 5-D.
 235:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsDataUpTo5D() const { return dims_; }
 236:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 237:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline void Resize(int dimensions_count) {
 238:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 239:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 242:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 243:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 244:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 245:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     size_ = dimensions_count;
 246:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 247:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 248:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 249:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 250:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 251:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 253:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 254:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 255:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline void ReplaceWith(int dimensions_count, const int32_t* dims_data) {
 256:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 257:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dst_dims = DimsData();
 258:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(dst_dims, dims_data, dimensions_count * sizeof(int32_t));
 259:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 260:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 261:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   template <typename T>
 262:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const T& src_iterable) {
 263:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     const int dimensions_count =
 264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****         std::distance(src_iterable.begin(), src_iterable.end());
 265:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 266:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     int32_t* data = DimsData();
 267:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     for (auto it : src_iterable) {
 268:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       *data = it;
 269:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       ++data;
 270:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 271:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 272:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 273:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // This will probably be factored out. Old code made substantial use of 4-D
 274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // shapes, and so this function is used to extend smaller shapes. Note that
 275:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // (a) as Dims<4>-dependent code is eliminated, the reliance on this should be
 276:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // reduced, and (b) some kernels are stricly 4-D, but then the shapes of their
 277:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // inputs should already be 4-D, so this function should not be needed.
 278:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline static RuntimeShape ExtendedShape(int new_shape_size,
 279:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                                            const RuntimeShape& shape) {
 280:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return RuntimeShape(new_shape_size, shape, 1);
 281:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 282:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 283:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const std::initializer_list<int> init_list) {
 284:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     BuildFrom<const std::initializer_list<int>>(init_list);
 285:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 286:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 287:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // Returns the total count of elements, that is the size when flattened into a
 288:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // vector.
 289:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   inline int FlatSize() const {
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     int buffer_size = 1;
 291:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 294:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 295:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return buffer_size;
 296:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 297:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 298:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   bool operator!=(const RuntimeShape& comp) const { return !((*this) == comp); }
 299:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 300:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****  private:
 301:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // For use only by ExtendedShape(), written to guarantee (return-value) copy
 302:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // elision in C++17.
 303:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   // This creates a shape padded to the desired size with the specified value.
 304:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int new_shape_size, const RuntimeShape& shape, int pad_value)
 305:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       : size_(0) {
 306:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     // If the following check fails, it is likely because a 4D-only kernel is
 307:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     // being used with an array of larger dimension count.
 308:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_CHECK_GE(new_shape_size, shape.DimensionsCount());
 309:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     Resize(new_shape_size);
 310:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     const int size_increase = new_shape_size - shape.DimensionsCount();
 311:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_increase; ++i) {
 312:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, pad_value);
 313:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 314:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData() + size_increase, shape.DimsData(),
 315:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                 sizeof(int32_t) * shape.DimensionsCount());
 316:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 317:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 318:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int32_t size_;
 319:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   union {
 320:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     int32_t dims_[kMaxSmallSize];
 321:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     int32_t* dims_pointer_;
 322:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   };
 323:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** };
 324:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 325:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // Converts inference-style shape to legacy tflite::Dims<4>.
 326:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline tflite::Dims<4> ToRuntimeDims(const tflite::RuntimeShape& array_shape) {
 327:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   tflite::Dims<4> result;
 328:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   const int dimensions_count = array_shape.DimensionsCount();
 329:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_LE(dimensions_count, 4);
 330:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int cum_prod = 1;
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < 4; i++) {
 332:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     const int new_dim =
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****         (i < dimensions_count) ? array_shape.Dims(dimensions_count - 1 - i) : 1;
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     result.sizes[i] = new_dim;
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     result.strides[i] = cum_prod;
 336:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     cum_prod *= new_dim;
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return result;
 339:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 340:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 341:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // TODO(b/80418076): Move to legacy ops file, update invocations.
 342:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline RuntimeShape DimsToShape(const tflite::Dims<4>& dims) {
 343:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return RuntimeShape(
 344:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       {dims.sizes[3], dims.sizes[2], dims.sizes[1], dims.sizes[0]});
 345:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 346:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 347:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // Gets next index to iterate through a multidimensional array.
 348:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline bool NextIndex(const int num_dims, const int* dims, int* current) {
 349:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 350:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return false;
 351:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 352:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 353:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(current != nullptr);
 354:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int carry = 1;
 355:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = num_dims - 1; idx >= 0; --idx) {
 356:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     int current_val = current[idx] + carry;
 357:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(dims[idx], current_val);
 358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     if (dims[idx] == current_val) {
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = 0;
 360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     } else {
 361:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       current[idx] = current_val;
 362:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       carry = 0;
 363:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       break;
 364:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 365:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 366:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return (carry == 0);
 367:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 368:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 369:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // Gets offset of index if reducing on axis. When reducing, the flattened offset
 370:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // will not change, if the input index changes on the given axis. For example,
 371:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // if you have a 3D tensor and you are reducing to 2D by eliminating axis 0,
 372:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // then index (0, 1, 2) and index (1, 1, 2) will map to the same flattened
 373:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // offset.
 374:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // TODO(kanlig): uses Dims to represent dimensions.
 375:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline size_t ReducedOutputOffset(const int num_dims, const int* dims,
 376:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                                   const int* index, const int num_axis,
 377:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                                   const int* axis) {
 378:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 379:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return 0;
 380:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 381:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 382:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index != nullptr);
 383:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   size_t offset = 0;
 384:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   for (int idx = 0; idx < num_dims; ++idx) {
 385:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     // if we need to skip this axis
 386:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     bool is_axis = false;
 387:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     if (axis != nullptr) {
 388:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       for (int axis_idx = 0; axis_idx < num_axis; ++axis_idx) {
 389:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****         if (idx == axis[axis_idx]) {
 390:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****           is_axis = true;
 391:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****           break;
 392:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****         }
 393:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       }
 394:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 395:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     if (!is_axis) {
 396:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       offset = offset * static_cast<size_t>(dims[idx]) +
 397:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                static_cast<size_t>(index[idx]);
 398:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 399:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 400:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return offset;
 401:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 402:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 403:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int i0, int i1, int i2, int i3) {
 404:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), 4);
 405:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 406:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 407:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 408:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 409:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 410:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 411:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 412:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 413:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int i0, int i1, int i2, int i3,
 414:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                   int i4) {
 415:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), 5);
 416:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 417:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 418:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 419:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 420:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 421:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i4 >= 0 && i4 < dims_data[4]);
 422:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return (((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3) *
 423:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****              dims_data[4] +
 424:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****          i4;
 425:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 426:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 427:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int i0, int i1, int i2, int i3) {
 428:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims.sizes[0]);
 429:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims.sizes[1]);
 430:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims.sizes[2]);
 431:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims.sizes[3]);
 432:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return i0 * dims.strides[0] + i1 * dims.strides[1] + i2 * dims.strides[2] +
 433:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****          i3 * dims.strides[3];
 434:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 435:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 436:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int* index) {
 437:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return Offset(dims, index[0], index[1], index[2], index[3]);
 438:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 439:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 440:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int* index) {
 441:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return Offset(shape, index[0], index[1], index[2], index[3]);
 442:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 443:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 444:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // Get array size, DCHECKing that the dim index is in range.
 445:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** //
 446:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // Note that this will be phased out with Dims<4>, since RuntimeShape::Dims()
 447:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // already performs this check.
 448:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 449:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** int ArraySize(const Dims<N>& array, int index) {
 450:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index >= 0 && index < N);
 451:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return array.sizes[index];
 452:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 453:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 454:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // Get common array size, DCHECKing that they all agree.
 455:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2>
 456:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 457:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2) {
 458:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 459:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return ArraySize(array1, index1);
 460:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 461:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 462:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2, typename... Args>
 463:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 464:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2, Args... args) {
 465:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 466:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return MatchingArraySize(array1, index1, args...);
 467:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 468:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 469:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // Get common shape dim, DCHECKing that they all agree.
 470:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingDim(const RuntimeShape& shape1, int index1,
 471:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                        const RuntimeShape& shape2, int index2) {
 472:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 473:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 474:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 475:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 476:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** template <typename... Args>
 477:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** int MatchingDim(const RuntimeShape& shape1, int index1,
 478:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                 const RuntimeShape& shape2, int index2, Args... args) {
 479:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 480:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return MatchingDim(shape1, index1, args...);
 481:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 482:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 483:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // Will be phased out with Dims<4>, replaced by RuntimeShape::FlatSize().
 484:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** template <int N>
 485:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline int FlatSize(const Dims<N>& dims) {
 486:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   int flat_size = 1;
 487:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 488:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     flat_size *= dims.sizes[i];
 489:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 490:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return flat_size;
 491:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 492:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 493:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** TFLITE_DEPRECATED("Prefer FlatSize.")
 494:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline int RequiredBufferSizeForDims(const Dims<4>& dims) {
 495:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return FlatSize(dims);
 496:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 497:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 498:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 499:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0) {
 500:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 501:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 502:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 503:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 504:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 505:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 506:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 507:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0,
 508:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_1) {
 509:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 510:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 511:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   const int size_3 = check_shape_1.FlatSize();
 512:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 513:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_2, size_3);
 514:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 515:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** }
 516:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** 
 517:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // Flat size calculation, checking that dimensions match with one or more other
 518:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** // arrays.
 519:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const RuntimeShape& shape,
 520:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_0) {
 521:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), check_shape_0.DimensionsCount());
 3603              		.loc 9 521 0
 3604 04a8 040052E1 		cmp	r2, r4
 3605 04ac FC00001A 		bne	.L103
 3606              	.LVL264:
 3607              	.LBB2690:
 522:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 3608              		.loc 9 523 0
 3609 04b0 000052E3 		cmp	r2, #0
 3610 04b4 D00000DA 		ble	.L161
 3611 04b8 050052E3 		cmp	r2, #5
 3612              	.LBB2691:
 3613              	.LBB2692:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 3614              		.loc 9 216 0
 3615 04bc 34509DE5 		ldr	r5, [sp, #52]
 3616              	.LVL265:
 3617              	.LBE2692:
 3618              	.LBE2691:
 3619              	.LBB2698:
 3620              	.LBB2699:
 3621 04c0 4C109DE5 		ldr	r1, [sp, #76]
 3622 04c4 BD0000CA 		bgt	.L106
 3623              	.LVL266:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3624              		.loc 9 215 0
 3625 04c8 000052E3 		cmp	r2, #0
 3626 04cc EA0000DA 		ble	.L107
 3627              	.LVL267:
 3628              	.LBE2699:
 3629              	.LBE2698:
 524:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 3630              		.loc 9 524 0
 3631 04d0 010055E1 		cmp	r5, r1
 3632 04d4 D800001A 		bne	.L108
 3633              	.LVL268:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 3634              		.loc 9 523 0
 3635 04d8 010052E3 		cmp	r2, #1
 3636 04dc 1900000A 		beq	.L160
 3637              	.LVL269:
 3638              	.LBB2707:
 3639              	.LBB2693:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 3640              		.loc 9 216 0
 3641 04e0 38109DE5 		ldr	r1, [sp, #56]
 3642              	.LVL270:
 3643              	.LBE2693:
 3644              	.LBE2707:
 3645              		.loc 9 524 0
 3646 04e4 50309DE5 		ldr	r3, [sp, #80]
 3647 04e8 030051E1 		cmp	r1, r3
 3648 04ec D200001A 		bne	.L108
 3649              	.LVL271:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 3650              		.loc 9 523 0
 3651 04f0 020052E3 		cmp	r2, #2
 3652 04f4 1300000A 		beq	.L160
 3653              	.LVL272:
 3654              	.LBB2708:
 3655              	.LBB2694:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 3656              		.loc 9 216 0
 3657 04f8 3C109DE5 		ldr	r1, [sp, #60]
 3658              	.LVL273:
 3659              	.LBE2694:
 3660              	.LBE2708:
 3661              		.loc 9 524 0
 3662 04fc 54309DE5 		ldr	r3, [sp, #84]
 3663 0500 030051E1 		cmp	r1, r3
 3664 0504 CC00001A 		bne	.L108
 3665              	.LVL274:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 3666              		.loc 9 523 0
 3667 0508 030052E3 		cmp	r2, #3
 3668 050c 0D00000A 		beq	.L160
 3669              	.LVL275:
 3670              	.LBB2709:
 3671              	.LBB2700:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3672              		.loc 9 215 0
 3673 0510 030054E3 		cmp	r4, #3
 3674              	.LBE2700:
 3675              	.LBE2709:
 3676              	.LBB2710:
 3677              	.LBB2695:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 3678              		.loc 9 216 0
 3679 0514 40109DE5 		ldr	r1, [sp, #64]
 3680              	.LVL276:
 3681              	.LBE2695:
 3682              	.LBE2710:
 3683              	.LBB2711:
 3684              	.LBB2701:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3685              		.loc 9 215 0
 3686 0518 D700000A 		beq	.L107
 3687              	.LVL277:
 3688              	.LBE2701:
 3689              	.LBE2711:
 3690              		.loc 9 524 0
 3691 051c 58309DE5 		ldr	r3, [sp, #88]
 3692 0520 030051E1 		cmp	r1, r3
 3693 0524 C400001A 		bne	.L108
 3694              	.LVL278:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 3695              		.loc 9 523 0
 3696 0528 040052E3 		cmp	r2, #4
 3697 052c 0500000A 		beq	.L160
 3698              	.LVL279:
 3699              	.LBB2712:
 3700              	.LBB2702:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3701              		.loc 9 215 0
 3702 0530 040054E3 		cmp	r4, #4
 3703              	.LBE2702:
 3704              	.LBE2712:
 3705              	.LBB2713:
 3706              	.LBB2696:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 3707              		.loc 9 216 0
 3708 0534 44309DE5 		ldr	r3, [sp, #68]
 3709              	.LVL280:
 3710              	.LBE2696:
 3711              	.LBE2713:
 3712              	.LBB2714:
 3713              	.LBB2703:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 3714              		.loc 9 215 0
 3715 0538 CF00000A 		beq	.L107
 3716              	.LVL281:
 3717              	.LBE2703:
 3718              	.LBE2714:
 3719              		.loc 9 524 0
 3720 053c 5C109DE5 		ldr	r1, [sp, #92]
 3721 0540 030051E1 		cmp	r1, r3
 3722 0544 BC00001A 		bne	.L108
 3723              	.LVL282:
 3724              	.L160:
 3725              	.LBE2690:
 3726              	.LBB2719:
 3727              	.LBB2720:
 3728              	.LBB2721:
 3729              	.LBB2722:
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 3730              		.loc 9 232 0
 3731 0548 34C08DE2 		add	ip, sp, #52
 3732              	.L109:
 3733              	.LVL283:
 3734 054c 5C31A0E7 		sbfx	r3, ip, #2, #1
 3735 0550 033003E2 		and	r3, r3, #3
 3736 0554 020053E1 		cmp	r3, r2
 3737 0558 0230A021 		movcs	r3, r2
 3738 055c 080052E3 		cmp	r2, #8
 3739 0560 0230A091 		movls	r3, r2
 3740 0564 000053E3 		cmp	r3, #0
 3741 0568 A500000A 		beq	.L162
 3742 056c 010053E3 		cmp	r3, #1
 3743              	.LBE2722:
 3744              	.LBE2721:
 3745              	.LBB2724:
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 3746              		.loc 9 293 0
 3747 0570 00509CE5 		ldr	r5, [ip]
 3748              	.LVL284:
 3749 0574 8F00000A 		beq	.L169
 3750 0578 04109CE5 		ldr	r1, [ip, #4]
 3751 057c 020053E3 		cmp	r3, #2
 3752 0580 910505E0 		mul	r5, r1, r5
 3753              	.LVL285:
 3754 0584 8B00000A 		beq	.L169
 3755 0588 08109CE5 		ldr	r1, [ip, #8]
 3756 058c 030053E3 		cmp	r3, #3
 3757 0590 910505E0 		mul	r5, r1, r5
 3758              	.LVL286:
 3759 0594 8700000A 		beq	.L169
 3760 0598 0C109CE5 		ldr	r1, [ip, #12]
 3761 059c 040053E3 		cmp	r3, #4
 3762 05a0 910505E0 		mul	r5, r1, r5
 3763              	.LVL287:
 3764 05a4 8300000A 		beq	.L169
 3765 05a8 10109CE5 		ldr	r1, [ip, #16]
 3766 05ac 050053E3 		cmp	r3, #5
 3767 05b0 910505E0 		mul	r5, r1, r5
 3768              	.LVL288:
 3769 05b4 7F00000A 		beq	.L169
 3770 05b8 14109CE5 		ldr	r1, [ip, #20]
 3771 05bc 060053E3 		cmp	r3, #6
 3772 05c0 910505E0 		mul	r5, r1, r5
 3773              	.LVL289:
 3774 05c4 7B00000A 		beq	.L169
 3775 05c8 18109CE5 		ldr	r1, [ip, #24]
 3776 05cc 070053E3 		cmp	r3, #7
 3777 05d0 910505E0 		mul	r5, r1, r5
 3778              	.LVL290:
 3779 05d4 7700000A 		beq	.L169
 3780 05d8 1C009CE5 		ldr	r0, [ip, #28]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 3781              		.loc 9 292 0
 3782 05dc 0810A0E3 		mov	r1, #8
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 3783              		.loc 9 293 0
 3784 05e0 900505E0 		mul	r5, r0, r5
 3785              	.LVL291:
 3786              	.L116:
 3787 05e4 020053E1 		cmp	r3, r2
 3788 05e8 2800000A 		beq	.L117
 3789              	.LVL292:
 3790              	.L115:
 3791 05ec 034042E0 		sub	r4, r2, r3
 3792 05f0 01E042E2 		sub	lr, r2, #1
 3793 05f4 040044E2 		sub	r0, r4, #4
 3794 05f8 03E04EE0 		sub	lr, lr, r3
 3795 05fc 2001A0E1 		lsr	r0, r0, #2
 3796 0600 02005EE3 		cmp	lr, #2
 3797 0604 010080E2 		add	r0, r0, #1
 3798 0608 0081A0E1 		lsl	r8, r0, #2
 3799 060c 1200009A 		bls	.L118
 3800 0610 03318CE0 		add	r3, ip, r3, lsl #2
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 3801              		.loc 9 292 0
 3802 0614 5120C0F2 		vmov.i32	q9, #1  @ v4si
 3803 0618 00E0A0E3 		mov	lr, #0
 3804              	.L120:
 3805 061c 01E08EE2 		add	lr, lr, #1
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 3806              		.loc 9 293 0
 3807 0620 DF0A63F4 		vld1.64	{d16-d17}, [r3:64]
 3808 0624 0E0050E1 		cmp	r0, lr
 3809 0628 103083E2 		add	r3, r3, #16
 3810 062c F02962F2 		vmul.i32	q9, q9, q8
 3811 0630 F9FFFF8A 		bhi	.L120
 3812 0634 040058E1 		cmp	r8, r4
 3813 0638 081081E0 		add	r1, r1, r8
 3814 063c 5000C0F2 		vmov.i32	q8, #0  @ v4si
 3815 0640 E048F2F2 		vext.32	q10, q9, q8, #2
 3816 0644 F22964F2 		vmul.i32	q9, q10, q9
 3817 0648 E004F2F2 		vext.32	q8, q9, q8, #1
 3818 064c F20960F2 		vmul.i32	q8, q8, q9
 3819 0650 903B10EE 		vmov.32	r3, d16[0]
 3820 0654 930505E0 		mul	r5, r3, r5
 3821 0658 0C00000A 		beq	.L117
 3822              	.L118:
 3823              	.LVL293:
 3824 065c 01019CE7 		ldr	r0, [ip, r1, lsl #2]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 3825              		.loc 9 292 0
 3826 0660 013081E2 		add	r3, r1, #1
 3827 0664 030052E1 		cmp	r2, r3
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 3828              		.loc 9 293 0
 3829 0668 0131A0E1 		lsl	r3, r1, #2
 3830 066c 900505E0 		mul	r5, r0, r5
 3831              	.LVL294:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 3832              		.loc 9 292 0
 3833 0670 060000DA 		ble	.L117
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 3834              		.loc 9 293 0
 3835 0674 03308CE0 		add	r3, ip, r3
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 3836              		.loc 9 292 0
 3837 0678 021081E2 		add	r1, r1, #2
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 3838              		.loc 9 293 0
 3839 067c 040093E5 		ldr	r0, [r3, #4]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 3840              		.loc 9 292 0
 3841 0680 020051E1 		cmp	r1, r2
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 3842              		.loc 9 293 0
 3843 0684 900505E0 		mul	r5, r0, r5
 3844              	.LVL295:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 3845              		.loc 9 292 0
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     }
 3846              		.loc 9 293 0
 3847 0688 083093B5 		ldrlt	r3, [r3, #8]
 3848 068c 930505B0 		mullt	r5, r3, r5
 3849              	.LVL296:
 3850              	.L117:
 3851              	.LBE2724:
 3852              	.LBE2720:
 3853              	.LBE2719:
 3854              	.LBE2689:
 3855              	.LBE2688:
 3856              	.LBB2744:
 3857              		.file 10 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_LOGISTIC_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_LOGISTIC_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** #include <cmath>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** 
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** #include "third_party/gemmlowp/fixedpoint/fixedpoint.h"
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** #include "tensorflow/lite/kernels/internal/common.h"
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** #include "tensorflow/lite/kernels/internal/types.h"
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** #include "tensorflow/lite/kernels/op_macros.h"
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** namespace tflite {
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** namespace reference_ops {
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** 
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** inline void Logistic(const RuntimeShape& input_shape, const float* input_data,
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****                      const RuntimeShape& output_shape, float* output_data) {
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****   const float cutoff_upper = 16.619047164916992188f;
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****   const float cutoff_lower = -9.f;
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** 
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** 
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****   // Rational for using approximation in reference kernel.
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****   // 0. This approximation gives enough precision for float.
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****   // 1. This works around an issue on an embedded chipset where exp() does not
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****   // return correctly as expected - exp(x) should return inf when overflown
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****   // not 1.701417   IEEE 754 defines representation for inf.
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****   // 2. This will speed up calculation and is matching the behavior in the
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****   // optimized kernels. (check the definition of scalar_logistic_op<float>)
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h **** 
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****   for (int i = 0; i < flat_size; i++) {
 3858              		.loc 10 45 0
 3859 0690 000055E3 		cmp	r5, #0
 3860 0694 1A0000DA 		ble	.L113
 3861              	.LVL297:
 3862              	.L104:
 3863              	.LBB2745:
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     float val = input_data[i];
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     float result;
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     if (val > cutoff_upper) {
 3864              		.loc 10 48 0
 3865 0698 8E8A1FED 		vldr.32	s16, .L229+8
 3866              	.LBE2745:
 3867              	.LBE2744:
 3868              	.LBB2757:
 3869              	.LBB2739:
 3870              	.LBB2733:
 3871              	.LBB2730:
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 3872              		.loc 9 290 0
 3873 069c 0040A0E3 		mov	r4, #0
 3874              	.LBE2730:
 3875              	.LBE2733:
 3876              	.LBE2739:
 3877              	.LBE2757:
 3878              	.LBB2758:
 3879              	.LBB2752:
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****       result = 1.0f;
 3880              		.loc 10 49 0
 3881 06a0 008AF7EE 		vmov.f32	s17, #1.0e+0
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     } else if (val < cutoff_lower) {
 3882              		.loc 10 50 0
 3883 06a4 029ABAEE 		vmov.f32	s18, #-9.0e+0
 3884 06a8 040000EA 		b	.L127
 3885              	.LVL298:
 3886              	.L228:
 3887              	.LBB2746:
 3888              	.LBB2747:
 3889              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef _GLIBCXX_CMATH
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #define _GLIBCXX_CMATH 1
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef abs
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR double
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(double __x)
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabs(__x); }
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(float __x)
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsf(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(long double __x)
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsl(__x); }
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     abs(_Tp __x)
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_fabs(__x); }
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acos;
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acos(float __x)
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acosf(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acos(long double __x)
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acosl(__x); }
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     acos(_Tp __x)
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_acos(__x); }
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asin;
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asin(float __x)
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinf(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asin(long double __x)
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinl(__x); }
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     asin(_Tp __x)
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_asin(__x); }
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atan;
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan(float __x)
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanf(__x); }
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan(long double __x)
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanl(__x); }
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     atan(_Tp __x)
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_atan(__x); }
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atan2;
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan2(float __y, float __x)
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan2(long double __y, long double __x)
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     atan2(_Tp __y, _Up __x)
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return atan2(__type(__y), __type(__x));
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ceil;
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ceil(float __x)
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ceilf(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ceil(long double __x)
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ceill(__x); }
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     ceil(_Tp __x)
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_ceil(__x); }
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cos;
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cos(float __x)
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cosf(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cos(long double __x)
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cosl(__x); }
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     cos(_Tp __x)
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_cos(__x); }
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cosh;
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cosh(float __x)
 227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_coshf(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cosh(long double __x)
 231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_coshl(__x); }
 232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     cosh(_Tp __x)
 239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_cosh(__x); }
 240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp;
 242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp(float __x)
 246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expf(__x); }
 3890              		.loc 11 246 0
 3891 06ac FEFFFFEB 		bl	expf
 3892              	.LVL299:
 3893              	.L124:
 3894              	.LBE2747:
 3895              	.LBE2746:
 3896              	.LBE2752:
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     float val = input_data[i];
 3897              		.loc 10 45 0
 3898 06b0 014084E2 		add	r4, r4, #1
 3899              	.LVL300:
 3900              	.LBB2753:
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****       result = std::exp(val);
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     } else {
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****       result = 1.f / (1.f + std::exp(-val));
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     }
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     output_data[i] = result;
 3901              		.loc 10 55 0
 3902 06b4 010AA6EC 		vstmia.32	r6!, {s0}
 3903              	.LBE2753:
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     float val = input_data[i];
 3904              		.loc 10 45 0
 3905 06b8 050054E1 		cmp	r4, r5
 3906 06bc 0F0000AA 		bge	.L227
 3907              	.LVL301:
 3908              	.L127:
 3909              	.LBB2754:
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     float result;
 3910              		.loc 10 46 0
 3911 06c0 010AB7EC 		vldmia.32	r7!, {s0}
 3912              	.LVL302:
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****       result = 1.0f;
 3913              		.loc 10 48 0
 3914 06c4 C80AB4EE 		vcmpe.f32	s0, s16
 3915 06c8 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     } else if (val < cutoff_lower) {
 3916              		.loc 10 49 0
 3917 06cc 680AB0CE 		vmovgt.f32	s0, s17
 3918              	.LVL303:
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****       result = 1.0f;
 3919              		.loc 10 48 0
 3920 06d0 F6FFFFCA 		bgt	.L124
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****       result = std::exp(val);
 3921              		.loc 10 50 0
 3922 06d4 C90AB4EE 		vcmpe.f32	s0, s18
 3923 06d8 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 3924 06dc F2FFFF4A 		bmi	.L228
 3925              	.LVL304:
 3926              	.LBB2748:
 3927              	.LBB2749:
 3928              		.loc 11 246 0
 3929 06e0 400AB1EE 		vneg.f32	s0, s0
 3930              	.LVL305:
 3931              	.LBE2749:
 3932              	.LBE2748:
 3933              	.LBE2754:
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     float val = input_data[i];
 3934              		.loc 10 45 0
 3935 06e4 014084E2 		add	r4, r4, #1
 3936              	.LVL306:
 3937              	.LBB2755:
 3938              	.LBB2751:
 3939              	.LBB2750:
 3940              		.loc 11 246 0
 3941 06e8 FEFFFFEB 		bl	expf
 3942              	.LVL307:
 3943              	.LBE2750:
 3944              	.LBE2751:
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     }
 3945              		.loc 10 53 0
 3946 06ec 287A70EE 		vadd.f32	s15, s0, s17
 3947              	.LBE2755:
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     float val = input_data[i];
 3948              		.loc 10 45 0
 3949 06f0 050054E1 		cmp	r4, r5
 3950              	.LBB2756:
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     }
 3951              		.loc 10 53 0
 3952 06f4 A70A88EE 		vdiv.f32	s0, s17, s15
 3953              	.LVL308:
 3954              		.loc 10 55 0
 3955 06f8 010AA6EC 		vstmia.32	r6!, {s0}
 3956              	.LBE2756:
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference\logistic.h ****     float val = input_data[i];
 3957              		.loc 10 45 0
 3958 06fc EFFFFFBA 		blt	.L127
 3959              	.L227:
 3960 0700 48209DE5 		ldr	r2, [sp, #72]
 3961              	.LVL309:
 3962              	.L113:
 3963              	.LBE2758:
 3964              	.LBE2687:
 3965              	.LBE2686:
 3966              	.LBB2767:
 3967              	.LBB2768:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 3968              		.loc 9 203 0
 3969 0704 050052E3 		cmp	r2, #5
 3970 0708 030000DA 		ble	.L128
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3971              		.loc 9 207 0
 3972 070c 4C009DE5 		ldr	r0, [sp, #76]
 3973 0710 000050E3 		cmp	r0, #0
 3974 0714 0000000A 		beq	.L128
 3975 0718 FEFFFFEB 		bl	_ZdaPv
 3976              	.LVL310:
 3977              	.L128:
 3978              	.LBE2768:
 3979              	.LBE2767:
 3980              	.LBB2769:
 3981              	.LBB2770:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 3982              		.loc 9 203 0
 3983 071c 30309DE5 		ldr	r3, [sp, #48]
 3984 0720 050053E3 		cmp	r3, #5
 3985 0724 44FFFFDA 		ble	.L147
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 3986              		.loc 9 207 0
 3987 0728 34009DE5 		ldr	r0, [sp, #52]
 3988 072c 000050E3 		cmp	r0, #0
 3989 0730 41FFFF0A 		beq	.L147
 3990 0734 FEFFFFEB 		bl	_ZdaPv
 3991              	.LVL311:
 3992 0738 3FFFFFEA 		b	.L147
 3993              	.LVL312:
 3994              	.L209:
 3995              	.LBE2770:
 3996              	.LBE2769:
 103:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****                            TfLiteTypeGetName(input->type),
 3997              		.loc 1 103 0
 3998 073c 0400A0E1 		mov	r0, r4
 3999 0740 146095E5 		ldr	r6, [r5, #20]
 4000              	.LEHB2:
 4001 0744 FEFFFFEB 		bl	TfLiteTypeGetName
 4002              	.LVL313:
 4003 0748 04309DE5 		ldr	r3, [sp, #4]
 4004 074c 0070A0E1 		mov	r7, r0
 4005 0750 0800D3E5 		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 4006 0754 FEFFFFEB 		bl	TfLiteTypeGetName
 4007              	.LVL314:
 4008 0758 001000E3 		movw	r1, #:lower16:.LC11
 4009 075c 0030A0E1 		mov	r3, r0
 4010 0760 0720A0E1 		mov	r2, r7
 4011 0764 0500A0E1 		mov	r0, r5
 4012 0768 001040E3 		movt	r1, #:upper16:.LC11
 4013 076c 36FF2FE1 		blx	r6
 4014              	.LVL315:
 4015              	.LEHE2:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****     }
 4016              		.loc 1 106 0
 4017 0770 0400A0E1 		mov	r0, r4
 134:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp **** 
 4018              		.loc 1 134 0
 4019 0774 64D08DE2 		add	sp, sp, #100
 4020              		.cfi_remember_state
 4021              		.cfi_def_cfa_offset 52
 4022              		@ sp needed
 4023 0778 048BBDEC 		vldm	sp!, {d8-d9}
 4024              		.cfi_restore 80
 4025              		.cfi_restore 81
 4026              		.cfi_restore 82
 4027              		.cfi_restore 83
 4028              		.cfi_def_cfa_offset 36
 4029 077c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4030              	.LVL316:
 4031              	.L223:
 4032              		.cfi_restore_state
 4033              	.LBB2771:
 4034              	.LBB2674:
 4035              	.LBB2670:
 4036              	.LBB2666:
 4037              	.LBB2662:
 4038              	.LBB2658:
 4039              	.LBB2654:
 4040              	.LBB2649:
 4041              	.LBB2557:
 4042              	.LBB2554:
 4043              	.LBB2551:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 4044              		.loc 3 338 0
 4045 0780 0221E0E3 		mvn	r2, #-2147483648
 4046              	.LVL317:
 4047 0784 F0FEFFEA 		b	.L153
 4048              	.LVL318:
 4049              	.L172:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 4050              		.loc 3 335 0
 4051 0788 0701A0E3 		mov	r0, #-1073741823
 4052              	.LVL319:
 4053 078c 0010E0E3 		mvn	r1, #0
 4054 0790 E2FEFFEA 		b	.L142
 4055              	.LVL320:
 4056              	.L225:
 4057 0794 00C060E2 		rsb	ip, r0, #0
 4058              	.LBE2551:
 4059              	.LBE2554:
 4060              	.LBE2557:
 4061              	.LBE2649:
 4062              	.LBB2650:
 4063              	.LBB2622:
 4064              	.LBB2611:
 4065              	.LBB2612:
 4066              	.LBB2613:
 4067              	.LBB2614:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 4068              		.loc 3 158 0
 4069 0798 0000A0E3 		mov	r0, #0
 4070              	.LVL321:
 4071              	.LBE2614:
 4072              	.LBE2613:
 4073              	.LBE2612:
 4074              	.LBE2611:
 4075              	.LBB2618:
 4076              	.LBB2568:
 4077              	.LBB2567:
 4078              	.LBB2566:
 4079 079c 00B0A0E1 		mov	fp, r0
 4080 07a0 0131A003 		moveq	r3, #1073741824
 4081              	.LVL322:
 4082 07a4 0030A011 		movne	r3, r0
 4083 07a8 0020E013 		mvnne	r2, #0
 4084 07ac 0020A001 		moveq	r2, r0
 4085              	.LBE2566:
 4086              	.LBE2567:
 4087              	.LBE2568:
 4088              	.LBE2618:
 4089              	.LBB2619:
 4090              	.LBB2617:
 4091              	.LBB2616:
 4092              	.LBB2615:
 4093 07b0 0010E0E3 		mvn	r1, #0
 4094 07b4 F7FEFFEA 		b	.L144
 4095              	.LVL323:
 4096              	.L169:
 4097              	.LBE2615:
 4098              	.LBE2616:
 4099              	.LBE2617:
 4100              	.LBE2619:
 4101              	.LBE2622:
 4102              	.LBE2650:
 4103              	.LBE2654:
 4104              	.LBE2658:
 4105              	.LBE2662:
 4106              	.LBE2666:
 4107              	.LBE2670:
 4108              	.LBE2674:
 4109              	.LBE2771:
 4110              	.LBB2772:
 4111              	.LBB2763:
 4112              	.LBB2759:
 4113              	.LBB2740:
 4114              	.LBB2734:
 4115              	.LBB2731:
 4116              	.LBB2725:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 4117              		.loc 9 292 0
 4118 07b8 0310A0E1 		mov	r1, r3
 4119 07bc 88FFFFEA 		b	.L116
 4120              	.LVL324:
 4121              	.L106:
 4122 07c0 041041E2 		sub	r1, r1, #4
 4123 07c4 040045E2 		sub	r0, r5, #4
 4124              	.LBE2725:
 4125              	.LBE2731:
 4126              	.LBE2734:
 4127              	.LBB2735:
 4128              	.LBB2715:
 4129              	.LBB2704:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 4130              		.loc 9 216 0
 4131 07c8 0030A0E3 		mov	r3, #0
 4132              	.LVL325:
 4133              	.L112:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4134              		.loc 9 215 0
 4135 07cc 030054E1 		cmp	r4, r3
 4136              	.LBE2704:
 4137              	.LBE2715:
 4138              	.LBB2716:
 4139              	.LBB2697:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 4140              		.loc 9 216 0
 4141 07d0 04C0B0E5 		ldr	ip, [r0, #4]!
 4142              	.LVL326:
 4143              	.LBE2697:
 4144              	.LBE2716:
 4145              	.LBB2717:
 4146              	.LBB2705:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4147              		.loc 9 215 0
 4148 07d4 280000DA 		ble	.L107
 4149              	.LVL327:
 4150              	.LBE2705:
 4151              	.LBE2717:
 4152              		.loc 9 524 0
 4153 07d8 04E0B1E5 		ldr	lr, [r1, #4]!
 4154 07dc 0E005CE1 		cmp	ip, lr
 4155 07e0 1500001A 		bne	.L108
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 4156              		.loc 9 523 0
 4157 07e4 013083E2 		add	r3, r3, #1
 4158              	.LVL328:
 4159 07e8 030052E1 		cmp	r2, r3
 4160 07ec F6FFFF1A 		bne	.L112
 4161              	.LVL329:
 4162              	.LBE2735:
 4163              	.LBB2736:
 4164              	.LBB2732:
 4165              	.LBB2726:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 4166              		.loc 9 292 0
 4167 07f0 000052E3 		cmp	r2, #0
 4168              	.LBE2726:
 4169              	.LBB2727:
 4170              	.LBB2723:
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   }
 4171              		.loc 9 232 0
 4172 07f4 05C0A0E1 		mov	ip, r5
 4173              	.LVL330:
 4174              	.LBE2723:
 4175              	.LBE2727:
 4176              	.LBB2728:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 4177              		.loc 9 292 0
 4178 07f8 53FFFFCA 		bgt	.L109
 4179              	.LVL331:
 4180              	.L161:
 4181              	.LBE2728:
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 4182              		.loc 9 290 0
 4183 07fc 0150A0E3 		mov	r5, #1
 4184 0800 A4FFFFEA 		b	.L104
 4185              	.LVL332:
 4186              	.L162:
 4187              	.LBB2729:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 4188              		.loc 9 292 0
 4189 0804 0150A0E3 		mov	r5, #1
 4190 0808 0310A0E1 		mov	r1, r3
 4191 080c 76FFFFEA 		b	.L115
 4192              	.LVL333:
 4193              	.L171:
 4194              	.LBE2729:
 4195              	.LBE2732:
 4196              	.LBE2736:
 4197              	.LBE2740:
 4198              	.LBE2759:
 4199              	.LBE2763:
 4200              	.LBE2772:
 4201              	.LBB2773:
 4202              	.LBB2504:
 4203              	.LBB2502:
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 4204              		.loc 5 163 0
 4205 0810 0100A0E3 		mov	r0, #1
 4206 0814 0010A0E3 		mov	r1, #0
 4207              	.LVL334:
 4208 0818 0080A0E3 		mov	r8, #0
 4209 081c 02C0A0E1 		mov	ip, r2
 4210 0820 79FEFFEA 		b	.L135
 4211              	.LVL335:
 4212              	.L134:
 4213              	.LBE2502:
 4214              	.LBE2504:
 4215              	.LBE2773:
 4216              	.LBB2774:
 4217              	.LBB2509:
 4218              		.loc 4 63 0
 4219 0824 08309DE5 		ldr	r3, [sp, #8]
 4220              	.LBE2509:
 4221              	.LBE2774:
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/logistic.cpp ****             data->input_zero_point, data->input_range_radius,
 4222              		.loc 1 111 0
 4223 0828 0160A0E3 		mov	r6, #1
 4224              	.LBB2775:
 4225              	.LBB2510:
 4226              		.loc 4 63 0
 4227 082c 007093E5 		ldr	r7, [r3]
 4228              	.LBE2510:
 4229              	.LBE2775:
 4230              	.LBB2776:
 4231              	.LBB2679:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 4232              		.loc 4 56 0
 4233 0830 04309DE5 		ldr	r3, [sp, #4]
 4234 0834 004093E5 		ldr	r4, [r3]
 4235              	.LVL336:
 4236 0838 87FEFFEA 		b	.L138
 4237              	.LVL337:
 4238              	.L108:
 4239              	.LEHB3:
 4240              	.LBE2679:
 4241              	.LBE2776:
 4242              	.LBB2777:
 4243              	.LBB2764:
 4244              	.LBB2760:
 4245              	.LBB2741:
 4246              	.LBB2737:
 4247              		.loc 9 524 0
 4248 083c FEFFFFEB 		bl	abort
 4249              	.LVL338:
 4250              	.LEHE3:
 4251              	.L178:
 4252              	.LBE2737:
 4253              	.LBE2741:
 4254              	.LBE2760:
 4255              	.LBE2764:
 4256              	.LBE2777:
 4257              	.LBB2778:
 4258              	.LBB2779:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4259              		.loc 9 203 0
 4260 0840 48309DE5 		ldr	r3, [sp, #72]
 4261 0844 050053E3 		cmp	r3, #5
 4262 0848 030000DA 		ble	.L151
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4263              		.loc 9 207 0
 4264 084c 4C009DE5 		ldr	r0, [sp, #76]
 4265 0850 000050E3 		cmp	r0, #0
 4266 0854 0000000A 		beq	.L151
 4267 0858 FEFFFFEB 		bl	_ZdaPv
 4268              	.LVL339:
 4269              	.L151:
 4270              	.LBE2779:
 4271              	.LBE2778:
 4272              	.LBB2780:
 4273              	.LBB2781:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 4274              		.loc 9 203 0 discriminator 1
 4275 085c 30309DE5 		ldr	r3, [sp, #48]
 4276 0860 050053E3 		cmp	r3, #5
 4277 0864 030000DA 		ble	.L152
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 4278              		.loc 9 207 0
 4279 0868 34009DE5 		ldr	r0, [sp, #52]
 4280 086c 000050E3 		cmp	r0, #0
 4281 0870 0000000A 		beq	.L152
 4282 0874 FEFFFFEB 		bl	_ZdaPv
 4283              	.LVL340:
 4284              	.L152:
 4285              	.LEHB4:
 4286 0878 FEFFFFEB 		bl	__cxa_end_cleanup
 4287              	.LVL341:
 4288              	.LEHE4:
 4289              	.L107:
 4290              	.LEHB5:
 4291              	.LBE2781:
 4292              	.LBE2780:
 4293              	.LBB2782:
 4294              	.LBB2765:
 4295              	.LBB2761:
 4296              	.LBB2742:
 4297              	.LBB2738:
 4298              	.LBB2718:
 4299              	.LBB2706:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 4300              		.loc 9 215 0
 4301 087c FEFFFFEB 		bl	abort
 4302              	.LVL342:
 4303              	.LEHE5:
 4304              	.L99:
 4305              	.LEHB6:
 4306              	.LBE2706:
 4307              	.LBE2718:
 4308              	.LBE2738:
 4309              	.LBE2742:
 4310              	.LBE2761:
 4311              	.LBE2765:
 4312              	.LBE2782:
 4313              	.LBB2783:
 4314              	.LBB2489:
 4315              	.LBB2486:
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 4316              		.loc 4 34 0
 4317 0880 FEFFFFEB 		bl	abort
 4318              	.LVL343:
 4319              	.L224:
 4320              	.LBE2486:
 4321              	.LBE2489:
 4322              	.LBE2783:
 4323              	.LBB2784:
 4324              	.LBB2675:
 4325              	.LBB2671:
 4326              	.LBB2667:
 4327              	.LBB2663:
 4328              	.LBB2659:
 4329              	.LBB2655:
 4330              	.LBB2651:
 4331              	.LBB2558:
 4332              	.LBB2555:
 4333              	.LBB2545:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 4334              		.loc 3 359 0
 4335 0884 003000E3 		movw	r3, #:lower16:.LC12
 4336              	.LVL344:
 4337 0888 002000E3 		movw	r2, #:lower16:.LANCHOR1
 4338 088c 000000E3 		movw	r0, #:lower16:.LC13
 4339 0890 003040E3 		movt	r3, #:upper16:.LC12
 4340 0894 002040E3 		movt	r2, #:upper16:.LANCHOR1
 4341 0898 000040E3 		movt	r0, #:upper16:.LC13
 4342 089c 671100E3 		movw	r1, #359
 4343 08a0 FEFFFFEB 		bl	__assert_func
 4344              	.LVL345:
 4345              	.LEHE6:
 4346              	.L103:
 4347              	.LEHB7:
 4348              	.LBE2545:
 4349              	.LBE2555:
 4350              	.LBE2558:
 4351              	.LBE2651:
 4352              	.LBE2655:
 4353              	.LBE2659:
 4354              	.LBE2663:
 4355              	.LBE2667:
 4356              	.LBE2671:
 4357              	.LBE2675:
 4358              	.LBE2784:
 4359              	.LBB2785:
 4360              	.LBB2766:
 4361              	.LBB2762:
 4362              	.LBB2743:
 521:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 4363              		.loc 9 521 0
 4364 08a4 FEFFFFEB 		bl	abort
 4365              	.LVL346:
 4366              	.LEHE7:
 4367              	.L177:
 4368 08a8 EBFFFFEA 		b	.L151
 4369              	.LBE2743:
 4370              	.LBE2762:
 4371              	.LBE2766:
 4372              	.LBE2785:
 4373              		.cfi_endproc
 4374              	.LFE4176:
 4375              		.global	__gxx_personality_v0
 4376              		.personality	__gxx_personality_v0
 4377              		.handlerdata
 4378              	.LLSDA4176:
 4379 000c FF       		.byte	0xff
 4380 000d FF       		.byte	0xff
 4381 000e 01       		.byte	0x1
 4382 000f 2C       		.uleb128 .LLSDACSE4176-.LLSDACSB4176
 4383              	.LLSDACSB4176:
 4384 0010 2C       		.uleb128 .LEHB0-.LFB4176
 4385 0011 E008     		.uleb128 .LEHE0-.LEHB0
 4386 0013 00       		.uleb128 0
 4387 0014 00       		.uleb128 0
 4388 0015 9809     		.uleb128 .LEHB1-.LFB4176
 4389 0017 04       		.uleb128 .LEHE1-.LEHB1
 4390 0018 A811     		.uleb128 .L177-.LFB4176
 4391 001a 00       		.uleb128 0
 4392 001b C40E     		.uleb128 .LEHB2-.LFB4176
 4393 001d 2C       		.uleb128 .LEHE2-.LEHB2
 4394 001e 00       		.uleb128 0
 4395 001f 00       		.uleb128 0
 4396 0020 BC10     		.uleb128 .LEHB3-.LFB4176
 4397 0022 04       		.uleb128 .LEHE3-.LEHB3
 4398 0023 C010     		.uleb128 .L178-.LFB4176
 4399 0025 00       		.uleb128 0
 4400 0026 F810     		.uleb128 .LEHB4-.LFB4176
 4401 0028 04       		.uleb128 .LEHE4-.LEHB4
 4402 0029 00       		.uleb128 0
 4403 002a 00       		.uleb128 0
 4404 002b FC10     		.uleb128 .LEHB5-.LFB4176
 4405 002d 04       		.uleb128 .LEHE5-.LEHB5
 4406 002e C010     		.uleb128 .L178-.LFB4176
 4407 0030 00       		.uleb128 0
 4408 0031 8011     		.uleb128 .LEHB6-.LFB4176
 4409 0033 24       		.uleb128 .LEHE6-.LEHB6
 4410 0034 00       		.uleb128 0
 4411 0035 00       		.uleb128 0
 4412 0036 A411     		.uleb128 .LEHB7-.LFB4176
 4413 0038 04       		.uleb128 .LEHE7-.LEHB7
 4414 0039 C010     		.uleb128 .L178-.LFB4176
 4415 003b 00       		.uleb128 0
 4416              	.LLSDACSE4176:
 4417              		.section	.text._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode
 4418              		.fnend
 4420              		.section	.rodata
 4421              		.align	2
 4422              		.set	.LANCHOR0,. + 0
 4423              	.LC0:
 4424 0000 00000000 		.word	_ZN6tflite3ops5micro11activations12LogisticInitEP13TfLiteContextPKcj
 4425 0004 00000000 		.word	0
 4426 0008 00000000 		.word	_ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode
 4427 000c 00000000 		.word	_ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode
 4428 0010 00000000 		.word	0
 4429 0014 00000000 		.word	0
 4430 0018 00000000 		.word	0
 4431 001c 00000000 		.word	0
 4432              		.section	.rodata._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode.str
 4433              		.align	2
 4434              	.LC11:
 4435 0000 496E7075 		.ascii	"Input %s, output %s not supported.\000"
 4435      74202573 
 4435      2C206F75 
 4435      74707574 
 4435      20257320 
 4436 0023 00       		.space	1
 4437              	.LC12:
 4438 0024 6578706F 		.ascii	"exponent <= 31\000"
 4438      6E656E74 
 4438      203C3D20 
 4438      333100
 4439 0033 00       		.space	1
 4440              	.LC13:
 4441 0034 433A2F52 		.ascii	"C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/AN"
 4441      656E6573 
 4441      61732F65 
 4441      32737475 
 4441      64696F5F 
 4442 0067 50525F52 		.ascii	"PR_RZA2M_RDK/src/tensorflow_lite/src/third_party/ge"
 4442      5A41324D 
 4442      5F52444B 
 4442      2F737263 
 4442      2F74656E 
 4443 009a 6D6D6C6F 		.ascii	"mmlowp/fixedpoint/fixedpoint.h\000"
 4443      77702F66 
 4443      69786564 
 4443      706F696E 
 4443      742F6669 
 4444              		.section	.rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.
 4445              		.align	2
 4446              	.LC1:
 4447 0000 2E2E2F73 		.ascii	"../src/tensorflow_lite/src/tensorflow/lite/micro/ke"
 4447      72632F74 
 4447      656E736F 
 4447      72666C6F 
 4447      775F6C69 
 4448 0033 726E656C 		.ascii	"rnels/logistic.cpp\000"
 4448      732F6C6F 
 4448      67697374 
 4448      69632E63 
 4448      707000
 4449 0046 0000     		.space	2
 4450              	.LC2:
 4451 0048 25733A25 		.ascii	"%s:%d %s was not true.\000"
 4451      64202573 
 4451      20776173 
 4451      206E6F74 
 4451      20747275 
 4452 005f 00       		.space	1
 4453              	.LC3:
 4454 0060 696E7075 		.ascii	"input != nullptr\000"
 4454      7420213D 
 4454      206E756C 
 4454      6C707472 
 4454      00
 4455 0071 000000   		.space	3
 4456              	.LC4:
 4457 0074 6F757470 		.ascii	"output != nullptr\000"
 4457      75742021 
 4457      3D206E75 
 4457      6C6C7074 
 4457      7200
 4458 0086 0000     		.space	2
 4459              	.LC5:
 4460 0088 25733A25 		.ascii	"%s:%d %s != %s (%s != %s)\000"
 4460      64202573 
 4460      20213D20 
 4460      25732028 
 4460      25732021 
 4461 00a2 0000     		.space	2
 4462              	.LC6:
 4463 00a4 6F757470 		.ascii	"output->type\000"
 4463      75742D3E 
 4463      74797065 
 4463      00
 4464 00b1 000000   		.space	3
 4465              	.LC7:
 4466 00b4 696E7075 		.ascii	"input->type\000"
 4466      742D3E74 
 4466      79706500 
 4467              	.LC8:
 4468 00c0 25733A25 		.ascii	"%s:%d %s != %s (%d != %d)\000"
 4468      64202573 
 4468      20213D20 
 4468      25732028 
 4468      25642021 
 4469 00da 0000     		.space	2
 4470              	.LC9:
 4471 00dc 7374643A 		.ascii	"std::numeric_limits<int8_t>::min()\000"
 4471      3A6E756D 
 4471      65726963 
 4471      5F6C696D 
 4471      6974733C 
 4472 00ff 00       		.space	1
 4473              	.LC10:
 4474 0100 6F757470 		.ascii	"output->params.zero_point\000"
 4474      75742D3E 
 4474      70617261 
 4474      6D732E7A 
 4474      65726F5F 
 4475              		.section	.rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__,"a",%progbits
 4476              		.align	3
 4477              		.set	.LANCHOR1,. + 0
 4480              	_ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:
 4481 0000 496E7465 		.ascii	"IntegerType gemmlowp::RoundingDivideByPOT(IntegerTy"
 4481      67657254 
 4481      79706520 
 4481      67656D6D 
 4481      6C6F7770 
 4482 0033 70652C20 		.ascii	"pe, int) [with IntegerType = long int]\000"
 4482      696E7429 
 4482      205B7769 
 4482      74682049 
 4482      6E746567 
 4483              		.text
 4484              	.Letext0:
 4485              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4486              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4487              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4488              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4489              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4490              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4491              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4492              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4493              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4494              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4495              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4496              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4497              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4498              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4499              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4500              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4501              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4502              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4503              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4504              		.file 31 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4505              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4506              		.file 33 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 4507              		.file 34 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4508              		.file 35 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4509              		.file 36 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4510              		.file 37 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4511              		.file 38 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 4512              		.file 39 "<built-in>"
 4513              		.file 40 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4514              		.file 41 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4515              		.file 42 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4516              		.file 43 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4517              		.file 44 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4518              		.file 45 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4519              		.file 46 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4520              		.file 47 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4521              		.file 48 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4522              		.file 49 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4523              		.file 50 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
 4524              		.file 51 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
 4525              		.file 52 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
 4526              		.file 53 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 logistic.cpp
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:17     .text._ZN6tflite3ops5micro11activations12LogisticInitEP13TfLiteContextPKcj:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:23     .text._ZN6tflite3ops5micro11activations12LogisticInitEP13TfLiteContextPKcj:00000000 _ZN6tflite3ops5micro11activations12LogisticInitEP13TfLiteContextPKcj
.ARM.exidx.text._ZN6tflite3ops5micro11activations12LogisticInitEP13TfLiteContextPKcj:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:56     .text._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:62     .text._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode:00000000 _ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4462   .rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.str1.4:000000a4 .LC6
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4465   .rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.str1.4:000000b4 .LC7
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4446   .rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000000 .LC1
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4459   .rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000088 .LC5
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4470   .rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.str1.4:000000dc .LC9
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4473   .rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000100 .LC10
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4467   .rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.str1.4:000000c0 .LC8
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4453   .rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000060 .LC3
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4450   .rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000048 .LC2
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4456   .rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000074 .LC4
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:339    .text._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode:000001f0 $d
.ARM.exidx.text._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:348    .text._ZN6tflite3ops5micro17Register_LOGISTICEv:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:354    .text._ZN6tflite3ops5micro17Register_LOGISTICEv:00000000 _ZN6tflite3ops5micro17Register_LOGISTICEv
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4422   .rodata:00000000 .LANCHOR0
.ARM.exidx.text._ZN6tflite3ops5micro17Register_LOGISTICEv:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:389    .text._ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:395    .text._ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_:00000000 _ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:1290   .text._ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_:000004b0 $d
.ARM.exidx.text._ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IlEENS_10FixedPointIT_Li0EEES3_:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:1301   .text._ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10FixedPointIT_Li0EEES3_:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:1307   .text._ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10FixedPointIT_Li0EEES3_:00000000 _ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10FixedPointIT_Li0EEES3_
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:1696   .text._ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10FixedPointIT_Li0EEES3_:000001c0 $d
.ARM.exidx.text._ZN8gemmlowp55exp_on_interval_between_negative_one_quarter_and_0_exclIlEENS_10FixedPointIT_Li0EEES3_:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:1708   .text._ZN8gemmlowp22exp_on_negative_valuesIlLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:1714   .text._ZN8gemmlowp22exp_on_negative_valuesIlLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE:00000000 _ZN8gemmlowp22exp_on_negative_valuesIlLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE
.ARM.exidx.text._ZN8gemmlowp22exp_on_negative_valuesIlLi4EEENS_10FixedPointIT_Li0EEENS1_IS2_XT0_EEE:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:2698   .text._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:2704   .text._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode:00000000 _ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4434   .rodata._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode.str1.4:00000000 .LC11
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:3550   .text._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode:00000460 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:3563   .text._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode:0000046c $a
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4437   .rodata._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode.str1.4:00000024 .LC12
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4477   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 .LANCHOR1
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4440   .rodata._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode.str1.4:00000034 .LC13
.ARM.extab.text._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode:00000000 $d
.ARM.exidx.text._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4421   .rodata:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4433   .rodata._ZN6tflite3ops5micro11activations12LogisticEvalEP13TfLiteContextP10TfLiteNode.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4445   .rodata._ZN6tflite3ops5micro11activations15LogisticPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4476   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczxiMes.s:4480   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 _ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.3e1481985cce1e923928453d8be0a65b
                           .group:00000000 wm4.cconfig.h.31.1472b8c7bd4952a63a52f3f4f718f872
                           .group:00000000 wm4.cpu_defines.h.31.54d44f9d3e7c42875c5a7fd49795eb93
                           .group:00000000 wm4.cconfig.h.515.5e729db314ae74226e291b4ae081e353
                           .group:00000000 wm4.limits.89.6a37aaf13947bdd77504340a7bdcc6d8
                           .group:00000000 wm4.atomic_lockfree_defines.h.31.d5c6334fb1e95c9462b052951f1411df
                           .group:00000000 wm4.exception_defines.h.31.ca6841b9be3287386aafc5c717935b2e
                           .group:00000000 wm4.concept_check.h.31.f19605d278e56917c68a56d378be308c
                           .group:00000000 wm4.type_traits.30.2c7323a483bcd7601e8b71d2546ae284
                           .group:00000000 wm4.move.h.152.41d7b9e6779674d169b7813982cfa003
                           .group:00000000 wm4.cpp_type_traits.h.33.9f2bfd8c4471a9a299f6da3ec24c745c
                           .group:00000000 wm4.numeric_traits.h.30.aa01a98564b7e55086aad9e53c7e5c53
                           .group:00000000 wm4.assertions.h.30.51d443923f0d242550e04246a7819b39
                           .group:00000000 wm4.stl_iterator.h.1250.45f349a262f1b0d836d8edbc4b7b98ff
                           .group:00000000 wm4.debug.h.30.5c1f223b12199e851d4d42805b788ccf
                           .group:00000000 wm4.stl_algobase.h.491.aa250b69c90aafa2a0a62b8c58cd5f30
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.newlib.h.21.59901f4bf241ab46c63694665baa7297
                           .group:00000000 wm4.features.h.22.37852b648068a281464730a5a4cc748e
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:00000000 wm4.stddef.h.39.fa2e86d241f4df50b9327c72832885e1
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.wchar.h.8.acdef4366e64def8c588421024712d23
                           .group:00000000 wm4.stddef.h.161.9f48187563b2a85291a91832aa425498
                           .group:00000000 wm4.cdefs.h.47.9bc8274c84fddbf05edd550eb0bf48cd
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.wchar.h.41.bce54f0deafe8a72ebb0005417e8a086
                           .group:00000000 wm4.cwchar.48.c4e882638bf84f6da89479dda6fe8e17
                           .group:00000000 wm4.stdint.h.4.659be5aa44c4ab4eb7c7cc2b24d8ceee
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.4c107c5a20920bfc6e94fb2672bbd9ee
                           .group:00000000 wm4.allocator.h.52.0ceafb36dc1b82dbfa6b05003082e3f5
                           .group:00000000 wm4.stddef.h.161.38688f2eb958a8ed58fdb61ffe554c94
                           .group:00000000 wm4.locale.h.16.524572cf3c2ed9856516685acdc598fe
                           .group:00000000 wm4.clocale.45.c36d2d5b631a875aa5273176b54fdf0f
                           .group:00000000 wm4.ctype.h.2.da310d2ad165ccf8b86542f76fdb938d
                           .group:00000000 wm4.cctype.45.0da5714876b0be7f2d816b53d9670403
                           .group:00000000 wm4.gthr.h.27.ceb1c66b926f052afcba57e8784df0d4
                           .group:00000000 wm4.gthrdefault.h.27.edc94d4398c0534988962be77dc3c2e1
                           .group:00000000 wm4.atomic_word.h.30.9e0ac69fd462d5e650933e05133b4afa
                           .group:00000000 wm4.alloc_traits.h.31.c41c7c4789404962122a4e991dfa3abf
                           .group:00000000 wm4.cstdlib.44.52c5efdfb0f3c176bd11e611a0b94959
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stdlib.h.56.b4ddaf162082f284ba35b4444af99a9a
                           .group:00000000 wm4.cstdlib.76.ae666499c8f9b0ace1b4b23fe143da2c
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.c3e9cb15e5af2807c4650345134c1a8a
                           .group:00000000 wm4.cstdio.45.ba8d321feb18bfc8923454067605c368
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.1ecd7b1049497a0ab61da0f6cbd4b0c6
                           .group:00000000 wm4.functional_hash.h.31.bccc014fee6fc3f930045d809df6f486
                           .group:00000000 wm4.functional.549.0bc5b448cf999863d3841495cd6fe920
                           .group:00000000 wm4.assert.h.11.a5d97ca77559a42890313c4941c01fd9
                           .group:00000000 wm4.math.h.13.e7cbdea54f4da98ab8f7fad4d23502b2
                           .group:00000000 wm4.cmath.46.d6e5b776115d39075860ed881d18f087
                           .group:00000000 wm4.detect_platform.h.19.a1891273c0cad215067ddb8219400136
                           .group:00000000 wm4.fixedpoint.h.567.8a6371d9452be19811601bace78b0abc
                           .group:00000000 wm4.cmath.44.b3bcbb5fe53ec6617dec8aa8eb7b03cc
                           .group:00000000 wm4.cppmath.h.27.51580d700716589df4b364298e2ef577
                           .group:00000000 wm4.neon_check.h.16.79a4dcb572cbeac06c4924f1f20cb68d
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.cstring.45.6ab09de7fb97b576e744347688ddc8d7
                           .group:00000000 wm4.op_macros.h.42.7b718cb416a067e7bb07e7699647769b
                           .group:00000000 wm4.compatibility.h.23.702d6356326ea59aded8ef5c6c4626d5
                           .group:00000000 wm4.stdbool.h.29.01580e438512fc255c0619569742ffd3
                           .group:00000000 wm4.c_api_types.h.20.9b09175981ed746180e205cc0b4b2bfd
                           .group:00000000 wm4.common.h.77.124de099ec0ac4f95ebf1618a5f42cf6

UNDEFINED SYMBOLS
abort
__aeabi_unwind_cpp_pr0
_ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
_ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
TfLiteTypeGetName
frexp
round
_ZN6tflite20CalculateInputRadiusEiii
__gxx_personality_v0
_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
expf
_ZdaPv
__cxa_end_cleanup
__assert_func
