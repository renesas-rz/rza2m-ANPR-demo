
;; Function TfLiteStatus tflite::MicroInterpreter::PrepareNodeAndRegistrationDataFromFlatbuffer() (_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv, funcdef_no=6654, decl_uid=181014, cgraph_uid=3842, symbol_order=3877)


Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:91
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:91:64: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:91:64: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:91:64: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:91:64: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11447
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11447:90: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11447:90: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11447:90: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11447:90: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:90:14: note: vectorized 0 loops in function.
TfLiteStatus tflite::MicroInterpreter::PrepareNodeAndRegistrationDataFromFlatbuffer() (struct MicroInterpreter * const this)
{
  const uint8_t * p;
  const struct OperatorCode * D.239301;
  static const char __PRETTY_FUNCTION__[258] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::OperatorCode>; flatbuffers::Vector<T>::return_type = const tflite::OperatorCode*; flatbuffers::uoffset_t = long unsigned int]";
  const uint8_t * p;
  const struct Operator * D.239293;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::Operator>; flatbuffers::Vector<T>::return_type = const tflite::Operator*; flatbuffers::uoffset_t = long unsigned int]";
  const uint8_t * p;
  const struct SubGraph * D.239285;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  const size_t index;
  const size_t index;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  const size_t index;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  struct TfLiteIntArray * outputs_array;
  struct TfLiteIntArray * inputs_array;
  unsigned char * builtin_data;
  size_t custom_data_size;
  const char * custom_data;
  BuiltinOperator op_type;
  const struct TfLiteRegistration * registration;
  size_t i;
  int subgraph_idx;
  TfLiteStatus _5;
  TfLiteStatus _6;
  long int _12;
  int _17;
  const struct Model * _18;
  long unsigned int subgraph_idx.2_20;
  struct MicroAllocator & _25;
  struct BuiltinDataAllocator * _27;
  long unsigned int _34;
  long unsigned int _35;
  const struct MicroOpResolver & _38;
  const struct OpResolver * _39;
  struct ErrorReporter * _40;
  unsigned int _42;
  struct SubgraphAllocations * _43;
  struct NodeAndRegistration * _44;
  unsigned int _45;
  struct NodeAndRegistration * _46;
  const struct TfLiteRegistration * * _47;
  TfLiteStatus _49;
  long unsigned int _50;
  struct SubgraphAllocations * _51;
  struct NodeAndRegistration * _52;
  struct NodeAndRegistration * _53;
  long int _55;
  sizetype _59;
  short unsigned int _61;
  int _62;
  short unsigned int _63;
  const struct MicroOpResolver & _64;
  int (*__vtbl_ptr_type) () * _65;
  int (*__vtbl_ptr_type) () _66;
  TfLiteStatus (*BuiltinParseFunction) (const struct Operator *, struct ErrorReporter *, struct BuiltinDataAllocator *, void * *) _68;
  struct ErrorReporter * _69;
  const TfLiteStatus _71;
  sizetype _72;
  const uint8_t * _74;
  struct MicroAllocator & _76;
  sizetype _77;
  const TfLiteStatus _79;
  struct MicroAllocator & _80;
  long int _81;
  const TfLiteStatus _83;
  const uint8_t[1] * _84;
  struct SubgraphAllocations * _85;
  struct NodeAndRegistration * _86;
  struct NodeAndRegistration * _87;
  struct TfLiteIntArray * inputs_array.8_89;
  struct TfLiteIntArray * outputs_array.9_91;
  unsigned char * builtin_data.10_93;
  int custom_data_size.11_96;
  BuiltinOperator _104;
  const struct Vector * iftmp.12_105;
  struct SubgraphAllocations * _112;
  struct SubgraphAllocations * _113;
  struct SubgraphAllocations * _114;
  short unsigned int _115;
  sizetype _117;
  long unsigned int _119;
  const struct Vector * iftmp.14_120;
  const struct Vector * iftmp.14_121;
  long unsigned int _122;
  long int _124;
  sizetype _125;
  sizetype _126;
  const uint8_t * _127;
  short unsigned int _128;
  int _129;
  short unsigned int _130;
  sizetype _132;
  long unsigned int _134;
  const struct Vector * iftmp.15_135;
  long unsigned int _144;
  const uint8_t[1] * _145;
  long int _146;
  sizetype _147;
  sizetype _148;
  const uint8_t * _149;
  short unsigned int _150;
  int _151;
  short unsigned int _152;
  sizetype _154;
  const void * _155;
  long unsigned int _156;
  long unsigned int iftmp.16_157;
  int _158;
  unsigned int _161;
  const char * const * _162;
  const char * _163;
  const char * _164;
  long int _165;
  sizetype _166;
  sizetype _167;
  const uint8_t * _168;
  short unsigned int _169;
  int _170;
  short unsigned int _171;
  sizetype _173;
  long unsigned int _175;
  const struct Vector * iftmp.17_176;
  long unsigned int _178;
  const uint8_t[1] * prephitmp_179;
  short unsigned int pretmp_183;
  const uint8_t * _186;
  sizetype _187;
  const uint8_t[1] * _192;
  long int _194;
  sizetype _195;
  sizetype _196;
  const uint8_t * _197;
  short unsigned int _198;
  int _199;
  short unsigned int _200;
  long unsigned int _204;
  const struct Vector * iftmp.17_205;
  unsigned int _209;
  const char * const * _210;
  const char * _211;
  const char * _212;
  int prephitmp_213;
  unsigned int _215;
  const char * const * _216;
  const char * _217;
  const char * _218;
  short unsigned int _225;
  sizetype _227;
  long unsigned int _229;
  const struct Vector * iftmp.21_230;
  const struct Vector * iftmp.21_231;
  long int _232;
  sizetype _233;
  sizetype _234;
  const uint8_t * _235;
  short unsigned int _236;
  int _237;
  short unsigned int _238;
  sizetype _240;
  long unsigned int _242;
  const struct Vector * iftmp.21_243;
  const struct Vector * iftmp.21_244;
  long int _245;
  long unsigned int _246;
  const uint8_t * _247;
  long unsigned int _248;
  long unsigned int _250;
  const struct SubGraph * _251;
  const uint8_t * _253;
  long unsigned int _254;
  long unsigned int _256;
  const struct Operator * _257;
  const uint8_t * _259;
  long unsigned int _260;
  long unsigned int _262;
  const struct OperatorCode * _263;
  const uint8_t[1] * pretmp_312;
  sizetype _313;
  long int pretmp_326;
  const struct OperatorCode * _331;
  int _332;
  long unsigned int iftmp.16_333;
  struct MicroGraph * pretmp_335;
  long unsigned int iftmp.16_336;
  sizetype _337;
  TfLiteStatus _339;
  TfLiteStatus _340;
  TfLiteStatus _341;
  long int _342;
  long int _343;
  TfLiteStatus _344;

  <bb 2>:
  # DEBUG subgraph_idx => 0
  pretmp_335 = &this_14(D)->graph_;

  <bb 3>:
  # subgraph_idx_1 = PHI <0(2), subgraph_idx_30(55)>
  # DEBUG subgraph_idx => subgraph_idx_1
  _17 = tflite::MicroGraph::NumSubgraphs (pretmp_335);
  if (subgraph_idx_1 < _17)
    goto <bb 4>;
  else
    goto <bb 56>;

  <bb 4>:
  _18 = this_14(D)->model_;
  # DEBUG this => _18
  # DEBUG D#17 => &_18->D.122220
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  _84 = &MEM[(const struct Table *)_18].data_;
  # DEBUG p => _84
  _81 = MEM[(const long int *)_18];
  # DEBUG t => _81
  # DEBUG t => NULL
  # DEBUG p => NULL
  _77 = (sizetype) _81;
  _72 = -_77;
  _74 = _84 + _72;
  # DEBUG this => NULL
  # DEBUG vtable => _74
  # DEBUG p => _74
  _63 = MEM[(const short unsigned int *)_74];
  # DEBUG t => _63
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _63
  _62 = (int) _63;
  if (_62 > 8)
    goto <bb 5>;
  else
    goto <bb 60>;

  <bb 5>:
  # DEBUG p => _74 + 8
  _61 = MEM[(const short unsigned int *)_74 + 8B];
  # DEBUG t => _61
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _61
  _59 = (sizetype) _61;
  p_58 = _84 + _59;
  # DEBUG p => p_58
  if (_61 != 0)
    goto <bb 6>;
  else
    goto <bb 60>;

  <bb 6>:
  # DEBUG p => p_58
  _50 = MEM[(const long unsigned int *)p_58];
  # DEBUG t => _50
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.12_105 = p_58 + _50;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  subgraph_idx.2_20 = (long unsigned int) subgraph_idx_1;
  # DEBUG this => iftmp.12_105
  # DEBUG i => subgraph_idx.2_20
  # DEBUG this => iftmp.12_105
  _246 = iftmp.12_105->length_;
  # DEBUG t => _246
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (subgraph_idx.2_20 < _246)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 8>:
  # DEBUG this => iftmp.12_105
  _247 = &MEM[(void *)iftmp.12_105 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => subgraph_idx.2_20
  _248 = subgraph_idx.2_20 * 4;
  p_249 = _247 + _248;
  # DEBUG p => p_249
  # DEBUG p => p_249
  _250 = MEM[(const long unsigned int *)p_249];
  # DEBUG t => _250
  # DEBUG t => NULL
  # DEBUG p => NULL
  _251 = p_249 + _250;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG subgraph => NULL
  if (_251 != 0B)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  abort ();

  <bb 10>:
  # DEBUG this => _18
  # DEBUG D#16 => &_18->D.122220
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG p => _84
  # DEBUG t => _81
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _74
  # DEBUG p => _74
  # DEBUG t => _63
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _63
  if (_62 > 6)
    goto <bb 11>;
  else
    goto <bb 13>;

  <bb 11>:
  # DEBUG p => _74 + 6
  _115 = MEM[(const short unsigned int *)_74 + 6B];
  # DEBUG t => _115
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _115
  _117 = (sizetype) _115;
  p_118 = _84 + _117;
  # DEBUG p => p_118
  if (_115 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG p => p_118
  _119 = MEM[(const long unsigned int *)p_118];
  # DEBUG t => _119
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.14_120 = p_118 + _119;

  <bb 13>:
  # iftmp.14_121 = PHI <0B(11), iftmp.14_120(12), 0B(10)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG opcodes => iftmp.14_121
  _25 = this_14(D)->allocator_;
  _27 = tflite::MicroAllocator::GetBuiltinDataAllocator (_25);
  # DEBUG builtin_data_allocator => _27
  # DEBUG i => 0
  pretmp_312 = &MEM[(const struct Table *)_251].data_;
  _42 = subgraph_idx.2_20 * 8;

  <bb 14>:
  # i_2 = PHI <0(13), i_101(52)>
  # DEBUG i => i_2
  # DEBUG this => NULL
  # DEBUG this => D#15
  # DEBUG field => 10
  # DEBUG this => D#15
  # DEBUG field => 10
  # DEBUG this => D#15
  # DEBUG field => 10
  # DEBUG this => D#15
  # DEBUG D#61 => &MEM[(const struct Table *)_251].data_
  # DEBUG p => D#61
  _124 = MEM[(const long int *)_251];
  # DEBUG t => _124
  # DEBUG t => NULL
  # DEBUG p => NULL
  _125 = (sizetype) _124;
  _126 = -_125;
  _127 = pretmp_312 + _126;
  # DEBUG this => NULL
  # DEBUG vtable => _127
  # DEBUG p => _127
  _128 = MEM[(const short unsigned int *)_127];
  # DEBUG t => _128
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _128
  _129 = (int) _128;
  if (_129 > 10)
    goto <bb 15>;
  else
    goto <bb 61>;

  <bb 15>:
  # DEBUG p => _127 + 10
  _130 = MEM[(const short unsigned int *)_127 + 10B];
  # DEBUG t => _130
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _130
  _132 = (sizetype) _130;
  p_133 = pretmp_312 + _132;
  # DEBUG p => p_133
  if (_130 != 0)
    goto <bb 16>;
  else
    goto <bb 61>;

  <bb 16>:
  # DEBUG p => p_133
  _134 = MEM[(const long unsigned int *)p_133];
  # DEBUG t => _134
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.15_135 = p_133 + _134;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.15_135
  _122 = iftmp.15_135->length_;
  # DEBUG t => _122
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (i_2 < _122)
    goto <bb 17>;
  else
    goto <bb 55>;

  <bb 17>:
  # DEBUG this => NULL
  # DEBUG this => D#15
  # DEBUG field => 10
  # DEBUG this => D#15
  # DEBUG field => 10
  # DEBUG this => D#15
  # DEBUG field => 10
  # DEBUG this => D#15
  # DEBUG p => D#61
  # DEBUG t => _124
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _127
  # DEBUG p => _127
  # DEBUG t => _128
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _128
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _130
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.15_135
  # DEBUG i => i_2
  # DEBUG this => iftmp.15_135
  # DEBUG t => _122
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.15_135
  _253 = &MEM[(void *)iftmp.15_135 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i_2
  _254 = i_2 * 4;
  p_255 = _253 + _254;
  # DEBUG p => p_255
  # DEBUG p => p_255
  _256 = MEM[(const long unsigned int *)p_255];
  # DEBUG t => _256
  # DEBUG t => NULL
  # DEBUG p => NULL
  _257 = p_255 + _256;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG op => NULL
  # DEBUG this => NULL
  # DEBUG this => D#9
  # DEBUG field => 4
  # DEBUG defaultval => 0
  # DEBUG this => D#9
  # DEBUG field => 4
  # DEBUG this => D#9
  _145 = &MEM[(const struct Table *)_257].data_;
  # DEBUG p => _145
  _146 = MEM[(const long int *)_257];
  # DEBUG t => _146
  # DEBUG t => NULL
  # DEBUG p => NULL
  _147 = (sizetype) _146;
  _148 = -_147;
  _149 = _145 + _148;
  # DEBUG this => NULL
  # DEBUG vtable => _149
  # DEBUG p => _149
  _150 = MEM[(const short unsigned int *)_149];
  # DEBUG t => _150
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _150
  _151 = (int) _150;
  if (_151 > 4)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:
  # DEBUG p => _149 + 4
  _152 = MEM[(const short unsigned int *)_149 + 4B];
  # DEBUG t => _152
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _152
  if (_152 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _154 = (sizetype) _152;
  _155 = _145 + _154;
  # DEBUG p => _155
  _156 = MEM[(const long unsigned int *)_155];
  # DEBUG t => _156
  # DEBUG t => NULL
  # DEBUG p => NULL

  <bb 20>:
  # iftmp.16_157 = PHI <0(18), _156(19), 0(17)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  # DEBUG index => iftmp.16_157
  # DEBUG this => iftmp.14_121
  _144 = iftmp.14_121->length_;
  # DEBUG t => _144
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_144 <= iftmp.16_157)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # iftmp.16_336 = PHI <iftmp.16_157(20)>
  MicroPrintf ("Missing registration for opcode_index %d\n", iftmp.16_336);
  goto <bb 54>;

  <bb 22>:
  # DEBUG this => iftmp.14_121
  # DEBUG i => iftmp.16_157
  # DEBUG this => iftmp.14_121
  # DEBUG t => _144
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.14_121
  _259 = &MEM[(void *)iftmp.14_121 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => iftmp.16_157
  _260 = iftmp.16_157 * 4;
  p_261 = _259 + _260;
  # DEBUG p => p_261
  # DEBUG p => p_261
  _262 = MEM[(const long unsigned int *)p_261];
  # DEBUG t => _262
  # DEBUG t => NULL
  # DEBUG p => NULL
  _263 = p_261 + _262;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG opcode => NULL
  _38 = this_14(D)->op_resolver_;
  _39 = &_38->D.180758;
  _40 = this_14(D)->error_reporter_;
  # DEBUG D#27 => &this_14(D)->graph_
  _112 = MEM[(struct SubgraphAllocations * *)this_14(D) + 120B];
  # DEBUG D#3 => D#27
  # DEBUG this => D#3
  _43 = _112 + _42;
  _44 = _43->node_and_registrations;
  _45 = i_2 * 44;
  _46 = _44 + _45;
  _47 = &_46->registration;
  _49 = tflite::GetRegistrationFromOpCode (_263, _39, _40, _47);
  # DEBUG status => _49
  if (_49 != 0)
    goto <bb 23>;
  else
    goto <bb 25>;

  <bb 23>:
  # _344 = PHI <_49(22)>
  # _331 = PHI <_263(22)>
  _104 = tflite::GetBuiltinCode (_331);
  # DEBUG e => _104
  # DEBUG D#7 => &e
  # DEBUG high => NULL
  # DEBUG v => D#7
  # DEBUG low => D#8
  _158 = (int) _104;
  if (_158 > 144)
    goto <bb 24>;
  else
    goto <bb 57>;

  <bb 24>:
  # _164 = PHI <""(23), _163(57)>
  # DEBUG e => NULL
  # DEBUG index => NULL
  MicroPrintf ("Failed to get registration from op code %s\n ", _164);
  goto <bb 54>;

  <bb 25>:
  # DEBUG D#28 => &this_14(D)->graph_
  _113 = MEM[(struct SubgraphAllocations * *)this_14(D) + 120B];
  # DEBUG D#3 => D#28
  # DEBUG this => D#3
  _51 = _113 + _42;
  _52 = _51->node_and_registrations;
  _53 = _52 + _45;
  registration_54 = _53->registration;
  # DEBUG registration => registration_54
  if (registration_54 == 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # iftmp.16_333 = PHI <iftmp.16_157(25)>
  MicroPrintf ("Skipping op for opcode_index %d\n", iftmp.16_333);
  goto <bb 54>;

  <bb 27>:
  _55 = registration_54->builtin_code;
  op_type_56 = (BuiltinOperator) _55;
  # DEBUG op_type => op_type_56
  # DEBUG custom_data => 0B
  # DEBUG custom_data_size => 0
  builtin_data = 0B;
  if (op_type_56 == 32)
    goto <bb 28>;
  else
    goto <bb 32>;

  <bb 28>:
  # DEBUG this => NULL
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG p => _145
  _165 = MEM[(const long int *)_257];
  # DEBUG t => _165
  # DEBUG t => NULL
  # DEBUG p => NULL
  _166 = (sizetype) _165;
  _167 = -_166;
  _168 = _145 + _167;
  # DEBUG this => NULL
  # DEBUG vtable => _168
  # DEBUG p => _168
  _169 = MEM[(const short unsigned int *)_168];
  # DEBUG t => _169
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _169
  _170 = (int) _169;
  if (_170 > 14)
    goto <bb 29>;
  else
    goto <bb 42>;

  <bb 29>:
  # DEBUG p => _168 + 14
  _171 = MEM[(const short unsigned int *)_168 + 14B];
  # DEBUG t => _171
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _171
  _173 = (sizetype) _171;
  p_174 = _145 + _173;
  # DEBUG p => p_174
  if (_171 != 0)
    goto <bb 30>;
  else
    goto <bb 42>;

  <bb 30>:
  # DEBUG p => p_174
  _175 = MEM[(const long unsigned int *)p_174];
  # DEBUG t => _175
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.17_176 = p_174 + _175;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  if (iftmp.17_176 != 0B)
    goto <bb 31>;
  else
    goto <bb 42>;

  <bb 31>:
  # DEBUG this => NULL
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG p => _145
  # DEBUG t => _165
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _168
  # DEBUG p => _168
  # DEBUG t => _169
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _169
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _171
  # DEBUG p => p_174
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.17_176
  # DEBUG this => iftmp.17_176
  _186 = &MEM[(void *)iftmp.17_176 + 4B];
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG custom_data => _186
  # DEBUG this => NULL
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG p => _145
  # DEBUG t => _165
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _168
  # DEBUG p => _168
  # DEBUG t => _169
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _169
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _171
  # DEBUG p => p_174
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.17_176
  _178 = iftmp.17_176->length_;
  # DEBUG t => _178
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG custom_data_size => NULL
  goto <bb 42>;

  <bb 32>:
  # DEBUG this => NULL
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG field => 14
  # DEBUG this => D#10
  # DEBUG p => _145
  _194 = MEM[(const long int *)_257];
  # DEBUG t => _194
  # DEBUG t => NULL
  # DEBUG p => NULL
  _195 = (sizetype) _194;
  _196 = -_195;
  _197 = _145 + _196;
  # DEBUG this => NULL
  # DEBUG vtable => _197
  # DEBUG p => _197
  _198 = MEM[(const short unsigned int *)_197];
  # DEBUG t => _198
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _198
  _199 = (int) _198;
  if (_199 > 14)
    goto <bb 33>;
  else
    goto <bb 37>;

  <bb 33>:
  # DEBUG p => _197 + 14
  _200 = MEM[(const short unsigned int *)_197 + 14B];
  # DEBUG t => _200
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _200
  _337 = (sizetype) _200;
  p_338 = _145 + _337;
  # DEBUG p => p_338
  if (_200 != 0)
    goto <bb 34>;
  else
    goto <bb 37>;

  <bb 34>:
  # DEBUG p => p_338
  _204 = MEM[(const long unsigned int *)p_338];
  # DEBUG t => _204
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.17_205 = p_338 + _204;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  if (iftmp.17_205 != 0B)
    goto <bb 35>;
  else
    goto <bb 37>;

  <bb 35>:
  # _343 = PHI <_55(34)>
  # DEBUG e => op_type_56
  # DEBUG D#7 => &e
  # DEBUG high => NULL
  # DEBUG v => D#7
  # DEBUG low => D#8
  _12 = _343 & 255;
  if (_12 > 144)
    goto <bb 36>;
  else
    goto <bb 58>;

  <bb 36>:
  # _212 = PHI <""(35), _211(58)>
  # DEBUG e => NULL
  # DEBUG index => NULL
  MicroPrintf ("Unsupported behavior: found builtin operator %s with custom options.\n", _212);
  goto <bb 54>;

  <bb 37>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  _64 = this_14(D)->op_resolver_;
  _65 = _64->D.180758._vptr.OpResolver;
  _66 = MEM[(int (*__vtbl_ptr_type) () *)_65 + 32B];
  _68 = OBJ_TYPE_REF(_66;(const struct MicroOpResolver)_64->8) (_64, op_type_56);
  # DEBUG parser => _68
  if (_68 == 0B)
    goto <bb 38>;
  else
    goto <bb 40>;

  <bb 38>:
  # _342 = PHI <_55(37)>
  # DEBUG e => op_type_56
  # DEBUG D#7 => &e
  # DEBUG high => NULL
  # DEBUG v => D#7
  # DEBUG low => D#8
  _245 = _342 & 255;
  if (_245 > 144)
    goto <bb 39>;
  else
    goto <bb 59>;

  <bb 39>:
  # _218 = PHI <""(38), _217(59)>
  # DEBUG e => NULL
  # DEBUG index => NULL
  MicroPrintf ("Did not find a parser for %s", _218);
  goto <bb 54>;

  <bb 40>:
  _69 = this_14(D)->error_reporter_;
  _71 = _68 (_257, _69, _27, &builtin_data);
  # DEBUG s => _71
  if (_71 != 0)
    goto <bb 53>;
  else
    goto <bb 41>;

  <bb 41>:
  pretmp_326 = MEM[(const long int *)_257];
  _313 = (sizetype) pretmp_326;
  _187 = -_313;
  _192 = _145 + _187;
  pretmp_183 = MEM[(const short unsigned int *)_192];
  _332 = (int) pretmp_183;

  <bb 42>:
  # custom_data_3 = PHI <_186(31), 0B(41), 0B(30), 0B(29), 0B(28)>
  # custom_data_size_4 = PHI <_178(31), 0(41), 0(30), 0(29), 0(28)>
  # prephitmp_179 = PHI <_168(31), _192(41), _168(30), _168(29), _168(28)>
  # prephitmp_213 = PHI <_170(31), _332(41), _170(30), _170(29), _170(28)>
  # DEBUG custom_data_size => custom_data_size_4
  # DEBUG custom_data => custom_data_3
  _76 = this_14(D)->allocator_;
  # DEBUG this => NULL
  # DEBUG this => D#11
  # DEBUG field => 6
  # DEBUG this => D#11
  # DEBUG field => 6
  # DEBUG this => D#11
  # DEBUG field => 6
  # DEBUG this => D#11
  # DEBUG p => _145
  # DEBUG D#60 => MEM[(const long int *)_257]
  # DEBUG t => D#60
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG D#59 => (sizetype) D#60
  # DEBUG D#58 => -D#59
  # DEBUG D#57 => _145 + D#58
  # DEBUG this => NULL
  # DEBUG vtable => D#57
  # DEBUG p => D#57
  # DEBUG D#56 => MEM[(const short unsigned int *)D#57]
  # DEBUG t => D#56
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#56
  if (prephitmp_213 > 6)
    goto <bb 43>;
  else
    goto <bb 45>;

  <bb 43>:
  # DEBUG p => D#57 + 6
  _225 = MEM[(const short unsigned int *)prephitmp_179 + 6B];
  # DEBUG t => _225
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _225
  _227 = (sizetype) _225;
  p_228 = _145 + _227;
  # DEBUG p => p_228
  if (_225 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # DEBUG p => p_228
  _229 = MEM[(const long unsigned int *)p_228];
  # DEBUG t => _229
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.21_230 = p_228 + _229;

  <bb 45>:
  # iftmp.21_231 = PHI <0B(43), iftmp.21_230(44), 0B(42)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  _79 = tflite::MicroAllocator::FlatBufferVectorToTfLiteTypeArray (_76, iftmp.21_231, &inputs_array);
  # DEBUG s => _79
  if (_79 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  # _340 = PHI <_79(45)>
  goto <bb 54>;

  <bb 47>:
  _80 = this_14(D)->allocator_;
  # DEBUG this => NULL
  # DEBUG this => D#12
  # DEBUG field => 8
  # DEBUG this => D#12
  # DEBUG field => 8
  # DEBUG this => D#12
  # DEBUG field => 8
  # DEBUG this => D#12
  # DEBUG p => _145
  _232 = MEM[(const long int *)_257];
  # DEBUG t => _232
  # DEBUG t => NULL
  # DEBUG p => NULL
  _233 = (sizetype) _232;
  _234 = -_233;
  _235 = _145 + _234;
  # DEBUG this => NULL
  # DEBUG vtable => _235
  # DEBUG p => _235
  _236 = MEM[(const short unsigned int *)_235];
  # DEBUG t => _236
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _236
  _237 = (int) _236;
  if (_237 > 8)
    goto <bb 48>;
  else
    goto <bb 50>;

  <bb 48>:
  # DEBUG p => _235 + 8
  _238 = MEM[(const short unsigned int *)_235 + 8B];
  # DEBUG t => _238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _238
  _240 = (sizetype) _238;
  p_241 = _145 + _240;
  # DEBUG p => p_241
  if (_238 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # DEBUG p => p_241
  _242 = MEM[(const long unsigned int *)p_241];
  # DEBUG t => _242
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.21_243 = p_241 + _242;

  <bb 50>:
  # iftmp.21_244 = PHI <0B(48), iftmp.21_243(49), 0B(47)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  _83 = tflite::MicroAllocator::FlatBufferVectorToTfLiteTypeArray (_80, iftmp.21_244, &outputs_array);
  # DEBUG s => _83
  if (_83 != 0)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # _339 = PHI <_83(50)>
  goto <bb 54>;

  <bb 52>:
  # DEBUG D#29 => &this_14(D)->graph_
  _114 = MEM[(struct SubgraphAllocations * *)this_14(D) + 120B];
  # DEBUG D#3 => D#29
  # DEBUG this => D#3
  _85 = _114 + _42;
  _86 = _85->node_and_registrations;
  _87 = _86 + _45;
  # DEBUG D#30 => &_87->node
  # DEBUG node => D#30
  MEM[(struct TfLiteNode *)_87] = {};
  inputs_array.8_89 = inputs_array;
  MEM[(struct TfLiteNode *)_87].inputs = inputs_array.8_89;
  outputs_array.9_91 = outputs_array;
  MEM[(struct TfLiteNode *)_87].outputs = outputs_array.9_91;
  builtin_data.10_93 = builtin_data;
  MEM[(struct TfLiteNode *)_87].builtin_data = builtin_data.10_93;
  MEM[(struct TfLiteNode *)_87].custom_initial_data = custom_data_3;
  custom_data_size.11_96 = (int) custom_data_size_4;
  MEM[(struct TfLiteNode *)_87].custom_initial_data_size = custom_data_size.11_96;
  builtin_data ={v} {CLOBBER};
  inputs_array ={v} {CLOBBER};
  outputs_array ={v} {CLOBBER};
  i_101 = i_2 + 1;
  # DEBUG i => i_101
  goto <bb 14>;

  <bb 53>:
  # _341 = PHI <_71(40)>

  <bb 54>:
  # _5 = PHI <1(21), _344(24), 1(26), 1(36), 1(39), _341(53), _340(46), _339(51)>
  builtin_data ={v} {CLOBBER};
  inputs_array ={v} {CLOBBER};
  outputs_array ={v} {CLOBBER};
  goto <bb 56>;

  <bb 55>:
  subgraph_idx_30 = subgraph_idx_1 + 1;
  # DEBUG subgraph_idx => subgraph_idx_30
  goto <bb 3>;

  <bb 56>:
  # _6 = PHI <_5(54), 0(3)>
  return _6;

  <bb 57>:
  # DEBUG high => NULL
  # DEBUG high => NULL
  index_160 = (const size_t) _104;
  # DEBUG index => index_160
  _161 = index_160 * 4;
  _162 = &names + _161;
  _163 = *_162;
  goto <bb 24>;

  <bb 58>:
  # DEBUG high => NULL
  # DEBUG high => NULL
  index_208 = (const size_t) _12;
  # DEBUG index => index_208
  _209 = index_208 * 4;
  _210 = &names + _209;
  _211 = *_210;
  goto <bb 36>;

  <bb 59>:
  # DEBUG high => NULL
  # DEBUG high => NULL
  index_214 = (const size_t) _245;
  # DEBUG index => index_214
  _215 = index_214 * 4;
  _216 = &names + _215;
  _217 = *_216;
  goto <bb 39>;

  <bb 60>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  # DEBUG i => (long unsigned int) subgraph_idx_1
  # DEBUG this => 0B
  _34 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 61>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _35 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}



;; Function TfLiteStatus tflite::MicroInterpreter::AllocateTensors() (_ZN6tflite16MicroInterpreter15AllocateTensorsEv, funcdef_no=6655, decl_uid=180974, cgraph_uid=3843, symbol_order=3878)


Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:255
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:255:38: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:255:38: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:255:38: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:255:38: note: bad loop form.

Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:231
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:231:37: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:231:37: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:231:37: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:231:37: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_interpreter.cpp:181:14: note: vectorized 0 loops in function.
TfLiteStatus tflite::MicroInterpreter::AllocateTensors() (struct MicroInterpreter * const this)
{
  unsigned char * p;
  unsigned char * p;
  const struct Vector & D.239669;
  unsigned char * p;
  unsigned char * p;
  size_t D.239627;
  unsigned char * p;
  unsigned char * p;
  size_t D.239584;
  unsigned char * p;
  unsigned char * p;
  size_t D.239541;
  unsigned char * p;
  unsigned char * p;
  const struct Vector & D.239498;
  unsigned char * p;
  unsigned char * p;
  size_t D.239456;
  unsigned char * p;
  unsigned char * p;
  size_t D.239413;
  unsigned char * p;
  unsigned char * p;
  size_t D.239370;
  static const char __PRETTY_FUNCTION__[206] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = long int; flatbuffers::Vector<T>::return_type = long int; flatbuffers::uoffset_t = long unsigned int]";
  static const char __PRETTY_FUNCTION__[206] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = long int; flatbuffers::Vector<T>::return_type = long int; flatbuffers::uoffset_t = long unsigned int]";
  size_t i;
  size_t i;
  TfLiteStatus _3;
  struct MicroAllocator & _9;
  const struct Model * _10;
  struct SubgraphAllocations * _12;
  struct ErrorReporter * _13;
  struct MicroGraph * _16;
  const TfLiteStatus _19;
  struct MicroAllocator & _31;
  const struct Model * _32;
  const uint8_t * _33;
  struct ScratchBufferHandle * * _34;
  const TfLiteStatus _36;
  struct MicroAllocator & _37;
  int (*__vtbl_ptr_type) () * _39;
  int (*__vtbl_ptr_type) () _40;
  unsigned int _43;
  void * _45;
  struct ErrorReporter * _47;
  unsigned int _50;
  unsigned int _55;
  struct TfLiteTensor * * _56;
  struct MicroAllocator & _57;
  int (*__vtbl_ptr_type) () * _58;
  int (*__vtbl_ptr_type) () _59;
  struct TfLiteTensor * _65;
  struct TfLiteTensor * * _67;
  struct TfLiteTensor * * _68;
  struct TfLiteTensor * _69;
  struct ErrorReporter * _71;
  struct MicroAllocator & _73;
  int (*__vtbl_ptr_type) () * _74;
  int (*__vtbl_ptr_type) () _75;
  unsigned int _78;
  void * _80;
  struct ErrorReporter * _82;
  unsigned int _85;
  unsigned int _90;
  struct TfLiteTensor * * _91;
  struct MicroAllocator & _92;
  int (*__vtbl_ptr_type) () * _93;
  int (*__vtbl_ptr_type) () _94;
  struct TfLiteTensor * _99;
  struct TfLiteTensor * * _101;
  struct TfLiteTensor * * _102;
  struct TfLiteTensor * _103;
  struct ErrorReporter * _105;
  struct SubgraphAllocations * _108;
  struct SubgraphAllocations * _109;
  struct SubgraphAllocations * _110;
  const struct Model * _111;
  const struct Model * _112;
  const struct Model * _113;
  const struct Model * _115;
  const struct Model * _116;
  const long int * _117;
  long int _118;
  const uint8_t * _120;
  const long int * _121;
  long int _122;
  TfLiteStatus _123;
  const uint8_t[1] * _128;
  long int _129;
  sizetype _130;
  sizetype _131;
  const uint8_t * _132;
  short unsigned int _133;
  int _134;
  short unsigned int _135;
  sizetype _137;
  long unsigned int _139;
  const struct Vector * iftmp.12_140;
  long unsigned int _142;
  const uint8_t * _143;
  long unsigned int _144;
  const struct SubGraph * _145;
  const uint8_t[1] * _146;
  long int _147;
  sizetype _148;
  sizetype _149;
  const uint8_t * _150;
  short unsigned int _151;
  int _152;
  short unsigned int _153;
  long unsigned int _154;
  sizetype _155;
  long unsigned int _157;
  const struct Vector * iftmp.21_158;
  long unsigned int _160;
  const uint8_t[1] * _162;
  long int _163;
  sizetype _164;
  sizetype _165;
  const uint8_t * _166;
  short unsigned int _167;
  int _168;
  short unsigned int _169;
  struct TfLiteTensor * * prephitmp_170;
  sizetype _171;
  long unsigned int _173;
  const struct Vector * iftmp.12_174;
  long unsigned int _176;
  const uint8_t * _177;
  long unsigned int _178;
  const struct SubGraph * _179;
  const uint8_t[1] * _180;
  long int _181;
  sizetype _182;
  sizetype _183;
  const uint8_t * _184;
  short unsigned int _185;
  int _186;
  short unsigned int _187;
  sizetype _189;
  long unsigned int _191;
  const struct Vector * iftmp.21_192;
  long unsigned int _194;
  const uint8_t[1] * _196;
  long int _197;
  sizetype _198;
  sizetype _199;
  const uint8_t * _200;
  short unsigned int _201;
  int _202;
  short unsigned int _203;
  sizetype _205;
  long unsigned int _207;
  const struct Vector * iftmp.12_208;
  long unsigned int _210;
  const uint8_t * _211;
  long unsigned int _212;
  const struct SubGraph * _213;
  const uint8_t[1] * _214;
  long int _215;
  sizetype _216;
  sizetype _217;
  const uint8_t * _218;
  short unsigned int _219;
  int _220;
  short unsigned int _221;
  long unsigned int _222;
  sizetype _223;
  long unsigned int _225;
  const struct Vector * iftmp.21_226;
  long unsigned int _228;
  long unsigned int _233;
  long unsigned int _256;
  short unsigned int _288;
  sizetype _290;
  long unsigned int _292;
  const struct Vector * iftmp.21_293;
  long unsigned int _295;
  const uint8_t[1] * _297;
  long int _298;
  sizetype _299;
  sizetype _300;
  const uint8_t * _301;
  short unsigned int _302;
  int _303;
  short unsigned int _304;
  sizetype _306;
  long unsigned int _308;
  const struct Vector * iftmp.12_309;
  long unsigned int _311;
  const uint8_t * _312;
  long unsigned int _313;
  const struct SubGraph * _314;
  const uint8_t[1] * _315;
  long int _316;
  sizetype _317;
  sizetype _318;
  const uint8_t * _319;
  short unsigned int _320;
  int _321;
  short unsigned int _322;
  sizetype _324;
  long unsigned int _326;
  const struct Vector * iftmp.21_327;
  struct TfLiteTensor * * prephitmp_328;
  long unsigned int _329;
  const uint8_t[1] * _331;
  long int _332;
  sizetype _333;
  sizetype _334;
  const uint8_t * _335;
  short unsigned int _336;
  int _337;
  short unsigned int _338;
  sizetype _340;
  long unsigned int _342;
  const struct Vector * iftmp.12_343;
  long unsigned int _345;
  const uint8_t * _346;
  long unsigned int _347;
  const struct SubGraph * _348;
  const uint8_t[1] * _349;
  long int _350;
  sizetype _351;
  sizetype _352;
  const uint8_t * _353;
  short unsigned int _354;
  int _355;
  short unsigned int _356;
  sizetype _358;
  long unsigned int _360;
  const struct Vector * iftmp.21_361;
  long unsigned int _363;
  long unsigned int _391;
  long unsigned int _432;
  long unsigned int _435;
  long unsigned int _447;
  const uint8_t * _448;
  long unsigned int _454;
  const uint8_t[1] * _456;
  long unsigned int _457;
  int _462;
  long unsigned int _474;

  <bb 2>:
  _9 = this_8(D)->allocator_;
  _10 = this_8(D)->model_;
  _12 = tflite::MicroAllocator::StartModelAllocation (_9, _10);
  # DEBUG allocations => _12
  if (_12 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _13 = this_8(D)->error_reporter_;
  tflite::ErrorReporter::Report (_13, "Failed starting model allocation.\n");
  this_8(D)->initialization_status_ = 1;
  goto <bb 51>;

  <bb 4>:
  _16 = &this_8(D)->graph_;
  tflite::MicroGraph::SetSubgraphAllocations (_16, _12);
  _19 = tflite::MicroInterpreter::PrepareNodeAndRegistrationDataFromFlatbuffer (this_8(D));
  # DEBUG s => _19
  if (_19 != 0)
    goto <bb 51>;
  else
    goto <bb 5>;

  <bb 5>:
  this_8(D)->context_.AllocatePersistentBuffer = AllocatePersistentBuffer;
  this_8(D)->context_.RequestScratchBufferInArena = 0B;
  this_8(D)->context_.GetScratchBuffer = 0B;
  this_8(D)->context_.GetExecutionPlan = GetGraph;
  tflite::MicroGraph::InitSubgraphs (_16);
  this_8(D)->context_.RequestScratchBufferInArena = RequestScratchBufferInArena;
  tflite::MicroGraph::PrepareSubgraphs (_16);
  this_8(D)->context_.AllocatePersistentBuffer = 0B;
  this_8(D)->context_.RequestScratchBufferInArena = 0B;
  this_8(D)->context_.GetScratchBuffer = GetScratchBuffer;
  _31 = this_8(D)->allocator_;
  _32 = this_8(D)->model_;
  # DEBUG D#31 => &this_8(D)->graph_
  _108 = MEM[(struct SubgraphAllocations * *)this_8(D) + 120B];
  # DEBUG D#3 => D#31
  # DEBUG this => D#3
  _34 = &this_8(D)->scratch_buffer_handles_;
  _36 = tflite::MicroAllocator::FinishModelAllocation (_31, _32, _108, _34);
  # DEBUG s => _36
  if (_36 != 0)
    goto <bb 51>;
  else
    goto <bb 6>;

  <bb 6>:
  _37 = this_8(D)->allocator_;
  _39 = _37->_vptr.MicroAllocator;
  _40 = MEM[(int (*__vtbl_ptr_type) () *)_39 + 12B];
  _111 = MEM[(const struct Model * *)this_8(D)];
  # DEBUG D#18 => this_8(D)
  # DEBUG this => D#18
  # DEBUG this => _111
  # DEBUG D#17 => &_111->D.122220
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  _128 = &MEM[(const struct Table *)_111].data_;
  # DEBUG p => _128
  _129 = MEM[(const long int *)_111];
  # DEBUG t => _129
  # DEBUG t => NULL
  # DEBUG p => NULL
  _130 = (sizetype) _129;
  _131 = -_130;
  _132 = _128 + _131;
  # DEBUG this => NULL
  # DEBUG vtable => _132
  # DEBUG p => _132
  _133 = MEM[(const short unsigned int *)_132];
  # DEBUG t => _133
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _133
  _134 = (int) _133;
  if (_134 > 8)
    goto <bb 7>;
  else
    goto <bb 52>;

  <bb 7>:
  # DEBUG p => _132 + 8
  _135 = MEM[(const short unsigned int *)_132 + 8B];
  # DEBUG t => _135
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _135
  _137 = (sizetype) _135;
  p_138 = _128 + _137;
  # DEBUG p => p_138
  if (_135 != 0)
    goto <bb 8>;
  else
    goto <bb 52>;

  <bb 8>:
  # DEBUG p => p_138
  _139 = MEM[(const long unsigned int *)p_138];
  # DEBUG t => _139
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.12_140 = p_138 + _139;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.12_140
  # DEBUG i => 0
  # DEBUG this => iftmp.12_140
  _142 = iftmp.12_140->length_;
  # DEBUG t => _142
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_142 != 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  # DEBUG D#19 => _111
  tflite::MicroInterpreter::_ZNK6tflite16MicroInterpreter11inputs_sizeEv.isra.3.part.4 ();

  <bb 10>:
  # DEBUG this => iftmp.12_140
  _143 = &MEM[(void *)iftmp.12_140 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => 0
  # DEBUG p => _143
  # DEBUG p => _143
  _144 = MEM[(const long unsigned int *)iftmp.12_140 + 4B];
  # DEBUG t => _144
  # DEBUG t => NULL
  # DEBUG p => NULL
  _145 = _143 + _144;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => _145
  # DEBUG D#13 => &_145->D.113793
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  _146 = &MEM[(const struct Table *)_145].data_;
  # DEBUG p => _146
  _147 = MEM[(const long int *)_145];
  # DEBUG t => _147
  # DEBUG t => NULL
  # DEBUG p => NULL
  _148 = (sizetype) _147;
  _149 = -_148;
  _150 = _146 + _149;
  # DEBUG this => NULL
  # DEBUG vtable => _150
  # DEBUG p => _150
  _151 = MEM[(const short unsigned int *)_150];
  # DEBUG t => _151
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _151
  _152 = (int) _151;
  if (_152 > 6)
    goto <bb 11>;
  else
    goto <bb 53>;

  <bb 11>:
  # DEBUG p => _150 + 6
  _153 = MEM[(const short unsigned int *)_150 + 6B];
  # DEBUG t => _153
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _153
  _155 = (sizetype) _153;
  p_156 = _146 + _155;
  # DEBUG p => p_156
  if (_153 != 0)
    goto <bb 12>;
  else
    goto <bb 53>;

  <bb 12>:
  # DEBUG p => p_156
  _157 = MEM[(const long unsigned int *)p_156];
  # DEBUG t => _157
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.21_158 = p_156 + _157;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.21_158
  _160 = iftmp.21_158->length_;
  # DEBUG t => _160
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  _43 = _160 * 4;
  _45 = OBJ_TYPE_REF(_40;(struct MicroAllocator)_37->3) (_37, _43);
  this_8(D)->input_tensors_ = _45;
  if (_45 == 0B)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 20>;

  <bb 14>:
  _47 = this_8(D)->error_reporter_;
  _112 = MEM[(const struct Model * *)this_8(D)];
  # DEBUG D#18 => this_8(D)
  # DEBUG this => D#18
  # DEBUG this => _112
  # DEBUG D#17 => &_112->D.122220
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  _162 = &MEM[(const struct Table *)_112].data_;
  # DEBUG p => _162
  _163 = MEM[(const long int *)_112];
  # DEBUG t => _163
  # DEBUG t => NULL
  # DEBUG p => NULL
  _164 = (sizetype) _163;
  _165 = -_164;
  _166 = _162 + _165;
  # DEBUG this => NULL
  # DEBUG vtable => _166
  # DEBUG p => _166
  _167 = MEM[(const short unsigned int *)_166];
  # DEBUG t => _167
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _167
  _168 = (int) _167;
  if (_168 > 8)
    goto <bb 15>;
  else
    goto <bb 54>;

  <bb 15>:
  # DEBUG p => _166 + 8
  _169 = MEM[(const short unsigned int *)_166 + 8B];
  # DEBUG t => _169
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _169
  _171 = (sizetype) _169;
  p_172 = _162 + _171;
  # DEBUG p => p_172
  if (_169 != 0)
    goto <bb 16>;
  else
    goto <bb 54>;

  <bb 16>:
  # DEBUG p => p_172
  _173 = MEM[(const long unsigned int *)p_172];
  # DEBUG t => _173
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.12_174 = p_172 + _173;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.12_174
  # DEBUG i => 0
  # DEBUG this => iftmp.12_174
  _176 = iftmp.12_174->length_;
  # DEBUG t => _176
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_176 != 0)
    goto <bb 17>;
  else
    goto <bb 9>;

  <bb 17>:
  # DEBUG this => iftmp.12_174
  _177 = &MEM[(void *)iftmp.12_174 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => 0
  # DEBUG p => _177
  # DEBUG p => _177
  _178 = MEM[(const long unsigned int *)iftmp.12_174 + 4B];
  # DEBUG t => _178
  # DEBUG t => NULL
  # DEBUG p => NULL
  _179 = _177 + _178;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => _179
  # DEBUG D#13 => &_179->D.113793
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  _180 = &MEM[(const struct Table *)_179].data_;
  # DEBUG p => _180
  _181 = MEM[(const long int *)_179];
  # DEBUG t => _181
  # DEBUG t => NULL
  # DEBUG p => NULL
  _182 = (sizetype) _181;
  _183 = -_182;
  _184 = _180 + _183;
  # DEBUG this => NULL
  # DEBUG vtable => _184
  # DEBUG p => _184
  _185 = MEM[(const short unsigned int *)_184];
  # DEBUG t => _185
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _185
  _186 = (int) _185;
  if (_186 > 6)
    goto <bb 18>;
  else
    goto <bb 55>;

  <bb 18>:
  # DEBUG p => _184 + 6
  _187 = MEM[(const short unsigned int *)_184 + 6B];
  # DEBUG t => _187
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _187
  _189 = (sizetype) _187;
  p_190 = _180 + _189;
  # DEBUG p => p_190
  if (_187 != 0)
    goto <bb 19>;
  else
    goto <bb 55>;

  <bb 19>:
  # DEBUG p => p_190
  _191 = MEM[(const long unsigned int *)p_190];
  # DEBUG t => _191
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.21_192 = p_190 + _191;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.21_192
  _194 = iftmp.21_192->length_;
  # DEBUG t => _194
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  _50 = _194 * 4;
  tflite::ErrorReporter::Report (_47, "Failed to allocate memory for context->input_tensors_, %d bytes required", _50);
  goto <bb 51>;

  <bb 20>:
  # i_1 = PHI <0(13), i_70(28)>
  # prephitmp_328 = PHI <_45(13), _67(28)>
  # DEBUG i => i_1
  _113 = MEM[(const struct Model * *)this_8(D)];
  # DEBUG D#18 => this_8(D)
  # DEBUG this => D#18
  # DEBUG this => _113
  # DEBUG D#17 => &_113->D.122220
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  _196 = &MEM[(const struct Table *)_113].data_;
  # DEBUG p => _196
  _197 = MEM[(const long int *)_113];
  # DEBUG t => _197
  # DEBUG t => NULL
  # DEBUG p => NULL
  _198 = (sizetype) _197;
  _199 = -_198;
  _200 = _196 + _199;
  # DEBUG this => NULL
  # DEBUG vtable => _200
  # DEBUG p => _200
  _201 = MEM[(const short unsigned int *)_200];
  # DEBUG t => _201
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _201
  _202 = (int) _201;
  if (_202 > 8)
    goto <bb 21>;
  else
    goto <bb 56>;

  <bb 21>:
  # DEBUG p => _200 + 8
  _203 = MEM[(const short unsigned int *)_200 + 8B];
  # DEBUG t => _203
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _203
  _205 = (sizetype) _203;
  p_206 = _196 + _205;
  # DEBUG p => p_206
  if (_203 != 0)
    goto <bb 22>;
  else
    goto <bb 56>;

  <bb 22>:
  # DEBUG p => p_206
  _207 = MEM[(const long unsigned int *)p_206];
  # DEBUG t => _207
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.12_208 = p_206 + _207;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.12_208
  # DEBUG i => 0
  # DEBUG this => iftmp.12_208
  _210 = iftmp.12_208->length_;
  # DEBUG t => _210
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_210 != 0)
    goto <bb 23>;
  else
    goto <bb 9>;

  <bb 23>:
  # DEBUG this => iftmp.12_208
  _211 = &MEM[(void *)iftmp.12_208 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => 0
  # DEBUG p => _211
  # DEBUG p => _211
  _212 = MEM[(const long unsigned int *)iftmp.12_208 + 4B];
  # DEBUG t => _212
  # DEBUG t => NULL
  # DEBUG p => NULL
  _213 = _211 + _212;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => _213
  # DEBUG D#13 => &_213->D.113793
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  _214 = &MEM[(const struct Table *)_213].data_;
  # DEBUG p => _214
  _215 = MEM[(const long int *)_213];
  # DEBUG t => _215
  # DEBUG t => NULL
  # DEBUG p => NULL
  _216 = (sizetype) _215;
  _217 = -_216;
  _218 = _214 + _217;
  # DEBUG this => NULL
  # DEBUG vtable => _218
  # DEBUG p => _218
  _219 = MEM[(const short unsigned int *)_218];
  # DEBUG t => _219
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _219
  _220 = (int) _219;
  if (_220 > 6)
    goto <bb 24>;
  else
    goto <bb 57>;

  <bb 24>:
  # DEBUG p => _218 + 6
  _221 = MEM[(const short unsigned int *)_218 + 6B];
  # DEBUG t => _221
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _221
  _223 = (sizetype) _221;
  p_224 = _214 + _223;
  # DEBUG p => p_224
  if (_221 != 0)
    goto <bb 25>;
  else
    goto <bb 57>;

  <bb 25>:
  # DEBUG p => p_224
  _225 = MEM[(const long unsigned int *)p_224];
  # DEBUG t => _225
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.21_226 = p_224 + _225;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.21_226
  _228 = iftmp.21_226->length_;
  # DEBUG t => _228
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  if (i_1 < _228)
    goto <bb 26>;
  else
    goto <bb 29>;

  <bb 26>:
  _55 = i_1 * 4;
  _56 = prephitmp_328 + _55;
  _57 = this_8(D)->allocator_;
  _58 = _57->_vptr.MicroAllocator;
  _59 = *_58;
  # DEBUG D#32 => &this_8(D)->graph_
  _109 = MEM[(struct SubgraphAllocations * *)this_8(D) + 120B];
  # DEBUG D#3 => D#32
  # DEBUG this => D#3
  # DEBUG D#21 => this_8(D)
  # DEBUG this => D#21
  # DEBUG this => _113
  # DEBUG D#17 => &_113->D.122220
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG p => _196
  # DEBUG t => _197
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _200
  # DEBUG p => _200
  # DEBUG t => _201
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _201
  # DEBUG p => _200 + 8
  # DEBUG t => _203
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _203
  # DEBUG p => p_206
  # DEBUG p => p_206
  # DEBUG t => _207
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.12_208
  # DEBUG i => 0
  # DEBUG this => iftmp.12_208
  # DEBUG t => _210
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.12_208
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => 0
  # DEBUG p => _211
  # DEBUG p => _211
  # DEBUG t => _212
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => _213
  # DEBUG D#13 => &_213->D.113793
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  # DEBUG field => 6
  # DEBUG this => D#13
  # DEBUG p => _214
  # DEBUG t => _215
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _218
  # DEBUG p => _218
  # DEBUG t => _219
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _219
  # DEBUG p => _218 + 6
  # DEBUG t => _221
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _221
  # DEBUG p => p_224
  # DEBUG p => p_224
  # DEBUG t => _225
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG i => i_1
  # DEBUG this => NULL
  # DEBUG t => _228
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _33 = &MEM[(void *)iftmp.21_226 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i_1
  _117 = _33 + _55;
  _118 = *_117;
  # DEBUG t => _118
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  _65 = OBJ_TYPE_REF(_59;(struct MicroAllocator)_57->0) (_57, _113, _109, _118, 0);
  *_56 = _65;
  _67 = this_8(D)->input_tensors_;
  _68 = _67 + _55;
  _69 = *_68;
  if (_69 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # i_460 = PHI <i_1(26)>
  _71 = this_8(D)->error_reporter_;
  tflite::ErrorReporter::Report (_71, "Failed to initialize input tensor %d", i_460);
  goto <bb 51>;

  <bb 28>:
  i_70 = i_1 + 1;
  # DEBUG i => i_70
  goto <bb 20>;

  <bb 29>:
  # _456 = PHI <_214(25)>
  # _448 = PHI <_218(25)>
  # _462 = PHI <_220(25)>
  _73 = this_8(D)->allocator_;
  _74 = _73->_vptr.MicroAllocator;
  _75 = MEM[(int (*__vtbl_ptr_type) () *)_74 + 12B];
  # DEBUG D#22 => this_8(D)
  # DEBUG this => D#22
  # DEBUG this => _113
  # DEBUG D#17 => &_113->D.122220
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG p => _196
  # DEBUG t => _197
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _200
  # DEBUG p => _200
  # DEBUG t => _201
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _201
  # DEBUG p => _200 + 8
  # DEBUG t => _203
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _203
  # DEBUG p => p_206
  # DEBUG p => p_206
  # DEBUG t => _207
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.12_208
  # DEBUG i => 0
  # DEBUG this => iftmp.12_208
  # DEBUG t => _210
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.12_208
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => 0
  # DEBUG p => _211
  # DEBUG p => _211
  # DEBUG t => _212
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => _213
  # DEBUG D#14 => &_213->D.113793
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  # DEBUG p => _456
  # DEBUG t => _215
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _448
  # DEBUG p => _448
  # DEBUG t => _219
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _219
  if (_462 > 8)
    goto <bb 31>;
  else
    goto <bb 58>;

  <bb 30>:
  # DEBUG D#23 => _113
  tflite::MicroInterpreter::_ZNK6tflite16MicroInterpreter12outputs_sizeEv.isra.6.part.7 ();

  <bb 31>:
  # DEBUG p => _448 + 8
  _288 = MEM[(const short unsigned int *)_448 + 8B];
  # DEBUG t => _288
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _288
  _290 = (sizetype) _288;
  p_291 = _456 + _290;
  # DEBUG p => p_291
  if (_288 != 0)
    goto <bb 32>;
  else
    goto <bb 58>;

  <bb 32>:
  # DEBUG p => p_291
  _292 = MEM[(const long unsigned int *)p_291];
  # DEBUG t => _292
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.21_293 = p_291 + _292;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.21_293
  _295 = iftmp.21_293->length_;
  # DEBUG t => _295
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  _78 = _295 * 4;
  _80 = OBJ_TYPE_REF(_75;(struct MicroAllocator)_73->3) (_73, _78);
  this_8(D)->output_tensors_ = _80;
  if (_80 == 0B)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 40>;

  <bb 34>:
  _82 = this_8(D)->error_reporter_;
  _115 = MEM[(const struct Model * *)this_8(D)];
  # DEBUG D#22 => this_8(D)
  # DEBUG this => D#22
  # DEBUG this => _115
  # DEBUG D#17 => &_115->D.122220
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  _297 = &MEM[(const struct Table *)_115].data_;
  # DEBUG p => _297
  _298 = MEM[(const long int *)_115];
  # DEBUG t => _298
  # DEBUG t => NULL
  # DEBUG p => NULL
  _299 = (sizetype) _298;
  _300 = -_299;
  _301 = _297 + _300;
  # DEBUG this => NULL
  # DEBUG vtable => _301
  # DEBUG p => _301
  _302 = MEM[(const short unsigned int *)_301];
  # DEBUG t => _302
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _302
  _303 = (int) _302;
  if (_303 > 8)
    goto <bb 35>;
  else
    goto <bb 59>;

  <bb 35>:
  # DEBUG p => _301 + 8
  _304 = MEM[(const short unsigned int *)_301 + 8B];
  # DEBUG t => _304
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _304
  _306 = (sizetype) _304;
  p_307 = _297 + _306;
  # DEBUG p => p_307
  if (_304 != 0)
    goto <bb 36>;
  else
    goto <bb 59>;

  <bb 36>:
  # DEBUG p => p_307
  _308 = MEM[(const long unsigned int *)p_307];
  # DEBUG t => _308
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.12_309 = p_307 + _308;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.12_309
  # DEBUG i => 0
  # DEBUG this => iftmp.12_309
  _311 = iftmp.12_309->length_;
  # DEBUG t => _311
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_311 != 0)
    goto <bb 37>;
  else
    goto <bb 30>;

  <bb 37>:
  # DEBUG this => iftmp.12_309
  _312 = &MEM[(void *)iftmp.12_309 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => 0
  # DEBUG p => _312
  # DEBUG p => _312
  _313 = MEM[(const long unsigned int *)iftmp.12_309 + 4B];
  # DEBUG t => _313
  # DEBUG t => NULL
  # DEBUG p => NULL
  _314 = _312 + _313;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => _314
  # DEBUG D#14 => &_314->D.113793
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  _315 = &MEM[(const struct Table *)_314].data_;
  # DEBUG p => _315
  _316 = MEM[(const long int *)_314];
  # DEBUG t => _316
  # DEBUG t => NULL
  # DEBUG p => NULL
  _317 = (sizetype) _316;
  _318 = -_317;
  _319 = _315 + _318;
  # DEBUG this => NULL
  # DEBUG vtable => _319
  # DEBUG p => _319
  _320 = MEM[(const short unsigned int *)_319];
  # DEBUG t => _320
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _320
  _321 = (int) _320;
  if (_321 > 8)
    goto <bb 38>;
  else
    goto <bb 60>;

  <bb 38>:
  # DEBUG p => _319 + 8
  _322 = MEM[(const short unsigned int *)_319 + 8B];
  # DEBUG t => _322
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _322
  _324 = (sizetype) _322;
  p_325 = _315 + _324;
  # DEBUG p => p_325
  if (_322 != 0)
    goto <bb 39>;
  else
    goto <bb 60>;

  <bb 39>:
  # DEBUG p => p_325
  _326 = MEM[(const long unsigned int *)p_325];
  # DEBUG t => _326
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.21_327 = p_325 + _326;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.21_327
  _329 = iftmp.21_327->length_;
  # DEBUG t => _329
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  _85 = _329 * 4;
  tflite::ErrorReporter::Report (_82, "Failed to allocate memory for context->output_tensors_, %d bytes required", _85);
  goto <bb 51>;

  <bb 40>:
  # i_2 = PHI <0(33), i_104(48)>
  # prephitmp_170 = PHI <_80(33), _101(48)>
  # DEBUG i => i_2
  _116 = MEM[(const struct Model * *)this_8(D)];
  # DEBUG D#22 => this_8(D)
  # DEBUG this => D#22
  # DEBUG this => _116
  # DEBUG D#17 => &_116->D.122220
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  _331 = &MEM[(const struct Table *)_116].data_;
  # DEBUG p => _331
  _332 = MEM[(const long int *)_116];
  # DEBUG t => _332
  # DEBUG t => NULL
  # DEBUG p => NULL
  _333 = (sizetype) _332;
  _334 = -_333;
  _335 = _331 + _334;
  # DEBUG this => NULL
  # DEBUG vtable => _335
  # DEBUG p => _335
  _336 = MEM[(const short unsigned int *)_335];
  # DEBUG t => _336
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _336
  _337 = (int) _336;
  if (_337 > 8)
    goto <bb 41>;
  else
    goto <bb 61>;

  <bb 41>:
  # DEBUG p => _335 + 8
  _338 = MEM[(const short unsigned int *)_335 + 8B];
  # DEBUG t => _338
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _338
  _340 = (sizetype) _338;
  p_341 = _331 + _340;
  # DEBUG p => p_341
  if (_338 != 0)
    goto <bb 42>;
  else
    goto <bb 61>;

  <bb 42>:
  # DEBUG p => p_341
  _342 = MEM[(const long unsigned int *)p_341];
  # DEBUG t => _342
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.12_343 = p_341 + _342;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.12_343
  # DEBUG i => 0
  # DEBUG this => iftmp.12_343
  _345 = iftmp.12_343->length_;
  # DEBUG t => _345
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_345 != 0)
    goto <bb 43>;
  else
    goto <bb 30>;

  <bb 43>:
  # DEBUG this => iftmp.12_343
  _346 = &MEM[(void *)iftmp.12_343 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => 0
  # DEBUG p => _346
  # DEBUG p => _346
  _347 = MEM[(const long unsigned int *)iftmp.12_343 + 4B];
  # DEBUG t => _347
  # DEBUG t => NULL
  # DEBUG p => NULL
  _348 = _346 + _347;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => _348
  # DEBUG D#14 => &_348->D.113793
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  _349 = &MEM[(const struct Table *)_348].data_;
  # DEBUG p => _349
  _350 = MEM[(const long int *)_348];
  # DEBUG t => _350
  # DEBUG t => NULL
  # DEBUG p => NULL
  _351 = (sizetype) _350;
  _352 = -_351;
  _353 = _349 + _352;
  # DEBUG this => NULL
  # DEBUG vtable => _353
  # DEBUG p => _353
  _354 = MEM[(const short unsigned int *)_353];
  # DEBUG t => _354
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _354
  _355 = (int) _354;
  if (_355 > 8)
    goto <bb 44>;
  else
    goto <bb 62>;

  <bb 44>:
  # DEBUG p => _353 + 8
  _356 = MEM[(const short unsigned int *)_353 + 8B];
  # DEBUG t => _356
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _356
  _358 = (sizetype) _356;
  p_359 = _349 + _358;
  # DEBUG p => p_359
  if (_356 != 0)
    goto <bb 45>;
  else
    goto <bb 62>;

  <bb 45>:
  # DEBUG p => p_359
  _360 = MEM[(const long unsigned int *)p_359];
  # DEBUG t => _360
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.21_361 = p_359 + _360;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.21_361
  _363 = iftmp.21_361->length_;
  # DEBUG t => _363
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  if (i_2 < _363)
    goto <bb 46>;
  else
    goto <bb 49>;

  <bb 46>:
  _90 = i_2 * 4;
  _91 = prephitmp_170 + _90;
  _92 = this_8(D)->allocator_;
  _93 = _92->_vptr.MicroAllocator;
  _94 = *_93;
  # DEBUG D#33 => &this_8(D)->graph_
  _110 = MEM[(struct SubgraphAllocations * *)this_8(D) + 120B];
  # DEBUG D#3 => D#33
  # DEBUG this => D#3
  # DEBUG D#25 => this_8(D)
  # DEBUG this => D#25
  # DEBUG this => _116
  # DEBUG D#17 => &_116->D.122220
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG p => _331
  # DEBUG t => _332
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _335
  # DEBUG p => _335
  # DEBUG t => _336
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _336
  # DEBUG p => _335 + 8
  # DEBUG t => _338
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _338
  # DEBUG p => p_341
  # DEBUG p => p_341
  # DEBUG t => _342
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.12_343
  # DEBUG i => 0
  # DEBUG this => iftmp.12_343
  # DEBUG t => _345
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.12_343
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => 0
  # DEBUG p => _346
  # DEBUG p => _346
  # DEBUG t => _347
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => _348
  # DEBUG D#14 => &_348->D.113793
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  # DEBUG field => 8
  # DEBUG this => D#14
  # DEBUG p => _349
  # DEBUG t => _350
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _353
  # DEBUG p => _353
  # DEBUG t => _354
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _354
  # DEBUG p => _353 + 8
  # DEBUG t => _356
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _356
  # DEBUG p => p_359
  # DEBUG p => p_359
  # DEBUG t => _360
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG i => i_2
  # DEBUG this => NULL
  # DEBUG t => _363
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _120 = &MEM[(void *)iftmp.21_361 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i_2
  _121 = _120 + _90;
  _122 = *_121;
  # DEBUG t => _122
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  _99 = OBJ_TYPE_REF(_94;(struct MicroAllocator)_92->0) (_92, _116, _110, _122, 0);
  *_91 = _99;
  _101 = this_8(D)->output_tensors_;
  _102 = _101 + _90;
  _103 = *_102;
  if (_103 == 0B)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # i_442 = PHI <i_2(46)>
  _105 = this_8(D)->error_reporter_;
  tflite::ErrorReporter::Report (_105, "Failed to initialize output tensor %d", i_442);
  goto <bb 51>;

  <bb 48>:
  i_104 = i_2 + 1;
  # DEBUG i => i_104
  goto <bb 40>;

  <bb 49>:
  # DEBUG this => this_8(D)
  _123 = tflite::MicroGraph::ResetVariableTensors (_16);
  # DEBUG this => NULL
  # DEBUG s => _123
  if (_123 != 0)
    goto <bb 51>;
  else
    goto <bb 50>;

  <bb 50>:
  this_8(D)->tensors_allocated_ = 1;

  <bb 51>:
  # _3 = PHI <1(3), _19(4), _36(5), 1(19), 1(27), 1(39), 1(47), _123(49), _123(50)>
  return _3;

  <bb 52>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  # DEBUG i => 0
  # DEBUG this => 0B
  _233 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 53>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _391 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 54>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  # DEBUG i => 0
  # DEBUG this => 0B
  _256 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 55>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _222 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 56>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  # DEBUG i => 0
  # DEBUG this => 0B
  _154 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 57>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _474 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 58>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _432 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 59>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  # DEBUG i => 0
  # DEBUG this => 0B
  _447 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 60>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _435 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 61>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  # DEBUG i => 0
  # DEBUG this => 0B
  _454 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 62>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _457 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}


