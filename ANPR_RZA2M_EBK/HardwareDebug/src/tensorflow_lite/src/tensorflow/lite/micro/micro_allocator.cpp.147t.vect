
;; Function virtual TfLiteStatus tflite::MicroAllocator::AllocateVariables(const tflite::SubGraph*, TfLiteEvalTensor*) (_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensor, funcdef_no=6567, decl_uid=178193, cgraph_uid=3782, symbol_order=3823)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11438
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11438:88: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11438:88: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11438:88: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11438:88: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:869:14: note: vectorized 0 loops in function.
virtual TfLiteStatus tflite::MicroAllocator::AllocateVariables(const tflite::SubGraph*, TfLiteEvalTensor*) (struct MicroAllocator * const this, const struct SubGraph * subgraph, struct TfLiteEvalTensor * eval_tensors)
{
  const uint8_t * p;
  const struct Tensor * D.240755;
  static const char __PRETTY_FUNCTION__[246] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::Tensor>; flatbuffers::Vector<T>::return_type = const tflite::Tensor*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  size_t buffer_size;
  size_t i;
  TfLiteStatus _2;
  TfLiteStatus _3;
  sizetype _10;
  long unsigned int _15;
  unsigned int _17;
  struct TfLiteEvalTensor * _19;
  const TfLiteStatus _21;
  struct SimpleMemoryAllocator * _23;
  int (*__vtbl_ptr_type) () * _24;
  int (*__vtbl_ptr_type) () _25;
  unsigned int buffer_size.45_26;
  uint8_t * _28;
  struct ErrorReporter * _31;
  unsigned int buffer_size.45_32;
  sizetype _35;
  const uint8_t * _36;
  int _38;
  short unsigned int _39;
  sizetype _41;
  long unsigned int _43;
  const struct Vector * iftmp.41_44;
  const uint8_t[1] * _46;
  long int _47;
  sizetype _48;
  sizetype _49;
  const uint8_t * _50;
  short unsigned int _51;
  int _52;
  short unsigned int _53;
  sizetype _55;
  const void * _56;
  unsigned char _57;
  const uint8_t[1] * pretmp_65;
  const uint8_t * _67;
  long unsigned int _68;
  long unsigned int _70;
  const struct Tensor * _71;
  long unsigned int _87;
  TfLiteStatus _94;
  long int pretmp_95;
  long int prephitmp_96;
  sizetype _97;
  sizetype _99;
  const uint8_t[1] * _101;
  short unsigned int pretmp_103;
  short unsigned int prephitmp_104;
  long int pretmp_107;
  long int prephitmp_108;
  sizetype _109;
  sizetype _110;
  const uint8_t[1] * _111;
  short unsigned int pretmp_112;
  short unsigned int prephitmp_113;

  <bb 2>:
  # DEBUG i => 0
  pretmp_65 = &MEM[(const struct Table *)subgraph_9(D)].data_;
  pretmp_107 = MEM[(const long int *)subgraph_9(D)];
  _109 = (sizetype) pretmp_107;
  _110 = -_109;
  _111 = pretmp_65 + _110;
  pretmp_112 = MEM[(const short unsigned int *)_111];

  <bb 3>:
  # i_1 = PHI <0(2), i_16(15)>
  # prephitmp_108 = PHI <pretmp_107(2), prephitmp_96(15)>
  # prephitmp_113 = PHI <pretmp_112(2), prephitmp_104(15)>
  # DEBUG i => i_1
  # DEBUG this => subgraph_9(D)
  # DEBUG D#22 => &subgraph_9(D)->D.112635
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG D#48 => &MEM[(const struct Table *)subgraph_9(D)].data_
  # DEBUG p => D#48
  # DEBUG D#47 => MEM[(const long int *)subgraph_9(D)]
  # DEBUG t => D#47
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG D#51 => (sizetype) prephitmp_108
  # DEBUG D#50 => -D#51
  # DEBUG D#49 => pretmp_65 + D#50
  # DEBUG this => NULL
  # DEBUG vtable => D#49
  # DEBUG p => D#49
  # DEBUG D#46 => MEM[(const short unsigned int *)D#49]
  # DEBUG t => D#46
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#46
  _38 = (int) prephitmp_113;
  if (_38 > 4)
    goto <bb 4>;
  else
    goto <bb 17>;

  <bb 4>:
  # DEBUG p => D#49 + 4
  _10 = (sizetype) prephitmp_108;
  _35 = -_10;
  _36 = pretmp_65 + _35;
  _39 = MEM[(const short unsigned int *)_36 + 4B];
  # DEBUG t => _39
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _39
  _41 = (sizetype) _39;
  p_42 = pretmp_65 + _41;
  # DEBUG p => p_42
  if (_39 != 0)
    goto <bb 5>;
  else
    goto <bb 17>;

  <bb 5>:
  # DEBUG p => p_42
  _43 = MEM[(const long unsigned int *)p_42];
  # DEBUG t => _43
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.41_44 = p_42 + _43;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.41_44
  _15 = iftmp.41_44->length_;
  # DEBUG t => _15
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (i_1 < _15)
    goto <bb 6>;
  else
    goto <bb 16>;

  <bb 6>:
  # DEBUG this => subgraph_9(D)
  # DEBUG D#22 => &subgraph_9(D)->D.112635
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG p => D#48
  # DEBUG t => D#47
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#49
  # DEBUG p => D#49
  # DEBUG t => D#46
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#46
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _39
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.41_44
  # DEBUG i => i_1
  # DEBUG this => iftmp.41_44
  # DEBUG t => _15
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.41_44
  _67 = &MEM[(void *)iftmp.41_44 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i_1
  _68 = i_1 * 4;
  p_69 = _67 + _68;
  # DEBUG p => p_69
  # DEBUG p => p_69
  _70 = MEM[(const long unsigned int *)p_69];
  # DEBUG t => _70
  # DEBUG t => NULL
  # DEBUG p => NULL
  _71 = p_69 + _70;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG tensor => NULL
  # DEBUG this => NULL
  # DEBUG this => D#11
  # DEBUG field => 14
  # DEBUG defaultval => 0
  # DEBUG this => D#11
  # DEBUG field => 14
  # DEBUG this => D#11
  _46 = &MEM[(const struct Table *)_71].data_;
  # DEBUG p => _46
  _47 = MEM[(const long int *)_71];
  # DEBUG t => _47
  # DEBUG t => NULL
  # DEBUG p => NULL
  _48 = (sizetype) _47;
  _49 = -_48;
  _50 = _46 + _49;
  # DEBUG this => NULL
  # DEBUG vtable => _50
  # DEBUG p => _50
  _51 = MEM[(const short unsigned int *)_50];
  # DEBUG t => _51
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _51
  _52 = (int) _51;
  if (_52 > 14)
    goto <bb 7>;
  else
    goto <bb 15>;

  <bb 7>:
  # DEBUG p => _50 + 14
  _53 = MEM[(const short unsigned int *)_50 + 14B];
  # DEBUG t => _53
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _53
  if (_53 != 0)
    goto <bb 8>;
  else
    goto <bb 15>;

  <bb 8>:
  _55 = (sizetype) _53;
  _56 = _46 + _55;
  # DEBUG p => _56
  _57 = MEM[(const unsigned char *)_56];
  # DEBUG t => _57
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  if (_57 != 0)
    goto <bb 9>;
  else
    goto <bb 15>;

  <bb 9>:
  _17 = i_1 * 12;
  _19 = eval_tensors_18(D) + _17;
  _21 = tflite::TfLiteEvalTensorByteLength (_19, &buffer_size);
  # DEBUG s => _21
  if (_21 != 0)
    goto <bb 13>;
  else
    goto <bb 10>;

  <bb 10>:
  _23 = this_22(D)->memory_allocator_;
  _24 = _23->_vptr.SimpleMemoryAllocator;
  _25 = MEM[(int (*__vtbl_ptr_type) () *)_24 + 12B];
  buffer_size.45_26 = buffer_size;
  _28 = OBJ_TYPE_REF(_25;(struct SimpleMemoryAllocator)_23->3) (_23, buffer_size.45_26, 16);
  _19->data.data = _28;
  if (_28 == 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _31 = this_22(D)->error_reporter_;
  buffer_size.45_32 = buffer_size;
  tflite::ErrorReporter::Report (_31, "Failed to allocate variable tensor of size %d", buffer_size.45_32);
  goto <bb 14>;

  <bb 12>:
  buffer_size ={v} {CLOBBER};
  pretmp_95 = MEM[(const long int *)subgraph_9(D)];
  _97 = (sizetype) pretmp_95;
  _99 = -_97;
  _101 = pretmp_65 + _99;
  pretmp_103 = MEM[(const short unsigned int *)_101];
  goto <bb 15>;

  <bb 13>:
  # _94 = PHI <_21(9)>

  <bb 14>:
  # _2 = PHI <_94(13), 1(11)>
  buffer_size ={v} {CLOBBER};
  goto <bb 16>;

  <bb 15>:
  # prephitmp_96 = PHI <prephitmp_108(8), pretmp_95(12), prephitmp_108(6), prephitmp_108(7)>
  # prephitmp_104 = PHI <prephitmp_113(8), pretmp_103(12), prephitmp_113(6), prephitmp_113(7)>
  i_16 = i_1 + 1;
  # DEBUG i => i_16
  goto <bb 3>;

  <bb 16>:
  # _3 = PHI <_2(14), 0(5)>
  return _3;

  <bb 17>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _87 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}



;; Function virtual TfLiteStatus tflite::MicroAllocator::AllocateNodeAndRegistrations(const tflite::Model*, tflite::SubgraphAllocations*) (_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE, funcdef_no=6562, decl_uid=178185, cgraph_uid=3777, symbol_order=3818)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:736:14: note: vectorized 0 loops in function.
virtual TfLiteStatus tflite::MicroAllocator::AllocateNodeAndRegistrations(const tflite::Model*, tflite::SubgraphAllocations*) (struct MicroAllocator * const this, const struct Model * model, struct SubgraphAllocations * subgraph_allocations)
{
  const uint8_t * p;
  const struct SubGraph * D.240773;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  size_t subgraph_idx;
  TfLiteStatus _2;
  sizetype _8;
  sizetype _9;
  long int _10;
  struct SimpleMemoryAllocator * _14;
  int (*__vtbl_ptr_type) () * _15;
  int (*__vtbl_ptr_type) () _16;
  long unsigned int _18;
  long unsigned int _19;
  struct NodeAndRegistration * _21;
  unsigned int _22;
  struct SubgraphAllocations * _23;
  struct ErrorReporter * _26;
  const uint8_t * _30;
  short unsigned int _31;
  int _32;
  short unsigned int _33;
  sizetype _35;
  long unsigned int _37;
  const struct Vector * iftmp.27_38;
  long unsigned int _48;
  const uint8_t[1] * _49;
  long int _50;
  sizetype _51;
  sizetype _52;
  const uint8_t * _53;
  short unsigned int _54;
  int _55;
  short unsigned int _56;
  sizetype _58;
  long unsigned int _60;
  const struct Vector * iftmp.31_61;
  const uint8_t * _64;
  long unsigned int _65;
  long unsigned int _67;
  const struct SubGraph * _68;
  long unsigned int _69;
  const uint8_t[1] * pretmp_85;
  long unsigned int _87;

  <bb 2>:
  if (subgraph_allocations_5(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  abort ();

  <bb 4>:
  pretmp_85 = &MEM[(const struct Table *)model_7(D)].data_;

  <bb 5>:
  # subgraph_idx_1 = PHI <0(4), subgraph_idx_25(13)>
  # DEBUG subgraph_idx => subgraph_idx_1
  # DEBUG this => model_7(D)
  # DEBUG D#24 => &model_7(D)->D.121062
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG D#61 => &MEM[(const struct Table *)model_7(D)].data_
  # DEBUG p => D#61
  _10 = MEM[(const long int *)model_7(D)];
  # DEBUG t => _10
  # DEBUG t => NULL
  # DEBUG p => NULL
  _9 = (sizetype) _10;
  _8 = -_9;
  _30 = pretmp_85 + _8;
  # DEBUG this => NULL
  # DEBUG vtable => _30
  # DEBUG p => _30
  _31 = MEM[(const short unsigned int *)_30];
  # DEBUG t => _31
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _31
  _32 = (int) _31;
  if (_32 > 8)
    goto <bb 6>;
  else
    goto <bb 15>;

  <bb 6>:
  # DEBUG p => _30 + 8
  _33 = MEM[(const short unsigned int *)_30 + 8B];
  # DEBUG t => _33
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _33
  _35 = (sizetype) _33;
  p_36 = pretmp_85 + _35;
  # DEBUG p => p_36
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 15>;

  <bb 7>:
  # DEBUG p => p_36
  _37 = MEM[(const long unsigned int *)p_36];
  # DEBUG t => _37
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.27_38 = p_36 + _37;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.27_38
  _18 = iftmp.27_38->length_;
  # DEBUG t => _18
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (subgraph_idx_1 < _18)
    goto <bb 8>;
  else
    goto <bb 14>;

  <bb 8>:
  # DEBUG this => model_7(D)
  # DEBUG D#24 => &model_7(D)->D.121062
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG p => D#61
  # DEBUG t => _10
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _30
  # DEBUG p => _30
  # DEBUG t => _31
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _31
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _33
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.27_38
  # DEBUG i => subgraph_idx_1
  # DEBUG this => iftmp.27_38
  # DEBUG t => _18
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.27_38
  _64 = &MEM[(void *)iftmp.27_38 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => subgraph_idx_1
  _65 = subgraph_idx_1 * 4;
  p_66 = _64 + _65;
  # DEBUG p => p_66
  # DEBUG p => p_66
  _67 = MEM[(const long unsigned int *)p_66];
  # DEBUG t => _67
  # DEBUG t => NULL
  # DEBUG p => NULL
  _68 = p_66 + _67;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG subgraph => NULL
  if (_68 != 0B)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 9>:
  _14 = this_13(D)->memory_allocator_;
  _15 = _14->_vptr.SimpleMemoryAllocator;
  _16 = MEM[(int (*__vtbl_ptr_type) () *)_15 + 12B];
  # DEBUG this => NULL
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  _49 = &MEM[(const struct Table *)_68].data_;
  # DEBUG p => _49
  _50 = MEM[(const long int *)_68];
  # DEBUG t => _50
  # DEBUG t => NULL
  # DEBUG p => NULL
  _51 = (sizetype) _50;
  _52 = -_51;
  _53 = _49 + _52;
  # DEBUG this => NULL
  # DEBUG vtable => _53
  # DEBUG p => _53
  _54 = MEM[(const short unsigned int *)_53];
  # DEBUG t => _54
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _54
  _55 = (int) _54;
  if (_55 > 10)
    goto <bb 10>;
  else
    goto <bb 16>;

  <bb 10>:
  # DEBUG p => _53 + 10
  _56 = MEM[(const short unsigned int *)_53 + 10B];
  # DEBUG t => _56
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _56
  _58 = (sizetype) _56;
  p_59 = _49 + _58;
  # DEBUG p => p_59
  if (_56 != 0)
    goto <bb 11>;
  else
    goto <bb 16>;

  <bb 11>:
  # DEBUG p => p_59
  _60 = MEM[(const long unsigned int *)p_59];
  # DEBUG t => _60
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.31_61 = p_59 + _60;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.31_61
  _48 = iftmp.31_61->length_;
  # DEBUG t => _48
  # DEBUG t => NULL
  # DEBUG this => NULL
  _19 = _48 * 44;
  _21 = OBJ_TYPE_REF(_16;(struct SimpleMemoryAllocator)_14->3) (_14, _19, 4);
  # DEBUG output => _21
  if (_21 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _26 = this_13(D)->error_reporter_;
  tflite::ErrorReporter::Report (_26, "Failed to allocate memory for node_and_registrations.");
  goto <bb 14>;

  <bb 13>:
  _22 = subgraph_idx_1 * 8;
  _23 = subgraph_allocations_5(D) + _22;
  _23->node_and_registrations = _21;
  subgraph_idx_25 = subgraph_idx_1 + 1;
  # DEBUG subgraph_idx => subgraph_idx_25
  goto <bb 5>;

  <bb 14>:
  # _2 = PHI <1(12), 0(7)>
  return _2;

  <bb 15>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _87 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 16>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _69 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}



;; Function virtual TfLiteStatus tflite::MicroAllocator::AllocateTfLiteEvalTensors(const tflite::Model*, tflite::SubgraphAllocations*) (_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE, funcdef_no=6566, decl_uid=178189, cgraph_uid=3781, symbol_order=3822)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: bad loop form.

Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:856
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:856:79: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:856:79: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:856:79: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:856:79: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:833:14: note: vectorized 0 loops in function.
virtual TfLiteStatus tflite::MicroAllocator::AllocateTfLiteEvalTensors(const tflite::Model*, tflite::SubgraphAllocations*) (struct MicroAllocator * const this, const struct Model * model, struct SubgraphAllocations * subgraph_allocations)
{
  const uint8_t * p;
  const struct Buffer * D.240895;
  static const char __PRETTY_FUNCTION__[246] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::Buffer>; flatbuffers::Vector<T>::return_type = const tflite::Buffer*; flatbuffers::uoffset_t = long unsigned int]";
  void * out_buffer;
  unsigned char * p;
  void * D.240887;
  unsigned char * p;
  TfLiteStatus D.240846;
  const uint8_t * p;
  const struct Tensor * D.240804;
  static const char __PRETTY_FUNCTION__[246] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::Tensor>; flatbuffers::Vector<T>::return_type = const tflite::Tensor*; flatbuffers::uoffset_t = long unsigned int]";
  const uint8_t * p;
  const struct SubGraph * D.240796;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  size_t i;
  size_t subgraph_idx;
  TfLiteStatus _3;
  short unsigned int _10;
  const uint8_t * _11;
  sizetype _12;
  sizetype _15;
  long int _16;
  struct SimpleMemoryAllocator * _18;
  int (*__vtbl_ptr_type) () * _19;
  int (*__vtbl_ptr_type) () _20;
  unsigned int _21;
  struct TfLiteEvalTensor * _23;
  long unsigned int _28;
  struct ErrorReporter * _29;
  unsigned int _30;
  struct TfLiteEvalTensor * _31;
  struct ErrorReporter * _35;
  unsigned int _37;
  struct SubgraphAllocations * _38;
  struct ErrorReporter * _41;
  int _45;
  short unsigned int _46;
  long unsigned int _47;
  sizetype _48;
  long unsigned int _50;
  const struct Vector * iftmp.27_51;
  long unsigned int _62;
  const uint8_t[1] * _63;
  long int _64;
  sizetype _65;
  sizetype _66;
  const uint8_t * _67;
  short unsigned int _68;
  int _69;
  short unsigned int _70;
  sizetype _72;
  long unsigned int _74;
  const struct Vector * iftmp.41_75;
  long int _77;
  sizetype _78;
  sizetype _79;
  const uint8_t * _80;
  short unsigned int _81;
  int _82;
  short unsigned int _83;
  sizetype _85;
  long unsigned int _87;
  const struct Vector * iftmp.42_88;
  const struct Vector * iftmp.42_89;
  long int _90;
  sizetype _91;
  sizetype _92;
  const uint8_t * _93;
  short unsigned int _94;
  int _95;
  short unsigned int _96;
  long unsigned int _97;
  sizetype _98;
  long unsigned int _100;
  const struct Vector * iftmp.41_101;
  const uint8_t * _104;
  long unsigned int _105;
  long unsigned int _107;
  const struct SubGraph * _108;
  long unsigned int _109;
  const uint8_t * _110;
  long unsigned int _111;
  long unsigned int _113;
  const struct Tensor * _114;
  const uint8_t[1] * _115;
  long int _116;
  sizetype _117;
  sizetype _118;
  const uint8_t * _119;
  short unsigned int _120;
  int _121;
  short unsigned int _122;
  unsigned int _123;
  sizetype _124;
  const void * _125;
  signed char _126;
  TfLiteType * _129;
  TfLiteStatus _130;
  short unsigned int _138;
  long unsigned int _142;
  const struct Vector * iftmp.13_143;
  long int _147;
  sizetype _148;
  sizetype _149;
  const uint8_t * _150;
  short unsigned int _151;
  int _152;
  short unsigned int _153;
  sizetype _155;
  const void * _156;
  long unsigned int _157;
  long unsigned int iftmp.1_158;
  const uint8_t[1] * _160;
  long int _161;
  sizetype _162;
  sizetype _163;
  const uint8_t * _164;
  short unsigned int _165;
  int _166;
  short unsigned int _167;
  sizetype _169;
  long unsigned int _171;
  const struct Vector * iftmp.3_172;
  long unsigned int _174;
  const uint8_t * _175;
  long unsigned int _177;
  const uint8_t * _178;
  long unsigned int _179;
  long unsigned int _181;
  const struct Buffer * _182;
  const uint8_t[1] * pretmp_200;
  long unsigned int _242;
  sizetype _250;
  TensorType _277;
  TensorType prephitmp_278;

  <bb 2>:
  if (subgraph_allocations_7(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  abort ();

  <bb 4>:
  pretmp_200 = &MEM[(const struct Table *)model_9(D)].data_;

  <bb 5>:
  # subgraph_idx_1 = PHI <0(4), subgraph_idx_40(43)>
  # DEBUG subgraph_idx => subgraph_idx_1
  # DEBUG this => model_9(D)
  # DEBUG D#24 => &model_9(D)->D.121062
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG D#79 => &MEM[(const struct Table *)model_9(D)].data_
  # DEBUG p => D#79
  _16 = MEM[(const long int *)model_9(D)];
  # DEBUG t => _16
  # DEBUG t => NULL
  # DEBUG p => NULL
  _15 = (sizetype) _16;
  _12 = -_15;
  _11 = pretmp_200 + _12;
  # DEBUG this => NULL
  # DEBUG vtable => _11
  # DEBUG p => _11
  _10 = MEM[(const short unsigned int *)_11];
  # DEBUG t => _10
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _10
  _45 = (int) _10;
  if (_45 > 8)
    goto <bb 6>;
  else
    goto <bb 49>;

  <bb 6>:
  # DEBUG p => _11 + 8
  _46 = MEM[(const short unsigned int *)_11 + 8B];
  # DEBUG t => _46
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _46
  _48 = (sizetype) _46;
  p_49 = pretmp_200 + _48;
  # DEBUG p => p_49
  if (_46 != 0)
    goto <bb 7>;
  else
    goto <bb 49>;

  <bb 7>:
  # DEBUG p => p_49
  _50 = MEM[(const long unsigned int *)p_49];
  # DEBUG t => _50
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.27_51 = p_49 + _50;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.27_51
  _28 = iftmp.27_51->length_;
  # DEBUG t => _28
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (subgraph_idx_1 < _28)
    goto <bb 8>;
  else
    goto <bb 44>;

  <bb 8>:
  # DEBUG this => model_9(D)
  # DEBUG D#24 => &model_9(D)->D.121062
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG p => D#79
  # DEBUG t => _16
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _11
  # DEBUG p => _11
  # DEBUG t => _10
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _10
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _46
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.27_51
  # DEBUG i => subgraph_idx_1
  # DEBUG this => iftmp.27_51
  # DEBUG t => _28
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.27_51
  _104 = &MEM[(void *)iftmp.27_51 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => subgraph_idx_1
  _105 = subgraph_idx_1 * 4;
  p_106 = _104 + _105;
  # DEBUG p => p_106
  # DEBUG p => p_106
  _107 = MEM[(const long unsigned int *)p_106];
  # DEBUG t => _107
  # DEBUG t => NULL
  # DEBUG p => NULL
  _108 = p_106 + _107;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG subgraph => NULL
  if (_108 != 0B)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 9>:
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  _63 = &MEM[(const struct Table *)_108].data_;
  # DEBUG p => _63
  _64 = MEM[(const long int *)_108];
  # DEBUG t => _64
  # DEBUG t => NULL
  # DEBUG p => NULL
  _65 = (sizetype) _64;
  _66 = -_65;
  _67 = _63 + _66;
  # DEBUG this => NULL
  # DEBUG vtable => _67
  # DEBUG p => _67
  _68 = MEM[(const short unsigned int *)_67];
  # DEBUG t => _68
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _68
  _69 = (int) _68;
  if (_69 > 4)
    goto <bb 10>;
  else
    goto <bb 50>;

  <bb 10>:
  # DEBUG p => _67 + 4
  _70 = MEM[(const short unsigned int *)_67 + 4B];
  # DEBUG t => _70
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _70
  _72 = (sizetype) _70;
  p_73 = _63 + _72;
  # DEBUG p => p_73
  if (_70 != 0)
    goto <bb 11>;
  else
    goto <bb 50>;

  <bb 11>:
  # DEBUG p => p_73
  _74 = MEM[(const long unsigned int *)p_73];
  # DEBUG t => _74
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.41_75 = p_73 + _74;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.41_75
  _62 = iftmp.41_75->length_;
  # DEBUG t => _62
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG alloc_count => NULL
  _18 = this_17(D)->memory_allocator_;
  _19 = _18->_vptr.SimpleMemoryAllocator;
  _20 = MEM[(int (*__vtbl_ptr_type) () *)_19 + 12B];
  _21 = _62 * 12;
  _23 = OBJ_TYPE_REF(_20;(struct SimpleMemoryAllocator)_18->3) (_18, _21, 4);
  # DEBUG tensors => _23
  if (_23 == 0B)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  # DEBUG i => 0
  if (_62 == 0)
    goto <bb 43>;
  else
    goto <bb 14>;

  <bb 13>:
  # _123 = PHI <_21(11)>
  _41 = this_17(D)->error_reporter_;
  tflite::ErrorReporter::Report (_41, "Failed to allocate memory for context->eval_tensors, %d bytes required", _123);
  goto <bb 44>;

  <bb 14>:

  <bb 15>:
  # i_176 = PHI <0(14), i_34(48)>
  # DEBUG i => i_176
  # DEBUG D#74 => this_17(D)->memory_allocator_
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG p => _63
  _90 = MEM[(const long int *)_108];
  # DEBUG t => _90
  # DEBUG t => NULL
  # DEBUG p => NULL
  _91 = (sizetype) _90;
  _92 = -_91;
  _93 = _63 + _92;
  # DEBUG this => NULL
  # DEBUG vtable => _93
  # DEBUG p => _93
  _94 = MEM[(const short unsigned int *)_93];
  # DEBUG t => _94
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _94
  _95 = (int) _94;
  if (_95 > 4)
    goto <bb 16>;
  else
    goto <bb 51>;

  <bb 16>:
  # DEBUG p => _93 + 4
  _96 = MEM[(const short unsigned int *)_93 + 4B];
  # DEBUG t => _96
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _96
  _98 = (sizetype) _96;
  p_99 = _63 + _98;
  # DEBUG p => p_99
  if (_96 != 0)
    goto <bb 17>;
  else
    goto <bb 51>;

  <bb 17>:
  # DEBUG p => p_99
  _100 = MEM[(const long unsigned int *)p_99];
  # DEBUG t => _100
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.41_101 = p_99 + _100;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.41_101
  # DEBUG i => i_176
  # DEBUG this => iftmp.41_101
  _109 = iftmp.41_101->length_;
  # DEBUG t => _109
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_109 > i_176)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 19>:
  # DEBUG this => iftmp.41_101
  _110 = &MEM[(void *)iftmp.41_101 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i_176
  _111 = i_176 * 4;
  p_112 = _110 + _111;
  # DEBUG p => p_112
  # DEBUG p => p_112
  _113 = MEM[(const long unsigned int *)p_112];
  # DEBUG t => _113
  # DEBUG t => NULL
  # DEBUG p => NULL
  _114 = p_112 + _113;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => model_9(D)
  # DEBUG D#25 => &model_9(D)->D.121062
  # DEBUG this => D#25
  # DEBUG field => 12
  # DEBUG this => D#25
  # DEBUG field => 12
  # DEBUG this => D#25
  # DEBUG field => 12
  # DEBUG this => D#25
  # DEBUG p => D#79
  _77 = MEM[(const long int *)model_9(D)];
  # DEBUG t => _77
  # DEBUG t => NULL
  # DEBUG p => NULL
  _78 = (sizetype) _77;
  _79 = -_78;
  _80 = pretmp_200 + _79;
  # DEBUG this => NULL
  # DEBUG vtable => _80
  # DEBUG p => _80
  _81 = MEM[(const short unsigned int *)_80];
  # DEBUG t => _81
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _81
  _82 = (int) _81;
  if (_82 > 12)
    goto <bb 20>;
  else
    goto <bb 22>;

  <bb 20>:
  # DEBUG p => _80 + 12
  _83 = MEM[(const short unsigned int *)_80 + 12B];
  # DEBUG t => _83
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _83
  _85 = (sizetype) _83;
  p_86 = pretmp_200 + _85;
  # DEBUG p => p_86
  if (_83 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG p => p_86
  _87 = MEM[(const long unsigned int *)p_86];
  # DEBUG t => _87
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.42_88 = p_86 + _87;

  <bb 22>:
  # iftmp.42_89 = PHI <0B(20), iftmp.42_88(21), 0B(19)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  _29 = this_17(D)->error_reporter_;
  _30 = i_176 * 12;
  _31 = _23 + _30;
  # DEBUG allocator => D#74
  # DEBUG flatbuffer_tensor => _114
  # DEBUG buffers => iftmp.42_89
  # DEBUG error_reporter => _29
  # DEBUG result => _31
  *_31 = {};
  # DEBUG this => _114
  # DEBUG D#30 => &_114->D.90370
  # DEBUG this => D#30
  # DEBUG field => 6
  # DEBUG defaultval => 0
  # DEBUG this => D#30
  # DEBUG field => 6
  # DEBUG this => D#30
  _115 = &MEM[(const struct Table *)_114].data_;
  # DEBUG p => _115
  _116 = MEM[(const long int *)_114];
  # DEBUG t => _116
  # DEBUG t => NULL
  # DEBUG p => NULL
  _117 = (sizetype) _116;
  _118 = -_117;
  _119 = _115 + _118;
  # DEBUG this => NULL
  # DEBUG vtable => _119
  # DEBUG p => _119
  _120 = MEM[(const short unsigned int *)_119];
  # DEBUG t => _120
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _120
  _121 = (int) _120;
  if (_121 > 6)
    goto <bb 23>;
  else
    goto <bb 25>;

  <bb 23>:
  # DEBUG p => _119 + 6
  _122 = MEM[(const short unsigned int *)_119 + 6B];
  # DEBUG t => _122
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _122
  if (_122 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _124 = (sizetype) _122;
  _125 = _115 + _124;
  # DEBUG p => _125
  _126 = MEM[(const signed char *)_125];
  # DEBUG t => _126
  # DEBUG t => NULL
  # DEBUG p => NULL
  _277 = (TensorType) _126;

  <bb 25>:
  # prephitmp_278 = PHI <0(23), _277(24), 0(22)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  _129 = &_31->type;
  _130 = tflite::ConvertTensorType (prephitmp_278, _129, _29);
  # DEBUG s => _130
  if (_130 != 0)
    goto <bb 46>;
  else
    goto <bb 26>;

  <bb 26>:
  # DEBUG flatbuffer_tensor => _114
  # DEBUG buffers => iftmp.42_89
  # DEBUG out_buffer => 0B
  # DEBUG this => _114
  # DEBUG D#8 => &_114->D.90370
  # DEBUG this => D#8
  # DEBUG field => 8
  # DEBUG defaultval => 0
  # DEBUG this => D#8
  # DEBUG field => 8
  # DEBUG this => D#8
  # DEBUG p => _115
  _147 = MEM[(const long int *)_114];
  # DEBUG t => _147
  # DEBUG t => NULL
  # DEBUG p => NULL
  _148 = (sizetype) _147;
  _149 = -_148;
  _150 = _115 + _149;
  # DEBUG this => NULL
  # DEBUG vtable => _150
  # DEBUG p => _150
  _151 = MEM[(const short unsigned int *)_150];
  # DEBUG t => _151
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _151
  _152 = (int) _151;
  if (_152 > 8)
    goto <bb 27>;
  else
    goto <bb 29>;

  <bb 27>:
  # DEBUG p => _150 + 8
  _153 = MEM[(const short unsigned int *)_150 + 8B];
  # DEBUG t => _153
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _153
  if (_153 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _155 = (sizetype) _153;
  _156 = _115 + _155;
  # DEBUG p => _156
  _157 = MEM[(const long unsigned int *)_156];
  # DEBUG t => _157
  # DEBUG t => NULL
  # DEBUG p => NULL

  <bb 29>:
  # iftmp.1_158 = PHI <0(27), _157(28), 0(26)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.42_89
  # DEBUG i => iftmp.1_158
  # DEBUG this => iftmp.42_89
  # DEBUG i => iftmp.1_158
  # DEBUG this => iftmp.42_89
  _177 = iftmp.42_89->length_;
  # DEBUG t => _177
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (iftmp.1_158 < _177)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 31>:
  # DEBUG this => iftmp.42_89
  _178 = &MEM[(void *)iftmp.42_89 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => iftmp.1_158
  _179 = iftmp.1_158 * 4;
  p_180 = _178 + _179;
  # DEBUG p => p_180
  # DEBUG p => p_180
  _181 = MEM[(const long unsigned int *)p_180];
  # DEBUG t => _181
  # DEBUG t => NULL
  # DEBUG p => NULL
  _182 = p_180 + _181;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG buffer => NULL
  if (_182 != 0B)
    goto <bb 32>;
  else
    goto <bb 45>;

  <bb 32>:
  # DEBUG this => NULL
  # DEBUG this => D#12
  # DEBUG field => 4
  # DEBUG this => D#12
  # DEBUG field => 4
  # DEBUG this => D#12
  # DEBUG field => 4
  # DEBUG this => D#12
  _160 = &MEM[(const struct Table *)_182].data_;
  # DEBUG p => _160
  _161 = MEM[(const long int *)_182];
  # DEBUG t => _161
  # DEBUG t => NULL
  # DEBUG p => NULL
  _162 = (sizetype) _161;
  _163 = -_162;
  _164 = _160 + _163;
  # DEBUG this => NULL
  # DEBUG vtable => _164
  # DEBUG p => _164
  _165 = MEM[(const short unsigned int *)_164];
  # DEBUG t => _165
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _165
  _166 = (int) _165;
  if (_166 > 4)
    goto <bb 33>;
  else
    goto <bb 45>;

  <bb 33>:
  # DEBUG p => _164 + 4
  _167 = MEM[(const short unsigned int *)_164 + 4B];
  # DEBUG t => _167
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _167
  _169 = (sizetype) _167;
  p_170 = _160 + _169;
  # DEBUG p => p_170
  if (_167 != 0)
    goto <bb 34>;
  else
    goto <bb 37>;

  <bb 34>:
  # DEBUG p => p_170
  _171 = MEM[(const long unsigned int *)p_170];
  # DEBUG t => _171
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.3_172 = p_170 + _171;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG array => iftmp.3_172
  if (iftmp.3_172 != 0B)
    goto <bb 35>;
  else
    goto <bb 45>;

  <bb 35>:
  # DEBUG this => iftmp.3_172
  _174 = iftmp.3_172->length_;
  # DEBUG t => _174
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_174 != 0)
    goto <bb 36>;
  else
    goto <bb 45>;

  <bb 36>:
  # DEBUG this => iftmp.3_172
  # DEBUG this => iftmp.3_172
  _175 = &MEM[(void *)iftmp.3_172 + 4B];
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG out_buffer => _175
  goto <bb 45>;

  <bb 37>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG array => 0B
  # DEBUG out_buffer => 0B
  # DEBUG flatbuffer_tensor => NULL
  # DEBUG buffers => NULL
  # DEBUG p => NULL
  # DEBUG out_buffer => NULL
  _31->data.data = 0B;
  # DEBUG this => _114
  # DEBUG D#15 => &_114->D.90370
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG p => _115
  # DEBUG t => _147
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _150
  # DEBUG p => _150
  # DEBUG t => _151
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _151
  if (_152 > 4)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  _31->dims = &kZeroLengthIntArray;
  goto <bb 47>;

  <bb 39>:
  # DEBUG p => _150 + 4
  _138 = MEM[(const short unsigned int *)_150 + 4B];
  # DEBUG t => _138
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _138
  # DEBUG D#81 => (sizetype) _138
  # DEBUG D#80 => _115 + D#81
  # DEBUG p => D#80
  if (_138 != 0)
    goto <bb 40>;
  else
    goto <bb 38>;

  <bb 40>:
  _250 = (sizetype) _138;
  p_251 = _115 + _250;
  # DEBUG p => D#80
  _142 = MEM[(const long unsigned int *)p_251];
  # DEBUG t => _142
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.13_143 = p_251 + _142;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  if (iftmp.13_143 == 0B)
    goto <bb 38>;
  else
    goto <bb 41>;

  <bb 41>:
  # DEBUG this => _114
  # DEBUG D#15 => &_114->D.90370
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG p => _115
  # DEBUG t => _147
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _150
  # DEBUG p => _150
  # DEBUG t => _151
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _151
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _138
  # DEBUG p => D#80
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG D#31 => &_31->dims
  # DEBUG D#5 => D#74
  # DEBUG error_reporter => _29
  # DEBUG flatbuffer_array => iftmp.13_143
  # DEBUG result => D#31
  # DEBUG allocator => D#5
  if (_29 != 0B)
    goto <bb 42>;
  else
    goto <bb 3>;

  <bb 42>:
  MEM[(struct TfLiteIntArray * *)_31 + 4B] = iftmp.13_143;
  # DEBUG error_reporter => NULL
  # DEBUG flatbuffer_array => NULL
  # DEBUG result => NULL
  # DEBUG s => 0
  goto <bb 47>;

  <bb 43>:
  _37 = subgraph_idx_1 * 8;
  _38 = subgraph_allocations_7(D) + _37;
  _38->tensors = _23;
  subgraph_idx_40 = subgraph_idx_1 + 1;
  # DEBUG subgraph_idx => subgraph_idx_40
  goto <bb 5>;

  <bb 44>:
  # _3 = PHI <1(13), 1(46), 0(7)>
  return _3;

  <bb 45>:
  # out_buffer_246 = PHI <_175(36), 0B(32), 0B(31), 0B(35), 0B(34)>
  # DEBUG out_buffer => out_buffer_246
  # DEBUG flatbuffer_tensor => NULL
  # DEBUG buffers => NULL
  # DEBUG p => NULL
  # DEBUG out_buffer => NULL
  _31->data.data = out_buffer_246;
  # DEBUG this => _114
  # DEBUG D#15 => &_114->D.90370
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG p => _115
  # DEBUG t => _147
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _150
  # DEBUG p => _150
  # DEBUG t => _151
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _151
  if (_152 > 4)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 46>:
  # i_292 = PHI <i_176(25)>
  # DEBUG allocator => NULL
  # DEBUG flatbuffer_tensor => NULL
  # DEBUG buffers => NULL
  # DEBUG error_reporter => NULL
  # DEBUG result => NULL
  # DEBUG p => NULL
  # DEBUG status => NULL
  # DEBUG allocator => NULL
  # DEBUG flatbuffer_tensor => NULL
  # DEBUG buffers => NULL
  # DEBUG error_reporter => NULL
  # DEBUG result => NULL
  # DEBUG p => NULL
  # DEBUG status => NULL
  _35 = this_17(D)->error_reporter_;
  tflite::ErrorReporter::Report (_35, "Failed to initialize tensor %d", i_292);
  goto <bb 44>;

  <bb 47>:
  # DEBUG allocator => NULL
  # DEBUG flatbuffer_tensor => NULL
  # DEBUG buffers => NULL
  # DEBUG error_reporter => NULL
  # DEBUG result => NULL
  # DEBUG p => NULL
  # DEBUG status => NULL
  # DEBUG allocator => NULL
  # DEBUG flatbuffer_tensor => NULL
  # DEBUG buffers => NULL
  # DEBUG error_reporter => NULL
  # DEBUG result => NULL
  # DEBUG p => NULL
  # DEBUG status => NULL
  i_34 = i_176 + 1;
  # DEBUG i => i_34
  # DEBUG i => i_34
  if (i_34 >= _62)
    goto <bb 43>;
  else
    goto <bb 48>;

  <bb 48>:
  goto <bb 15>;

  <bb 49>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _97 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 50>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _47 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 51>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  # DEBUG i => i_176
  # DEBUG this => 0B
  _242 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}



;; Function TfLiteStatus tflite::internal::InitializeTfLiteTensorFromFlatbuffer(tflite::SimpleMemoryAllocator*, bool, const tflite::Tensor&, const flatbuffers::Vector<flatbuffers::Offset<tflite::Buffer> >*, tflite::ErrorReporter*, TfLiteTensor*) (_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_21SimpleMemoryAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS6_6OffsetINS_6BufferEEEEEPNS_13ErrorReporterEP12TfLiteTensor, funcdef_no=6545, decl_uid=178106, cgraph_uid=3760, symbol_order=3801)


Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:526
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:526:24: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:526:24: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:526:24: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:526:24: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:423:14: note: vectorized 0 loops in function.
TfLiteStatus tflite::internal::InitializeTfLiteTensorFromFlatbuffer(tflite::SimpleMemoryAllocator*, bool, const tflite::Tensor&, const flatbuffers::Vector<flatbuffers::Offset<tflite::Buffer> >*, tflite::ErrorReporter*, TfLiteTensor*) (struct SimpleMemoryAllocator * allocator, bool allocate_temp, const struct Tensor & flatbuffer_tensor, const struct Vector * buffers, struct ErrorReporter * error_reporter, struct TfLiteTensor * result)
{
  const uint8_t * p;
  const struct Buffer * D.241020;
  static const char __PRETTY_FUNCTION__[246] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::Buffer>; flatbuffers::Vector<T>::return_type = const tflite::Buffer*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  void * out_buffer;
  void * D.241012;
  unsigned char * p;
  static const char __PRETTY_FUNCTION__[216] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = long long int; flatbuffers::Vector<T>::return_type = long long int; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  static const char __PRETTY_FUNCTION__[216] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = long long int; flatbuffers::Vector<T>::return_type = long long int; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  static const char __PRETTY_FUNCTION__[200] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = float; flatbuffers::Vector<T>::return_type = float; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  int i;
  int * zero_point_data;
  int channels;
  size_t type_size;
  TfLiteStatus _2;
  int * _3;
  struct TfLiteIntArray * iftmp.8_5;
  sizetype _16;
  TfLiteType * _17;
  const TfLiteStatus _20;
  sizetype _21;
  size_t * _29;
  const TfLiteStatus _31;
  long int _32;
  unsigned int _36;
  signed char _37;
  const void * _38;
  sizetype _39;
  short unsigned int _41;
  int _42;
  short unsigned int _44;
  long int _45;
  const uint8_t * _47;
  sizetype _48;
  int (*__vtbl_ptr_type) () * _51;
  int (*__vtbl_ptr_type) () _52;
  struct TfLiteAffineQuantization * _54;
  int (*__vtbl_ptr_type) () * _55;
  int (*__vtbl_ptr_type) () _56;
  struct TfLiteAffineQuantization * _58;
  int (*__vtbl_ptr_type) () * _60;
  int (*__vtbl_ptr_type) () _61;
  int _63;
  unsigned int _64;
  struct TfLiteIntArray * _66;
  int (*__vtbl_ptr_type) () * _67;
  int (*__vtbl_ptr_type) () _68;
  int _70;
  unsigned int _71;
  struct TfLiteIntArray * _73;
  sizetype _76;
  unsigned int i.9_79;
  unsigned int _80;
  int * _81;
  long int _82;
  int _83;
  const uint8_t[1] * _86;
  const uint8_t * _92;
  short unsigned int _93;
  int _94;
  short unsigned int _95;
  long unsigned int _96;
  sizetype _97;
  const void * _98;
  unsigned char _99;
  long int _102;
  sizetype _103;
  sizetype _104;
  const uint8_t * _105;
  short unsigned int _106;
  int _107;
  short unsigned int _108;
  sizetype _110;
  long unsigned int _112;
  const struct Vector * iftmp.13_113;
  short unsigned int _115;
  struct TfLiteAffineQuantization * iftmp.7_116;
  sizetype _117;
  long unsigned int _119;
  const struct QuantizationParameters * iftmp.15_120;
  const uint8_t[1] * _122;
  long int _123;
  sizetype _124;
  sizetype _125;
  const uint8_t * _126;
  short unsigned int _127;
  int _128;
  short unsigned int _129;
  sizetype _131;
  long unsigned int _133;
  const struct Vector * iftmp.16_134;
  long unsigned int _136;
  short unsigned int _137;
  sizetype _139;
  long unsigned int _141;
  const struct Vector * iftmp.18_142;
  long unsigned int _144;
  float _146;
  long long int _162;
  long unsigned int _170;
  long int _171;
  sizetype _172;
  sizetype _173;
  const uint8_t * _174;
  short unsigned int _175;
  int _176;
  short unsigned int _177;
  sizetype _179;
  long unsigned int _181;
  const struct Vector * iftmp.16_182;
  long int _184;
  sizetype _185;
  sizetype _186;
  const uint8_t * _187;
  short unsigned int _188;
  int _189;
  short unsigned int _190;
  sizetype _192;
  long unsigned int _194;
  const struct Vector * iftmp.16_195;
  long unsigned int _197;
  const uint8_t * _198;
  long unsigned int _199;
  const long long int * _200;
  long long int _201;
  short unsigned int _202;
  sizetype _204;
  long unsigned int _206;
  const struct Vector * iftmp.18_207;
  short unsigned int _209;
  TfLiteAllocationType cstore_210;
  sizetype _211;
  const void * _212;
  long int _213;
  long int iftmp.19_214;
  short unsigned int _230;
  sizetype _232;
  const void * _233;
  long unsigned int _234;
  long unsigned int iftmp.1_235;
  const uint8_t[1] * _237;
  long int _238;
  sizetype _239;
  sizetype _240;
  const uint8_t * _241;
  short unsigned int _242;
  int _243;
  short unsigned int _244;
  sizetype _246;
  long unsigned int _248;
  const struct Vector * iftmp.3_249;
  long unsigned int _251;
  const uint8_t * _252;
  long unsigned int _254;
  const uint8_t * _255;
  long unsigned int _256;
  long unsigned int _258;
  const struct Buffer * _259;
  bool prephitmp_341;
  bool _344;
  TensorType prephitmp_345;
  TensorType _348;
  long unsigned int _363;

  <bb 2>:
  if (result_12(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  abort ();

  <bb 4>:
  *result_12(D) = {};
  # DEBUG this => flatbuffer_tensor_15(D)
  # DEBUG D#30 => &flatbuffer_tensor_15(D)->D.90370
  # DEBUG this => D#30
  # DEBUG field => 6
  # DEBUG defaultval => 0
  # DEBUG this => D#30
  # DEBUG field => 6
  # DEBUG this => D#30
  _86 = &MEM[(const struct Table *)flatbuffer_tensor_15(D)].data_;
  # DEBUG p => _86
  _82 = MEM[(const long int *)flatbuffer_tensor_15(D)];
  # DEBUG t => _82
  # DEBUG t => NULL
  # DEBUG p => NULL
  _76 = (sizetype) _82;
  _48 = -_76;
  _47 = _86 + _48;
  # DEBUG this => NULL
  # DEBUG vtable => _47
  # DEBUG p => _47
  _44 = MEM[(const short unsigned int *)_47];
  # DEBUG t => _44
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _44
  _42 = (int) _44;
  if (_42 > 6)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  # DEBUG p => _47 + 6
  _41 = MEM[(const short unsigned int *)_47 + 6B];
  # DEBUG t => _41
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _41
  if (_41 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _39 = (sizetype) _41;
  _38 = _86 + _39;
  # DEBUG p => _38
  _37 = MEM[(const signed char *)_38];
  # DEBUG t => _37
  # DEBUG t => NULL
  # DEBUG p => NULL
  _348 = (TensorType) _37;

  <bb 7>:
  # prephitmp_345 = PHI <0(5), _348(6), 0(4)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  _17 = &result_12(D)->type;
  _20 = tflite::ConvertTensorType (prephitmp_345, _17, error_reporter_18(D));
  # DEBUG s => _20
  if (_20 != 0)
    goto <bb 68>;
  else
    goto <bb 8>;

  <bb 8>:
  # DEBUG this => flatbuffer_tensor_15(D)
  # DEBUG D#11 => &flatbuffer_tensor_15(D)->D.90370
  # DEBUG this => D#11
  # DEBUG field => 14
  # DEBUG defaultval => 0
  # DEBUG this => D#11
  # DEBUG field => 14
  # DEBUG this => D#11
  # DEBUG p => _86
  _32 = MEM[(const long int *)flatbuffer_tensor_15(D)];
  # DEBUG t => _32
  # DEBUG t => NULL
  # DEBUG p => NULL
  _21 = (sizetype) _32;
  _16 = -_21;
  _92 = _86 + _16;
  # DEBUG this => NULL
  # DEBUG vtable => _92
  # DEBUG p => _92
  _93 = MEM[(const short unsigned int *)_92];
  # DEBUG t => _93
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _93
  _94 = (int) _93;
  if (_94 > 14)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 9>:
  # DEBUG p => _92 + 14
  _95 = MEM[(const short unsigned int *)_92 + 14B];
  # DEBUG t => _95
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _95
  if (_95 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _97 = (sizetype) _95;
  _98 = _86 + _97;
  # DEBUG p => _98
  _99 = MEM[(const unsigned char *)_98];
  # DEBUG t => _99
  # DEBUG t => NULL
  # DEBUG p => NULL
  _344 = _99 != 0;

  <bb 11>:
  # prephitmp_341 = PHI <0(9), _344(10), 0(8)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  result_12(D)->is_variable = prephitmp_341;
  # DEBUG flatbuffer_tensor => flatbuffer_tensor_15(D)
  # DEBUG buffers => buffers_23(D)
  # DEBUG out_buffer => 0B
  # DEBUG this => flatbuffer_tensor_15(D)
  # DEBUG D#8 => &flatbuffer_tensor_15(D)->D.90370
  # DEBUG this => D#8
  # DEBUG field => 8
  # DEBUG defaultval => 0
  # DEBUG this => D#8
  # DEBUG field => 8
  # DEBUG this => D#8
  # DEBUG p => _86
  # DEBUG t => _32
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _92
  # DEBUG p => _92
  # DEBUG t => _93
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _93
  if (_94 > 8)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  # DEBUG p => _92 + 8
  _230 = MEM[(const short unsigned int *)_92 + 8B];
  # DEBUG t => _230
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _230
  if (_230 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _232 = (sizetype) _230;
  _233 = _86 + _232;
  # DEBUG p => _233
  _234 = MEM[(const long unsigned int *)_233];
  # DEBUG t => _234
  # DEBUG t => NULL
  # DEBUG p => NULL

  <bb 14>:
  # iftmp.1_235 = PHI <0(12), _234(13), 0(11)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  # DEBUG this => buffers_23(D)
  # DEBUG i => iftmp.1_235
  # DEBUG this => buffers_23(D)
  # DEBUG i => iftmp.1_235
  # DEBUG this => buffers_23(D)
  _254 = buffers_23(D)->length_;
  # DEBUG t => _254
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (iftmp.1_235 < _254)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 16>:
  # DEBUG this => buffers_23(D)
  _255 = &MEM[(void *)buffers_23(D) + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => iftmp.1_235
  _256 = iftmp.1_235 * 4;
  p_257 = _255 + _256;
  # DEBUG p => p_257
  # DEBUG p => p_257
  _258 = MEM[(const long unsigned int *)p_257];
  # DEBUG t => _258
  # DEBUG t => NULL
  # DEBUG p => NULL
  _259 = p_257 + _258;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG buffer => NULL
  if (_259 != 0B)
    goto <bb 17>;
  else
    goto <bb 22>;

  <bb 17>:
  # DEBUG this => NULL
  # DEBUG this => D#12
  # DEBUG field => 4
  # DEBUG this => D#12
  # DEBUG field => 4
  # DEBUG this => D#12
  # DEBUG field => 4
  # DEBUG this => D#12
  _237 = &MEM[(const struct Table *)_259].data_;
  # DEBUG p => _237
  _238 = MEM[(const long int *)_259];
  # DEBUG t => _238
  # DEBUG t => NULL
  # DEBUG p => NULL
  _239 = (sizetype) _238;
  _240 = -_239;
  _241 = _237 + _240;
  # DEBUG this => NULL
  # DEBUG vtable => _241
  # DEBUG p => _241
  _242 = MEM[(const short unsigned int *)_241];
  # DEBUG t => _242
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _242
  _243 = (int) _242;
  if (_243 > 4)
    goto <bb 18>;
  else
    goto <bb 22>;

  <bb 18>:
  # DEBUG p => _241 + 4
  _244 = MEM[(const short unsigned int *)_241 + 4B];
  # DEBUG t => _244
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _244
  _246 = (sizetype) _244;
  p_247 = _237 + _246;
  # DEBUG p => p_247
  if (_244 != 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG p => p_247
  _248 = MEM[(const long unsigned int *)p_247];
  # DEBUG t => _248
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.3_249 = p_247 + _248;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG array => iftmp.3_249
  if (iftmp.3_249 != 0B)
    goto <bb 20>;
  else
    goto <bb 22>;

  <bb 20>:
  # DEBUG this => iftmp.3_249
  _251 = iftmp.3_249->length_;
  # DEBUG t => _251
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_251 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG this => iftmp.3_249
  # DEBUG this => iftmp.3_249
  _252 = &MEM[(void *)iftmp.3_249 + 4B];
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG out_buffer => _252
  # DEBUG out_buffer => _252
  # DEBUG flatbuffer_tensor => NULL
  # DEBUG buffers => NULL
  # DEBUG out_buffer => NULL
  # DEBUG p => NULL
  result_12(D)->data.data = _252;
  # DEBUG flatbuffer_tensor => NULL
  # DEBUG buffers => NULL
  # DEBUG out_buffer => NULL
  # DEBUG p => NULL
  goto <bb 23>;

  <bb 22>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG array => 0B
  # DEBUG out_buffer => 0B
  # DEBUG flatbuffer_tensor => NULL
  # DEBUG buffers => NULL
  # DEBUG out_buffer => NULL
  # DEBUG p => NULL
  result_12(D)->data.data = 0B;

  <bb 23>:
  # cstore_210 = PHI <2(22), 1(21)>
  result_12(D)->allocation_type = cstore_210;
  _29 = &result_12(D)->bytes;
  _31 = tflite::BytesRequiredForTensor (flatbuffer_tensor_15(D), _29, &type_size, error_reporter_18(D));
  # DEBUG s => _31
  if (_31 != 0)
    goto <bb 68>;
  else
    goto <bb 24>;

  <bb 24>:
  # DEBUG this => flatbuffer_tensor_15(D)
  # DEBUG D#15 => &flatbuffer_tensor_15(D)->D.90370
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG p => _86
  _102 = MEM[(const long int *)flatbuffer_tensor_15(D)];
  # DEBUG t => _102
  # DEBUG t => NULL
  # DEBUG p => NULL
  _103 = (sizetype) _102;
  _104 = -_103;
  _105 = _86 + _104;
  # DEBUG this => NULL
  # DEBUG vtable => _105
  # DEBUG p => _105
  _106 = MEM[(const short unsigned int *)_105];
  # DEBUG t => _106
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _106
  _107 = (int) _106;
  if (_107 > 4)
    goto <bb 25>;
  else
    goto <bb 27>;

  <bb 25>:
  # DEBUG p => _105 + 4
  _108 = MEM[(const short unsigned int *)_105 + 4B];
  # DEBUG t => _108
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _108
  _110 = (sizetype) _108;
  p_111 = _86 + _110;
  # DEBUG p => p_111
  if (_108 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG p => p_111
  _112 = MEM[(const long unsigned int *)p_111];
  # DEBUG t => _112
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.13_113 = p_111 + _112;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  if (iftmp.13_113 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  result_12(D)->dims = &kZeroLengthIntArray;
  goto <bb 30>;

  <bb 28>:
  # DEBUG this => flatbuffer_tensor_15(D)
  # DEBUG D#15 => &flatbuffer_tensor_15(D)->D.90370
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG field => 4
  # DEBUG this => D#15
  # DEBUG p => _86
  # DEBUG t => _102
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _105
  # DEBUG p => _105
  # DEBUG t => _106
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _106
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG D#34 => &result_12(D)->dims
  # DEBUG D#5 => allocator_33(D)
  # DEBUG error_reporter => error_reporter_18(D)
  # DEBUG flatbuffer_array => iftmp.13_113
  # DEBUG result => D#34
  # DEBUG allocator => D#5
  if (error_reporter_18(D) != 0B)
    goto <bb 29>;
  else
    goto <bb 3>;

  <bb 29>:
  MEM[(struct TfLiteIntArray * *)result_12(D) + 8B] = iftmp.13_113;
  # DEBUG error_reporter => NULL
  # DEBUG flatbuffer_array => NULL
  # DEBUG result => NULL
  # DEBUG s => 0

  <bb 30>:
  # DEBUG this => flatbuffer_tensor_15(D)
  # DEBUG D#21 => &flatbuffer_tensor_15(D)->D.90370
  # DEBUG this => D#21
  # DEBUG field => 12
  # DEBUG this => D#21
  # DEBUG field => 12
  # DEBUG this => D#21
  # DEBUG field => 12
  # DEBUG this => D#21
  # DEBUG p => _86
  # DEBUG t => _102
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _105
  # DEBUG p => _105
  # DEBUG t => _106
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _106
  if (_107 > 12)
    goto <bb 31>;
  else
    goto <bb 68>;

  <bb 31>:
  # DEBUG p => _105 + 12
  _115 = MEM[(const short unsigned int *)_105 + 12B];
  # DEBUG t => _115
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _115
  _117 = (sizetype) _115;
  p_118 = _86 + _117;
  # DEBUG p => p_118
  if (_115 != 0)
    goto <bb 32>;
  else
    goto <bb 68>;

  <bb 32>:
  # DEBUG p => p_118
  _119 = MEM[(const long unsigned int *)p_118];
  # DEBUG t => _119
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.15_120 = p_118 + _119;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG src_quantization => iftmp.15_120
  if (iftmp.15_120 != 0B)
    goto <bb 33>;
  else
    goto <bb 68>;

  <bb 33>:
  # DEBUG this => iftmp.15_120
  # DEBUG D#13 => &iftmp.15_120->D.77036
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  _122 = &MEM[(const struct Table *)iftmp.15_120].data_;
  # DEBUG p => _122
  _123 = MEM[(const long int *)iftmp.15_120];
  # DEBUG t => _123
  # DEBUG t => NULL
  # DEBUG p => NULL
  _124 = (sizetype) _123;
  _125 = -_124;
  _126 = _122 + _125;
  # DEBUG this => NULL
  # DEBUG vtable => _126
  # DEBUG p => _126
  _127 = MEM[(const short unsigned int *)_126];
  # DEBUG t => _127
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _127
  _128 = (int) _127;
  if (_128 > 8)
    goto <bb 34>;
  else
    goto <bb 68>;

  <bb 34>:
  # DEBUG p => _126 + 8
  _129 = MEM[(const short unsigned int *)_126 + 8B];
  # DEBUG t => _129
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _129
  _131 = (sizetype) _129;
  p_132 = _122 + _131;
  # DEBUG p => p_132
  if (_129 != 0)
    goto <bb 35>;
  else
    goto <bb 68>;

  <bb 35>:
  # DEBUG p => p_132
  _133 = MEM[(const long unsigned int *)p_132];
  # DEBUG t => _133
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.16_134 = p_132 + _133;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  if (iftmp.16_134 != 0B)
    goto <bb 36>;
  else
    goto <bb 68>;

  <bb 36>:
  # DEBUG this => iftmp.15_120
  # DEBUG D#13 => &iftmp.15_120->D.77036
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG p => _122
  # DEBUG t => _123
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _126
  # DEBUG p => _126
  # DEBUG t => _127
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _127
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.16_134
  _136 = iftmp.16_134->length_;
  # DEBUG t => _136
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_136 != 0)
    goto <bb 37>;
  else
    goto <bb 68>;

  <bb 37>:
  # DEBUG this => iftmp.15_120
  # DEBUG D#14 => &iftmp.15_120->D.77036
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG p => _122
  # DEBUG t => _123
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _126
  # DEBUG p => _126
  # DEBUG t => _127
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _127
  if (_128 > 10)
    goto <bb 38>;
  else
    goto <bb 68>;

  <bb 38>:
  # DEBUG p => _126 + 10
  _137 = MEM[(const short unsigned int *)_126 + 10B];
  # DEBUG t => _137
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _137
  _139 = (sizetype) _137;
  p_140 = _122 + _139;
  # DEBUG p => p_140
  if (_137 != 0)
    goto <bb 39>;
  else
    goto <bb 68>;

  <bb 39>:
  # DEBUG p => p_140
  _141 = MEM[(const long unsigned int *)p_140];
  # DEBUG t => _141
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.18_142 = p_140 + _141;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  if (iftmp.18_142 != 0B)
    goto <bb 40>;
  else
    goto <bb 68>;

  <bb 40>:
  # DEBUG this => iftmp.15_120
  # DEBUG D#14 => &iftmp.15_120->D.77036
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG p => _122
  # DEBUG t => _123
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _126
  # DEBUG p => _126
  # DEBUG t => _127
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _127
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.18_142
  _144 = iftmp.18_142->length_;
  # DEBUG t => _144
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_144 != 0)
    goto <bb 41>;
  else
    goto <bb 68>;

  <bb 41>:
  # DEBUG this => iftmp.15_120
  # DEBUG D#13 => &iftmp.15_120->D.77036
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG p => _122
  # DEBUG t => _123
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _126
  # DEBUG p => _126
  # DEBUG t => _127
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _127
  # DEBUG p => _126 + 8
  # DEBUG t => _129
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _129
  # DEBUG p => p_132
  # DEBUG p => p_132
  # DEBUG t => _133
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.16_134
  # DEBUG i => 0
  # DEBUG this => iftmp.16_134
  # DEBUG t => _136
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.16_134
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => 0
  _146 = MEM[(const float *)iftmp.16_134 + 4B];
  # DEBUG t => _146
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  result_12(D)->params.scale = _146;
  # DEBUG this => iftmp.15_120
  # DEBUG D#14 => &iftmp.15_120->D.77036
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG p => _122
  # DEBUG t => _123
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _126
  # DEBUG p => _126
  # DEBUG t => _127
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _127
  # DEBUG p => _126 + 10
  # DEBUG t => _137
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _137
  # DEBUG p => p_140
  # DEBUG p => p_140
  # DEBUG t => _141
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.18_142
  # DEBUG i => 0
  # DEBUG this => iftmp.18_142
  # DEBUG t => _144
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.18_142
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => 0
  _162 = MEM[(const long long int *)iftmp.18_142 + 4B];
  # DEBUG t => _162
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  _45 = (long int) _162;
  result_12(D)->params.zero_point = _45;
  # DEBUG this => iftmp.15_120
  # DEBUG D#13 => &iftmp.15_120->D.77036
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG p => _122
  _171 = MEM[(const long int *)iftmp.15_120];
  # DEBUG t => _171
  # DEBUG t => NULL
  # DEBUG p => NULL
  _172 = (sizetype) _171;
  _173 = -_172;
  _174 = _122 + _173;
  # DEBUG this => NULL
  # DEBUG vtable => _174
  # DEBUG p => _174
  _175 = MEM[(const short unsigned int *)_174];
  # DEBUG t => _175
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _175
  _176 = (int) _175;
  if (_176 > 8)
    goto <bb 43>;
  else
    goto <bb 69>;

  <bb 42>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 43>:
  # DEBUG p => _174 + 8
  _177 = MEM[(const short unsigned int *)_174 + 8B];
  # DEBUG t => _177
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _177
  _179 = (sizetype) _177;
  p_180 = _122 + _179;
  # DEBUG p => p_180
  if (_177 != 0)
    goto <bb 44>;
  else
    goto <bb 69>;

  <bb 44>:
  # DEBUG p => p_180
  _181 = MEM[(const long unsigned int *)p_180];
  # DEBUG t => _181
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.16_182 = p_180 + _181;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.16_182
  _170 = iftmp.16_182->length_;
  # DEBUG t => _170
  # DEBUG t => NULL
  # DEBUG this => NULL
  channels_49 = (int) _170;
  # DEBUG channels => channels_49
  if (allocate_temp_50(D) != 0)
    goto <bb 45>;
  else
    goto <bb 47>;

  <bb 45>:
  _51 = allocator_33(D)->_vptr.SimpleMemoryAllocator;
  _52 = MEM[(int (*__vtbl_ptr_type) () *)_51 + 16B];
  _54 = OBJ_TYPE_REF(_52;(struct SimpleMemoryAllocator)allocator_33(D)->4) (allocator_33(D), 12, 4);
  # DEBUG quantization => _54
  if (_54 == 0B)
    goto <bb 46>;
  else
    goto <bb 48>;

  <bb 46>:
  tflite::ErrorReporter::Report (error_reporter_18(D), "Unable to allocate TfLiteAffineQuantization.\n");
  goto <bb 68>;

  <bb 47>:
  _55 = allocator_33(D)->_vptr.SimpleMemoryAllocator;
  _56 = MEM[(int (*__vtbl_ptr_type) () *)_55 + 12B];
  _58 = OBJ_TYPE_REF(_56;(struct SimpleMemoryAllocator)allocator_33(D)->3) (allocator_33(D), 12, 4);
  # DEBUG quantization => _58
  if (_58 == 0B)
    goto <bb 46>;
  else
    goto <bb 49>;

  <bb 48>:
  _60 = allocator_33(D)->_vptr.SimpleMemoryAllocator;
  _61 = MEM[(int (*__vtbl_ptr_type) () *)_60 + 16B];
  _63 = TfLiteIntArrayGetSizeInBytes (channels_49);
  _64 = (unsigned int) _63;
  _66 = OBJ_TYPE_REF(_61;(struct SimpleMemoryAllocator)allocator_33(D)->4) (allocator_33(D), _64, 4);
  goto <bb 50>;

  <bb 49>:
  _67 = allocator_33(D)->_vptr.SimpleMemoryAllocator;
  _68 = MEM[(int (*__vtbl_ptr_type) () *)_67 + 12B];
  _70 = TfLiteIntArrayGetSizeInBytes (channels_49);
  _71 = (unsigned int) _70;
  _73 = OBJ_TYPE_REF(_68;(struct SimpleMemoryAllocator)allocator_33(D)->3) (allocator_33(D), _71, 4);

  <bb 50>:
  # iftmp.8_5 = PHI <_66(48), _73(49)>
  # iftmp.7_116 = PHI <_54(48), _58(49)>
  iftmp.7_116->zero_point = iftmp.8_5;
  if (iftmp.8_5 == 0B)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  tflite::ErrorReporter::Report (error_reporter_18(D), "Unable to allocate quantization->zero_point.\n");
  goto <bb 68>;

  <bb 52>:
  # DEBUG this => iftmp.15_120
  # DEBUG D#13 => &iftmp.15_120->D.77036
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG field => 8
  # DEBUG this => D#13
  # DEBUG p => _122
  _184 = MEM[(const long int *)iftmp.15_120];
  # DEBUG t => _184
  # DEBUG t => NULL
  # DEBUG p => NULL
  _185 = (sizetype) _184;
  _186 = -_185;
  _187 = _122 + _186;
  # DEBUG this => NULL
  # DEBUG vtable => _187
  # DEBUG p => _187
  _188 = MEM[(const short unsigned int *)_187];
  # DEBUG t => _188
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _188
  _189 = (int) _188;
  if (_189 > 8)
    goto <bb 53>;
  else
    goto <bb 3>;

  <bb 53>:
  # DEBUG p => _187 + 8
  _190 = MEM[(const short unsigned int *)_187 + 8B];
  # DEBUG t => _190
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _190
  _192 = (sizetype) _190;
  p_193 = _122 + _192;
  # DEBUG p => p_193
  if (_190 != 0)
    goto <bb 54>;
  else
    goto <bb 3>;

  <bb 54>:
  # DEBUG p => p_193
  _194 = MEM[(const long unsigned int *)p_193];
  # DEBUG t => _194
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.16_195 = p_193 + _194;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG D#35 => &iftmp.7_116->scale
  # DEBUG D#7 => allocator_33(D)
  # DEBUG error_reporter => error_reporter_18(D)
  # DEBUG flatbuffer_array => iftmp.16_195
  # DEBUG result => D#35
  # DEBUG allocator => D#7
  if (error_reporter_18(D) != 0B)
    goto <bb 55>;
  else
    goto <bb 3>;

  <bb 55>:
  if (iftmp.16_195 != 0B)
    goto <bb 56>;
  else
    goto <bb 3>;

  <bb 56>:
  MEM[(struct TfLiteFloatArray * *)iftmp.7_116] = iftmp.16_195;
  # DEBUG error_reporter => NULL
  # DEBUG flatbuffer_array => NULL
  # DEBUG result => NULL
  # DEBUG s => 0
  iftmp.8_5->size = channels_49;
  zero_point_data_78 = &iftmp.8_5->data;
  # DEBUG zero_point_data => zero_point_data_78
  # DEBUG i => 0
  # DEBUG i => 0
  if (channels_49 <= 0)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG this => iftmp.15_120
  # DEBUG D#10 => &iftmp.15_120->D.77036
  # DEBUG this => D#10
  # DEBUG field => 16
  # DEBUG defaultval => 0
  # DEBUG this => D#10
  # DEBUG field => 16
  # DEBUG this => D#10
  # DEBUG p => _122
  # DEBUG t => _184
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _187
  # DEBUG p => _187
  # DEBUG t => _188
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _188
  if (_189 > 16)
    goto <bb 65>;
  else
    goto <bb 67>;

  <bb 58>:
  if (_189 > 10)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:
  # DEBUG i => 0
  _36 = 0;
  _3 = zero_point_data_78 + _36;
  # DEBUG this => iftmp.15_120
  # DEBUG D#14 => &iftmp.15_120->D.77036
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG p => _122
  # DEBUG t => _184
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _187
  # DEBUG p => _187
  # DEBUG t => _188
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _188
  goto <bb 70>;

  <bb 60>:

  <bb 61>:
  # i_253 = PHI <0(60), i_85(64)>
  # DEBUG i => i_253
  i.9_79 = (unsigned int) i_253;
  _80 = i.9_79 * 4;
  _81 = zero_point_data_78 + _80;
  # DEBUG this => iftmp.15_120
  # DEBUG D#14 => &iftmp.15_120->D.77036
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG field => 10
  # DEBUG this => D#14
  # DEBUG p => _122
  # DEBUG t => _184
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _187
  # DEBUG p => _187
  # DEBUG t => _188
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _188
  # DEBUG p => _187 + 10
  _202 = MEM[(const short unsigned int *)_187 + 10B];
  # DEBUG t => _202
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _202
  _204 = (sizetype) _202;
  p_205 = _122 + _204;
  # DEBUG p => p_205
  if (_202 != 0)
    goto <bb 62>;
  else
    goto <bb 70>;

  <bb 62>:
  # DEBUG p => p_205
  _206 = MEM[(const long unsigned int *)p_205];
  # DEBUG t => _206
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.18_207 = p_205 + _206;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.18_207
  # DEBUG i => i.9_79
  # DEBUG this => iftmp.18_207
  _197 = iftmp.18_207->length_;
  # DEBUG t => _197
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (i.9_79 < _197)
    goto <bb 63>;
  else
    goto <bb 42>;

  <bb 63>:
  # DEBUG this => iftmp.18_207
  _198 = &MEM[(void *)iftmp.18_207 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i.9_79
  _199 = i.9_79 * 8;
  _200 = _198 + _199;
  _201 = *_200;
  # DEBUG t => _201
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  _83 = (int) _201;
  *_81 = _83;
  i_85 = i_253 + 1;
  # DEBUG i => i_85
  # DEBUG i => i_85
  if (channels_49 <= i_85)
    goto <bb 57>;
  else
    goto <bb 64>;

  <bb 64>:
  goto <bb 61>;

  <bb 65>:
  # DEBUG p => _187 + 16
  _209 = MEM[(const short unsigned int *)_187 + 16B];
  # DEBUG t => _209
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _209
  if (_209 != 0)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  _211 = (sizetype) _209;
  _212 = _122 + _211;
  # DEBUG p => _212
  _213 = MEM[(const long int *)_212];
  # DEBUG t => _213
  # DEBUG t => NULL
  # DEBUG p => NULL

  <bb 67>:
  # iftmp.19_214 = PHI <0(65), _213(66), 0(57)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  iftmp.7_116->quantized_dimension = iftmp.19_214;
  result_12(D)->quantization.type = 1;
  result_12(D)->quantization.params = iftmp.7_116;

  <bb 68>:
  # _2 = PHI <_20(7), _31(23), 0(67), 1(46), 1(51), 0(31), 0(30), 0(40), 0(39), 0(38), 0(37), 0(36), 0(35), 0(34), 0(33), 0(32)>
  type_size ={v} {CLOBBER};
  return _2;

  <bb 69>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _96 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 70>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  # DEBUG i => NULL
  # DEBUG this => 0B
  _363 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}



;; Function TfLiteStatus tflite::MicroAllocator::FinishModelAllocation(const tflite::Model*, tflite::SubgraphAllocations*, tflite::ScratchBufferHandle**) (_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE, funcdef_no=6557, decl_uid=178141, cgraph_uid=3772, symbol_order=3813)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11918:90: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:629:14: note: vectorized 0 loops in function.
TfLiteStatus tflite::MicroAllocator::FinishModelAllocation(const tflite::Model*, tflite::SubgraphAllocations*, tflite::ScratchBufferHandle**) (struct MicroAllocator * const this, const struct Model * model, struct SubgraphAllocations * subgraph_allocations, struct ScratchBufferHandle * * scratch_buffer_handles)
{
  TfLiteStatus D.241356;
  const uint8_t * p;
  const struct SubGraph * D.241352;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  size_t subgraph_idx;
  TfLiteStatus _2;
  bool _7;
  struct ErrorReporter * _8;
  long int _11;
  long unsigned int _13;
  int (*__vtbl_ptr_type) () * _16;
  int (*__vtbl_ptr_type) () _17;
  unsigned int _18;
  int (*__vtbl_ptr_type) () _23;
  unsigned int _24;
  struct SubgraphAllocations * _26;
  struct TfLiteEvalTensor * _27;
  int subgraph_idx.29_29;
  const TfLiteStatus _31;
  int (*__vtbl_ptr_type) () * _32;
  int (*__vtbl_ptr_type) () _33;
  struct TfLiteEvalTensor * _34;
  const TfLiteStatus _36;
  sizetype _40;
  sizetype _41;
  const uint8_t * _42;
  short unsigned int _43;
  int _44;
  short unsigned int _45;
  sizetype _47;
  long unsigned int _49;
  const struct Vector * iftmp.27_50;
  void * PROF_60;
  TfLiteStatus _62;
  const uint8_t * _65;
  long unsigned int _66;
  long unsigned int _68;
  const struct SubGraph * _69;
  struct SimpleMemoryAllocator * _71;
  int (*__vtbl_ptr_type) () * _72;
  int (*__vtbl_ptr_type) () _73;
  unsigned int _74;
  uint8_t * _75;
  const uint8_t[1] * pretmp_82;
  int (*__vtbl_ptr_type) () * prephitmp_84;
  struct ScratchBufferHandle * prephitmp_86;
  int (*__vtbl_ptr_type) () * pretmp_88;
  struct ScratchBufferHandle * pretmp_89;
  struct ScratchBufferHandle * pretmp_90;
  int (*__vtbl_ptr_type) () * pretmp_91;
  long unsigned int _98;
  TfLiteStatus _100;
  TfLiteStatus _101;
  TfLiteStatus _102;

  <bb 2>:
  _7 = this_6(D)->model_is_allocating_;
  if (_7 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _8 = this_6(D)->error_reporter_;
  tflite::ErrorReporter::Report (_8, "MicroAllocator: Model allocation finished before starting allocating model");
  goto <bb 24>;

  <bb 4>:
  pretmp_82 = &MEM[(const struct Table *)model_10(D)].data_;

  <bb 5>:
  # subgraph_idx_1 = PHI <0(4), subgraph_idx_37(22)>
  # DEBUG subgraph_idx => subgraph_idx_1
  # DEBUG this => model_10(D)
  # DEBUG D#24 => &model_10(D)->D.121062
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG D#174 => &MEM[(const struct Table *)model_10(D)].data_
  # DEBUG p => D#174
  _11 = MEM[(const long int *)model_10(D)];
  # DEBUG t => _11
  # DEBUG t => NULL
  # DEBUG p => NULL
  _40 = (sizetype) _11;
  _41 = -_40;
  _42 = pretmp_82 + _41;
  # DEBUG this => NULL
  # DEBUG vtable => _42
  # DEBUG p => _42
  _43 = MEM[(const short unsigned int *)_42];
  # DEBUG t => _43
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _43
  _44 = (int) _43;
  if (_44 > 8)
    goto <bb 6>;
  else
    goto <bb 25>;

  <bb 6>:
  # DEBUG p => _42 + 8
  _45 = MEM[(const short unsigned int *)_42 + 8B];
  # DEBUG t => _45
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _45
  _47 = (sizetype) _45;
  p_48 = pretmp_82 + _47;
  # DEBUG p => p_48
  if (_45 != 0)
    goto <bb 7>;
  else
    goto <bb 25>;

  <bb 7>:
  # DEBUG p => p_48
  _49 = MEM[(const long unsigned int *)p_48];
  # DEBUG t => _49
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.27_50 = p_48 + _49;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.27_50
  _13 = iftmp.27_50->length_;
  # DEBUG t => _13
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (subgraph_idx_1 < _13)
    goto <bb 8>;
  else
    goto <bb 23>;

  <bb 8>:
  # DEBUG this => model_10(D)
  # DEBUG D#24 => &model_10(D)->D.121062
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG p => D#174
  # DEBUG t => _11
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _42
  # DEBUG p => _42
  # DEBUG t => _43
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _43
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _45
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.27_50
  # DEBUG i => subgraph_idx_1
  # DEBUG this => iftmp.27_50
  # DEBUG t => _13
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.27_50
  _65 = &MEM[(void *)iftmp.27_50 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => subgraph_idx_1
  _66 = subgraph_idx_1 * 4;
  p_67 = _65 + _66;
  # DEBUG p => p_67
  # DEBUG p => p_67
  _68 = MEM[(const long unsigned int *)p_67];
  # DEBUG t => _68
  # DEBUG t => NULL
  # DEBUG p => NULL
  _69 = p_67 + _68;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG subgraph => NULL
  if (_69 != 0B)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  abort ();

  <bb 10>:
  _16 = this_6(D)->_vptr.MicroAllocator;
  _17 = MEM[(int (*__vtbl_ptr_type) () *)_16 + 48B];
  _18 = this_6(D)->scratch_buffer_request_count_;
  PROF_60 = [obj_type_ref] OBJ_TYPE_REF(_17;(struct MicroAllocator)this_6(D)->12);
  if (PROF_60 == AllocateScratchBufferHandles)
    goto <bb 11>;
  else
    goto <bb 15>;

  <bb 11>:
  # DEBUG this => this_6(D)
  # DEBUG scratch_buffer_handles => scratch_buffer_handles_19(D)
  # DEBUG handle_count => _18
  if (scratch_buffer_handles_19(D) != 0B)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 12>:
  if (_18 == 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  pretmp_89 = *scratch_buffer_handles_19(D);
  goto <bb 18>;

  <bb 14>:
  # DEBUG this => this_6(D)
  # DEBUG scratch_buffer_handles => scratch_buffer_handles_19(D)
  # DEBUG handle_count => _18
  _71 = this_6(D)->memory_allocator_;
  _72 = _71->_vptr.SimpleMemoryAllocator;
  _73 = MEM[(int (*__vtbl_ptr_type) () *)_72 + 12B];
  _74 = _18 * 4;
  _75 = OBJ_TYPE_REF(_73;(struct SimpleMemoryAllocator)_71->3) (_71, _74, 4);
  *scratch_buffer_handles_19(D) = _75;
  # DEBUG s => 0
  pretmp_88 = this_6(D)->_vptr.MicroAllocator;
  goto <bb 18>;

  <bb 15>:
  _62 = OBJ_TYPE_REF(_17;(struct MicroAllocator)this_6(D)->12) (this_6(D), scratch_buffer_handles_19(D), _18);
  # DEBUG s => _62
  if (_62 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # _100 = PHI <_62(15)>
  goto <bb 24>;

  <bb 17>:
  pretmp_91 = this_6(D)->_vptr.MicroAllocator;
  pretmp_90 = *scratch_buffer_handles_19(D);

  <bb 18>:
  # prephitmp_84 = PHI <pretmp_91(17), pretmp_88(14), _16(13)>
  # prephitmp_86 = PHI <pretmp_90(17), _75(14), pretmp_89(13)>
  # DEBUG s => NULL
  _23 = MEM[(int (*__vtbl_ptr_type) () *)prephitmp_84 + 44B];
  _24 = subgraph_idx_1 * 8;
  _26 = subgraph_allocations_25(D) + _24;
  _27 = _26->tensors;
  subgraph_idx.29_29 = (int) subgraph_idx_1;
  _31 = OBJ_TYPE_REF(_23;(struct MicroAllocator)this_6(D)->11) (this_6(D), model_10(D), _27, prephitmp_86, subgraph_idx.29_29);
  # DEBUG s => _31
  if (_31 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # _102 = PHI <_31(18)>
  goto <bb 24>;

  <bb 20>:
  _32 = this_6(D)->_vptr.MicroAllocator;
  _33 = MEM[(int (*__vtbl_ptr_type) () *)_32 + 32B];
  _34 = _26->tensors;
  _36 = OBJ_TYPE_REF(_33;(struct MicroAllocator)this_6(D)->8) (this_6(D), _69, _34);
  # DEBUG s => _36
  if (_36 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # _101 = PHI <_36(20)>
  goto <bb 24>;

  <bb 22>:
  subgraph_idx_37 = subgraph_idx_1 + 1;
  # DEBUG subgraph_idx => subgraph_idx_37
  goto <bb 5>;

  <bb 23>:
  this_6(D)->model_is_allocating_ = 0;

  <bb 24>:
  # _2 = PHI <1(3), _100(16), _102(19), _101(21), 0(23)>
  return _2;

  <bb 25>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _98 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}



;; Function TfLiteStatus tflite::MicroAllocator::RequestScratchBufferInArena(size_t, int, int*) (_ZN6tflite14MicroAllocator27RequestScratchBufferInArenaEjiPi, funcdef_no=6559, decl_uid=178163, cgraph_uid=3774, symbol_order=3815)


Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [1, + , 1] < _38
  bounds on difference of bases: 0 ... 4294967294
Applying pattern match.pd:695, generic-match.c:64
Applying pattern match.pd:732, generic-match.c:10709
  result:
    # of iterations (size_t) _38 + 4294967295, bounded by 4294967294
Applying pattern match.pd:1047, generic-match.c:4821
Applying pattern match.pd:83, generic-match.c:9008
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Symbolic number of iterations is (size_t) _38
Creating dr for _12->node_idx
analyze_innermost: success.
	base_address: _32
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 64
	base_object: *_32
	Access function 0: 32
	Access function 1: {0B, +, 8}_1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_analyze_data_refs ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: got vectype for stmt: _13 = _12->node_idx;
vector(4) int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_analyze_scalar_cycles ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Analyze phi: current_node_request_count_37 = PHI <0(3), current_node_request_count_2(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Access function of PHI: current_node_request_count_37
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Analyze phi: i_36 = PHI <0(3), i_15(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Access function of PHI: {0, +, 1}_1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: step: 1,  init: 0
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Detected induction.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Analyze phi: current_node_request_count_37 = PHI <0(3), current_node_request_count_2(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: detected reduction: need to swap operands: current_node_request_count_2 = current_node_request_count_37 + _ifc__40;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Detected reduction.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_pattern_recog ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand i_36
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: i_36 = PHI <0(3), i_15(5)>
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: induction
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _ifc__40
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _ifc__40
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _ifc__40
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_analyze_data_ref_accesses ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Detected single element interleaving _12->node_idx step 8
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_mark_stmts_to_be_vectorized ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: phi relevant? current_node_request_count_37 = PHI <0(3), current_node_request_count_2(5)>
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: phi relevant? i_36 = PHI <0(3), i_15(5)>
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? # DEBUG i => NULL
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? # DEBUG current_node_request_count => NULL
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? _11 = i_36 * 8;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? _12 = _32 + _11;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? _13 = _12->node_idx;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? # DEBUG current_node_request_count => NULL
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? current_node_request_count_2 = _ifc__40 + current_node_request_count_37;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vec_stmt_relevant_p: used out of loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: mark relevant 0, live 1: current_node_request_count_2 = _ifc__40 + current_node_request_count_37;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? # DEBUG current_node_request_count => current_node_request_count_2
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? i_15 = i_36 + 1;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? # DEBUG i => i_15
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? # DEBUG i => i_15
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? # DEBUG current_node_request_count => current_node_request_count_2
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: init: stmt relevant? if (i_15 >= _38)
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: worklist: examine stmt: current_node_request_count_2 = _ifc__40 + current_node_request_count_37;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand current_node_request_count_37
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: current_node_request_count_37 = PHI <0(3), current_node_request_count_2(5)>
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: reduction
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: mark relevant 3, live 0: current_node_request_count_37 = PHI <0(3), current_node_request_count_2(5)>
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _ifc__40
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: mark relevant 3, live 0: _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: worklist: examine stmt: _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _13
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _13 = _12->node_idx;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: mark relevant 3, live 0: _13 = _12->node_idx;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: worklist: examine stmt: _13 = _12->node_idx;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: worklist: examine stmt: current_node_request_count_37 = PHI <0(3), current_node_request_count_2(5)>
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand 0
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand current_node_request_count_2
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: current_node_request_count_2 = _ifc__40 + current_node_request_count_37;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: reduction
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: reduc-stmt defining reduc-phi in the same nest.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _13 = _12->node_idx;
  stmt_b: _13 = _12->node_idx;
(analyze_overlapping_iterations 
  (chrec_a = 32)
  (chrec_b = 32)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_1)
  (chrec_b = {0B, +, 8}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_determine_vectorization_factor ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining phi: current_node_request_count_37 = PHI <0(3), current_node_request_count_2(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: get vectype for scalar type:  size_t
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vectype: vector(4) unsigned int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: nunits = 4
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining phi: i_36 = PHI <0(3), i_15(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG i => NULL

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG current_node_request_count => NULL

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: _11 = i_36 * 8;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: _12 = _32 + _11;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: _13 = _12->node_idx;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: get vectype for scalar type:  int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vectype: vector(4) int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: nunits = 4
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG current_node_request_count => NULL

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: _ifc__40 = _13 == -1 ? 1 : 0;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: get vectype for scalar type:  unsigned int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vectype: vector(4) unsigned int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: get vectype for scalar type:  unsigned int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vectype: vector(4) unsigned int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: nunits = 4
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: current_node_request_count_2 = _ifc__40 + current_node_request_count_37;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: get vectype for scalar type:  size_t
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vectype: vector(4) unsigned int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: get vectype for scalar type:  size_t
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vectype: vector(4) unsigned int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: nunits = 4
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG current_node_request_count => current_node_request_count_2

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: i_15 = i_36 + 1;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG i => i_15

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG i => i_15

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG current_node_request_count => current_node_request_count_2

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: if (i_15 >= _38)

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vectorization factor = 4
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_analyze_slp ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_make_slp_decision ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_analyze_data_refs_alignment ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_compute_data_ref_alignment:
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: can't force alignment of ref: _12->node_idx
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_prune_runtime_alias_test_list ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_enhance_data_refs_alignment ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vector alignment may not be reachable
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_can_advance_ivs_p:
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Analyze phi: current_node_request_count_37 = PHI <0(3), current_node_request_count_2(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: reduc phi. skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Analyze phi: i_36 = PHI <0(3), i_15(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Alignment of access forced using versioning.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Versioning for alignment will be applied.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_analyze_loop_operations ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: examining phi: current_node_request_count_37 = PHI <0(3), current_node_request_count_2(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: examining phi: i_36 = PHI <0(3), i_15(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG i => NULL
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: irrelevant.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG current_node_request_count => NULL
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: irrelevant.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: _11 = i_36 * 8;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: irrelevant.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: _12 = _32 + _11;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: irrelevant.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: _13 = _12->node_idx;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _12->node_idx
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: not ssa-name.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: use not simple.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _12->node_idx
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: not ssa-name.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: use not simple.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Data access with gaps requires scalar epilogue loop
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: can use vec_load_lanes<OI><V4SI>
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_model_load_cost: aligned.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG current_node_request_count => NULL
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: irrelevant.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _13 == -1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: not ssa-name.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: use not simple.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _13
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _13 = _12->node_idx;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand 1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand 0
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: current_node_request_count_2 = _ifc__40 + current_node_request_count_37;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _ifc__40
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand current_node_request_count_37
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: current_node_request_count_37 = PHI <0(3), current_node_request_count_2(5)>
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: reduction
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: detected reduction: current_node_request_count_2 = _ifc__40 + current_node_request_count_37;

vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 2 .
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG current_node_request_count => current_node_request_count_2
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: irrelevant.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: i_15 = i_36 + 1;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: irrelevant.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG i => i_15
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: irrelevant.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG i => i_15
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: irrelevant.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: # DEBUG current_node_request_count => current_node_request_count_2
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: irrelevant.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ==> examining statement: if (i_15 >= _38)
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: irrelevant.
cost model: Adding cost of checks for loop versioning to treat misalignment.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Cost model analysis: 
  Vector inside of loop cost: 2
  Vector prologue cost: 11
  Vector epilogue cost: 8
  Scalar iteration cost: 3
  Scalar outside cost: 1
  Vector outside cost: 19
  prologue iterations: 0
  epilogue iterations: 2
  Calculated minimum iters for profitability: 7
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note:   Runtime profitability threshold = 6
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note:   Static estimate profitability threshold = 6
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: epilog loop required
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_can_advance_ivs_p:
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Analyze phi: current_node_request_count_37 = PHI <0(3), current_node_request_count_2(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: reduc phi. skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Analyze phi: i_36 = PHI <0(3), i_15(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: loop vectorized
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vec_transform_loop ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Profitability threshold is 6 loop iterations.
Applying pattern match.pd:2163, generic-match.c:6467
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: created vectp.324_14
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: loop versioned for vectorization to enhance alignment

Updating SSA:
Registering new PHI nodes in block #13
Registering new PHI nodes in block #14
Registering new PHI nodes in block #4
Updating SSA information for statement _11 = i_36 * 8;
Updating SSA information for statement _12 = _32 + _11;
Updating SSA information for statement _13 = _12->node_idx;
Updating SSA information for statement _ifc__40 = _13 == -1 ? 1 : 0;
Updating SSA information for statement current_node_request_count_2 = _ifc__40 + current_node_request_count_37;
Updating SSA information for statement # DEBUG current_node_request_count => current_node_request_count_2
Updating SSA information for statement i_15 = i_36 + 1;
Updating SSA information for statement # DEBUG i => i_15
Updating SSA information for statement # DEBUG i => i_15
Updating SSA information for statement # DEBUG current_node_request_count => current_node_request_count_2
Updating SSA information for statement if (i_15 >= _38)
Registering new PHI nodes in block #5
Registering new PHI nodes in block #16
Registering new PHI nodes in block #15
Registering new PHI nodes in block #11
Updating SSA information for statement _44 = i_36 * 8;
Updating SSA information for statement _45 = _32 + _11;
Updating SSA information for statement _46 = _12->node_idx;
Updating SSA information for statement _ifc__47 = _13 == -1 ? 1 : 0;
Updating SSA information for statement current_node_request_count_48 = _ifc__40 + current_node_request_count_37;
Updating SSA information for statement # DEBUG current_node_request_count => current_node_request_count_2
Updating SSA information for statement i_49 = i_36 + 1;
Updating SSA information for statement # DEBUG i => i_15
Updating SSA information for statement # DEBUG i => i_15
Updating SSA information for statement # DEBUG current_node_request_count => current_node_request_count_2
Updating SSA information for statement if (i_15 >= _38)
Registering new PHI nodes in block #12
Registering new PHI nodes in block #6
Registering new PHI nodes in block #8
Registering new PHI nodes in block #7

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

current_node_request_count_18 -> { current_node_request_count_37 }
i_24 -> { i_36 }
_44 -> { _11 }
_45 -> { _12 }
_46 -> { _13 }
_ifc__47 -> { _ifc__40 }
current_node_request_count_48 -> { current_node_request_count_2 }
i_49 -> { i_15 }
Incremental SSA update started at block: 13
Number of blocks in CFG: 17
Number of blocks to update: 8 ( 47%)
Affected blocks: 4 5 6 11 12 14 15 16


Applying pattern match.pd:695, generic-match.c:64
Applying pattern match.pd:732, generic-match.c:10709
Applying pattern match.pd:695, generic-match.c:64
Applying pattern match.pd:732, generic-match.c:10709
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: === vect_do_peeling_for_loop_bound ===
Removing basic block 17
basic block 17, loop depth 0
 pred:       14
 succ:      


Applying pattern match.pd:1771, generic-match.c:1258
;; Scaling loop 1 with scale 0.666600, bounding iterations to 0 from guessed 16
;; guessed iterations are now 11
;; Scaling loop 3 with scale 0.777800, bounding iterations to 4 from guessed 14
;; guessed iterations are now 4
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_update_ivs_after_vectorizer: phi: current_node_request_count_37 = PHI <0(21), current_node_request_count_2(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: reduc phi. skip.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_update_ivs_after_vectorizer: phi: i_36 = PHI <0(21), i_15(5)>

Applying pattern match.pd:148, generic-match.c:566
Applying pattern match.pd:83, generic-match.c:9008
Setting upper bound of nb iterations for epilogue loop to 6
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing phi: current_node_request_count_37 = PHI <0(25), current_node_request_count_2(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing phi: i_36 = PHI <0(25), i_15(5)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: # DEBUG i => NULL

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: # DEBUG current_node_request_count => NULL

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: _11 = i_36 * 8;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: _12 = _32 + _11;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: _13 = _12->node_idx;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: transform statement.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Data access with gaps requires scalar epilogue loop
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: can use vec_load_lanes<OI><V4SI>
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: transform load. ncopies = 1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: create array_type-pointer variable to type: int[8]  vectorizing a record based array ref: *_32
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: created vectp.331_72
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: add new stmt: vect_array.332 = LOAD_LANES (MEM[(int *)vectp.330_73]);
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: add new stmt: vect__13.333_75 = vect_array.332[0];
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: add new stmt: vect__13.334_76 = vect_array.332[1];
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: # DEBUG current_node_request_count => NULL

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: _ifc__40 = _13 == -1 ? 1 : 0;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: transform statement.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _13
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _13 = _12->node_idx;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand 1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand 0
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_get_vec_def_for_operand: _13
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _13
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _13 = _12->node_idx;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note:   def_stmt =  _13 = _12->node_idx;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _13
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _13 = _12->node_idx;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_get_vec_def_for_operand: -1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand -1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: created new init_stmt: vect_cst__77 = { -1, -1, -1, -1 };
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand -1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_get_vec_def_for_operand: 1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand 1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: created new init_stmt: vect_cst__78 = { 1, 1, 1, 1 };
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand 1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_get_vec_def_for_operand: 0
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand 0
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: created new init_stmt: vect_cst__79 = { 0, 0, 0, 0 };
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand 0
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: add new stmt: vect__ifc__40.335_80 = VEC_COND_EXPR <vect__13.333_75 == vect_cst__77, vect_cst__78, vect_cst__79>;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: current_node_request_count_2 = _ifc__40 + current_node_request_count_37;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: transform statement.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _ifc__40
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand current_node_request_count_37
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: current_node_request_count_37 = PHI <0(25), current_node_request_count_2(5)>
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: reduction
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: detected reduction: current_node_request_count_2 = _ifc__40 + current_node_request_count_37;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: transform reduction.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_get_vec_def_for_operand: _ifc__40
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand _ifc__40
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: def_stmt: _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note:   def_stmt =  _ifc__40 = _13 == -1 ? 1 : 0;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: add new stmt: vect_current_node_request_count_2.336_82 = vect__ifc__40.335_80 + vect_current_node_request_count_2.336_81;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: vect_is_simple_use: operand 0
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: transform reduction: created def-use cycle: vect_current_node_request_count_2.336_81 = PHI <{ 0, 0, 0, 0 }(25), vect_current_node_request_count_2.336_82(5)>

vect_current_node_request_count_2.336_82 = vect__ifc__40.335_80 + vect_current_node_request_count_2.336_81;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: Reduce using direct vector reduction.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: # DEBUG current_node_request_count => current_node_request_count_2

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: i_15 = i_36 + 1;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: # DEBUG i => i_15

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: # DEBUG i => i_15

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: # DEBUG current_node_request_count => current_node_request_count_2

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: vectp.330_74 = vectp.330_73 + 32;

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: ------>vectorizing statement: if (i_15 >= _38)


loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:672: if (ivtmp_87 >= bnd.327_53)

;; Scaling loop 1 with scale 0.250000, bounding iterations to 2 from guessed 11
;; guessed iterations are now 1
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:671:24: note: LOOP VECTORIZED

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:661:14: note: vectorized 1 loops in function.

Updating SSA:
creating PHI node in block #4 for .MEM
creating PHI node in block #6 for .MEM
creating PHI node in block #9 for .MEM
creating PHI node in block #20 for .MEM
creating PHI node in block #23 for .MEM
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Updating SSA information for statement _30 = this_7(D)->memory_allocator_;
Updating SSA information for statement _31 = tflite::SimpleMemoryAllocator::GetHeadBuffer (_30);
Updating SSA information for statement _32 = tflite::AlignPointerUp (_31, 4);
Updating SSA information for statement _38 = this_7(D)->scratch_buffer_request_count_;
Registering new PHI nodes in block #3
Registering new PHI nodes in block #13
Registering new PHI nodes in block #14
Registering new PHI nodes in block #21
Registering new PHI nodes in block #25
Registering new PHI nodes in block #4
Updating SSA information for statement vect_array.332 = LOAD_LANES (MEM[(int *)vectp.330_73]);
Updating SSA information for statement vect__13.333_75 = vect_array.332[0];
Updating SSA information for statement vect__13.334_76 = vect_array.332[1];
Updating SSA information for statement _13 = _12->node_idx;
Registering new PHI nodes in block #5
Registering new PHI nodes in block #22
Registering new PHI nodes in block #20
Registering new PHI nodes in block #18
Updating SSA information for statement _61 = _60->node_idx;
Registering new PHI nodes in block #19
Registering new PHI nodes in block #24
Registering new PHI nodes in block #23
Registering new PHI nodes in block #16
Registering new PHI nodes in block #15
Registering new PHI nodes in block #11
Updating SSA information for statement _46 = _45->node_idx;
Registering new PHI nodes in block #12
Registering new PHI nodes in block #6
Registering new PHI nodes in block #8
Updating SSA information for statement _16 = this_7(D)->error_reporter_;
Updating SSA information for statement tflite::ErrorReporter::Report (_16, "Scratch buffer request exeeds limit per operator (%d)", 12);
Registering new PHI nodes in block #7
Registering new PHI nodes in block #9
Updating SSA information for statement *current_request_19 = {};
Updating SSA information for statement current_request_19->bytes = bytes_21(D);
Updating SSA information for statement current_request_19->node_idx = -1;
Updating SSA information for statement *buffer_idx_25(D) = prephitmp_43;
Updating SSA information for statement _27 = this_7(D)->scratch_buffer_request_count_;
Updating SSA information for statement this_7(D)->scratch_buffer_request_count_ = _28;
Registering new PHI nodes in block #10
Updating SSA information for statement return _4;

Symbols to be put in SSA form
{ D.237896 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 26
Number of blocks to update: 24 ( 92%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 20 21 22 23 24 25


Removing basic block 3
basic block 3, loop depth 0
 pred:      
 succ:       13


Merging blocks 14 and 21
Merging blocks 23 and 16
Applying pattern match.pd:797, gimple-match.c:164
Applying pattern match.pd:2419, gimple-match.c:49576
fix_loop_structure: fixing up loops for function
TfLiteStatus tflite::MicroAllocator::RequestScratchBufferInArena(size_t, int, int*) (struct MicroAllocator * const this, size_t bytes, int subgraph_idx, int * buffer_idx)
{
  size_t vect_current_node_request_count_2.338;
  size_t stmp_current_node_request_count_2.337;
  vector(4) unsigned int vect_current_node_request_count_2.336;
  vector(4) unsigned int vect__ifc__40.335;
  vector(4) int vect__13.334;
  vector(4) int vect__13.333;
  vector(4) int vect_array.332[2];
  vector(4) int * vectp.331;
  int[8] * vectp.330;
  size_t tmp.329;
  size_t ratio_mult_vf.328;
  size_t bnd.327;
  size_t ni_gap.326;
  size_t niters.325;
  vector(4) int * vectp.324;
  struct ScratchBufferRequest * D.241378;
  size_t i;
  struct ScratchBufferRequest * current_request;
  size_t current_node_request_count;
  bool _1;
  bool _3;
  TfLiteStatus _4;
  unsigned int _9;
  signed int andmask_10;
  unsigned int _11;
  struct ScratchBufferRequest * _12;
  int _13;
  struct ErrorReporter * _16;
  unsigned int _27;
  unsigned int _28;
  struct SimpleMemoryAllocator * _30;
  uint8_t * _31;
  struct ScratchBufferRequest * _32;
  bool _35;
  unsigned int _38;
  signed int addr2int0_39;
  unsigned int _ifc__40;
  unsigned int prephitmp_41;
  int _42;
  int prephitmp_43;
  unsigned int _44;
  struct ScratchBufferRequest * _45;
  int _46;
  unsigned int _ifc__47;
  unsigned int _54;
  unsigned int _55;
  unsigned int _59;
  struct ScratchBufferRequest * _60;
  int _61;
  unsigned int _ifc__62;
  unsigned int _65;
  vector(4) int vect_cst__77;
  vector(4) unsigned int vect_cst__78;
  vector(4) unsigned int vect_cst__79;
  unsigned int ivtmp_86;
  unsigned int ivtmp_87;

  <bb 2>:
  # DEBUG this => this_7(D)
  _30 = this_7(D)->memory_allocator_;
  _31 = tflite::SimpleMemoryAllocator::GetHeadBuffer (_30);
  _32 = tflite::AlignPointerUp (_31, 4);
  # DEBUG this => NULL
  # DEBUG requests => NULL
  # DEBUG current_node_request_count => 0
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG current_node_request_count => 0
  _38 = this_7(D)->scratch_buffer_request_count_;
  if (_38 == 0)
    goto <bb 20>;
  else
    goto <bb 3>;

  <bb 3>:
  vectp.324_14 = _32 + 4;
  addr2int0_39 = (signed int) vectp.324_14;
  andmask_10 = addr2int0_39 & 15;
  _1 = _38 > 6;
  _35 = andmask_10 == 0;
  _3 = _1 & _35;
  if (_3 != 0)
    goto <bb 4>;
  else
    goto <bb 12>;

  <bb 4>:
  niters.325_51 = _38;
  ni_gap.326_52 = niters.325_51 + 4294967295;
  _54 = ni_gap.326_52 + 4294967292;
  _55 = _54 >> 2;
  bnd.327_53 = _55 + 1;
  ratio_mult_vf.328_56 = bnd.327_53 << 2;
  _65 = _38 + 4294967295;
  if (_65 <= 3)
    goto <bb 10>;
  else
    goto <bb 5>;

  <bb 5>:
  vectp.331_72 = _32 + 4;
  vect_cst__77 = { -1, -1, -1, -1 };
  vect_cst__78 = { 1, 1, 1, 1 };
  vect_cst__79 = { 0, 0, 0, 0 };

  <bb 6>:
  # current_node_request_count_37 = PHI <0(5), current_node_request_count_2(11)>
  # i_36 = PHI <0(5), i_15(11)>
  # vectp.330_73 = PHI <vectp.331_72(5), vectp.330_74(11)>
  # vect_current_node_request_count_2.336_81 = PHI <{ 0, 0, 0, 0 }(5), vect_current_node_request_count_2.336_82(11)>
  # ivtmp_86 = PHI <0(5), ivtmp_87(11)>
  # DEBUG i => NULL
  # DEBUG current_node_request_count => NULL
  _11 = i_36 * 8;
  _12 = _32 + _11;
  vect_array.332 = LOAD_LANES (MEM[(int *)vectp.330_73]);
  vect__13.333_75 = vect_array.332[0];
  vect__13.334_76 = vect_array.332[1];
  _13 = _12->node_idx;
  # DEBUG current_node_request_count => NULL
  vect__ifc__40.335_80 = VEC_COND_EXPR <vect__13.333_75 == vect_cst__77, vect_cst__78, vect_cst__79>;
  _ifc__40 = _13 == -1 ? 1 : 0;
  vect_current_node_request_count_2.336_82 = vect__ifc__40.335_80 + vect_current_node_request_count_2.336_81;
  current_node_request_count_2 = _ifc__40 + current_node_request_count_37;
  # DEBUG current_node_request_count => current_node_request_count_2
  i_15 = i_36 + 1;
  # DEBUG i => i_15
  # DEBUG i => i_15
  # DEBUG current_node_request_count => current_node_request_count_2
  vectp.330_74 = vectp.330_73 + 32;
  ivtmp_87 = ivtmp_86 + 1;
  if (ivtmp_87 >= bnd.327_53)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 7>:
  # current_node_request_count_57 = PHI <current_node_request_count_63(8), current_node_request_count_66(10)>
  # i_58 = PHI <i_64(8), i_68(10)>
  # DEBUG i => NULL
  # DEBUG current_node_request_count => NULL
  _59 = i_58 * 8;
  _60 = _32 + _59;
  _61 = _60->node_idx;
  # DEBUG current_node_request_count => NULL
  _ifc__62 = _61 == -1 ? 1 : 0;
  current_node_request_count_63 = _ifc__62 + current_node_request_count_57;
  # DEBUG current_node_request_count => current_node_request_count_63
  i_64 = i_58 + 1;
  # DEBUG i => i_64
  # DEBUG i => i_64
  # DEBUG current_node_request_count => current_node_request_count_63
  if (i_64 >= _38)
    goto <bb 15>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # current_node_request_count_67 = PHI <current_node_request_count_2(6)>
  # i_69 = PHI <i_15(6)>
  # vect_current_node_request_count_2.336_83 = PHI <vect_current_node_request_count_2.336_82(6)>
  stmp_current_node_request_count_2.337_84 = [reduc_plus_expr] vect_current_node_request_count_2.336_83;
  vect_current_node_request_count_2.338_85 = stmp_current_node_request_count_2.337_84 + 0;
  if (niters.325_51 == ratio_mult_vf.328_56)
    goto <bb 16>;
  else
    goto <bb 10>;

  <bb 10>:
  # current_node_request_count_66 = PHI <vect_current_node_request_count_2.338_85(9), 0(4)>
  # i_68 = PHI <ratio_mult_vf.328_56(9), 0(4)>
  goto <bb 7>;

  <bb 11>:
  goto <bb 6>;

  <bb 12>:

  <bb 13>:
  # current_node_request_count_18 = PHI <0(12), current_node_request_count_48(14)>
  # i_24 = PHI <0(12), i_49(14)>
  # DEBUG i => NULL
  # DEBUG current_node_request_count => NULL
  _44 = i_24 * 8;
  _45 = _32 + _44;
  _46 = _45->node_idx;
  # DEBUG current_node_request_count => NULL
  _ifc__47 = _46 == -1 ? 1 : 0;
  current_node_request_count_48 = _ifc__47 + current_node_request_count_18;
  # DEBUG current_node_request_count => current_node_request_count_48
  i_49 = i_24 + 1;
  # DEBUG i => i_49
  # DEBUG i => i_49
  # DEBUG current_node_request_count => current_node_request_count_48
  if (i_49 >= _38)
    goto <bb 17>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  # current_node_request_count_71 = PHI <current_node_request_count_63(7)>

  <bb 16>:
  # current_node_request_count_70 = PHI <current_node_request_count_71(15), vect_current_node_request_count_2.338_85(9)>

  <bb 17>:
  # current_node_request_count_8 = PHI <current_node_request_count_70(16), current_node_request_count_48(13)>
  if (current_node_request_count_8 > 11)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  _9 = _38 * 8;
  _42 = (int) _38;
  goto <bb 20>;

  <bb 19>:
  _16 = this_7(D)->error_reporter_;
  tflite::ErrorReporter::Report (_16, "Scratch buffer request exeeds limit per operator (%d)", 12);
  goto <bb 21>;

  <bb 20>:
  # prephitmp_41 = PHI <_9(18), 0(2)>
  # prephitmp_43 = PHI <_42(18), 0(2)>
  current_request_19 = _32 + prephitmp_41;
  # DEBUG current_request => current_request_19
  *current_request_19 = {};
  current_request_19->bytes = bytes_21(D);
  current_request_19->node_idx = -1;
  *buffer_idx_25(D) = prephitmp_43;
  _27 = this_7(D)->scratch_buffer_request_count_;
  _28 = _27 + 1;
  this_7(D)->scratch_buffer_request_count_ = _28;

  <bb 21>:
  # _4 = PHI <1(19), 0(20)>
  return _4;

}



;; Function TfLiteStatus tflite::MicroAllocator::FinishPrepareNodeAllocations(int) (_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi, funcdef_no=6560, decl_uid=178166, cgraph_uid=3775, symbol_order=3816)


Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:711
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:711:24: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:711:24: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:711:24: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:711:24: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:703:14: note: vectorized 0 loops in function.
TfLiteStatus tflite::MicroAllocator::FinishPrepareNodeAllocations(int) (struct MicroAllocator * const this, int node_id)
{
  struct ScratchBufferRequest * D.241419;
  size_t i;
  int (*__vtbl_ptr_type) () * _7;
  int (*__vtbl_ptr_type) () _8;
  unsigned int _11;
  unsigned int _13;
  struct ScratchBufferRequest * _14;
  int _15;
  struct SimpleMemoryAllocator * _19;
  int (*__vtbl_ptr_type) () * _20;
  int (*__vtbl_ptr_type) () _21;
  const TfLiteStatus _25;
  void * PROF_26;
  struct SimpleMemoryAllocator * _28;
  int (*__vtbl_ptr_type) () * _29;
  int (*__vtbl_ptr_type) () _30;
  struct SimpleMemoryAllocator * _31;
  uint8_t * _32;
  struct ScratchBufferRequest * _33;
  unsigned int _43;
  unsigned int _44;
  unsigned int prephitmp_45;

  <bb 2>:
  _7 = this_6(D)->_vptr.MicroAllocator;
  _8 = MEM[(int (*__vtbl_ptr_type) () *)_7 + 8B];
  PROF_26 = [obj_type_ref] OBJ_TYPE_REF(_8;(struct MicroAllocator)this_6(D)->2);
  if (PROF_26 == ResetTempAllocations)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG this => this_6(D)
  _28 = this_6(D)->memory_allocator_;
  _29 = _28->_vptr.SimpleMemoryAllocator;
  _30 = MEM[(int (*__vtbl_ptr_type) () *)_29 + 20B];
  OBJ_TYPE_REF(_30;(struct SimpleMemoryAllocator)_28->5) (_28);
  goto <bb 5>;

  <bb 4>:
  OBJ_TYPE_REF(_8;(struct MicroAllocator)this_6(D)->2) (this_6(D));

  <bb 5>:
  # DEBUG this => this_6(D)
  _31 = this_6(D)->memory_allocator_;
  _32 = tflite::SimpleMemoryAllocator::GetHeadBuffer (_31);
  _33 = tflite::AlignPointerUp (_32, 4);
  # DEBUG this => NULL
  # DEBUG requests => NULL
  # DEBUG i => 0
  # DEBUG i => 0
  _43 = this_6(D)->scratch_buffer_request_count_;
  if (_43 == 0)
    goto <bb 12>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # i_42 = PHI <0(6), i_18(10)>
  # DEBUG i => i_42
  _13 = i_42 * 8;
  _14 = _33 + _13;
  _15 = _14->node_idx;
  if (_15 == -1)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _14->node_idx = node_id_16(D);

  <bb 9>:
  i_18 = i_42 + 1;
  # DEBUG i => i_18
  # DEBUG i => i_18
  if (i_18 >= _43)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 7>;

  <bb 11>:
  _44 = _43 + 12;
  _11 = _44 * 8;

  <bb 12>:
  # prephitmp_45 = PHI <_11(11), 96(5)>
  _19 = this_6(D)->memory_allocator_;
  _20 = _19->_vptr.SimpleMemoryAllocator;
  _21 = MEM[(int (*__vtbl_ptr_type) () *)_20 + 8B];
  _25 = OBJ_TYPE_REF(_21;(struct SimpleMemoryAllocator)_19->2) (_19, prephitmp_45, 4);
  # DEBUG s => _25
  return _25;

}



;; Function virtual TfLiteStatus tflite::MicroAllocator::CommitStaticMemoryPlan(const tflite::Model*, TfLiteEvalTensor*, tflite::ScratchBufferHandle*, int) (_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEP16TfLiteEvalTensorPNS_19ScratchBufferHandleEi, funcdef_no=6571, decl_uid=178210, cgraph_uid=3786, symbol_order=3827)


Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:332
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:332:55: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:332:55: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:332:55: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:332:55: note: bad loop form.

Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:307
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:307:55: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:307:55: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:307:55: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:307:55: note: bad loop form.

Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [(size_t) _116 + 1, + , 1] < _555
  bounds on difference of bases: 0 ... 4294967295
Applying pattern match.pd:1079, generic-match.c:11479
Applying pattern match.pd:994, generic-match.c:4164
  result:
    # of iterations ((size_t) _555 - (size_t) _116) - 1, bounded by 4294967295
Applying pattern match.pd:695, generic-match.c:64
Applying pattern match.pd:732, generic-match.c:10709
Applying pattern match.pd:1028, generic-match.c:3418
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: Symbolic number of iterations is (size_t) _555 - (size_t) _116
Creating dr for current_476->output_ptr
analyze_innermost: success.
	base_address: _24 + (sizetype) (_116 * 24)
	offset from base address: 0
	constant offset from base address: 4
	step: 24
	aligned to: 64
	base_object: *_24 + (sizetype) (_116 * 24)
	Access function 0: 32
	Access function 1: {0B, +, 24}_8
Creating dr for current_request_471->bytes
analyze_innermost: Applying pattern match.pd:111, generic-match.c:10156
success.
	base_address: _483
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 64
	base_object: *_483
	Access function 0: 0
	Access function 1: {0B, +, 8}_8
Creating dr for current_476->bytes
analyze_innermost: success.
	base_address: _24 + (sizetype) (_116 * 24)
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 64
	base_object: *_24 + (sizetype) (_116 * 24)
	Access function 0: 0
	Access function 1: {0B, +, 24}_8
Creating dr for current_request_471->node_idx
analyze_innermost: success.
	base_address: _483
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 64
	base_object: *_483
	Access function 0: 32
	Access function 1: {0B, +, 8}_8
Creating dr for current_476->first_created
analyze_innermost: success.
	base_address: _24 + (sizetype) (_116 * 24)
	offset from base address: 0
	constant offset from base address: 8
	step: 24
	aligned to: 64
	base_object: *_24 + (sizetype) (_116 * 24)
	Access function 0: 64
	Access function 1: {0B, +, 24}_8
Creating dr for current_476->last_used
analyze_innermost: success.
	base_address: _24 + (sizetype) (_116 * 24)
	offset from base address: 0
	constant offset from base address: 12
	step: 24
	aligned to: 64
	base_object: *_24 + (sizetype) (_116 * 24)
	Access function 0: 96
	Access function 1: {0B, +, 24}_8
Creating dr for current_476->offline_offset
analyze_innermost: success.
	base_address: _24 + (sizetype) (_116 * 24)
	offset from base address: 0
	constant offset from base address: 16
	step: 24
	aligned to: 64
	base_object: *_24 + (sizetype) (_116 * 24)
	Access function 0: 128
	Access function 1: {0B, +, 24}_8
Creating dr for current_476->needs_allocating
analyze_innermost: success.
	base_address: _24 + (sizetype) (_116 * 24)
	offset from base address: 0
	constant offset from base address: 20
	step: 24
	aligned to: 64
	base_object: *_24 + (sizetype) (_116 * 24)
	Access function 0: 160
	Access function 1: {0B, +, 24}_8
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: === vect_analyze_data_refs ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: got vectype for stmt: current_476->output_ptr = _477;
vector(4) unsigned int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: got vectype for stmt: _478 = current_request_471->bytes;
vector(4) unsigned int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: got vectype for stmt: current_476->bytes = _478;
vector(4) unsigned int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: got vectype for stmt: _479 = current_request_471->node_idx;
vector(4) int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: got vectype for stmt: current_476->first_created = _479;
vector(4) int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: got vectype for stmt: current_476->last_used = _479;
vector(4) int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: got vectype for stmt: current_476->offline_offset = -1;
vector(4) long int
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: got vectype for stmt: current_476->needs_allocating = 1;
vector(16) unsigned char
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: === vect_analyze_scalar_cycles ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: Analyze phi: i_745 = PHI <_116(98), i_480(100)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: Access function of PHI: {_116, +, 1}_8
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: step: 1,  init: _116
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: Detected induction.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: Analyze phi: .MEM_722 = PHI <.MEM_568(98), .MEM_575(100)>

../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: === vect_pattern_recog ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: vect_is_simple_use: operand _469
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: def_stmt: _469 = i_745 - _116;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: vect_is_simple_use: operand _469
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: def_stmt: _469 = i_745 - _116;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: type of def: internal
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: vect_is_simple_use: operand i_745
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: def_stmt: i_745 = PHI <_116(98), i_480(100)>
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: type of def: induction
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: === vect_analyze_data_ref_accesses ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: Detected interleaving store current_476->first_created and current_476->last_used
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: Detected interleaving store current_476->first_created and current_476->offline_offset
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: not consecutive access current_476->bytes = _478;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: using strided accesses
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: not consecutive access current_476->output_ptr = _477;
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: using strided accesses
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: interleaved store with gaps
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: not vectorized: complicated access pattern.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:284:36: note: bad data access.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11447
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11447:90: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11447:90: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11447:90: note: not vectorized: multiple nested loops.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11447:90: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:10484
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:10484:60: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:10484:60: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:10484:60: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:10484:60: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:10481
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:10481:60: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:10481:60: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:10481:60: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:10481:60: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11444
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11444:60: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11444:60: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11444:60: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11444:60: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11441
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11441:60: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11441:60: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11441:60: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/schema/schema_generated.h:11441:60: note: bad loop form.

Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:197
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:197:39: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:197:39: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:197:39: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:197:39: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2437
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2437:41: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2437:41: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2437:41: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2437:41: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp:913:14: note: vectorized 0 loops in function.
virtual TfLiteStatus tflite::MicroAllocator::CommitStaticMemoryPlan(const tflite::Model*, TfLiteEvalTensor*, tflite::ScratchBufferHandle*, int) (struct MicroAllocator * const this, const struct Model * model, struct TfLiteEvalTensor * eval_tensors, struct ScratchBufferHandle * scratch_buffer_handles, int subgraph_idx)
{
  unsigned int builder$buffer_count_;
  unsigned int builder$tensor_count_;
  struct AllocationInfo * builder$info_;
  int offset;
  const struct AllocationInfo * current;
  size_t i;
  int planner_index;
  TfLiteStatus D.241873;
  const struct AllocationInfo * current;
  size_t i;
  TfLiteStatus D.241862;
  struct ScratchBufferRequest * D.241852;
  size_t i;
  struct ScratchBufferRequest * current_request;
  struct ScratchBufferHandle * current_handle;
  struct AllocationInfo * current;
  TfLiteStatus D.241850;
  const uint8_t * p;
  const struct Operator * D.241842;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::Operator>; flatbuffers::Vector<T>::return_type = const tflite::Operator*; flatbuffers::uoffset_t = long unsigned int]";
  const uint8_t * p;
  const struct Tensor * D.241834;
  static const char __PRETTY_FUNCTION__[246] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::Tensor>; flatbuffers::Vector<T>::return_type = const tflite::Tensor*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  struct AllocationInfo * current;
  size_t n;
  struct AllocationInfo * current;
  size_t n;
  int i;
  struct AllocationInfo * current;
  size_t i;
  struct AllocationInfo * current;
  size_t i;
  struct AllocationInfo * current;
  size_t i;
  TfLiteStatus D.241826;
  const uint8_t * p;
  const struct Buffer * D.241589;
  static const char __PRETTY_FUNCTION__[246] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::Buffer>; flatbuffers::Vector<T>::return_type = const tflite::Buffer*; flatbuffers::uoffset_t = long unsigned int]";
  const uint8_t * p;
  const struct Metadata * D.241581;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::Metadata>; flatbuffers::Vector<T>::return_type = const tflite::Metadata*; flatbuffers::uoffset_t = long unsigned int]";
  size_t i;
  const size_t nbr_tensors;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  TfLiteStatus D.241573;
  const uint8_t * p;
  const struct SubGraph * D.241450;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  const TfLiteStatus s;
  struct GreedyMemoryPlanner planner;
  const int32_t * offline_planner_offsets;
  struct AllocationInfoBuilder builder;
  size_t bytes;
  size_t allocation_info_count;
  TfLiteStatus _1;
  TfLiteStatus _2;
  const uint8_t * _9;
  long unsigned int subgraph_idx.48_11;
  sizetype _14;
  sizetype _15;
  unsigned int _17;
  struct SimpleMemoryAllocator * _20;
  int (*__vtbl_ptr_type) () * _21;
  int (*__vtbl_ptr_type) () _22;
  struct AllocationInfo * _24;
  struct ErrorReporter * _25;
  long int _27;
  const uint8_t[1] * _28;
  unsigned int _29;
  struct ErrorReporter * _30;
  struct SimpleMemoryAllocator * _43;
  size_t _45;
  struct SimpleMemoryAllocator * _46;
  int (*__vtbl_ptr_type) () * _47;
  int (*__vtbl_ptr_type) () _48;
  uint8_t * _50;
  struct ErrorReporter * _51;
  int remaining_arena_size.50_53;
  struct ErrorReporter * _55;
  struct SimpleMemoryAllocator * _58;
  int (*__vtbl_ptr_type) () * _59;
  int (*__vtbl_ptr_type) () _60;
  struct SimpleMemoryAllocator * _62;
  size_t _64;
  unsigned int _66;
  struct ErrorReporter * _67;
  unsigned int _69;
  struct ErrorReporter * _71;
  struct SimpleMemoryAllocator * _72;
  uint8_t * _74;
  size_t _78;
  unsigned int _79;
  struct SimpleMemoryAllocator * _81;
  int (*__vtbl_ptr_type) () * _82;
  int (*__vtbl_ptr_type) () _83;
  const TfLiteStatus _86;
  short unsigned int _92;
  int _93;
  short unsigned int _94;
  sizetype _96;
  long unsigned int _98;
  const struct Vector * iftmp.27_99;
  const uint8_t[1] * pretmp_100;
  long unsigned int _101;
  const uint8_t[1] * _102;
  long int _103;
  sizetype _104;
  sizetype _105;
  const uint8_t * _106;
  short unsigned int _107;
  int _108;
  short unsigned int _109;
  long unsigned int _110;
  sizetype _111;
  long unsigned int _113;
  const struct Vector * iftmp.41_114;
  long unsigned int _116;
  long int _117;
  sizetype _118;
  sizetype _119;
  const uint8_t * _120;
  short unsigned int _121;
  int _122;
  short unsigned int _123;
  sizetype _125;
  long unsigned int _127;
  const struct Vector * iftmp.41_128;
  long unsigned int _135;
  const uint8_t * _136;
  long unsigned int _137;
  long unsigned int _139;
  const struct SubGraph * _140;
  long int _142;
  sizetype _143;
  sizetype _144;
  const uint8_t * _145;
  short unsigned int _146;
  int _147;
  short unsigned int _148;
  sizetype _150;
  long unsigned int _152;
  const struct Vector * iftmp.55_153;
  long unsigned int _154;
  bool _156;
  unsigned int _174;
  unsigned int tensor_index.61_175;
  const uint8_t[1] * _178;
  long int _179;
  sizetype _180;
  sizetype _181;
  const uint8_t * _182;
  short unsigned int _183;
  int _184;
  short unsigned int _185;
  long int _186;
  sizetype _187;
  long unsigned int _189;
  const struct String * iftmp.56_190;
  const struct String * iftmp.56_191;
  const uint8_t * _192;
  int _193;
  short unsigned int _200;
  const long int * _201;
  sizetype _202;
  long unsigned int _204;
  const struct Vector * iftmp.42_205;
  short unsigned int _206;
  sizetype _208;
  const void * _209;
  long unsigned int _210;
  bool _211;
  long unsigned int iftmp.1_212;
  const uint8_t[1] * _214;
  long int _215;
  sizetype _216;
  sizetype _217;
  const uint8_t * _218;
  short unsigned int _219;
  int _220;
  short unsigned int _221;
  long int cstore_222;
  sizetype _223;
  long unsigned int _225;
  const struct Vector * iftmp.3_226;
  const uint32_t * _229;
  bool _233;
  const uint8_t * _235;
  const uint8_t * _236;
  long unsigned int _237;
  long unsigned int _239;
  const struct Metadata * _240;
  long unsigned int _241;
  const uint8_t * _242;
  long unsigned int _243;
  long unsigned int _245;
  const struct Buffer * _246;
  long unsigned int _248;
  unsigned int _250;
  unsigned int _252;
  struct TfLiteEvalTensor * _253;
  void * * _254;
  size_t * _255;
  TfLiteStatus _256;
  void * _257;
  long int _259;
  sizetype _260;
  sizetype _261;
  const uint8_t * _262;
  short unsigned int _263;
  int _264;
  short unsigned int _265;
  bool _266;
  sizetype _267;
  long unsigned int _269;
  const struct Vector * iftmp.41_270;
  const struct Vector * iftmp.13_272;
  const uint8_t[1] * _273;
  long int _274;
  sizetype _275;
  sizetype _276;
  const uint8_t * _277;
  short unsigned int _278;
  int _279;
  short unsigned int _280;
  sizetype _282;
  const void * _283;
  unsigned char _284;
  bool iftmp.57_286;
  unsigned int _287;
  const int32_t * _288;
  long int _289;
  short unsigned int _298;
  bool _299;
  sizetype _300;
  long unsigned int _302;
  const struct Vector * iftmp.13_303;
  long unsigned int _305;
  const uint8_t * _315;
  long unsigned int _316;
  const long int * _317;
  long int _318;
  unsigned int tensor_index.59_320;
  unsigned int _321;
  short unsigned int _324;
  long unsigned int _325;
  sizetype _326;
  long unsigned int _328;
  const struct Vector * iftmp.13_329;
  long unsigned int _331;
  unsigned int prephitmp_337;
  sizetype _338;
  short unsigned int _349;
  sizetype _350;
  sizetype _351;
  long unsigned int _353;
  const struct Vector * iftmp.31_354;
  short unsigned int _355;
  long unsigned int _356;
  long unsigned int _357;
  int _358;
  short unsigned int _360;
  sizetype _362;
  long unsigned int _364;
  const struct Vector * iftmp.31_365;
  long unsigned int _367;
  long unsigned int _368;
  long unsigned int _370;
  int prephitmp_378;
  long unsigned int i.62_383;
  short unsigned int _393;
  sizetype _395;
  long unsigned int _397;
  const struct Vector * iftmp.13_398;
  long unsigned int _400;
  const uint8_t * _410;
  long unsigned int _411;
  const long int * _412;
  long int _413;
  unsigned int tensor_index.64_415;
  unsigned int _416;
  int _418;
  short unsigned int _420;
  sizetype _422;
  long unsigned int _424;
  const struct Vector * iftmp.13_425;
  long unsigned int _427;
  const uint8_t * _437;
  long unsigned int _438;
  const long int * _439;
  long int _440;
  unsigned int tensor_index.66_442;
  unsigned int _443;
  int _445;
  long unsigned int _453;
  const uint8_t * _454;
  long unsigned int _455;
  long unsigned int _457;
  const struct Tensor * _458;
  const uint8_t * _460;
  long unsigned int _461;
  long unsigned int _463;
  const struct Operator * _464;
  unsigned int _469;
  unsigned int _470;
  unsigned int _472;
  unsigned int _475;
  uint8_t * * _477;
  unsigned int _478;
  int _479;
  struct SimpleMemoryAllocator * _481;
  uint8_t * _482;
  struct ScratchBufferRequest * _483;
  unsigned int _485;
  bool _487;
  unsigned int _488;
  unsigned int _489;
  long int _490;
  int aligned_bytes_required.67_493;
  int _494;
  int _495;
  TfLiteStatus _496;
  int aligned_bytes_required.67_497;
  int _498;
  int _499;
  TfLiteStatus _500;
  unsigned int _504;
  bool _506;
  TfLiteStatus _510;
  void * * _511;
  int offset.68_512;
  sizetype offset.69_513;
  uint8_t * _514;
  long unsigned int _521;
  const uint8_t[1] * prephitmp_523;
  long unsigned int _554;
  unsigned int _555;
  sizetype _557;
  const uint8_t[1] * _559;
  long unsigned int _562;
  bool _591;
  long unsigned int _592;
  long unsigned int _671;
  long unsigned int _675;
  long unsigned int _679;
  int _683;
  short unsigned int pretmp_686;
  int _701;
  long unsigned int _702;
  short unsigned int pretmp_704;
  const uint8_t[1] * _705;
  TfLiteStatus _706;
  sizetype _707;
  TfLiteStatus _708;
  sizetype _710;
  TfLiteStatus _711;
  long unsigned int _712;
  const struct Vector * iftmp.42_715;
  TfLiteStatus _717;
  const uint8_t * _727;
  long unsigned int _728;
  const long int * _729;
  long int _730;
  unsigned int tensor_index.61_731;
  unsigned int _732;
  bool _743;
  bool prephitmp_744;
  const struct Vector * iftmp.42_749;
  const struct Vector * iftmp.42_750;
  long int pretmp_751;
  long int pretmp_758;

  <bb 2>:
  # DEBUG head_usage => 0
  # DEBUG this => model_8(D)
  # DEBUG D#24 => &model_8(D)->D.121062
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  # DEBUG field => 8
  # DEBUG this => D#24
  _28 = &MEM[(const struct Table *)model_8(D)].data_;
  # DEBUG p => _28
  _27 = MEM[(const long int *)model_8(D)];
  # DEBUG t => _27
  # DEBUG t => NULL
  # DEBUG p => NULL
  _15 = (sizetype) _27;
  _14 = -_15;
  _9 = _28 + _14;
  # DEBUG this => NULL
  # DEBUG vtable => _9
  # DEBUG p => _9
  _92 = MEM[(const short unsigned int *)_9];
  # DEBUG t => _92
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _92
  _93 = (int) _92;
  if (_93 > 8)
    goto <bb 3>;
  else
    goto <bb 155>;

  <bb 3>:
  # DEBUG p => _9 + 8
  _94 = MEM[(const short unsigned int *)_9 + 8B];
  # DEBUG t => _94
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _94
  _96 = (sizetype) _94;
  p_97 = _28 + _96;
  # DEBUG p => p_97
  if (_94 != 0)
    goto <bb 4>;
  else
    goto <bb 155>;

  <bb 4>:
  # DEBUG p => p_97
  _98 = MEM[(const long unsigned int *)p_97];
  # DEBUG t => _98
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.27_99 = p_97 + _98;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  subgraph_idx.48_11 = (long unsigned int) subgraph_idx_10(D);
  # DEBUG this => iftmp.27_99
  # DEBUG i => subgraph_idx.48_11
  # DEBUG this => iftmp.27_99
  _135 = iftmp.27_99->length_;
  # DEBUG t => _135
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (subgraph_idx.48_11 < _135)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 6>:
  # DEBUG this => iftmp.27_99
  _136 = &MEM[(void *)iftmp.27_99 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => subgraph_idx.48_11
  _137 = subgraph_idx.48_11 * 4;
  p_138 = _136 + _137;
  # DEBUG p => p_138
  # DEBUG p => p_138
  _139 = MEM[(const long unsigned int *)p_138];
  # DEBUG t => _139
  # DEBUG t => NULL
  # DEBUG p => NULL
  _140 = p_138 + _139;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG subgraph => NULL
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  _102 = &MEM[(const struct Table *)_140].data_;
  # DEBUG p => _102
  _103 = MEM[(const long int *)_140];
  # DEBUG t => _103
  # DEBUG t => NULL
  # DEBUG p => NULL
  _104 = (sizetype) _103;
  _105 = -_104;
  _106 = _102 + _105;
  # DEBUG this => NULL
  # DEBUG vtable => _106
  # DEBUG p => _106
  _107 = MEM[(const short unsigned int *)_106];
  # DEBUG t => _107
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _107
  _108 = (int) _107;
  if (_108 > 4)
    goto <bb 7>;
  else
    goto <bb 156>;

  <bb 7>:
  # DEBUG p => _106 + 4
  _109 = MEM[(const short unsigned int *)_106 + 4B];
  # DEBUG t => _109
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _109
  _111 = (sizetype) _109;
  p_112 = _102 + _111;
  # DEBUG p => p_112
  if (_109 != 0)
    goto <bb 8>;
  else
    goto <bb 156>;

  <bb 8>:
  # DEBUG p => p_112
  _113 = MEM[(const long unsigned int *)p_112];
  # DEBUG t => _113
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.41_114 = p_112 + _113;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.41_114
  _101 = iftmp.41_114->length_;
  # DEBUG t => _101
  # DEBUG t => NULL
  # DEBUG this => NULL
  _17 = this_16(D)->scratch_buffer_request_count_;
  allocation_info_count_18 = _17 + _101;
  # DEBUG allocation_info_count => allocation_info_count_18
  bytes_19 = allocation_info_count_18 * 24;
  # DEBUG bytes => bytes_19
  _20 = this_16(D)->memory_allocator_;
  _21 = _20->_vptr.SimpleMemoryAllocator;
  _22 = MEM[(int (*__vtbl_ptr_type) () *)_21 + 16B];
  _24 = OBJ_TYPE_REF(_22;(struct SimpleMemoryAllocator)_20->4) (_20, bytes_19, 4);
  # DEBUG allocation_info => _24
  if (_24 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _25 = this_16(D)->error_reporter_;
  tflite::ErrorReporter::Report (_25, "Failed to allocate memory for allocation_info, %d bytes required", bytes_19);
  goto <bb 145>;

  <bb 10>:
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG p => _102
  _117 = MEM[(const long int *)_140];
  # DEBUG t => _117
  # DEBUG t => NULL
  # DEBUG p => NULL
  _118 = (sizetype) _117;
  _119 = -_118;
  _120 = _102 + _119;
  # DEBUG this => NULL
  # DEBUG vtable => _120
  # DEBUG p => _120
  _121 = MEM[(const short unsigned int *)_120];
  # DEBUG t => _121
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _121
  _122 = (int) _121;
  if (_122 > 4)
    goto <bb 11>;
  else
    goto <bb 157>;

  <bb 11>:
  # DEBUG p => _120 + 4
  _123 = MEM[(const short unsigned int *)_120 + 4B];
  # DEBUG t => _123
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _123
  _125 = (sizetype) _123;
  p_126 = _102 + _125;
  # DEBUG p => p_126
  if (_123 != 0)
    goto <bb 12>;
  else
    goto <bb 157>;

  <bb 12>:
  # DEBUG p => p_126
  _127 = MEM[(const long unsigned int *)p_126];
  # DEBUG t => _127
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.41_128 = p_126 + _127;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.41_128
  _116 = iftmp.41_128->length_;
  # DEBUG t => _116
  # DEBUG t => NULL
  # DEBUG this => NULL
  _29 = this_16(D)->scratch_buffer_request_count_;
  _30 = this_16(D)->error_reporter_;
  # DEBUG this => &builder
  # DEBUG info => _24
  # DEBUG tensor_count => NULL
  # DEBUG scratch_buffer_count => _29
  # DEBUG reporter => _30
  MEM[(struct  &)&builder] ={v} {CLOBBER};
  # DEBUG builder$info_ => _24
  # DEBUG builder$tensor_count_ => _116
  # DEBUG builder$buffer_count_ => _29
  # DEBUG this => NULL
  # DEBUG info => NULL
  # DEBUG tensor_count => NULL
  # DEBUG scratch_buffer_count => NULL
  # DEBUG reporter => NULL
  # DEBUG offline_planner_offsets => 0B
  # DEBUG D#29 => &builder
  # DEBUG D#29 => &builder
  # DEBUG model => model_8(D)
  # DEBUG offline_planner_offsets => &offline_planner_offsets
  # DEBUG this => D#29
  # DEBUG this => D#29
  # DEBUG this => model_8(D)
  # DEBUG D#26 => &model_8(D)->D.121062
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG p => _28
  _142 = MEM[(const long int *)model_8(D)];
  # DEBUG t => _142
  # DEBUG t => NULL
  # DEBUG p => NULL
  _143 = (sizetype) _142;
  _144 = -_143;
  _145 = _28 + _144;
  # DEBUG this => NULL
  # DEBUG vtable => _145
  # DEBUG p => _145
  _146 = MEM[(const short unsigned int *)_145];
  # DEBUG t => _146
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _146
  _147 = (int) _146;
  if (_147 > 16)
    goto <bb 13>;
  else
    goto <bb 38>;

  <bb 13>:
  # DEBUG p => _145 + 16
  _148 = MEM[(const short unsigned int *)_145 + 16B];
  # DEBUG t => _148
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _148
  _150 = (sizetype) _148;
  p_151 = _28 + _150;
  # DEBUG p => p_151
  if (_148 != 0)
    goto <bb 14>;
  else
    goto <bb 38>;

  <bb 14>:
  # DEBUG p => p_151
  _152 = MEM[(const long unsigned int *)p_151];
  # DEBUG t => _152
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.55_153 = p_151 + _152;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  if (iftmp.55_153 != 0B)
    goto <bb 15>;
  else
    goto <bb 38>;

  <bb 15>:
  # DEBUG offline_planner_offsets => 0B
  # DEBUG i => 0
  # DEBUG this => model_8(D)
  # DEBUG D#26 => &model_8(D)->D.121062
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG p => _28
  # DEBUG t => _142
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _145
  # DEBUG p => _145
  # DEBUG t => _146
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _146
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _148
  # DEBUG p => p_151
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.55_153
  _110 = iftmp.55_153->length_;
  # DEBUG t => _110
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_110 != 0)
    goto <bb 16>;
  else
    goto <bb 38>;

  <bb 16>:

  <bb 17>:
  # i_95 = PHI <0(16), i_232(37)>
  # offline_planner_offsets_713 = PHI <0B(16), offline_planner_offsets_590(37)>
  # DEBUG offline_planner_offsets => offline_planner_offsets_713
  # DEBUG i => i_95
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _145
  # DEBUG p => NULL
  # DEBUG vtsize => _146
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _148
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => model_8(D)
  # DEBUG D#26 => &model_8(D)->D.121062
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG p => _28
  # DEBUG t => _142
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _145
  # DEBUG p => _145
  # DEBUG t => _146
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _146
  # DEBUG offline_planner_offsets => offline_planner_offsets_713
  # DEBUG i => i_95
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _145
  # DEBUG p => NULL
  # DEBUG vtsize => _146
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _148
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => model_8(D)
  # DEBUG D#26 => &model_8(D)->D.121062
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _145
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _146
  # DEBUG p => _145 + 16
  # DEBUG t => _148
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _148
  # DEBUG p => p_151
  # DEBUG p => p_151
  # DEBUG t => _152
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.55_153
  # DEBUG i => i_95
  # DEBUG this => iftmp.55_153
  # DEBUG t => _110
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (i_95 < _110)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 19>:
  # DEBUG this => iftmp.55_153
  _236 = &MEM[(void *)iftmp.55_153 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i_95
  _237 = i_95 * 4;
  p_238 = _236 + _237;
  # DEBUG p => p_238
  # DEBUG p => p_238
  _239 = MEM[(const long unsigned int *)p_238];
  # DEBUG t => _239
  # DEBUG t => NULL
  # DEBUG p => NULL
  _240 = p_238 + _239;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG metadata => NULL
  # DEBUG this => NULL
  # DEBUG this => D#20
  # DEBUG field => 4
  # DEBUG this => D#20
  # DEBUG field => 4
  # DEBUG this => D#20
  # DEBUG field => 4
  # DEBUG this => D#20
  _178 = &MEM[(const struct Table *)_240].data_;
  # DEBUG p => _178
  _179 = MEM[(const long int *)_240];
  # DEBUG t => _179
  # DEBUG t => NULL
  # DEBUG p => NULL
  _180 = (sizetype) _179;
  _181 = -_180;
  _182 = _178 + _181;
  # DEBUG this => NULL
  # DEBUG vtable => _182
  # DEBUG p => _182
  _183 = MEM[(const short unsigned int *)_182];
  # DEBUG t => _183
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _183
  _184 = (int) _183;
  if (_184 > 4)
    goto <bb 20>;
  else
    goto <bb 22>;

  <bb 20>:
  # DEBUG p => _182 + 4
  _185 = MEM[(const short unsigned int *)_182 + 4B];
  # DEBUG t => _185
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _185
  _187 = (sizetype) _185;
  p_188 = _178 + _187;
  # DEBUG p => p_188
  if (_185 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG p => p_188
  _189 = MEM[(const long unsigned int *)p_188];
  # DEBUG t => _189
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.56_190 = p_188 + _189;

  <bb 22>:
  # iftmp.56_191 = PHI <0B(20), iftmp.56_190(21), 0B(19)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.56_191
  # DEBUG D#4 => &iftmp.56_191->D.58483
  # DEBUG this => D#4
  _192 = &MEM[(void *)iftmp.56_191 + 4B];
  # DEBUG this => NULL
  # DEBUG this => NULL
  _193 = strncmp (_192, &kOfflineMemAllocMetadata, 23);
  if (_193 == 0)
    goto <bb 23>;
  else
    goto <bb 35>;

  <bb 23>:
  # DEBUG this => model_8(D)
  # DEBUG D#25 => &model_8(D)->D.121062
  # DEBUG this => D#25
  # DEBUG field => 12
  # DEBUG this => D#25
  # DEBUG field => 12
  # DEBUG this => D#25
  # DEBUG field => 12
  # DEBUG this => D#25
  # DEBUG p => _28
  # DEBUG t => _142
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _145
  # DEBUG p => _145
  # DEBUG t => _146
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _146
  if (_147 > 12)
    goto <bb 24>;
  else
    goto <bb 26>;

  <bb 24>:
  # DEBUG p => _145 + 12
  _200 = MEM[(const short unsigned int *)_145 + 12B];
  # DEBUG t => _200
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _200
  _202 = (sizetype) _200;
  p_203 = _28 + _202;
  # DEBUG p => p_203
  if (_200 != 0)
    goto <bb 25>;
  else
    goto <bb 148>;

  <bb 25>:
  # DEBUG p => p_203
  _204 = MEM[(const long unsigned int *)p_203];
  # DEBUG t => _204
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.42_205 = p_203 + _204;
  goto <bb 148>;

  <bb 26>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => 0
  # DEBUG D#209 => (sizetype) 0
  # DEBUG p => _28 + D#209
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG buffers => 0B
  # DEBUG this => NULL
  # DEBUG this => D#9
  # DEBUG field => 6
  # DEBUG defaultval => 0
  # DEBUG this => D#9
  # DEBUG field => 6
  # DEBUG this => D#9
  # DEBUG p => _178
  # DEBUG t => _179
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _182
  # DEBUG p => _182
  # DEBUG t => _183
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _183
  if (_184 > 6)
    goto <bb 27>;
  else
    goto <bb 158>;

  <bb 27>:
  # iftmp.42_749 = PHI <0B(26), iftmp.42_715(148)>
  # DEBUG p => _182 + 6
  _206 = MEM[(const short unsigned int *)_182 + 6B];
  # DEBUG t => _206
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _206
  if (_206 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _208 = (sizetype) _206;
  _209 = _178 + _208;
  # DEBUG p => _209
  _210 = MEM[(const long unsigned int *)_209];
  # DEBUG t => _210
  # DEBUG t => NULL
  # DEBUG p => NULL

  <bb 29>:
  # iftmp.1_212 = PHI <0(27), _210(28), 0(148)>
  # iftmp.42_750 = PHI <iftmp.42_749(27), iftmp.42_749(28), iftmp.42_715(148)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.42_750
  # DEBUG i => iftmp.1_212
  # DEBUG this => iftmp.42_750
  # DEBUG i => iftmp.1_212
  # DEBUG this => iftmp.42_750
  _241 = iftmp.42_750->length_;
  # DEBUG t => _241
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (iftmp.1_212 < _241)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 31>:
  # DEBUG this => iftmp.42_750
  _242 = &MEM[(void *)iftmp.42_750 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => iftmp.1_212
  _243 = iftmp.1_212 * 4;
  p_244 = _242 + _243;
  # DEBUG p => p_244
  # DEBUG p => p_244
  _245 = MEM[(const long unsigned int *)p_244];
  # DEBUG t => _245
  # DEBUG t => NULL
  # DEBUG p => NULL
  _246 = p_244 + _245;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG buffer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#12
  # DEBUG field => 4
  # DEBUG this => D#12
  # DEBUG field => 4
  # DEBUG this => D#12
  # DEBUG field => 4
  # DEBUG this => D#12
  _214 = &MEM[(const struct Table *)_246].data_;
  # DEBUG p => _214
  _215 = MEM[(const long int *)_246];
  # DEBUG t => _215
  # DEBUG t => NULL
  # DEBUG p => NULL
  _216 = (sizetype) _215;
  _217 = -_216;
  _218 = _214 + _217;
  # DEBUG this => NULL
  # DEBUG vtable => _218
  # DEBUG p => _218
  _219 = MEM[(const short unsigned int *)_218];
  # DEBUG t => _219
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _219
  _220 = (int) _219;
  if (_220 > 4)
    goto <bb 32>;
  else
    goto <bb 159>;

  <bb 32>:
  # DEBUG p => _218 + 4
  _221 = MEM[(const short unsigned int *)_218 + 4B];
  # DEBUG t => _221
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _221
  _223 = (sizetype) _221;
  p_224 = _214 + _223;
  # DEBUG p => p_224
  if (_221 != 0)
    goto <bb 33>;
  else
    goto <bb 159>;

  <bb 33>:
  # DEBUG p => p_224
  _225 = MEM[(const long unsigned int *)p_224];
  # DEBUG t => _225
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.3_226 = p_224 + _225;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG array => iftmp.3_226
  # DEBUG this => iftmp.3_226
  # DEBUG this => iftmp.3_226
  # DEBUG D#28 => &MEM[(void *)iftmp.3_226 + 4B]
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG metadata_buffer => D#28
  nbr_tensors_228 = MEM[(const uint32_t *)iftmp.3_226 + 12B];
  # DEBUG nbr_tensors => nbr_tensors_228
  _229 = &MEM[(void *)iftmp.3_226 + 16B];
  # DEBUG offline_planner_offsets => _229
  if (_116 != nbr_tensors_228)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # nbr_tensors_718 = PHI <nbr_tensors_228(33)>
  tflite::ErrorReporter::Report (_30, "Nbr of offline buffer offsets (%d) in metadata not equal nbr tensors (%d)\n", nbr_tensors_718, _116);
  # DEBUG offline_planner_offsets => NULL
  # DEBUG model => NULL
  # DEBUG offline_planner_offsets => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG nbr_tensors => NULL
  # DEBUG i => NULL
  # DEBUG s => NULL
  goto <bb 145>;

  <bb 35>:
  # offline_planner_offsets_590 = PHI <offline_planner_offsets_713(22), _229(33)>
  # DEBUG offline_planner_offsets => offline_planner_offsets_590
  i_232 = i_95 + 1;
  # DEBUG i => i_232
  # DEBUG offline_planner_offsets => offline_planner_offsets_590
  # DEBUG i => i_232
  # DEBUG this => model_8(D)
  # DEBUG D#26 => &model_8(D)->D.121062
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG field => 16
  # DEBUG this => D#26
  # DEBUG p => _28
  # DEBUG t => _142
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _145
  # DEBUG p => _145
  # DEBUG t => _146
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _146
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _148
  # DEBUG p => p_151
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.55_153
  # DEBUG t => _110
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_110 > i_232)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  # offline_planner_offsets_700 = PHI <offline_planner_offsets_590(35)>
  goto <bb 38>;

  <bb 37>:
  goto <bb 17>;

  <bb 38>:
  # offline_planner_offsets_760 = PHI <0B(13), offline_planner_offsets_700(36), 0B(12), 0B(15), 0B(14)>
  # DEBUG offline_planner_offsets => offline_planner_offsets_760
  # DEBUG model => NULL
  # DEBUG offline_planner_offsets => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG nbr_tensors => NULL
  # DEBUG i => NULL
  # DEBUG s => NULL
  # DEBUG D#27 => &builder
  # DEBUG D#27 => &builder
  # DEBUG subgraph => _140
  # DEBUG offline_offsets => offline_planner_offsets_760
  # DEBUG eval_tensors => eval_tensors_35(D)
  # DEBUG this => D#27
  # DEBUG this => D#27
  if (eval_tensors_35(D) != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG i => 0
  if (_116 == 0)
    goto <bb 41>;
  else
    goto <bb 43>;

  <bb 40>:
  abort ();

  <bb 41>:
  # prephitmp_523 = PHI <_559(59), _120(39)>
  # prephitmp_378 = PHI <_683(59), _122(39)>
  if (prephitmp_378 > 6)
    goto <bb 60>;
  else
    goto <bb 42>;

  <bb 42>:
  # DEBUG i => 0
  # DEBUG this => _140
  # DEBUG D#16 => &_140->D.112635
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG p => _102
  # DEBUG D#238 => MEM[(const long int *)_140]
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG D#237 => (sizetype) D#238
  # DEBUG D#236 => -D#237
  # DEBUG D#235 => _102 + D#236
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG D#234 => MEM[(const short unsigned int *)D#235]
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  goto <bb 161>;

  <bb 43>:

  <bb 44>:
  # i_748 = PHI <0(43), i_290(58)>
  # DEBUG i => i_748
  _250 = i_748 * 24;
  current_251 = _24 + _250;
  # DEBUG current => current_251
  _252 = i_748 * 12;
  _253 = eval_tensors_35(D) + _252;
  _254 = &_253->data.data;
  current_251->output_ptr = _254;
  _255 = &current_251->bytes;
  _256 = tflite::TfLiteEvalTensorByteLength (_253, _255);
  # DEBUG s => _256
  if (_256 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # _717 = PHI <_256(44)>
  goto <bb 145>;

  <bb 46>:
  current_251->first_created = -1;
  current_251->last_used = -1;
  _257 = _253->data.data;
  if (_257 == 0B)
    goto <bb 47>;
  else
    goto <bb 55>;

  <bb 47>:
  # DEBUG this => _140
  # DEBUG D#22 => &_140->D.112635
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG field => 4
  # DEBUG this => D#22
  # DEBUG p => _102
  _259 = MEM[(const long int *)_140];
  # DEBUG t => _259
  # DEBUG t => NULL
  # DEBUG p => NULL
  _260 = (sizetype) _259;
  _261 = -_260;
  _262 = _102 + _261;
  # DEBUG this => NULL
  # DEBUG vtable => _262
  # DEBUG p => _262
  _263 = MEM[(const short unsigned int *)_262];
  # DEBUG t => _263
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _263
  _264 = (int) _263;
  if (_264 > 4)
    goto <bb 48>;
  else
    goto <bb 160>;

  <bb 48>:
  # DEBUG p => _262 + 4
  _265 = MEM[(const short unsigned int *)_262 + 4B];
  # DEBUG t => _265
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _265
  _267 = (sizetype) _265;
  p_268 = _102 + _267;
  # DEBUG p => p_268
  if (_265 != 0)
    goto <bb 49>;
  else
    goto <bb 160>;

  <bb 49>:
  # DEBUG p => p_268
  _269 = MEM[(const long unsigned int *)p_268];
  # DEBUG t => _269
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.41_270 = p_268 + _269;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.41_270
  # DEBUG i => i_748
  # DEBUG this => iftmp.41_270
  _453 = iftmp.41_270->length_;
  # DEBUG t => _453
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_453 > i_748)
    goto <bb 51>;
  else
    goto <bb 50>;

  <bb 50>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 51>:
  # DEBUG this => iftmp.41_270
  _454 = &MEM[(void *)iftmp.41_270 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i_748
  _455 = i_748 * 4;
  p_456 = _454 + _455;
  # DEBUG p => p_456
  # DEBUG p => p_456
  _457 = MEM[(const long unsigned int *)p_456];
  # DEBUG t => _457
  # DEBUG t => NULL
  # DEBUG p => NULL
  _458 = p_456 + _457;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG this => D#11
  # DEBUG field => 14
  # DEBUG defaultval => 0
  # DEBUG this => D#11
  # DEBUG field => 14
  # DEBUG this => D#11
  _273 = &MEM[(const struct Table *)_458].data_;
  # DEBUG p => _273
  _274 = MEM[(const long int *)_458];
  # DEBUG t => _274
  # DEBUG t => NULL
  # DEBUG p => NULL
  _275 = (sizetype) _274;
  _276 = -_275;
  _277 = _273 + _276;
  # DEBUG this => NULL
  # DEBUG vtable => _277
  # DEBUG p => _277
  _278 = MEM[(const short unsigned int *)_277];
  # DEBUG t => _278
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _278
  _279 = (int) _278;
  if (_279 > 14)
    goto <bb 52>;
  else
    goto <bb 54>;

  <bb 52>:
  # DEBUG p => _277 + 14
  _280 = MEM[(const short unsigned int *)_277 + 14B];
  # DEBUG t => _280
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _280
  if (_280 != 0)
    goto <bb 53>;
  else
    goto <bb 55>;

  <bb 53>:
  _282 = (sizetype) _280;
  _283 = _273 + _282;
  # DEBUG p => _283
  _284 = MEM[(const unsigned char *)_283];
  # DEBUG t => _284
  # DEBUG t => NULL
  # DEBUG p => NULL
  _743 = _284 == 0;

  <bb 54>:
  # prephitmp_744 = PHI <1(51), _743(53)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL

  <bb 55>:
  # iftmp.57_286 = PHI <0(46), prephitmp_744(54), 1(52)>
  current_251->needs_allocating = iftmp.57_286;
  if (offline_planner_offsets_760 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  _287 = i_748 * 4;
  _288 = offline_planner_offsets_760 + _287;
  _289 = *_288;

  <bb 57>:
  # cstore_222 = PHI <_289(56), -1(55)>
  current_251->offline_offset = cstore_222;
  i_290 = i_748 + 1;
  # DEBUG i => i_290
  # DEBUG i => i_290
  if (_116 <= i_290)
    goto <bb 59>;
  else
    goto <bb 58>;

  <bb 58>:
  goto <bb 44>;

  <bb 59>:
  pretmp_751 = MEM[(const long int *)_140];
  _557 = (sizetype) pretmp_751;
  _350 = -_557;
  _559 = _102 + _350;
  pretmp_686 = MEM[(const short unsigned int *)_559];
  _683 = (int) pretmp_686;
  goto <bb 41>;

  <bb 60>:

  <bb 61>:
  # i_306 = PHI <0(60), i_323(65)>
  # DEBUG i => i_306
  # DEBUG this => _140
  # DEBUG D#16 => &_140->D.112635
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG p => _102
  # DEBUG D#238 => MEM[(const long int *)_140]
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG D#237 => (sizetype) D#238
  # DEBUG D#236 => -D#237
  # DEBUG D#235 => _102 + D#236
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG D#234 => MEM[(const short unsigned int *)D#235]
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  # DEBUG p => D#235 + 6
  _298 = MEM[(const short unsigned int *)prephitmp_523 + 6B];
  # DEBUG t => _298
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _298
  _300 = (sizetype) _298;
  p_301 = _102 + _300;
  # DEBUG p => p_301
  if (_298 != 0)
    goto <bb 62>;
  else
    goto <bb 161>;

  <bb 62>:
  # DEBUG p => p_301
  _302 = MEM[(const long unsigned int *)p_301];
  # DEBUG t => _302
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.13_303 = p_301 + _302;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.13_303
  _305 = iftmp.13_303->length_;
  # DEBUG t => _305
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_305 > i_306)
    goto <bb 65>;
  else
    goto <bb 63>;

  <bb 63>:
  if (prephitmp_378 > 8)
    goto <bb 66>;
  else
    goto <bb 64>;

  <bb 64>:
  # DEBUG i => 0
  # DEBUG this => _140
  # DEBUG D#17 => &_140->D.112635
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG p => _102
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  goto <bb 162>;

  <bb 65>:
  # DEBUG this => _140
  # DEBUG D#16 => &_140->D.112635
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG field => 6
  # DEBUG this => D#16
  # DEBUG p => _102
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _298
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.13_303
  # DEBUG i => i_306
  # DEBUG this => iftmp.13_303
  # DEBUG t => _305
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.13_303
  _315 = &MEM[(void *)iftmp.13_303 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i_306
  _316 = i_306 * 4;
  _317 = _315 + _316;
  _318 = *_317;
  # DEBUG t => _318
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG tensor_index => _318
  tensor_index.59_320 = (unsigned int) _318;
  _321 = tensor_index.59_320 * 24;
  current_322 = _24 + _321;
  # DEBUG current => current_322
  current_322->first_created = 0;
  i_323 = i_306 + 1;
  # DEBUG i => i_323
  goto <bb 61>;

  <bb 66>:
  if (prephitmp_378 > 10)
    goto <bb 70>;
  else
    goto <bb 67>;

  <bb 67>:
  # DEBUG i => 0
  # DEBUG this => _140
  # DEBUG D#17 => &_140->D.112635
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG p => _102
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  # DEBUG p => D#235 + 8
  _355 = MEM[(const short unsigned int *)prephitmp_523 + 8B];
  # DEBUG t => _355
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _355
  _338 = (sizetype) _355;
  p_330 = _102 + _338;
  # DEBUG p => p_330
  if (_355 != 0)
    goto <bb 68>;
  else
    goto <bb 162>;

  <bb 68>:
  # DEBUG p => p_330
  _325 = MEM[(const long unsigned int *)p_330];
  # DEBUG t => _325
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.13_272 = p_330 + _325;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.13_272
  _248 = iftmp.13_272->length_;
  # DEBUG t => _248
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_248 != 0)
    goto <bb 69>;
  else
    goto <bb 74>;

  <bb 69>:
  # DEBUG this => _140
  # DEBUG D#17 => &_140->D.112635
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG p => _102
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _355
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.13_272
  # DEBUG i => 0
  # DEBUG this => iftmp.13_272
  # DEBUG t => _248
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.13_272
  _235 = &MEM[(void *)iftmp.13_272 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => 0
  _201 = _235;
  _186 = *_201;
  # DEBUG t => _186
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG tensor_index => _186
  tensor_index.61_175 = (unsigned int) _186;
  _174 = tensor_index.61_175 * 24;
  current_173 = _24 + _174;
  # DEBUG current => current_173
  # DEBUG this => _140
  # DEBUG D#23 => &_140->D.112635
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG p => _102
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  goto <bb 163>;

  <bb 70>:

  <bb 71>:
  # i_332 = PHI <0(70), i_359(73)>
  # DEBUG i => i_332
  # DEBUG this => _140
  # DEBUG D#17 => &_140->D.112635
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG p => _102
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  # DEBUG p => D#235 + 8
  _324 = MEM[(const short unsigned int *)prephitmp_523 + 8B];
  # DEBUG t => _324
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _324
  _326 = (sizetype) _324;
  p_327 = _102 + _326;
  # DEBUG p => p_327
  if (_324 != 0)
    goto <bb 72>;
  else
    goto <bb 162>;

  <bb 72>:
  # DEBUG p => p_327
  _328 = MEM[(const long unsigned int *)p_327];
  # DEBUG t => _328
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.13_329 = p_327 + _328;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.13_329
  _331 = iftmp.13_329->length_;
  # DEBUG t => _331
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_331 > i_332)
    goto <bb 149>;
  else
    goto <bb 74>;

  <bb 73>:
  # DEBUG p => p_352
  _353 = MEM[(const long unsigned int *)p_352];
  # DEBUG t => _353
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.31_354 = p_352 + _353;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.31_354
  _356 = iftmp.31_354->length_;
  # DEBUG t => _356
  # DEBUG t => NULL
  # DEBUG this => NULL
  _357 = _356 + 4294967295;
  _358 = (int) _357;
  current_733->last_used = _358;
  i_359 = i_332 + 1;
  # DEBUG i => i_359
  goto <bb 71>;

  <bb 74>:
  # DEBUG this => _140
  # DEBUG D#23 => &_140->D.112635
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG p => _102
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  if (prephitmp_378 > 10)
    goto <bb 75>;
  else
    goto <bb 164>;

  <bb 75>:
  # DEBUG p => D#235 + 10
  _360 = MEM[(const short unsigned int *)prephitmp_523 + 10B];
  # DEBUG t => _360
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _360
  _362 = (sizetype) _360;
  p_363 = _102 + _362;
  # DEBUG p => p_363
  if (_360 != 0)
    goto <bb 76>;
  else
    goto <bb 164>;

  <bb 76>:
  # DEBUG p => p_363
  _364 = MEM[(const long unsigned int *)p_363];
  # DEBUG t => _364
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.31_365 = p_363 + _364;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.31_365
  _367 = iftmp.31_365->length_;
  # DEBUG t => _367
  # DEBUG t => NULL
  # DEBUG this => NULL
  _368 = _367 + 4294967295;
  i_369 = (int) _368;
  # DEBUG i => i_369
  # DEBUG i => i_369
  if (i_369 < 0)
    goto <bb 150>;
  else
    goto <bb 77>;

  <bb 77>:

  <bb 78>:
  # i_746 = PHI <i_369(77), i_447(97)>
  # DEBUG i => i_746
  # DEBUG this => _140
  # DEBUG D#23 => &_140->D.112635
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG p => _102
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  # DEBUG p => D#235 + 10
  # DEBUG t => _360
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _360
  # DEBUG p => p_363
  # DEBUG p => p_363
  # DEBUG t => _364
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  i.62_383 = (long unsigned int) i_746;
  # DEBUG this => iftmp.31_365
  # DEBUG i => i.62_383
  # DEBUG this => iftmp.31_365
  # DEBUG t => _367
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_367 > i.62_383)
    goto <bb 80>;
  else
    goto <bb 79>;

  <bb 79>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 80>:
  # DEBUG this => iftmp.31_365
  _460 = &MEM[(void *)iftmp.31_365 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i.62_383
  _461 = i.62_383 * 4;
  p_462 = _460 + _461;
  # DEBUG p => p_462
  # DEBUG p => p_462
  _463 = MEM[(const long unsigned int *)p_462];
  # DEBUG t => _463
  # DEBUG t => NULL
  # DEBUG p => NULL
  _464 = p_462 + _463;
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG p => NULL
  # DEBUG op => NULL
  # DEBUG n => 0
  pretmp_100 = &MEM[(const struct Table *)_464].data_;
  pretmp_758 = MEM[(const long int *)_464];
  _710 = (sizetype) pretmp_758;
  _707 = -_710;
  _705 = pretmp_100 + _707;
  pretmp_704 = MEM[(const short unsigned int *)_705];
  _701 = (int) pretmp_704;
  if (_701 > 6)
    goto <bb 82>;
  else
    goto <bb 81>;

  <bb 81>:
  # DEBUG n => 0
  # DEBUG this => NULL
  # DEBUG this => D#18
  # DEBUG field => 6
  # DEBUG this => D#18
  # DEBUG field => 6
  # DEBUG this => D#18
  # DEBUG field => 6
  # DEBUG this => D#18
  # DEBUG D#233 => &MEM[(const struct Table *)_464].data_
  # DEBUG p => D#233
  # DEBUG D#232 => MEM[(const long int *)_464]
  # DEBUG t => D#232
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG D#231 => (sizetype) D#232
  # DEBUG D#230 => -D#231
  # DEBUG D#229 => D#233 + D#230
  # DEBUG this => NULL
  # DEBUG vtable => D#229
  # DEBUG p => D#229
  # DEBUG D#228 => MEM[(const short unsigned int *)D#229]
  # DEBUG t => D#228
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#228
  goto <bb 165>;

  <bb 82>:

  <bb 83>:
  # n_401 = PHI <0(82), n_419(89)>
  # DEBUG n => n_401
  # DEBUG this => NULL
  # DEBUG this => D#18
  # DEBUG field => 6
  # DEBUG this => D#18
  # DEBUG field => 6
  # DEBUG this => D#18
  # DEBUG field => 6
  # DEBUG this => D#18
  # DEBUG D#233 => &MEM[(const struct Table *)_464].data_
  # DEBUG p => D#233
  # DEBUG D#232 => MEM[(const long int *)_464]
  # DEBUG t => D#232
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG D#231 => (sizetype) D#232
  # DEBUG D#230 => -D#231
  # DEBUG D#229 => D#233 + D#230
  # DEBUG this => NULL
  # DEBUG vtable => D#229
  # DEBUG p => D#229
  # DEBUG D#228 => MEM[(const short unsigned int *)D#229]
  # DEBUG t => D#228
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#228
  # DEBUG p => D#229 + 6
  _393 = MEM[(const short unsigned int *)_705 + 6B];
  # DEBUG t => _393
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _393
  _395 = (sizetype) _393;
  p_396 = pretmp_100 + _395;
  # DEBUG p => p_396
  if (_393 != 0)
    goto <bb 84>;
  else
    goto <bb 165>;

  <bb 84>:
  # DEBUG p => p_396
  _397 = MEM[(const long unsigned int *)p_396];
  # DEBUG t => _397
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.13_398 = p_396 + _397;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.13_398
  _400 = iftmp.13_398->length_;
  # DEBUG t => _400
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_400 > n_401)
    goto <bb 87>;
  else
    goto <bb 85>;

  <bb 85>:
  if (_701 > 8)
    goto <bb 90>;
  else
    goto <bb 86>;

  <bb 86>:
  # DEBUG n => 0
  # DEBUG this => NULL
  # DEBUG this => D#19
  # DEBUG field => 8
  # DEBUG this => D#19
  # DEBUG field => 8
  # DEBUG this => D#19
  # DEBUG field => 8
  # DEBUG this => D#19
  # DEBUG p => D#233
  # DEBUG t => D#232
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#229
  # DEBUG p => D#229
  # DEBUG t => D#228
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#228
  goto <bb 166>;

  <bb 87>:
  # DEBUG this => NULL
  # DEBUG this => D#18
  # DEBUG field => 6
  # DEBUG this => D#18
  # DEBUG field => 6
  # DEBUG this => D#18
  # DEBUG field => 6
  # DEBUG this => D#18
  # DEBUG p => D#233
  # DEBUG t => D#232
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#229
  # DEBUG p => D#229
  # DEBUG t => D#228
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#228
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _393
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.13_398
  # DEBUG i => n_401
  # DEBUG this => iftmp.13_398
  # DEBUG t => _400
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.13_398
  _410 = &MEM[(void *)iftmp.13_398 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => n_401
  _411 = n_401 * 4;
  _412 = _410 + _411;
  _413 = *_412;
  # DEBUG t => _413
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG tensor_index => _413
  tensor_index.64_415 = (unsigned int) _413;
  _416 = tensor_index.64_415 * 24;
  current_417 = _24 + _416;
  # DEBUG current => current_417
  _418 = current_417->last_used;
  _299 = _418 < i_746;
  _266 = _418 == -1;
  _211 = _266 | _299;
  if (_211 != 0)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  current_417->last_used = i_746;

  <bb 89>:
  n_419 = n_401 + 1;
  # DEBUG n => n_419
  goto <bb 83>;

  <bb 90>:

  <bb 91>:
  # n_428 = PHI <0(90), n_446(95)>
  # DEBUG n => n_428
  # DEBUG this => NULL
  # DEBUG this => D#19
  # DEBUG field => 8
  # DEBUG this => D#19
  # DEBUG field => 8
  # DEBUG this => D#19
  # DEBUG field => 8
  # DEBUG this => D#19
  # DEBUG p => D#233
  # DEBUG t => D#232
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#229
  # DEBUG p => D#229
  # DEBUG t => D#228
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#228
  # DEBUG p => D#229 + 8
  _420 = MEM[(const short unsigned int *)_705 + 8B];
  # DEBUG t => _420
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _420
  _422 = (sizetype) _420;
  p_423 = pretmp_100 + _422;
  # DEBUG p => p_423
  if (_420 != 0)
    goto <bb 92>;
  else
    goto <bb 166>;

  <bb 92>:
  # DEBUG p => p_423
  _424 = MEM[(const long unsigned int *)p_423];
  # DEBUG t => _424
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.13_425 = p_423 + _424;
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.13_425
  _427 = iftmp.13_425->length_;
  # DEBUG t => _427
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_427 > n_428)
    goto <bb 93>;
  else
    goto <bb 96>;

  <bb 93>:
  # DEBUG this => NULL
  # DEBUG this => D#19
  # DEBUG field => 8
  # DEBUG this => D#19
  # DEBUG field => 8
  # DEBUG this => D#19
  # DEBUG field => 8
  # DEBUG this => D#19
  # DEBUG p => D#233
  # DEBUG t => D#232
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#229
  # DEBUG p => D#229
  # DEBUG t => D#228
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#228
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _420
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.13_425
  # DEBUG i => n_428
  # DEBUG this => iftmp.13_425
  # DEBUG t => _427
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.13_425
  _437 = &MEM[(void *)iftmp.13_425 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => n_428
  _438 = n_428 * 4;
  _439 = _437 + _438;
  _440 = *_439;
  # DEBUG t => _440
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG tensor_index => _440
  tensor_index.66_442 = (unsigned int) _440;
  _443 = tensor_index.66_442 * 24;
  current_444 = _24 + _443;
  # DEBUG current => current_444
  _445 = current_444->first_created;
  _156 = _445 > i_746;
  _233 = _445 == -1;
  _591 = _156 | _233;
  if (_591 != 0)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  current_444->first_created = i_746;

  <bb 95>:
  n_446 = n_428 + 1;
  # DEBUG n => n_446
  goto <bb 91>;

  <bb 96>:
  i_447 = i_746 + -1;
  # DEBUG i => i_447
  # DEBUG i => i_447
  if (i_447 < 0)
    goto <bb 150>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 78>;

  <bb 98>:

  <bb 99>:
  # i_745 = PHI <_116(98), i_480(100)>
  # DEBUG i => i_745
  _469 = i_745 - _116;
  _470 = _469 * 8;
  current_request_471 = _483 + _470;
  # DEBUG current_request => current_request_471
  _472 = _469 * 4;
  current_handle_473 = scratch_buffer_handles_40(D) + _472;
  # DEBUG current_handle => current_handle_473
  _475 = i_745 * 24;
  current_476 = _24 + _475;
  # DEBUG current => current_476
  _477 = &current_handle_473->data;
  current_476->output_ptr = _477;
  _478 = current_request_471->bytes;
  current_476->bytes = _478;
  _479 = current_request_471->node_idx;
  current_476->first_created = _479;
  current_476->last_used = _479;
  current_476->offline_offset = -1;
  current_476->needs_allocating = 1;
  i_480 = i_745 + 1;
  # DEBUG i => i_480
  # DEBUG i => i_480
  if (i_480 >= _555)
    goto <bb 101>;
  else
    goto <bb 100>;

  <bb 100>:
  goto <bb 99>;

  <bb 101>:

  <bb 102>:
  # DEBUG this => NULL
  # DEBUG scratch_buffer_requests => NULL
  # DEBUG scratch_buffer_handles => NULL
  # DEBUG current => NULL
  # DEBUG current_handle => NULL
  # DEBUG current_request => NULL
  # DEBUG i => NULL
  # DEBUG s => NULL
  _43 = this_16(D)->memory_allocator_;
  _45 = tflite::SimpleMemoryAllocator::GetAvailableMemory (_43, 16);
  # DEBUG remaining_arena_size => _45
  _46 = this_16(D)->memory_allocator_;
  _47 = _46->_vptr.SimpleMemoryAllocator;
  _48 = MEM[(int (*__vtbl_ptr_type) () *)_47 + 16B];
  _50 = OBJ_TYPE_REF(_48;(struct SimpleMemoryAllocator)_46->4) (_46, _45, 16);
  # DEBUG planner_arena => _50
  if (_50 == 0B)
    goto <bb 103>;
  else
    goto <bb 104>;

  <bb 103>:
  _51 = this_16(D)->error_reporter_;
  tflite::ErrorReporter::ReportError (_51, _51, "%s:%d %s was not true.", "../src/tensorflow_lite/src/tensorflow/lite/micro/micro_allocator.cpp", 966, "planner_arena != nullptr");
  goto <bb 145>;

  <bb 104>:
  remaining_arena_size.50_53 = (int) _45;
  tflite::GreedyMemoryPlanner::GreedyMemoryPlanner (&planner, _50, remaining_arena_size.50_53);
  _55 = this_16(D)->error_reporter_;
  # DEBUG error_reporter => _55
  # DEBUG planner => &planner
  # DEBUG allocation_info => _24
  # DEBUG allocation_info_size => allocation_info_count_18
  # DEBUG i => 0
  if (allocation_info_count_18 == 0)
    goto <bb 151>;
  else
    goto <bb 105>;

  <bb 105>:

  <bb 106>:
  # i_742 = PHI <0(105), i_501(108)>
  # DEBUG i => i_742
  _485 = i_742 * 24;
  current_486 = _24 + _485;
  # DEBUG current => current_486
  _487 = current_486->needs_allocating;
  if (_487 != 0)
    goto <bb 109>;
  else
    goto <bb 107>;

  <bb 107>:
  i_501 = i_742 + 1;
  # DEBUG i => i_501
  # DEBUG i => i_501
  if (allocation_info_count_18 <= i_501)
    goto <bb 151>;
  else
    goto <bb 108>;

  <bb 108>:
  goto <bb 106>;

  <bb 109>:
  _488 = current_486->bytes;
  _489 = tflite::AlignSizeUp (_488, 16);

  <bb 110>:
  # DEBUG aligned_bytes_required => _489
  _490 = current_486->offline_offset;
  if (_490 == -1)
    goto <bb 111>;
  else
    goto <bb 114>;

  <bb 111>:
  aligned_bytes_required.67_493 = (int) _489;
  _494 = current_486->first_created;
  _495 = current_486->last_used;
  _496 = tflite::GreedyMemoryPlanner::AddBuffer (&planner, _55, aligned_bytes_required.67_493, _494, _495);
  goto <bb 113>;

<L27>:
  goto <bb 147> (<L24>);

  <bb 113>:
  # DEBUG s => _496
  if (_496 != 0)
    goto <bb 143>;
  else
    goto <bb 107>;

  <bb 114>:
  aligned_bytes_required.67_497 = (int) _489;
  _498 = current_486->first_created;
  _499 = current_486->last_used;
  _500 = tflite::GreedyMemoryPlanner::AddBuffer (&planner, _55, aligned_bytes_required.67_497, _498, _499, _490);
  goto <bb 116>;

<L28>:
  goto <bb 147> (<L24>);

  <bb 116>:
  # DEBUG s => _500
  if (_500 != 0)
    goto <bb 117>;
  else
    goto <bb 107>;

  <bb 117>:
  # _708 = PHI <_500(116)>
  goto <bb 144>;

  <bb 118>:
  _62 = this_16(D)->memory_allocator_;
  _64 = tflite::SimpleMemoryAllocator::GetAvailableMemory (_62, 16);
  goto <bb 120>;

<L29>:
  goto <bb 147> (<L24>);

  <bb 120>:
  # DEBUG actual_available_arena_size => _64
  _66 = tflite::GreedyMemoryPlanner::GetMaximumMemorySize (&planner);
  goto <bb 122>;

<L30>:
  goto <bb 147> (<L24>);

  <bb 122>:
  if (_64 < _66)
    goto <bb 123>;
  else
    goto <bb 127>;

  <bb 123>:
  _67 = this_16(D)->error_reporter_;
  _69 = tflite::GreedyMemoryPlanner::GetMaximumMemorySize (&planner);
  goto <bb 125>;

<L31>:
  goto <bb 147> (<L24>);

  <bb 125>:
  tflite::ErrorReporter::Report (_67, "Arena size is too small for all buffers. Needed %u but only %u was available.", _69, _64);
  goto <bb 144>;

<L32>:
  goto <bb 147> (<L24>);

  <bb 127>:
  _71 = this_16(D)->error_reporter_;
  _72 = this_16(D)->memory_allocator_;
  _74 = tflite::SimpleMemoryAllocator::GetHeadBuffer (_72);
  goto <bb 129>;

<L33>:
  goto <bb 147> (<L24>);

  <bb 129>:
  # DEBUG i => 0
  # DEBUG planner_index => 0
  if (allocation_info_count_18 == 0)
    goto <bb 153>;
  else
    goto <bb 130>;

  <bb 130>:

  <bb 131>:
  # i_741 = PHI <0(130), i_516(138)>
  # planner_index_740 = PHI <0(130), planner_index_518(138)>
  # DEBUG i => i_741
  # DEBUG planner_index => planner_index_740
  _504 = i_741 * 24;
  current_505 = _24 + _504;
  # DEBUG current => current_505
  _506 = current_505->needs_allocating;
  if (_506 != 0)
    goto <bb 132>;
  else
    goto <bb 137>;

  <bb 132>:
  offset = -1;
  _510 = tflite::GreedyMemoryPlanner::GetOffsetForBuffer (&planner.D.179658, _71, planner_index_740, &offset);
  goto <bb 134>;

<L34>:
  goto <bb 147> (<L24>);

  <bb 134>:
  # DEBUG s => _510
  if (_510 != 0)
    goto <bb 135>;
  else
    goto <bb 136>;

  <bb 135>:
  # _706 = PHI <_510(134)>
  offset ={v} {CLOBBER};
  # DEBUG error_reporter => NULL
  # DEBUG planner => NULL
  # DEBUG starting_point => NULL
  # DEBUG allocation_info => NULL
  # DEBUG allocation_info_size => NULL
  # DEBUG planner_index => NULL
  # DEBUG i => NULL
  # DEBUG current => NULL
  # DEBUG offset => NULL
  # DEBUG s => NULL
  goto <bb 144>;

  <bb 136>:
  _511 = current_505->output_ptr;
  offset.68_512 = offset;
  offset.69_513 = (sizetype) offset.68_512;
  _514 = _74 + offset.69_513;
  *_511 = _514;
  planner_index_515 = planner_index_740 + 1;
  # DEBUG planner_index => planner_index_515
  offset ={v} {CLOBBER};

  <bb 137>:
  # planner_index_518 = PHI <planner_index_740(131), planner_index_515(136)>
  # DEBUG planner_index => planner_index_518
  i_516 = i_741 + 1;
  # DEBUG i => i_516
  # DEBUG i => i_516
  # DEBUG planner_index => planner_index_518
  if (allocation_info_count_18 <= i_516)
    goto <bb 153>;
  else
    goto <bb 138>;

  <bb 138>:
  goto <bb 131>;

  <bb 139>:
  # DEBUG head_usage => _78
  _79 = this_16(D)->max_head_buffer_usage_;
  if (_78 > _79)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  this_16(D)->max_head_buffer_usage_ = _78;

  <bb 141>:
  # prephitmp_337 = PHI <_79(139), _78(140)>
  _81 = this_16(D)->memory_allocator_;
  _82 = _81->_vptr.SimpleMemoryAllocator;
  _83 = MEM[(int (*__vtbl_ptr_type) () *)_82 + 8B];
  _86 = OBJ_TYPE_REF(_83;(struct SimpleMemoryAllocator)_81->2) (_81, prephitmp_337, 16);
  goto <bb 144>;

<L35>:
  goto <bb 147> (<L24>);

  <bb 143>:
  # _711 = PHI <_496(113)>

  <bb 144>:
  # _1 = PHI <_711(143), 1(125), _706(135), _708(117), _86(141)>
  tflite::GreedyMemoryPlanner::~GreedyMemoryPlanner (&planner);

  <bb 145>:
  # _2 = PHI <1(9), 1(34), _717(45), _1(144), 1(103)>
  builder ={v} {CLOBBER};
  # DEBUG D#201 => {CLOBBER}
  # DEBUG offline_planner_offsets => D#201
  planner ={v} {CLOBBER};
  return _2;

<L26>:

<L24>:
  tflite::GreedyMemoryPlanner::~GreedyMemoryPlanner (&planner);
  resx 2

  <bb 148>:
  # iftmp.42_715 = PHI <iftmp.42_205(25), 0B(24)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG buffers => iftmp.42_715
  # DEBUG this => NULL
  # DEBUG this => D#9
  # DEBUG field => 6
  # DEBUG defaultval => 0
  # DEBUG this => D#9
  # DEBUG field => 6
  # DEBUG this => D#9
  # DEBUG p => _178
  # DEBUG t => _179
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _182
  # DEBUG p => _182
  # DEBUG t => _183
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _183
  if (_184 > 6)
    goto <bb 27>;
  else
    goto <bb 29>;

  <bb 149>:
  # DEBUG this => _140
  # DEBUG D#17 => &_140->D.112635
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG field => 8
  # DEBUG this => D#17
  # DEBUG p => _102
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _324
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => iftmp.13_329
  # DEBUG i => i_332
  # DEBUG this => iftmp.13_329
  # DEBUG t => _331
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => iftmp.13_329
  _727 = &MEM[(void *)iftmp.13_329 + 4B];
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i_332
  _728 = i_332 * 4;
  _729 = _727 + _728;
  _730 = *_729;
  # DEBUG t => _730
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG tensor_index => _730
  tensor_index.61_731 = (unsigned int) _730;
  _732 = tensor_index.61_731 * 24;
  current_733 = _24 + _732;
  # DEBUG current => current_733
  # DEBUG this => _140
  # DEBUG D#23 => &_140->D.112635
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG field => 10
  # DEBUG this => D#23
  # DEBUG p => _102
  # DEBUG t => D#238
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => D#235
  # DEBUG p => D#235
  # DEBUG t => D#234
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => D#234
  # DEBUG p => D#235 + 10
  _349 = MEM[(const short unsigned int *)prephitmp_523 + 10B];
  # DEBUG t => _349
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _349
  _351 = (sizetype) _349;
  p_352 = _102 + _351;
  # DEBUG p => p_352
  if (_349 != 0)
    goto <bb 73>;
  else
    goto <bb 163>;

  <bb 150>:
  # DEBUG subgraph => NULL
  # DEBUG offline_offsets => NULL
  # DEBUG eval_tensors => NULL
  # DEBUG i => NULL
  # DEBUG current => NULL
  # DEBUG i => NULL
  # DEBUG current => NULL
  # DEBUG i => NULL
  # DEBUG current => NULL
  # DEBUG i => NULL
  # DEBUG n => NULL
  # DEBUG current => NULL
  # DEBUG n => NULL
  # DEBUG current => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG s => NULL
  # DEBUG subgraph => NULL
  # DEBUG offline_offsets => NULL
  # DEBUG eval_tensors => NULL
  # DEBUG i => NULL
  # DEBUG current => NULL
  # DEBUG i => NULL
  # DEBUG current => NULL
  # DEBUG i => NULL
  # DEBUG current => NULL
  # DEBUG i => NULL
  # DEBUG n => NULL
  # DEBUG current => NULL
  # DEBUG n => NULL
  # DEBUG current => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  # DEBUG s => NULL
  # DEBUG this => this_16(D)
  _481 = this_16(D)->memory_allocator_;
  _482 = tflite::SimpleMemoryAllocator::GetHeadBuffer (_481);
  _483 = tflite::AlignPointerUp (_482, 4);
  # DEBUG this => NULL
  # DEBUG scratch_buffer_requests => NULL
  # DEBUG this => &builder
  # DEBUG scratch_buffer_requests => NULL
  # DEBUG scratch_buffer_handles => scratch_buffer_handles_40(D)
  # DEBUG i => _116
  # DEBUG i => _116
  _555 = _29 + _116;
  if (_116 >= _555)
    goto <bb 102>;
  else
    goto <bb 98>;

  <bb 151>:
  # DEBUG error_reporter => NULL
  # DEBUG planner => NULL
  # DEBUG allocation_info => NULL
  # DEBUG allocation_info_size => NULL
  # DEBUG i => NULL
  # DEBUG current => NULL
  # DEBUG s => NULL
  # DEBUG error_reporter => NULL
  # DEBUG planner => NULL
  # DEBUG allocation_info => NULL
  # DEBUG allocation_info_size => NULL
  # DEBUG i => NULL
  # DEBUG current => NULL
  # DEBUG s => NULL
  _58 = this_16(D)->memory_allocator_;
  _59 = _58->_vptr.SimpleMemoryAllocator;
  _60 = MEM[(int (*__vtbl_ptr_type) () *)_59 + 20B];
  OBJ_TYPE_REF(_60;(struct SimpleMemoryAllocator)_58->5) (_58);
  goto <bb 118>;

<L36>:
  goto <bb 147> (<L24>);

  <bb 153>:
  # DEBUG error_reporter => NULL
  # DEBUG planner => NULL
  # DEBUG starting_point => NULL
  # DEBUG allocation_info => NULL
  # DEBUG allocation_info_size => NULL
  # DEBUG planner_index => NULL
  # DEBUG i => NULL
  # DEBUG current => NULL
  # DEBUG offset => NULL
  # DEBUG s => NULL
  # DEBUG error_reporter => NULL
  # DEBUG planner => NULL
  # DEBUG starting_point => NULL
  # DEBUG allocation_info => NULL
  # DEBUG allocation_info_size => NULL
  # DEBUG planner_index => NULL
  # DEBUG i => NULL
  # DEBUG current => NULL
  # DEBUG offset => NULL
  # DEBUG s => NULL
  _78 = tflite::GreedyMemoryPlanner::GetMaximumMemorySize (&planner);
  goto <bb 139>;

<L37>:
  goto <bb 147> (<L24>);

  <bb 155>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  # DEBUG i => (long unsigned int) subgraph_idx_10(D)
  # DEBUG this => 0B
  _370 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 156>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _554 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 157>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _154 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 158>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  # DEBUG this => 0B
  # DEBUG i => 0
  # DEBUG this => 0B
  # DEBUG i => 0
  # DEBUG this => 0B
  _592 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 159>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG array => 0B
  # DEBUG this => 0B
  # DEBUG this => 0B
  # DEBUG D#28 => &MEM[(void *)0B + 4B]
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG metadata_buffer => D#28
  nbr_tensors_681 ={v} MEM[(const uint32_t *)0B + 12B];
  __builtin_trap ();

  <bb 160>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  # DEBUG i => i_748
  # DEBUG this => 0B
  _562 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 161>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _521 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 162>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _675 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 163>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _671 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 164>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _702 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 165>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _712 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 166>:
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG this => 0B
  _679 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}


