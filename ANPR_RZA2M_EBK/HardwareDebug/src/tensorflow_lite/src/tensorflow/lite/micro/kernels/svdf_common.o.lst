   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"svdf_common.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.global	__aeabi_idiv
  17              		.section	.text._ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTen
  18              		.align	2
  19              		.global	_ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S
  20              		.syntax unified
  21              		.arm
  22              		.fpu neon
  24              	_ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16
  25              		.fnstart
  26              	.LFB4177:
  27              		.file 1 "../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp"
   1:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
   3:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** you may not use this file except in compliance with the License.
   5:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** You may obtain a copy of the License at
   6:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
   7:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
   9:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** See the License for the specific language governing permissions and
  13:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** limitations under the License.
  14:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** ==============================================================================*/
  15:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  16:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include <math.h>
  17:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  18:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include "tensorflow/lite/c/builtin_op_data.h"
  19:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include "tensorflow/lite/c/common.h"
  20:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include "tensorflow/lite/kernels/internal/common.h"
  21:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  22:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
  23:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include "tensorflow/lite/kernels/kernel_util.h"
  24:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include "tensorflow/lite/kernels/op_macros.h"
  25:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include "tensorflow/lite/micro/kernels/activation_utils.h"
  26:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include "tensorflow/lite/micro/kernels/kernel_util.h"
  27:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include "tensorflow/lite/micro/kernels/svdf.h"
  28:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** #include "tensorflow/lite/micro/micro_utils.h"
  29:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  30:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** namespace tflite {
  31:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  32:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** /**
  33:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****  * This version of SVDF is specific to TFLite Micro. It contains the following
  34:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****  * differences between the TFLite version:
  35:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****  *
  36:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****  * 1.) Scratch tensor allocation - scratch tensors must be known ahead of time
  37:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****  * for the Micro interpreter.
  38:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****  * 2.) Output dimensions - the TFLite version determines output size and runtime
  39:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****  * and resizes the output tensor. Micro runtime does not support tensor
  40:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****  * resizing.
  41:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****  */
  42:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  43:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** const int kSvdfInputTensor = 0;
  44:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** const int kSvdfWeightsFeatureTensor = 1;
  45:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** const int kSvdfWeightsTimeTensor = 2;
  46:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** const int kSvdfBiasTensor = 3;
  47:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** const int kSvdfInputActivationStateTensor =
  48:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     4;  // This is a variable tensor, and will be modified by this op.
  49:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** const int kSvdfOutputTensor = 0;
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  51:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** void EvalIntegerSvdfReference(TfLiteContext* context, TfLiteNode* node,
  52:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                               const TfLiteEvalTensor* input_tensor,
  53:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                               const TfLiteEvalTensor* weights_feature_tensor,
  54:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                               const TfLiteEvalTensor* weights_time_tensor,
  55:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                               const TfLiteEvalTensor* bias_tensor,
  56:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                               const TfLiteSVDFParams* params,
  57:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                               TfLiteEvalTensor* activation_state_tensor,
  58:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                               TfLiteEvalTensor* output_tensor,
  59:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                               const OpData& data) {
  28              		.loc 1 59 0
  29              		.cfi_startproc
  30              		@ args = 24, pretend = 0, frame = 96
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
  35              		.cfi_def_cfa_offset 36
  36              		.cfi_offset 4, -36
  37              		.cfi_offset 5, -32
  38              		.cfi_offset 6, -28
  39              		.cfi_offset 7, -24
  40              		.cfi_offset 8, -20
  41              		.cfi_offset 9, -16
  42              		.cfi_offset 10, -12
  43              		.cfi_offset 11, -8
  44              		.cfi_offset 14, -4
  45              		.pad #100
  46 0004 64D04DE2 		sub	sp, sp, #100
  47              		.cfi_def_cfa_offset 136
  48              		.loc 1 59 0
  49 0008 90C09DE5 		ldr	ip, [sp, #144]
  50 000c 0350A0E1 		mov	r5, r3
  51 0010 0280A0E1 		mov	r8, r2
  52 0014 0040A0E1 		mov	r4, r0
  60:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_rank = params->rank;
  61:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_batch = input_tensor->dims->data[0];
  62:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_input = input_tensor->dims->data[1];
  63:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_filter = weights_feature_tensor->dims->data[0];
  53              		.loc 1 63 0
  54 0018 041093E5 		ldr	r1, [r3, #4]
  55              	.LVL1:
  61:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_input = input_tensor->dims->data[1];
  56              		.loc 1 61 0
  57 001c 043092E5 		ldr	r3, [r2, #4]
  58              	.LVL2:
  60:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_rank = params->rank;
  59              		.loc 1 60 0
  60 0020 00209CE5 		ldr	r2, [ip]
  61              	.LVL3:
  62              		.loc 1 63 0
  63 0024 041091E5 		ldr	r1, [r1, #4]
  62:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_filter = weights_feature_tensor->dims->data[0];
  64              		.loc 1 62 0
  65 0028 087093E5 		ldr	r7, [r3, #8]
  60:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_rank = params->rank;
  66              		.loc 1 60 0
  67 002c 58208DE5 		str	r2, [sp, #88]
  68              		.loc 1 63 0
  69 0030 0100A0E1 		mov	r0, r1
  70              	.LVL4:
  71 0034 04108DE5 		str	r1, [sp, #4]
  64:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_unit = n_filter / n_rank;
  72              		.loc 1 64 0
  73 0038 0210A0E1 		mov	r1, r2
  61:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_input = input_tensor->dims->data[1];
  74              		.loc 1 61 0
  75 003c 042093E5 		ldr	r2, [r3, #4]
  76              	.LVL5:
  77 0040 40208DE5 		str	r2, [sp, #64]
  78              	.LVL6:
  79              		.loc 1 64 0
  80 0044 FEFFFFEB 		bl	__aeabi_idiv
  81              	.LVL7:
  65:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_memory = weights_time_tensor->dims->data[1];
  82              		.loc 1 65 0
  83 0048 88309DE5 		ldr	r3, [sp, #136]
  66:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  67:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TFLITE_DCHECK(context != nullptr);
  84              		.loc 1 67 0
  85 004c 000054E3 		cmp	r4, #0
  64:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_memory = weights_time_tensor->dims->data[1];
  86              		.loc 1 64 0
  87 0050 44008DE5 		str	r0, [sp, #68]
  88              	.LVL8:
  59:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int n_rank = params->rank;
  89              		.loc 1 59 0
  90 0054 94909DE5 		ldr	r9, [sp, #148]
  65:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  91              		.loc 1 65 0
  92 0058 043093E5 		ldr	r3, [r3, #4]
  93 005c 086093E5 		ldr	r6, [r3, #8]
  94              	.LVL9:
  95              		.loc 1 67 0
  96 0060 6804000A 		beq	.L3
  68:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TFLITE_DCHECK(context->GetScratchBuffer != nullptr);
  97              		.loc 1 68 0
  98 0064 443094E5 		ldr	r3, [r4, #68]
  99 0068 000053E3 		cmp	r3, #0
 100 006c 6504000A 		beq	.L3
  69:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  70:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   int32_t* scratch_tensor = static_cast<int32_t*>(
  71:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       context->GetScratchBuffer(context, data.scratch_tensor_index));
 101              		.loc 1 71 0
 102 0070 9C209DE5 		ldr	r2, [sp, #156]
 103 0074 0400A0E1 		mov	r0, r4
 104              	.LVL10:
 105 0078 101092E5 		ldr	r1, [r2, #16]
 106 007c 33FF2FE1 		blx	r3
 107              	.LVL11:
  72:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   int32_t* scratch_output_tensor = static_cast<int32_t*>(
  73:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       context->GetScratchBuffer(context, data.scratch_output_tensor_index));
 108              		.loc 1 73 0
 109 0080 9C209DE5 		ldr	r2, [sp, #156]
 110 0084 443094E5 		ldr	r3, [r4, #68]
  71:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   int32_t* scratch_output_tensor = static_cast<int32_t*>(
 111              		.loc 1 71 0
 112 0088 54008DE5 		str	r0, [sp, #84]
 113              	.LVL12:
 114              		.loc 1 73 0
 115 008c 0400A0E1 		mov	r0, r4
 116              	.LVL13:
 117 0090 141092E5 		ldr	r1, [r2, #20]
 118 0094 33FF2FE1 		blx	r3
 119              	.LVL14:
 120              	.LBB295:
  74:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  75:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Shift states.
  76:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   int16_t* const state_ptr =
  77:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       tflite::micro::GetTensorData<int16_t>(activation_state_tensor);
  78:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  79:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Left shift the activation_state.
  80:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   {
  81:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     int16_t* new_state_start = state_ptr;
  82:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const int16_t* old_state_start = state_ptr + 1;
  83:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const int16_t* old_state_end = state_ptr + n_batch * n_filter * n_memory;
 121              		.loc 1 83 0
 122 0098 04209DE5 		ldr	r2, [sp, #4]
 123              	.LBE295:
 124              	.LBB296:
 125              	.LBB297:
 126              		.file 2 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #define TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #include <cstdint>
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/types.h"
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace tflite {
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** namespace micro {
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns a mutable tensor for a given input index. is_variable must be checked
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // during prepare when the full TfLiteTensor is available.
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetMutableEvalInput(const TfLiteContext* context,
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              const TfLiteNode* node,
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****                                              int index) {
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given input index in a node.
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** inline const TfLiteEvalTensor* GetEvalInput(const TfLiteContext* context,
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****                                             const TfLiteNode* node, int index) {
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return GetMutableEvalInput(context, node, index);
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given output index in a node.
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetEvalOutput(const TfLiteContext* context,
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****                                        const TfLiteNode* node, int index) {
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns data for a TfLiteEvalTensor struct.
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** T* GetTensorData(TfLiteEvalTensor* tensor) {
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
 127              		.loc 2 56 0
 128 009c 000059E3 		cmp	r9, #0
 129              	.LBE297:
 130              	.LBE296:
 131              	.LBB300:
 132              		.loc 1 83 0
 133 00a0 40109DE5 		ldr	r1, [sp, #64]
 134              	.LBE300:
 135              	.LBB301:
 136              	.LBB298:
 137              		.loc 2 56 0
 138 00a4 0230A003 		moveq	r3, #2
 139 00a8 00309915 		ldrne	r3, [r9]
 140 00ac 48908D05 		streq	r9, [sp, #72]
 141              	.LBE298:
 142              	.LBE301:
  73:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 143              		.loc 1 73 0
 144 00b0 4C008DE5 		str	r0, [sp, #76]
 145              	.LVL15:
 146              	.LBB302:
 147              		.loc 1 83 0
 148 00b4 920104E0 		mul	r4, r2, r1
 149              	.LVL16:
 150              	.LBE302:
 151              	.LBB303:
 152              	.LBB299:
 153              		.loc 2 56 0
 154 00b8 48308D15 		strne	r3, [sp, #72]
 155              	.LBE299:
 156              	.LBE303:
 157              	.LBB304:
 158              		.loc 1 83 0
 159 00bc 48209DE5 		ldr	r2, [sp, #72]
 160 00c0 02308312 		addne	r3, r3, #2
 161              	.LVL17:
 162 00c4 960404E0 		mul	r4, r6, r4
 163 00c8 844082E0 		add	r4, r2, r4, lsl #1
 164              	.LVL18:
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 165              		.loc 1 84 0
 166 00cc 030054E1 		cmp	r4, r3
 167 00d0 4700000A 		beq	.L13
 168 00d4 02B083E2 		add	fp, r3, #2
 169 00d8 02A0A0E1 		mov	r10, r2
 170 00dc 10C083E2 		add	ip, r3, #16
 171 00e0 102082E2 		add	r2, r2, #16
 172              	.LVL19:
 173 00e4 0B1044E0 		sub	r1, r4, fp
 174 00e8 020053E1 		cmp	r3, r2
 175 00ec 0C005A31 		cmpcc	r10, ip
 176 00f0 A110A0E1 		lsr	r1, r1, #1
 177 00f4 03008AE1 		orr	r0, r10, r3
 178              	.LVL20:
 179 00f8 0120A023 		movcs	r2, #1
 180 00fc 0020A033 		movcc	r2, #0
 181 0100 0F0010E3 		tst	r0, #15
 182 0104 0020A013 		movne	r2, #0
 183 0108 01200202 		andeq	r2, r2, #1
 184 010c 019081E2 		add	r9, r1, #1
 185 0110 0AE0A0E1 		mov	lr, r10
 186 0114 0A0059E3 		cmp	r9, #10
 187 0118 0020A093 		movls	r2, #0
 188 011c 01200282 		andhi	r2, r2, #1
 189 0120 000052E3 		cmp	r2, #0
 190 0124 DE03000A 		beq	.L8
 191 0128 072041E2 		sub	r2, r1, #7
 192 012c 03E0A0E1 		mov	lr, r3
 193 0130 A221A0E1 		lsr	r2, r2, #3
 194 0134 0AC0A0E1 		mov	ip, r10
 195 0138 0000A0E3 		mov	r0, #0
 196 013c 012082E2 		add	r2, r2, #1
 197 0140 8211A0E1 		lsl	r1, r2, #3
 198              	.LVL21:
 199              	.L10:
 200 0144 010080E2 		add	r0, r0, #1
  85:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *new_state_start++ = *old_state_start++;
 201              		.loc 1 85 0
 202 0148 DF0A6EF4 		vld1.64	{d16-d17}, [lr:64]
 203 014c 000052E1 		cmp	r2, r0
 204 0150 10E08EE2 		add	lr, lr, #16
 205 0154 DF0A4CF4 		vst1.64	{d16-d17}, [ip:64]
 206 0158 10C08CE2 		add	ip, ip, #16
 207 015c F8FFFF8A 		bhi	.L10
 208 0160 48E09DE5 		ldr	lr, [sp, #72]
 209 0164 090051E1 		cmp	r1, r9
 210 0168 8110A0E1 		lsl	r1, r1, #1
 211 016c 01C08EE0 		add	ip, lr, r1
 212 0170 012083E0 		add	r2, r3, r1
 213 0174 1E00000A 		beq	.L13
 214              	.LVL22:
 215 0178 F13093E1 		ldrsh	r3, [r3, r1]
 216 017c 020082E2 		add	r0, r2, #2
 217              	.LVL23:
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 218              		.loc 1 84 0
 219 0180 000054E1 		cmp	r4, r0
 220              		.loc 1 85 0
 221 0184 B1308EE1 		strh	r3, [lr, r1]	@ movhi
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 222              		.loc 1 84 0
 223 0188 1900000A 		beq	.L13
 224              	.LVL24:
 225              		.loc 1 85 0
 226 018c F230D2E1 		ldrsh	r3, [r2, #2]
 227 0190 041082E2 		add	r1, r2, #4
 228              	.LVL25:
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 229              		.loc 1 84 0
 230 0194 010054E1 		cmp	r4, r1
 231              		.loc 1 85 0
 232 0198 B230CCE1 		strh	r3, [ip, #2]	@ movhi
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 233              		.loc 1 84 0
 234 019c 1400000A 		beq	.L13
 235              	.LVL26:
 236              		.loc 1 85 0
 237 01a0 F430D2E1 		ldrsh	r3, [r2, #4]
 238 01a4 061082E2 		add	r1, r2, #6
 239              	.LVL27:
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 240              		.loc 1 84 0
 241 01a8 010054E1 		cmp	r4, r1
 242              		.loc 1 85 0
 243 01ac B430CCE1 		strh	r3, [ip, #4]	@ movhi
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 244              		.loc 1 84 0
 245 01b0 0F00000A 		beq	.L13
 246              	.LVL28:
 247              		.loc 1 85 0
 248 01b4 F630D2E1 		ldrsh	r3, [r2, #6]
 249 01b8 081082E2 		add	r1, r2, #8
 250              	.LVL29:
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 251              		.loc 1 84 0
 252 01bc 010054E1 		cmp	r4, r1
 253              		.loc 1 85 0
 254 01c0 B630CCE1 		strh	r3, [ip, #6]	@ movhi
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 255              		.loc 1 84 0
 256 01c4 0A00000A 		beq	.L13
 257              	.LVL30:
 258              		.loc 1 85 0
 259 01c8 F830D2E1 		ldrsh	r3, [r2, #8]
 260 01cc 0A1082E2 		add	r1, r2, #10
 261              	.LVL31:
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 262              		.loc 1 84 0
 263 01d0 010054E1 		cmp	r4, r1
 264              		.loc 1 85 0
 265 01d4 B830CCE1 		strh	r3, [ip, #8]	@ movhi
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 266              		.loc 1 84 0
 267 01d8 0500000A 		beq	.L13
 268              	.LVL32:
 269              		.loc 1 85 0
 270 01dc FA30D2E1 		ldrsh	r3, [r2, #10]
 271 01e0 0C1082E2 		add	r1, r2, #12
 272              	.LVL33:
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 273              		.loc 1 84 0
 274 01e4 010054E1 		cmp	r4, r1
 275              		.loc 1 85 0
 276 01e8 BA30CCE1 		strh	r3, [ip, #10]	@ movhi
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 277              		.loc 1 84 0
 278              	.LVL34:
 279              		.loc 1 85 0
 280 01ec FC30D211 		ldrshne	r3, [r2, #12]
 281 01f0 BC30CC11 		strhne	r3, [ip, #12]	@ movhi
 282              	.LVL35:
 283              	.L13:
 284              	.LBE304:
 285              	.LBB305:
 286              	.LBB306:
  86:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
  87:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
  88:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  89:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Note: no need to clear the latest activation, matmul is not accumulative.
  90:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
  91:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Feature matmul.
  92:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   {
  93:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     int16_t* state =
  94:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         tflite::micro::GetTensorData<int16_t>(activation_state_tensor);
  95:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const int8_t* input = tflite::micro::GetTensorData<int8_t>(input_tensor);
  96:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const int8_t* weight_feature =
  97:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         tflite::micro::GetTensorData<int8_t>(weights_feature_tensor);
  98:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const int32_t output_max = std::numeric_limits<int16_t>::max();
  99:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const int32_t output_min = std::numeric_limits<int16_t>::min();
 100:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     int16_t* result_in_batch = state + (n_memory - 1);
 101:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int b = 0; b < n_batch; b++) {
 287              		.loc 1 101 0
 288 01f4 40309DE5 		ldr	r3, [sp, #64]
 289              	.LBE306:
 100:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int b = 0; b < n_batch; b++) {
 290              		.loc 1 100 0
 291 01f8 061146E2 		sub	r1, r6, #-2147483647
 292 01fc 8110A0E1 		lsl	r1, r1, #1
 293              	.LBB372:
 294              	.LBB373:
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** 
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns const data for a TfLiteEvalTensor struct.
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** const T* GetTensorData(const TfLiteEvalTensor* tensor) {
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(tensor != nullptr);
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 295              		.loc 2 63 0
 296 0200 002098E5 		ldr	r2, [r8]
 297              	.LVL36:
 298              	.LBE373:
 299              	.LBE372:
 300              	.LBB374:
 301              		.loc 1 101 0
 302 0204 000053E3 		cmp	r3, #0
 303              	.LBE374:
 304              	.LBB375:
 305              	.LBB376:
 306              		.loc 2 63 0
 307 0208 003095E5 		ldr	r3, [r5]
 308 020c 50308DE5 		str	r3, [sp, #80]
 309              	.LVL37:
 310              	.LBE376:
 311              	.LBE375:
 100:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int b = 0; b < n_batch; b++) {
 312              		.loc 1 100 0
 313 0210 48309DE5 		ldr	r3, [sp, #72]
 314              	.LVL38:
 315 0214 013083E0 		add	r3, r3, r1
 316 0218 08308DE5 		str	r3, [sp, #8]
 317              	.LVL39:
 318              	.LBB377:
 319              		.loc 1 101 0
 320 021c F10300DA 		ble	.L159
 321 0220 103047E2 		sub	r3, r7, #16
 322              	.LVL40:
 323              	.LBB307:
 324              	.LBB308:
 325              	.LBB309:
 102:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       const int8_t* matrix_ptr = weight_feature;
 103:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int r = 0; r < n_filter; r++) {
 104:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         int32_t dot_prod = 0;
 105:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         const int8_t* vector_in_batch = input + b * n_input;
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         for (int c = 0; c < n_input; c++) {
 107:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****               *matrix_ptr++ * (*vector_in_batch++ - data.input_zero_point);
 109:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 110:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         dot_prod = MultiplyByQuantizedMultiplier(
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****             dot_prod, data.effective_scale_1_a, data.effective_scale_1_b);
 112:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         dot_prod = std::min(std::max(output_min, dot_prod), output_max);
 113:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         // This assumes state is symmetrically quantized. Otherwise last bit of
 114:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         // state should be initialized to its zero point and accumulate the
 115:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         // dot_prod.
 116:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         // Equivalent as the following:
 117:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         //     result_in_batch = zero point, which happens to be zero.
 118:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         //     result_in_batch += dot_prod_56.
 119:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *result_in_batch = dot_prod;
 120:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         result_in_batch += n_memory;
 326              		.loc 1 120 0 discriminator 2
 327 0224 021081E2 		add	r1, r1, #2
 328 0228 2332A0E1 		lsr	r3, r3, #4
 329 022c 02E0A0E1 		mov	lr, r2
 330 0230 14108DE5 		str	r1, [sp, #20]
 119:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         result_in_batch += n_memory;
 331              		.loc 1 119 0 discriminator 2
 332 0234 0209A0E3 		mov	r0, #32768
 333 0238 022043E2 		sub	r2, r3, #2
 334              	.LVL41:
 335 023c 013083E2 		add	r3, r3, #1
 336 0240 0310A0E1 		mov	r1, r3
 337 0244 3C308DE5 		str	r3, [sp, #60]
 338              	.LBB310:
 339              	.LBB311:
 340              	.LBB312:
 341              	.LBB313:
 342              		.file 3 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Copyright 2015 The Gemmlowp Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // fixedpoint.h: fixed-point arithmetic, with basic operations and
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // a few math functions such as tanh.
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #ifndef GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <algorithm>
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cassert>
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cmath>
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cstdint>
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <limits>
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include "../internal/detect_platform.h"
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** namespace gemmlowp {
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Part 1: Low-level integer-arithmetic primitives.
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The implementations here are generic implementations valid for
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // scalar types (e.g. std::int32_t). Architecture-specific SIMD types
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // (e.g. NEON int32x4_t) may be supported by providing
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // specializations for them in separate files.
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The purpose of these primitives is two-fold:
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be used to implement higher-level fixed-point
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    abstractions, namely the FixedPoint class and its arithmetic
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    operators.
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be directly used to implement some more involved
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    fixed-point computations, e.g. the fixed-point implementation
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    of math functions such as tanh.
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Some compile-time traits around raw types to handle SIMD aspects:
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // number of lanes, underlying scalar type.
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits {};
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int32_t> {
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int32_t ScalarRawType;
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int16_t> {
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int16_t ScalarRawType;
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns a SIMD value duplicating a scalar value across all lanes.
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tRawType Dup(typename FixedPointRawTypeTraits<tRawType>::ScalarRawType x) {
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return x;
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise AND
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitAnd(tIntegerType a, tIntegerType b) {
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a & b;
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise OR
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitOr(tIntegerType a, tIntegerType b) {
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a | b;
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise XOR
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitXor(tIntegerType a, tIntegerType b) {
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a ^ b;
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise NOT
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitNot(tIntegerType a) {
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return ~a;
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer addition. Not saturating. Overflow is undefined behavior.
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Add(tIntegerType a, tIntegerType b) {
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a + b;
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer subtraction. Not saturating. Overflow is undefined behavior.
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Mul(tIntegerType a, tIntegerType b) {
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a * b;
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Sub(tIntegerType a, tIntegerType b) {
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a - b;
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer unary negative. Not saturating. Overflow is undefined behavior.
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Neg(tIntegerType a) {
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return -a;
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic left-shift, equivalent to multiplying with a power of two.
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Negative values are OK. In case of overflow, no Undefined
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Behavior, but the results are implementation-defined (in practice,
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // they currently are saturated, but we make no commitment to that). The idea
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // is that the caller will want to implement the overflowing cases with
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // saturation with compare-and-mask, so we don't care about the results
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // in the overflow case, we just want to avoid undefined behavior.
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerType may be int32 or any narrower signed type.
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftLeft(tIntegerType a, int offset) {
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_a = static_cast<std::int64_t>(a);
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_shifted = wide_a * (1 << offset);
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto max = std::numeric_limits<tIntegerType>::max();
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return wide_shifted < min
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              ? min
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic right-shift. Not rounding.
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Relying on implementation-defined, but in-practice-consistent,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // C++ compiler behavior.
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftRight(tIntegerType a, int offset) {
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a >> offset;
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Each bit of the result is set to the corresponding bit of either then_val or
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // else_val depending on whether the corresponding bit of if_mask is set.
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to the VBSL instruction in ARM NEON.
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType SelectUsingMask(tIntegerType if_mask, tIntegerType then_val,
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                              tIntegerType else_val) {
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return BitXor(BitAnd(if_mask, then_val), BitAnd(BitNot(if_mask), else_val));
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is non-zero.
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNonZero(tIntegerType a) {
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr tIntegerType zero = 0;
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a ? BitNot(zero) : zero;
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is zero.
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfZero(tIntegerType a) {
 165:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(!a);
 166:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 167:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 168:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 169:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are equal.
 170:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 171:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfEqual(tIntegerType a, tIntegerType b) {
 172:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a == b);
 173:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 174:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 175:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 176:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are not equal.
 177:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 178:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNotEqual(tIntegerType a, tIntegerType b) {
 179:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a != b);
 180:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 181:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 182:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 183:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a > b.
 184:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 185:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThan(tIntegerType a, tIntegerType b) {
 186:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a > b);
 187:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 188:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 189:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 190:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a >= b.
 191:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 192:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThanOrEqual(tIntegerType a, tIntegerType b) {
 193:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a >= b);
 194:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 195:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 196:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 197:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a < b.
 198:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 199:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThan(tIntegerType a, tIntegerType b) {
 200:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a < b);
 201:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 202:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 204:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a <= b.
 205:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 206:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThanOrEqual(tIntegerType a, tIntegerType b) {
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a <= b);
 208:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 209:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 210:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if all of the input scalars are nonzero.
 211:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 212:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 213:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 214:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** bool All(tIntegerType a) {
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 217:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 218:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if any of the input scalars are nonzero.
 219:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 220:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 221:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 222:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** bool Any(tIntegerType a) {
 223:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 224:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 225:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 226:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns (a+b)/2, rounded to the nearest integer.
 227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to VRHADD in the ARM NEON instruction set.
 228:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 229:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType RoundingHalfSum(IntegerType a, IntegerType b) {
 230:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 231:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 233:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 234:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 235:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 236:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t RoundingHalfSum(std::int32_t a, std::int32_t b) {
 237:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a64 = a;
 238:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b64 = b;
 239:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sum = a64 + b64;
 240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sign = sum >= 0 ? 1 : -1;
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 242:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 243:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 244:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 245:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t RoundingHalfSum(std::int16_t a, std::int16_t b) {
 246:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 247:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 248:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 249:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sign = sum >= 0 ? 1 : -1;
 250:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>((sum + sign) / 2);
 251:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 253:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 254:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingAdd(IntegerType a, IntegerType b) {
 255:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 256:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 257:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 258:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 259:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 260:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // So far this is only needed for int16.
 261:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 262:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingAdd(std::int16_t a, std::int16_t b) {
 263:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 265:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 266:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 267:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       std::min(static_cast<std::int32_t>(32767),
 268:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                std::max(static_cast<std::int32_t>(-32768), sum)));
 269:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 270:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 271:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns a+b, saturating if the integers are 16bit or narrower,
 272:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // otherwise just a plain addition.
 273:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, bool Is16Bit>
 274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl {
 275:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) { return Add(a, b); }
 276:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 277:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 278:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl<IntegerType, true> {
 279:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) {
 280:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return SaturatingAdd(a, b);
 281:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 282:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 283:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 284:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType AddSaturatingIf16Bit(IntegerType a, IntegerType b) {
 285:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   using ScalarType =
 286:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       typename FixedPointRawTypeTraits<IntegerType>::ScalarRawType;
 287:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return AddSaturatingIf16BitImpl<IntegerType, sizeof(ScalarType) == 2>::Run(a,
 288:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                                              b);
 289:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 291:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns the integer that represents the product of two fixed-point
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // numbers, interpreting all integers as fixed-point values in the
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1), rounding to the nearest value, and saturating
 294:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // -1 * -1 to the maximum value (since 1 is not in the half-open
 295:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1)).
 296:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 297:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // [The explanation below specializes to std::int32_t for example purpose.]
 298:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 299:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The mapping between IntegerType and the interval [-1, 1) is unique and
 300:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // implied by IntegerType, which is assumed to be signed. For example,
 301:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // for IntegerType==std::int32_t, the mapping is
 302:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   real_value = integer_value / 2^31.
 303:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // So in this case, and leaving aside rounding and saturating, this
 304:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // function computes ((a / 2^31) * (b / 2^31)) * 2^31, which simplifies to
 305:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^31.
 306:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 307:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The 'doubling' part in the name of this function comes from the fact that
 308:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // this operation is very close to a "multiply-high" operation, keeping only
 309:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // the top half bits, except that that would be effectively computing
 310:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^32,
 311:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // so here we are computing 2x that, since
 312:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   1/2^31 = 2 * 1/2^32.
 313:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The idea is to use all of the available 32 bits in the destination int32
 314:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // value.
 315:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 316:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // [End of the explanation specializing to int32.]
 317:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 318:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This is equivalent to the VQRDMULH instruction in ARM NEON.
 319:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 320:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingRoundingDoublingHighMul(IntegerType a, IntegerType b) {
 321:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 322:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 323:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 324:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 325:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 326:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function implements the same computation as the ARMv7 NEON VQRDMULH
 327:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // instruction.
 328:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 329:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t SaturatingRoundingDoublingHighMul(std::int32_t a,
 330:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int32_t b) {
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int32_t>::min();
 332:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 336:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 339:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 340:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 341:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 342:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingRoundingDoublingHighMul(std::int16_t a,
 343:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int16_t b) {
 344:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int16_t>::min();
 345:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 346:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 347:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 348:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 349:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 350:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 351:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 352:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 353:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 354:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Correctly-rounded-to-nearest division by a power-of-two.
 355:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Also known as a rounding arithmetic right shift.
 356:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 357:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline IntegerType RoundingDivideByPOT(IntegerType x, int exponent) {
 358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent >= 0);
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 343              		.loc 3 360 0 discriminator 2
 344 0248 9E2BDFED 		vldr.64	d18, .L169	@ int
 345 024c 0130C2E3 		bic	r3, r2, #1
 346 0250 023083E2 		add	r3, r3, #2
 347 0254 34208DE5 		str	r2, [sp, #52]
 348 0258 24308DE5 		str	r3, [sp, #36]
 349 025c 0122A0E1 		lsl	r2, r1, #4
 350 0260 013047E2 		sub	r3, r7, #1
 351 0264 5C608DE5 		str	r6, [sp, #92]
 352              	.LBE313:
 353              	.LBE312:
 354              	.LBE311:
 355              	.LBE310:
 119:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         result_in_batch += n_memory;
 356              		.loc 1 119 0 discriminator 2
 357 0268 FF0F4FE3 		movt	r0, 65535
 358 026c 28308DE5 		str	r3, [sp, #40]
 359              		.loc 1 120 0 discriminator 2
 360 0270 0030A0E3 		mov	r3, #0
 361 0274 2C208DE5 		str	r2, [sp, #44]
 119:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         result_in_batch += n_memory;
 362              		.loc 1 119 0 discriminator 2
 363 0278 18008DE5 		str	r0, [sp, #24]
 364              		.loc 1 120 0 discriminator 2
 365 027c 30308DE5 		str	r3, [sp, #48]
 366              	.LVL42:
 367              	.L35:
 368              	.LBE309:
 103:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         int32_t dot_prod = 0;
 369              		.loc 1 103 0 discriminator 2
 370 0280 04309DE5 		ldr	r3, [sp, #4]
 371 0284 000053E3 		cmp	r3, #0
 372 0288 250100DA 		ble	.L18
 373 028c 9C309DE5 		ldr	r3, [sp, #156]
 374              	.LBB366:
 375              	.LBB359:
 376              	.LBB354:
 377              	.LBB338:
 378              	.LBB330:
 379              	.LBB314:
 380              	.LBB315:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 381              		.loc 3 141 0
 382 0290 0040A0E3 		mov	r4, #0
 383 0294 2C209DE5 		ldr	r2, [sp, #44]
 384 0298 07608EE0 		add	r6, lr, r7
 385 029c 50C09DE5 		ldr	ip, [sp, #80]
 386 02a0 083093E5 		ldr	r3, [r3, #8]
 387 02a4 02208EE0 		add	r2, lr, r2
 388 02a8 38208DE5 		str	r2, [sp, #56]
 389 02ac 040053E1 		cmp	r3, r4
 390              	.LBE315:
 391              	.LBE314:
 392              	.LBE330:
 393              	.LBE338:
 394              		.file 4 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #ifndef ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #ifdef GEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #define ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #endif
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #endif
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #include <functional>
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #include "third_party/gemmlowp/fixedpoint/fixedpoint.h"
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/optimized/neon_check.h"
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/types.h"
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** namespace tflite {
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** constexpr int kReverseShift = -1;
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline void GetActivationMinMax(FusedActivationFunctionType ac,
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_min,
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_max) {
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   switch (ac) {
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kNone:
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = std::numeric_limits<float>::lowest();
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       break;
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu:
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       break;
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu1:
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = -1.f;
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 1.f;
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       break;
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu6:
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 6.f;
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       break;
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   }
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** template <typename T>
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline T ActivationFunctionWithMinMax(T x, T output_activation_min,
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                       T output_activation_max) {
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using std::max;
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using std::min;
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return min(max(x, output_activation_min), output_activation_max);
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** // Legacy function, left for compatibility only.
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** template <FusedActivationFunctionType Ac>
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** float ActivationFunction(float x) {
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   float output_activation_min, output_activation_max;
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   GetActivationMinMax(Ac, &output_activation_min, &output_activation_max);
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return ActivationFunctionWithMinMax(x, output_activation_min,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                       output_activation_max);
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                          const float* bias_data, int array_size,
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                          float* array_data) {
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   // Note: see b/132215220: in May 2019 we thought it would be OK to replace
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   // this with the Eigen one-liner:
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   //   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max).
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   // This turned out to severely regress performance: +4ms (i.e. 8%) on
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   // MobileNet v2 / 1.0 / 224. So we keep custom NEON code for now.
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   TFLITE_DCHECK_EQ((array_size % bias_size), 0);
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #ifdef USE_NEON
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   float* array_ptr = array_data;
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   float* array_end_ptr = array_ptr + array_size;
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_min_vec = vdupq_n_f32(clamp_min);
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_max_vec = vdupq_n_f32(clamp_max);
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   for (; array_ptr != array_end_ptr; array_ptr += bias_size) {
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     int i = 0;
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 16; i += 16) {
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto b0 = vld1q_f32(bias_data + i);
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto b1 = vld1q_f32(bias_data + i + 4);
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto b2 = vld1q_f32(bias_data + i + 8);
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto b3 = vld1q_f32(bias_data + i + 12);
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto a0 = vld1q_f32(array_ptr + i);
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto a1 = vld1q_f32(array_ptr + i + 4);
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto a2 = vld1q_f32(array_ptr + i + 8);
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto a3 = vld1q_f32(array_ptr + i + 12);
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto x0 = vaddq_f32(a0, b0);
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto x1 = vaddq_f32(a1, b1);
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto x2 = vaddq_f32(a2, b2);
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto x3 = vaddq_f32(a3, b3);
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x0 = vmaxq_f32(clamp_min_vec, x0);
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x1 = vmaxq_f32(clamp_min_vec, x1);
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x2 = vmaxq_f32(clamp_min_vec, x2);
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x3 = vmaxq_f32(clamp_min_vec, x3);
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x0 = vminq_f32(clamp_max_vec, x0);
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x1 = vminq_f32(clamp_max_vec, x1);
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x2 = vminq_f32(clamp_max_vec, x2);
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x3 = vminq_f32(clamp_max_vec, x3);
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x0);
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 4, x1);
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 8, x2);
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 12, x3);
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     }
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 4; i += 4) {
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto b = vld1q_f32(bias_data + i);
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto a = vld1q_f32(array_ptr + i);
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       auto x = vaddq_f32(a, b);
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x = vmaxq_f32(clamp_min_vec, x);
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       x = vminq_f32(clamp_max_vec, x);
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x);
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     }
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     for (; i < bias_size; i++) {
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       array_ptr[i] = ActivationFunctionWithMinMax(array_ptr[i] + bias_data[i],
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                                   clamp_min, clamp_max);
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     }
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   }
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #else  // not NEON
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   for (int array_offset = 0; array_offset < array_size;
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****        array_offset += bias_size) {
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     for (int i = 0; i < bias_size; i++) {
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       array_data[array_offset + i] = ActivationFunctionWithMinMax(
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****           array_data[array_offset + i] + bias_data[i], clamp_min, clamp_max);
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     }
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   }
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** #endif
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierSmallerThanOneExp(
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****       SaturatingRoundingDoublingHighMul(x, quantized_multiplier), -left_shift);
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierGreaterThanOne(
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return SaturatingRoundingDoublingHighMul(x * (1 << left_shift),
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                            quantized_multiplier);
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** }
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** 
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplier(int32_t x,
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                              int32_t quantized_multiplier,
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****                                              int shift) {
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 395              		.loc 4 162 0
 396 02b0 005063E2 		rsb	r5, r3, #0
 397 02b4 0450A0C1 		movgt	r5, r4
 398 02b8 9C209DE5 		ldr	r2, [sp, #156]
 399 02bc C33FC3E1 		bic	r3, r3, r3, asr #31
 400              	.LBB339:
 401              	.LBB331:
 402              		.loc 3 360 0
 403 02c0 905B01EE 		vmov.32	d17[0], r5
 404 02c4 002092E5 		ldr	r2, [r2]
 405 02c8 A20471F3 		vshl.u64	d16, d18, d17
 406 02cc 20308DE5 		str	r3, [sp, #32]
 407 02d0 1C208DE5 		str	r2, [sp, #28]
 408 02d4 302B53EC 		vmov	r2, r3, d16	@ int
 409 02d8 013042E2 		sub	r3, r2, #1
 410 02dc 0C308DE5 		str	r3, [sp, #12]
 411              	.LBB317:
 412              	.LBB316:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 413              		.loc 3 141 0
 414 02e0 C330A0E1 		asr	r3, r3, #1
 415 02e4 10308DE5 		str	r3, [sp, #16]
 416              	.LVL43:
 417              	.L34:
 418              	.LBE316:
 419              	.LBE317:
 420              	.LBE331:
 421              	.LBE339:
 422              	.LBE354:
 423              	.LBE359:
 424              	.LBB360:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 425              		.loc 1 106 0
 426 02e8 000057E3 		cmp	r7, #0
 427 02ec 580200DA 		ble	.L97
 428 02f0 9C309DE5 		ldr	r3, [sp, #156]
 429 02f4 0E108CE1 		orr	r1, ip, lr
 430 02f8 0F0057E3 		cmp	r7, #15
 431 02fc 5110E3E7 		ubfx	r1, r1, #0, #4
 432 0300 182093E5 		ldr	r2, [r3, #24]
 433 0304 0030A093 		movls	r3, #0
 434 0308 0130A083 		movhi	r3, #1
 435 030c 000051E3 		cmp	r1, #0
 436 0310 0030A013 		movne	r3, #0
 437 0314 000053E3 		cmp	r3, #0
 438 0318 4402000A 		beq	.L20
 439 031c 28309DE5 		ldr	r3, [sp, #40]
 440 0320 0E0053E3 		cmp	r3, #14
 441 0324 3C02009A 		bls	.L98
 442 0328 34309DE5 		ldr	r3, [sp, #52]
 443 032c 5000C0F2 		vmov.i32	q8, #0  @ v4si
 444 0330 902BA4EE 		vdup.32	q10, r2
 445 0334 040073E3 		cmn	r3, #4
 446 0338 4A02008A 		bhi	.L99
 447 033c 24A09DE5 		ldr	r10, [sp, #36]
 448 0340 20308CE2 		add	r3, ip, #32
 449 0344 20108EE2 		add	r1, lr, #32
 450 0348 0080A0E3 		mov	r8, #0
 451              	.LVL44:
 452              	.L23:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 453              		.loc 1 108 0 discriminator 2
 454 034c 088B51ED 		vldr	d24, [r1, #-32]
 455 0350 069B51ED 		vldr	d25, [r1, #-24]
 456 0354 028088E2 		add	r8, r8, #2
 457 0358 0A0058E1 		cmp	r8, r10
 458 035c 50F0D3F5 		pld	[r3, #80]
 459 0360 38CAC8F2 		vmovl.s8 q14, d24
 460 0364 0300A0E1 		mov	r0, r3
 461 0368 08AB53ED 		vldr	d26, [r3, #-32]
 462 036c 06BB53ED 		vldr	d27, [r3, #-24]
 463 0370 0190A0E1 		mov	r9, r1
 464 0374 398AC8F2 		vmovl.s8 q12, d25
 465 0378 201081E2 		add	r1, r1, #32
 466 037c 3A6AC8F2 		vmovl.s8 q11, d26
 467 0380 203083E2 		add	r3, r3, #32
 468 0384 3CEAD0F2 		vmovl.s16 q15, d28
 469 0388 3DCAD0F2 		vmovl.s16 q14, d29
 470 038c 366A90F2 		vmovl.s16 q3, d22
 471 0390 E4E86EF3 		vsub.i32	q15, q15, q10
 472 0394 E4C86CF3 		vsub.i32	q14, q14, q10
 473 0398 376AD0F2 		vmovl.s16 q11, d23
 474 039c C6096EF2 		vmla.i32	q8, q15, q3
 475 03a0 0C2B11ED 		vldr	d2, [r1, #-48]
 476 03a4 0A3B11ED 		vldr	d3, [r1, #-40]
 477 03a8 3BAAC8F2 		vmovl.s8 q13, d27
 478 03ac 384A90F2 		vmovl.s16 q2, d24
 479 03b0 398AD0F2 		vmovl.s16 q12, d25
 480 03b4 3A0A90F2 		vmovl.s16 q0, d26
 481 03b8 644824F3 		vsub.i32	q2, q2, q10
 482 03bc E6096CF2 		vmla.i32	q8, q14, q11
 483 03c0 0C6B13ED 		vldr	d6, [r3, #-48]
 484 03c4 0A7B13ED 		vldr	d7, [r3, #-40]
 485 03c8 E48868F3 		vsub.i32	q12, q12, q10
 486 03cc 3BAAD0F2 		vmovl.s16 q13, d27
 487 03d0 12CAC8F2 		vmovl.s8 q14, d2
 488 03d4 16EAC8F2 		vmovl.s8 q15, d6
 489 03d8 136AC8F2 		vmovl.s8 q11, d3
 490 03dc 400964F2 		vmla.i32	q8, q2, q0
 491 03e0 3C2A90F2 		vmovl.s16 q1, d28
 492 03e4 3E4A90F2 		vmovl.s16 q2, d30
 493 03e8 3DCAD0F2 		vmovl.s16 q14, d29
 494 03ec 642822F3 		vsub.i32	q1, q1, q10
 495 03f0 3FEAD0F2 		vmovl.s16 q15, d31
 496 03f4 EA0968F2 		vmla.i32	q8, q12, q13
 497 03f8 E4C86CF3 		vsub.i32	q14, q14, q10
 498 03fc 178AC8F2 		vmovl.s8 q12, d7
 499 0400 36AAD0F2 		vmovl.s16 q13, d22
 500 0404 376AD0F2 		vmovl.s16 q11, d23
 501 0408 386A90F2 		vmovl.s16 q3, d24
 502 040c 440962F2 		vmla.i32	q8, q1, q2
 503 0410 E4A86AF3 		vsub.i32	q13, q13, q10
 504 0414 E46866F3 		vsub.i32	q11, q11, q10
 505 0418 398AD0F2 		vmovl.s16 q12, d25
 506 041c EE096CF2 		vmla.i32	q8, q14, q15
 507 0420 C6096AF2 		vmla.i32	q8, q13, q3
 508 0424 E80966F2 		vmla.i32	q8, q11, q12
 509 0428 C7FFFF1A 		bne	.L23
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 510              		.loc 1 108 0 is_stmt 0
 511 042c 24309DE5 		ldr	r3, [sp, #36]
 512 0430 3C109DE5 		ldr	r1, [sp, #60]
 513              	.L28:
 514 0434 DF6A69F4 		vld1.64	{d22-d23}, [r9:64]
 515 0438 013083E2 		add	r3, r3, #1
 516 043c 030051E1 		cmp	r1, r3
 517 0440 109089E2 		add	r9, r9, #16
 518 0444 36AAC8F2 		vmovl.s8 q13, d22
 519 0448 100080E2 		add	r0, r0, #16
 520 044c 048B50ED 		vldr	d24, [r0, #-16]
 521 0450 029B50ED 		vldr	d25, [r0, #-8]
 522 0454 376AC8F2 		vmovl.s8 q11, d23
 523 0458 38CAC8F2 		vmovl.s8 q14, d24
 524 045c 3AEAD0F2 		vmovl.s16 q15, d26
 525 0460 3BAAD0F2 		vmovl.s16 q13, d27
 526 0464 3C6A90F2 		vmovl.s16 q3, d28
 527 0468 E4E86EF3 		vsub.i32	q15, q15, q10
 528 046c E4A86AF3 		vsub.i32	q13, q13, q10
 529 0470 3DCAD0F2 		vmovl.s16 q14, d29
 530 0474 C6096EF2 		vmla.i32	q8, q15, q3
 531 0478 398AC8F2 		vmovl.s8 q12, d25
 532 047c 36EAD0F2 		vmovl.s16 q15, d22
 533 0480 376AD0F2 		vmovl.s16 q11, d23
 534 0484 386A90F2 		vmovl.s16 q3, d24
 535 0488 E4E86EF3 		vsub.i32	q15, q15, q10
 536 048c EC096AF2 		vmla.i32	q8, q13, q14
 537 0490 E46866F3 		vsub.i32	q11, q11, q10
 538 0494 398AD0F2 		vmovl.s16 q12, d25
 539 0498 C6096EF2 		vmla.i32	q8, q15, q3
 540 049c E80966F2 		vmla.i32	q8, q11, q12
 541 04a0 E3FFFF8A 		bhi	.L28
 542 04a4 A10860F2 		vadd.i32	d16, d16, d17
 543 04a8 2C109DE5 		ldr	r1, [sp, #44]
 544 04ac B00B60F2 		vpadd.i32	d16, d16, d16
 545 04b0 070051E1 		cmp	r1, r7
 546 04b4 01008CE0 		add	r0, ip, r1
 547 04b8 903B10EE 		vmov.32	r3, d16[0]
 548 04bc 6800000A 		beq	.L29
 549 04c0 38809DE5 		ldr	r8, [sp, #56]
 550 04c4 010000EA 		b	.L170
 551              	.L171:
 552              		.align	3
 553              	.L169:
 554 04c8 01000000 		.word	1
 555 04cc 00000000 		.word	0
 556              	.L170:
 557              	.L21:
 558              	.LVL45:
 559 04d0 D090D8E1 		ldrsb	r9, [r8]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 560              		.loc 1 106 0 is_stmt 1
 561 04d4 01A081E2 		add	r10, r1, #1
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 562              		.loc 1 108 0
 563 04d8 D0B0D0E1 		ldrsb	fp, [r0]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 564              		.loc 1 106 0
 565 04dc 0A0057E1 		cmp	r7, r10
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 566              		.loc 1 108 0
 567 04e0 029049E0 		sub	r9, r9, r2
 568 04e4 9B3923E0 		mla	r3, fp, r9, r3
 569              	.LVL46:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 570              		.loc 1 106 0
 571 04e8 5D0000DA 		ble	.L29
 572              	.LVL47:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 573              		.loc 1 108 0
 574 04ec D190D8E1 		ldrsb	r9, [r8, #1]
 575 04f0 D1A0D0E1 		ldrsb	r10, [r0, #1]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 576              		.loc 1 106 0
 577 04f4 02B081E2 		add	fp, r1, #2
 578 04f8 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 579              		.loc 1 108 0
 580 04fc 029049E0 		sub	r9, r9, r2
 581 0500 9A3923E0 		mla	r3, r10, r9, r3
 582              	.LVL48:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 583              		.loc 1 106 0
 584 0504 560000DA 		ble	.L29
 585              	.LVL49:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 586              		.loc 1 108 0
 587 0508 D290D8E1 		ldrsb	r9, [r8, #2]
 588 050c D2A0D0E1 		ldrsb	r10, [r0, #2]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 589              		.loc 1 106 0
 590 0510 03B081E2 		add	fp, r1, #3
 591 0514 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 592              		.loc 1 108 0
 593 0518 029049E0 		sub	r9, r9, r2
 594 051c 9A3923E0 		mla	r3, r10, r9, r3
 595              	.LVL50:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 596              		.loc 1 106 0
 597 0520 4F0000DA 		ble	.L29
 598              	.LVL51:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 599              		.loc 1 108 0
 600 0524 D390D8E1 		ldrsb	r9, [r8, #3]
 601 0528 D3A0D0E1 		ldrsb	r10, [r0, #3]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 602              		.loc 1 106 0
 603 052c 04B081E2 		add	fp, r1, #4
 604 0530 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 605              		.loc 1 108 0
 606 0534 029049E0 		sub	r9, r9, r2
 607 0538 9A3923E0 		mla	r3, r10, r9, r3
 608              	.LVL52:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 609              		.loc 1 106 0
 610 053c 480000DA 		ble	.L29
 611              	.LVL53:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 612              		.loc 1 108 0
 613 0540 D490D8E1 		ldrsb	r9, [r8, #4]
 614 0544 D4A0D0E1 		ldrsb	r10, [r0, #4]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 615              		.loc 1 106 0
 616 0548 05B081E2 		add	fp, r1, #5
 617 054c 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 618              		.loc 1 108 0
 619 0550 029049E0 		sub	r9, r9, r2
 620 0554 9A3923E0 		mla	r3, r10, r9, r3
 621              	.LVL54:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 622              		.loc 1 106 0
 623 0558 410000DA 		ble	.L29
 624              	.LVL55:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 625              		.loc 1 108 0
 626 055c D590D8E1 		ldrsb	r9, [r8, #5]
 627 0560 D5A0D0E1 		ldrsb	r10, [r0, #5]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 628              		.loc 1 106 0
 629 0564 06B081E2 		add	fp, r1, #6
 630 0568 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 631              		.loc 1 108 0
 632 056c 029049E0 		sub	r9, r9, r2
 633 0570 9A3923E0 		mla	r3, r10, r9, r3
 634              	.LVL56:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 635              		.loc 1 106 0
 636 0574 3A0000DA 		ble	.L29
 637              	.LVL57:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 638              		.loc 1 108 0
 639 0578 D690D8E1 		ldrsb	r9, [r8, #6]
 640 057c D6A0D0E1 		ldrsb	r10, [r0, #6]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 641              		.loc 1 106 0
 642 0580 07B081E2 		add	fp, r1, #7
 643 0584 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 644              		.loc 1 108 0
 645 0588 029049E0 		sub	r9, r9, r2
 646 058c 9A3923E0 		mla	r3, r10, r9, r3
 647              	.LVL58:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 648              		.loc 1 106 0
 649 0590 330000DA 		ble	.L29
 650              	.LVL59:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 651              		.loc 1 108 0
 652 0594 D790D8E1 		ldrsb	r9, [r8, #7]
 653 0598 D7A0D0E1 		ldrsb	r10, [r0, #7]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 654              		.loc 1 106 0
 655 059c 08B081E2 		add	fp, r1, #8
 656 05a0 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 657              		.loc 1 108 0
 658 05a4 029049E0 		sub	r9, r9, r2
 659 05a8 9A3923E0 		mla	r3, r10, r9, r3
 660              	.LVL60:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 661              		.loc 1 106 0
 662 05ac 2C0000DA 		ble	.L29
 663              	.LVL61:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 664              		.loc 1 108 0
 665 05b0 D890D8E1 		ldrsb	r9, [r8, #8]
 666 05b4 D8A0D0E1 		ldrsb	r10, [r0, #8]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 667              		.loc 1 106 0
 668 05b8 09B081E2 		add	fp, r1, #9
 669 05bc 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 670              		.loc 1 108 0
 671 05c0 029049E0 		sub	r9, r9, r2
 672 05c4 9A3923E0 		mla	r3, r10, r9, r3
 673              	.LVL62:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 674              		.loc 1 106 0
 675 05c8 250000DA 		ble	.L29
 676              	.LVL63:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 677              		.loc 1 108 0
 678 05cc D990D8E1 		ldrsb	r9, [r8, #9]
 679 05d0 D9A0D0E1 		ldrsb	r10, [r0, #9]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 680              		.loc 1 106 0
 681 05d4 0AB081E2 		add	fp, r1, #10
 682 05d8 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 683              		.loc 1 108 0
 684 05dc 029049E0 		sub	r9, r9, r2
 685 05e0 9A3923E0 		mla	r3, r10, r9, r3
 686              	.LVL64:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 687              		.loc 1 106 0
 688 05e4 1E0000DA 		ble	.L29
 689              	.LVL65:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 690              		.loc 1 108 0
 691 05e8 DA90D8E1 		ldrsb	r9, [r8, #10]
 692 05ec DAA0D0E1 		ldrsb	r10, [r0, #10]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 693              		.loc 1 106 0
 694 05f0 0BB081E2 		add	fp, r1, #11
 695 05f4 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 696              		.loc 1 108 0
 697 05f8 029049E0 		sub	r9, r9, r2
 698 05fc 9A3923E0 		mla	r3, r10, r9, r3
 699              	.LVL66:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 700              		.loc 1 106 0
 701 0600 170000DA 		ble	.L29
 702              	.LVL67:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 703              		.loc 1 108 0
 704 0604 DB90D8E1 		ldrsb	r9, [r8, #11]
 705 0608 DBA0D0E1 		ldrsb	r10, [r0, #11]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 706              		.loc 1 106 0
 707 060c 0CB081E2 		add	fp, r1, #12
 708 0610 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 709              		.loc 1 108 0
 710 0614 029049E0 		sub	r9, r9, r2
 711 0618 9A3923E0 		mla	r3, r10, r9, r3
 712              	.LVL68:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 713              		.loc 1 106 0
 714 061c 100000DA 		ble	.L29
 715              	.LVL69:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 716              		.loc 1 108 0
 717 0620 DC90D8E1 		ldrsb	r9, [r8, #12]
 718 0624 DCA0D0E1 		ldrsb	r10, [r0, #12]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 719              		.loc 1 106 0
 720 0628 0DB081E2 		add	fp, r1, #13
 721 062c 0B0057E1 		cmp	r7, fp
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 722              		.loc 1 108 0
 723 0630 029049E0 		sub	r9, r9, r2
 724 0634 9A3923E0 		mla	r3, r10, r9, r3
 725              	.LVL70:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 726              		.loc 1 106 0
 727 0638 090000DA 		ble	.L29
 728              	.LVL71:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 729              		.loc 1 108 0
 730 063c DD90D8E1 		ldrsb	r9, [r8, #13]
 731 0640 DDA0D0E1 		ldrsb	r10, [r0, #13]
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 732              		.loc 1 106 0
 733 0644 0E1081E2 		add	r1, r1, #14
 734 0648 010057E1 		cmp	r7, r1
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 735              		.loc 1 108 0
 736 064c 029049E0 		sub	r9, r9, r2
 737 0650 9A3923E0 		mla	r3, r10, r9, r3
 738              	.LVL72:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 739              		.loc 1 106 0
 740              	.LVL73:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 741              		.loc 1 108 0
 742 0654 DE10D8C1 		ldrsbgt	r1, [r8, #14]
 743 0658 DE00D0C1 		ldrsbgt	r0, [r0, #14]
 744              	.LVL74:
 745 065c 022041C0 		subgt	r2, r1, r2
 746 0660 903223C0 		mlagt	r3, r0, r2, r3
 747              	.LVL75:
 748              	.L29:
 749 0664 20209DE5 		ldr	r2, [sp, #32]
 750 0668 1C109DE5 		ldr	r1, [sp, #28]
 751 066c 07C08CE0 		add	ip, ip, r7
 752 0670 1382A0E1 		lsl	r8, r3, r2
 753 0674 9128C3E0 		smull	r2, r3, r1, r8
 754              	.LVL76:
 755 0678 020158E3 		cmp	r8, #-2147483648
 756 067c 08005101 		cmpeq	r1, r8
 757 0680 0180A003 		moveq	r8, #1
 758 0684 0080A013 		movne	r8, #0
 759              	.LBE360:
 760              	.LBB361:
 761              	.LBB355:
 762              	.LBB340:
 763              	.LBB341:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 764              		.loc 3 335 0
 765 0688 000052E3 		cmp	r2, #0
 766 068c 0010D3E2 		sbcs	r1, r3, #0
 767 0690 0101A0A3 		movge	r0, #1073741824
 768 0694 0010A0A3 		movge	r1, #0
 769 0698 5C0100BA 		blt	.L160
 770              	.L31:
 771              	.LVL77:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 772              		.loc 3 338 0
 773 069c 000058E3 		cmp	r8, #0
 774 06a0 4F01001A 		bne	.L161
 775              	.LVL78:
 776              	.L19:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 777              		.loc 3 337 0
 778 06a4 028090E0 		adds	r8, r0, r2
 779 06a8 0390A1E0 		adc	r9, r1, r3
 780 06ac 0030A0E3 		mov	r3, #0
 781 06b0 C92FA0E1 		asr	r2, r9, #31
 782              	.LVL79:
 783 06b4 0221C2E3 		bic	r2, r2, #-2147483648
 784 06b8 080092E0 		adds	r0, r2, r8
 785 06bc 0910A3E0 		adc	r1, r3, r9
 786 06c0 A02FA0E1 		lsr	r2, r0, #31
 787              	.LBE341:
 788              	.LBE340:
 789              	.LBB345:
 790              	.LBB332:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 791              		.loc 3 359 0
 792 06c4 1F0055E3 		cmp	r5, #31
 793              	.LBE332:
 794              	.LBE345:
 795              	.LBB346:
 796              	.LBB342:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 797              		.loc 3 337 0
 798 06c8 812082E1 		orr	r2, r2, r1, lsl #1
 799              	.LVL80:
 800              	.LBE342:
 801              	.LBE346:
 802              	.LBB347:
 803              	.LBB333:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 804              		.loc 3 359 0
 805 06cc 470100CA 		bgt	.L82
 806              	.L33:
 807              	.LVL81:
 808              	.LBB318:
 809              	.LBB319:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 810              		.loc 3 95 0
 811 06d0 10309DE5 		ldr	r3, [sp, #16]
 812              	.LBE319:
 813              	.LBE318:
 814              	.LBE333:
 815              	.LBE347:
 816              	.LBE355:
 817              	.LBE361:
 818              	.LBE366:
 103:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         int32_t dot_prod = 0;
 819              		.loc 1 103 0
 820 06d4 014084E2 		add	r4, r4, #1
 821              	.LVL82:
 822              	.LBB367:
 823              	.LBB362:
 824              	.LBB356:
 825              	.LBB348:
 826              	.LBB334:
 827              	.LBB321:
 828              	.LBB322:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 829              		.loc 3 71 0
 830 06d8 0C109DE5 		ldr	r1, [sp, #12]
 831              	.LBE322:
 832              	.LBE321:
 833              	.LBB324:
 834              	.LBB320:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 835              		.loc 3 95 0
 836 06dc A28F83E0 		add	r8, r3, r2, lsr #31
 837              	.LBE320:
 838              	.LBE324:
 839              	.LBB325:
 840              	.LBB326:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 841              		.loc 3 141 0
 842 06e0 5235A0E1 		asr	r3, r2, r5
 843              	.LBE326:
 844              	.LBE325:
 845              	.LBB327:
 846              	.LBB323:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 847              		.loc 3 71 0
 848 06e4 012002E0 		and	r2, r2, r1
 849              	.LVL83:
 850              	.LBE323:
 851              	.LBE327:
 852              	.LBE334:
 853              	.LBE348:
 854              	.LBE356:
 855              	.LBE362:
 119:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         result_in_batch += n_memory;
 856              		.loc 1 119 0
 857 06e8 FF1F07E3 		movw	r1, #32767
 858              	.LBB363:
 859              	.LBB357:
 860              	.LBB349:
 861              	.LBB335:
 862              	.LBB328:
 863              	.LBB329:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 864              		.loc 3 95 0
 865 06ec 080052E1 		cmp	r2, r8
 866 06f0 013083C2 		addgt	r3, r3, #1
 867              	.LBE329:
 868              	.LBE328:
 869              	.LBE335:
 870              	.LBE349:
 871              	.LBE357:
 872              	.LBE363:
 119:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         result_in_batch += n_memory;
 873              		.loc 1 119 0
 874 06f4 18209DE5 		ldr	r2, [sp, #24]
 875 06f8 010053E1 		cmp	r3, r1
 876 06fc 0130A0A1 		movge	r3, r1
 877 0700 14109DE5 		ldr	r1, [sp, #20]
 878 0704 020053E1 		cmp	r3, r2
 879 0708 0230A0B1 		movlt	r3, r2
 880              	.LBE367:
 103:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         int32_t dot_prod = 0;
 881              		.loc 1 103 0
 882 070c 04209DE5 		ldr	r2, [sp, #4]
 883 0710 040052E1 		cmp	r2, r4
 884              	.LBB368:
 119:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         result_in_batch += n_memory;
 885              		.loc 1 119 0
 886 0714 08209DE5 		ldr	r2, [sp, #8]
 887 0718 B13082E0 		strh	r3, [r2], r1	@ movhi
 888 071c 08208DE5 		str	r2, [sp, #8]
 889              	.LVL84:
 890              	.LBE368:
 103:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         int32_t dot_prod = 0;
 891              		.loc 1 103 0
 892 0720 F0FEFF1A 		bne	.L34
 893              	.LVL85:
 894              	.L18:
 895              	.LBE308:
 896              	.LBE307:
 101:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       const int8_t* matrix_ptr = weight_feature;
 897              		.loc 1 101 0 discriminator 2
 898 0724 30309DE5 		ldr	r3, [sp, #48]
 899 0728 07E08EE0 		add	lr, lr, r7
 900 072c 40209DE5 		ldr	r2, [sp, #64]
 901 0730 013083E2 		add	r3, r3, #1
 902 0734 030052E1 		cmp	r2, r3
 903 0738 30308DE5 		str	r3, [sp, #48]
 904              	.LVL86:
 905 073c CFFEFF1A 		bne	.L35
 906 0740 88209DE5 		ldr	r2, [sp, #136]
 907 0744 04009DE5 		ldr	r0, [sp, #4]
 908 0748 5C609DE5 		ldr	r6, [sp, #92]
 909 074c 002092E5 		ldr	r2, [r2]
 910 0750 000050E3 		cmp	r0, #0
 911 0754 2C208DE5 		str	r2, [sp, #44]
 912 0758 820000DA 		ble	.L36
 913 075c 960002E0 		mul	r2, r6, r0
 914 0760 113046E2 		sub	r3, r6, #17
 915              	.LVL87:
 916 0764 081046E2 		sub	r1, r6, #8
 917 0768 0F30C3E3 		bic	r3, r3, #15
 918 076c 103083E2 		add	r3, r3, #16
 919 0770 A111A0E1 		lsr	r1, r1, #3
 920 0774 0001A0E1 		lsl	r0, r0, #2
 921 0778 28308DE5 		str	r3, [sp, #40]
 922 077c 8220A0E1 		lsl	r2, r2, #1
 923 0780 54309DE5 		ldr	r3, [sp, #84]
 924 0784 14B09DE5 		ldr	fp, [sp, #20]
 925 0788 011081E2 		add	r1, r1, #1
 926 078c 38208DE5 		str	r2, [sp, #56]
 101:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       const int8_t* matrix_ptr = weight_feature;
 927              		.loc 1 101 0 is_stmt 0
 928 0790 0020A0E3 		mov	r2, #0
 929 0794 24208DE5 		str	r2, [sp, #36]
 930 0798 48209DE5 		ldr	r2, [sp, #72]
 931 079c 34008DE5 		str	r0, [sp, #52]
 932 07a0 8101A0E1 		lsl	r0, r1, #3
 933 07a4 18108DE5 		str	r1, [sp, #24]
 934 07a8 0112A0E1 		lsl	r1, r1, #4
 935 07ac 1C308DE5 		str	r3, [sp, #28]
 936 07b0 013046E2 		sub	r3, r6, #1
 937 07b4 10008DE5 		str	r0, [sp, #16]
 938 07b8 0C108DE5 		str	r1, [sp, #12]
 939 07bc 20208DE5 		str	r2, [sp, #32]
 940 07c0 08308DE5 		str	r3, [sp, #8]
 941              	.LVL88:
 942              	.L38:
 943              	.LBE377:
 944              	.LBE305:
 945              	.LBB379:
 946              	.LBB380:
 121:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 122:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 123:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 124:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 125:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Time.
 126:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   {
 127:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int b = 0; b < n_batch; ++b) {
 128:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t* scratch_ptr_batch = scratch_tensor + b * n_filter;
 947              		.loc 1 128 0 is_stmt 1
 948 07c4 1C909DE5 		ldr	r9, [sp, #28]
 949              	.LVL89:
 129:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 130:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       // Perform batched vector dot product:
 131:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       const int16_t* vector1_ptr =
 132:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           tflite::micro::GetTensorData<int16_t>(weights_time_tensor);
 133:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       const int16_t* vector2_ptr =
 134:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           tflite::micro::GetTensorData<int16_t>(activation_state_tensor) +
 135:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           b * n_memory * n_filter;
 950              		.loc 1 135 0
 951 07c8 00A0A0E3 		mov	r10, #0
 952 07cc 20809DE5 		ldr	r8, [sp, #32]
 953              	.LVL90:
 954 07d0 2C709DE5 		ldr	r7, [sp, #44]
 955              	.LVL91:
 956              	.L37:
 957              	.LBB381:
 958              	.LBB382:
 959              	.LBB383:
 136:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 137:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int i = 0; i < n_filter; i++) {
 138:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *scratch_ptr_batch = 0;
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         for (int j = 0; j < n_memory; j++) {
 960              		.loc 1 139 0
 961 07d4 000056E3 		cmp	r6, #0
 962              	.LBE383:
 138:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         for (int j = 0; j < n_memory; j++) {
 963              		.loc 1 138 0
 964 07d8 0030A0E3 		mov	r3, #0
 965 07dc 003089E5 		str	r3, [r9]
 966              	.LVL92:
 967              	.LBB384:
 968              		.loc 1 139 0
 969 07e0 4D0000DA 		ble	.L39
 970 07e4 072088E1 		orr	r2, r8, r7
 971 07e8 080056E3 		cmp	r6, #8
 972 07ec 5220E3E7 		ubfx	r2, r2, #0, #4
 973 07f0 0030A093 		movls	r3, #0
 974 07f4 0130A083 		movhi	r3, #1
 975 07f8 000052E3 		cmp	r2, #0
 976 07fc 0030A013 		movne	r3, #0
 977 0800 000053E3 		cmp	r3, #0
 978 0804 AD00000A 		beq	.L40
 979 0808 08309DE5 		ldr	r3, [sp, #8]
 980 080c 060053E3 		cmp	r3, #6
 981 0810 A500009A 		bls	.L101
 982 0814 18009DE5 		ldr	r0, [sp, #24]
 983 0818 0710A0E1 		mov	r1, r7
 984 081c 5000C0F2 		vmov.i32	q8, #0  @ v4si
 985 0820 0820A0E1 		mov	r2, r8
 986 0824 0030A0E3 		mov	r3, #0
 987              	.LVL93:
 988              	.L43:
 140:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 989              		.loc 1 140 0 discriminator 2
 990 0828 DF4A61F4 		vld1.64	{d20-d21}, [r1:64]
 991 082c 013083E2 		add	r3, r3, #1
 992 0830 030050E1 		cmp	r0, r3
 993 0834 101081E2 		add	r1, r1, #16
 994 0838 DF6A62F4 		vld1.64	{d22-d23}, [r2:64]
 995 083c 102082E2 		add	r2, r2, #16
 996 0840 A42CD6F2 		vmull.s16 q9, d22, d20
 997 0844 A54CD7F2 		vmull.s16 q10, d23, d21
 998 0848 E00862F2 		vadd.i32	q8, q9, q8
 999 084c E00864F2 		vadd.i32	q8, q10, q8
 1000 0850 F4FFFF8A 		bhi	.L43
 1001 0854 A10860F2 		vadd.i32	d16, d16, d17
 1002 0858 10209DE5 		ldr	r2, [sp, #16]
 1003 085c 0C309DE5 		ldr	r3, [sp, #12]
 1004 0860 B00B60F2 		vpadd.i32	d16, d16, d16
 1005 0864 020056E1 		cmp	r6, r2
 1006 0868 030087E0 		add	r0, r7, r3
 1007 086c 031088E0 		add	r1, r8, r3
 1008 0870 903B10EE 		vmov.32	r3, d16[0]
 1009 0874 2500000A 		beq	.L49
 1010              	.L41:
 1011              	.LVL94:
 1012              		.loc 1 140 0 is_stmt 0
 1013 0878 B040D0E1 		ldrh	r4, [r0]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1014              		.loc 1 139 0 is_stmt 1
 1015 087c 01C082E2 		add	ip, r2, #1
 1016              		.loc 1 140 0
 1017 0880 B0E0D1E1 		ldrh	lr, [r1]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1018              		.loc 1 139 0
 1019 0884 0C0056E1 		cmp	r6, ip
 1020              		.loc 1 140 0
 1021 0888 843E03E1 		smlabb	r3, r4, lr, r3
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1022              		.loc 1 139 0
 1023 088c 1F0000DA 		ble	.L49
 1024              	.LVL95:
 1025              		.loc 1 140 0
 1026 0890 B240D0E1 		ldrh	r4, [r0, #2]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1027              		.loc 1 139 0
 1028 0894 02C082E2 		add	ip, r2, #2
 1029              		.loc 1 140 0
 1030 0898 B2E0D1E1 		ldrh	lr, [r1, #2]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1031              		.loc 1 139 0
 1032 089c 0C0056E1 		cmp	r6, ip
 1033              		.loc 1 140 0
 1034 08a0 843E03E1 		smlabb	r3, r4, lr, r3
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1035              		.loc 1 139 0
 1036 08a4 190000DA 		ble	.L49
 1037              	.LVL96:
 1038              		.loc 1 140 0
 1039 08a8 B440D0E1 		ldrh	r4, [r0, #4]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1040              		.loc 1 139 0
 1041 08ac 03C082E2 		add	ip, r2, #3
 1042              		.loc 1 140 0
 1043 08b0 B4E0D1E1 		ldrh	lr, [r1, #4]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1044              		.loc 1 139 0
 1045 08b4 0C0056E1 		cmp	r6, ip
 1046              		.loc 1 140 0
 1047 08b8 843E03E1 		smlabb	r3, r4, lr, r3
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1048              		.loc 1 139 0
 1049 08bc 130000DA 		ble	.L49
 1050              	.LVL97:
 1051              		.loc 1 140 0
 1052 08c0 B640D0E1 		ldrh	r4, [r0, #6]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1053              		.loc 1 139 0
 1054 08c4 04C082E2 		add	ip, r2, #4
 1055              		.loc 1 140 0
 1056 08c8 B6E0D1E1 		ldrh	lr, [r1, #6]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1057              		.loc 1 139 0
 1058 08cc 0C0056E1 		cmp	r6, ip
 1059              		.loc 1 140 0
 1060 08d0 843E03E1 		smlabb	r3, r4, lr, r3
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1061              		.loc 1 139 0
 1062 08d4 0D0000DA 		ble	.L49
 1063              	.LVL98:
 1064              		.loc 1 140 0
 1065 08d8 B840D0E1 		ldrh	r4, [r0, #8]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1066              		.loc 1 139 0
 1067 08dc 05C082E2 		add	ip, r2, #5
 1068              		.loc 1 140 0
 1069 08e0 B8E0D1E1 		ldrh	lr, [r1, #8]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1070              		.loc 1 139 0
 1071 08e4 0C0056E1 		cmp	r6, ip
 1072              		.loc 1 140 0
 1073 08e8 843E03E1 		smlabb	r3, r4, lr, r3
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1074              		.loc 1 139 0
 1075 08ec 070000DA 		ble	.L49
 1076              	.LVL99:
 1077              		.loc 1 140 0
 1078 08f0 BAC0D0E1 		ldrh	ip, [r0, #10]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1079              		.loc 1 139 0
 1080 08f4 062082E2 		add	r2, r2, #6
 1081              		.loc 1 140 0
 1082 08f8 BAE0D1E1 		ldrh	lr, [r1, #10]
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1083              		.loc 1 139 0
 1084 08fc 020056E1 		cmp	r6, r2
 1085              		.loc 1 140 0
 1086 0900 8C3E03E1 		smlabb	r3, ip, lr, r3
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1087              		.loc 1 139 0
 1088              	.LVL100:
 1089              		.loc 1 140 0
 1090 0904 BC20D1C1 		ldrhgt	r2, [r1, #12]
 1091 0908 BC10D0C1 		ldrhgt	r1, [r0, #12]
 1092              	.LVL101:
 1093 090c 823103C1 		smlabbgt	r3, r2, r1, r3
 1094              	.LVL102:
 1095              	.L49:
 1096 0910 0B7087E0 		add	r7, r7, fp
 1097 0914 003089E5 		str	r3, [r9]
 1098 0918 0B8088E0 		add	r8, r8, fp
 1099              	.L39:
 1100              	.LBE384:
 1101              	.LBE382:
 137:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *scratch_ptr_batch = 0;
 1102              		.loc 1 137 0 discriminator 2
 1103 091c 04309DE5 		ldr	r3, [sp, #4]
 1104 0920 01A08AE2 		add	r10, r10, #1
 1105              	.LVL103:
 1106              	.LBB387:
 141:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 142:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         scratch_ptr_batch++;
 1107              		.loc 1 142 0 discriminator 2
 1108 0924 049089E2 		add	r9, r9, #4
 1109              	.LVL104:
 1110              	.LBE387:
 137:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *scratch_ptr_batch = 0;
 1111              		.loc 1 137 0 discriminator 2
 1112 0928 0A0053E1 		cmp	r3, r10
 1113 092c A8FFFF1A 		bne	.L37
 1114 0930 1C209DE5 		ldr	r2, [sp, #28]
 1115 0934 34109DE5 		ldr	r1, [sp, #52]
 1116              	.LBE381:
 1117              	.LBE380:
 127:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t* scratch_ptr_batch = scratch_tensor + b * n_filter;
 1118              		.loc 1 127 0
 1119 0938 24309DE5 		ldr	r3, [sp, #36]
 1120 093c 012082E0 		add	r2, r2, r1
 1121 0940 1C208DE5 		str	r2, [sp, #28]
 1122 0944 013083E2 		add	r3, r3, #1
 1123 0948 30209DE5 		ldr	r2, [sp, #48]
 1124 094c 24308DE5 		str	r3, [sp, #36]
 1125              	.LVL105:
 1126 0950 030052E1 		cmp	r2, r3
 1127 0954 20309DE5 		ldr	r3, [sp, #32]
 1128              	.LVL106:
 1129 0958 38209DE5 		ldr	r2, [sp, #56]
 1130 095c 023083E0 		add	r3, r3, r2
 1131 0960 20308DE5 		str	r3, [sp, #32]
 1132 0964 96FFFF1A 		bne	.L38
 1133              	.LVL107:
 1134              	.L36:
 1135              	.LBE379:
 1136              	.LBB394:
 1137              	.LBB395:
 143:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 144:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 145:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 146:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 147:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Reduce, add bias, rescale, activation.
 148:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   {
 149:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     // Add bias.
 150:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     if (bias_tensor) {
 1138              		.loc 1 150 0
 1139 0968 8C309DE5 		ldr	r3, [sp, #140]
 1140 096c 000053E3 		cmp	r3, #0
 1141 0970 0902000A 		beq	.L162
 1142 0974 0320A0E1 		mov	r2, r3
 1143              	.LVL108:
 1144 0978 44309DE5 		ldr	r3, [sp, #68]
 1145              	.LBB396:
 1146              	.LBB397:
 1147              	.LBB398:
 1148              		.loc 2 63 0
 1149 097c 004092E5 		ldr	r4, [r2]
 1150              	.LVL109:
 1151 0980 000053E3 		cmp	r3, #0
 1152 0984 E70000DA 		ble	.L59
 1153 0988 046043E2 		sub	r6, r3, #4
 1154 098c 0320A0E1 		mov	r2, r3
 1155 0990 2661A0E1 		lsr	r6, r6, #2
 1156 0994 093043E2 		sub	r3, r3, #9
 1157 0998 0730C3E3 		bic	r3, r3, #7
 1158 099c 0281A0E1 		lsl	r8, r2, #2
 1159 09a0 016086E2 		add	r6, r6, #1
 1160 09a4 4CC09DE5 		ldr	ip, [sp, #76]
 1161 09a8 06B2A0E1 		lsl	fp, r6, #4
 1162 09ac 08A083E2 		add	r10, r3, #8
 1163 09b0 0230A0E1 		mov	r3, r2
 1164 09b4 0671A0E1 		lsl	r7, r6, #2
 1165 09b8 0B2084E0 		add	r2, r4, fp
 1166 09bc 10B08DE5 		str	fp, [sp, #16]
 1167 09c0 0C208DE5 		str	r2, [sp, #12]
 1168 09c4 012043E2 		sub	r2, r3, #1
 1169 09c8 08208DE5 		str	r2, [sp, #8]
 1170 09cc 0050A0E3 		mov	r5, #0
 1171 09d0 109084E2 		add	r9, r4, #16
 1172 09d4 03E0A0E1 		mov	lr, r3
 1173 09d8 1E0000EA 		b	.L60
 1174              	.LVL110:
 1175              	.L165:
 1176              	.LBE398:
 1177              	.LBE397:
 1178              	.LBB399:
 1179              	.LBB400:
 151:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       // Vector batch assign:
 152:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       const int32_t* bias_data =
 153:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           tflite::micro::GetTensorData<int32_t>(bias_tensor);
 154:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int i = 0; i < n_batch; ++i) {
 155:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         int32_t* output_ptr = scratch_output_tensor + i * n_unit;
 1180              		.loc 1 155 0
 1181 09dc 0C20A0E1 		mov	r2, ip
 1182              	.LVL111:
 1183 09e0 0030A0E3 		mov	r3, #0
 1184              	.LVL112:
 1185              	.L63:
 1186 09e4 013083E2 		add	r3, r3, #1
 1187              	.LBB401:
 156:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         const int32_t* bias_ptr = bias_data;
 157:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         for (int j = 0; j < n_unit; ++j) {
 158:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *output_ptr++ = *bias_ptr++;
 1188              		.loc 1 158 0 discriminator 2
 1189 09e8 DF0A61F4 		vld1.64	{d16-d17}, [r1:64]
 1190 09ec 030056E1 		cmp	r6, r3
 1191 09f0 101081E2 		add	r1, r1, #16
 1192 09f4 DF0A42F4 		vst1.64	{d16-d17}, [r2:64]
 1193 09f8 102082E2 		add	r2, r2, #16
 1194 09fc F8FFFF8A 		bhi	.L63
 1195 0a00 10309DE5 		ldr	r3, [sp, #16]
 1196 0a04 0E0057E1 		cmp	r7, lr
 1197 0a08 03208CE0 		add	r2, ip, r3
 1198 0a0c 0C00000A 		beq	.L68
 1199              		.loc 1 158 0 is_stmt 0
 1200 0a10 0C109DE5 		ldr	r1, [sp, #12]
 157:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *output_ptr++ = *bias_ptr++;
 1201              		.loc 1 157 0 is_stmt 1
 1202 0a14 0730A0E1 		mov	r3, r7
 1203              	.L61:
 1204              	.LVL113:
 1205 0a18 010083E2 		add	r0, r3, #1
 1206 0a1c 00005EE1 		cmp	lr, r0
 1207              		.loc 1 158 0
 1208 0a20 000091E5 		ldr	r0, [r1]
 1209 0a24 000082E5 		str	r0, [r2]
 157:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *output_ptr++ = *bias_ptr++;
 1210              		.loc 1 157 0
 1211 0a28 050000DA 		ble	.L68
 1212              	.LVL114:
 1213 0a2c 023083E2 		add	r3, r3, #2
 1214              		.loc 1 158 0
 1215 0a30 040091E5 		ldr	r0, [r1, #4]
 157:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *output_ptr++ = *bias_ptr++;
 1216              		.loc 1 157 0
 1217 0a34 0E0053E1 		cmp	r3, lr
 1218              		.loc 1 158 0
 1219 0a38 040082E5 		str	r0, [r2, #4]
 157:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *output_ptr++ = *bias_ptr++;
 1220              		.loc 1 157 0
 1221              	.LVL115:
 1222              		.loc 1 158 0
 1223 0a3c 083091B5 		ldrlt	r3, [r1, #8]
 1224 0a40 083082B5 		strlt	r3, [r2, #8]
 1225              	.LVL116:
 1226              	.L68:
 1227              	.LBE401:
 1228              	.LBE400:
 154:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         int32_t* output_ptr = scratch_output_tensor + i * n_unit;
 1229              		.loc 1 154 0
 1230 0a44 30309DE5 		ldr	r3, [sp, #48]
 1231 0a48 015085E2 		add	r5, r5, #1
 1232              	.LVL117:
 1233 0a4c 08C08CE0 		add	ip, ip, r8
 1234 0a50 050053E1 		cmp	r3, r5
 1235 0a54 B200000A 		beq	.L163
 1236              	.LVL118:
 1237              	.L60:
 1238 0a58 10308CE2 		add	r3, ip, #16
 1239 0a5c 0C2084E1 		orr	r2, r4, ip
 1240 0a60 040053E1 		cmp	r3, r4
 1241 0a64 0C005981 		cmphi	r9, ip
 1242 0a68 0130A093 		movls	r3, #1
 1243 0a6c 0030A083 		movhi	r3, #0
 1244 0a70 0F0012E3 		tst	r2, #15
 1245              	.LBB403:
 155:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         const int32_t* bias_ptr = bias_data;
 1246              		.loc 1 155 0
 1247 0a74 0C20A0E1 		mov	r2, ip
 1248              	.LVL119:
 1249 0a78 0030A013 		movne	r3, #0
 1250 0a7c 01300302 		andeq	r3, r3, #1
 1251 0a80 09005EE3 		cmp	lr, #9
 1252 0a84 0030A093 		movls	r3, #0
 1253 0a88 01300382 		andhi	r3, r3, #1
 1254 0a8c 000053E3 		cmp	r3, #0
 1255 0a90 7D00000A 		beq	.L164
 1256 0a94 08309DE5 		ldr	r3, [sp, #8]
 1257 0a98 0410A0E1 		mov	r1, r4
 1258 0a9c 020053E3 		cmp	r3, #2
 1259 0aa0 CDFFFF8A 		bhi	.L165
 1260              	.LVL120:
 1261 0aa4 0030A0E3 		mov	r3, #0
 1262 0aa8 DAFFFFEA 		b	.L61
 1263              	.LVL121:
 1264              	.L101:
 1265              	.LBE403:
 1266              	.LBE399:
 1267              	.LBE396:
 1268              	.LBE395:
 1269              	.LBE394:
 1270              	.LBB489:
 1271              	.LBB392:
 1272              	.LBB390:
 1273              	.LBB388:
 1274              	.LBB385:
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1275              		.loc 1 139 0
 1276 0aac 0030A0E3 		mov	r3, #0
 1277 0ab0 0810A0E1 		mov	r1, r8
 1278 0ab4 0320A0E1 		mov	r2, r3
 1279 0ab8 0700A0E1 		mov	r0, r7
 1280 0abc 6DFFFFEA 		b	.L41
 1281              	.L40:
 1282 0ac0 100056E3 		cmp	r6, #16
 1283 0ac4 6C0000DA 		ble	.L102
 1284 0ac8 14608DE5 		str	r6, [sp, #20]
 1285 0acc 204087E2 		add	r4, r7, #32
 1286 0ad0 28609DE5 		ldr	r6, [sp, #40]
 1287 0ad4 0350A0E1 		mov	r5, r3
 1288 0ad8 20E088E2 		add	lr, r8, #32
 1289              	.LVL122:
 1290              	.L48:
 140:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 1291              		.loc 1 140 0
 1292 0adc B0125EE1 		ldrh	r1, [lr, #-32]
 1293 0ae0 105085E2 		add	r5, r5, #16
 1294              	.LVL123:
 1295 0ae4 B02254E1 		ldrh	r2, [r4, #-32]
 1296 0ae8 060055E1 		cmp	r5, r6
 1297 0aec BE0154E1 		ldrh	r0, [r4, #-30]
 1298 0af0 BEC15EE1 		ldrh	ip, [lr, #-30]
 1299 0af4 0EF0D4F5 		pld	[r4, #14]
 1300 0af8 813203E1 		smlabb	r3, r1, r2, r3
 1301 0afc BC1154E1 		ldrh	r1, [r4, #-28]
 1302 0b00 BC215EE1 		ldrh	r2, [lr, #-28]
 1303 0b04 0EF0DEF5 		pld	[lr, #14]
 1304 0b08 803C03E1 		smlabb	r3, r0, ip, r3
 1305 0b0c BAC154E1 		ldrh	ip, [r4, #-26]
 1306 0b10 BA015EE1 		ldrh	r0, [lr, #-26]
 1307 0b14 813203E1 		smlabb	r3, r1, r2, r3
 1308 0b18 B81154E1 		ldrh	r1, [r4, #-24]
 1309 0b1c B8215EE1 		ldrh	r2, [lr, #-24]
 1310 0b20 8C3003E1 		smlabb	r3, ip, r0, r3
 1311 0b24 B6C154E1 		ldrh	ip, [r4, #-22]
 1312 0b28 B6015EE1 		ldrh	r0, [lr, #-22]
 1313 0b2c 813203E1 		smlabb	r3, r1, r2, r3
 1314 0b30 B41154E1 		ldrh	r1, [r4, #-20]
 1315 0b34 B4215EE1 		ldrh	r2, [lr, #-20]
 1316 0b38 8C3003E1 		smlabb	r3, ip, r0, r3
 1317 0b3c B2C154E1 		ldrh	ip, [r4, #-18]
 1318 0b40 B2015EE1 		ldrh	r0, [lr, #-18]
 1319 0b44 813203E1 		smlabb	r3, r1, r2, r3
 1320 0b48 B01154E1 		ldrh	r1, [r4, #-16]
 1321 0b4c B0215EE1 		ldrh	r2, [lr, #-16]
 1322 0b50 8C3003E1 		smlabb	r3, ip, r0, r3
 1323 0b54 BEC054E1 		ldrh	ip, [r4, #-14]
 1324 0b58 BE005EE1 		ldrh	r0, [lr, #-14]
 1325 0b5c 813203E1 		smlabb	r3, r1, r2, r3
 1326 0b60 BC1054E1 		ldrh	r1, [r4, #-12]
 1327 0b64 BC205EE1 		ldrh	r2, [lr, #-12]
 1328 0b68 8C3003E1 		smlabb	r3, ip, r0, r3
 1329 0b6c BAC054E1 		ldrh	ip, [r4, #-10]
 1330 0b70 BA005EE1 		ldrh	r0, [lr, #-10]
 1331 0b74 813203E1 		smlabb	r3, r1, r2, r3
 1332 0b78 B81054E1 		ldrh	r1, [r4, #-8]
 1333 0b7c B8205EE1 		ldrh	r2, [lr, #-8]
 1334 0b80 8C3003E1 		smlabb	r3, ip, r0, r3
 1335 0b84 B6005EE1 		ldrh	r0, [lr, #-6]
 1336 0b88 B6C054E1 		ldrh	ip, [r4, #-6]
 1337 0b8c 813203E1 		smlabb	r3, r1, r2, r3
 1338 0b90 B42054E1 		ldrh	r2, [r4, #-4]
 1339 0b94 B4105EE1 		ldrh	r1, [lr, #-4]
 1340 0b98 8C3003E1 		smlabb	r3, ip, r0, r3
 1341 0b9c B2C054E1 		ldrh	ip, [r4, #-2]
 1342 0ba0 B2005EE1 		ldrh	r0, [lr, #-2]
 1343 0ba4 823103E1 		smlabb	r3, r2, r1, r3
 1344 0ba8 0410A0E1 		mov	r1, r4
 1345 0bac 0E20A0E1 		mov	r2, lr
 1346              	.LVL124:
 1347 0bb0 204084E2 		add	r4, r4, #32
 1348 0bb4 8C3003E1 		smlabb	r3, ip, r0, r3
 1349 0bb8 20E08EE2 		add	lr, lr, #32
 1350 0bbc C6FFFF1A 		bne	.L48
 1351 0bc0 14609DE5 		ldr	r6, [sp, #20]
 1352 0bc4 01C0A0E1 		mov	ip, r1
 1353              	.LVL125:
 1354              	.L50:
 1355 0bc8 B200DCE0 		ldrh	r0, [ip], #2
 1356              	.LVL126:
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1357              		.loc 1 139 0
 1358 0bcc 015085E2 		add	r5, r5, #1
 1359              	.LVL127:
 140:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 1360              		.loc 1 140 0
 1361 0bd0 B210D2E0 		ldrh	r1, [r2], #2
 1362              	.LVL128:
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1363              		.loc 1 139 0
 1364 0bd4 050056E1 		cmp	r6, r5
 140:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 1365              		.loc 1 140 0
 1366 0bd8 803103E1 		smlabb	r3, r0, r1, r3
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1367              		.loc 1 139 0
 1368 0bdc F9FFFFCA 		bgt	.L50
 1369 0be0 4AFFFFEA 		b	.L49
 1370              	.LVL129:
 1371              	.L161:
 1372              	.LBE385:
 1373              	.LBE388:
 1374              	.LBE390:
 1375              	.LBE392:
 1376              	.LBE489:
 1377              	.LBB490:
 1378              	.LBB378:
 1379              	.LBB371:
 1380              	.LBB370:
 1381              	.LBB369:
 1382              	.LBB364:
 1383              	.LBB358:
 1384              	.LBB350:
 1385              	.LBB336:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 1386              		.loc 3 359 0
 1387 0be4 1F0055E3 		cmp	r5, #31
 1388              	.LBE336:
 1389              	.LBE350:
 1390              	.LBB351:
 1391              	.LBB343:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1392              		.loc 3 338 0
 1393 0be8 0221E0E3 		mvn	r2, #-2147483648
 1394              	.LVL130:
 1395              	.LBE343:
 1396              	.LBE351:
 1397              	.LBB352:
 1398              	.LBB337:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 1399              		.loc 3 359 0
 1400 0bec B7FEFFDA 		ble	.L33
 1401              	.LVL131:
 1402              	.L82:
 1403 0bf0 003000E3 		movw	r3, #:lower16:.LC0
 1404 0bf4 002000E3 		movw	r2, #:lower16:.LANCHOR0
 1405 0bf8 000000E3 		movw	r0, #:lower16:.LC1
 1406 0bfc 003040E3 		movt	r3, #:upper16:.LC0
 1407 0c00 002040E3 		movt	r2, #:upper16:.LANCHOR0
 1408 0c04 000040E3 		movt	r0, #:upper16:.LC1
 1409 0c08 671100E3 		movw	r1, #359
 1410 0c0c FEFFFFEB 		bl	__assert_func
 1411              	.LVL132:
 1412              	.L160:
 1413              	.LBE337:
 1414              	.LBE352:
 1415              	.LBB353:
 1416              	.LBB344:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1417              		.loc 3 335 0
 1418 0c10 0701A0E3 		mov	r0, #-1073741823
 1419 0c14 0010E0E3 		mvn	r1, #0
 1420 0c18 9FFEFFEA 		b	.L31
 1421              	.LVL133:
 1422              	.L98:
 1423              	.LBE344:
 1424              	.LBE353:
 1425              	.LBE358:
 1426              	.LBE364:
 1427              	.LBB365:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 1428              		.loc 1 106 0
 1429 0c1c 0030A0E3 		mov	r3, #0
 1430 0c20 0E80A0E1 		mov	r8, lr
 1431 0c24 0310A0E1 		mov	r1, r3
 1432 0c28 0C00A0E1 		mov	r0, ip
 1433 0c2c 27FEFFEA 		b	.L21
 1434              	.L20:
 1435 0c30 0E00A0E1 		mov	r0, lr
 1436 0c34 0C80A0E1 		mov	r8, ip
 1437              	.LVL134:
 1438              	.L30:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 1439              		.loc 1 108 0
 1440 0c38 D110D0E0 		ldrsb	r1, [r0], #1
 1441              	.LVL135:
 1442 0c3c D190D8E0 		ldrsb	r9, [r8], #1
 1443              	.LVL136:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 1444              		.loc 1 106 0
 1445 0c40 060050E1 		cmp	r0, r6
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 1446              		.loc 1 108 0
 1447 0c44 021041E0 		sub	r1, r1, r2
 1448 0c48 993123E0 		mla	r3, r9, r1, r3
 1449              	.LVL137:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod +=
 1450              		.loc 1 106 0
 1451 0c4c F9FFFF1A 		bne	.L30
 1452 0c50 83FEFFEA 		b	.L29
 1453              	.LVL138:
 1454              	.L97:
 1455 0c54 0020A0E3 		mov	r2, #0
 1456 0c58 0030A0E3 		mov	r3, #0
 1457 0c5c 0101A0E3 		mov	r0, #1073741824
 1458 0c60 0010A0E3 		mov	r1, #0
 1459 0c64 8EFEFFEA 		b	.L19
 1460              	.L99:
 1461 0c68 0E90A0E1 		mov	r9, lr
 1462 0c6c 0C00A0E1 		mov	r0, ip
 1463 0c70 0030A0E3 		mov	r3, #0
 1464 0c74 3C109DE5 		ldr	r1, [sp, #60]
 1465 0c78 EDFDFFEA 		b	.L28
 1466              	.LVL139:
 1467              	.L102:
 1468              	.LBE365:
 1469              	.LBE369:
 1470              	.LBE370:
 1471              	.LBE371:
 1472              	.LBE378:
 1473              	.LBE490:
 1474              	.LBB491:
 1475              	.LBB393:
 1476              	.LBB391:
 1477              	.LBB389:
 1478              	.LBB386:
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 1479              		.loc 1 139 0
 1480 0c7c 0820A0E1 		mov	r2, r8
 1481 0c80 0350A0E1 		mov	r5, r3
 1482 0c84 07C0A0E1 		mov	ip, r7
 1483 0c88 CEFFFFEA 		b	.L50
 1484              	.LVL140:
 1485              	.L164:
 1486 0c8c 08005EE3 		cmp	lr, #8
 1487 0c90 3F0100DA 		ble	.L104
 1488 0c94 20108CE2 		add	r1, ip, #32
 1489 0c98 202084E2 		add	r2, r4, #32
 1490              	.LVL141:
 1491 0c9c 14C08DE5 		str	ip, [sp, #20]
 1492              	.LVL142:
 1493              	.L67:
 1494              	.LBE386:
 1495              	.LBE389:
 1496              	.LBE391:
 1497              	.LBE393:
 1498              	.LBE491:
 1499              	.LBB492:
 1500              	.LBB414:
 1501              	.LBB408:
 1502              	.LBB406:
 1503              	.LBB404:
 1504              	.LBB402:
 1505              		.loc 1 158 0
 1506 0ca0 20C012E5 		ldr	ip, [r2, #-32]
 1507 0ca4 083083E2 		add	r3, r3, #8
 1508              	.LVL143:
 1509 0ca8 54F0D2F5 		pld	[r2, #84]
 1510 0cac 03005AE1 		cmp	r10, r3
 1511 0cb0 0200A0E1 		mov	r0, r2
 1512 0cb4 01B0A0E1 		mov	fp, r1
 1513 0cb8 20C001E5 		str	ip, [r1, #-32]
 1514              	.LVL144:
 1515 0cbc 202082E2 		add	r2, r2, #32
 1516 0cc0 3CC012E5 		ldr	ip, [r2, #-60]
 1517 0cc4 201081E2 		add	r1, r1, #32
 1518              	.LVL145:
 1519 0cc8 3CC001E5 		str	ip, [r1, #-60]
 1520              	.LVL146:
 1521 0ccc 38C012E5 		ldr	ip, [r2, #-56]
 1522 0cd0 38C001E5 		str	ip, [r1, #-56]
 1523 0cd4 34C012E5 		ldr	ip, [r2, #-52]
 1524 0cd8 34C001E5 		str	ip, [r1, #-52]
 1525 0cdc 30C012E5 		ldr	ip, [r2, #-48]
 1526 0ce0 30C001E5 		str	ip, [r1, #-48]
 1527 0ce4 2CC012E5 		ldr	ip, [r2, #-44]
 1528 0ce8 2CC001E5 		str	ip, [r1, #-44]
 1529 0cec 28C012E5 		ldr	ip, [r2, #-40]
 1530 0cf0 28C001E5 		str	ip, [r1, #-40]
 1531              	.LVL147:
 1532 0cf4 24C012E5 		ldr	ip, [r2, #-36]
 1533 0cf8 24C001E5 		str	ip, [r1, #-36]
 1534 0cfc E7FFFF1A 		bne	.L67
 1535 0d00 14C09DE5 		ldr	ip, [sp, #20]
 1536 0d04 0B20A0E1 		mov	r2, fp
 1537              	.LVL148:
 1538              	.L66:
 1539 0d08 042042E2 		sub	r2, r2, #4
 1540              	.L69:
 1541              	.LVL149:
 157:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *output_ptr++ = *bias_ptr++;
 1542              		.loc 1 157 0
 1543 0d0c 013083E2 		add	r3, r3, #1
 1544              	.LVL150:
 1545              		.loc 1 158 0
 1546 0d10 041090E4 		ldr	r1, [r0], #4
 1547              	.LVL151:
 157:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *output_ptr++ = *bias_ptr++;
 1548              		.loc 1 157 0
 1549 0d14 03005EE1 		cmp	lr, r3
 1550              		.loc 1 158 0
 1551 0d18 0410A2E5 		str	r1, [r2, #4]!
 157:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           *output_ptr++ = *bias_ptr++;
 1552              		.loc 1 157 0
 1553 0d1c FAFFFFCA 		bgt	.L69
 1554 0d20 47FFFFEA 		b	.L68
 1555              	.LVL152:
 1556              	.L163:
 1557 0d24 44309DE5 		ldr	r3, [sp, #68]
 1558              	.LVL153:
 1559              	.L59:
 1560 0d28 30209DE5 		ldr	r2, [sp, #48]
 1561 0d2c 000053E3 		cmp	r3, #0
 1562 0d30 920303E0 		mul	r3, r2, r3
 1563 0d34 08308DE5 		str	r3, [sp, #8]
 1564              	.LVL154:
 1565 0d38 520000DA 		ble	.L56
 1566              	.LVL155:
 1567              	.L94:
 1568 0d3c 04209DE5 		ldr	r2, [sp, #4]
 1569              		.loc 1 158 0
 1570 0d40 00B0A0E3 		mov	fp, #0
 1571 0d44 58309DE5 		ldr	r3, [sp, #88]
 1572 0d48 4C809DE5 		ldr	r8, [sp, #76]
 1573 0d4c 54709DE5 		ldr	r7, [sp, #84]
 1574 0d50 0221A0E1 		lsl	r2, r2, #2
 1575 0d54 09E043E2 		sub	lr, r3, #9
 1576 0d58 07E0CEE3 		bic	lr, lr, #7
 1577 0d5c 0391A0E1 		lsl	r9, r3, #2
 1578 0d60 14208DE5 		str	r2, [sp, #20]
 1579 0d64 08E08EE2 		add	lr, lr, #8
 1580 0d68 44209DE5 		ldr	r2, [sp, #68]
 1581 0d6c 0340A0E1 		mov	r4, r3
 1582 0d70 0CB08DE5 		str	fp, [sp, #12]
 1583 0d74 04708DE5 		str	r7, [sp, #4]
 1584              	.LVL156:
 1585 0d78 02A0A0E1 		mov	r10, r2
 1586 0d7c 0211A0E1 		lsl	r1, r2, #2
 1587 0d80 10108DE5 		str	r1, [sp, #16]
 1588              	.LVL157:
 1589              	.L71:
 1590 0d84 000054E3 		cmp	r4, #0
 1591              	.LBE402:
 1592              	.LBE404:
 1593              	.LBE406:
 1594              	.LBE408:
 1595              	.LBE414:
 1596              	.LBB415:
 1597              	.LBB416:
 159:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 160:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 161:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     } else {
 162:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t* output_ptr = scratch_output_tensor;
 163:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int i = 0; i < n_batch * n_unit; ++i) {
 164:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *output_ptr++ = 0;
 165:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 166:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 167:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 168:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     // Reduce.
 169:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int b = 0; b < n_batch; ++b) {
 170:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t* output_temp_ptr = scratch_output_tensor + b * n_unit;
 171:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t* scratch_ptr_batch = scratch_tensor + b * n_filter;
 1598              		.loc 1 171 0
 1599 0d88 04609DE5 		ldr	r6, [sp, #4]
 1600              	.LVL158:
 1601 0d8c 0810A0C1 		movgt	r1, r8
 1602 0d90 0870A0C1 		movgt	r7, r8
 1603 0d94 0050A0C3 		movgt	r5, #0
 1604 0d98 2D0000DA 		ble	.L74
 1605              	.LVL159:
 1606              	.L70:
 1607 0d9c 080054E3 		cmp	r4, #8
 1608 0da0 043097E4 		ldr	r3, [r7], #4
 1609 0da4 7B0000DA 		ble	.L106
 1610 0da8 202086E2 		add	r2, r6, #32
 1611 0dac 0000A0E3 		mov	r0, #0
 1612              	.LVL160:
 1613              	.L73:
 1614              	.LBB417:
 1615              	.LBB418:
 172:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 173:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       // Reduction sum vector
 174:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int i = 0; i < n_unit; ++i) {
 175:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         for (int j = 0; j < n_rank; ++j) {
 176:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           output_temp_ptr[i] += *scratch_ptr_batch++;
 1616              		.loc 1 176 0 discriminator 2
 1617 0db0 20B012E5 		ldr	fp, [r2, #-32]
 1618 0db4 080080E2 		add	r0, r0, #8
 1619              	.LVL161:
 1620 0db8 54F0D2F5 		pld	[r2, #84]
 1621 0dbc 0E0050E1 		cmp	r0, lr
 1622 0dc0 02C0A0E1 		mov	ip, r2
 1623 0dc4 202082E2 		add	r2, r2, #32
 1624              	.LVL162:
 1625 0dc8 0B3083E0 		add	r3, r3, fp
 1626 0dcc 003081E5 		str	r3, [r1]
 1627              	.LVL163:
 1628 0dd0 3CB012E5 		ldr	fp, [r2, #-60]
 1629 0dd4 0B3083E0 		add	r3, r3, fp
 1630 0dd8 003081E5 		str	r3, [r1]
 1631 0ddc 38B012E5 		ldr	fp, [r2, #-56]
 1632 0de0 0B3083E0 		add	r3, r3, fp
 1633 0de4 003081E5 		str	r3, [r1]
 1634 0de8 34B012E5 		ldr	fp, [r2, #-52]
 1635 0dec 0B3083E0 		add	r3, r3, fp
 1636 0df0 003081E5 		str	r3, [r1]
 1637 0df4 30B012E5 		ldr	fp, [r2, #-48]
 1638 0df8 0B3083E0 		add	r3, r3, fp
 1639 0dfc 003081E5 		str	r3, [r1]
 1640 0e00 2CB012E5 		ldr	fp, [r2, #-44]
 1641 0e04 0B3083E0 		add	r3, r3, fp
 1642 0e08 003081E5 		str	r3, [r1]
 1643 0e0c 28B012E5 		ldr	fp, [r2, #-40]
 1644 0e10 0B3083E0 		add	r3, r3, fp
 1645 0e14 003081E5 		str	r3, [r1]
 1646              	.LVL164:
 1647 0e18 24B012E5 		ldr	fp, [r2, #-36]
 1648 0e1c 0B3083E0 		add	r3, r3, fp
 1649 0e20 003081E5 		str	r3, [r1]
 1650 0e24 E1FFFF1A 		bne	.L73
 1651              	.LVL165:
 1652              	.L76:
 1653              		.loc 1 176 0 is_stmt 0
 1654 0e28 04209CE4 		ldr	r2, [ip], #4
 1655              	.LVL166:
 175:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           output_temp_ptr[i] += *scratch_ptr_batch++;
 1656              		.loc 1 175 0 is_stmt 1
 1657 0e2c 010080E2 		add	r0, r0, #1
 1658              	.LVL167:
 1659 0e30 000054E1 		cmp	r4, r0
 1660              		.loc 1 176 0
 1661 0e34 023083E0 		add	r3, r3, r2
 1662 0e38 003081E5 		str	r3, [r1]
 175:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           output_temp_ptr[i] += *scratch_ptr_batch++;
 1663              		.loc 1 175 0
 1664 0e3c F9FFFFCA 		bgt	.L76
 1665              	.LBE418:
 174:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         for (int j = 0; j < n_rank; ++j) {
 1666              		.loc 1 174 0
 1667 0e40 015085E2 		add	r5, r5, #1
 1668              	.LVL168:
 1669 0e44 096086E0 		add	r6, r6, r9
 1670              	.LVL169:
 1671 0e48 05005AE1 		cmp	r10, r5
 1672 0e4c 041081E2 		add	r1, r1, #4
 1673 0e50 D1FFFF1A 		bne	.L70
 1674              	.LVL170:
 1675              	.L74:
 1676 0e54 04209DE5 		ldr	r2, [sp, #4]
 1677 0e58 14109DE5 		ldr	r1, [sp, #20]
 1678              	.LBE417:
 1679              	.LBE416:
 169:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t* output_temp_ptr = scratch_output_tensor + b * n_unit;
 1680              		.loc 1 169 0
 1681 0e5c 0C309DE5 		ldr	r3, [sp, #12]
 1682 0e60 012082E0 		add	r2, r2, r1
 1683 0e64 04208DE5 		str	r2, [sp, #4]
 1684 0e68 013083E2 		add	r3, r3, #1
 1685 0e6c 40209DE5 		ldr	r2, [sp, #64]
 1686 0e70 0C308DE5 		str	r3, [sp, #12]
 1687              	.LVL171:
 1688 0e74 030052E1 		cmp	r2, r3
 1689 0e78 10309DE5 		ldr	r3, [sp, #16]
 1690              	.LVL172:
 1691 0e7c 038088E0 		add	r8, r8, r3
 1692 0e80 BFFFFFCA 		bgt	.L71
 1693 0e84 08309DE5 		ldr	r3, [sp, #8]
 1694              	.LVL173:
 1695              	.L56:
 1696              	.LBE415:
 1697              	.LBB420:
 177:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 178:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 179:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 180:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 181:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     // Rescale.
 182:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const int32_t output_max = std::numeric_limits<int8_t>::max();
 183:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const int32_t output_min = std::numeric_limits<int8_t>::min();
 184:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int i = 0; i < n_batch * n_unit; ++i) {
 1698              		.loc 1 184 0
 1699 0e88 000053E3 		cmp	r3, #0
 1700 0e8c 820000DA 		ble	.L1
 1701              	.LVL174:
 1702              	.L77:
 1703 0e90 98309DE5 		ldr	r3, [sp, #152]
 1704 0e94 000053E3 		cmp	r3, #0
 1705 0e98 4400000A 		beq	.L166
 1706 0e9c 03C0A0E1 		mov	ip, r3
 1707 0ea0 4C309DE5 		ldr	r3, [sp, #76]
 1708              	.LBB421:
 1709              	.LBB422:
 1710              	.LBB423:
 1711              	.LBB424:
 1712              	.LBB425:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1713              		.loc 3 338 0
 1714 0ea4 00E0A0E3 		mov	lr, #0
 1715              	.LBE425:
 1716              	.LBE424:
 1717              	.LBB430:
 1718              	.LBB431:
 1719              		.loc 3 360 0
 1720 0ea8 E20BDFED 		vldr.64	d16, .L172	@ int
 1721              	.LBE431:
 1722              	.LBE430:
 1723              	.LBE423:
 1724              	.LBE422:
 185:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x1 = scratch_output_tensor[i];
 186:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x2 = MultiplyByQuantizedMultiplier(x1, data.effective_scale_2_a,
 187:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                                                  data.effective_scale_2_b);
 188:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x3 = x2 + data.output_zero_point;
 189:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x4 = std::min(std::max(output_min, x3), output_max);
 190:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       tflite::micro::GetTensorData<int8_t>(output_tensor)[i] =
 191:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           static_cast<int8_t>(x4);
 1725              		.loc 1 191 0
 1726 0eac 7F40E0E3 		mvn	r4, #127
 1727 0eb0 08809DE5 		ldr	r8, [sp, #8]
 1728 0eb4 045043E2 		sub	r5, r3, #4
 1729 0eb8 9C209DE5 		ldr	r2, [sp, #156]
 1730 0ebc 1F0000EA 		b	.L87
 1731              	.LVL175:
 1732              	.L141:
 1733              	.LBB475:
 1734              	.LBB468:
 1735              	.LBB458:
 1736              	.LBB426:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1737              		.loc 3 337 0
 1738 0ec0 00A096E0 		adds	r10, r6, r0
 1739 0ec4 01B0A7E0 		adc	fp, r7, r1
 1740 0ec8 0010A0E3 		mov	r1, #0
 1741              	.LVL176:
 1742 0ecc CB0FA0E1 		asr	r0, fp, #31
 1743              	.LVL177:
 1744 0ed0 0201C0E3 		bic	r0, r0, #-2147483648
 1745 0ed4 0A6090E0 		adds	r6, r0, r10
 1746              	.LVL178:
 1747 0ed8 A60FA0E1 		lsr	r0, r6, #31
 1748 0edc 0B70A1E0 		adc	r7, r1, fp
 1749 0ee0 870080E1 		orr	r0, r0, r7, lsl #1
 1750              	.LVL179:
 1751              	.L89:
 1752              	.LBE426:
 1753              	.LBE458:
 1754              	.LBB459:
 1755              	.LBB452:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 1756              		.loc 3 359 0
 1757 0ee4 1F0053E3 		cmp	r3, #31
 1758 0ee8 40FFFFCA 		bgt	.L82
 1759              		.loc 3 360 0
 1760 0eec 903B02EE 		vmov.32	d18[0], r3
 1761              	.LBB432:
 1762              	.LBB433:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1763              		.loc 3 141 0
 1764 0ef0 5033A0E1 		asr	r3, r0, r3
 1765              	.LVL180:
 1766              	.LBE433:
 1767              	.LBE432:
 1768              	.LBE452:
 1769              	.LBE459:
 1770              	.LBE468:
 1771              	.LBE475:
 190:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           static_cast<int8_t>(x4);
 1772              		.loc 1 190 0
 1773 0ef4 00109CE5 		ldr	r1, [ip]
 1774              	.LBB476:
 1775              	.LBB469:
 1776              	.LBB460:
 1777              	.LBB453:
 1778              		.loc 3 360 0
 1779 0ef8 A01472F3 		vshl.u64	d17, d16, d18
 1780 0efc 316B57EC 		vmov	r6, r7, d17	@ int
 1781 0f00 016046E2 		sub	r6, r6, #1
 1782              	.LVL181:
 1783              	.LBE453:
 1784              	.LBE460:
 1785              	.LBE469:
 1786              	.LBE476:
 188:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x4 = std::min(std::max(output_min, x3), output_max);
 1787              		.loc 1 188 0
 1788 0f04 1C7092E5 		ldr	r7, [r2, #28]
 1789              	.LBB477:
 1790              	.LBB470:
 1791              	.LBB461:
 1792              	.LBB454:
 1793              	.LBB435:
 1794              	.LBB436:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1795              		.loc 3 141 0
 1796 0f08 C690A0E1 		asr	r9, r6, #1
 1797              	.LBE436:
 1798              	.LBE435:
 1799              	.LBB438:
 1800              	.LBB439:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1801              		.loc 3 71 0
 1802 0f0c 006006E0 		and	r6, r6, r0
 1803              	.LBE439:
 1804              	.LBE438:
 1805              	.LBB441:
 1806              	.LBB442:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1807              		.loc 3 95 0
 1808 0f10 A00F89E0 		add	r0, r9, r0, lsr #31
 1809              	.LBE442:
 1810              	.LBE441:
 1811              	.LBB444:
 1812              	.LBB445:
 1813 0f14 000056E1 		cmp	r6, r0
 1814 0f18 013083C2 		addgt	r3, r3, #1
 1815              	.LBE445:
 1816              	.LBE444:
 1817              	.LBE454:
 1818              	.LBE461:
 1819              	.LBE470:
 1820              	.LBE477:
 188:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x4 = std::min(std::max(output_min, x3), output_max);
 1821              		.loc 1 188 0
 1822 0f1c 073083E0 		add	r3, r3, r7
 1823              		.loc 1 191 0
 1824 0f20 7F0053E3 		cmp	r3, #127
 1825 0f24 7F30A0A3 		movge	r3, #127
 1826 0f28 040053E1 		cmp	r3, r4
 1827 0f2c 0430A0B1 		movlt	r3, r4
 1828 0f30 0E30C1E7 		strb	r3, [r1, lr]
 1829              	.LVL182:
 1830              	.LBE421:
 184:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x1 = scratch_output_tensor[i];
 1831              		.loc 1 184 0
 1832 0f34 01E08EE2 		add	lr, lr, #1
 1833              	.LVL183:
 1834 0f38 0E0058E1 		cmp	r8, lr
 1835 0f3c 560000DA 		ble	.L1
 1836              	.LVL184:
 1837              	.L87:
 1838              	.LBB482:
 187:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x3 = x2 + data.output_zero_point;
 1839              		.loc 1 187 0
 1840 0f40 0C3092E5 		ldr	r3, [r2, #12]
 185:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x2 = MultiplyByQuantizedMultiplier(x1, data.effective_scale_2_a,
 1841              		.loc 1 185 0
 1842 0f44 0460B5E5 		ldr	r6, [r5, #4]!
 1843              	.LVL185:
 186:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                                                  data.effective_scale_2_b);
 1844              		.loc 1 186 0
 1845 0f48 049092E5 		ldr	r9, [r2, #4]
 1846              	.LVL186:
 1847              	.LBB478:
 1848              	.LBB471:
 1849              		.loc 4 162 0
 1850 0f4c 000053E3 		cmp	r3, #0
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 1851              		.loc 4 161 0
 1852 0f50 C31FC3E1 		bic	r1, r3, r3, asr #31
 1853              	.LVL187:
 1854              		.loc 4 162 0
 1855 0f54 003063D2 		rsble	r3, r3, #0
 1856              	.LVL188:
 1857 0f58 0030A0C3 		movgt	r3, #0
 1858              	.LVL189:
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 1859              		.loc 4 163 0
 1860 0f5c 1661A0E1 		lsl	r6, r6, r1
 1861              	.LVL190:
 1862              	.LBB462:
 1863              	.LBB427:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1864              		.loc 3 334 0
 1865 0f60 9609C1E0 		smull	r0, r1, r6, r9
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 1866              		.loc 3 331 0
 1867 0f64 060059E1 		cmp	r9, r6
 1868 0f68 02015603 		cmpeq	r6, #-2147483648
 1869 0f6c 0190A003 		moveq	r9, #1
 1870              	.LVL191:
 1871 0f70 0090A013 		movne	r9, #0
 1872              	.LVL192:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1873              		.loc 3 335 0
 1874 0f74 000050E3 		cmp	r0, #0
 1875 0f78 0060D1E2 		sbcs	r6, r1, #0
 1876              	.LVL193:
 1877 0f7c 080000BA 		blt	.L111
 1878 0f80 0161A0E3 		mov	r6, #1073741824
 1879 0f84 0070A0E3 		mov	r7, #0
 1880              	.L86:
 1881              	.LVL194:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1882              		.loc 3 338 0
 1883 0f88 000059E3 		cmp	r9, #0
 1884 0f8c CBFFFF0A 		beq	.L141
 1885 0f90 0201E0E3 		mvn	r0, #-2147483648
 1886              	.LVL195:
 1887 0f94 D2FFFFEA 		b	.L89
 1888              	.LVL196:
 1889              	.L106:
 1890              	.LBE427:
 1891              	.LBE462:
 1892              	.LBE471:
 1893              	.LBE478:
 1894              	.LBE482:
 1895              	.LBE420:
 1896              	.LBB484:
 1897              	.LBB419:
 171:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 1898              		.loc 1 171 0
 1899 0f98 06C0A0E1 		mov	ip, r6
 1900 0f9c 0000A0E3 		mov	r0, #0
 1901 0fa0 A0FFFFEA 		b	.L76
 1902              	.LVL197:
 1903              	.L111:
 1904              	.LBE419:
 1905              	.LBE484:
 1906              	.LBB485:
 1907              	.LBB483:
 1908              	.LBB479:
 1909              	.LBB472:
 1910              	.LBB463:
 1911              	.LBB428:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1912              		.loc 3 335 0
 1913 0fa4 0761A0E3 		mov	r6, #-1073741823
 1914 0fa8 0070E0E3 		mvn	r7, #0
 1915 0fac F5FFFFEA 		b	.L86
 1916              	.LVL198:
 1917              	.L166:
 1918 0fb0 03E0A0E1 		mov	lr, r3
 1919 0fb4 4C309DE5 		ldr	r3, [sp, #76]
 1920              	.LBE428:
 1921              	.LBE463:
 1922              	.LBB464:
 1923              	.LBB455:
 1924              		.loc 3 360 0
 1925 0fb8 9E0BDFED 		vldr.64	d16, .L172	@ int
 1926              	.LBE455:
 1927              	.LBE464:
 1928              	.LBE472:
 1929              	.LBE479:
 1930              		.loc 1 191 0
 1931 0fbc 7F40E0E3 		mvn	r4, #127
 1932 0fc0 9C209DE5 		ldr	r2, [sp, #156]
 1933 0fc4 045043E2 		sub	r5, r3, #4
 1934              	.LVL199:
 1935              	.L84:
 187:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x3 = x2 + data.output_zero_point;
 1936              		.loc 1 187 0
 1937 0fc8 0C3092E5 		ldr	r3, [r2, #12]
 185:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x2 = MultiplyByQuantizedMultiplier(x1, data.effective_scale_2_a,
 1938              		.loc 1 185 0
 1939 0fcc 04C0B5E5 		ldr	ip, [r5, #4]!
 1940              	.LVL200:
 186:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                                                  data.effective_scale_2_b);
 1941              		.loc 1 186 0
 1942 0fd0 046092E5 		ldr	r6, [r2, #4]
 1943              	.LVL201:
 1944              	.LBB480:
 1945              	.LBB473:
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 1946              		.loc 4 162 0
 1947 0fd4 000053E3 		cmp	r3, #0
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 1948              		.loc 4 161 0
 1949 0fd8 C31FC3E1 		bic	r1, r3, r3, asr #31
 1950              	.LVL202:
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 1951              		.loc 4 162 0
 1952 0fdc 003063D2 		rsble	r3, r3, #0
 1953              	.LVL203:
 1954 0fe0 0030A0C3 		movgt	r3, #0
 1955              	.LVL204:
 1956              		.loc 4 163 0
 1957 0fe4 1CC1A0E1 		lsl	ip, ip, r1
 1958              	.LVL205:
 1959              	.LBB465:
 1960              	.LBB429:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1961              		.loc 3 334 0
 1962 0fe8 9C06C1E0 		smull	r0, r1, ip, r6
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 1963              		.loc 3 331 0
 1964 0fec 06005CE1 		cmp	ip, r6
 1965 0ff0 02015C03 		cmpeq	ip, #-2147483648
 1966 0ff4 01C0A003 		moveq	ip, #1
 1967              	.LVL206:
 1968 0ff8 00C0A013 		movne	ip, #0
 1969              	.LVL207:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1970              		.loc 3 335 0
 1971 0ffc 000050E3 		cmp	r0, #0
 1972 1000 0060D1E2 		sbcs	r6, r1, #0
 1973              	.LVL208:
 1974 1004 0181A0A3 		movge	r8, #1073741824
 1975 1008 0090A0A3 		movge	r9, #0
 1976 100c 0781A0B3 		movlt	r8, #-1073741823
 1977 1010 0090E0B3 		mvnlt	r9, #0
 1978              	.LVL209:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1979              		.loc 3 338 0
 1980 1014 00005CE3 		cmp	ip, #0
 1981 1018 0201E013 		mvnne	r0, #-2147483648
 1982              	.LVL210:
 1983 101c 0800001A 		bne	.L81
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1984              		.loc 3 337 0
 1985 1020 006098E0 		adds	r6, r8, r0
 1986 1024 0170A9E0 		adc	r7, r9, r1
 1987 1028 0010A0E3 		mov	r1, #0
 1988              	.LVL211:
 1989 102c C70FA0E1 		asr	r0, r7, #31
 1990 1030 0201C0E3 		bic	r0, r0, #-2147483648
 1991 1034 068090E0 		adds	r8, r0, r6
 1992              	.LVL212:
 1993 1038 A80FA0E1 		lsr	r0, r8, #31
 1994 103c 0790A1E0 		adc	r9, r1, r7
 1995 1040 890080E1 		orr	r0, r0, r9, lsl #1
 1996              	.LVL213:
 1997              	.L81:
 1998              	.LBE429:
 1999              	.LBE465:
 2000              	.LBB466:
 2001              	.LBB456:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 2002              		.loc 3 359 0
 2003 1044 1F0053E3 		cmp	r3, #31
 2004 1048 E8FEFFCA 		bgt	.L82
 2005              		.loc 3 360 0
 2006 104c 903B02EE 		vmov.32	d18[0], r3
 2007              	.LBB447:
 2008              	.LBB434:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2009              		.loc 3 141 0
 2010 1050 5033A0E1 		asr	r3, r0, r3
 2011              	.LVL214:
 2012              	.LBE434:
 2013              	.LBE447:
 2014              	.LBE456:
 2015              	.LBE466:
 2016              	.LBE473:
 2017              	.LBE480:
 188:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x4 = std::min(std::max(output_min, x3), output_max);
 2018              		.loc 1 188 0
 2019 1054 1CC092E5 		ldr	ip, [r2, #28]
 2020              	.LBB481:
 2021              	.LBB474:
 2022              	.LBB467:
 2023              	.LBB457:
 2024              		.loc 3 360 0
 2025 1058 A01472F3 		vshl.u64	d17, d16, d18
 2026 105c 316B57EC 		vmov	r6, r7, d17	@ int
 2027 1060 016046E2 		sub	r6, r6, #1
 2028              	.LVL215:
 2029              	.LBB448:
 2030              	.LBB437:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2031              		.loc 3 141 0
 2032 1064 C610A0E1 		asr	r1, r6, #1
 2033              	.LBE437:
 2034              	.LBE448:
 2035              	.LBB449:
 2036              	.LBB440:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2037              		.loc 3 71 0
 2038 1068 006006E0 		and	r6, r6, r0
 2039              	.LBE440:
 2040              	.LBE449:
 2041              	.LBB450:
 2042              	.LBB443:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 2043              		.loc 3 95 0
 2044 106c A00F81E0 		add	r0, r1, r0, lsr #31
 2045              	.LBE443:
 2046              	.LBE450:
 2047              	.LBB451:
 2048              	.LBB446:
 2049 1070 060050E1 		cmp	r0, r6
 2050 1074 013083B2 		addlt	r3, r3, #1
 2051              	.LBE446:
 2052              	.LBE451:
 2053              	.LBE457:
 2054              	.LBE467:
 2055              	.LBE474:
 2056              	.LBE481:
 188:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x4 = std::min(std::max(output_min, x3), output_max);
 2057              		.loc 1 188 0
 2058 1078 0C3083E0 		add	r3, r3, ip
 2059              		.loc 1 191 0
 2060 107c 7F0053E3 		cmp	r3, #127
 2061 1080 7F30A0A3 		movge	r3, #127
 2062 1084 040053E1 		cmp	r3, r4
 2063 1088 0430A0B1 		movlt	r3, r4
 2064 108c 0130CEE4 		strb	r3, [lr], #1
 2065              	.LVL216:
 2066              	.LBE483:
 184:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       int32_t x1 = scratch_output_tensor[i];
 2067              		.loc 1 184 0
 2068 1090 08309DE5 		ldr	r3, [sp, #8]
 2069 1094 0E0053E1 		cmp	r3, lr
 2070 1098 CAFFFFCA 		bgt	.L84
 2071              	.LVL217:
 2072              	.L1:
 2073              	.LBE485:
 2074              	.LBE492:
 192:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 193:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 194:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** }
 2075              		.loc 1 194 0
 2076 109c 64D08DE2 		add	sp, sp, #100
 2077              		.cfi_remember_state
 2078              		.cfi_def_cfa_offset 36
 2079              		@ sp needed
 2080 10a0 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2081              	.LVL218:
 2082              	.L8:
 2083              		.cfi_restore_state
 2084 10a4 1EC044E2 		sub	ip, r4, #30
 2085 10a8 0A20A0E1 		mov	r2, r10
 2086 10ac 0C005BE1 		cmp	fp, ip
 2087 10b0 00E0A023 		movcs	lr, #0
 2088 10b4 01E0A033 		movcc	lr, #1
 2089 10b8 1D0054E3 		cmp	r4, #29
 2090 10bc 00E0A093 		movls	lr, #0
 2091 10c0 00005EE3 		cmp	lr, #0
 2092 10c4 2C00000A 		beq	.L14
 2093              	.LVL219:
 2094 10c8 203083E2 		add	r3, r3, #32
 2095 10cc 20208AE2 		add	r2, r10, #32
 2096              	.LVL220:
 2097              	.L15:
 2098              	.LBB493:
  85:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 2099              		.loc 1 85 0
 2100 10d0 F01253E1 		ldrsh	r1, [r3, #-32]
 2101 10d4 020083E2 		add	r0, r3, #2
 2102 10d8 24F0D3F5 		pld	[r3, #36]
 2103 10dc 00005CE1 		cmp	ip, r0
 2104 10e0 24F0D2F5 		pld	[r2, #36]
 2105 10e4 0300A0E1 		mov	r0, r3
 2106 10e8 B01242E1 		strh	r1, [r2, #-32]	@ movhi
 2107              	.LVL221:
 2108 10ec 02E0A0E1 		mov	lr, r2
 2109 10f0 FE1153E1 		ldrsh	r1, [r3, #-30]
 2110 10f4 202082E2 		add	r2, r2, #32
 2111              	.LVL222:
 2112 10f8 203083E2 		add	r3, r3, #32
 2113 10fc BE1342E1 		strh	r1, [r2, #-62]	@ movhi
 2114              	.LVL223:
 2115 1100 FC1353E1 		ldrsh	r1, [r3, #-60]
 2116 1104 BC1342E1 		strh	r1, [r2, #-60]	@ movhi
 2117 1108 FA1353E1 		ldrsh	r1, [r3, #-58]
 2118 110c BA1342E1 		strh	r1, [r2, #-58]	@ movhi
 2119 1110 F81353E1 		ldrsh	r1, [r3, #-56]
 2120 1114 B81342E1 		strh	r1, [r2, #-56]	@ movhi
 2121 1118 F61353E1 		ldrsh	r1, [r3, #-54]
 2122 111c B61342E1 		strh	r1, [r2, #-54]	@ movhi
 2123 1120 F41353E1 		ldrsh	r1, [r3, #-52]
 2124 1124 B41342E1 		strh	r1, [r2, #-52]	@ movhi
 2125 1128 F21353E1 		ldrsh	r1, [r3, #-50]
 2126 112c B21342E1 		strh	r1, [r2, #-50]	@ movhi
 2127 1130 F01353E1 		ldrsh	r1, [r3, #-48]
 2128 1134 B01342E1 		strh	r1, [r2, #-48]	@ movhi
 2129 1138 FE1253E1 		ldrsh	r1, [r3, #-46]
 2130 113c BE1242E1 		strh	r1, [r2, #-46]	@ movhi
 2131 1140 FC1253E1 		ldrsh	r1, [r3, #-44]
 2132 1144 BC1242E1 		strh	r1, [r2, #-44]	@ movhi
 2133 1148 FA1253E1 		ldrsh	r1, [r3, #-42]
 2134 114c BA1242E1 		strh	r1, [r2, #-42]	@ movhi
 2135 1150 F81253E1 		ldrsh	r1, [r3, #-40]
 2136 1154 B81242E1 		strh	r1, [r2, #-40]	@ movhi
 2137 1158 F61253E1 		ldrsh	r1, [r3, #-38]
 2138 115c B61242E1 		strh	r1, [r2, #-38]	@ movhi
 2139 1160 F41253E1 		ldrsh	r1, [r3, #-36]
 2140 1164 B41242E1 		strh	r1, [r2, #-36]	@ movhi
 2141 1168 F21253E1 		ldrsh	r1, [r3, #-34]
 2142 116c B21242E1 		strh	r1, [r2, #-34]	@ movhi
 2143 1170 D6FFFF8A 		bhi	.L15
 2144 1174 0030A0E1 		mov	r3, r0
 2145 1178 0E20A0E1 		mov	r2, lr
 2146              	.L14:
 2147 117c 022042E2 		sub	r2, r2, #2
 2148              	.L17:
 2149              	.LVL224:
 2150 1180 F210D3E0 		ldrsh	r1, [r3], #2
 2151              	.LVL225:
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *new_state_start++ = *old_state_start++;
 2152              		.loc 1 84 0
 2153 1184 030054E1 		cmp	r4, r3
  85:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 2154              		.loc 1 85 0
 2155 1188 B210E2E1 		strh	r1, [r2, #2]!	@ movhi
 2156              	.LVL226:
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *new_state_start++ = *old_state_start++;
 2157              		.loc 1 84 0
 2158 118c FBFFFF1A 		bne	.L17
 2159 1190 17FCFFEA 		b	.L13
 2160              	.LVL227:
 2161              	.L104:
 2162              	.LBE493:
 2163              	.LBB494:
 2164              	.LBB486:
 2165              	.LBB409:
 2166              	.LBB407:
 2167              	.LBB405:
 155:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         const int32_t* bias_ptr = bias_data;
 2168              		.loc 1 155 0
 2169 1194 0400A0E1 		mov	r0, r4
 2170 1198 DAFEFFEA 		b	.L66
 2171              	.LVL228:
 2172              	.L162:
 2173              	.LBE405:
 2174              	.LBE407:
 2175              	.LBE409:
 2176              	.LBB410:
 2177              	.LBB411:
 163:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *output_ptr++ = 0;
 2178              		.loc 1 163 0
 2179 119c 44309DE5 		ldr	r3, [sp, #68]
 2180 11a0 40209DE5 		ldr	r2, [sp, #64]
 2181 11a4 930203E0 		mul	r3, r3, r2
 2182 11a8 000053E3 		cmp	r3, #0
 2183 11ac 08308DE5 		str	r3, [sp, #8]
 2184 11b0 070000DA 		ble	.L167
 2185 11b4 0321A0E1 		lsl	r2, r3, #2
 2186 11b8 8C109DE5 		ldr	r1, [sp, #140]
 2187 11bc 4C009DE5 		ldr	r0, [sp, #76]
 2188 11c0 FEFFFFEB 		bl	memset
 2189              	.LVL229:
 2190 11c4 44309DE5 		ldr	r3, [sp, #68]
 2191 11c8 000053E3 		cmp	r3, #0
 2192 11cc DAFEFFCA 		bgt	.L94
 2193 11d0 2EFFFFEA 		b	.L77
 2194              	.LVL230:
 2195              	.L167:
 2196 11d4 44309DE5 		ldr	r3, [sp, #68]
 2197 11d8 000053E3 		cmp	r3, #0
 2198 11dc D6FEFFCA 		bgt	.L94
 2199              	.LBE411:
 2200              	.LBE410:
 2201              	.LBE486:
 2202              	.LBE494:
 2203              		.loc 1 194 0
 2204 11e0 64D08DE2 		add	sp, sp, #100
 2205              		.cfi_remember_state
 2206              		.cfi_def_cfa_offset 36
 2207              		@ sp needed
 2208 11e4 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2209              	.LVL231:
 2210              	.L159:
 2211              		.cfi_restore_state
 2212              	.LBB495:
 2213              	.LBB487:
 150:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       // Vector batch assign:
 2214              		.loc 1 150 0
 2215 11e8 8C309DE5 		ldr	r3, [sp, #140]
 2216              	.LVL232:
 2217 11ec 000053E3 		cmp	r3, #0
 2218 11f0 0500000A 		beq	.L168
 2219              	.LVL233:
 2220 11f4 44309DE5 		ldr	r3, [sp, #68]
 2221 11f8 40209DE5 		ldr	r2, [sp, #64]
 2222              	.LVL234:
 2223 11fc 930203E0 		mul	r3, r3, r2
 2224 1200 08308DE5 		str	r3, [sp, #8]
 2225              	.LVL235:
 2226 1204 1FFFFFEA 		b	.L56
 2227              	.LVL236:
 2228              	.L3:
 2229              	.LBE487:
 2230              	.LBE495:
  67:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TFLITE_DCHECK(context->GetScratchBuffer != nullptr);
 2231              		.loc 1 67 0 discriminator 1
 2232 1208 FEFFFFEB 		bl	abort
 2233              	.LVL237:
 2234              	.L168:
 2235              	.LBB496:
 2236              	.LBB488:
 2237              	.LBB413:
 2238              	.LBB412:
 163:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *output_ptr++ = 0;
 2239              		.loc 1 163 0
 2240 120c 44309DE5 		ldr	r3, [sp, #68]
 2241 1210 40209DE5 		ldr	r2, [sp, #64]
 2242              	.LVL238:
 2243 1214 930203E0 		mul	r3, r3, r2
 2244 1218 000053E3 		cmp	r3, #0
 2245 121c 08308DE5 		str	r3, [sp, #8]
 2246              	.LVL239:
 2247 1220 9DFFFFDA 		ble	.L1
 2248 1224 8C109DE5 		ldr	r1, [sp, #140]
 2249              	.LVL240:
 2250 1228 0321A0E1 		lsl	r2, r3, #2
 2251 122c 4C009DE5 		ldr	r0, [sp, #76]
 2252 1230 FEFFFFEB 		bl	memset
 2253              	.LVL241:
 2254 1234 15FFFFEA 		b	.L77
 2255              	.L173:
 2256              		.align	3
 2257              	.L172:
 2258 1238 01000000 		.word	1
 2259 123c 00000000 		.word	0
 2260              	.LBE412:
 2261              	.LBE413:
 2262              	.LBE488:
 2263              	.LBE496:
 2264              		.cfi_endproc
 2265              	.LFE4177:
 2266              		.fnend
 2268              		.section	.text._ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTenso
 2269              		.align	2
 2270              		.global	_ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_
 2271              		.syntax unified
 2272              		.arm
 2273              		.fpu neon
 2275              	_ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16Tf
 2276              		.fnstart
 2277              	.LFB4179:
 195:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** static inline void ApplyTimeWeightsBiasAndActivation(
 196:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     int batch_size, int memory_size, int num_filters, int num_units, int rank,
 197:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const float* const __restrict__ weights_time_ptr,
 198:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const float* const __restrict__ bias_ptr, TfLiteFusedActivation activation,
 199:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* const __restrict__ state_ptr, float* const __restrict__ scratch_ptr,
 200:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* const __restrict__ output_ptr) {
 201:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Compute matmul(activation_state, weights_time).
 202:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   for (int b = 0; b < batch_size; ++b) {
 203:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     // Perform batched vector dot product:
 204:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* scratch_ptr_batch = scratch_ptr + b * num_filters;
 205:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const float* vector1_ptr = weights_time_ptr;
 206:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const float* vector2_ptr = state_ptr + b * memory_size * num_filters;
 207:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int i = 0; i < num_filters; ++i) {
 208:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *scratch_ptr_batch = 0.f;
 209:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int j = 0; j < memory_size; ++j) {
 210:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 211:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 212:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       scratch_ptr_batch++;
 213:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 214:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 215:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 216:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Initialize output with bias if provided.
 217:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   if (bias_ptr) {
 218:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     // VectorBatchVectorAssign
 219:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int i = 0; i < batch_size; ++i) {
 220:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       float* output_data = output_ptr + i * num_units;
 221:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       const float* bias_data = bias_ptr;
 222:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int j = 0; j < num_units; ++j) {
 223:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *output_data++ = *bias_data++;
 224:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 225:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 226:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   } else {
 227:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* output_data = output_ptr;
 228:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int i = 0; i < batch_size * num_units; ++i) {
 229:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_data++ = 0.0f;
 230:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 231:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 232:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 233:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Reduction sum.
 234:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   for (int b = 0; b < batch_size; ++b) {
 235:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* output_ptr_batch = output_ptr + b * num_units;
 236:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* scratch_ptr_batch = scratch_ptr + b * num_filters;
 237:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 238:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     // Reduction sum vector
 239:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int i = 0; i < num_units; ++i) {
 240:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int j = 0; j < rank; j++) {
 241:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         output_ptr_batch[i] += *scratch_ptr_batch++;
 242:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 243:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 244:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 245:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 246:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Apply activation.
 247:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   for (int b = 0; b < batch_size; ++b) {
 248:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* output_ptr_batch = output_ptr + b * num_units;
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int i = 0; i < num_units; ++i) {
 250:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 251:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           tflite::ops::micro::ActivationValFloat(activation, *output_ptr_batch);
 252:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       ++output_ptr_batch;
 253:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 254:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 255:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** }
 256:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 257:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** void EvalFloatSvdfReference(
 258:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TfLiteContext* context, TfLiteNode* node, const TfLiteEvalTensor* input,
 259:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const TfLiteEvalTensor* weights_feature,
 260:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const TfLiteEvalTensor* weights_time, const TfLiteEvalTensor* bias,
 261:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const TfLiteSVDFParams* params, int scratch_tensor_index,
 262:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TfLiteEvalTensor* activation_state, TfLiteEvalTensor* output) {
 2278              		.loc 1 262 0
 2279              		.cfi_startproc
 2280              		@ args = 24, pretend = 0, frame = 56
 2281              		@ frame_needed = 0, uses_anonymous_args = 0
 2282              	.LVL242:
 2283 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2284              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2285              		.cfi_def_cfa_offset 36
 2286              		.cfi_offset 4, -36
 2287              		.cfi_offset 5, -32
 2288              		.cfi_offset 6, -28
 2289              		.cfi_offset 7, -24
 2290              		.cfi_offset 8, -20
 2291              		.cfi_offset 9, -16
 2292              		.cfi_offset 10, -12
 2293              		.cfi_offset 11, -8
 2294              		.cfi_offset 14, -4
 2295 0004 0340A0E1 		mov	r4, r3
 2296 0008 048B2DED 		vpush.64	{d8, d9}
 2297              		.vsave {d8, d9}
 2298              		.cfi_def_cfa_offset 52
 2299              		.cfi_offset 80, -52
 2300              		.cfi_offset 81, -48
 2301              		.cfi_offset 82, -44
 2302              		.cfi_offset 83, -40
 2303              		.pad #60
 2304 000c 3CD04DE2 		sub	sp, sp, #60
 2305              		.cfi_def_cfa_offset 112
 2306              		.loc 1 262 0
 2307 0010 0280A0E1 		mov	r8, r2
 2308 0014 0070A0E1 		mov	r7, r0
 263:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int rank = params->rank;
 264:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int batch_size = input->dims->data[0];
 265:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int input_size = input->dims->data[1];
 266:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int num_filters = weights_feature->dims->data[0];
 2309              		.loc 1 266 0
 2310 0018 041093E5 		ldr	r1, [r3, #4]
 2311              	.LVL243:
 264:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int input_size = input->dims->data[1];
 2312              		.loc 1 264 0
 2313 001c 043092E5 		ldr	r3, [r2, #4]
 2314              	.LVL244:
 263:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int rank = params->rank;
 2315              		.loc 1 263 0
 2316 0020 78209DE5 		ldr	r2, [sp, #120]
 2317              	.LVL245:
 262:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int rank = params->rank;
 2318              		.loc 1 262 0
 2319 0024 70A09DE5 		ldr	r10, [sp, #112]
 265:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int num_filters = weights_feature->dims->data[0];
 2320              		.loc 1 265 0
 2321 0028 086093E5 		ldr	r6, [r3, #8]
 263:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int batch_size = input->dims->data[0];
 2322              		.loc 1 263 0
 2323 002c 005092E5 		ldr	r5, [r2]
 2324              	.LVL246:
 2325              		.loc 1 266 0
 2326 0030 042091E5 		ldr	r2, [r1, #4]
 262:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int rank = params->rank;
 2327              		.loc 1 262 0
 2328 0034 74909DE5 		ldr	r9, [sp, #116]
 267:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int num_units = num_filters / rank;
 2329              		.loc 1 267 0
 2330 0038 0510A0E1 		mov	r1, r5
 266:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int num_units = num_filters / rank;
 2331              		.loc 1 266 0
 2332 003c 24208DE5 		str	r2, [sp, #36]
 2333              		.loc 1 267 0
 2334 0040 0200A0E1 		mov	r0, r2
 2335              	.LVL247:
 264:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int input_size = input->dims->data[1];
 2336              		.loc 1 264 0
 2337 0044 042093E5 		ldr	r2, [r3, #4]
 2338 0048 00208DE5 		str	r2, [sp]
 2339              	.LVL248:
 2340              		.loc 1 267 0
 2341 004c FEFFFFEB 		bl	__aeabi_idiv
 2342              	.LVL249:
 268:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int memory_size = weights_time->dims->data[1];
 2343              		.loc 1 268 0
 2344 0050 04309AE5 		ldr	r3, [r10, #4]
 2345              	.LBB581:
 2346              	.LBB582:
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 2347              		.loc 2 62 0
 2348 0054 000059E3 		cmp	r9, #0
 2349              	.LBE582:
 2350              	.LBE581:
 2351              	.LBB587:
 2352              	.LBB588:
 2353              		.loc 2 63 0
 2354 0058 002094E5 		ldr	r2, [r4]
 2355              	.LBE588:
 2356              	.LBE587:
 267:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int memory_size = weights_time->dims->data[1];
 2357              		.loc 1 267 0
 2358 005c 1C008DE5 		str	r0, [sp, #28]
 2359              	.LVL250:
 2360              		.loc 1 268 0
 2361 0060 084093E5 		ldr	r4, [r3, #8]
 2362              	.LVL251:
 2363              	.LBB590:
 2364              	.LBB591:
 2365              		.loc 2 63 0
 2366 0064 00309AE5 		ldr	r3, [r10]
 2367              	.LBE591:
 2368              	.LBE590:
 2369              	.LBB593:
 2370              	.LBB589:
 2371 0068 0C208DE5 		str	r2, [sp, #12]
 2372              	.LVL252:
 2373              	.LBE589:
 2374              	.LBE593:
 262:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int rank = params->rank;
 2375              		.loc 1 262 0
 2376 006c 84A09DE5 		ldr	r10, [sp, #132]
 2377              	.LVL253:
 2378              	.LBB594:
 2379              	.LBB592:
 2380              		.loc 2 63 0
 2381 0070 10308DE5 		str	r3, [sp, #16]
 2382              	.LVL254:
 2383              	.LBE592:
 2384              	.LBE594:
 262:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int rank = params->rank;
 2385              		.loc 1 262 0
 2386 0074 80309DE5 		ldr	r3, [sp, #128]
 2387              	.LVL255:
 2388              	.LBB595:
 2389              	.LBB583:
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 2390              		.loc 2 62 0
 2391 0078 A401000A 		beq	.L177
 2392              	.LBE583:
 2393              	.LBE595:
 2394              	.LBB596:
 2395              	.LBB597:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2396              		.loc 2 56 0
 2397 007c 000053E3 		cmp	r3, #0
 2398              	.LBE597:
 2399              	.LBE596:
 2400              	.LBB600:
 2401              	.LBB584:
 2402              		.loc 2 63 0
 2403 0080 002099E5 		ldr	r2, [r9]
 2404              	.LBE584:
 2405              	.LBE600:
 2406              	.LBB601:
 2407              	.LBB598:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2408              		.loc 2 56 0
 2409 0084 00309315 		ldrne	r3, [r3]
 2410              	.LBE598:
 2411              	.LBE601:
 269:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 270:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const float* weights_feature_ptr =
 271:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       tflite::micro::GetTensorData<float>(weights_feature);
 272:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const float* weights_time_ptr =
 273:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       tflite::micro::GetTensorData<float>(weights_time);
 274:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const float* bias_ptr = tflite::micro::GetTensorData<float>(bias);
 275:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const float* input_ptr = tflite::micro::GetTensorData<float>(input);
 276:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 277:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   float* state_ptr = tflite::micro::GetTensorData<float>(activation_state);
 278:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 279:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TFLITE_DCHECK(context != nullptr);
 2412              		.loc 1 279 0
 2413 0088 000057E3 		cmp	r7, #0
 2414              	.LBB602:
 2415              	.LBB603:
 2416              		.loc 2 63 0
 2417 008c 00B098E5 		ldr	fp, [r8]
 2418              	.LBE603:
 2419              	.LBE602:
 2420              	.LBB604:
 2421              	.LBB585:
 2422 0090 28208DE5 		str	r2, [sp, #40]
 2423              	.LVL256:
 2424              	.LBE585:
 2425              	.LBE604:
 2426              	.LBB605:
 2427              	.LBB599:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2428              		.loc 2 56 0
 2429 0094 18308DE5 		str	r3, [sp, #24]
 2430              	.LBE599:
 2431              	.LBE605:
 2432              		.loc 1 279 0
 2433 0098 9C01000A 		beq	.L177
 280:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TFLITE_DCHECK(context->GetScratchBuffer != nullptr);
 2434              		.loc 1 280 0
 2435 009c 443097E5 		ldr	r3, [r7, #68]
 2436 00a0 000053E3 		cmp	r3, #0
 2437 00a4 9901000A 		beq	.L177
 281:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 282:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   float* scratch_ptr = static_cast<float*>(
 283:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       context->GetScratchBuffer(context, scratch_tensor_index));
 2438              		.loc 1 283 0
 2439 00a8 7C109DE5 		ldr	r1, [sp, #124]
 2440 00ac 0700A0E1 		mov	r0, r7
 2441              	.LVL257:
 2442 00b0 33FF2FE1 		blx	r3
 2443              	.LVL258:
 2444              	.LBB606:
 2445              	.LBB607:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2446              		.loc 2 56 0
 2447 00b4 00005AE3 		cmp	r10, #0
 2448              	.LBE607:
 2449              	.LBE606:
 2450              	.LBB610:
 284:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 285:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   float* output_ptr = tflite::micro::GetTensorData<float>(output);
 286:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 287:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Left shift the activation_state.
 288:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   {
 289:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* new_state_start = state_ptr;
 290:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const float* old_state_start = state_ptr + 1;
 291:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const float* old_state_end =
 292:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         state_ptr + batch_size * num_filters * memory_size;
 2451              		.loc 1 292 0
 2452 00b8 00209DE5 		ldr	r2, [sp]
 2453              	.LBE610:
 2454              	.LBB611:
 2455              	.LBB608:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2456              		.loc 2 56 0
 2457 00bc 00309A15 		ldrne	r3, [r10]
 2458 00c0 20A08D05 		streq	r10, [sp, #32]
 2459              	.LBE608:
 2460              	.LBE611:
 283:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 2461              		.loc 1 283 0
 2462 00c4 30008DE5 		str	r0, [sp, #48]
 2463              	.LVL259:
 2464              	.LBB612:
 2465              	.LBB609:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h **** }
 2466              		.loc 2 56 0
 2467 00c8 20308D15 		strne	r3, [sp, #32]
 2468              	.LBE609:
 2469              	.LBE612:
 2470              	.LBB613:
 2471              		.loc 1 292 0
 2472 00cc 24309DE5 		ldr	r3, [sp, #36]
 2473 00d0 930202E0 		mul	r2, r3, r2
 290:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const float* old_state_end =
 2474              		.loc 1 290 0
 2475 00d4 18309DE5 		ldr	r3, [sp, #24]
 2476 00d8 041083E2 		add	r1, r3, #4
 2477              	.LVL260:
 2478              		.loc 1 292 0
 2479 00dc 940202E0 		mul	r2, r4, r2
 2480 00e0 0221A0E1 		lsl	r2, r2, #2
 2481              	.LVL261:
 2482 00e4 023083E0 		add	r3, r3, r2
 293:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     while (old_state_start != old_state_end) {
 2483              		.loc 1 293 0
 2484 00e8 030051E1 		cmp	r1, r3
 2485 00ec 0200000A 		beq	.L182
 2486 00f0 042042E2 		sub	r2, r2, #4
 2487              	.LVL262:
 2488 00f4 18009DE5 		ldr	r0, [sp, #24]
 2489              	.LVL263:
 2490 00f8 FEFFFFEB 		bl	memmove
 2491              	.LVL264:
 2492              	.L182:
 2493              	.LBE613:
 2494              	.LBB614:
 2495              	.LBB615:
 294:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *new_state_start++ = *old_state_start++;
 295:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 296:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 297:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 298:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Note: no need to clear the latest activation, matmul is not accumulative.
 299:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 300:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Compute conv1d(inputs, weights_feature).
 301:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // The activation_state's rightmost column is used to save current cycle
 302:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // activation. This is achieved by starting at state_ptr[memory_size - 1] and
 303:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // having the stride equal to memory_size.
 304:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 305:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Perform batched matrix vector multiply operation:
 306:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   {
 307:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const float* matrix = weights_feature_ptr;
 308:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const float* vector = input_ptr;
 309:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* result = &state_ptr[memory_size - 1];
 310:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* result_in_batch = result;
 311:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int i = 0; i < batch_size; ++i) {
 2496              		.loc 1 311 0
 2497 00fc 00309DE5 		ldr	r3, [sp]
 2498              	.LBE615:
 309:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* result_in_batch = result;
 2499              		.loc 1 309 0
 2500 0100 079144E2 		sub	r9, r4, #-1073741823
 2501 0104 0991A0E1 		lsl	r9, r9, #2
 2502              	.LBB627:
 2503              		.loc 1 311 0
 2504 0108 000053E3 		cmp	r3, #0
 2505              	.LBE627:
 309:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* result_in_batch = result;
 2506              		.loc 1 309 0
 2507 010c 18309DE5 		ldr	r3, [sp, #24]
 2508 0110 093083E0 		add	r3, r3, r9
 2509 0114 04308DE5 		str	r3, [sp, #4]
 2510              	.LVL265:
 2511              	.LBB628:
 2512              		.loc 1 311 0
 2513 0118 590100DA 		ble	.L265
 2514 011c 24309DE5 		ldr	r3, [sp, #36]
 2515              	.LVL266:
 2516 0120 049089E2 		add	r9, r9, #4
 2517 0124 000053E3 		cmp	r3, #0
 2518 0128 790100DA 		ble	.L183
 2519 012c 990302E0 		mul	r2, r9, r3
 2520 0130 09E046E2 		sub	lr, r6, #9
 2521 0134 07E0CEE3 		bic	lr, lr, #7
 2522              		.loc 1 311 0 is_stmt 0 discriminator 1
 2523 0138 0380A0E1 		mov	r8, r3
 2524              	.LVL267:
 2525 013c 08E08EE2 		add	lr, lr, #8
 2526 0140 2C508DE5 		str	r5, [sp, #44]
 2527 0144 0010A0E3 		mov	r1, #0
 2528 0148 34408DE5 		str	r4, [sp, #52]
 2529 014c 14208DE5 		str	r2, [sp, #20]
 2530 0150 0621A0E1 		lsl	r2, r6, #2
 2531 0154 08108DE5 		str	r1, [sp, #8]
 2532 0158 02A0A0E1 		mov	r10, r2
 2533              	.LVL268:
 2534              	.L191:
 2535 015c 0C709DE5 		ldr	r7, [sp, #12]
 2536 0160 0040A0E3 		mov	r4, #0
 2537 0164 04509DE5 		ldr	r5, [sp, #4]
 2538              	.LVL269:
 2539              	.L189:
 2540              	.LBB616:
 2541              	.LBB617:
 2542              	.LBB618:
 2543              	.LBB619:
 312:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       const float* matrix_ptr = matrix;
 313:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int j = 0; j < num_filters; ++j) {
 314:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         float dot_prod = 0.0f;
 315:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         const float* vector_in_batch = vector + i * input_size;
 316:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         for (int k = 0; k < input_size; ++k) {
 2544              		.loc 1 316 0 is_stmt 1
 2545 0168 000056E3 		cmp	r6, #0
 2546              	.LBE619:
 314:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         const float* vector_in_batch = vector + i * input_size;
 2547              		.loc 1 314 0
 2548 016c FB7ADFED 		vldr.32	s15, .L268
 2549              	.LBB620:
 2550              		.loc 1 316 0
 2551 0170 2D0000DA 		ble	.L184
 2552 0174 080056E3 		cmp	r6, #8
 2553 0178 3D0100DA 		ble	.L233
 2554 017c 203087E2 		add	r3, r7, #32
 2555 0180 20208BE2 		add	r2, fp, #32
 2556 0184 0010A0E3 		mov	r1, #0
 2557              	.LVL270:
 2558              	.L186:
 317:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod += *matrix_ptr++ * *vector_in_batch++;
 2559              		.loc 1 317 0 discriminator 2
 2560 0188 085A53ED 		vldr.32	s11, [r3, #-32]
 2561 018c 081081E2 		add	r1, r1, #8
 2562              	.LVL271:
 2563 0190 086A12ED 		vldr.32	s12, [r2, #-32]
 2564 0194 0E0051E1 		cmp	r1, lr
 2565 0198 076A53ED 		vldr.32	s13, [r3, #-28]
 2566 019c 0300A0E1 		mov	r0, r3
 2567 01a0 077A12ED 		vldr.32	s14, [r2, #-28]
 2568 01a4 02C0A0E1 		mov	ip, r2
 2569 01a8 061A53ED 		vldr.32	s3, [r3, #-24]
 2570 01ac 202082E2 		add	r2, r2, #32
 2571 01b0 867A45EE 		vmla.f32	s15, s11, s12
 2572              	.LVL272:
 2573 01b4 0E2A12ED 		vldr.32	s4, [r2, #-56]
 2574 01b8 052A53ED 		vldr.32	s5, [r3, #-20]
 2575 01bc 0D3A12ED 		vldr.32	s6, [r2, #-52]
 2576 01c0 043A53ED 		vldr.32	s7, [r3, #-16]
 2577 01c4 0C4A12ED 		vldr.32	s8, [r2, #-48]
 2578 01c8 034A53ED 		vldr.32	s9, [r3, #-12]
 2579 01cc 877A46EE 		vmla.f32	s15, s13, s14
 2580              	.LVL273:
 2581 01d0 0B5A12ED 		vldr.32	s10, [r2, #-44]
 2582 01d4 025A53ED 		vldr.32	s11, [r3, #-8]
 2583 01d8 0A6A12ED 		vldr.32	s12, [r2, #-40]
 2584 01dc 016A53ED 		vldr.32	s13, [r3, #-4]
 2585 01e0 097A12ED 		vldr.32	s14, [r2, #-36]
 2586 01e4 3CF0D3F5 		pld	[r3, #60]
 2587 01e8 203083E2 		add	r3, r3, #32
 2588              	.LVL274:
 2589 01ec 827A41EE 		vmla.f32	s15, s3, s4
 2590              	.LVL275:
 2591 01f0 837A42EE 		vmla.f32	s15, s5, s6
 2592              	.LVL276:
 2593 01f4 847A43EE 		vmla.f32	s15, s7, s8
 2594              	.LVL277:
 2595 01f8 857A44EE 		vmla.f32	s15, s9, s10
 2596              	.LVL278:
 2597 01fc 867A45EE 		vmla.f32	s15, s11, s12
 2598              	.LVL279:
 2599 0200 877A46EE 		vmla.f32	s15, s13, s14
 2600              	.LVL280:
 2601 0204 DFFFFF1A 		bne	.L186
 2602              		.loc 1 317 0 is_stmt 0
 2603 0208 0C20A0E1 		mov	r2, ip
 2604 020c 0030A0E1 		mov	r3, r0
 2605              	.LVL281:
 2606              	.L188:
 2607 0210 016AF3EC 		vldmia.32	r3!, {s13}
 2608              	.LVL282:
 316:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod += *matrix_ptr++ * *vector_in_batch++;
 2609              		.loc 1 316 0 is_stmt 1
 2610 0214 011081E2 		add	r1, r1, #1
 2611              	.LVL283:
 2612              		.loc 1 317 0
 2613 0218 017AB2EC 		vldmia.32	r2!, {s14}
 2614              	.LVL284:
 316:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod += *matrix_ptr++ * *vector_in_batch++;
 2615              		.loc 1 316 0
 2616 021c 010056E1 		cmp	r6, r1
 2617              		.loc 1 317 0
 2618 0220 877A46EE 		vmla.f32	s15, s13, s14
 2619              	.LVL285:
 316:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod += *matrix_ptr++ * *vector_in_batch++;
 2620              		.loc 1 316 0
 2621 0224 F9FFFFCA 		bgt	.L188
 2622 0228 0A7087E0 		add	r7, r7, r10
 2623              	.LVL286:
 2624              	.L184:
 2625              	.LBE620:
 2626              	.LBE618:
 313:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         float dot_prod = 0.0f;
 2627              		.loc 1 313 0 discriminator 2
 2628 022c 014084E2 		add	r4, r4, #1
 2629              	.LVL287:
 2630              	.LBB622:
 318:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         }
 319:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *result_in_batch = dot_prod;
 2631              		.loc 1 319 0 discriminator 2
 2632 0230 007AC5ED 		vstr.32	s15, [r5]
 2633              	.LBE622:
 313:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         float dot_prod = 0.0f;
 2634              		.loc 1 313 0 discriminator 2
 2635 0234 040058E1 		cmp	r8, r4
 2636              	.LBB623:
 320:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         result_in_batch += memory_size;
 2637              		.loc 1 320 0 discriminator 2
 2638 0238 095085E0 		add	r5, r5, r9
 2639              	.LVL288:
 2640              	.LBE623:
 313:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         float dot_prod = 0.0f;
 2641              		.loc 1 313 0 discriminator 2
 2642 023c C9FFFF1A 		bne	.L189
 2643 0240 04209DE5 		ldr	r2, [sp, #4]
 2644 0244 0AB08BE0 		add	fp, fp, r10
 2645 0248 14109DE5 		ldr	r1, [sp, #20]
 2646              	.LBE617:
 2647              	.LBE616:
 311:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       const float* matrix_ptr = matrix;
 2648              		.loc 1 311 0
 2649 024c 08309DE5 		ldr	r3, [sp, #8]
 2650 0250 012082E0 		add	r2, r2, r1
 2651 0254 04208DE5 		str	r2, [sp, #4]
 2652 0258 013083E2 		add	r3, r3, #1
 2653 025c 00209DE5 		ldr	r2, [sp]
 2654 0260 08308DE5 		str	r3, [sp, #8]
 2655              	.LVL289:
 2656 0264 030052E1 		cmp	r2, r3
 2657 0268 BBFFFF1A 		bne	.L191
 2658 026c 34409DE5 		ldr	r4, [sp, #52]
 2659              	.LVL290:
 2660              	.LBE628:
 2661              	.LBE614:
 2662              	.LBB630:
 2663              	.LBB631:
 2664              	.LBB632:
 2665              	.LBB633:
 2666              	.LBB634:
 208:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int j = 0; j < memory_size; ++j) {
 2667              		.loc 1 208 0
 2668 0270 00B0A0E3 		mov	fp, #0
 2669 0274 24A09DE5 		ldr	r10, [sp, #36]
 2670              	.LBE634:
 2671              	.LBE633:
 2672              	.LBE632:
 2673              	.LBE631:
 2674              	.LBE630:
 321:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 322:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 323:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 324:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 325:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   ApplyTimeWeightsBiasAndActivation(
 326:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       batch_size, memory_size, num_filters, num_units, rank, weights_time_ptr,
 327:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       bias_ptr, params->activation, state_ptr, scratch_ptr, output_ptr);
 2675              		.loc 1 327 0
 2676 0278 78109DE5 		ldr	r1, [sp, #120]
 2677 027c 2C509DE5 		ldr	r5, [sp, #44]
 2678 0280 09E044E2 		sub	lr, r4, #9
 2679 0284 07E0CEE3 		bic	lr, lr, #7
 2680 0288 940A03E0 		mul	r3, r4, r10
 2681              	.LVL291:
 2682 028c 0410D1E5 		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 2683 0290 0A21A0E1 		lsl	r2, r10, #2
 2684 0294 08E08EE2 		add	lr, lr, #8
 2685 0298 34508DE5 		str	r5, [sp, #52]
 2686              	.LVL292:
 2687 029c 2C108DE5 		str	r1, [sp, #44]
 2688              	.LVL293:
 2689 02a0 0331A0E1 		lsl	r3, r3, #2
 2690 02a4 18109DE5 		ldr	r1, [sp, #24]
 2691 02a8 14208DE5 		str	r2, [sp, #20]
 2692 02ac 18308DE5 		str	r3, [sp, #24]
 2693              	.LVL294:
 2694 02b0 30309DE5 		ldr	r3, [sp, #48]
 2695 02b4 04108DE5 		str	r1, [sp, #4]
 2696              	.LVL295:
 2697 02b8 08308DE5 		str	r3, [sp, #8]
 2698              	.LVL296:
 2699 02bc 0030A0E3 		mov	r3, #0
 2700 02c0 0C308DE5 		str	r3, [sp, #12]
 2701              	.LVL297:
 2702              	.L194:
 2703              	.LBB744:
 2704              	.LBB645:
 2705              	.LBB643:
 204:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const float* vector1_ptr = weights_time_ptr;
 2706              		.loc 1 204 0
 2707 02c4 08509DE5 		ldr	r5, [sp, #8]
 2708              	.LVL298:
 206:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int i = 0; i < num_filters; ++i) {
 2709              		.loc 1 206 0
 2710 02c8 0060A0E3 		mov	r6, #0
 2711 02cc 04809DE5 		ldr	r8, [sp, #4]
 2712              	.LVL299:
 2713 02d0 10709DE5 		ldr	r7, [sp, #16]
 2714              	.LVL300:
 2715              	.L192:
 2716              	.LBB641:
 2717              	.LBB638:
 2718              	.LBB635:
 209:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 2719              		.loc 1 209 0
 2720 02d4 000054E3 		cmp	r4, #0
 2721              	.LBE635:
 208:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int j = 0; j < memory_size; ++j) {
 2722              		.loc 1 208 0
 2723 02d8 00B085E5 		str	fp, [r5]	@ float
 2724              	.LVL301:
 2725              	.LBB636:
 209:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 2726              		.loc 1 209 0
 2727 02dc 300000DA 		ble	.L195
 2728 02e0 080054E3 		cmp	r4, #8
 2729 02e4 9D7ADFED 		vldr.32	s15, .L268
 2730 02e8 DD0000DA 		ble	.L234
 2731 02ec 203087E2 		add	r3, r7, #32
 2732 02f0 202088E2 		add	r2, r8, #32
 2733 02f4 0010A0E3 		mov	r1, #0
 2734              	.LVL302:
 2735              	.L197:
 210:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 2736              		.loc 1 210 0
 2737 02f8 085A53ED 		vldr.32	s11, [r3, #-32]
 2738 02fc 081081E2 		add	r1, r1, #8
 2739              	.LVL303:
 2740 0300 086A12ED 		vldr.32	s12, [r2, #-32]
 2741 0304 0E0051E1 		cmp	r1, lr
 2742 0308 076A52ED 		vldr.32	s13, [r2, #-28]
 2743 030c 0300A0E1 		mov	r0, r3
 2744 0310 077A13ED 		vldr.32	s14, [r3, #-28]
 2745 0314 02C0A0E1 		mov	ip, r2
 2746              	.LVL304:
 2747 0318 061A53ED 		vldr.32	s3, [r3, #-24]
 2748 031c 202082E2 		add	r2, r2, #32
 2749              	.LVL305:
 2750 0320 867A45EE 		vmla.f32	s15, s11, s12
 2751 0324 0E2A12ED 		vldr.32	s4, [r2, #-56]
 2752 0328 052A53ED 		vldr.32	s5, [r3, #-20]
 2753 032c 0D3A12ED 		vldr.32	s6, [r2, #-52]
 2754 0330 043A53ED 		vldr.32	s7, [r3, #-16]
 2755 0334 0C4A12ED 		vldr.32	s8, [r2, #-48]
 2756 0338 034A53ED 		vldr.32	s9, [r3, #-12]
 2757 033c 877A46EE 		vmla.f32	s15, s13, s14
 2758 0340 0B5A12ED 		vldr.32	s10, [r2, #-44]
 2759 0344 025A53ED 		vldr.32	s11, [r3, #-8]
 2760 0348 0A6A12ED 		vldr.32	s12, [r2, #-40]
 2761 034c 016A53ED 		vldr.32	s13, [r3, #-4]
 2762 0350 097A12ED 		vldr.32	s14, [r2, #-36]
 2763 0354 3CF0D3F5 		pld	[r3, #60]
 2764 0358 203083E2 		add	r3, r3, #32
 2765              	.LVL306:
 2766 035c 827A41EE 		vmla.f32	s15, s3, s4
 2767 0360 837A42EE 		vmla.f32	s15, s5, s6
 2768 0364 847A43EE 		vmla.f32	s15, s7, s8
 2769 0368 857A44EE 		vmla.f32	s15, s9, s10
 2770 036c 867A45EE 		vmla.f32	s15, s11, s12
 2771 0370 877A46EE 		vmla.f32	s15, s13, s14
 2772 0374 DFFFFF1A 		bne	.L197
 2773 0378 0C20A0E1 		mov	r2, ip
 2774 037c 0030A0E1 		mov	r3, r0
 2775              	.LVL307:
 2776              	.L199:
 2777 0380 016AF2EC 		vldmia.32	r2!, {s13}
 2778              	.LVL308:
 209:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 2779              		.loc 1 209 0
 2780 0384 011081E2 		add	r1, r1, #1
 2781              	.LVL309:
 210:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 2782              		.loc 1 210 0
 2783 0388 017AB3EC 		vldmia.32	r3!, {s14}
 2784              	.LVL310:
 209:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 2785              		.loc 1 209 0
 2786 038c 010054E1 		cmp	r4, r1
 210:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 2787              		.loc 1 210 0
 2788 0390 877A46EE 		vmla.f32	s15, s13, s14
 209:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 2789              		.loc 1 209 0
 2790 0394 F9FFFFCA 		bgt	.L199
 2791 0398 097087E0 		add	r7, r7, r9
 2792 039c 098088E0 		add	r8, r8, r9
 2793 03a0 007AC5ED 		vstr.32	s15, [r5]
 2794              	.LVL311:
 2795              	.L195:
 2796              	.LBE636:
 2797              	.LBE638:
 207:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *scratch_ptr_batch = 0.f;
 2798              		.loc 1 207 0
 2799 03a4 016086E2 		add	r6, r6, #1
 2800              	.LVL312:
 2801              	.LBB639:
 212:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 2802              		.loc 1 212 0
 2803 03a8 045085E2 		add	r5, r5, #4
 2804              	.LVL313:
 2805              	.LBE639:
 207:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *scratch_ptr_batch = 0.f;
 2806              		.loc 1 207 0
 2807 03ac 06005AE1 		cmp	r10, r6
 2808 03b0 C7FFFF1A 		bne	.L192
 2809 03b4 08209DE5 		ldr	r2, [sp, #8]
 2810 03b8 14109DE5 		ldr	r1, [sp, #20]
 2811              	.LBE641:
 2812              	.LBE643:
 202:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     // Perform batched vector dot product:
 2813              		.loc 1 202 0
 2814 03bc 0C309DE5 		ldr	r3, [sp, #12]
 2815 03c0 012082E0 		add	r2, r2, r1
 2816 03c4 08208DE5 		str	r2, [sp, #8]
 2817 03c8 013083E2 		add	r3, r3, #1
 2818 03cc 00209DE5 		ldr	r2, [sp]
 2819 03d0 0C308DE5 		str	r3, [sp, #12]
 2820              	.LVL314:
 2821 03d4 030052E1 		cmp	r2, r3
 2822 03d8 04309DE5 		ldr	r3, [sp, #4]
 2823              	.LVL315:
 2824 03dc 18209DE5 		ldr	r2, [sp, #24]
 2825 03e0 023083E0 		add	r3, r3, r2
 2826 03e4 04308DE5 		str	r3, [sp, #4]
 2827 03e8 B5FFFF1A 		bne	.L194
 2828 03ec 34509DE5 		ldr	r5, [sp, #52]
 2829              	.LVL316:
 2830              	.L193:
 2831              	.LBE645:
 2832              	.LBB646:
 217:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     // VectorBatchVectorAssign
 2833              		.loc 1 217 0
 2834 03f0 28309DE5 		ldr	r3, [sp, #40]
 2835 03f4 000053E3 		cmp	r3, #0
 2836 03f8 AD00000A 		beq	.L266
 2837              	.LVL317:
 2838 03fc 1C309DE5 		ldr	r3, [sp, #28]
 2839 0400 000053E3 		cmp	r3, #0
 2840 0404 6A0000DA 		ble	.L174
 2841 0408 0341A0E1 		lsl	r4, r3, #2
 2842 040c 00709DE5 		ldr	r7, [sp]
 2843 0410 20309DE5 		ldr	r3, [sp, #32]
 2844 0414 0060A0E3 		mov	r6, #0
 2845 0418 28809DE5 		ldr	r8, [sp, #40]
 2846              	.LVL318:
 2847              	.L205:
 2848 041c 0300A0E1 		mov	r0, r3
 2849              	.LBB647:
 219:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       float* output_data = output_ptr + i * num_units;
 2850              		.loc 1 219 0
 2851 0420 016086E2 		add	r6, r6, #1
 2852              	.LVL319:
 2853 0424 0420A0E1 		mov	r2, r4
 2854 0428 0810A0E1 		mov	r1, r8
 2855 042c FEFFFFEB 		bl	memmove
 2856              	.LVL320:
 2857 0430 060057E1 		cmp	r7, r6
 2858 0434 043080E0 		add	r3, r0, r4
 2859 0438 F7FFFF1A 		bne	.L205
 2860              	.LVL321:
 2861              	.L204:
 2862 043c 24309DE5 		ldr	r3, [sp, #36]
 2863 0440 090045E2 		sub	r0, r5, #9
 2864 0444 30909DE5 		ldr	r9, [sp, #48]
 2865 0448 0700C0E3 		bic	r0, r0, #7
 2866 044c 20A09DE5 		ldr	r10, [sp, #32]
 2867 0450 0571A0E1 		lsl	r7, r5, #2
 2868 0454 080080E2 		add	r0, r0, #8
 2869 0458 03B1A0E1 		lsl	fp, r3, #2
 2870              	.LBE647:
 217:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     // VectorBatchVectorAssign
 2871              		.loc 1 217 0
 2872 045c 0080A0E3 		mov	r8, #0
 2873 0460 04B08DE5 		str	fp, [sp, #4]
 2874 0464 1CB09DE5 		ldr	fp, [sp, #28]
 2875              	.LVL322:
 2876              	.L208:
 2877              	.LBE646:
 2878              	.LBB654:
 2879              	.LBB655:
 236:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 2880              		.loc 1 236 0
 2881 0468 0960A0E1 		mov	r6, r9
 2882              	.LVL323:
 2883 046c 0AC0A0E1 		mov	ip, r10
 2884 0470 00E0A0E3 		mov	lr, #0
 2885              	.LVL324:
 2886              	.L206:
 2887              	.LBB656:
 2888              	.LBB657:
 240:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         output_ptr_batch[i] += *scratch_ptr_batch++;
 2889              		.loc 1 240 0
 2890 0474 000055E3 		cmp	r5, #0
 2891 0478 220000DA 		ble	.L209
 2892 047c 080055E3 		cmp	r5, #8
 2893 0480 007ADCED 		vldr.32	s15, [ip]
 2894 0484 730000DA 		ble	.L235
 2895 0488 203086E2 		add	r3, r6, #32
 2896 048c 0020A0E3 		mov	r2, #0
 2897              	.LVL325:
 2898              	.L211:
 241:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 2899              		.loc 1 241 0
 2900 0490 086A53ED 		vldr.32	s13, [r3, #-32]
 2901 0494 082082E2 		add	r2, r2, #8
 2902              	.LVL326:
 2903 0498 077A13ED 		vldr.32	s14, [r3, #-28]
 2904 049c 000052E1 		cmp	r2, r0
 2905 04a0 064A53ED 		vldr.32	s9, [r3, #-24]
 2906 04a4 0310A0E1 		mov	r1, r3
 2907              	.LVL327:
 2908 04a8 055A13ED 		vldr.32	s10, [r3, #-20]
 2909 04ac A67A77EE 		vadd.f32	s15, s15, s13
 2910 04b0 045A53ED 		vldr.32	s11, [r3, #-16]
 2911 04b4 036A13ED 		vldr.32	s12, [r3, #-12]
 2912 04b8 026A53ED 		vldr.32	s13, [r3, #-8]
 2913 04bc 877A77EE 		vadd.f32	s15, s15, s14
 2914 04c0 017A13ED 		vldr.32	s14, [r3, #-4]
 2915 04c4 68F0D3F5 		pld	[r3, #104]
 2916 04c8 203083E2 		add	r3, r3, #32
 2917              	.LVL328:
 2918 04cc A47A77EE 		vadd.f32	s15, s15, s9
 2919 04d0 857A77EE 		vadd.f32	s15, s15, s10
 2920 04d4 A57A77EE 		vadd.f32	s15, s15, s11
 2921 04d8 867A77EE 		vadd.f32	s15, s15, s12
 2922 04dc A67A77EE 		vadd.f32	s15, s15, s13
 2923 04e0 877A77EE 		vadd.f32	s15, s15, s14
 2924 04e4 E9FFFF1A 		bne	.L211
 2925 04e8 0130A0E1 		mov	r3, r1
 2926              	.LVL329:
 2927              	.L213:
 2928 04ec 017AB3EC 		vldmia.32	r3!, {s14}
 2929              	.LVL330:
 240:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         output_ptr_batch[i] += *scratch_ptr_batch++;
 2930              		.loc 1 240 0
 2931 04f0 012082E2 		add	r2, r2, #1
 2932              	.LVL331:
 2933 04f4 020055E1 		cmp	r5, r2
 241:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       }
 2934              		.loc 1 241 0
 2935 04f8 877A77EE 		vadd.f32	s15, s15, s14
 240:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         output_ptr_batch[i] += *scratch_ptr_batch++;
 2936              		.loc 1 240 0
 2937 04fc FAFFFFCA 		bgt	.L213
 2938 0500 076086E0 		add	r6, r6, r7
 2939 0504 007ACCED 		vstr.32	s15, [ip]
 2940              	.LVL332:
 2941              	.L209:
 2942              	.LBE657:
 239:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       for (int j = 0; j < rank; j++) {
 2943              		.loc 1 239 0
 2944 0508 01E08EE2 		add	lr, lr, #1
 2945              	.LVL333:
 2946 050c 04C08CE2 		add	ip, ip, #4
 2947 0510 0E005BE1 		cmp	fp, lr
 2948 0514 D6FFFF1A 		bne	.L206
 2949 0518 04309DE5 		ldr	r3, [sp, #4]
 2950              	.LBE656:
 2951              	.LBE655:
 234:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* output_ptr_batch = output_ptr + b * num_units;
 2952              		.loc 1 234 0
 2953 051c 018088E2 		add	r8, r8, #1
 2954              	.LVL334:
 2955 0520 04A08AE0 		add	r10, r10, r4
 2956 0524 039089E0 		add	r9, r9, r3
 2957 0528 00309DE5 		ldr	r3, [sp]
 2958 052c 080053E1 		cmp	r3, r8
 2959 0530 CCFFFFCA 		bgt	.L208
 2960 0534 20A09DE5 		ldr	r10, [sp, #32]
 2961 0538 03B0A0E1 		mov	fp, r3
 2962              	.LVL335:
 2963              	.LBE654:
 2964              	.LBB661:
 2965              	.LBB662:
 2966              	.LBB663:
 2967              	.LBB664:
 2968              	.LBB665:
 2969              		.file 5 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** /* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** 
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** #ifndef TENSORFLOW_LITE_MICRO_KERNELS_ACTIVATION_UTILS_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** #define TENSORFLOW_LITE_MICRO_KERNELS_ACTIVATION_UTILS_H_
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** 
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** #include <algorithm>
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** #include <cmath>
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** 
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** #include "tensorflow/lite/kernels/internal/max.h"
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** #include "tensorflow/lite/kernels/internal/min.h"
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** namespace tflite {
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** namespace ops {
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** namespace micro {
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** 
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** // Returns the floating point value for a fused activation:
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h **** inline float ActivationValFloat(TfLiteFusedActivation act, float a) {
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****   switch (act) {
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****     case kTfLiteActNone:
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****       return a;
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****     case kTfLiteActRelu:
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****       return TfLiteMax(0.0f, a);
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****     case kTfLiteActReluN1To1:
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****       return TfLiteMax(-1.0f, TfLiteMin(a, 1.0f));
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****     case kTfLiteActRelu6:
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****       return TfLiteMax(0.0f, TfLiteMin(a, 6.0f));
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****     case kTfLiteActTanh:
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****       return std::tanh(a);
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****     case kTfLiteActSignBit:
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****       return std::signbit(a);
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****     case kTfLiteActSigmoid:
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****       return 1.0f / (1.0f + std::exp(-a));
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****   }
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****   return 0.0f;  // To indicate an unsupported activation (i.e. when a new fused
 2970              		.loc 5 49 0
 2971 053c 078ADFED 		vldr.32	s17, .L268
 2972              	.LBE665:
 2973              	.LBE664:
 2974              	.LBE663:
 2975              	.LBE662:
 2976              	.LBE661:
 2977              	.LBB734:
 234:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* output_ptr_batch = output_ptr + b * num_units;
 2978              		.loc 1 234 0
 2979 0540 0050A0E3 		mov	r5, #0
 2980 0544 1C909DE5 		ldr	r9, [sp, #28]
 2981 0548 2C809DE5 		ldr	r8, [sp, #44]
 2982              	.LVL336:
 2983              	.LBE734:
 2984              	.LBB735:
 2985              	.LBB731:
 2986              	.LBB727:
 2987              	.LBB713:
 2988              	.LBB699:
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****   }
 2989              		.loc 5 47 0
 2990 054c 008AB7EE 		vmov.f32	s16, #1.0e+0
 2991              	.LVL337:
 2992              	.L216:
 2993              	.LBE699:
 2994              	.LBE713:
 2995              	.LBE727:
 248:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     for (int i = 0; i < num_units; ++i) {
 2996              		.loc 1 248 0
 2997 0550 0A70A0E1 		mov	r7, r10
 2998              	.LVL338:
 2999 0554 0060A0E3 		mov	r6, #0
 3000              	.LBB728:
 3001              	.LBB714:
 3002              	.LBB700:
 3003              	.LBB666:
 3004              	.LBB667:
 3005              	.LBB668:
 3006              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef _GLIBCXX_CMATH
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #define _GLIBCXX_CMATH 1
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef abs
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR double
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(double __x)
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabs(__x); }
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(float __x)
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsf(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(long double __x)
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsl(__x); }
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     abs(_Tp __x)
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_fabs(__x); }
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acos;
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acos(float __x)
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acosf(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acos(long double __x)
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acosl(__x); }
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     acos(_Tp __x)
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_acos(__x); }
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asin;
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asin(float __x)
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinf(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asin(long double __x)
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinl(__x); }
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     asin(_Tp __x)
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_asin(__x); }
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atan;
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan(float __x)
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanf(__x); }
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan(long double __x)
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanl(__x); }
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     atan(_Tp __x)
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_atan(__x); }
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atan2;
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan2(float __y, float __x)
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan2(long double __y, long double __x)
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     atan2(_Tp __y, _Up __x)
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return atan2(__type(__y), __type(__x));
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ceil;
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ceil(float __x)
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ceilf(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ceil(long double __x)
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ceill(__x); }
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     ceil(_Tp __x)
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_ceil(__x); }
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cos;
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cos(float __x)
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cosf(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cos(long double __x)
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cosl(__x); }
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     cos(_Tp __x)
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_cos(__x); }
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cosh;
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cosh(float __x)
 227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_coshf(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cosh(long double __x)
 231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_coshl(__x); }
 232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     cosh(_Tp __x)
 239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_cosh(__x); }
 240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp;
 242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp(float __x)
 246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expf(__x); }
 247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp(long double __x)
 250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expl(__x); }
 251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     exp(_Tp __x)
 258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_exp(__x); }
 259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fabs;
 261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fabs(float __x)
 265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsf(__x); }
 266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fabs(long double __x)
 269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsl(__x); }
 270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fabs(_Tp __x)
 277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_fabs(__x); }
 278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::floor;
 280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   floor(float __x)
 284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_floorf(__x); }
 285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   floor(long double __x)
 288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_floorl(__x); }
 289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     floor(_Tp __x)
 296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_floor(__x); }
 297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmod;
 299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmod(float __x, float __y)
 303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmod(long double __x, long double __y)
 307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fmod(_Tp __x, _Up __y)
 314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fmod(__type(__x), __type(__y));
 317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::frexp;
 320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline float
 323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   frexp(float __x, int* __exp)
 324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline long double
 327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   frexp(long double __x, int* __exp)
 328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     frexp(_Tp __x, int* __exp)
 336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ldexp;
 339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ldexp(float __x, int __exp)
 343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ldexp(long double __x, int __exp)
 347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     ldexp(_Tp __x, int __exp)
 355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log;
 358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log(float __x)
 362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_logf(__x); }
 363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log(long double __x)
 366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_logl(__x); }
 367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     log(_Tp __x)
 374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_log(__x); }
 375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log10;
 377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log10(float __x)
 381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log10f(__x); }
 382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log10(long double __x)
 385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log10l(__x); }
 386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     log10(_Tp __x)
 393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_log10(__x); }
 394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::modf;
 396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline float
 399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   modf(float __x, float* __iptr)
 400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline long double
 403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   modf(long double __x, long double* __iptr)
 404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::pow;
 408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(float __x, float __y)
 412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powf(__x, __y); }
 413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(long double __x, long double __y)
 416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powl(__x, __y); }
 417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if __cplusplus < 201103L
 419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline double
 422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(double __x, int __i)
 423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powi(__x, __i); }
 424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline float
 426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(float __x, int __n)
 427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powif(__x, __n); }
 428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline long double
 430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(long double __x, int __n)
 431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powil(__x, __n); }
 432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     pow(_Tp __x, _Up __y)
 439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return pow(__type(__x), __type(__y));
 442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::sin;
 445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sin(float __x)
 449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinf(__x); }
 450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sin(long double __x)
 453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinl(__x); }
 454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     sin(_Tp __x)
 461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_sin(__x); }
 462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::sinh;
 464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sinh(float __x)
 468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinhf(__x); }
 469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sinh(long double __x)
 472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinhl(__x); }
 473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 474:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 475:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 476:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 477:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 478:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     sinh(_Tp __x)
 480:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_sinh(__x); }
 481:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 482:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::sqrt;
 483:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 484:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 485:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 486:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sqrt(float __x)
 487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sqrtf(__x); }
 488:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 489:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 490:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sqrt(long double __x)
 491:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sqrtl(__x); }
 492:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 493:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 494:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 495:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 496:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 497:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 498:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     sqrt(_Tp __x)
 499:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_sqrt(__x); }
 500:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 501:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tan;
 502:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 503:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 504:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 505:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tan(float __x)
 506:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanf(__x); }
 507:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 508:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 509:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tan(long double __x)
 510:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanl(__x); }
 511:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 512:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 513:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 514:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 515:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 516:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 517:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     tan(_Tp __x)
 518:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_tan(__x); }
 519:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 520:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tanh;
 521:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 522:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 523:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 524:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tanh(float __x)
 525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanhf(__x); }
 526:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 527:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 528:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tanh(long double __x)
 529:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanhl(__x); }
 530:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 531:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 532:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 533:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 534:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 535:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 536:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     tanh(_Tp __x)
 537:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_tanh(__x); }
 538:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 539:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_END_NAMESPACE_VERSION
 540:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** } // namespace
 541:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 542:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if _GLIBCXX_USE_C99_MATH
 543:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 544:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 545:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // These are possible macros imported from C99-land.
 546:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fpclassify
 547:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isfinite
 548:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isinf
 549:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isnan
 550:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isnormal
 551:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef signbit
 552:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isgreater
 553:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isgreaterequal
 554:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isless
 555:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef islessequal
 556:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef islessgreater
 557:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isunordered
 558:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 559:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
 560:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
 561:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 562:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 563:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if __cplusplus >= 201103L
 564:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 565:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 566:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
 567:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fpclassify(float __x)
 568:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 569:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 570:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 571:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
 572:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fpclassify(double __x)
 573:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 574:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 575:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 576:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
 577:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fpclassify(long double __x)
 578:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 579:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 580:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 581:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 582:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 583:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 584:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 585:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               int>::__type
 586:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fpclassify(_Tp __x)
 587:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 588:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 589:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 590:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 591:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 592:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isfinite(float __x)
 593:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isfinite(__x); }
 594:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 595:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 596:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isfinite(double __x)
 597:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isfinite(__x); }
 598:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 599:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 600:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isfinite(long double __x)
 601:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isfinite(__x); }
 602:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 603:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 604:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 605:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 606:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 607:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 608:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isfinite(_Tp __x)
 609:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return true; }
 610:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 611:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 612:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 613:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 614:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isinf(float __x)
 615:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isinf(__x); }
 616:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 617:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 618:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 619:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::isinf;
 620:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #else
 621:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 622:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isinf(double __x)
 623:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isinf(__x); }
 624:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 625:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 626:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 627:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isinf(long double __x)
 628:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isinf(__x); }
 629:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 630:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 631:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 632:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 633:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 634:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 635:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isinf(_Tp __x)
 636:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return false; }
 637:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 638:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 639:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 640:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 641:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnan(float __x)
 642:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnan(__x); }
 643:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 644:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 645:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 646:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::isnan;
 647:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #else
 648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 649:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnan(double __x)
 650:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnan(__x); }
 651:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 652:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 653:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnan(long double __x)
 655:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnan(__x); }
 656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 657:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 658:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 660:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 661:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 662:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnan(_Tp __x)
 663:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return false; }
 664:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 665:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 666:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 667:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnormal(float __x)
 669:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnormal(__x); }
 670:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 671:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 672:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnormal(double __x)
 673:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnormal(__x); }
 674:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 675:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 676:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnormal(long double __x)
 677:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnormal(__x); }
 678:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 679:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 680:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 681:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 682:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 683:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 684:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnormal(_Tp __x)
 685:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __x != 0 ? true : false; }
 686:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 687:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 689:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 690:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 691:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   signbit(float __x)
 692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_signbit(__x); }
 693:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 694:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 695:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   signbit(double __x)
 696:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_signbit(__x); }
 697:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 698:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 699:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   signbit(long double __x)
 700:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_signbit(__x); }
 701:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 702:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 703:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 704:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 705:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 706:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 707:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     signbit(_Tp __x)
 708:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __x < 0 ? true : false; }
 709:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 710:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 711:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 712:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 713:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreater(float __x, float __y)
 714:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 715:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 716:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 717:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreater(double __x, double __y)
 718:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 719:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 720:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 721:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreater(long double __x, long double __y)
 722:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 723:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 724:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 725:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 726:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 727:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 728:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 729:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 730:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreater(_Tp __x, _Up __y)
 731:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 732:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 733:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 734:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 735:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 736:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 737:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 738:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 739:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreaterequal(float __x, float __y)
 740:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 741:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 742:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 743:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreaterequal(double __x, double __y)
 744:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 745:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 746:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 747:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreaterequal(long double __x, long double __y)
 748:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 749:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 750:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 751:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 752:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 753:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 754:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 755:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 756:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreaterequal(_Tp __x, _Up __y)
 757:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 758:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 759:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 760:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 761:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 762:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 763:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 764:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 765:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isless(float __x, float __y)
 766:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isless(__x, __y); }
 767:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 768:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 769:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isless(double __x, double __y)
 770:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isless(__x, __y); }
 771:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 772:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 773:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isless(long double __x, long double __y)
 774:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isless(__x, __y); }
 775:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 776:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 777:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 778:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 779:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 780:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 781:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 782:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isless(_Tp __x, _Up __y)
 783:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 784:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 785:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isless(__type(__x), __type(__y));
 786:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 787:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 788:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 789:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 790:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 791:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessequal(float __x, float __y)
 792:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 793:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 794:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 795:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessequal(double __x, double __y)
 796:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 797:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 798:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 799:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessequal(long double __x, long double __y)
 800:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 801:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 802:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 803:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 804:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 805:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 806:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 807:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 808:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessequal(_Tp __x, _Up __y)
 809:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 810:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 811:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 812:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 813:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 814:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 815:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 816:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 817:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessgreater(float __x, float __y)
 818:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 819:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 820:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 821:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessgreater(double __x, double __y)
 822:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 823:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 824:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 825:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessgreater(long double __x, long double __y)
 826:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 827:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 828:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 829:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 830:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 831:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 832:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 833:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 834:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessgreater(_Tp __x, _Up __y)
 835:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 836:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 837:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 838:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 839:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 840:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 841:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 842:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 843:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isunordered(float __x, float __y)
 844:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 845:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 846:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 847:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isunordered(double __x, double __y)
 848:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 849:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 850:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 851:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isunordered(long double __x, long double __y)
 852:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 853:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 854:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 855:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 856:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 857:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 858:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 859:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 860:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isunordered(_Tp __x, _Up __y)
 861:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 862:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 863:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 864:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 865:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 866:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 867:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #else
 868:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 869:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 870:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 871:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 872:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fpclassify(_Tp __f)
 873:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 874:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 875:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 876:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 877:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 878:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 879:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 880:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 881:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 882:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isfinite(_Tp __f)
 883:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 884:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 885:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isfinite(__type(__f));
 886:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 887:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 888:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 889:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 890:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 891:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isinf(_Tp __f)
 892:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 893:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 894:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isinf(__type(__f));
 895:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 896:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 897:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 898:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 899:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 900:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnan(_Tp __f)
 901:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 902:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 903:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isnan(__type(__f));
 904:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 905:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 906:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 907:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 908:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 909:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnormal(_Tp __f)
 910:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 911:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 912:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isnormal(__type(__f));
 913:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 914:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 915:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 916:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 917:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 918:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     signbit(_Tp __f)
 919:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 920:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 921:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_signbit(__type(__f));
 922:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 923:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 924:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 925:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 926:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 927:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreater(_Tp __f1, _Tp __f2)
 928:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 929:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 930:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 931:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 932:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 933:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 934:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 935:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 936:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 937:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 938:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 939:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 940:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 941:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 942:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 943:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 944:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 945:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isless(_Tp __f1, _Tp __f2)
 946:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 947:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 948:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 949:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 950:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 951:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 952:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 953:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 954:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessequal(_Tp __f1, _Tp __f2)
 955:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 956:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 957:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 958:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 959:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 960:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 961:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 962:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 963:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 964:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 965:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 966:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 967:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 968:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 969:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 970:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 971:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 972:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isunordered(_Tp __f1, _Tp __f2)
 973:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 974:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 975:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 976:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 977:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 978:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 979:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 980:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_END_NAMESPACE_VERSION
 981:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** } // namespace
 982:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 983:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 984:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 985:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 986:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if __cplusplus >= 201103L
 987:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 988:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 989:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 990:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acosh
 991:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acoshf
 992:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acoshl
 993:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asinh
 994:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asinhf
 995:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asinhl
 996:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atanh
 997:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atanhf
 998:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atanhl
 999:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cbrt
1000:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cbrtf
1001:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cbrtl
1002:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef copysign
1003:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef copysignf
1004:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef copysignl
1005:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erf
1006:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erff
1007:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfl
1008:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfc
1009:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfcf
1010:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfcl
1011:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp2
1012:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp2f
1013:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp2l
1014:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef expm1
1015:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef expm1f
1016:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef expm1l
1017:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fdim
1018:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fdimf
1019:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fdiml
1020:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fma
1021:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmaf
1022:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmal
1023:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmax
1024:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmaxf
1025:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmaxl
1026:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmin
1027:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fminf
1028:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fminl
1029:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef hypot
1030:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef hypotf
1031:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef hypotl
1032:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ilogb
1033:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ilogbf
1034:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ilogbl
1035:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lgamma
1036:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lgammaf
1037:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lgammal
1038:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llrint
1039:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llrintf
1040:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llrintl
1041:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llround
1042:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llroundf
1043:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llroundl
1044:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log1p
1045:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log1pf
1046:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log1pl
1047:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log2
1048:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log2f
1049:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log2l
1050:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef logb
1051:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef logbf
1052:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef logbl
1053:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lrint
1054:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lrintf
1055:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lrintl
1056:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lround
1057:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lroundf
1058:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lroundl
1059:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nan
1060:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nanf
1061:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nanl
1062:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nearbyint
1063:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nearbyintf
1064:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nearbyintl
1065:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nextafter
1066:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nextafterf
1067:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nextafterl
1068:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nexttoward
1069:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nexttowardf
1070:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nexttowardl
1071:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remainder
1072:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remainderf
1073:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remainderl
1074:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remquo
1075:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remquof
1076:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remquol
1077:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef rint
1078:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef rintf
1079:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef rintl
1080:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef round
1081:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef roundf
1082:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef roundl
1083:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbln
1084:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalblnf
1085:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalblnl
1086:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbn
1087:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbnf
1088:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbnl
1089:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tgamma
1090:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tgammaf
1091:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tgammal
1092:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef trunc
1093:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef truncf
1094:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef truncl
1095:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1096:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
1097:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
1098:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
1099:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // types
1101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::double_t;
1102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::float_t;
1103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // functions
1105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acosh;
1106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acoshf;
1107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acoshl;
1108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asinh;
1110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asinhf;
1111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asinhl;
1112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atanh;
1114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atanhf;
1115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atanhl;
1116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cbrt;
1118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cbrtf;
1119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cbrtl;
1120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::copysign;
1122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::copysignf;
1123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::copysignl;
1124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erf;
1126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erff;
1127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfl;
1128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfc;
1130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfcf;
1131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfcl;
1132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp2;
1134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp2f;
1135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp2l;
1136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::expm1;
1138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::expm1f;
1139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::expm1l;
1140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fdim;
1142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fdimf;
1143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fdiml;
1144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fma;
1146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmaf;
1147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmal;
1148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmax;
1150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmaxf;
1151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmaxl;
1152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmin;
1154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fminf;
1155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fminl;
1156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::hypot;
1158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::hypotf;
1159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::hypotl;
1160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ilogb;
1162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ilogbf;
1163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ilogbl;
1164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lgamma;
1166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lgammaf;
1167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lgammal;
1168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llrint;
1170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llrintf;
1171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llrintl;
1172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llround;
1174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llroundf;
1175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llroundl;
1176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log1p;
1178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log1pf;
1179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log1pl;
1180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log2;
1182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log2f;
1183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log2l;
1184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::logb;
1186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::logbf;
1187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::logbl;
1188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lrint;
1190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lrintf;
1191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lrintl;
1192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lround;
1194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lroundf;
1195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lroundl;
1196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nan;
1198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nanf;
1199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nanl;
1200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nearbyint;
1202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nearbyintf;
1203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nearbyintl;
1204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nextafter;
1206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nextafterf;
1207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nextafterl;
1208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nexttoward;
1210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nexttowardf;
1211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nexttowardl;
1212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remainder;
1214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remainderf;
1215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remainderl;
1216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remquo;
1218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remquof;
1219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remquol;
1220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::rint;
1222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::rintf;
1223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::rintl;
1224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::round;
1226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::roundf;
1227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::roundl;
1228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbln;
1230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalblnf;
1231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalblnl;
1232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbn;
1234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbnf;
1235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbnl;
1236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tgamma;
1238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tgammaf;
1239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tgammal;
1240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::trunc;
1242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::truncf;
1243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::truncl;
1244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   /// Additional overloads.
1246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acosh(float __x)
1249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acoshf(__x); }
1250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acosh(long double __x)
1253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acoshl(__x); }
1254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     acosh(_Tp __x)
1261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_acosh(__x); }
1262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asinh(float __x)
1267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinhf(__x); }
1268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asinh(long double __x)
1271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinhl(__x); }
1272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     asinh(_Tp __x)
1279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_asinh(__x); }
1280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atanh(float __x)
1285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanhf(__x); }
1286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atanh(long double __x)
1289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanhl(__x); }
1290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     atanh(_Tp __x)
1297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_atanh(__x); }
1298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cbrt(float __x)
1303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cbrtf(__x); }
1304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cbrt(long double __x)
1307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cbrtl(__x); }
1308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     cbrt(_Tp __x)
1315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_cbrt(__x); }
1316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   copysign(float __x, float __y)
1321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_copysignf(__x, __y); }
1322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   copysign(long double __x, long double __y)
1325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_copysignl(__x, __y); }
1326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     copysign(_Tp __x, _Up __y)
1332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return copysign(__type(__x), __type(__y));
1335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erf(float __x)
1341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erff(__x); }
1342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erf(long double __x)
1345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erfl(__x); }
1346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     erf(_Tp __x)
1353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_erf(__x); }
1354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erfc(float __x)
1359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erfcf(__x); }
1360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erfc(long double __x)
1363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erfcl(__x); }
1364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     erfc(_Tp __x)
1371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_erfc(__x); }
1372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp2(float __x)
1377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_exp2f(__x); }
1378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp2(long double __x)
1381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_exp2l(__x); }
1382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     exp2(_Tp __x)
1389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_exp2(__x); }
1390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   expm1(float __x)
1395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expm1f(__x); }
1396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   expm1(long double __x)
1399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expm1l(__x); }
1400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     expm1(_Tp __x)
1407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_expm1(__x); }
1408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fdim(float __x, float __y)
1413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fdimf(__x, __y); }
1414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fdim(long double __x, long double __y)
1417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fdiml(__x, __y); }
1418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fdim(_Tp __x, _Up __y)
1424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fdim(__type(__x), __type(__y));
1427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fma(float __x, float __y, float __z)
1433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fma(long double __x, long double __y, long double __z)
1437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmal(__x, __y, __z); }
1438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmax(float __x, float __y)
1453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmaxf(__x, __y); }
1454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmax(long double __x, long double __y)
1457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmaxl(__x, __y); }
1458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fmax(_Tp __x, _Up __y)
1464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fmax(__type(__x), __type(__y));
1467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmin(float __x, float __y)
1473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fminf(__x, __y); }
 3007              		.loc 6 1473 0
 3008 0558 089AB1EE 		vmov.f32	s18, #6.0e+0
 3009 055c 000000EA 		b	.L269
 3010              	.L270:
 3011              		.align	2
 3012              	.L268:
 3013 0560 00000000 		.word	0
 3014              	.L269:
 3015              	.LVL339:
 3016              	.L215:
 3017              	.LBE668:
 3018              	.LBE667:
 3019              	.LBE666:
 3020              	.LBE700:
 3021              	.LBE714:
 251:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       ++output_ptr_batch;
 3022              		.loc 1 251 0
 3023 0564 000A97ED 		vldr.32	s0, [r7]
 3024              	.LVL340:
 3025              	.LBB715:
 3026              	.LBB701:
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****     case kTfLiteActNone:
 3027              		.loc 5 33 0
 3028 0568 060058E3 		cmp	r8, #6
 3029 056c 08F19F97 		ldrls	pc, [pc, r8, asl #2]
 3030 0570 600000EA 		b	.L236
 3031              	.L219:
 3032 0574 94050000 		.word	.L217
 3033 0578 C8050000 		.word	.L254
 3034 057c 30060000 		.word	.L221
 3035 0580 C0050000 		.word	.L222
 3036 0584 90050000 		.word	.L223
 3037 0588 0C060000 		.word	.L224
 3038 058c E8050000 		.word	.L225
 3039              	.L223:
 3040              	.LVL341:
 3041              	.LBB671:
 3042              	.LBB672:
 525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 3043              		.loc 6 525 0
 3044 0590 FEFFFFEB 		bl	tanhf
 3045              	.LVL342:
 3046              	.L217:
 3047              	.LBE672:
 3048              	.LBE671:
 3049              	.LBE701:
 3050              	.LBE715:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3051              		.loc 1 249 0
 3052 0594 016086E2 		add	r6, r6, #1
 3053              	.LVL343:
 250:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           tflite::ops::micro::ActivationValFloat(activation, *output_ptr_batch);
 3054              		.loc 1 250 0
 3055 0598 010AA7EC 		vstmia.32	r7!, {s0}
 3056              	.LVL344:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3057              		.loc 1 249 0
 3058 059c 060059E1 		cmp	r9, r6
 3059 05a0 EFFFFF1A 		bne	.L215
 3060              	.L267:
 3061              	.LBE728:
 3062              	.LBE731:
 247:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* output_ptr_batch = output_ptr + b * num_units;
 3063              		.loc 1 247 0
 3064 05a4 015085E2 		add	r5, r5, #1
 3065              	.LVL345:
 3066 05a8 04A08AE0 		add	r10, r10, r4
 3067 05ac 05005BE1 		cmp	fp, r5
 3068 05b0 E6FFFFCA 		bgt	.L216
 3069              	.LVL346:
 3070              	.L174:
 3071              	.LBE735:
 3072              	.LBE744:
 328:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** }
 3073              		.loc 1 328 0
 3074 05b4 3CD08DE2 		add	sp, sp, #60
 3075              		.cfi_remember_state
 3076              		.cfi_def_cfa_offset 52
 3077              	.LVL347:
 3078              		@ sp needed
 3079 05b8 048BBDEC 		vldm	sp!, {d8-d9}
 3080              		.cfi_restore 82
 3081              		.cfi_restore 83
 3082              		.cfi_restore 80
 3083              		.cfi_restore 81
 3084              		.cfi_def_cfa_offset 36
 3085 05bc F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3086              	.LVL348:
 3087              	.L222:
 3088              		.cfi_restore_state
 3089              	.LBB745:
 3090              	.LBB736:
 3091              	.LBB732:
 3092              	.LBB729:
 3093              	.LBB716:
 3094              	.LBB702:
 3095              	.LBB673:
 3096              	.LBB670:
 3097              	.LBB669:
 3098              		.loc 6 1473 0
 3099 05c0 490AF0EE 		vmov.f32	s1, s18
 3100 05c4 FEFFFFEB 		bl	fminf
 3101              	.LVL349:
 3102              	.L254:
 3103              	.LBE669:
 3104              	.LBE670:
 3105              	.LBE673:
 3106              	.LBB674:
 3107              	.LBB675:
 3108              	.LBB676:
1453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 3109              		.loc 6 1453 0
 3110 05c8 400AF0EE 		vmov.f32	s1, s0
 3111              	.LBE676:
 3112              	.LBE675:
 3113              	.LBE674:
 3114              	.LBE702:
 3115              	.LBE716:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3116              		.loc 1 249 0
 3117 05cc 016086E2 		add	r6, r6, #1
 3118              	.LVL350:
 3119              	.LBB717:
 3120              	.LBB703:
 3121              	.LBB679:
 3122              	.LBB678:
 3123              	.LBB677:
1453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 3124              		.loc 6 1453 0
 3125 05d0 680AB0EE 		vmov.f32	s0, s17
 3126              	.LVL351:
 3127 05d4 FEFFFFEB 		bl	fmaxf
 3128              	.LVL352:
 3129              	.LBE677:
 3130              	.LBE678:
 3131              	.LBE679:
 3132              	.LBE703:
 3133              	.LBE717:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3134              		.loc 1 249 0
 3135 05d8 060059E1 		cmp	r9, r6
 250:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           tflite::ops::micro::ActivationValFloat(activation, *output_ptr_batch);
 3136              		.loc 1 250 0
 3137 05dc 010AA7EC 		vstmia.32	r7!, {s0}
 3138              	.LVL353:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3139              		.loc 1 249 0
 3140 05e0 DFFFFF1A 		bne	.L215
 3141 05e4 EEFFFFEA 		b	.L267
 3142              	.LVL354:
 3143              	.L225:
 3144              	.LBB718:
 3145              	.LBB704:
 3146              	.LBB680:
 3147              	.LBB681:
 246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 3148              		.loc 6 246 0
 3149 05e8 400AB1EE 		vneg.f32	s0, s0
 3150              	.LVL355:
 3151              	.LBE681:
 3152              	.LBE680:
 3153              	.LBE704:
 3154              	.LBE718:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3155              		.loc 1 249 0
 3156 05ec 016086E2 		add	r6, r6, #1
 3157              	.LVL356:
 3158              	.LBB719:
 3159              	.LBB705:
 3160              	.LBB683:
 3161              	.LBB682:
 246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 3162              		.loc 6 246 0
 3163 05f0 FEFFFFEB 		bl	expf
 3164              	.LVL357:
 3165              	.LBE682:
 3166              	.LBE683:
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****   }
 3167              		.loc 5 47 0
 3168 05f4 087A70EE 		vadd.f32	s15, s0, s16
 3169              	.LBE705:
 3170              	.LBE719:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3171              		.loc 1 249 0
 3172 05f8 060059E1 		cmp	r9, r6
 3173              	.LBB720:
 3174              	.LBB706:
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****   }
 3175              		.loc 5 47 0
 3176 05fc 270A88EE 		vdiv.f32	s0, s16, s15
 3177              	.LVL358:
 3178              	.LBE706:
 3179              	.LBE720:
 250:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           tflite::ops::micro::ActivationValFloat(activation, *output_ptr_batch);
 3180              		.loc 1 250 0
 3181 0600 010AA7EC 		vstmia.32	r7!, {s0}
 3182              	.LVL359:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3183              		.loc 1 249 0
 3184 0604 D6FFFF1A 		bne	.L215
 3185 0608 E5FFFFEA 		b	.L267
 3186              	.LVL360:
 3187              	.L224:
 3188              	.LBB721:
 3189              	.LBB707:
 3190              	.LBB684:
 3191              	.LBB685:
 692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 3192              		.loc 6 692 0
 3193 060c 103A10EE 		vmov	r3, s0	@ int
 3194              	.LBE685:
 3195              	.LBE684:
 3196              	.LBE707:
 3197              	.LBE721:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3198              		.loc 1 249 0
 3199 0610 016086E2 		add	r6, r6, #1
 3200              	.LVL361:
 3201              	.LBB722:
 3202              	.LBB708:
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****     case kTfLiteActSigmoid:
 3203              		.loc 5 45 0
 3204 0614 A33FA0E1 		lsr	r3, r3, #31
 3205              	.LBE708:
 3206              	.LBE722:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3207              		.loc 1 249 0
 3208 0618 060059E1 		cmp	r9, r6
 3209              	.LBB723:
 3210              	.LBB709:
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\activation_utils.h ****     case kTfLiteActSigmoid:
 3211              		.loc 5 45 0
 3212 061c 903A07EE 		vmov	s15, r3	@ int
 3213 0620 670AB8EE 		vcvt.f32.u32	s0, s15
 3214              	.LVL362:
 3215              	.LBE709:
 3216              	.LBE723:
 250:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           tflite::ops::micro::ActivationValFloat(activation, *output_ptr_batch);
 3217              		.loc 1 250 0
 3218 0624 010AA7EC 		vstmia.32	r7!, {s0}
 3219              	.LVL363:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3220              		.loc 1 249 0
 3221 0628 CDFFFF1A 		bne	.L215
 3222 062c DCFFFFEA 		b	.L267
 3223              	.LVL364:
 3224              	.L221:
 3225              	.LBB724:
 3226              	.LBB710:
 3227              	.LBB686:
 3228              	.LBB687:
 3229              	.LBB688:
 3230              	.LBB689:
 3231              	.LBB690:
 3232              		.loc 6 1473 0
 3233 0630 480AF0EE 		vmov.f32	s1, s16
 3234              	.LBE690:
 3235              	.LBE689:
 3236              	.LBE688:
 3237              	.LBE687:
 3238              	.LBE686:
 3239              	.LBE710:
 3240              	.LBE724:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3241              		.loc 1 249 0
 3242 0634 016086E2 		add	r6, r6, #1
 3243              	.LVL365:
 3244              	.LBB725:
 3245              	.LBB711:
 3246              	.LBB698:
 3247              	.LBB697:
 3248              	.LBB693:
 3249              	.LBB692:
 3250              	.LBB691:
 3251              		.loc 6 1473 0
 3252 0638 FEFFFFEB 		bl	fminf
 3253              	.LVL366:
 3254              	.LBE691:
 3255              	.LBE692:
 3256              	.LBE693:
 3257              	.LBB694:
 3258              	.LBB695:
 3259              	.LBB696:
1453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 3260              		.loc 6 1453 0
 3261 063c 400AF0EE 		vmov.f32	s1, s0
 3262 0640 000ABFEE 		vmov.f32	s0, #-1.0e+0
 3263              	.LVL367:
 3264 0644 FEFFFFEB 		bl	fmaxf
 3265              	.LVL368:
 3266              	.LBE696:
 3267              	.LBE695:
 3268              	.LBE694:
 3269              	.LBE697:
 3270              	.LBE698:
 3271              	.LBE711:
 3272              	.LBE725:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3273              		.loc 1 249 0
 3274 0648 060059E1 		cmp	r9, r6
 250:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           tflite::ops::micro::ActivationValFloat(activation, *output_ptr_batch);
 3275              		.loc 1 250 0
 3276 064c 010AA7EC 		vstmia.32	r7!, {s0}
 3277              	.LVL369:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3278              		.loc 1 249 0
 3279 0650 C3FFFF1A 		bne	.L215
 3280 0654 D2FFFFEA 		b	.L267
 3281              	.LVL370:
 3282              	.L235:
 3283              	.LBE729:
 3284              	.LBE732:
 3285              	.LBE736:
 3286              	.LBB737:
 3287              	.LBB660:
 3288              	.LBB659:
 3289              	.LBB658:
 240:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         output_ptr_batch[i] += *scratch_ptr_batch++;
 3290              		.loc 1 240 0
 3291 0658 0630A0E1 		mov	r3, r6
 3292 065c 0020A0E3 		mov	r2, #0
 3293 0660 A1FFFFEA 		b	.L213
 3294              	.LVL371:
 3295              	.L234:
 3296              	.LBE658:
 3297              	.LBE659:
 3298              	.LBE660:
 3299              	.LBE737:
 3300              	.LBB738:
 3301              	.LBB644:
 3302              	.LBB642:
 3303              	.LBB640:
 3304              	.LBB637:
 209:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         *scratch_ptr_batch += *vector1_ptr++ * *vector2_ptr++;
 3305              		.loc 1 209 0
 3306 0664 0820A0E1 		mov	r2, r8
 3307 0668 0730A0E1 		mov	r3, r7
 3308 066c 0010A0E3 		mov	r1, #0
 3309 0670 42FFFFEA 		b	.L199
 3310              	.LVL372:
 3311              	.L233:
 3312              	.LBE637:
 3313              	.LBE640:
 3314              	.LBE642:
 3315              	.LBE644:
 3316              	.LBE738:
 3317              	.LBE745:
 3318              	.LBB746:
 3319              	.LBB629:
 3320              	.LBB626:
 3321              	.LBB625:
 3322              	.LBB624:
 3323              	.LBB621:
 316:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           dot_prod += *matrix_ptr++ * *vector_in_batch++;
 3324              		.loc 1 316 0
 3325 0674 0B20A0E1 		mov	r2, fp
 3326 0678 0730A0E1 		mov	r3, r7
 3327 067c 0010A0E3 		mov	r1, #0
 3328 0680 E2FEFFEA 		b	.L188
 3329              	.LVL373:
 3330              	.L265:
 3331              	.LBE621:
 3332              	.LBE624:
 3333              	.LBE625:
 3334              	.LBE626:
 3335              	.LBE629:
 3336              	.LBE746:
 3337              	.LBB747:
 3338              	.LBB739:
 217:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     // VectorBatchVectorAssign
 3339              		.loc 1 217 0
 3340 0684 28309DE5 		ldr	r3, [sp, #40]
 3341              	.LVL374:
 3342 0688 000053E3 		cmp	r3, #0
 3343 068c C8FFFF1A 		bne	.L174
 3344              	.LBB648:
 3345              	.LBB649:
 228:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_data++ = 0.0f;
 3346              		.loc 1 228 0
 3347 0690 1C309DE5 		ldr	r3, [sp, #28]
 3348 0694 00209DE5 		ldr	r2, [sp]
 3349 0698 930202E0 		mul	r2, r3, r2
 3350              	.LBE649:
 3351              	.LBE648:
 3352              	.LBE739:
 3353              	.LBE747:
 327:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** }
 3354              		.loc 1 327 0
 3355 069c 78309DE5 		ldr	r3, [sp, #120]
 3356 06a0 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3357              	.LBB748:
 3358              	.LBB740:
 3359              	.LBB652:
 3360              	.LBB650:
 228:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_data++ = 0.0f;
 3361              		.loc 1 228 0
 3362 06a4 000052E3 		cmp	r2, #0
 3363              	.LBE650:
 3364              	.LBE652:
 3365              	.LBE740:
 3366              	.LBE748:
 327:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** }
 3367              		.loc 1 327 0
 3368 06a8 2C308DE5 		str	r3, [sp, #44]
 3369              	.LVL375:
 3370              	.LBB749:
 3371              	.LBB741:
 3372              	.LBB653:
 3373              	.LBB651:
 228:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_data++ = 0.0f;
 3374              		.loc 1 228 0
 3375 06ac 050000CA 		bgt	.L202
 3376 06b0 BFFFFFEA 		b	.L174
 3377              	.LVL376:
 3378              	.L266:
 3379 06b4 1C309DE5 		ldr	r3, [sp, #28]
 3380 06b8 00209DE5 		ldr	r2, [sp]
 3381 06bc 930202E0 		mul	r2, r3, r2
 3382 06c0 000052E3 		cmp	r2, #0
 3383 06c4 060000DA 		ble	.L203
 3384              	.LVL377:
 3385              	.L202:
 3386 06c8 0221A0E1 		lsl	r2, r2, #2
 3387 06cc 0010A0E3 		mov	r1, #0
 3388 06d0 20009DE5 		ldr	r0, [sp, #32]
 3389 06d4 FEFFFFEB 		bl	memset
 3390              	.LVL378:
 3391              	.LBE651:
 3392              	.LBE653:
 3393              	.LBE741:
 3394              	.LBB742:
 234:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     float* output_ptr_batch = output_ptr + b * num_units;
 3395              		.loc 1 234 0
 3396 06d8 00309DE5 		ldr	r3, [sp]
 3397 06dc 000053E3 		cmp	r3, #0
 3398 06e0 B3FFFFDA 		ble	.L174
 3399              	.LVL379:
 3400              	.L203:
 3401 06e4 1C309DE5 		ldr	r3, [sp, #28]
 3402 06e8 000053E3 		cmp	r3, #0
 3403 06ec B0FFFFDA 		ble	.L174
 3404 06f0 0341A0E1 		lsl	r4, r3, #2
 3405 06f4 50FFFFEA 		b	.L204
 3406              	.LVL380:
 3407              	.L236:
 3408              	.LBE742:
 3409              	.LBB743:
 3410              	.LBB733:
 3411              	.LBB730:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3412              		.loc 1 249 0
 3413 06f8 016086E2 		add	r6, r6, #1
 3414              	.LVL381:
 3415              	.LBB726:
 3416              	.LBB712:
 3417              		.loc 5 49 0
 3418 06fc 680AB0EE 		vmov.f32	s0, s17
 3419              	.LVL382:
 3420              	.LBE712:
 3421              	.LBE726:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3422              		.loc 1 249 0
 3423 0700 060059E1 		cmp	r9, r6
 250:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****           tflite::ops::micro::ActivationValFloat(activation, *output_ptr_batch);
 3424              		.loc 1 250 0
 3425 0704 010AA7EC 		vstmia.32	r7!, {s0}
 3426              	.LVL383:
 249:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       *output_ptr_batch =
 3427              		.loc 1 249 0
 3428 0708 95FFFF1A 		bne	.L215
 3429 070c A4FFFFEA 		b	.L267
 3430              	.LVL384:
 3431              	.L177:
 3432              	.LBE730:
 3433              	.LBE733:
 3434              	.LBE743:
 3435              	.LBE749:
 3436              	.LBB750:
 3437              	.LBB586:
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 3438              		.loc 2 62 0
 3439 0710 FEFFFFEB 		bl	abort
 3440              	.LVL385:
 3441              	.L183:
 3442              	.LBE586:
 3443              	.LBE750:
 327:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** }
 3444              		.loc 1 327 0
 3445 0714 78309DE5 		ldr	r3, [sp, #120]
 3446 0718 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3447 071c 2C308DE5 		str	r3, [sp, #44]
 3448              	.LVL386:
 3449 0720 32FFFFEA 		b	.L193
 3450              		.cfi_endproc
 3451              	.LFE4179:
 3452              		.fnend
 3454              		.global	__aeabi_idivmod
 3455              		.section	.text._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode,"ax",%progbits
 3456              		.align	2
 3457              		.global	_ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode
 3458              		.syntax unified
 3459              		.arm
 3460              		.fpu neon
 3462              	_ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode:
 3463              		.fnstart
 3464              	.LFB4180:
 329:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 330:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** TfLiteStatus PrepareSvdf(TfLiteContext* context, TfLiteNode* node) {
 3465              		.loc 1 330 0
 3466              		.cfi_startproc
 3467              		@ args = 0, pretend = 0, frame = 32
 3468              		@ frame_needed = 0, uses_anonymous_args = 0
 3469              	.LVL387:
 3470 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3471              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3472              		.cfi_def_cfa_offset 36
 3473              		.cfi_offset 4, -36
 3474              		.cfi_offset 5, -32
 3475              		.cfi_offset 6, -28
 3476              		.cfi_offset 7, -24
 3477              		.cfi_offset 8, -20
 3478              		.cfi_offset 9, -16
 3479              		.cfi_offset 10, -12
 3480              		.cfi_offset 11, -8
 3481              		.cfi_offset 14, -4
 331:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TFLITE_DCHECK(node->builtin_data != nullptr);
 3482              		.loc 1 331 0
 3483 0004 146091E5 		ldr	r6, [r1, #20]
 330:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TFLITE_DCHECK(node->builtin_data != nullptr);
 3484              		.loc 1 330 0
 3485 0008 028B2DED 		vpush.64	{d8}
 3486              		.vsave {d8}
 3487              		.cfi_def_cfa_offset 44
 3488              		.cfi_offset 80, -44
 3489              		.cfi_offset 81, -40
 3490              		.pad #52
 3491 000c 34D04DE2 		sub	sp, sp, #52
 3492              		.cfi_def_cfa_offset 96
 3493              		.loc 1 331 0
 3494 0010 000056E3 		cmp	r6, #0
 3495 0014 D701000A 		beq	.L297
 3496              	.LVL388:
 332:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 333:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const auto* params = static_cast<const TfLiteSVDFParams*>(node->builtin_data);
 334:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 335:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Validate Tensor Inputs (dtype depends on quantization):
 336:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // [0] = Input, {2, batch_size, input_size}
 337:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // [1] = Weights Feature, {2, num_filters, input_size}
 338:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // [2] = Weights Time, {2, num_filters, memory_size}
 339:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // [3] = Bias (optional), {1, num_units}
 340:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // [4] = Activation State (variable),
 341:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   //         {2, batch_size, memory_size * num_filters}
 342:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const TfLiteTensor* input = GetInput(context, node, kSvdfInputTensor);
 3497              		.loc 1 342 0
 3498 0018 0020A0E3 		mov	r2, #0
 3499 001c 0150A0E1 		mov	r5, r1
 3500 0020 0040A0E1 		mov	r4, r0
 3501 0024 FEFFFFEB 		bl	_ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 3502              	.LVL389:
 343:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE(context, input != nullptr);
 3503              		.loc 1 343 0
 3504 0028 007050E2 		subs	r7, r0, #0
 3505 002c EC00000A 		beq	.L337
 344:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const TfLiteTensor* weights_feature =
 345:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       GetInput(context, node, kSvdfWeightsFeatureTensor);
 3506              		.loc 1 345 0
 3507 0030 0120A0E3 		mov	r2, #1
 3508 0034 0510A0E1 		mov	r1, r5
 3509 0038 0400A0E1 		mov	r0, r4
 3510              	.LVL390:
 3511 003c FEFFFFEB 		bl	_ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 3512              	.LVL391:
 346:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE(context, weights_feature != nullptr);
 3513              		.loc 1 346 0
 3514 0040 008050E2 		subs	r8, r0, #0
 3515 0044 F500000A 		beq	.L338
 347:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const TfLiteTensor* weights_time =
 348:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       GetInput(context, node, kSvdfWeightsTimeTensor);
 3516              		.loc 1 348 0
 3517 0048 0220A0E3 		mov	r2, #2
 3518 004c 0510A0E1 		mov	r1, r5
 3519 0050 0400A0E1 		mov	r0, r4
 3520              	.LVL392:
 3521 0054 FEFFFFEB 		bl	_ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 3522              	.LVL393:
 349:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE(context, weights_time != nullptr);
 3523              		.loc 1 349 0
 3524 0058 00B050E2 		subs	fp, r0, #0
 3525 005c FC00000A 		beq	.L339
 350:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const TfLiteTensor* bias =
 351:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       GetOptionalInputTensor(context, node, kSvdfBiasTensor);
 3526              		.loc 1 351 0
 3527 0060 0320A0E3 		mov	r2, #3
 3528 0064 0510A0E1 		mov	r1, r5
 3529 0068 0400A0E1 		mov	r0, r4
 3530              	.LVL394:
 3531 006c FEFFFFEB 		bl	_ZN6tflite22GetOptionalInputTensorEPK13TfLiteContextPK10TfLiteNodei
 3532              	.LVL395:
 352:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const TfLiteTensor* activation_state =
 353:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       GetInput(context, node, kSvdfInputActivationStateTensor);
 3533              		.loc 1 353 0
 3534 0070 0420A0E3 		mov	r2, #4
 351:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const TfLiteTensor* activation_state =
 3535              		.loc 1 351 0
 3536 0074 18008DE5 		str	r0, [sp, #24]
 3537              	.LVL396:
 3538              		.loc 1 353 0
 3539 0078 0510A0E1 		mov	r1, r5
 3540 007c 0400A0E1 		mov	r0, r4
 3541              	.LVL397:
 3542 0080 FEFFFFEB 		bl	_ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 3543              	.LVL398:
 354:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE(context, activation_state != nullptr);
 3544              		.loc 1 354 0
 3545 0084 003050E2 		subs	r3, r0, #0
 3546 0088 14308DE5 		str	r3, [sp, #20]
 3547 008c 2101000A 		beq	.L340
 355:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 356:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Define input constants based on input tensor definition above:
 357:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int rank = params->rank;
 358:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int input_size = input->dims->data[1];
 359:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int batch_size = input->dims->data[0];
 360:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int num_filters = weights_feature->dims->data[0];
 3548              		.loc 1 360 0
 3549 0090 083098E5 		ldr	r3, [r8, #8]
 357:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int input_size = input->dims->data[1];
 3550              		.loc 1 357 0
 3551 0094 00A096E5 		ldr	r10, [r6]
 3552              	.LVL399:
 3553              		.loc 1 360 0
 3554 0098 049093E5 		ldr	r9, [r3, #4]
 3555              	.LVL400:
 361:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, num_filters % rank, 0);
 3556              		.loc 1 361 0
 3557 009c 0A10A0E1 		mov	r1, r10
 3558 00a0 0900A0E1 		mov	r0, r9
 3559              	.LVL401:
 3560 00a4 FEFFFFEB 		bl	__aeabi_idivmod
 3561              	.LVL402:
 3562 00a8 00C051E2 		subs	ip, r1, #0
 3563 00ac B800001A 		bne	.L341
 3564              	.LVL403:
 362:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int num_units = num_filters / rank;
 363:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int memory_size = weights_time->dims->data[1];
 364:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 365:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Validate Input Tensor:
 366:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE(context,
 3565              		.loc 1 366 0
 3566 00b0 0060D7E5 		ldrb	r6, [r7]	@ zero_extendqisi2
 3567              	.LVL404:
 3568 00b4 F76006E2 		and	r6, r6, #247
 3569 00b8 010056E3 		cmp	r6, #1
 3570 00bc 1B00001A 		bne	.L342
 358:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int batch_size = input->dims->data[0];
 3571              		.loc 1 358 0
 3572 00c0 083097E5 		ldr	r3, [r7, #8]
 3573              	.LVL405:
 3574              	.LBB751:
 3575              	.LBB752:
 3576              		.file 7 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #define TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #include <stdint.h>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #include <limits>
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** namespace tflite {
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // A fair number of functions in this header have historically been inline.
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // It is ok to change functions to not be inline if the latency with
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // benchmark_model for MobileNet + MobileBERT is unaffected. If such a change is
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // made, move the newly non-inlined function declarations to the top of this
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // header file.
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetInput(context, node, kMyTensorIdx);
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetInput(const TfLiteContext* context,
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                              const TfLiteNode* node, int index);
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetInput` but returns boolean and uses output argument for tensor.
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     GetInputSafe(context, node, kMyTensorIdx, &my_tensor));
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                           int index, const TfLiteTensor** tensor);
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetVariableInput(context, node, kMyTensorIdx);
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                                int index);
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOutput(context, node, kMyTensorIdx);
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                         int index);
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetOutput` but returns boolean and uses output argument for tensor.
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     GetOutputSafe(context, node, kMyTensorIdx, &my_tensor));
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                            int index, TfLiteTensor** tensor);
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOptionalInputTensor(context, node, kIdx);
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Deprecated. GetInput has the same functionality.
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                                            const TfLiteNode* node, int index);
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetTemporary(context, node, kMyTensorIdx);
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                            int index);
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetTemporary` but returns boolean and uses output argument for
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     GetTemporarySafe(context, node, kMyTensorIdx,
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                               const TfLiteNode* node, int index,
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                               TfLiteTensor** tensor);
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetIntermediates(context, node, kMyTensorIdx);
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                                      const TfLiteNode* node, int index);
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetIntermediates` but returns boolean and uses output argument for
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     GetIntermediatesSafe(context, node, kMyTensorIdx,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** //
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                                   const TfLiteNode* node, int index,
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h ****                                   TfLiteTensor** tensor);
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** 
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels\kernel_util.h **** inline int NumDimensions(const TfLiteTensor* t) { return t->dims->size; }
 3577              		.loc 7 147 0
 3578 00c4 000093E5 		ldr	r0, [r3]
 3579              	.LBE752:
 3580              	.LBE751:
 367:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                  input->type == kTfLiteFloat32 || input->type == kTfLiteInt8);
 368:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, NumDimensions(input), 2);
 3581              		.loc 1 368 0
 3582 00c8 020050E3 		cmp	r0, #2
 3583 00cc 9B00001A 		bne	.L343
 369:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 370:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Validate Tensor Output:
 371:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // [0] = float/int8_t, {2, batch_size, num_units}
 372:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, node->outputs->size, 1);
 3584              		.loc 1 372 0
 3585 00d0 042095E5 		ldr	r2, [r5, #4]
 3586 00d4 000092E5 		ldr	r0, [r2]
 3587 00d8 010050E3 		cmp	r0, #1
 3588 00dc 2200000A 		beq	.L281
 3589              		.loc 1 372 0 is_stmt 0 discriminator 1
 3590 00e0 00C000E3 		movw	ip, #:lower16:.LC14
 3591 00e4 003000E3 		movw	r3, #:lower16:.LC15
 3592 00e8 00C040E3 		movt	ip, #:upper16:.LC14
 3593 00ec 003040E3 		movt	r3, #:upper16:.LC15
 3594 00f0 002000E3 		movw	r2, #:lower16:.LC2
 3595 00f4 001000E3 		movw	r1, #:lower16:.LC8
 3596 00f8 08008DE5 		str	r0, [sp, #8]
 3597              	.LVL406:
 3598 00fc 002040E3 		movt	r2, #:upper16:.LC2
 3599 0100 0400A0E1 		mov	r0, r4
 3600 0104 00308DE5 		str	r3, [sp]
 3601 0108 0C608DE5 		str	r6, [sp, #12]
 3602 010c 001040E3 		movt	r1, #:upper16:.LC8
 3603 0110 04C08DE5 		str	ip, [sp, #4]
 3604 0114 5D3FA0E3 		mov	r3, #372
 3605 0118 144094E5 		ldr	r4, [r4, #20]
 3606              	.LVL407:
 3607 011c 34FF2FE1 		blx	r4
 3608              	.LVL408:
 3609 0120 0600A0E1 		mov	r0, r6
 3610              	.LVL409:
 3611              	.L274:
 373:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TfLiteTensor* output = GetOutput(context, node, kSvdfOutputTensor);
 374:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE(context, output != nullptr);
 375:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, NumDimensions(output), 2);
 376:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, output->dims->data[0], batch_size);
 377:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, output->dims->data[1], num_units);
 378:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 379:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Validate Weights Feature Input Tensor:
 380:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, NumDimensions(weights_feature), 2);
 381:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, weights_feature->dims->data[1], input_size);
 382:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 383:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Validate Weights Time Input Tensor:
 384:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, NumDimensions(weights_time), 2);
 385:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, weights_time->dims->data[0], num_filters);
 386:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, weights_time->dims->data[1], memory_size);
 387:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 388:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Validate Optional Bias Input Tensor:
 389:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   if (bias != nullptr) {
 390:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, bias->dims->data[0], num_units);
 391:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 392:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 393:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Validate Activation State Input Tensor:
 394:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, NumDimensions(activation_state), 2);
 395:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, activation_state->dims->data[0], batch_size);
 396:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, activation_state->dims->data[1],
 397:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                     memory_size * num_filters);
 398:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   // Since is_variable is not part of TFLiteEvalTensor, check is_variable here.
 399:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, activation_state->is_variable, true);
 400:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 401:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, node->inputs->size, 5);
 402:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 403:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TFLITE_DCHECK(node->user_data != nullptr);
 404:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   OpData* data = static_cast<OpData*>(node->user_data);
 405:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 406:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   if (input->type == kTfLiteInt8) {
 407:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, weights_feature->type, kTfLiteInt8);
 408:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, weights_time->type, kTfLiteInt16);
 409:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, activation_state->type, kTfLiteInt16);
 410:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     if (bias != nullptr) {
 411:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       TF_LITE_ENSURE_EQ(context, bias->type, kTfLiteInt32);
 412:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 413:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 414:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_TYPES_EQ(context, output->type, kTfLiteInt8);
 415:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 416:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const double effective_scale_1 = static_cast<double>(
 417:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         input->params.scale * weights_feature->params.scale /
 418:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         activation_state->params.scale);
 419:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const double effective_scale_2 =
 420:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         static_cast<double>(activation_state->params.scale *
 421:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                             weights_time->params.scale / output->params.scale);
 422:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 423:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     // TODO(b/162018098): Use TF_LITE_ENSURE_NEAR when it is ready.
 424:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE(
 425:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         context,
 426:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         std::abs(static_cast<double>(bias->params.scale) -
 427:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                  static_cast<double>(activation_state->params.scale *
 428:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                                      weights_time->params.scale)) < 1e-5);
 429:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 430:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     QuantizeMultiplier(effective_scale_1, &(data->effective_scale_1_a),
 431:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                        &(data->effective_scale_1_b));
 432:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     QuantizeMultiplier(effective_scale_2, &(data->effective_scale_2_a),
 433:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                        &(data->effective_scale_2_b));
 434:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 435:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     data->input_zero_point = input->params.zero_point;
 436:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     data->output_zero_point = output->params.zero_point;
 437:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 438:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TFLITE_DCHECK(context->RequestScratchBufferInArena != nullptr);
 439:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 440:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const TfLiteStatus scratch_status = context->RequestScratchBufferInArena(
 441:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         context, batch_size * num_filters * sizeof(int32_t),
 442:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         &(data->scratch_tensor_index));
 443:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_OK(context, scratch_status);
 444:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 445:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const TfLiteStatus scratch_output_status =
 446:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         context->RequestScratchBufferInArena(
 447:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****             context, batch_size * num_units * sizeof(int32_t),
 448:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****             &(data->scratch_output_tensor_index));
 449:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_OK(context, scratch_output_status);
 450:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   } else {
 451:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, weights_feature->type, kTfLiteFloat32);
 452:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, weights_time->type, kTfLiteFloat32);
 453:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, activation_state->type, kTfLiteFloat32);
 454:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     if (bias != nullptr) {
 455:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       TF_LITE_ENSURE_EQ(context, bias->type, kTfLiteFloat32);
 456:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 457:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_TYPES_EQ(context, output->type, kTfLiteFloat32);
 458:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 459:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TFLITE_DCHECK(context->RequestScratchBufferInArena != nullptr);
 460:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const TfLiteStatus scratch_status = context->RequestScratchBufferInArena(
 461:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         context, batch_size * num_filters * sizeof(float),
 462:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         &(data->scratch_tensor_index));
 463:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_OK(context, scratch_status);
 464:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 465:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 466:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   return kTfLiteOk;
 467:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** }
 3612              		.loc 1 467 0 is_stmt 1
 3613 0124 34D08DE2 		add	sp, sp, #52
 3614              		.cfi_remember_state
 3615              		.cfi_def_cfa_offset 44
 3616              		@ sp needed
 3617 0128 028BBDEC 		vldm	sp!, {d8}
 3618              		.cfi_restore 80
 3619              		.cfi_restore 81
 3620              		.cfi_def_cfa_offset 36
 3621 012c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3622              	.LVL410:
 3623              	.L342:
 3624              		.cfi_restore_state
 366:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                  input->type == kTfLiteFloat32 || input->type == kTfLiteInt8);
 3625              		.loc 1 366 0 discriminator 1
 3626 0130 003000E3 		movw	r3, #:lower16:.LC11
 3627 0134 002000E3 		movw	r2, #:lower16:.LC2
 3628 0138 003040E3 		movt	r3, #:upper16:.LC11
 3629 013c 001000E3 		movw	r1, #:lower16:.LC3
 3630 0140 00308DE5 		str	r3, [sp]
 3631              	.LVL411:
 3632 0144 0400A0E1 		mov	r0, r4
 3633 0148 002040E3 		movt	r2, #:upper16:.LC2
 3634 014c 001040E3 		movt	r1, #:upper16:.LC3
 3635 0150 145094E5 		ldr	r5, [r4, #20]
 3636              	.LVL412:
 3637 0154 6F3100E3 		movw	r3, #367
 3638 0158 35FF2FE1 		blx	r5
 3639              	.LVL413:
 3640 015c 0100A0E3 		mov	r0, #1
 3641              		.loc 1 467 0 discriminator 1
 3642 0160 34D08DE2 		add	sp, sp, #52
 3643              		.cfi_remember_state
 3644              		.cfi_def_cfa_offset 44
 3645              		@ sp needed
 3646 0164 028BBDEC 		vldm	sp!, {d8}
 3647              		.cfi_restore 80
 3648              		.cfi_restore 81
 3649              		.cfi_def_cfa_offset 36
 3650 0168 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3651              	.LVL414:
 3652              	.L281:
 3653              		.cfi_restore_state
 373:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TfLiteTensor* output = GetOutput(context, node, kSvdfOutputTensor);
 3654              		.loc 1 373 0
 3655 016c 0C20A0E1 		mov	r2, ip
 363:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 3656              		.loc 1 363 0
 3657 0170 08E09BE5 		ldr	lr, [fp, #8]
 358:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int batch_size = input->dims->data[0];
 3658              		.loc 1 358 0
 3659 0174 08C093E5 		ldr	ip, [r3, #8]
 373:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE(context, output != nullptr);
 3660              		.loc 1 373 0
 3661 0178 0510A0E1 		mov	r1, r5
 359:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int num_filters = weights_feature->dims->data[0];
 3662              		.loc 1 359 0
 3663 017c 043093E5 		ldr	r3, [r3, #4]
 373:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE(context, output != nullptr);
 3664              		.loc 1 373 0
 3665 0180 0400A0E1 		mov	r0, r4
 358:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int batch_size = input->dims->data[0];
 3666              		.loc 1 358 0
 3667 0184 20C08DE5 		str	ip, [sp, #32]
 363:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 3668              		.loc 1 363 0
 3669 0188 08C09EE5 		ldr	ip, [lr, #8]
 359:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int num_filters = weights_feature->dims->data[0];
 3670              		.loc 1 359 0
 3671 018c 1C308DE5 		str	r3, [sp, #28]
 363:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 3672              		.loc 1 363 0
 3673 0190 24C08DE5 		str	ip, [sp, #36]
 373:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE(context, output != nullptr);
 3674              		.loc 1 373 0
 3675 0194 FEFFFFEB 		bl	_ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
 3676              	.LVL415:
 374:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, NumDimensions(output), 2);
 3677              		.loc 1 374 0
 3678 0198 002050E2 		subs	r2, r0, #0
 3679 019c 2001000A 		beq	.L344
 3680 01a0 083092E5 		ldr	r3, [r2, #8]
 3681              	.LVL416:
 3682              	.LBB753:
 3683              	.LBB754:
 3684              		.loc 7 147 0
 3685 01a4 006093E5 		ldr	r6, [r3]
 3686              	.LBE754:
 3687              	.LBE753:
 375:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, output->dims->data[0], batch_size);
 3688              		.loc 1 375 0
 3689 01a8 020056E3 		cmp	r6, #2
 3690 01ac C700001A 		bne	.L345
 376:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, output->dims->data[1], num_units);
 3691              		.loc 1 376 0
 3692 01b0 040093E5 		ldr	r0, [r3, #4]
 3693              	.LVL417:
 3694 01b4 1CE09DE5 		ldr	lr, [sp, #28]
 3695 01b8 00005EE1 		cmp	lr, r0
 3696 01bc B100001A 		bne	.L346
 362:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int memory_size = weights_time->dims->data[1];
 3697              		.loc 1 362 0
 3698 01c0 0A10A0E1 		mov	r1, r10
 3699 01c4 0900A0E1 		mov	r0, r9
 3700 01c8 2C308DE5 		str	r3, [sp, #44]
 3701 01cc 28208DE5 		str	r2, [sp, #40]
 3702 01d0 FEFFFFEB 		bl	__aeabi_idiv
 3703              	.LVL418:
 377:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 3704              		.loc 1 377 0
 3705 01d4 2C309DE5 		ldr	r3, [sp, #44]
 362:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int memory_size = weights_time->dims->data[1];
 3706              		.loc 1 362 0
 3707 01d8 00A0A0E1 		mov	r10, r0
 3708              	.LVL419:
 377:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 3709              		.loc 1 377 0
 3710 01dc 28209DE5 		ldr	r2, [sp, #40]
 3711 01e0 083093E5 		ldr	r3, [r3, #8]
 3712 01e4 030050E1 		cmp	r0, r3
 3713 01e8 D700001A 		bne	.L347
 3714 01ec 083098E5 		ldr	r3, [r8, #8]
 3715              	.LVL420:
 3716              	.LBB755:
 3717              	.LBB756:
 3718              		.loc 7 147 0
 3719 01f0 000093E5 		ldr	r0, [r3]
 3720              	.LBE756:
 3721              	.LBE755:
 380:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, weights_feature->dims->data[1], input_size);
 3722              		.loc 1 380 0
 3723 01f4 020050E3 		cmp	r0, #2
 3724 01f8 E500001A 		bne	.L348
 381:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 3725              		.loc 1 381 0
 3726 01fc 083093E5 		ldr	r3, [r3, #8]
 3727 0200 20E09DE5 		ldr	lr, [sp, #32]
 3728 0204 03005EE1 		cmp	lr, r3
 3729 0208 F300001A 		bne	.L349
 3730 020c 08109BE5 		ldr	r1, [fp, #8]
 3731              	.LVL421:
 3732              	.LBB757:
 3733              	.LBB758:
 3734              		.loc 7 147 0
 3735 0210 003091E5 		ldr	r3, [r1]
 3736              	.LBE758:
 3737              	.LBE757:
 384:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, weights_time->dims->data[0], num_filters);
 3738              		.loc 1 384 0
 3739 0214 020053E3 		cmp	r3, #2
 3740 0218 0E01001A 		bne	.L350
 385:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, weights_time->dims->data[1], memory_size);
 3741              		.loc 1 385 0
 3742 021c 043091E5 		ldr	r3, [r1, #4]
 3743 0220 030059E1 		cmp	r9, r3
 3744 0224 1D01001A 		bne	.L351
 386:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 3745              		.loc 1 386 0
 3746 0228 083091E5 		ldr	r3, [r1, #8]
 3747 022c 24E09DE5 		ldr	lr, [sp, #36]
 3748 0230 03005EE1 		cmp	lr, r3
 3749 0234 2B01001A 		bne	.L352
 389:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, bias->dims->data[0], num_units);
 3750              		.loc 1 389 0
 3751 0238 18309DE5 		ldr	r3, [sp, #24]
 3752 023c 000053E3 		cmp	r3, #0
 3753 0240 0300000A 		beq	.L291
 390:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 3754              		.loc 1 390 0
 3755 0244 083093E5 		ldr	r3, [r3, #8]
 3756 0248 040093E5 		ldr	r0, [r3, #4]
 3757 024c 00005AE1 		cmp	r10, r0
 3758 0250 3601001A 		bne	.L353
 3759              	.L291:
 3760 0254 14309DE5 		ldr	r3, [sp, #20]
 3761 0258 083093E5 		ldr	r3, [r3, #8]
 3762              	.LVL422:
 3763              	.LBB759:
 3764              	.LBB760:
 3765              		.loc 7 147 0
 3766 025c 000093E5 		ldr	r0, [r3]
 3767              	.LBE760:
 3768              	.LBE759:
 394:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, activation_state->dims->data[0], batch_size);
 3769              		.loc 1 394 0
 3770 0260 020050E3 		cmp	r0, #2
 3771 0264 4401001A 		bne	.L354
 395:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, activation_state->dims->data[1],
 3772              		.loc 1 395 0
 3773 0268 040093E5 		ldr	r0, [r3, #4]
 3774 026c 1CE09DE5 		ldr	lr, [sp, #28]
 3775 0270 00005EE1 		cmp	lr, r0
 3776 0274 5301001A 		bne	.L355
 396:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                     memory_size * num_filters);
 3777              		.loc 1 396 0
 3778 0278 24109DE5 		ldr	r1, [sp, #36]
 3779 027c 083093E5 		ldr	r3, [r3, #8]
 3780 0280 910900E0 		mul	r0, r1, r9
 3781 0284 000053E1 		cmp	r3, r0
 3782 0288 6001001A 		bne	.L356
 399:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 3783              		.loc 1 399 0
 3784 028c 14309DE5 		ldr	r3, [sp, #20]
 3785 0290 2D00D3E5 		ldrb	r0, [r3, #45]	@ zero_extendqisi2
 3786 0294 000050E3 		cmp	r0, #0
 3787 0298 8101000A 		beq	.L357
 401:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 3788              		.loc 1 401 0
 3789 029c 003095E5 		ldr	r3, [r5]
 3790 02a0 000093E5 		ldr	r0, [r3]
 3791 02a4 050050E3 		cmp	r0, #5
 3792 02a8 6A01001A 		bne	.L358
 403:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   OpData* data = static_cast<OpData*>(node->user_data);
 3793              		.loc 1 403 0
 3794 02ac 105095E5 		ldr	r5, [r5, #16]
 3795              	.LVL423:
 3796 02b0 000055E3 		cmp	r5, #0
 3797 02b4 2F01000A 		beq	.L297
 3798              	.LVL424:
 3799              	.LBB761:
 406:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, weights_feature->type, kTfLiteInt8);
 3800              		.loc 1 406 0
 3801 02b8 0000D7E5 		ldrb	r0, [r7]	@ zero_extendqisi2
 3802 02bc 090050E3 		cmp	r0, #9
 3803 02c0 9C01000A 		beq	.L359
 3804              	.LBB762:
 451:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, weights_time->type, kTfLiteFloat32);
 3805              		.loc 1 451 0
 3806 02c4 0060D8E5 		ldrb	r6, [r8]	@ zero_extendqisi2
 3807 02c8 010056E3 		cmp	r6, #1
 3808 02cc 8701001A 		bne	.L360
 452:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, activation_state->type, kTfLiteFloat32);
 3809              		.loc 1 452 0
 3810 02d0 00C0DBE5 		ldrb	ip, [fp]	@ zero_extendqisi2
 3811 02d4 01005CE3 		cmp	ip, #1
 3812 02d8 1402001A 		bne	.L361
 453:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     if (bias != nullptr) {
 3813              		.loc 1 453 0
 3814 02dc 14309DE5 		ldr	r3, [sp, #20]
 3815 02e0 00C0D3E5 		ldrb	ip, [r3]	@ zero_extendqisi2
 3816 02e4 01005CE3 		cmp	ip, #1
 3817 02e8 FE01001A 		bne	.L362
 454:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       TF_LITE_ENSURE_EQ(context, bias->type, kTfLiteFloat32);
 3818              		.loc 1 454 0
 3819 02ec 18309DE5 		ldr	r3, [sp, #24]
 3820 02f0 000053E3 		cmp	r3, #0
 3821 02f4 0200000A 		beq	.L308
 455:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 3822              		.loc 1 455 0
 3823 02f8 00C0D3E5 		ldrb	ip, [r3]	@ zero_extendqisi2
 3824 02fc 01005CE3 		cmp	ip, #1
 3825 0300 3102001A 		bne	.L363
 3826              	.L308:
 457:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 3827              		.loc 1 457 0
 3828 0304 0000D2E5 		ldrb	r0, [r2]	@ zero_extendqisi2
 3829 0308 010050E3 		cmp	r0, #1
 3830 030c 1902001A 		bne	.L364
 459:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const TfLiteStatus scratch_status = context->RequestScratchBufferInArena(
 3831              		.loc 1 459 0
 3832 0310 403094E5 		ldr	r3, [r4, #64]
 3833 0314 000053E3 		cmp	r3, #0
 3834 0318 1601000A 		beq	.L297
 461:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         &(data->scratch_tensor_index));
 3835              		.loc 1 461 0
 3836 031c 1C209DE5 		ldr	r2, [sp, #28]
 3837 0320 990201E0 		mul	r1, r9, r2
 462:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_OK(context, scratch_status);
 3838              		.loc 1 462 0
 3839 0324 102085E2 		add	r2, r5, #16
 3840              	.LVL425:
 3841              	.L336:
 3842 0328 0400A0E1 		mov	r0, r4
 3843 032c 0111A0E1 		lsl	r1, r1, #2
 3844              	.LBE762:
 3845              	.LBE761:
 3846              		.loc 1 467 0
 3847 0330 34D08DE2 		add	sp, sp, #52
 3848              		.cfi_remember_state
 3849              		.cfi_def_cfa_offset 44
 3850              		@ sp needed
 3851 0334 028BBDEC 		vldm	sp!, {d8}
 3852              		.cfi_restore 80
 3853              		.cfi_restore 81
 3854              		.cfi_def_cfa_offset 36
 3855 0338 F04FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3856              		.cfi_restore 14
 3857              		.cfi_restore 11
 3858              		.cfi_restore 10
 3859              		.cfi_restore 9
 3860              		.cfi_restore 8
 3861              		.cfi_restore 7
 3862              		.cfi_restore 6
 3863              		.cfi_restore 5
 3864              		.cfi_restore 4
 3865              		.cfi_def_cfa_offset 0
 3866              	.LVL426:
 3867              	.LBB771:
 3868              	.LBB763:
 462:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_OK(context, scratch_status);
 3869              		.loc 1 462 0
 3870 033c 13FF2FE1 		bx	r3
 3871              	.LVL427:
 3872              	.L343:
 3873              		.cfi_restore_state
 3874              	.LBE763:
 3875              	.LBE771:
 368:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 3876              		.loc 1 368 0 discriminator 1
 3877 0340 00C000E3 		movw	ip, #:lower16:.LC12
 3878 0344 003000E3 		movw	r3, #:lower16:.LC13
 3879 0348 00C040E3 		movt	ip, #:upper16:.LC12
 3880 034c 02E0A0E3 		mov	lr, #2
 3881 0350 003040E3 		movt	r3, #:upper16:.LC13
 3882 0354 002000E3 		movw	r2, #:lower16:.LC2
 3883 0358 001000E3 		movw	r1, #:lower16:.LC8
 3884 035c 08008DE5 		str	r0, [sp, #8]
 3885              	.LVL428:
 3886 0360 00308DE5 		str	r3, [sp]
 3887 0364 0400A0E1 		mov	r0, r4
 3888 0368 04C08DE5 		str	ip, [sp, #4]
 3889 036c 002040E3 		movt	r2, #:upper16:.LC2
 3890 0370 0CE08DE5 		str	lr, [sp, #12]
 3891 0374 001040E3 		movt	r1, #:upper16:.LC8
 3892 0378 144094E5 		ldr	r4, [r4, #20]
 3893              	.LVL429:
 3894 037c 173EA0E3 		mov	r3, #368
 3895 0380 34FF2FE1 		blx	r4
 3896              	.LVL430:
 3897 0384 0600A0E1 		mov	r0, r6
 3898              		.loc 1 467 0 discriminator 1
 3899 0388 34D08DE2 		add	sp, sp, #52
 3900              		.cfi_remember_state
 3901              		.cfi_def_cfa_offset 44
 3902              		@ sp needed
 3903 038c 028BBDEC 		vldm	sp!, {d8}
 3904              		.cfi_restore 80
 3905              		.cfi_restore 81
 3906              		.cfi_def_cfa_offset 36
 3907 0390 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3908              	.LVL431:
 3909              	.L341:
 3910              		.cfi_restore_state
 361:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const int num_units = num_filters / rank;
 3911              		.loc 1 361 0 discriminator 1
 3912 0394 000000E3 		movw	r0, #:lower16:.LC9
 3913 0398 003000E3 		movw	r3, #:lower16:.LC10
 3914 039c 00E0A0E3 		mov	lr, #0
 3915 03a0 000040E3 		movt	r0, #:upper16:.LC9
 3916 03a4 003040E3 		movt	r3, #:upper16:.LC10
 3917 03a8 002000E3 		movw	r2, #:lower16:.LC2
 3918 03ac 001000E3 		movw	r1, #:lower16:.LC8
 3919 03b0 01108DE9 		stmib	sp, {r0, ip}
 3920 03b4 00308DE5 		str	r3, [sp]
 3921 03b8 0400A0E1 		mov	r0, r4
 3922 03bc 0CE08DE5 		str	lr, [sp, #12]
 3923 03c0 002040E3 		movt	r2, #:upper16:.LC2
 3924 03c4 001040E3 		movt	r1, #:upper16:.LC8
 3925 03c8 144094E5 		ldr	r4, [r4, #20]
 3926              	.LVL432:
 3927 03cc 693100E3 		movw	r3, #361
 3928 03d0 34FF2FE1 		blx	r4
 3929              	.LVL433:
 3930 03d4 0100A0E3 		mov	r0, #1
 3931              		.loc 1 467 0 discriminator 1
 3932 03d8 34D08DE2 		add	sp, sp, #52
 3933              		.cfi_remember_state
 3934              		.cfi_def_cfa_offset 44
 3935              		@ sp needed
 3936 03dc 028BBDEC 		vldm	sp!, {d8}
 3937              		.cfi_restore 80
 3938              		.cfi_restore 81
 3939              		.cfi_def_cfa_offset 36
 3940 03e0 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3941              	.LVL434:
 3942              	.L337:
 3943              		.cfi_restore_state
 343:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const TfLiteTensor* weights_feature =
 3944              		.loc 1 343 0 discriminator 1
 3945 03e4 003000E3 		movw	r3, #:lower16:.LC4
 3946 03e8 002000E3 		movw	r2, #:lower16:.LC2
 3947 03ec 003040E3 		movt	r3, #:upper16:.LC4
 3948 03f0 001000E3 		movw	r1, #:lower16:.LC3
 3949 03f4 00308DE5 		str	r3, [sp]
 3950 03f8 0400A0E1 		mov	r0, r4
 3951              	.LVL435:
 3952 03fc 002040E3 		movt	r2, #:upper16:.LC2
 3953 0400 001040E3 		movt	r1, #:upper16:.LC3
 3954 0404 145094E5 		ldr	r5, [r4, #20]
 3955              	.LVL436:
 3956 0408 573100E3 		movw	r3, #343
 3957 040c 35FF2FE1 		blx	r5
 3958              	.LVL437:
 3959 0410 0100A0E3 		mov	r0, #1
 3960              		.loc 1 467 0 discriminator 1
 3961 0414 34D08DE2 		add	sp, sp, #52
 3962              		.cfi_remember_state
 3963              		.cfi_def_cfa_offset 44
 3964              		@ sp needed
 3965 0418 028BBDEC 		vldm	sp!, {d8}
 3966              		.cfi_restore 80
 3967              		.cfi_restore 81
 3968              		.cfi_def_cfa_offset 36
 3969 041c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3970              	.LVL438:
 3971              	.L338:
 3972              		.cfi_restore_state
 346:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const TfLiteTensor* weights_time =
 3973              		.loc 1 346 0 discriminator 1
 3974 0420 003000E3 		movw	r3, #:lower16:.LC5
 3975 0424 002000E3 		movw	r2, #:lower16:.LC2
 3976 0428 003040E3 		movt	r3, #:upper16:.LC5
 3977 042c 001000E3 		movw	r1, #:lower16:.LC3
 3978 0430 00308DE5 		str	r3, [sp]
 3979 0434 0400A0E1 		mov	r0, r4
 3980              	.LVL439:
 3981 0438 002040E3 		movt	r2, #:upper16:.LC2
 3982 043c 001040E3 		movt	r1, #:upper16:.LC3
 3983 0440 145094E5 		ldr	r5, [r4, #20]
 3984              	.LVL440:
 3985 0444 5A3100E3 		movw	r3, #346
 3986 0448 35FF2FE1 		blx	r5
 3987              	.LVL441:
 3988 044c 0100A0E3 		mov	r0, #1
 3989 0450 33FFFFEA 		b	.L274
 3990              	.LVL442:
 3991              	.L339:
 349:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   const TfLiteTensor* bias =
 3992              		.loc 1 349 0 discriminator 1
 3993 0454 003000E3 		movw	r3, #:lower16:.LC6
 3994 0458 002000E3 		movw	r2, #:lower16:.LC2
 3995 045c 003040E3 		movt	r3, #:upper16:.LC6
 3996 0460 001000E3 		movw	r1, #:lower16:.LC3
 3997 0464 00308DE5 		str	r3, [sp]
 3998 0468 0400A0E1 		mov	r0, r4
 3999              	.LVL443:
 4000 046c 002040E3 		movt	r2, #:upper16:.LC2
 4001 0470 001040E3 		movt	r1, #:upper16:.LC3
 4002 0474 145094E5 		ldr	r5, [r4, #20]
 4003              	.LVL444:
 4004 0478 5D3100E3 		movw	r3, #349
 4005 047c 35FF2FE1 		blx	r5
 4006              	.LVL445:
 4007 0480 0100A0E3 		mov	r0, #1
 4008 0484 26FFFFEA 		b	.L274
 4009              	.LVL446:
 4010              	.L346:
 376:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, output->dims->data[1], num_units);
 4011              		.loc 1 376 0 discriminator 1
 4012 0488 00C000E3 		movw	ip, #:lower16:.LC18
 4013 048c 003000E3 		movw	r3, #:lower16:.LC19
 4014 0490 00C040E3 		movt	ip, #:upper16:.LC18
 4015 0494 003040E3 		movt	r3, #:upper16:.LC19
 4016 0498 002000E3 		movw	r2, #:lower16:.LC2
 4017              	.LVL447:
 4018 049c 001000E3 		movw	r1, #:lower16:.LC8
 4019 04a0 08008DE5 		str	r0, [sp, #8]
 4020 04a4 002040E3 		movt	r2, #:upper16:.LC2
 4021 04a8 0400A0E1 		mov	r0, r4
 4022 04ac 00308DE5 		str	r3, [sp]
 4023 04b0 0CE08DE5 		str	lr, [sp, #12]
 4024 04b4 001040E3 		movt	r1, #:upper16:.LC8
 4025 04b8 04C08DE5 		str	ip, [sp, #4]
 4026 04bc 5E3FA0E3 		mov	r3, #376
 4027 04c0 144094E5 		ldr	r4, [r4, #20]
 4028              	.LVL448:
 4029 04c4 34FF2FE1 		blx	r4
 4030              	.LVL449:
 4031 04c8 0100A0E3 		mov	r0, #1
 4032 04cc 14FFFFEA 		b	.L274
 4033              	.LVL450:
 4034              	.L345:
 375:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, output->dims->data[0], batch_size);
 4035              		.loc 1 375 0 discriminator 1
 4036 04d0 000000E3 		movw	r0, #:lower16:.LC12
 4037              	.LVL451:
 4038 04d4 003000E3 		movw	r3, #:lower16:.LC17
 4039 04d8 000040E3 		movt	r0, #:upper16:.LC12
 4040 04dc 003040E3 		movt	r3, #:upper16:.LC17
 4041 04e0 02C0A0E3 		mov	ip, #2
 4042 04e4 002000E3 		movw	r2, #:lower16:.LC2
 4043              	.LVL452:
 4044 04e8 001000E3 		movw	r1, #:lower16:.LC8
 4045 04ec 41008DE9 		stmib	sp, {r0, r6}
 4046 04f0 00308DE5 		str	r3, [sp]
 4047 04f4 0400A0E1 		mov	r0, r4
 4048 04f8 0CC08DE5 		str	ip, [sp, #12]
 4049 04fc 002040E3 		movt	r2, #:upper16:.LC2
 4050 0500 001040E3 		movt	r1, #:upper16:.LC8
 4051 0504 144094E5 		ldr	r4, [r4, #20]
 4052              	.LVL453:
 4053 0508 773100E3 		movw	r3, #375
 4054 050c 34FF2FE1 		blx	r4
 4055              	.LVL454:
 4056 0510 0100A0E3 		mov	r0, #1
 4057 0514 02FFFFEA 		b	.L274
 4058              	.LVL455:
 4059              	.L340:
 354:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4060              		.loc 1 354 0 discriminator 1
 4061 0518 003000E3 		movw	r3, #:lower16:.LC7
 4062 051c 002000E3 		movw	r2, #:lower16:.LC2
 4063 0520 003040E3 		movt	r3, #:upper16:.LC7
 4064 0524 001000E3 		movw	r1, #:lower16:.LC3
 4065 0528 00308DE5 		str	r3, [sp]
 4066 052c 0400A0E1 		mov	r0, r4
 4067              	.LVL456:
 4068 0530 002040E3 		movt	r2, #:upper16:.LC2
 4069 0534 001040E3 		movt	r1, #:upper16:.LC3
 4070 0538 145094E5 		ldr	r5, [r4, #20]
 4071              	.LVL457:
 4072 053c 623100E3 		movw	r3, #354
 4073 0540 35FF2FE1 		blx	r5
 4074              	.LVL458:
 4075 0544 0100A0E3 		mov	r0, #1
 4076 0548 F5FEFFEA 		b	.L274
 4077              	.LVL459:
 4078              	.L347:
 377:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4079              		.loc 1 377 0 discriminator 1
 4080 054c 000000E3 		movw	r0, #:lower16:.LC20
 4081 0550 00C000E3 		movw	ip, #:lower16:.LC21
 4082 0554 000040E3 		movt	r0, #:upper16:.LC20
 4083 0558 00C040E3 		movt	ip, #:upper16:.LC21
 4084 055c 002000E3 		movw	r2, #:lower16:.LC2
 4085              	.LVL460:
 4086 0560 001000E3 		movw	r1, #:lower16:.LC8
 4087 0564 08308DE5 		str	r3, [sp, #8]
 4088 0568 002040E3 		movt	r2, #:upper16:.LC2
 4089 056c 04008DE5 		str	r0, [sp, #4]
 4090 0570 001040E3 		movt	r1, #:upper16:.LC8
 4091 0574 0400A0E1 		mov	r0, r4
 4092 0578 0CA08DE5 		str	r10, [sp, #12]
 4093 057c 00C08DE5 		str	ip, [sp]
 4094 0580 793100E3 		movw	r3, #377
 4095 0584 144094E5 		ldr	r4, [r4, #20]
 4096              	.LVL461:
 4097 0588 34FF2FE1 		blx	r4
 4098              	.LVL462:
 4099 058c 0100A0E3 		mov	r0, #1
 4100 0590 E3FEFFEA 		b	.L274
 4101              	.LVL463:
 4102              	.L348:
 380:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, weights_feature->dims->data[1], input_size);
 4103              		.loc 1 380 0 discriminator 1
 4104 0594 00C000E3 		movw	ip, #:lower16:.LC12
 4105 0598 003000E3 		movw	r3, #:lower16:.LC22
 4106 059c 00C040E3 		movt	ip, #:upper16:.LC12
 4107 05a0 003040E3 		movt	r3, #:upper16:.LC22
 4108 05a4 002000E3 		movw	r2, #:lower16:.LC2
 4109              	.LVL464:
 4110 05a8 001000E3 		movw	r1, #:lower16:.LC8
 4111 05ac 08008DE5 		str	r0, [sp, #8]
 4112 05b0 002040E3 		movt	r2, #:upper16:.LC2
 4113 05b4 0400A0E1 		mov	r0, r4
 4114 05b8 00308DE5 		str	r3, [sp]
 4115 05bc 0C608DE5 		str	r6, [sp, #12]
 4116 05c0 001040E3 		movt	r1, #:upper16:.LC8
 4117 05c4 04C08DE5 		str	ip, [sp, #4]
 4118 05c8 5F3FA0E3 		mov	r3, #380
 4119 05cc 144094E5 		ldr	r4, [r4, #20]
 4120              	.LVL465:
 4121 05d0 34FF2FE1 		blx	r4
 4122              	.LVL466:
 4123 05d4 0100A0E3 		mov	r0, #1
 4124 05d8 D1FEFFEA 		b	.L274
 4125              	.LVL467:
 4126              	.L349:
 381:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4127              		.loc 1 381 0 discriminator 1
 4128 05dc 000000E3 		movw	r0, #:lower16:.LC23
 4129 05e0 00C000E3 		movw	ip, #:lower16:.LC24
 4130 05e4 000040E3 		movt	r0, #:upper16:.LC23
 4131 05e8 00C040E3 		movt	ip, #:upper16:.LC24
 4132 05ec 002000E3 		movw	r2, #:lower16:.LC2
 4133              	.LVL468:
 4134 05f0 001000E3 		movw	r1, #:lower16:.LC8
 4135 05f4 08308DE5 		str	r3, [sp, #8]
 4136 05f8 002040E3 		movt	r2, #:upper16:.LC2
 4137 05fc 04008DE5 		str	r0, [sp, #4]
 4138 0600 001040E3 		movt	r1, #:upper16:.LC8
 4139 0604 0400A0E1 		mov	r0, r4
 4140 0608 0CE08DE5 		str	lr, [sp, #12]
 4141 060c 00C08DE5 		str	ip, [sp]
 4142 0610 7D3100E3 		movw	r3, #381
 4143 0614 144094E5 		ldr	r4, [r4, #20]
 4144              	.LVL469:
 4145 0618 34FF2FE1 		blx	r4
 4146              	.LVL470:
 4147 061c 0100A0E3 		mov	r0, #1
 4148 0620 BFFEFFEA 		b	.L274
 4149              	.LVL471:
 4150              	.L344:
 374:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, NumDimensions(output), 2);
 4151              		.loc 1 374 0 discriminator 1
 4152 0624 003000E3 		movw	r3, #:lower16:.LC16
 4153 0628 002000E3 		movw	r2, #:lower16:.LC2
 4154 062c 003040E3 		movt	r3, #:upper16:.LC16
 4155 0630 001000E3 		movw	r1, #:lower16:.LC3
 4156 0634 00308DE5 		str	r3, [sp]
 4157 0638 0400A0E1 		mov	r0, r4
 4158              	.LVL472:
 4159 063c 002040E3 		movt	r2, #:upper16:.LC2
 4160 0640 001040E3 		movt	r1, #:upper16:.LC3
 4161 0644 145094E5 		ldr	r5, [r4, #20]
 4162              	.LVL473:
 4163 0648 763100E3 		movw	r3, #374
 4164 064c 35FF2FE1 		blx	r5
 4165              	.LVL474:
 4166 0650 0100A0E3 		mov	r0, #1
 4167 0654 B2FEFFEA 		b	.L274
 4168              	.LVL475:
 4169              	.L350:
 384:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, weights_time->dims->data[0], num_filters);
 4170              		.loc 1 384 0 discriminator 1
 4171 0658 00E000E3 		movw	lr, #:lower16:.LC12
 4172 065c 00C000E3 		movw	ip, #:lower16:.LC25
 4173 0660 00E040E3 		movt	lr, #:upper16:.LC12
 4174 0664 00C040E3 		movt	ip, #:upper16:.LC25
 4175 0668 002000E3 		movw	r2, #:lower16:.LC2
 4176              	.LVL476:
 4177 066c 001000E3 		movw	r1, #:lower16:.LC8
 4178 0670 0C008DE5 		str	r0, [sp, #12]
 4179 0674 002040E3 		movt	r2, #:upper16:.LC2
 4180 0678 08308DE5 		str	r3, [sp, #8]
 4181 067c 0400A0E1 		mov	r0, r4
 4182 0680 04E08DE5 		str	lr, [sp, #4]
 4183 0684 001040E3 		movt	r1, #:upper16:.LC8
 4184 0688 00C08DE5 		str	ip, [sp]
 4185 068c 063DA0E3 		mov	r3, #384
 4186 0690 144094E5 		ldr	r4, [r4, #20]
 4187              	.LVL477:
 4188 0694 34FF2FE1 		blx	r4
 4189              	.LVL478:
 4190 0698 0100A0E3 		mov	r0, #1
 4191 069c A0FEFFEA 		b	.L274
 4192              	.LVL479:
 4193              	.L351:
 385:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, weights_time->dims->data[1], memory_size);
 4194              		.loc 1 385 0 discriminator 1
 4195 06a0 000000E3 		movw	r0, #:lower16:.LC26
 4196 06a4 00C000E3 		movw	ip, #:lower16:.LC27
 4197 06a8 000040E3 		movt	r0, #:upper16:.LC26
 4198 06ac 00C040E3 		movt	ip, #:upper16:.LC27
 4199 06b0 002000E3 		movw	r2, #:lower16:.LC2
 4200              	.LVL480:
 4201 06b4 001000E3 		movw	r1, #:lower16:.LC8
 4202 06b8 08308DE5 		str	r3, [sp, #8]
 4203 06bc 002040E3 		movt	r2, #:upper16:.LC2
 4204 06c0 04008DE5 		str	r0, [sp, #4]
 4205 06c4 001040E3 		movt	r1, #:upper16:.LC8
 4206 06c8 0400A0E1 		mov	r0, r4
 4207 06cc 0C908DE5 		str	r9, [sp, #12]
 4208 06d0 00C08DE5 		str	ip, [sp]
 4209 06d4 813100E3 		movw	r3, #385
 4210 06d8 144094E5 		ldr	r4, [r4, #20]
 4211              	.LVL481:
 4212 06dc 34FF2FE1 		blx	r4
 4213              	.LVL482:
 4214 06e0 0100A0E3 		mov	r0, #1
 4215 06e4 8EFEFFEA 		b	.L274
 4216              	.LVL483:
 4217              	.L352:
 386:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4218              		.loc 1 386 0 discriminator 1
 4219 06e8 000000E3 		movw	r0, #:lower16:.LC28
 4220 06ec 00C000E3 		movw	ip, #:lower16:.LC29
 4221 06f0 000040E3 		movt	r0, #:upper16:.LC28
 4222 06f4 00C040E3 		movt	ip, #:upper16:.LC29
 4223 06f8 002000E3 		movw	r2, #:lower16:.LC2
 4224              	.LVL484:
 4225 06fc 001000E3 		movw	r1, #:lower16:.LC8
 4226 0700 08308DE5 		str	r3, [sp, #8]
 4227 0704 002040E3 		movt	r2, #:upper16:.LC2
 4228 0708 04008DE5 		str	r0, [sp, #4]
 4229 070c 001040E3 		movt	r1, #:upper16:.LC8
 4230 0710 0400A0E1 		mov	r0, r4
 4231 0714 0CE08DE5 		str	lr, [sp, #12]
 4232 0718 00C08DE5 		str	ip, [sp]
 4233 071c 823100E3 		movw	r3, #386
 4234 0720 144094E5 		ldr	r4, [r4, #20]
 4235              	.LVL485:
 4236 0724 34FF2FE1 		blx	r4
 4237              	.LVL486:
 4238 0728 0100A0E3 		mov	r0, #1
 4239 072c 7CFEFFEA 		b	.L274
 4240              	.LVL487:
 4241              	.L353:
 390:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   }
 4242              		.loc 1 390 0 discriminator 1
 4243 0730 00C000E3 		movw	ip, #:lower16:.LC20
 4244 0734 003000E3 		movw	r3, #:lower16:.LC30
 4245 0738 00C040E3 		movt	ip, #:upper16:.LC20
 4246 073c 003040E3 		movt	r3, #:upper16:.LC30
 4247 0740 002000E3 		movw	r2, #:lower16:.LC2
 4248              	.LVL488:
 4249 0744 001000E3 		movw	r1, #:lower16:.LC8
 4250 0748 08008DE5 		str	r0, [sp, #8]
 4251 074c 002040E3 		movt	r2, #:upper16:.LC2
 4252 0750 0400A0E1 		mov	r0, r4
 4253 0754 00308DE5 		str	r3, [sp]
 4254 0758 0CA08DE5 		str	r10, [sp, #12]
 4255 075c 001040E3 		movt	r1, #:upper16:.LC8
 4256 0760 04C08DE5 		str	ip, [sp, #4]
 4257 0764 863100E3 		movw	r3, #390
 4258 0768 144094E5 		ldr	r4, [r4, #20]
 4259              	.LVL489:
 4260 076c 34FF2FE1 		blx	r4
 4261              	.LVL490:
 4262 0770 0100A0E3 		mov	r0, #1
 4263 0774 6AFEFFEA 		b	.L274
 4264              	.LVL491:
 4265              	.L297:
 331:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4266              		.loc 1 331 0 discriminator 1
 4267 0778 FEFFFFEB 		bl	abort
 4268              	.LVL492:
 4269              	.L354:
 394:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, activation_state->dims->data[0], batch_size);
 4270              		.loc 1 394 0 discriminator 1
 4271 077c 00C000E3 		movw	ip, #:lower16:.LC12
 4272 0780 003000E3 		movw	r3, #:lower16:.LC31
 4273 0784 00C040E3 		movt	ip, #:upper16:.LC12
 4274 0788 003040E3 		movt	r3, #:upper16:.LC31
 4275 078c 02E0A0E3 		mov	lr, #2
 4276 0790 002000E3 		movw	r2, #:lower16:.LC2
 4277              	.LVL493:
 4278 0794 001000E3 		movw	r1, #:lower16:.LC8
 4279 0798 08008DE5 		str	r0, [sp, #8]
 4280 079c 00308DE5 		str	r3, [sp]
 4281 07a0 0400A0E1 		mov	r0, r4
 4282 07a4 04C08DE5 		str	ip, [sp, #4]
 4283 07a8 002040E3 		movt	r2, #:upper16:.LC2
 4284 07ac 0CE08DE5 		str	lr, [sp, #12]
 4285 07b0 001040E3 		movt	r1, #:upper16:.LC8
 4286 07b4 144094E5 		ldr	r4, [r4, #20]
 4287              	.LVL494:
 4288 07b8 8A3100E3 		movw	r3, #394
 4289 07bc 34FF2FE1 		blx	r4
 4290              	.LVL495:
 4291 07c0 0100A0E3 		mov	r0, #1
 4292 07c4 56FEFFEA 		b	.L274
 4293              	.LVL496:
 4294              	.L355:
 395:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****   TF_LITE_ENSURE_EQ(context, activation_state->dims->data[1],
 4295              		.loc 1 395 0 discriminator 1
 4296 07c8 00C000E3 		movw	ip, #:lower16:.LC18
 4297 07cc 003000E3 		movw	r3, #:lower16:.LC32
 4298 07d0 00C040E3 		movt	ip, #:upper16:.LC18
 4299 07d4 003040E3 		movt	r3, #:upper16:.LC32
 4300 07d8 002000E3 		movw	r2, #:lower16:.LC2
 4301              	.LVL497:
 4302 07dc 001000E3 		movw	r1, #:lower16:.LC8
 4303 07e0 08008DE5 		str	r0, [sp, #8]
 4304 07e4 002040E3 		movt	r2, #:upper16:.LC2
 4305 07e8 0400A0E1 		mov	r0, r4
 4306 07ec 00308DE5 		str	r3, [sp]
 4307 07f0 0CE08DE5 		str	lr, [sp, #12]
 4308 07f4 001040E3 		movt	r1, #:upper16:.LC8
 4309 07f8 04C08DE5 		str	ip, [sp, #4]
 4310 07fc 8B3100E3 		movw	r3, #395
 4311 0800 144094E5 		ldr	r4, [r4, #20]
 4312              	.LVL498:
 4313 0804 34FF2FE1 		blx	r4
 4314              	.LVL499:
 4315 0808 0100A0E3 		mov	r0, #1
 4316 080c 44FEFFEA 		b	.L274
 4317              	.LVL500:
 4318              	.L356:
 396:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                     memory_size * num_filters);
 4319              		.loc 1 396 0 discriminator 1
 4320 0810 00E000E3 		movw	lr, #:lower16:.LC33
 4321 0814 00C000E3 		movw	ip, #:lower16:.LC34
 4322 0818 00E040E3 		movt	lr, #:upper16:.LC33
 4323 081c 00C040E3 		movt	ip, #:upper16:.LC34
 4324 0820 002000E3 		movw	r2, #:lower16:.LC2
 4325              	.LVL501:
 4326 0824 001000E3 		movw	r1, #:lower16:.LC8
 4327 0828 0C008DE5 		str	r0, [sp, #12]
 4328 082c 002040E3 		movt	r2, #:upper16:.LC2
 4329 0830 08308DE5 		str	r3, [sp, #8]
 4330 0834 0400A0E1 		mov	r0, r4
 4331 0838 04E08DE5 		str	lr, [sp, #4]
 4332 083c 001040E3 		movt	r1, #:upper16:.LC8
 4333 0840 00C08DE5 		str	ip, [sp]
 4334 0844 8D3100E3 		movw	r3, #397
 4335 0848 144094E5 		ldr	r4, [r4, #20]
 4336              	.LVL502:
 4337 084c 34FF2FE1 		blx	r4
 4338              	.LVL503:
 4339 0850 0100A0E3 		mov	r0, #1
 4340 0854 32FEFFEA 		b	.L274
 4341              	.LVL504:
 4342              	.L358:
 401:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4343              		.loc 1 401 0 discriminator 1
 4344 0858 00C000E3 		movw	ip, #:lower16:.LC37
 4345 085c 003000E3 		movw	r3, #:lower16:.LC38
 4346 0860 00C040E3 		movt	ip, #:upper16:.LC37
 4347 0864 003040E3 		movt	r3, #:upper16:.LC38
 4348 0868 05E0A0E3 		mov	lr, #5
 4349 086c 002000E3 		movw	r2, #:lower16:.LC2
 4350              	.LVL505:
 4351 0870 001000E3 		movw	r1, #:lower16:.LC8
 4352 0874 08008DE5 		str	r0, [sp, #8]
 4353 0878 00308DE5 		str	r3, [sp]
 4354 087c 0400A0E1 		mov	r0, r4
 4355 0880 04C08DE5 		str	ip, [sp, #4]
 4356 0884 002040E3 		movt	r2, #:upper16:.LC2
 4357 0888 0CE08DE5 		str	lr, [sp, #12]
 4358 088c 001040E3 		movt	r1, #:upper16:.LC8
 4359 0890 144094E5 		ldr	r4, [r4, #20]
 4360              	.LVL506:
 4361 0894 913100E3 		movw	r3, #401
 4362 0898 34FF2FE1 		blx	r4
 4363              	.LVL507:
 4364 089c 0100A0E3 		mov	r0, #1
 4365 08a0 1FFEFFEA 		b	.L274
 4366              	.LVL508:
 4367              	.L357:
 399:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4368              		.loc 1 399 0 discriminator 1
 4369 08a4 00C000E3 		movw	ip, #:lower16:.LC35
 4370 08a8 003000E3 		movw	r3, #:lower16:.LC36
 4371 08ac 00C040E3 		movt	ip, #:upper16:.LC35
 4372 08b0 003040E3 		movt	r3, #:upper16:.LC36
 4373 08b4 0160A0E3 		mov	r6, #1
 4374 08b8 002000E3 		movw	r2, #:lower16:.LC2
 4375              	.LVL509:
 4376 08bc 001000E3 		movw	r1, #:lower16:.LC8
 4377 08c0 08008DE5 		str	r0, [sp, #8]
 4378 08c4 00308DE5 		str	r3, [sp]
 4379 08c8 0400A0E1 		mov	r0, r4
 4380 08cc 04C08DE5 		str	ip, [sp, #4]
 4381 08d0 002040E3 		movt	r2, #:upper16:.LC2
 4382 08d4 0C608DE5 		str	r6, [sp, #12]
 4383 08d8 001040E3 		movt	r1, #:upper16:.LC8
 4384 08dc 144094E5 		ldr	r4, [r4, #20]
 4385              	.LVL510:
 4386 08e0 8F3100E3 		movw	r3, #399
 4387 08e4 34FF2FE1 		blx	r4
 4388              	.LVL511:
 4389 08e8 0600A0E1 		mov	r0, r6
 4390 08ec 0CFEFFEA 		b	.L274
 4391              	.LVL512:
 4392              	.L360:
 4393              	.LBB772:
 4394              	.LBB764:
 451:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, weights_time->type, kTfLiteFloat32);
 4395              		.loc 1 451 0 discriminator 1
 4396 08f0 000000E3 		movw	r0, #:lower16:.LC49
 4397 08f4 003000E3 		movw	r3, #:lower16:.LC40
 4398 08f8 000040E3 		movt	r0, #:upper16:.LC49
 4399 08fc 003040E3 		movt	r3, #:upper16:.LC40
 4400 0900 0150A0E3 		mov	r5, #1
 4401              	.LVL513:
 4402 0904 002000E3 		movw	r2, #:lower16:.LC2
 4403              	.LVL514:
 4404 0908 001000E3 		movw	r1, #:lower16:.LC8
 4405 090c 41008DE9 		stmib	sp, {r0, r6}
 4406              	.LVL515:
 4407 0910 00308DE5 		str	r3, [sp]
 4408 0914 0400A0E1 		mov	r0, r4
 4409 0918 0C508DE5 		str	r5, [sp, #12]
 4410 091c 002040E3 		movt	r2, #:upper16:.LC2
 4411 0920 001040E3 		movt	r1, #:upper16:.LC8
 4412 0924 144094E5 		ldr	r4, [r4, #20]
 4413              	.LVL516:
 4414 0928 C33100E3 		movw	r3, #451
 4415 092c 34FF2FE1 		blx	r4
 4416              	.LVL517:
 4417 0930 0500A0E1 		mov	r0, r5
 4418 0934 FAFDFFEA 		b	.L274
 4419              	.LVL518:
 4420              	.L359:
 4421              	.LBE764:
 4422              	.LBB765:
 407:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, weights_time->type, kTfLiteInt16);
 4423              		.loc 1 407 0
 4424 0938 0030D8E5 		ldrb	r3, [r8]	@ zero_extendqisi2
 4425 093c 090053E3 		cmp	r3, #9
 4426 0940 B300001A 		bne	.L365
 408:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, activation_state->type, kTfLiteInt16);
 4427              		.loc 1 408 0
 4428 0944 0000DBE5 		ldrb	r0, [fp]	@ zero_extendqisi2
 4429 0948 070050E3 		cmp	r0, #7
 4430 094c 5200001A 		bne	.L366
 409:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     if (bias != nullptr) {
 4431              		.loc 1 409 0
 4432 0950 14309DE5 		ldr	r3, [sp, #20]
 4433 0954 0000D3E5 		ldrb	r0, [r3]	@ zero_extendqisi2
 4434 0958 070050E3 		cmp	r0, #7
 4435 095c 3B00001A 		bne	.L367
 410:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****       TF_LITE_ENSURE_EQ(context, bias->type, kTfLiteInt32);
 4436              		.loc 1 410 0
 4437 0960 18309DE5 		ldr	r3, [sp, #24]
 4438 0964 000053E3 		cmp	r3, #0
 4439 0968 0200000A 		beq	.L302
 411:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 4440              		.loc 1 411 0
 4441 096c 0000D3E5 		ldrb	r0, [r3]	@ zero_extendqisi2
 4442 0970 020050E3 		cmp	r0, #2
 4443 0974 B800001A 		bne	.L368
 4444              	.L302:
 414:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4445              		.loc 1 414 0
 4446 0978 0000D2E5 		ldrb	r0, [r2]	@ zero_extendqisi2
 4447 097c 090050E3 		cmp	r0, #9
 4448 0980 D500001A 		bne	.L369
 418:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const double effective_scale_2 =
 4449              		.loc 1 418 0
 4450 0984 14309DE5 		ldr	r3, [sp, #20]
 420:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                             weights_time->params.scale / output->params.scale);
 4451              		.loc 1 420 0
 4452 0988 037A9BED 		vldr.32	s14, [fp, #12]
 417:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         activation_state->params.scale);
 4453              		.loc 1 417 0
 4454 098c 036AD7ED 		vldr.32	s13, [r7, #12]
 418:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const double effective_scale_2 =
 4455              		.loc 1 418 0
 4456 0990 036A93ED 		vldr.32	s12, [r3, #12]
 417:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         activation_state->params.scale);
 4457              		.loc 1 417 0
 4458 0994 035A98ED 		vldr.32	s10, [r8, #12]
 421:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4459              		.loc 1 421 0
 4460 0998 035AD2ED 		vldr.32	s11, [r2, #12]
 424:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         context,
 4461              		.loc 1 424 0
 4462 099c 18309DE5 		ldr	r3, [sp, #24]
 420:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****                             weights_time->params.scale / output->params.scale);
 4463              		.loc 1 420 0
 4464 09a0 077A26EE 		vmul.f32	s14, s12, s14
 417:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         activation_state->params.scale);
 4465              		.loc 1 417 0
 4466 09a4 856A66EE 		vmul.f32	s13, s13, s10
 424:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         context,
 4467              		.loc 1 424 0
 4468 09a8 037AD3ED 		vldr.32	s15, [r3, #12]
 4469 09ac DF2BDFED 		vldr.64	d18, .L371
 421:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4470              		.loc 1 421 0
 4471 09b0 258A87EE 		vdiv.f32	s16, s14, s11
 417:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         activation_state->params.scale);
 4472              		.loc 1 417 0
 4473 09b4 860A86EE 		vdiv.f32	s0, s13, s12
 424:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         context,
 4474              		.loc 1 424 0
 4475 09b8 C71AF7EE 		vcvt.f64.f32	d17, s14
 4476 09bc E70AF7EE 		vcvt.f64.f32	d16, s15
 4477 09c0 E10B70EE 		vsub.f64	d16, d16, d17
 4478              	.LBB766:
 4479              	.LBB767:
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 4480              		.loc 6 86 0
 4481 09c4 E00BF0EE 		vabs.f64	d16, d16
 4482              	.LBE767:
 4483              	.LBE766:
 424:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         context,
 4484              		.loc 1 424 0
 4485 09c8 E20BF4EE 		vcmpe.f64	d16, d18
 4486 09cc 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 421:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4487              		.loc 1 421 0
 4488 09d0 C88AB7EE 		vcvt.f64.f32	d8, s16
 418:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     const double effective_scale_2 =
 4489              		.loc 1 418 0
 4490 09d4 C00AB7EE 		vcvt.f64.f32	d0, s0
 4491              	.LVL519:
 424:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         context,
 4492              		.loc 1 424 0
 4493 09d8 B200005A 		bpl	.L370
 431:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     QuantizeMultiplier(effective_scale_2, &(data->effective_scale_2_a),
 4494              		.loc 1 431 0
 4495 09dc 081085E2 		add	r1, r5, #8
 4496 09e0 0500A0E1 		mov	r0, r5
 4497 09e4 14208DE5 		str	r2, [sp, #20]
 4498              	.LVL520:
 4499 09e8 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 4500              	.LVL521:
 433:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4501              		.loc 1 433 0
 4502 09ec 480BB0EE 		vmov.f64	d0, d8
 4503 09f0 0C1085E2 		add	r1, r5, #12
 4504 09f4 040085E2 		add	r0, r5, #4
 4505 09f8 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 4506              	.LVL522:
 436:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4507              		.loc 1 436 0
 4508 09fc 14209DE5 		ldr	r2, [sp, #20]
 438:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4509              		.loc 1 438 0
 4510 0a00 403094E5 		ldr	r3, [r4, #64]
 435:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     data->output_zero_point = output->params.zero_point;
 4511              		.loc 1 435 0
 4512 0a04 101097E5 		ldr	r1, [r7, #16]
 436:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4513              		.loc 1 436 0
 4514 0a08 102092E5 		ldr	r2, [r2, #16]
 438:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4515              		.loc 1 438 0
 4516 0a0c 000053E3 		cmp	r3, #0
 435:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     data->output_zero_point = output->params.zero_point;
 4517              		.loc 1 435 0
 4518 0a10 181085E5 		str	r1, [r5, #24]
 436:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4519              		.loc 1 436 0
 4520 0a14 1C2085E5 		str	r2, [r5, #28]
 438:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4521              		.loc 1 438 0
 4522 0a18 56FFFF0A 		beq	.L297
 4523              	.LVL523:
 441:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         &(data->scratch_tensor_index));
 4524              		.loc 1 441 0
 4525 0a1c 1C209DE5 		ldr	r2, [sp, #28]
 442:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_OK(context, scratch_status);
 4526              		.loc 1 442 0
 4527 0a20 0400A0E1 		mov	r0, r4
 441:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         &(data->scratch_tensor_index));
 4528              		.loc 1 441 0
 4529 0a24 990201E0 		mul	r1, r9, r2
 442:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_OK(context, scratch_status);
 4530              		.loc 1 442 0
 4531 0a28 102085E2 		add	r2, r5, #16
 4532 0a2c 0111A0E1 		lsl	r1, r1, #2
 4533 0a30 33FF2FE1 		blx	r3
 4534              	.LVL524:
 4535              	.LBB768:
 443:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4536              		.loc 1 443 0
 4537 0a34 000050E3 		cmp	r0, #0
 4538              	.LVL525:
 4539 0a38 B9FDFF1A 		bne	.L274
 4540              	.LBE768:
 447:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****             &(data->scratch_output_tensor_index));
 4541              		.loc 1 447 0
 4542 0a3c 1C309DE5 		ldr	r3, [sp, #28]
 448:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_OK(context, scratch_output_status);
 4543              		.loc 1 448 0
 4544 0a40 142085E2 		add	r2, r5, #20
 447:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****             &(data->scratch_output_tensor_index));
 4545              		.loc 1 447 0
 4546 0a44 9A0301E0 		mul	r1, r10, r3
 448:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_OK(context, scratch_output_status);
 4547              		.loc 1 448 0
 4548 0a48 403094E5 		ldr	r3, [r4, #64]
 4549 0a4c 35FEFFEA 		b	.L336
 4550              	.LVL526:
 4551              	.L367:
 409:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     if (bias != nullptr) {
 4552              		.loc 1 409 0 discriminator 1
 4553 0a50 00C000E3 		movw	ip, #:lower16:.LC41
 4554 0a54 003000E3 		movw	r3, #:lower16:.LC43
 4555 0a58 00C040E3 		movt	ip, #:upper16:.LC41
 4556 0a5c 003040E3 		movt	r3, #:upper16:.LC43
 4557 0a60 07E0A0E3 		mov	lr, #7
 4558 0a64 002000E3 		movw	r2, #:lower16:.LC2
 4559              	.LVL527:
 4560 0a68 001000E3 		movw	r1, #:lower16:.LC8
 4561 0a6c 08008DE5 		str	r0, [sp, #8]
 4562 0a70 00308DE5 		str	r3, [sp]
 4563 0a74 0400A0E1 		mov	r0, r4
 4564 0a78 04C08DE5 		str	ip, [sp, #4]
 4565 0a7c 002040E3 		movt	r2, #:upper16:.LC2
 4566 0a80 0CE08DE5 		str	lr, [sp, #12]
 4567 0a84 001040E3 		movt	r1, #:upper16:.LC8
 4568 0a88 144094E5 		ldr	r4, [r4, #20]
 4569              	.LVL528:
 4570 0a8c 993100E3 		movw	r3, #409
 4571 0a90 34FF2FE1 		blx	r4
 4572              	.LVL529:
 4573 0a94 0100A0E3 		mov	r0, #1
 4574 0a98 A1FDFFEA 		b	.L274
 4575              	.LVL530:
 4576              	.L366:
 408:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, activation_state->type, kTfLiteInt16);
 4577              		.loc 1 408 0 discriminator 1
 4578 0a9c 00C000E3 		movw	ip, #:lower16:.LC41
 4579 0aa0 003000E3 		movw	r3, #:lower16:.LC42
 4580 0aa4 00C040E3 		movt	ip, #:upper16:.LC41
 4581 0aa8 003040E3 		movt	r3, #:upper16:.LC42
 4582 0aac 07E0A0E3 		mov	lr, #7
 4583 0ab0 002000E3 		movw	r2, #:lower16:.LC2
 4584              	.LVL531:
 4585 0ab4 001000E3 		movw	r1, #:lower16:.LC8
 4586 0ab8 08008DE5 		str	r0, [sp, #8]
 4587 0abc 00308DE5 		str	r3, [sp]
 4588 0ac0 0400A0E1 		mov	r0, r4
 4589 0ac4 04C08DE5 		str	ip, [sp, #4]
 4590 0ac8 002040E3 		movt	r2, #:upper16:.LC2
 4591 0acc 0CE08DE5 		str	lr, [sp, #12]
 4592 0ad0 001040E3 		movt	r1, #:upper16:.LC8
 4593 0ad4 144094E5 		ldr	r4, [r4, #20]
 4594              	.LVL532:
 4595 0ad8 663FA0E3 		mov	r3, #408
 4596 0adc 34FF2FE1 		blx	r4
 4597              	.LVL533:
 4598 0ae0 0100A0E3 		mov	r0, #1
 4599 0ae4 8EFDFFEA 		b	.L274
 4600              	.LVL534:
 4601              	.L362:
 4602              	.LBE765:
 4603              	.LBB769:
 453:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     if (bias != nullptr) {
 4604              		.loc 1 453 0 discriminator 1
 4605 0ae8 000000E3 		movw	r0, #:lower16:.LC49
 4606 0aec 003000E3 		movw	r3, #:lower16:.LC43
 4607 0af0 000040E3 		movt	r0, #:upper16:.LC49
 4608 0af4 003040E3 		movt	r3, #:upper16:.LC43
 4609 0af8 0160A0E3 		mov	r6, #1
 4610 0afc 002000E3 		movw	r2, #:lower16:.LC2
 4611              	.LVL535:
 4612 0b00 001000E3 		movw	r1, #:lower16:.LC8
 4613 0b04 01108DE9 		stmib	sp, {r0, ip}
 4614 0b08 00308DE5 		str	r3, [sp]
 4615 0b0c 0400A0E1 		mov	r0, r4
 4616 0b10 0C608DE5 		str	r6, [sp, #12]
 4617 0b14 002040E3 		movt	r2, #:upper16:.LC2
 4618 0b18 001040E3 		movt	r1, #:upper16:.LC8
 4619 0b1c 144094E5 		ldr	r4, [r4, #20]
 4620              	.LVL536:
 4621 0b20 C53100E3 		movw	r3, #453
 4622 0b24 34FF2FE1 		blx	r4
 4623              	.LVL537:
 4624 0b28 0600A0E1 		mov	r0, r6
 4625 0b2c 7CFDFFEA 		b	.L274
 4626              	.LVL538:
 4627              	.L361:
 452:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, activation_state->type, kTfLiteFloat32);
 4628              		.loc 1 452 0 discriminator 1
 4629 0b30 000000E3 		movw	r0, #:lower16:.LC49
 4630 0b34 003000E3 		movw	r3, #:lower16:.LC42
 4631 0b38 000040E3 		movt	r0, #:upper16:.LC49
 4632 0b3c 003040E3 		movt	r3, #:upper16:.LC42
 4633 0b40 002000E3 		movw	r2, #:lower16:.LC2
 4634              	.LVL539:
 4635 0b44 001000E3 		movw	r1, #:lower16:.LC8
 4636 0b48 04008DE5 		str	r0, [sp, #4]
 4637 0b4c 002040E3 		movt	r2, #:upper16:.LC2
 4638 0b50 0400A0E1 		mov	r0, r4
 4639 0b54 00308DE5 		str	r3, [sp]
 4640 0b58 0C608DE5 		str	r6, [sp, #12]
 4641 0b5c 001040E3 		movt	r1, #:upper16:.LC8
 4642 0b60 08C08DE5 		str	ip, [sp, #8]
 4643 0b64 713FA0E3 		mov	r3, #452
 4644 0b68 144094E5 		ldr	r4, [r4, #20]
 4645              	.LVL540:
 4646 0b6c 34FF2FE1 		blx	r4
 4647              	.LVL541:
 4648 0b70 0600A0E1 		mov	r0, r6
 4649 0b74 6AFDFFEA 		b	.L274
 4650              	.LVL542:
 4651              	.L364:
 457:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4652              		.loc 1 457 0 discriminator 1
 4653 0b78 145094E5 		ldr	r5, [r4, #20]
 4654              	.LVL543:
 4655 0b7c FEFFFFEB 		bl	TfLiteTypeGetName
 4656              	.LVL544:
 4657 0b80 0060A0E1 		mov	r6, r0
 4658 0b84 0100A0E3 		mov	r0, #1
 4659 0b88 FEFFFFEB 		bl	TfLiteTypeGetName
 4660              	.LVL545:
 4661 0b8c 00C000E3 		movw	ip, #:lower16:.LC49
 4662 0b90 003000E3 		movw	r3, #:lower16:.LC47
 4663 0b94 00C040E3 		movt	ip, #:upper16:.LC49
 4664 0b98 003040E3 		movt	r3, #:upper16:.LC47
 4665 0b9c 002000E3 		movw	r2, #:lower16:.LC2
 4666 0ba0 001000E3 		movw	r1, #:lower16:.LC46
 4667 0ba4 0C008DE5 		str	r0, [sp, #12]
 4668 0ba8 002040E3 		movt	r2, #:upper16:.LC2
 4669 0bac 0400A0E1 		mov	r0, r4
 4670 0bb0 08108DE8 		stm	sp, {r3, ip}
 4671 0bb4 08608DE5 		str	r6, [sp, #8]
 4672 0bb8 001040E3 		movt	r1, #:upper16:.LC46
 4673 0bbc C93100E3 		movw	r3, #457
 4674 0bc0 35FF2FE1 		blx	r5
 4675              	.LVL546:
 4676 0bc4 0100A0E3 		mov	r0, #1
 4677 0bc8 55FDFFEA 		b	.L274
 4678              	.LVL547:
 4679              	.L363:
 455:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 4680              		.loc 1 455 0 discriminator 1
 4681 0bcc 000000E3 		movw	r0, #:lower16:.LC49
 4682 0bd0 003000E3 		movw	r3, #:lower16:.LC45
 4683 0bd4 000040E3 		movt	r0, #:upper16:.LC49
 4684 0bd8 003040E3 		movt	r3, #:upper16:.LC45
 4685 0bdc 0160A0E3 		mov	r6, #1
 4686 0be0 002000E3 		movw	r2, #:lower16:.LC2
 4687              	.LVL548:
 4688 0be4 001000E3 		movw	r1, #:lower16:.LC8
 4689 0be8 01108DE9 		stmib	sp, {r0, ip}
 4690 0bec 00308DE5 		str	r3, [sp]
 4691 0bf0 0400A0E1 		mov	r0, r4
 4692 0bf4 0C608DE5 		str	r6, [sp, #12]
 4693 0bf8 002040E3 		movt	r2, #:upper16:.LC2
 4694 0bfc 001040E3 		movt	r1, #:upper16:.LC8
 4695 0c00 144094E5 		ldr	r4, [r4, #20]
 4696              	.LVL549:
 4697 0c04 C73100E3 		movw	r3, #455
 4698 0c08 34FF2FE1 		blx	r4
 4699              	.LVL550:
 4700 0c0c 0600A0E1 		mov	r0, r6
 4701 0c10 43FDFFEA 		b	.L274
 4702              	.LVL551:
 4703              	.L365:
 4704              	.LBE769:
 4705              	.LBB770:
 407:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     TF_LITE_ENSURE_EQ(context, weights_time->type, kTfLiteInt16);
 4706              		.loc 1 407 0 discriminator 1
 4707 0c14 00E000E3 		movw	lr, #:lower16:.LC39
 4708 0c18 00C000E3 		movw	ip, #:lower16:.LC40
 4709 0c1c 00E040E3 		movt	lr, #:upper16:.LC39
 4710 0c20 00C040E3 		movt	ip, #:upper16:.LC40
 4711 0c24 002000E3 		movw	r2, #:lower16:.LC2
 4712              	.LVL552:
 4713 0c28 001000E3 		movw	r1, #:lower16:.LC8
 4714 0c2c 0C008DE5 		str	r0, [sp, #12]
 4715 0c30 002040E3 		movt	r2, #:upper16:.LC2
 4716 0c34 08308DE5 		str	r3, [sp, #8]
 4717 0c38 0400A0E1 		mov	r0, r4
 4718 0c3c 04E08DE5 		str	lr, [sp, #4]
 4719 0c40 001040E3 		movt	r1, #:upper16:.LC8
 4720 0c44 00C08DE5 		str	ip, [sp]
 4721 0c48 973100E3 		movw	r3, #407
 4722 0c4c 144094E5 		ldr	r4, [r4, #20]
 4723              	.LVL553:
 4724 0c50 34FF2FE1 		blx	r4
 4725              	.LVL554:
 4726 0c54 0100A0E3 		mov	r0, #1
 4727 0c58 31FDFFEA 		b	.L274
 4728              	.LVL555:
 4729              	.L368:
 411:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****     }
 4730              		.loc 1 411 0 discriminator 1
 4731 0c5c 00C000E3 		movw	ip, #:lower16:.LC44
 4732 0c60 003000E3 		movw	r3, #:lower16:.LC45
 4733 0c64 00C040E3 		movt	ip, #:upper16:.LC44
 4734 0c68 003040E3 		movt	r3, #:upper16:.LC45
 4735 0c6c 02E0A0E3 		mov	lr, #2
 4736 0c70 002000E3 		movw	r2, #:lower16:.LC2
 4737              	.LVL556:
 4738 0c74 001000E3 		movw	r1, #:lower16:.LC8
 4739 0c78 08008DE5 		str	r0, [sp, #8]
 4740 0c7c 00308DE5 		str	r3, [sp]
 4741 0c80 0400A0E1 		mov	r0, r4
 4742 0c84 04C08DE5 		str	ip, [sp, #4]
 4743 0c88 002040E3 		movt	r2, #:upper16:.LC2
 4744 0c8c 0CE08DE5 		str	lr, [sp, #12]
 4745 0c90 001040E3 		movt	r1, #:upper16:.LC8
 4746 0c94 144094E5 		ldr	r4, [r4, #20]
 4747              	.LVL557:
 4748 0c98 9B3100E3 		movw	r3, #411
 4749 0c9c 34FF2FE1 		blx	r4
 4750              	.LVL558:
 4751 0ca0 0100A0E3 		mov	r0, #1
 4752 0ca4 1EFDFFEA 		b	.L274
 4753              	.LVL559:
 4754              	.L370:
 424:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp ****         context,
 4755              		.loc 1 424 0 discriminator 1
 4756 0ca8 003000E3 		movw	r3, #:lower16:.LC48
 4757 0cac 002000E3 		movw	r2, #:lower16:.LC2
 4758              	.LVL560:
 4759 0cb0 003040E3 		movt	r3, #:upper16:.LC48
 4760 0cb4 001000E3 		movw	r1, #:lower16:.LC3
 4761 0cb8 00308DE5 		str	r3, [sp]
 4762 0cbc 0400A0E1 		mov	r0, r4
 4763 0cc0 002040E3 		movt	r2, #:upper16:.LC2
 4764 0cc4 001040E3 		movt	r1, #:upper16:.LC3
 4765 0cc8 145094E5 		ldr	r5, [r4, #20]
 4766              	.LVL561:
 4767 0ccc 6B3FA0E3 		mov	r3, #428
 4768 0cd0 35FF2FE1 		blx	r5
 4769              	.LVL562:
 4770 0cd4 0100A0E3 		mov	r0, #1
 4771 0cd8 11FDFFEA 		b	.L274
 4772              	.LVL563:
 4773              	.L369:
 414:../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/svdf_common.cpp **** 
 4774              		.loc 1 414 0 discriminator 1
 4775 0cdc 145094E5 		ldr	r5, [r4, #20]
 4776              	.LVL564:
 4777 0ce0 FEFFFFEB 		bl	TfLiteTypeGetName
 4778              	.LVL565:
 4779 0ce4 0060A0E1 		mov	r6, r0
 4780 0ce8 0900A0E3 		mov	r0, #9
 4781 0cec FEFFFFEB 		bl	TfLiteTypeGetName
 4782              	.LVL566:
 4783 0cf0 00C000E3 		movw	ip, #:lower16:.LC39
 4784 0cf4 003000E3 		movw	r3, #:lower16:.LC47
 4785 0cf8 00C040E3 		movt	ip, #:upper16:.LC39
 4786 0cfc 003040E3 		movt	r3, #:upper16:.LC47
 4787 0d00 002000E3 		movw	r2, #:lower16:.LC2
 4788 0d04 001000E3 		movw	r1, #:lower16:.LC46
 4789 0d08 0C008DE5 		str	r0, [sp, #12]
 4790 0d0c 002040E3 		movt	r2, #:upper16:.LC2
 4791 0d10 0400A0E1 		mov	r0, r4
 4792 0d14 08108DE8 		stm	sp, {r3, ip}
 4793 0d18 08608DE5 		str	r6, [sp, #8]
 4794 0d1c 001040E3 		movt	r1, #:upper16:.LC46
 4795 0d20 9E3100E3 		movw	r3, #414
 4796 0d24 35FF2FE1 		blx	r5
 4797              	.LVL567:
 4798 0d28 0100A0E3 		mov	r0, #1
 4799 0d2c FCFCFFEA 		b	.L274
 4800              	.L372:
 4801              		.align	3
 4802              	.L371:
 4803 0d30 F168E388 		.word	-1998362383
 4804 0d34 B5F8E43E 		.word	1055193269
 4805              	.LBE770:
 4806              	.LBE772:
 4807              		.cfi_endproc
 4808              	.LFE4180:
 4809              		.fnend
 4811              		.global	_ZN6tflite17kSvdfOutputTensorE
 4812              		.global	_ZN6tflite31kSvdfInputActivationStateTensorE
 4813              		.global	_ZN6tflite15kSvdfBiasTensorE
 4814              		.global	_ZN6tflite22kSvdfWeightsTimeTensorE
 4815              		.global	_ZN6tflite25kSvdfWeightsFeatureTensorE
 4816              		.global	_ZN6tflite16kSvdfInputTensorE
 4817              		.section	.rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4,"aMS",%progbits,1
 4818              		.align	2
 4819              	.LC2:
 4820 0000 2E2E2F73 		.ascii	"../src/tensorflow_lite/src/tensorflow/lite/micro/ke"
 4820      72632F74 
 4820      656E736F 
 4820      72666C6F 
 4820      775F6C69 
 4821 0033 726E656C 		.ascii	"rnels/svdf_common.cpp\000"
 4821      732F7376 
 4821      64665F63 
 4821      6F6D6D6F 
 4821      6E2E6370 
 4822 0049 000000   		.space	3
 4823              	.LC3:
 4824 004c 25733A25 		.ascii	"%s:%d %s was not true.\000"
 4824      64202573 
 4824      20776173 
 4824      206E6F74 
 4824      20747275 
 4825 0063 00       		.space	1
 4826              	.LC4:
 4827 0064 696E7075 		.ascii	"input != nullptr\000"
 4827      7420213D 
 4827      206E756C 
 4827      6C707472 
 4827      00
 4828 0075 000000   		.space	3
 4829              	.LC5:
 4830 0078 77656967 		.ascii	"weights_feature != nullptr\000"
 4830      6874735F 
 4830      66656174 
 4830      75726520 
 4830      213D206E 
 4831 0093 00       		.space	1
 4832              	.LC6:
 4833 0094 77656967 		.ascii	"weights_time != nullptr\000"
 4833      6874735F 
 4833      74696D65 
 4833      20213D20 
 4833      6E756C6C 
 4834              	.LC7:
 4835 00ac 61637469 		.ascii	"activation_state != nullptr\000"
 4835      76617469 
 4835      6F6E5F73 
 4835      74617465 
 4835      20213D20 
 4836              	.LC8:
 4837 00c8 25733A25 		.ascii	"%s:%d %s != %s (%d != %d)\000"
 4837      64202573 
 4837      20213D20 
 4837      25732028 
 4837      25642021 
 4838 00e2 0000     		.space	2
 4839              	.LC9:
 4840 00e4 3000     		.ascii	"0\000"
 4841 00e6 0000     		.space	2
 4842              	.LC10:
 4843 00e8 6E756D5F 		.ascii	"num_filters % rank\000"
 4843      66696C74 
 4843      65727320 
 4843      25207261 
 4843      6E6B00
 4844 00fb 00       		.space	1
 4845              	.LC11:
 4846 00fc 696E7075 		.ascii	"input->type == kTfLiteFloat32 || input->type == kTf"
 4846      742D3E74 
 4846      79706520 
 4846      3D3D206B 
 4846      54664C69 
 4847 012f 4C697465 		.ascii	"LiteInt8\000"
 4847      496E7438 
 4847      00
 4848              	.LC12:
 4849 0138 3200     		.ascii	"2\000"
 4850 013a 0000     		.space	2
 4851              	.LC13:
 4852 013c 4E756D44 		.ascii	"NumDimensions(input)\000"
 4852      696D656E 
 4852      73696F6E 
 4852      7328696E 
 4852      70757429 
 4853 0151 000000   		.space	3
 4854              	.LC14:
 4855 0154 3100     		.ascii	"1\000"
 4856 0156 0000     		.space	2
 4857              	.LC15:
 4858 0158 6E6F6465 		.ascii	"node->outputs->size\000"
 4858      2D3E6F75 
 4858      74707574 
 4858      732D3E73 
 4858      697A6500 
 4859              	.LC16:
 4860 016c 6F757470 		.ascii	"output != nullptr\000"
 4860      75742021 
 4860      3D206E75 
 4860      6C6C7074 
 4860      7200
 4861 017e 0000     		.space	2
 4862              	.LC17:
 4863 0180 4E756D44 		.ascii	"NumDimensions(output)\000"
 4863      696D656E 
 4863      73696F6E 
 4863      73286F75 
 4863      74707574 
 4864 0196 0000     		.space	2
 4865              	.LC18:
 4866 0198 62617463 		.ascii	"batch_size\000"
 4866      685F7369 
 4866      7A6500
 4867 01a3 00       		.space	1
 4868              	.LC19:
 4869 01a4 6F757470 		.ascii	"output->dims->data[0]\000"
 4869      75742D3E 
 4869      64696D73 
 4869      2D3E6461 
 4869      74615B30 
 4870 01ba 0000     		.space	2
 4871              	.LC20:
 4872 01bc 6E756D5F 		.ascii	"num_units\000"
 4872      756E6974 
 4872      7300
 4873 01c6 0000     		.space	2
 4874              	.LC21:
 4875 01c8 6F757470 		.ascii	"output->dims->data[1]\000"
 4875      75742D3E 
 4875      64696D73 
 4875      2D3E6461 
 4875      74615B31 
 4876 01de 0000     		.space	2
 4877              	.LC22:
 4878 01e0 4E756D44 		.ascii	"NumDimensions(weights_feature)\000"
 4878      696D656E 
 4878      73696F6E 
 4878      73287765 
 4878      69676874 
 4879 01ff 00       		.space	1
 4880              	.LC23:
 4881 0200 696E7075 		.ascii	"input_size\000"
 4881      745F7369 
 4881      7A6500
 4882 020b 00       		.space	1
 4883              	.LC24:
 4884 020c 77656967 		.ascii	"weights_feature->dims->data[1]\000"
 4884      6874735F 
 4884      66656174 
 4884      7572652D 
 4884      3E64696D 
 4885 022b 00       		.space	1
 4886              	.LC25:
 4887 022c 4E756D44 		.ascii	"NumDimensions(weights_time)\000"
 4887      696D656E 
 4887      73696F6E 
 4887      73287765 
 4887      69676874 
 4888              	.LC26:
 4889 0248 6E756D5F 		.ascii	"num_filters\000"
 4889      66696C74 
 4889      65727300 
 4890              	.LC27:
 4891 0254 77656967 		.ascii	"weights_time->dims->data[0]\000"
 4891      6874735F 
 4891      74696D65 
 4891      2D3E6469 
 4891      6D732D3E 
 4892              	.LC28:
 4893 0270 6D656D6F 		.ascii	"memory_size\000"
 4893      72795F73 
 4893      697A6500 
 4894              	.LC29:
 4895 027c 77656967 		.ascii	"weights_time->dims->data[1]\000"
 4895      6874735F 
 4895      74696D65 
 4895      2D3E6469 
 4895      6D732D3E 
 4896              	.LC30:
 4897 0298 62696173 		.ascii	"bias->dims->data[0]\000"
 4897      2D3E6469 
 4897      6D732D3E 
 4897      64617461 
 4897      5B305D00 
 4898              	.LC31:
 4899 02ac 4E756D44 		.ascii	"NumDimensions(activation_state)\000"
 4899      696D656E 
 4899      73696F6E 
 4899      73286163 
 4899      74697661 
 4900              	.LC32:
 4901 02cc 61637469 		.ascii	"activation_state->dims->data[0]\000"
 4901      76617469 
 4901      6F6E5F73 
 4901      74617465 
 4901      2D3E6469 
 4902              	.LC33:
 4903 02ec 6D656D6F 		.ascii	"memory_size * num_filters\000"
 4903      72795F73 
 4903      697A6520 
 4903      2A206E75 
 4903      6D5F6669 
 4904 0306 0000     		.space	2
 4905              	.LC34:
 4906 0308 61637469 		.ascii	"activation_state->dims->data[1]\000"
 4906      76617469 
 4906      6F6E5F73 
 4906      74617465 
 4906      2D3E6469 
 4907              	.LC35:
 4908 0328 74727565 		.ascii	"true\000"
 4908      00
 4909 032d 000000   		.space	3
 4910              	.LC36:
 4911 0330 61637469 		.ascii	"activation_state->is_variable\000"
 4911      76617469 
 4911      6F6E5F73 
 4911      74617465 
 4911      2D3E6973 
 4912 034e 0000     		.space	2
 4913              	.LC37:
 4914 0350 3500     		.ascii	"5\000"
 4915 0352 0000     		.space	2
 4916              	.LC38:
 4917 0354 6E6F6465 		.ascii	"node->inputs->size\000"
 4917      2D3E696E 
 4917      70757473 
 4917      2D3E7369 
 4917      7A6500
 4918 0367 00       		.space	1
 4919              	.LC39:
 4920 0368 6B54664C 		.ascii	"kTfLiteInt8\000"
 4920      69746549 
 4920      6E743800 
 4921              	.LC40:
 4922 0374 77656967 		.ascii	"weights_feature->type\000"
 4922      6874735F 
 4922      66656174 
 4922      7572652D 
 4922      3E747970 
 4923 038a 0000     		.space	2
 4924              	.LC41:
 4925 038c 6B54664C 		.ascii	"kTfLiteInt16\000"
 4925      69746549 
 4925      6E743136 
 4925      00
 4926 0399 000000   		.space	3
 4927              	.LC42:
 4928 039c 77656967 		.ascii	"weights_time->type\000"
 4928      6874735F 
 4928      74696D65 
 4928      2D3E7479 
 4928      706500
 4929 03af 00       		.space	1
 4930              	.LC43:
 4931 03b0 61637469 		.ascii	"activation_state->type\000"
 4931      76617469 
 4931      6F6E5F73 
 4931      74617465 
 4931      2D3E7479 
 4932 03c7 00       		.space	1
 4933              	.LC44:
 4934 03c8 6B54664C 		.ascii	"kTfLiteInt32\000"
 4934      69746549 
 4934      6E743332 
 4934      00
 4935 03d5 000000   		.space	3
 4936              	.LC45:
 4937 03d8 62696173 		.ascii	"bias->type\000"
 4937      2D3E7479 
 4937      706500
 4938 03e3 00       		.space	1
 4939              	.LC46:
 4940 03e4 25733A25 		.ascii	"%s:%d %s != %s (%s != %s)\000"
 4940      64202573 
 4940      20213D20 
 4940      25732028 
 4940      25732021 
 4941 03fe 0000     		.space	2
 4942              	.LC47:
 4943 0400 6F757470 		.ascii	"output->type\000"
 4943      75742D3E 
 4943      74797065 
 4943      00
 4944 040d 000000   		.space	3
 4945              	.LC48:
 4946 0410 7374643A 		.ascii	"std::abs(static_cast<double>(bias->params.scale) - "
 4946      3A616273 
 4946      28737461 
 4946      7469635F 
 4946      63617374 
 4947 0443 73746174 		.ascii	"static_cast<double>(activation_state->params.scale "
 4947      69635F63 
 4947      6173743C 
 4947      646F7562 
 4947      6C653E28 
 4948 0476 2A207765 		.ascii	"* weights_time->params.scale)) < 1e-5\000"
 4948      69676874 
 4948      735F7469 
 4948      6D652D3E 
 4948      70617261 
 4949              	.LC49:
 4950 049c 6B54664C 		.ascii	"kTfLiteFloat32\000"
 4950      69746546 
 4950      6C6F6174 
 4950      333200
 4951              		.section	.rodata._ZN6tflite15kSvdfBiasTensorE,"a",%progbits
 4952              		.align	2
 4955              	_ZN6tflite15kSvdfBiasTensorE:
 4956 0000 03000000 		.word	3
 4957              		.section	.rodata._ZN6tflite16kSvdfInputTensorE,"a",%progbits
 4958              		.align	2
 4961              	_ZN6tflite16kSvdfInputTensorE:
 4962 0000 00000000 		.space	4
 4963              		.section	.rodata._ZN6tflite17kSvdfOutputTensorE,"a",%progbits
 4964              		.align	2
 4967              	_ZN6tflite17kSvdfOutputTensorE:
 4968 0000 00000000 		.space	4
 4969              		.section	.rodata._ZN6tflite22kSvdfWeightsTimeTensorE,"a",%progbits
 4970              		.align	2
 4973              	_ZN6tflite22kSvdfWeightsTimeTensorE:
 4974 0000 02000000 		.word	2
 4975              		.section	.rodata._ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalT
 4976              		.align	2
 4977              	.LC0:
 4978 0000 6578706F 		.ascii	"exponent <= 31\000"
 4978      6E656E74 
 4978      203C3D20 
 4978      333100
 4979 000f 00       		.space	1
 4980              	.LC1:
 4981 0010 433A2F52 		.ascii	"C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/AN"
 4981      656E6573 
 4981      61732F65 
 4981      32737475 
 4981      64696F5F 
 4982 0043 50525F52 		.ascii	"PR_RZA2M_RDK/src/tensorflow_lite/src/third_party/ge"
 4982      5A41324D 
 4982      5F52444B 
 4982      2F737263 
 4982      2F74656E 
 4983 0076 6D6D6C6F 		.ascii	"mmlowp/fixedpoint/fixedpoint.h\000"
 4983      77702F66 
 4983      69786564 
 4983      706F696E 
 4983      742F6669 
 4984              		.section	.rodata._ZN6tflite25kSvdfWeightsFeatureTensorE,"a",%progbits
 4985              		.align	2
 4988              	_ZN6tflite25kSvdfWeightsFeatureTensorE:
 4989 0000 01000000 		.word	1
 4990              		.section	.rodata._ZN6tflite31kSvdfInputActivationStateTensorE,"a",%progbits
 4991              		.align	2
 4994              	_ZN6tflite31kSvdfInputActivationStateTensorE:
 4995 0000 04000000 		.word	4
 4996              		.section	.rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__,"a",%progbits
 4997              		.align	3
 4998              		.set	.LANCHOR0,. + 0
 5001              	_ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:
 5002 0000 496E7465 		.ascii	"IntegerType gemmlowp::RoundingDivideByPOT(IntegerTy"
 5002      67657254 
 5002      79706520 
 5002      67656D6D 
 5002      6C6F7770 
 5003 0033 70652C20 		.ascii	"pe, int) [with IntegerType = long int]\000"
 5003      696E7429 
 5003      205B7769 
 5003      74682049 
 5003      6E746567 
 5004              		.text
 5005              	.Letext0:
 5006              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 5007              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 5008              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5009              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5010              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5011              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5012              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5013              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5014              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5015              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5016              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5017              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5018              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5019              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5020              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5021              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5022              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5023              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5024              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5025              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5026              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5027              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5028              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 5029              		.file 31 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5030              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5031              		.file 33 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5032              		.file 34 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5033              		.file 35 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5034              		.file 36 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5035              		.file 37 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5036              		.file 38 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5037              		.file 39 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
 5038              		.file 40 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
 5039              		.file 41 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
 5040              		.file 42 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 5041              		.file 43 "<built-in>"
 5042              		.file 44 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5043              		.file 45 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5044              		.file 46 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5045              		.file 47 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5046              		.file 48 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5047              		.file 49 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5048              		.file 50 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 5049              		.file 51 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
 5050              		.file 52 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
 5051              		.file 53 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
 5052              		.file 54 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
 5053              		.file 55 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/
 5054              		.file 56 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 svdf_common.cpp
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:18     .text._ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsPS4_SA_RKNS_6OpDataE:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:24     .text._ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsPS4_SA_RKNS_6OpDataE:00000000 _ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsPS4_SA_RKNS_6OpDataE
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:554    .text._ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsPS4_SA_RKNS_6OpDataE:000004c8 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:559    .text._ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsPS4_SA_RKNS_6OpDataE:000004d0 $a
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4977   .rodata._ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsPS4_SA_RKNS_6OpDataE.str1.4:00000000 .LC0
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4998   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 .LANCHOR0
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4980   .rodata._ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsPS4_SA_RKNS_6OpDataE.str1.4:00000010 .LC1
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:2258   .text._ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsPS4_SA_RKNS_6OpDataE:00001238 $d
.ARM.exidx.text._ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsPS4_SA_RKNS_6OpDataE:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:2269   .text._ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsiPS4_SA_:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:2275   .text._ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsiPS4_SA_:00000000 _ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsiPS4_SA_
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:3013   .text._ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsiPS4_SA_:00000560 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:3023   .text._ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsiPS4_SA_:00000564 $a
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:3032   .text._ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsiPS4_SA_:00000574 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:3044   .text._ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsiPS4_SA_:00000590 $a
.ARM.extab.text._ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsiPS4_SA_:00000000 $d
.ARM.exidx.text._ZN6tflite22EvalFloatSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsiPS4_SA_:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:3456   .text._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:3462   .text._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode:00000000 _ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4854   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000154 .LC14
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4857   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000158 .LC15
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4819   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000000 .LC2
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4836   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000000c8 .LC8
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4845   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000000fc .LC11
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4823   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:0000004c .LC3
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4848   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000138 .LC12
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4851   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:0000013c .LC13
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4839   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000000e4 .LC9
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4842   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000000e8 .LC10
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4826   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000064 .LC4
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4829   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000078 .LC5
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4832   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000094 .LC6
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4865   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000198 .LC18
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4868   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000001a4 .LC19
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4862   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000180 .LC17
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4834   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000000ac .LC7
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4871   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000001bc .LC20
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4874   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000001c8 .LC21
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4877   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000001e0 .LC22
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4880   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000200 .LC23
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4883   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:0000020c .LC24
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4859   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:0000016c .LC16
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4886   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:0000022c .LC25
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4888   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000248 .LC26
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4890   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000254 .LC27
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4892   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000270 .LC28
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4894   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:0000027c .LC29
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4896   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000298 .LC30
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4898   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000002ac .LC31
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4900   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000002cc .LC32
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4902   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000002ec .LC33
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4905   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000308 .LC34
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4913   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000350 .LC37
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4916   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000354 .LC38
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4907   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000328 .LC35
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4910   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000330 .LC36
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4949   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:0000049c .LC49
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4921   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000374 .LC40
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4924   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:0000038c .LC41
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4930   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000003b0 .LC43
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4927   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:0000039c .LC42
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4942   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000400 .LC47
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4939   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000003e4 .LC46
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4936   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000003d8 .LC45
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4919   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000368 .LC39
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4933   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:000003c8 .LC44
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4945   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000410 .LC48
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4803   .text._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode:00000d30 $d
.ARM.extab.text._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode:00000000 $d
.ARM.exidx.text._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4967   .rodata._ZN6tflite17kSvdfOutputTensorE:00000000 _ZN6tflite17kSvdfOutputTensorE
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4994   .rodata._ZN6tflite31kSvdfInputActivationStateTensorE:00000000 _ZN6tflite31kSvdfInputActivationStateTensorE
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4955   .rodata._ZN6tflite15kSvdfBiasTensorE:00000000 _ZN6tflite15kSvdfBiasTensorE
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4973   .rodata._ZN6tflite22kSvdfWeightsTimeTensorE:00000000 _ZN6tflite22kSvdfWeightsTimeTensorE
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4988   .rodata._ZN6tflite25kSvdfWeightsFeatureTensorE:00000000 _ZN6tflite25kSvdfWeightsFeatureTensorE
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4961   .rodata._ZN6tflite16kSvdfInputTensorE:00000000 _ZN6tflite16kSvdfInputTensorE
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4818   .rodata._ZN6tflite11PrepareSvdfEP13TfLiteContextP10TfLiteNode.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4952   .rodata._ZN6tflite15kSvdfBiasTensorE:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4958   .rodata._ZN6tflite16kSvdfInputTensorE:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4964   .rodata._ZN6tflite17kSvdfOutputTensorE:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4970   .rodata._ZN6tflite22kSvdfWeightsTimeTensorE:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4976   .rodata._ZN6tflite24EvalIntegerSvdfReferenceEP13TfLiteContextP10TfLiteNodePK16TfLiteEvalTensorS6_S6_S6_PK16TfLiteSVDFParamsPS4_SA_RKNS_6OpDataE.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4985   .rodata._ZN6tflite25kSvdfWeightsFeatureTensorE:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4991   .rodata._ZN6tflite31kSvdfInputActivationStateTensorE:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:4997   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cc4Avxm5.s:5001   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 _ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.3e1481985cce1e923928453d8be0a65b
                           .group:00000000 wm4.cconfig.h.31.1472b8c7bd4952a63a52f3f4f718f872
                           .group:00000000 wm4.cpu_defines.h.31.54d44f9d3e7c42875c5a7fd49795eb93
                           .group:00000000 wm4.cconfig.h.515.5e729db314ae74226e291b4ae081e353
                           .group:00000000 wm4.cpp_type_traits.h.33.9f2bfd8c4471a9a299f6da3ec24c745c
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.newlib.h.21.59901f4bf241ab46c63694665baa7297
                           .group:00000000 wm4.features.h.22.37852b648068a281464730a5a4cc748e
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:00000000 wm4.stddef.h.39.fa2e86d241f4df50b9327c72832885e1
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.cdefs.h.47.9bc8274c84fddbf05edd550eb0bf48cd
                           .group:00000000 wm4.math.h.13.e7cbdea54f4da98ab8f7fad4d23502b2
                           .group:00000000 wm4.cmath.46.d6e5b776115d39075860ed881d18f087
                           .group:00000000 wm4.stdint.h.4.659be5aa44c4ab4eb7c7cc2b24d8ceee
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.stdbool.h.29.01580e438512fc255c0619569742ffd3
                           .group:00000000 wm4.c_api_types.h.20.9b09175981ed746180e205cc0b4b2bfd
                           .group:00000000 wm4.common.h.77.124de099ec0ac4f95ebf1618a5f42cf6
                           .group:00000000 wm4.atomic_lockfree_defines.h.31.d5c6334fb1e95c9462b052951f1411df
                           .group:00000000 wm4.exception_defines.h.31.ca6841b9be3287386aafc5c717935b2e
                           .group:00000000 wm4.concept_check.h.31.f19605d278e56917c68a56d378be308c
                           .group:00000000 wm4.type_traits.30.2c7323a483bcd7601e8b71d2546ae284
                           .group:00000000 wm4.move.h.152.41d7b9e6779674d169b7813982cfa003
                           .group:00000000 wm4.numeric_traits.h.30.aa01a98564b7e55086aad9e53c7e5c53
                           .group:00000000 wm4.assertions.h.30.51d443923f0d242550e04246a7819b39
                           .group:00000000 wm4.stl_iterator.h.1250.45f349a262f1b0d836d8edbc4b7b98ff
                           .group:00000000 wm4.debug.h.30.5c1f223b12199e851d4d42805b788ccf
                           .group:00000000 wm4.stl_algobase.h.491.aa250b69c90aafa2a0a62b8c58cd5f30
                           .group:00000000 wm4.wchar.h.2.f837619576d797e948eb58c44fac4678
                           .group:00000000 wm4.stddef.h.161.9f48187563b2a85291a91832aa425498
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.wchar.h.41.2307b469886c2ca55d92707971ac50ce
                           .group:00000000 wm4.cwchar.48.c4e882638bf84f6da89479dda6fe8e17
                           .group:00000000 wm4.allocator.h.52.0ceafb36dc1b82dbfa6b05003082e3f5
                           .group:00000000 wm4.locale.h.8.27d0fe4c0abbb6f8893a1fa7c1799fd9
                           .group:00000000 wm4.stddef.h.161.38688f2eb958a8ed58fdb61ffe554c94
                           .group:00000000 wm4.locale.h.16.524572cf3c2ed9856516685acdc598fe
                           .group:00000000 wm4.clocale.45.c36d2d5b631a875aa5273176b54fdf0f
                           .group:00000000 wm4.ctype.h.2.da310d2ad165ccf8b86542f76fdb938d
                           .group:00000000 wm4.cctype.45.0da5714876b0be7f2d816b53d9670403
                           .group:00000000 wm4.gthr.h.27.ceb1c66b926f052afcba57e8784df0d4
                           .group:00000000 wm4.gthrdefault.h.27.edc94d4398c0534988962be77dc3c2e1
                           .group:00000000 wm4.atomic_word.h.30.9e0ac69fd462d5e650933e05133b4afa
                           .group:00000000 wm4.alloc_traits.h.31.c41c7c4789404962122a4e991dfa3abf
                           .group:00000000 wm4.cstdlib.44.52c5efdfb0f3c176bd11e611a0b94959
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stdlib.h.56.b4ddaf162082f284ba35b4444af99a9a
                           .group:00000000 wm4.cstdlib.76.ae666499c8f9b0ace1b4b23fe143da2c
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.c3e9cb15e5af2807c4650345134c1a8a
                           .group:00000000 wm4.cstdio.45.ba8d321feb18bfc8923454067605c368
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.1ecd7b1049497a0ab61da0f6cbd4b0c6
                           .group:00000000 wm4.functional_hash.h.31.bccc014fee6fc3f930045d809df6f486
                           .group:00000000 wm4.functional.549.0bc5b448cf999863d3841495cd6fe920
                           .group:00000000 wm4.limits.38.55aefcf041805b6211ca3649dd2ab1b5
                           .group:00000000 wm4.assert.h.11.a5d97ca77559a42890313c4941c01fd9
                           .group:00000000 wm4.cmath.44.b3bcbb5fe53ec6617dec8aa8eb7b03cc
                           .group:00000000 wm4.detect_platform.h.19.a1891273c0cad215067ddb8219400136
                           .group:00000000 wm4.fixedpoint.h.567.8a6371d9452be19811601bace78b0abc
                           .group:00000000 wm4.cppmath.h.27.51580d700716589df4b364298e2ef577
                           .group:00000000 wm4.neon_check.h.16.79a4dcb572cbeac06c4924f1f20cb68d
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.cstring.45.6ab09de7fb97b576e744347688ddc8d7
                           .group:00000000 wm4.op_macros.h.42.7b718cb416a067e7bb07e7699647769b
                           .group:00000000 wm4.compatibility.h.23.702d6356326ea59aded8ef5c6c4626d5

UNDEFINED SYMBOLS
__aeabi_idiv
__assert_func
memset
abort
__aeabi_unwind_cpp_pr0
memmove
tanhf
fminf
fmaxf
expf
__aeabi_unwind_cpp_pr1
__aeabi_idivmod
_ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
_ZN6tflite22GetOptionalInputTensorEPK13TfLiteContextPK10TfLiteNodei
_ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
_ZN6tflite18QuantizeMultiplierEdPlPi
TfLiteTypeGetName
