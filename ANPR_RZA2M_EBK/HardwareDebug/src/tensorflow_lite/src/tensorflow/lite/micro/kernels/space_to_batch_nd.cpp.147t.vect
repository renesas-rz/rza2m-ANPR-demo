
;; Function TfLiteStatus tflite::{anonymous}::Eval(TfLiteContext*, TfLiteNode*) (_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode, funcdef_no=4179, decl_uid=64461, cgraph_uid=2690, symbol_order=2702)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: not vectorized: multiple nested loops.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:404
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:404:3: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:404:3: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:404:3: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:404:3: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: not vectorized: multiple nested loops.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:404
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:404:3: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:404:3: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:404:3: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:404:3: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:224:16: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal/types.h:171:23: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/space_to_batch_nd.cpp:63:14: note: vectorized 0 loops in function.
TfLiteStatus tflite::{anonymous}::Eval(TfLiteContext*, TfLiteNode*) (struct TfLiteContext * context, struct TfLiteNode * node)
{
  int D.68558;
  int D.68551;
  int32_t D.68544;
  int32_t D.68541;
  int32_t D.68538;
  int32_t D.68535;
  int32_t D.68532;
  int32_t D.68529;
  int32_t D.68526;
  struct RuntimeShape * D.68523;
  int32_t D.68514;
  int32_t D.68508;
  int32_t D.68502;
  int i;
  struct RuntimeShape * D.68490;
  struct RuntimeShape * D.68485;
  struct RuntimeShape new_shape;
  struct RuntimeShape * D.68474;
  int32_t D.68465;
  int32_t D.68459;
  int32_t D.68453;
  int i;
  struct RuntimeShape * D.68441;
  struct RuntimeShape * D.68436;
  struct RuntimeShape new_shape;
  const struct RuntimeShape input1_shape;
  const struct RuntimeShape output_shape;
  const int block_shape_height;
  const int padding_top;
  const int32_t pad_value;
  int out_b;
  int input_batch;
  int shift_w;
  int shift_h;
  int out_h;
  int out_w;
  signed char * out;
  const signed char * in;
  int D.68382;
  int D.68375;
  int32_t D.68368;
  int32_t D.68365;
  int32_t D.68362;
  int32_t D.68359;
  int32_t D.68356;
  int32_t D.68353;
  int32_t D.68350;
  struct RuntimeShape * D.68347;
  int32_t D.68338;
  int32_t D.68332;
  int32_t D.68326;
  int i;
  struct RuntimeShape * D.68314;
  struct RuntimeShape * D.68309;
  struct RuntimeShape new_shape;
  struct RuntimeShape * D.68298;
  int32_t D.68289;
  int32_t D.68283;
  int32_t D.68277;
  int i;
  struct RuntimeShape * D.68265;
  struct RuntimeShape * D.68260;
  struct RuntimeShape new_shape;
  const struct RuntimeShape input1_shape;
  const struct RuntimeShape output_shape;
  const int block_shape_height;
  const int padding_top;
  const int32_t pad_value;
  int out_b;
  int input_batch;
  int shift_w;
  int shift_h;
  int out_h;
  int out_w;
  float * out;
  const float * in;
  struct TfLiteEvalTensor * D.68206;
  struct TfLiteEvalTensor * D.68202;
  struct TfLiteEvalTensor * D.68198;
  struct TfLiteEvalTensor * D.68194;
  const struct RuntimeShape D.64495;
  const struct RuntimeShape D.64494;
  const struct RuntimeShape D.64493;
  const struct RuntimeShape D.64490;
  const struct RuntimeShape D.64476;
  const struct RuntimeShape D.64475;
  const struct RuntimeShape D.64472;
  const struct RuntimeShape D.64469;
  TfLiteStatus _1;
  void * _11;
  TfLiteType _15;
  void (*<Ta61c>) (struct TfLiteContext *, const char *, ...) _16;
  const char * _18;
  TfLiteType _19;
  int _20;
  int _51;
  const float * _52;
  const long int * _53;
  const long int * _54;
  float * iftmp.0_55;
  float * iftmp.0_56;
  long int _57;
  int32_t * _58;
  long int _59;
  int32_t * _60;
  long int _61;
  int32_t * _62;
  long int _63;
  int32_t * _64;
  const signed char * _65;
  const long int * _66;
  const long int * _67;
  signed char * iftmp.13_68;
  signed char * iftmp.13_69;
  long int _70;
  int32_t * _71;
  long int _72;
  int32_t * _73;
  long int _74;
  int32_t * _75;
  long int _76;
  int32_t * _77;
  long int _78;
  int32_t * _79;
  long int _80;
  int32_t * _81;
  long int _82;
  int32_t * _83;
  long int _84;
  int32_t * _85;
  long int _86;
  int32_t * _87;
  long int _88;
  int32_t * _89;
  long int _90;
  int32_t * _91;
  long int _92;
  int32_t * _93;
  struct TfLiteEvalTensor * (*<Ta65d>) (const struct TfLiteContext *, int) _135;
  struct TfLiteIntArray * _136;
  int _137;
  struct TfLiteEvalTensor * _138;
  struct TfLiteEvalTensor * (*<Ta65d>) (const struct TfLiteContext *, int) _139;
  struct TfLiteIntArray * _140;
  int _141;
  struct TfLiteEvalTensor * _142;
  struct TfLiteEvalTensor * (*<Ta65d>) (const struct TfLiteContext *, int) _143;
  struct TfLiteIntArray * _144;
  int _145;
  struct TfLiteEvalTensor * _146;
  struct TfLiteEvalTensor * (*<Ta65d>) (const struct TfLiteContext *, int) _147;
  struct TfLiteIntArray * _148;
  int _149;
  struct TfLiteEvalTensor * _150;
  long int _151;
  long int _152;
  long int pretmp_156;
  int _158;
  long int _161;
  int iftmp.1_162;
  int iftmp.2_164;
  int _168;
  unsigned int _175;
  unsigned int _176;
  int _180;
  int _181;
  int _182;
  int iftmp.2_183;
  int _184;
  unsigned int depth.3_185;
  unsigned int _186;
  int _187;
  int _188;
  unsigned int _190;
  unsigned int _191;
  unsigned int depth.3_193;
  unsigned int _194;
  int32_t * _199;
  long int _200;
  int32_t * _201;
  long int _202;
  int32_t * _203;
  long int _204;
  int32_t * _205;
  long int _211;
  int32_t * _212;
  long int _213;
  int32_t * _214;
  long int _238;
  int32_t * _239;
  unsigned int i.7_240;
  unsigned int _241;
  int32_t * _242;
  long int _243;
  int32_t * _244;
  long int iftmp.11_248;
  long int iftmp.11_249;
  long int iftmp.11_250;
  long int _251;
  int32_t * _252;
  int _253;
  int _254;
  int32_t * _257;
  long int prephitmp_258;
  long int pretmp_259;
  long int pretmp_260;
  long int iftmp.11_261;
  long int iftmp.11_262;
  long int iftmp.11_263;
  long int _264;
  int32_t * _265;
  long int pretmp_268;
  int32_t * _270;
  long int prephitmp_273;
  long int iftmp.11_274;
  long int iftmp.11_275;
  long int iftmp.11_276;
  int32_t * _278;
  sizetype _283;
  unsigned int iftmp.8_284;
  void * _285;
  long int _286;
  const int32_t * iftmp.10_290;
  long unsigned int _292;
  long unsigned int _293;
  int32_t * iftmp.9_294;
  const int32_t * iftmp.10_295;
  long int prephitmp_297;
  long int _300;
  int32_t * _301;
  long int _302;
  int32_t * _303;
  long int prephitmp_310;
  long int prephitmp_318;
  long int _327;
  int32_t * _328;
  unsigned int i.7_329;
  unsigned int _330;
  int32_t * _331;
  long int _332;
  int32_t * _333;
  long int pretmp_335;
  long int prephitmp_336;
  long int iftmp.11_337;
  long int iftmp.11_338;
  long int iftmp.11_339;
  long int _340;
  int32_t * _341;
  long int pretmp_342;
  long int pretmp_343;
  long int pretmp_344;
  int32_t * _346;
  long int prephitmp_349;
  long int iftmp.11_350;
  long int iftmp.11_351;
  long int iftmp.11_352;
  long int _353;
  int32_t * _354;
  long int prephitmp_355;
  int32_t * _359;
  long int iftmp.11_363;
  long int iftmp.11_364;
  long int iftmp.11_365;
  int32_t * _367;
  long int pretmp_368;
  long int prephitmp_369;
  long int pretmp_371;
  sizetype _372;
  unsigned int iftmp.8_373;
  void * _374;
  long int _375;
  long int pretmp_377;
  const int32_t * iftmp.10_379;
  long int prephitmp_380;
  long unsigned int _381;
  long unsigned int _382;
  int32_t * iftmp.9_383;
  const int32_t * iftmp.10_384;
  long int _385;
  int32_t * _386;
  long int prephitmp_387;
  int _388;
  long int iftmp.11_390;
  long int iftmp.11_391;
  long int iftmp.11_398;
  long int iftmp.11_399;
  long int iftmp.11_406;
  long int iftmp.11_407;
  long int prephitmp_413;
  long int iftmp.11_414;
  long int iftmp.11_415;
  long int iftmp.11_416;
  long int _417;
  int32_t * _418;
  int _419;
  long int prephitmp_420;
  long int iftmp.11_422;
  long int iftmp.11_423;
  long int iftmp.11_430;
  long int iftmp.11_431;
  int _437;
  long int iftmp.11_438;
  long int iftmp.11_439;
  long int iftmp.11_440;
  long int _441;
  int _442;
  int _443;
  int _444;
  int _445;
  int _446;
  int _447;
  int _448;
  int _449;
  int _450;
  long int _452;
  int _453;
  int _454;
  int _455;
  int _456;
  int _457;
  int _458;
  int _459;
  int _460;
  int _461;
  long int _463;
  long int _464;
  long int _473;
  int iftmp.14_474;
  int iftmp.15_476;
  int _480;
  sizetype _487;
  int _491;
  int _492;
  int _493;
  int iftmp.15_494;
  int _495;
  unsigned int depth.16_496;
  int _497;
  int _498;
  sizetype _500;
  unsigned int depth.16_502;
  int32_t * _507;
  long int _508;
  int32_t * _509;
  long int _510;
  int32_t * _511;
  long int _512;
  int32_t * _513;
  long int _519;
  int32_t * _520;
  long int _521;
  int32_t * _522;
  long int iftmp.11_540;
  int _541;
  long int _546;
  int32_t * _547;
  unsigned int i.7_548;
  unsigned int _549;
  int32_t * _550;
  long int _551;
  int32_t * _552;
  long int iftmp.11_556;
  long int iftmp.11_557;
  long int iftmp.11_558;
  long int _559;
  int32_t * _560;
  int32_t * _565;
  long int iftmp.11_569;
  long int iftmp.11_570;
  long int iftmp.11_571;
  long int _572;
  int32_t * _573;
  long int iftmp.11_577;
  int32_t * _578;
  long int iftmp.11_582;
  long int iftmp.11_583;
  long int iftmp.11_584;
  long int iftmp.11_585;
  int32_t * _586;
  long int iftmp.11_590;
  sizetype _591;
  unsigned int iftmp.8_592;
  void * _593;
  long int _594;
  const int32_t * iftmp.10_598;
  long unsigned int _600;
  long unsigned int _601;
  int32_t * iftmp.9_602;
  const int32_t * iftmp.10_603;
  long int _608;
  int32_t * _609;
  long int _610;
  int32_t * _611;
  long int iftmp.11_612;
  long int iftmp.11_613;
  long int iftmp.11_614;
  long int iftmp.11_615;
  int _630;
  long int _635;
  int32_t * _636;
  unsigned int i.7_637;
  unsigned int _638;
  int32_t * _639;
  long int _640;
  int32_t * _641;
  long int iftmp.11_645;
  long int iftmp.11_646;
  long int iftmp.11_647;
  long int _648;
  int32_t * _649;
  int32_t * _654;
  long int iftmp.11_658;
  long int iftmp.11_659;
  long int iftmp.11_660;
  long int _661;
  int32_t * _662;
  int32_t * _667;
  long int iftmp.11_671;
  long int iftmp.11_672;
  long int iftmp.11_673;
  int32_t * _675;
  sizetype _680;
  unsigned int iftmp.8_681;
  void * _682;
  long int _683;
  const int32_t * iftmp.10_687;
  long unsigned int _689;
  long unsigned int _690;
  int32_t * iftmp.9_691;
  const int32_t * iftmp.10_692;
  long int _693;
  int32_t * _694;
  long int pretmp_697;
  long int iftmp.11_698;
  long int iftmp.11_699;
  long int prephitmp_705;
  long int iftmp.11_706;
  long int iftmp.11_707;
  long int pretmp_711;
  long int prephitmp_712;
  long int pretmp_713;
  long int iftmp.11_714;
  long int iftmp.11_715;
  long int iftmp.11_722;
  long int iftmp.11_723;
  long int iftmp.11_724;
  long int _725;
  int32_t * _726;
  long int prephitmp_728;
  long int iftmp.11_730;
  long int iftmp.11_731;
  long int iftmp.11_738;
  long int iftmp.11_739;
  long int pretmp_744;
  long int iftmp.11_746;
  long int iftmp.11_747;
  long int iftmp.11_748;
  long int _749;
  int _750;
  int _751;
  int _752;
  int _753;
  int _754;
  int _755;
  int _756;
  int _757;
  int _758;
  long int _760;
  int _761;
  int _762;
  int _763;
  int _764;
  int _765;
  int _766;
  int _767;
  int _768;
  int _769;
  int _772;
  int _782;
  long int iftmp.11_883;
  long int _884;
  long int _885;
  long int prephitmp_980;
  int _987;
  int _1001;
  int _1002;
  long int _1004;
  long int _1005;
  long int iftmp.11_1006;
  long int pretmp_1017;
  long int pretmp_1020;
  unsigned int _1043;
  unsigned int _1044;
  long int prephitmp_1045;
  long int pretmp_1046;
  unsigned int _1068;
  unsigned int _1069;
  unsigned int _1071;
  unsigned int _1072;
  unsigned int _1073;
  unsigned int _1086;
  long int prephitmp_1087;
  long int prephitmp_1088;
  unsigned int _1089;
  unsigned int _1091;
  unsigned int _1094;
  unsigned int _1096;
  long int prephitmp_1098;
  long int prephitmp_1099;
  int _1100;
  int _1101;
  int _1103;
  int _1105;
  int iftmp.1_1107;
  int iftmp.14_1111;
  long int prephitmp_1112;
  long int prephitmp_1114;

  <bb 2>:
  _11 = node_10(D)->user_data;
  if (_11 != 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  abort ();

  <bb 4>:
  # DEBUG params => _11
  # DEBUG context => context_12(D)
  # DEBUG node => node_10(D)
  # DEBUG index => 0
  # DEBUG context => context_12(D)
  # DEBUG node => node_10(D)
  # DEBUG index => 0
  if (context_12(D) != 0B)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 5>:
  _147 = MEM[(const struct TfLiteContext *)context_12(D)].GetEvalTensor;
  _148 = MEM[(const struct TfLiteNode *)node_10(D)].inputs;
  _149 = _148->data[0];
  _150 = _147 (context_12(D), _149);
  # DEBUG context => NULL
  # DEBUG node => NULL
  # DEBUG index => NULL
  # DEBUG context => NULL
  # DEBUG node => NULL
  # DEBUG index => NULL
  # DEBUG input => NULL
  # DEBUG context => context_12(D)
  # DEBUG node => node_10(D)
  # DEBUG index => 1
  # DEBUG context => context_12(D)
  # DEBUG node => node_10(D)
  # DEBUG index => 1
  _143 = MEM[(const struct TfLiteContext *)context_12(D)].GetEvalTensor;
  _144 = MEM[(const struct TfLiteNode *)node_10(D)].inputs;
  _145 = _144->data[1];
  _146 = _143 (context_12(D), _145);
  # DEBUG context => NULL
  # DEBUG node => NULL
  # DEBUG index => NULL
  # DEBUG context => NULL
  # DEBUG node => NULL
  # DEBUG index => NULL
  # DEBUG block_shape => NULL
  # DEBUG context => context_12(D)
  # DEBUG node => node_10(D)
  # DEBUG index => 2
  # DEBUG context => context_12(D)
  # DEBUG node => node_10(D)
  # DEBUG index => 2
  _139 = MEM[(const struct TfLiteContext *)context_12(D)].GetEvalTensor;
  _140 = MEM[(const struct TfLiteNode *)node_10(D)].inputs;
  _141 = _140->data[2];
  _142 = _139 (context_12(D), _141);
  # DEBUG context => NULL
  # DEBUG node => NULL
  # DEBUG index => NULL
  # DEBUG context => NULL
  # DEBUG node => NULL
  # DEBUG index => NULL
  # DEBUG crops => NULL
  # DEBUG context => context_12(D)
  # DEBUG node => node_10(D)
  # DEBUG index => 0
  _135 = MEM[(const struct TfLiteContext *)context_12(D)].GetEvalTensor;
  _136 = MEM[(const struct TfLiteNode *)node_10(D)].outputs;
  _137 = _136->data[0];
  _138 = _135 (context_12(D), _137);
  # DEBUG context => NULL
  # DEBUG node => NULL
  # DEBUG index => NULL
  # DEBUG output => NULL
  _15 = MEM[(const struct TfLiteEvalTensor *)_150].type;
  switch (_15) <default: <L5>, case 1: <L3>, case 9: <L4>>

<L3>:
  D.64469 = tflite::micro::GetTensorShape (_150); [return slot optimization]
  # DEBUG tensor => NULL
  _52 = MEM[(const struct TfLiteEvalTensor *)_150].data.raw;
  # DEBUG tensor => NULL
  D.64472 = tflite::micro::GetTensorShape (_146); [return slot optimization]

  <bb 7>:
  # DEBUG tensor => NULL
  if (_146 != 0B)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  abort ();

  <bb 9>:
  _53 = MEM[(const struct TfLiteEvalTensor *)_146].data.raw;
  # DEBUG tensor => NULL
  D.64475 = tflite::micro::GetTensorShape (_142); [return slot optimization]
  goto <bb 11>;

<L28>:
  goto <bb 518> (<L10>);

  <bb 11>:
  # DEBUG tensor => NULL
  if (_142 != 0B)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  abort ();

  <bb 13>:
  _54 = MEM[(const struct TfLiteEvalTensor *)_142].data.raw;
  # DEBUG tensor => NULL
  D.64476 = tflite::micro::GetTensorShape (_138); [return slot optimization]
  goto <bb 15>;

<L30>:
  goto <bb 512> (<L9>);

  <bb 15>:
  # DEBUG tensor => NULL
  if (_138 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  iftmp.0_55 = _138->data.raw;

  <bb 17>:
  # iftmp.0_56 = PHI <0B(15), iftmp.0_55(16)>
  # DEBUG tensor => NULL
  # DEBUG params => _11
  # DEBUG unextended_input1_shape => &D.64469
  # DEBUG input1_data => _52
  # DEBUG unextended_input2_shape => &D.64472
  # DEBUG block_shape_data => _53
  # DEBUG unextended_input3_shape => &D.64475
  # DEBUG paddings_data => _54
  # DEBUG unextended_output_shape => &D.64476
  # DEBUG output_data => iftmp.0_56
  # DEBUG this => &label
  # DEBUG D.68237 => "SpaceToBatchND"
  # DEBUG this => NULL
  # DEBUG D.68237 => NULL
  _151 = MEM[(long int *)&D.64469];
  # DEBUG D#1 => &D.64469
  # DEBUG this => D#1
  if (_151 > 2)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  abort ();

  <bb 19>:
  # DEBUG D#1 => &D.64469
  # DEBUG this => D#1
  if (_151 <= 4)
    goto <bb 22>;
  else
    goto <bb 20>;

  <bb 20>:
  abort ();

<L32>:
  goto <bb 242> (<L18>);

  <bb 22>:
  # DEBUG D#1 => &D.64469
  # DEBUG this => D#1
  _152 = MEM[(long int *)&D.64476];
  # DEBUG D#1 => &D.64476
  # DEBUG this => D#1
  if (_151 == _152)
    goto <bb 25>;
  else
    goto <bb 23>;

  <bb 23>:
  abort ();

<L33>:
  goto <bb 242> (<L18>);

  <bb 25>:
  # DEBUG shape => &D.64469
  # DEBUG D#1 => &D.64469
  # DEBUG this => D#1
  if (_151 == 4)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG this => &input1_shape
  # DEBUG other => &D.64469
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &D.64469
  # DEBUG this => D#1
  input1_shape.size_ = 4;
  # DEBUG this => &input1_shape
  # DEBUG this => NULL
  # DEBUG this => &D.64469
  # DEBUG this => NULL
  memcpy (&input1_shape.D.61194.dims_, &D.64469.D.61194.dims_, 16);
  goto <bb 552>;

  <bb 27>:
  # DEBUG this => &new_shape
  # DEBUG value => 1
  # DEBUG shape_size => 4
  MEM[(struct  &)&new_shape] ={v} {CLOBBER};
  # DEBUG D#2 => &new_shape
  # DEBUG D#2 => &new_shape
  # DEBUG dimensions_count => 4
  # DEBUG this => D#2
  # DEBUG this => D#2
  MEM[(int32_t *)&new_shape] = 4;
  # DEBUG i => NULL
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG this => &new_shape
  # DEBUG i => 0
  # DEBUG val => 1
  goto <bb 34>;

  <bb 28>:
  # DEBUG i => i_231
  # DEBUG this => &new_shape
  # DEBUG i => i_231
  # DEBUG val => 1
  _238 = new_shape.size_;
  if (i_231 < _238)
    goto <bb 31>;
  else
    goto <bb 29>;

  <bb 29>:
  abort ();

<L34>:
  goto <bb 242> (<L18>);

  <bb 31>:
  if (_238 > 5)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  _239 = new_shape.D.61194.dims_pointer_;
  i.7_240 = (unsigned int) i_231;
  _241 = i.7_240 * 4;
  _242 = _239 + _241;
  *_242 = 1;
  goto <bb 35>;

  <bb 33>:
  # i_1115 = PHI <i_231(31)>

  <bb 34>:
  # i_389 = PHI <i_1115(33), 0(27)>
  # DEBUG i => i_389
  # DEBUG this => &new_shape
  # DEBUG i => i_389
  # DEBUG val => 1
  new_shape.D.61194.dims_[i_389] = 1;

  <bb 35>:
  # i_370 = PHI <i_389(34), i_231(32)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  i_231 = i_370 + 1;
  # DEBUG i => i_231
  # DEBUG i => NULL
  # DEBUG i => i_231
  if (i_231 == 4)
    goto <bb 36>;
  else
    goto <bb 28>;

  <bb 36>:
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG shape_size => NULL
  # DEBUG value => NULL
  # DEBUG this => &D.64469
  # DEBUG i => 0
  _243 = D.64469.size_;
  if (_243 > 0)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 37>:
  abort ();

  <bb 38>:
  if (_243 > 5)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  _244 = D.64469.D.61194.dims_pointer_;
  iftmp.11_248 = MEM[(const int32_t &)_244];
  goto <bb 41>;

  <bb 40>:
  iftmp.11_249 = D.64469.D.61194.dims_[0];

  <bb 41>:
  # iftmp.11_250 = PHI <iftmp.11_248(39), iftmp.11_249(40)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 0
  # DEBUG val => iftmp.11_250
  _251 = new_shape.size_;
  if (_251 > 0)
    goto <bb 44>;
  else
    goto <bb 42>;

  <bb 42>:
  abort ();

<L36>:
  goto <bb 84> (<L19>);

  <bb 44>:
  if (_251 > 5)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  _252 = new_shape.D.61194.dims_pointer_;
  *_252 = iftmp.11_250;
  pretmp_371 = D.64469.size_;
  goto <bb 47>;

  <bb 46>:
  new_shape.D.61194.dims_[0] = iftmp.11_250;

  <bb 47>:
  # prephitmp_273 = PHI <_243(46), pretmp_371(45)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &D.64469
  # DEBUG i => 1
  if (prephitmp_273 > 1)
    goto <bb 50>;
  else
    goto <bb 48>;

  <bb 48>:
  abort ();

<L37>:
  goto <bb 84> (<L19>);

  <bb 50>:
  if (prephitmp_273 > 5)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  _257 = D.64469.D.61194.dims_pointer_;
  iftmp.11_261 = MEM[(const int32_t &)_257 + 4];
  goto <bb 53>;

  <bb 52>:
  iftmp.11_262 = D.64469.D.61194.dims_[1];

  <bb 53>:
  # iftmp.11_263 = PHI <iftmp.11_261(51), iftmp.11_262(52)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 1
  # DEBUG val => iftmp.11_263
  _264 = new_shape.size_;
  if (_264 > 1)
    goto <bb 56>;
  else
    goto <bb 54>;

  <bb 54>:
  abort ();

<L38>:
  goto <bb 84> (<L19>);

  <bb 56>:
  if (_264 > 5)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  _265 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_265 + 4B] = iftmp.11_263;
  goto <bb 59>;

  <bb 58>:
  new_shape.D.61194.dims_[1] = iftmp.11_263;

  <bb 59>:
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &D.64469
  # DEBUG i => 2
  if (prephitmp_273 != 2)
    goto <bb 62>;
  else
    goto <bb 60>;

  <bb 60>:
  abort ();

<L39>:
  goto <bb 84> (<L19>);

  <bb 62>:
  if (prephitmp_273 > 5)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  _270 = D.64469.D.61194.dims_pointer_;
  iftmp.11_274 = MEM[(const int32_t &)_270 + 8];
  goto <bb 65>;

  <bb 64>:
  iftmp.11_275 = D.64469.D.61194.dims_[2];

  <bb 65>:
  # iftmp.11_276 = PHI <iftmp.11_274(63), iftmp.11_275(64)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 3
  # DEBUG val => iftmp.11_276
  if (_264 > 3)
    goto <bb 68>;
  else
    goto <bb 66>;

  <bb 66>:
  abort ();

<L40>:
  goto <bb 84> (<L19>);

  <bb 68>:
  if (_264 > 5)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  _278 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_278 + 12B] = iftmp.11_276;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &input1_shape
  # DEBUG other => &new_shape
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  input1_shape.size_ = _264;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &input1_shape
  # DEBUG other => &new_shape
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  _283 = (sizetype) _264;
  if (_264 <= 536870910)
    goto <bb 71>;
  else
    goto <bb 75>;

  <bb 70>:
  new_shape.D.61194.dims_[3] = iftmp.11_276;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &input1_shape
  # DEBUG other => &new_shape
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  input1_shape.size_ = _264;
  # DEBUG this => &input1_shape
  goto <bb 78>;

  <bb 71>:
  iftmp.8_284 = _283 * 4;
  _285 = operator new [] (iftmp.8_284);
  goto <bb 73>;

<L41>:
  goto <bb 84> (<L19>);

  <bb 73>:
  input1_shape.D.61194.dims_pointer_ = _285;
  # DEBUG this => &input1_shape
  _286 = input1_shape.size_;
  if (_286 > 5)
    goto <bb 77>;
  else
    goto <bb 74>;

  <bb 74>:
  pretmp_268 = new_shape.size_;
  goto <bb 78>;

  <bb 75>:
  __cxa_throw_bad_array_new_length ();

<L42>:
  goto <bb 84> (<L19>);

  <bb 77>:
  pretmp_260 = new_shape.size_;

  <bb 78>:
  # iftmp.9_294 = PHI <_285(77), &input1_shape.D.61194.dims_(74), &input1_shape.D.61194.dims_(70)>
  # _1004 = PHI <_286(77), _286(74), _264(70)>
  # prephitmp_349 = PHI <pretmp_260(77), pretmp_268(74), _264(70)>
  # DEBUG this => NULL
  # DEBUG this => &new_shape
  if (prephitmp_349 > 5)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  iftmp.10_290 = new_shape.D.61194.dims_pointer_;

  <bb 80>:
  # iftmp.10_295 = PHI <iftmp.10_290(79), &new_shape.D.61194.dims_(78)>
  # DEBUG this => NULL
  _292 = (long unsigned int) _1004;
  _293 = _292 * 4;
  memcpy (iftmp.9_294, iftmp.10_295, _293);
  # DEBUG this => NULL
  # DEBUG other => NULL
  # DEBUG this => &new_shape
  _211 = new_shape.size_;
  if (_211 > 5)
    goto <bb 81>;
  else
    goto <bb 551>;

  <bb 81>:
  _212 = new_shape.D.61194.dims_pointer_;
  if (_212 != 0B)
    goto <bb 82>;
  else
    goto <bb 551>;

  <bb 82>:
  operator delete [] (_212);
  pretmp_1017 = MEM[(long int *)&D.64476];
  goto <bb 552>;

<L35>:

<L19>:
  # DEBUG this => &new_shape
  _213 = new_shape.size_;
  if (_213 > 5)
    goto <bb 85>;
  else
    goto <bb 87>;

  <bb 85>:
  _214 = new_shape.D.61194.dims_pointer_;
  if (_214 != 0B)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  operator delete [] (_214);

  <bb 87>:
  # DEBUG this => NULL
  resx 20

<L43>:
  goto <bb 242> (<L18>);

  <bb 89>:
  # DEBUG this => &new_shape
  # DEBUG value => 1
  # DEBUG shape_size => 4
  MEM[(struct  &)&new_shape] ={v} {CLOBBER};
  # DEBUG D#2 => &new_shape
  # DEBUG D#2 => &new_shape
  # DEBUG dimensions_count => 4
  # DEBUG this => D#2
  # DEBUG this => D#2
  MEM[(int32_t *)&new_shape] = 4;
  # DEBUG i => NULL
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG this => &new_shape
  # DEBUG i => 0
  # DEBUG val => 1
  goto <bb 95>;

  <bb 90>:
  # DEBUG i => i_320
  # DEBUG this => &new_shape
  # DEBUG i => i_320
  # DEBUG val => 1
  _327 = new_shape.size_;
  if (i_320 < _327)
    goto <bb 92>;
  else
    goto <bb 91>;

  <bb 91>:
  abort ();

  <bb 92>:
  if (_327 > 5)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  _328 = new_shape.D.61194.dims_pointer_;
  i.7_329 = (unsigned int) i_320;
  _330 = i.7_329 * 4;
  _331 = _328 + _330;
  *_331 = 1;
  goto <bb 96>;

  <bb 94>:
  # i_1113 = PHI <i_320(92)>

  <bb 95>:
  # i_362 = PHI <i_1113(94), 0(89)>
  # DEBUG i => i_362
  # DEBUG this => &new_shape
  # DEBUG i => i_362
  # DEBUG val => 1
  new_shape.D.61194.dims_[i_362] = 1;

  <bb 96>:
  # i_976 = PHI <i_362(95), i_320(93)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  i_320 = i_976 + 1;
  # DEBUG i => i_320
  # DEBUG i => NULL
  # DEBUG i => i_320
  if (i_320 == 4)
    goto <bb 97>;
  else
    goto <bb 90>;

  <bb 97>:
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG shape_size => NULL
  # DEBUG value => NULL
  # DEBUG this => &D.64476
  # DEBUG i => 0
  _332 = D.64476.size_;
  if (_332 > 0)
    goto <bb 99>;
  else
    goto <bb 98>;

  <bb 98>:
  abort ();

  <bb 99>:
  if (_332 > 5)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  _333 = D.64476.D.61194.dims_pointer_;
  iftmp.11_337 = MEM[(const int32_t &)_333];
  goto <bb 102>;

  <bb 101>:
  iftmp.11_338 = D.64476.D.61194.dims_[0];

  <bb 102>:
  # iftmp.11_339 = PHI <iftmp.11_337(100), iftmp.11_338(101)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 0
  # DEBUG val => iftmp.11_339
  _340 = new_shape.size_;
  if (_340 > 0)
    goto <bb 105>;
  else
    goto <bb 103>;

  <bb 103>:
  abort ();

<L46>:
  goto <bb 146> (<L20>);

  <bb 105>:
  if (_340 > 5)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  _341 = new_shape.D.61194.dims_pointer_;
  *_341 = iftmp.11_339;
  pretmp_697 = D.64476.size_;
  goto <bb 108>;

  <bb 107>:
  new_shape.D.61194.dims_[0] = iftmp.11_339;

  <bb 108>:
  # prephitmp_712 = PHI <_332(107), pretmp_697(106)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &D.64476
  # DEBUG i => 1
  if (prephitmp_712 > 1)
    goto <bb 111>;
  else
    goto <bb 109>;

  <bb 109>:
  abort ();

<L47>:
  goto <bb 146> (<L20>);

  <bb 111>:
  if (prephitmp_712 > 5)
    goto <bb 112>;
  else
    goto <bb 113>;

  <bb 112>:
  _346 = D.64476.D.61194.dims_pointer_;
  iftmp.11_350 = MEM[(const int32_t &)_346 + 4];
  goto <bb 114>;

  <bb 113>:
  iftmp.11_351 = D.64476.D.61194.dims_[1];

  <bb 114>:
  # iftmp.11_352 = PHI <iftmp.11_350(112), iftmp.11_351(113)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 1
  # DEBUG val => iftmp.11_352
  _353 = new_shape.size_;
  if (_353 > 1)
    goto <bb 117>;
  else
    goto <bb 115>;

  <bb 115>:
  abort ();

<L48>:
  goto <bb 146> (<L20>);

  <bb 117>:
  if (_353 > 5)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  _354 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_354 + 4B] = iftmp.11_352;
  goto <bb 120>;

  <bb 119>:
  new_shape.D.61194.dims_[1] = iftmp.11_352;

  <bb 120>:
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &D.64476
  # DEBUG i => 2
  if (prephitmp_712 != 2)
    goto <bb 123>;
  else
    goto <bb 121>;

  <bb 121>:
  abort ();

<L49>:
  goto <bb 146> (<L20>);

  <bb 123>:
  if (prephitmp_712 > 5)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  _359 = D.64476.D.61194.dims_pointer_;
  iftmp.11_363 = MEM[(const int32_t &)_359 + 8];
  goto <bb 126>;

  <bb 125>:
  iftmp.11_364 = D.64476.D.61194.dims_[2];

  <bb 126>:
  # iftmp.11_365 = PHI <iftmp.11_363(124), iftmp.11_364(125)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 3
  # DEBUG val => iftmp.11_365
  if (_353 > 3)
    goto <bb 129>;
  else
    goto <bb 127>;

  <bb 127>:
  abort ();

<L50>:
  goto <bb 146> (<L20>);

  <bb 129>:
  if (_353 > 5)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  _367 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_367 + 12B] = iftmp.11_365;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &output_shape
  # DEBUG other => &new_shape
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  output_shape.size_ = _353;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &output_shape
  # DEBUG other => &new_shape
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  _372 = (sizetype) _353;
  if (_353 <= 536870910)
    goto <bb 132>;
  else
    goto <bb 136>;

  <bb 131>:
  new_shape.D.61194.dims_[3] = iftmp.11_365;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &output_shape
  # DEBUG other => &new_shape
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  output_shape.size_ = _353;
  # DEBUG this => &output_shape
  goto <bb 139>;

  <bb 132>:
  iftmp.8_373 = _372 * 4;
  _374 = operator new [] (iftmp.8_373);
  goto <bb 134>;

<L51>:
  goto <bb 146> (<L20>);

  <bb 134>:
  output_shape.D.61194.dims_pointer_ = _374;
  # DEBUG this => &output_shape
  _375 = output_shape.size_;
  if (_375 > 5)
    goto <bb 138>;
  else
    goto <bb 135>;

  <bb 135>:
  pretmp_713 = new_shape.size_;
  goto <bb 139>;

  <bb 136>:
  __cxa_throw_bad_array_new_length ();

<L52>:
  goto <bb 146> (<L20>);

  <bb 138>:
  pretmp_711 = new_shape.size_;

  <bb 139>:
  # iftmp.9_383 = PHI <_374(138), &output_shape.D.61194.dims_(135), &output_shape.D.61194.dims_(131)>
  # _1005 = PHI <_375(138), _375(135), _353(131)>
  # prephitmp_705 = PHI <pretmp_711(138), pretmp_713(135), _353(131)>
  # DEBUG this => NULL
  # DEBUG this => &new_shape
  if (prephitmp_705 > 5)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  iftmp.10_379 = new_shape.D.61194.dims_pointer_;

  <bb 141>:
  # iftmp.10_384 = PHI <iftmp.10_379(140), &new_shape.D.61194.dims_(139)>
  # DEBUG this => NULL
  _381 = (long unsigned int) _1005;
  _382 = _381 * 4;
  memcpy (iftmp.9_383, iftmp.10_384, _382);
  # DEBUG this => NULL
  # DEBUG other => NULL
  # DEBUG this => &new_shape
  _300 = new_shape.size_;
  if (_300 > 5)
    goto <bb 142>;
  else
    goto <bb 144>;

  <bb 142>:
  _301 = new_shape.D.61194.dims_pointer_;
  if (_301 != 0B)
    goto <bb 143>;
  else
    goto <bb 144>;

  <bb 143>:
  operator delete [] (_301);

  <bb 144>:
  new_shape ={v} {CLOBBER};
  # DEBUG shape => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 3
  _385 = input1_shape.size_;
  if (_385 > 3)
    goto <bb 152>;
  else
    goto <bb 151>;

<L45>:

<L20>:
  # DEBUG this => &new_shape
  _302 = new_shape.size_;
  if (_302 > 5)
    goto <bb 147>;
  else
    goto <bb 149>;

  <bb 147>:
  _303 = new_shape.D.61194.dims_pointer_;
  if (_303 != 0B)
    goto <bb 148>;
  else
    goto <bb 149>;

  <bb 148>:
  operator delete [] (_303);

  <bb 149>:
  # DEBUG this => NULL
  resx 21

<L53>:
  goto <bb 236> (<L17>);

  <bb 151>:
  abort ();

  <bb 152>:
  if (_385 > 5)
    goto <bb 153>;
  else
    goto <bb 154>;

  <bb 153>:
  _386 = input1_shape.D.61194.dims_pointer_;
  iftmp.11_390 = MEM[(const int32_t &)_386 + 12];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG depth => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 2
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG depth => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 2
  iftmp.11_398 = MEM[(const int32_t &)_386 + 8];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_width => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 1
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_width => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 1
  iftmp.11_406 = MEM[(const int32_t &)_386 + 4];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_height => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 0
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_height => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 0
  iftmp.11_414 = MEM[(const int32_t &)_386];
  goto <bb 155>;

  <bb 154>:
  iftmp.11_391 = input1_shape.D.61194.dims_[3];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG depth => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 2
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG depth => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 2
  iftmp.11_399 = input1_shape.D.61194.dims_[2];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_width => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 1
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_width => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 1
  iftmp.11_407 = input1_shape.D.61194.dims_[1];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_height => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 0
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_height => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 0
  iftmp.11_415 = input1_shape.D.61194.dims_[0];

  <bb 155>:
  # iftmp.11_416 = PHI <iftmp.11_414(153), iftmp.11_415(154)>
  # iftmp.11_1006 = PHI <iftmp.11_390(153), iftmp.11_391(154)>
  # iftmp.11_613 = PHI <iftmp.11_398(153), iftmp.11_399(154)>
  # iftmp.11_614 = PHI <iftmp.11_406(153), iftmp.11_407(154)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_batch_size => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 2
  _417 = output_shape.size_;
  if (_417 > 2)
    goto <bb 158>;
  else
    goto <bb 156>;

  <bb 156>:
  abort ();

<L55>:
  goto <bb 230> (<L16>);

  <bb 158>:
  if (_417 > 5)
    goto <bb 159>;
  else
    goto <bb 160>;

  <bb 159>:
  _418 = output_shape.D.61194.dims_pointer_;
  iftmp.11_422 = MEM[(const int32_t &)_418 + 8];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_width => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 1
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_width => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 1
  iftmp.11_430 = MEM[(const int32_t &)_418 + 4];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_height => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 0
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_height => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 0
  iftmp.11_438 = MEM[(const int32_t &)_418];
  goto <bb 161>;

  <bb 160>:
  iftmp.11_423 = output_shape.D.61194.dims_[2];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_width => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 1
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_width => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 1
  iftmp.11_431 = output_shape.D.61194.dims_[1];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_height => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 0
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_height => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 0
  iftmp.11_439 = output_shape.D.61194.dims_[0];

  <bb 161>:
  # iftmp.11_440 = PHI <iftmp.11_438(159), iftmp.11_439(160)>
  # iftmp.11_615 = PHI <iftmp.11_422(159), iftmp.11_423(160)>
  # iftmp.11_883 = PHI <iftmp.11_430(159), iftmp.11_431(160)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_batch_size => NULL
  block_shape_height_160 = MEM[(const int32_t *)_53];
  # DEBUG block_shape_height => block_shape_height_160
  _161 = MEM[(long int *)&D.64469];
  # DEBUG D#1 => &D.64469
  # DEBUG this => D#1
  if (_161 == 4)
    goto <bb 162>;
  else
    goto <bb 553>;

  <bb 162>:
  iftmp.1_162 = MEM[(const int32_t *)_53 + 4B];
  # DEBUG block_shape_width => iftmp.1_162
  padding_top_632 = MEM[(const int32_t *)_54];
  # DEBUG padding_top => padding_top_632
  # DEBUG D#1 => &D.64469
  # DEBUG this => D#1
  # DEBUG block_shape_width => iftmp.1_162
  # DEBUG padding_top => padding_top_632
  # DEBUG D#1 => &D.64469
  # DEBUG this => D#1
  iftmp.2_164 = MEM[(const int32_t *)_54 + 8B];

  <bb 163>:
  # iftmp.2_183 = PHI <0(553), iftmp.2_164(162)>
  # padding_top_1106 = PHI <padding_top_542(553), padding_top_632(162)>
  # iftmp.1_1107 = PHI <1(553), iftmp.1_162(162)>
  # DEBUG padding_left => iftmp.2_183
  pad_value_165 = MEM[(const struct SpaceToBatchParams &)_11].output_offset;
  # DEBUG pad_value => pad_value_165
  # DEBUG out_b => 0
  # DEBUG out_b => 0
  if (iftmp.11_440 <= 0)
    goto <bb 222>;
  else
    goto <bb 164>;

  <bb 164>:
  depth.3_193 = (unsigned int) iftmp.11_1006;
  _194 = depth.3_193 * 4;
  depth.3_185 = (unsigned int) iftmp.11_1006;
  _186 = depth.3_185 * 4;

  <bb 165>:
  # out_b_813 = PHI <0(164), out_b_197(221)>
  # prephitmp_310 = PHI <_417(164), prephitmp_1087(221)>
  # DEBUG out_b => out_b_813
  input_batch_167 = out_b_813 % iftmp.11_416;
  # DEBUG input_batch => input_batch_167
  _168 = out_b_813 / iftmp.11_416;
  shift_w_170 = _168 % iftmp.1_1107;
  # DEBUG shift_w => shift_w_170
  shift_h_171 = _168 / iftmp.1_1107;
  # DEBUG shift_h => shift_h_171
  # DEBUG out_h => 0
  # DEBUG out_h => 0
  if (iftmp.11_883 <= 0)
    goto <bb 219>;
  else
    goto <bb 166>;

  <bb 166>:

  <bb 167>:
  # out_h_803 = PHI <0(166), out_h_196(218)>
  # prephitmp_980 = PHI <prephitmp_310(166), prephitmp_258(218)>
  # DEBUG out_h => out_h_803
  # DEBUG out_w => 0
  if (iftmp.11_615 <= 0)
    goto <bb 216>;
  else
    goto <bb 168>;

  <bb 168>:
  # DEBUG shape => &output_shape
  # DEBUG i0 => out_b_813
  # DEBUG i1 => out_h_803
  # DEBUG i2 => 0
  # DEBUG i3 => 0
  # DEBUG D#1 => &output_shape
  # DEBUG this => D#1
  if (prephitmp_980 == 4)
    goto <bb 170>;
  else
    goto <bb 169>;

  <bb 169>:
  abort ();

  <bb 170>:
  # DEBUG this => &output_shape
  # DEBUG this => NULL
  # DEBUG dims_data => NULL
  _1100 = MEM[(const int *)&output_shape + 4B];
  if (out_b_813 < _1100)
    goto <bb 172>;
  else
    goto <bb 171>;

  <bb 171>:
  abort ();

  <bb 172>:
  _1105 = MEM[(const int *)&output_shape + 8B];
  if (out_h_803 < _1105)
    goto <bb 174>;
  else
    goto <bb 173>;

  <bb 173>:
  abort ();

  <bb 174>:
  _1103 = MEM[(const int *)&output_shape + 12B];
  if (_1103 > 0)
    goto <bb 176>;
  else
    goto <bb 175>;

  <bb 175>:
  abort ();

  <bb 176>:
  _1101 = MEM[(const int *)&output_shape + 16B];
  if (_1101 > 0)
    goto <bb 189>;
  else
    goto <bb 177>;

  <bb 177>:
  abort ();

  <bb 178>:
  # DEBUG shape => &output_shape
  # DEBUG i0 => out_b_813
  # DEBUG i1 => out_h_803
  # DEBUG i2 => out_w_195
  # DEBUG i3 => 0
  _441 = MEM[(long int *)&output_shape];
  # DEBUG D#1 => &output_shape
  # DEBUG this => D#1
  if (_441 == 4)
    goto <bb 180>;
  else
    goto <bb 169>;

<L56>:
  goto <bb 230> (<L16>);

  <bb 180>:
  # DEBUG this => &output_shape
  # DEBUG this => NULL
  # DEBUG dims_data => NULL
  _442 = MEM[(const int *)&output_shape + 4B];
  if (_442 > out_b_813)
    goto <bb 182>;
  else
    goto <bb 171>;

<L57>:
  goto <bb 230> (<L16>);

  <bb 182>:
  _443 = MEM[(const int *)&output_shape + 8B];
  if (_443 > out_h_803)
    goto <bb 184>;
  else
    goto <bb 173>;

<L58>:
  goto <bb 230> (<L16>);

  <bb 184>:
  _444 = MEM[(const int *)&output_shape + 12B];
  if (out_w_195 < _444)
    goto <bb 186>;
  else
    goto <bb 175>;

<L59>:
  goto <bb 230> (<L16>);

  <bb 186>:
  _445 = MEM[(const int *)&output_shape + 16B];
  if (_445 > 0)
    goto <bb 187>;
  else
    goto <bb 177>;

  <bb 187>:
  goto <bb 190>;

<L60>:
  goto <bb 230> (<L16>);

  <bb 189>:
  _253 = block_shape_height_160 * out_h_803;
  _254 = shift_h_171 + _253;
  _1072 = (unsigned int) iftmp.11_614;
  _1071 = (unsigned int) padding_top_1106;
  _1069 = _1072 + _1071;
  _180 = (int) _1069;
  _1068 = (unsigned int) _254;
  _1044 = (unsigned int) padding_top_1106;
  _1043 = _1068 - _1044;
  _187 = (int) _1043;

  <bb 190>:
  # out_w_26 = PHI <0(189), out_w_195(187)>
  # _51 = PHI <_1105(189), _443(187)>
  # _782 = PHI <_1103(189), _444(187)>
  # _772 = PHI <_1101(189), _445(187)>
  # DEBUG out_w => out_w_26
  # DEBUG shape => &output_shape
  # DEBUG i0 => out_b_813
  # DEBUG i1 => out_h_803
  # DEBUG i2 => out_w_26
  # DEBUG i3 => 0
  # DEBUG D#1 => &output_shape
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG dims_data => NULL
  _446 = _51 * out_b_813;
  _447 = _446 + out_h_803;
  _448 = _447 * _782;
  _449 = out_w_26 + _448;
  _450 = _449 * _772;
  # DEBUG shape => NULL
  # DEBUG i0 => NULL
  # DEBUG i1 => NULL
  # DEBUG i2 => NULL
  # DEBUG i3 => NULL
  _175 = (unsigned int) _450;
  _176 = _175 * 4;
  out_177 = iftmp.0_56 + _176;
  # DEBUG out => out_177
  if (_254 < padding_top_1106)
    goto <bb 194>;
  else
    goto <bb 191>;

  <bb 191>:
  if (_180 <= _254)
    goto <bb 194>;
  else
    goto <bb 192>;

  <bb 192>:
  _181 = out_w_26 * iftmp.1_1107;
  _182 = shift_w_170 + _181;
  if (_182 < iftmp.2_183)
    goto <bb 194>;
  else
    goto <bb 193>;

  <bb 193>:
  _184 = iftmp.2_183 + iftmp.11_613;
  if (_182 >= _184)
    goto <bb 194>;
  else
    goto <bb 195>;

  <bb 194>:
  memset (out_177, pad_value_165, _186);
  goto <bb 214>;

  <bb 195>:
  _188 = _182 - iftmp.2_183;
  # DEBUG shape => &input1_shape
  # DEBUG i0 => input_batch_167
  # DEBUG i1 => _254 - padding_top_1106
  # DEBUG i2 => _188
  # DEBUG i3 => 0
  _452 = MEM[(long int *)&input1_shape];
  # DEBUG D#1 => &input1_shape
  # DEBUG this => D#1
  if (_452 == 4)
    goto <bb 198>;
  else
    goto <bb 196>;

  <bb 196>:
  abort ();

<L61>:
  goto <bb 230> (<L16>);

  <bb 198>:
  # DEBUG this => &input1_shape
  # DEBUG this => NULL
  # DEBUG dims_data => NULL
  if (input_batch_167 >= 0)
    goto <bb 199>;
  else
    goto <bb 200>;

  <bb 199>:
  _453 = MEM[(const int *)&input1_shape + 4B];
  if (input_batch_167 < _453)
    goto <bb 202>;
  else
    goto <bb 200>;

  <bb 200>:
  abort ();

<L62>:
  goto <bb 230> (<L16>);

  <bb 202>:
  if (_187 >= 0)
    goto <bb 203>;
  else
    goto <bb 204>;

  <bb 203>:
  _454 = MEM[(const int *)&input1_shape + 8B];
  if (_187 < _454)
    goto <bb 206>;
  else
    goto <bb 204>;

  <bb 204>:
  abort ();

<L63>:
  goto <bb 230> (<L16>);

  <bb 206>:
  if (_188 >= 0)
    goto <bb 207>;
  else
    goto <bb 208>;

  <bb 207>:
  _455 = MEM[(const int *)&input1_shape + 12B];
  if (_188 < _455)
    goto <bb 210>;
  else
    goto <bb 208>;

  <bb 208>:
  abort ();

<L64>:
  goto <bb 230> (<L16>);

  <bb 210>:
  _456 = MEM[(const int *)&input1_shape + 16B];
  if (_456 > 0)
    goto <bb 213>;
  else
    goto <bb 211>;

  <bb 211>:
  abort ();

<L65>:
  goto <bb 230> (<L16>);

  <bb 213>:
  _457 = input_batch_167 * _454;
  _458 = _187 + _457;
  _459 = _455 * _458;
  _460 = _188 + _459;
  _461 = _456 * _460;
  # DEBUG shape => NULL
  # DEBUG i0 => NULL
  # DEBUG i1 => NULL
  # DEBUG i2 => NULL
  # DEBUG i3 => NULL
  _190 = (unsigned int) _461;
  _191 = _190 * 4;
  in_192 = _52 + _191;
  # DEBUG in => in_192
  memcpy (out_177, in_192, _194);

  <bb 214>:
  out_w_195 = out_w_26 + 1;
  # DEBUG out_w => out_w_195
  # DEBUG out_w => out_w_195
  if (out_w_195 >= iftmp.11_615)
    goto <bb 215>;
  else
    goto <bb 178>;

  <bb 215>:
  pretmp_259 = MEM[(long int *)&output_shape];

  <bb 216>:
  # prephitmp_258 = PHI <pretmp_259(215), prephitmp_980(167)>
  out_h_196 = out_h_803 + 1;
  # DEBUG out_h => out_h_196
  # DEBUG out_h => out_h_196
  if (out_h_196 >= iftmp.11_883)
    goto <bb 217>;
  else
    goto <bb 218>;

  <bb 217>:
  # prephitmp_1114 = PHI <prephitmp_258(216)>
  goto <bb 219>;

  <bb 218>:
  goto <bb 167>;

  <bb 219>:
  # prephitmp_1087 = PHI <prephitmp_1114(217), prephitmp_310(165)>
  out_b_197 = out_b_813 + 1;
  # DEBUG out_b => out_b_197
  # DEBUG out_b => out_b_197
  if (out_b_197 >= iftmp.11_440)
    goto <bb 220>;
  else
    goto <bb 221>;

  <bb 220>:
  # prephitmp_1098 = PHI <prephitmp_1087(219)>
  goto <bb 222>;

  <bb 221>:
  goto <bb 165>;

  <bb 222>:
  # prephitmp_1088 = PHI <prephitmp_1098(220), _417(163)>
  # DEBUG this => &output_shape
  if (prephitmp_1088 > 5)
    goto <bb 223>;
  else
    goto <bb 225>;

  <bb 223>:
  _199 = output_shape.D.61194.dims_pointer_;
  if (_199 != 0B)
    goto <bb 224>;
  else
    goto <bb 225>;

  <bb 224>:
  operator delete [] (_199);

  <bb 225>:
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => &input1_shape
  _200 = input1_shape.size_;
  if (_200 > 5)
    goto <bb 226>;
  else
    goto <bb 228>;

  <bb 226>:
  _201 = input1_shape.D.61194.dims_pointer_;
  if (_201 != 0B)
    goto <bb 227>;
  else
    goto <bb 228>;

  <bb 227>:
  operator delete [] (_201);

  <bb 228>:
  # DEBUG this => NULL
  # DEBUG this => &label
  # DEBUG this => NULL
  input1_shape ={v} {CLOBBER};
  output_shape ={v} {CLOBBER};
  # DEBUG params => NULL
  # DEBUG unextended_input1_shape => NULL
  # DEBUG input1_data => NULL
  # DEBUG block_shape_data => NULL
  # DEBUG paddings_data => NULL
  # DEBUG unextended_output_shape => NULL
  # DEBUG output_data => NULL
  # DEBUG in => NULL
  # DEBUG out => NULL
  # DEBUG out_w => NULL
  # DEBUG out_h => NULL
  # DEBUG shift_h => NULL
  # DEBUG shift_w => NULL
  # DEBUG input_batch => NULL
  # DEBUG out_b => NULL
  # DEBUG pad_value => NULL
  # DEBUG padding_top => NULL
  # DEBUG block_shape_height => NULL
  # DEBUG this => &D.64476
  _63 = D.64476.size_;
  if (_63 > 5)
    goto <bb 243>;
  else
    goto <bb 245>;

<L54>:

<L16>:
  # DEBUG this => &output_shape
  _202 = output_shape.size_;
  if (_202 > 5)
    goto <bb 231>;
  else
    goto <bb 233>;

  <bb 231>:
  _203 = output_shape.D.61194.dims_pointer_;
  if (_203 != 0B)
    goto <bb 232>;
  else
    goto <bb 233>;

  <bb 232>:
  operator delete [] (_203);

  <bb 233>:
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  # DEBUG this => NULL
  resx 19

<L66>:
  goto <bb 236> (<L17>);

<L44>:

<L17>:
  # DEBUG i => NULL
  # DEBUG this => &input1_shape
  _204 = input1_shape.size_;
  if (_204 > 5)
    goto <bb 237>;
  else
    goto <bb 239>;

  <bb 237>:
  _205 = input1_shape.D.61194.dims_pointer_;
  if (_205 != 0B)
    goto <bb 238>;
  else
    goto <bb 239>;

  <bb 238>:
  operator delete [] (_205);

  <bb 239>:
  # DEBUG this => NULL
  resx 18

<L67>:
  goto <bb 242> (<L18>);

<L31>:

<L18>:
  # DEBUG i => NULL
  # DEBUG this => &label
  # DEBUG this => NULL
  resx 17

  <bb 243>:
  _64 = D.64476.D.61194.dims_pointer_;
  if (_64 != 0B)
    goto <bb 244>;
  else
    goto <bb 245>;

  <bb 244>:
  operator delete [] (_64);

  <bb 245>:
  # DEBUG this => NULL
  D.64476 ={v} {CLOBBER};
  # DEBUG this => &D.64475
  _61 = D.64475.size_;
  if (_61 > 5)
    goto <bb 246>;
  else
    goto <bb 248>;

  <bb 246>:
  _62 = D.64475.D.61194.dims_pointer_;
  if (_62 != 0B)
    goto <bb 247>;
  else
    goto <bb 248>;

  <bb 247>:
  operator delete [] (_62);

  <bb 248>:
  # DEBUG this => NULL
  D.64475 ={v} {CLOBBER};
  # DEBUG this => &D.64472
  _59 = D.64472.size_;
  if (_59 > 5)
    goto <bb 249>;
  else
    goto <bb 251>;

  <bb 249>:
  _60 = D.64472.D.61194.dims_pointer_;
  if (_60 != 0B)
    goto <bb 250>;
  else
    goto <bb 251>;

  <bb 250>:
  operator delete [] (_60);

  <bb 251>:
  # DEBUG this => NULL
  D.64472 ={v} {CLOBBER};
  # DEBUG this => &D.64469
  _57 = D.64469.size_;
  if (_57 > 5)
    goto <bb 252>;
  else
    goto <bb 254>;

  <bb 252>:
  _58 = D.64469.D.61194.dims_pointer_;
  if (_58 != 0B)
    goto <bb 253>;
  else
    goto <bb 254>;

  <bb 253>:
  operator delete [] (_58);

  <bb 254>:
  # DEBUG this => NULL
  D.64469 ={v} {CLOBBER};
  goto <bb 505>;

<L4>:
  D.64490 = tflite::micro::GetTensorShape (_150); [return slot optimization]
  # DEBUG tensor => NULL
  _65 = MEM[(const struct TfLiteEvalTensor *)_150].data.raw;
  # DEBUG tensor => NULL
  D.64493 = tflite::micro::GetTensorShape (_146); [return slot optimization]

  <bb 256>:
  # DEBUG tensor => NULL
  if (_146 != 0B)
    goto <bb 258>;
  else
    goto <bb 257>;

  <bb 257>:
  abort ();

  <bb 258>:
  _66 = MEM[(const struct TfLiteEvalTensor *)_146].data.raw;
  # DEBUG tensor => NULL
  D.64494 = tflite::micro::GetTensorShape (_142); [return slot optimization]
  goto <bb 260>;

<L70>:
  goto <bb 540> (<L14>);

  <bb 260>:
  # DEBUG tensor => NULL
  if (_142 != 0B)
    goto <bb 262>;
  else
    goto <bb 261>;

  <bb 261>:
  abort ();

  <bb 262>:
  _67 = MEM[(const struct TfLiteEvalTensor *)_142].data.raw;
  # DEBUG tensor => NULL
  D.64495 = tflite::micro::GetTensorShape (_138); [return slot optimization]
  goto <bb 264>;

<L72>:
  goto <bb 534> (<L13>);

  <bb 264>:
  # DEBUG tensor => NULL
  if (_138 != 0B)
    goto <bb 265>;
  else
    goto <bb 266>;

  <bb 265>:
  iftmp.13_68 = _138->data.raw;

  <bb 266>:
  # iftmp.13_69 = PHI <0B(264), iftmp.13_68(265)>
  # DEBUG tensor => NULL
  # DEBUG params => _11
  # DEBUG unextended_input1_shape => &D.64490
  # DEBUG input1_data => _65
  # DEBUG unextended_input2_shape => &D.64493
  # DEBUG block_shape_data => _66
  # DEBUG unextended_input3_shape => &D.64494
  # DEBUG paddings_data => _67
  # DEBUG unextended_output_shape => &D.64495
  # DEBUG output_data => iftmp.13_69
  # DEBUG this => &label
  # DEBUG D.68413 => "SpaceToBatchND"
  # DEBUG this => NULL
  # DEBUG D.68413 => NULL
  _463 = MEM[(long int *)&D.64490];
  # DEBUG D#1 => &D.64490
  # DEBUG this => D#1
  if (_463 > 2)
    goto <bb 268>;
  else
    goto <bb 267>;

  <bb 267>:
  abort ();

  <bb 268>:
  # DEBUG D#1 => &D.64490
  # DEBUG this => D#1
  if (_463 <= 4)
    goto <bb 271>;
  else
    goto <bb 269>;

  <bb 269>:
  abort ();

<L74>:
  goto <bb 491> (<L23>);

  <bb 271>:
  # DEBUG D#1 => &D.64490
  # DEBUG this => D#1
  _464 = MEM[(long int *)&D.64495];
  # DEBUG D#1 => &D.64495
  # DEBUG this => D#1
  if (_463 == _464)
    goto <bb 274>;
  else
    goto <bb 272>;

  <bb 272>:
  abort ();

<L75>:
  goto <bb 491> (<L23>);

  <bb 274>:
  # DEBUG shape => &D.64490
  # DEBUG D#1 => &D.64490
  # DEBUG this => D#1
  if (_463 == 4)
    goto <bb 275>;
  else
    goto <bb 276>;

  <bb 275>:
  # DEBUG this => &input1_shape
  # DEBUG other => &D.64490
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &D.64490
  # DEBUG this => D#1
  input1_shape.size_ = 4;
  # DEBUG this => &input1_shape
  # DEBUG this => NULL
  # DEBUG this => &D.64490
  # DEBUG this => NULL
  memcpy (&input1_shape.D.61194.dims_, &D.64490.D.61194.dims_, 16);
  goto <bb 556>;

  <bb 276>:
  # DEBUG this => &new_shape
  # DEBUG value => 1
  # DEBUG shape_size => 4
  MEM[(struct  &)&new_shape] ={v} {CLOBBER};
  # DEBUG D#2 => &new_shape
  # DEBUG D#2 => &new_shape
  # DEBUG dimensions_count => 4
  # DEBUG this => D#2
  # DEBUG this => D#2
  MEM[(int32_t *)&new_shape] = 4;
  # DEBUG i => NULL
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG this => &new_shape
  # DEBUG i => 0
  # DEBUG val => 1
  goto <bb 283>;

  <bb 277>:
  # DEBUG i => i_539
  # DEBUG this => &new_shape
  # DEBUG i => i_539
  # DEBUG val => 1
  _546 = new_shape.size_;
  if (i_539 < _546)
    goto <bb 280>;
  else
    goto <bb 278>;

  <bb 278>:
  abort ();

<L76>:
  goto <bb 491> (<L23>);

  <bb 280>:
  if (_546 > 5)
    goto <bb 281>;
  else
    goto <bb 282>;

  <bb 281>:
  _547 = new_shape.D.61194.dims_pointer_;
  i.7_548 = (unsigned int) i_539;
  _549 = i.7_548 * 4;
  _550 = _547 + _549;
  *_550 = 1;
  goto <bb 284>;

  <bb 282>:
  # i_1109 = PHI <i_539(280)>

  <bb 283>:
  # i_229 = PHI <i_1109(282), 0(276)>
  # DEBUG i => i_229
  # DEBUG this => &new_shape
  # DEBUG i => i_229
  # DEBUG val => 1
  new_shape.D.61194.dims_[i_229] = 1;

  <bb 284>:
  # i_968 = PHI <i_229(283), i_539(281)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  i_539 = i_968 + 1;
  # DEBUG i => i_539
  # DEBUG i => NULL
  # DEBUG i => i_539
  if (i_539 == 4)
    goto <bb 285>;
  else
    goto <bb 277>;

  <bb 285>:
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG shape_size => NULL
  # DEBUG value => NULL
  # DEBUG this => &D.64490
  # DEBUG i => 0
  _551 = D.64490.size_;
  if (_551 > 0)
    goto <bb 287>;
  else
    goto <bb 286>;

  <bb 286>:
  abort ();

  <bb 287>:
  if (_551 > 5)
    goto <bb 288>;
  else
    goto <bb 289>;

  <bb 288>:
  _552 = D.64490.D.61194.dims_pointer_;
  iftmp.11_556 = MEM[(const int32_t &)_552];
  goto <bb 290>;

  <bb 289>:
  iftmp.11_557 = D.64490.D.61194.dims_[0];

  <bb 290>:
  # iftmp.11_558 = PHI <iftmp.11_556(288), iftmp.11_557(289)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 0
  # DEBUG val => iftmp.11_558
  _559 = new_shape.size_;
  if (_559 > 0)
    goto <bb 293>;
  else
    goto <bb 291>;

  <bb 291>:
  abort ();

<L78>:
  goto <bb 333> (<L24>);

  <bb 293>:
  if (_559 > 5)
    goto <bb 294>;
  else
    goto <bb 295>;

  <bb 294>:
  _560 = new_shape.D.61194.dims_pointer_;
  *_560 = iftmp.11_558;
  pretmp_344 = D.64490.size_;
  goto <bb 296>;

  <bb 295>:
  new_shape.D.61194.dims_[0] = iftmp.11_558;

  <bb 296>:
  # prephitmp_297 = PHI <_551(295), pretmp_344(294)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &D.64490
  # DEBUG i => 1
  if (prephitmp_297 > 1)
    goto <bb 299>;
  else
    goto <bb 297>;

  <bb 297>:
  abort ();

<L79>:
  goto <bb 333> (<L24>);

  <bb 299>:
  if (prephitmp_297 > 5)
    goto <bb 300>;
  else
    goto <bb 301>;

  <bb 300>:
  _565 = D.64490.D.61194.dims_pointer_;
  iftmp.11_569 = MEM[(const int32_t &)_565 + 4];
  goto <bb 302>;

  <bb 301>:
  iftmp.11_570 = D.64490.D.61194.dims_[1];

  <bb 302>:
  # iftmp.11_571 = PHI <iftmp.11_569(300), iftmp.11_570(301)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 1
  # DEBUG val => iftmp.11_571
  _572 = new_shape.size_;
  if (_572 > 1)
    goto <bb 305>;
  else
    goto <bb 303>;

  <bb 303>:
  abort ();

<L80>:
  goto <bb 333> (<L24>);

  <bb 305>:
  if (_572 > 5)
    goto <bb 306>;
  else
    goto <bb 307>;

  <bb 306>:
  _573 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_573 + 4B] = iftmp.11_571;
  goto <bb 308>;

  <bb 307>:
  new_shape.D.61194.dims_[1] = iftmp.11_571;

  <bb 308>:
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &D.64490
  # DEBUG i => 2
  if (prephitmp_297 != 2)
    goto <bb 311>;
  else
    goto <bb 309>;

  <bb 309>:
  abort ();

<L81>:
  goto <bb 333> (<L24>);

  <bb 311>:
  if (prephitmp_297 > 5)
    goto <bb 312>;
  else
    goto <bb 313>;

  <bb 312>:
  _578 = D.64490.D.61194.dims_pointer_;
  iftmp.11_582 = MEM[(const int32_t &)_578 + 8];
  goto <bb 314>;

  <bb 313>:
  iftmp.11_583 = D.64490.D.61194.dims_[2];

  <bb 314>:
  # iftmp.11_584 = PHI <iftmp.11_582(312), iftmp.11_583(313)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 3
  # DEBUG val => iftmp.11_584
  if (_572 > 3)
    goto <bb 317>;
  else
    goto <bb 315>;

  <bb 315>:
  abort ();

<L82>:
  goto <bb 333> (<L24>);

  <bb 317>:
  if (_572 > 5)
    goto <bb 318>;
  else
    goto <bb 319>;

  <bb 318>:
  _586 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_586 + 12B] = iftmp.11_584;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &input1_shape
  # DEBUG other => &new_shape
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  input1_shape.size_ = _572;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &input1_shape
  # DEBUG other => &new_shape
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  _591 = (sizetype) _572;
  if (_572 <= 536870910)
    goto <bb 320>;
  else
    goto <bb 324>;

  <bb 319>:
  new_shape.D.61194.dims_[3] = iftmp.11_584;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &input1_shape
  # DEBUG other => &new_shape
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  input1_shape.size_ = _572;
  # DEBUG this => &input1_shape
  goto <bb 327>;

  <bb 320>:
  iftmp.8_592 = _591 * 4;
  _593 = operator new [] (iftmp.8_592);
  goto <bb 322>;

<L83>:
  goto <bb 333> (<L24>);

  <bb 322>:
  input1_shape.D.61194.dims_pointer_ = _593;
  # DEBUG this => &input1_shape
  _594 = input1_shape.size_;
  if (_594 > 5)
    goto <bb 326>;
  else
    goto <bb 323>;

  <bb 323>:
  pretmp_343 = new_shape.size_;
  goto <bb 327>;

  <bb 324>:
  __cxa_throw_bad_array_new_length ();

<L84>:
  goto <bb 333> (<L24>);

  <bb 326>:
  pretmp_342 = new_shape.size_;

  <bb 327>:
  # iftmp.9_602 = PHI <_593(326), &input1_shape.D.61194.dims_(323), &input1_shape.D.61194.dims_(319)>
  # _884 = PHI <_594(326), _594(323), _572(319)>
  # prephitmp_336 = PHI <pretmp_342(326), pretmp_343(323), _572(319)>
  # DEBUG this => NULL
  # DEBUG this => &new_shape
  if (prephitmp_336 > 5)
    goto <bb 328>;
  else
    goto <bb 329>;

  <bb 328>:
  iftmp.10_598 = new_shape.D.61194.dims_pointer_;

  <bb 329>:
  # iftmp.10_603 = PHI <iftmp.10_598(328), &new_shape.D.61194.dims_(327)>
  # DEBUG this => NULL
  _600 = (long unsigned int) _884;
  _601 = _600 * 4;
  memcpy (iftmp.9_602, iftmp.10_603, _601);
  # DEBUG this => NULL
  # DEBUG other => NULL
  # DEBUG this => &new_shape
  _519 = new_shape.size_;
  if (_519 > 5)
    goto <bb 330>;
  else
    goto <bb 555>;

  <bb 330>:
  _520 = new_shape.D.61194.dims_pointer_;
  if (_520 != 0B)
    goto <bb 331>;
  else
    goto <bb 555>;

  <bb 331>:
  operator delete [] (_520);
  pretmp_1046 = MEM[(long int *)&D.64495];
  goto <bb 556>;

<L77>:

<L24>:
  # DEBUG this => &new_shape
  _521 = new_shape.size_;
  if (_521 > 5)
    goto <bb 334>;
  else
    goto <bb 336>;

  <bb 334>:
  _522 = new_shape.D.61194.dims_pointer_;
  if (_522 != 0B)
    goto <bb 335>;
  else
    goto <bb 336>;

  <bb 335>:
  operator delete [] (_522);

  <bb 336>:
  # DEBUG this => NULL
  resx 25

<L85>:
  goto <bb 491> (<L23>);

  <bb 338>:
  # DEBUG this => &new_shape
  # DEBUG value => 1
  # DEBUG shape_size => 4
  MEM[(struct  &)&new_shape] ={v} {CLOBBER};
  # DEBUG D#2 => &new_shape
  # DEBUG D#2 => &new_shape
  # DEBUG dimensions_count => 4
  # DEBUG this => D#2
  # DEBUG this => D#2
  MEM[(int32_t *)&new_shape] = 4;
  # DEBUG i => NULL
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG this => &new_shape
  # DEBUG i => 0
  # DEBUG val => 1
  goto <bb 344>;

  <bb 339>:
  # DEBUG i => i_628
  # DEBUG this => &new_shape
  # DEBUG i => i_628
  # DEBUG val => 1
  _635 = new_shape.size_;
  if (i_628 < _635)
    goto <bb 341>;
  else
    goto <bb 340>;

  <bb 340>:
  abort ();

  <bb 341>:
  if (_635 > 5)
    goto <bb 342>;
  else
    goto <bb 343>;

  <bb 342>:
  _636 = new_shape.D.61194.dims_pointer_;
  i.7_637 = (unsigned int) i_628;
  _638 = i.7_637 * 4;
  _639 = _636 + _638;
  *_639 = 1;
  goto <bb 345>;

  <bb 343>:
  # i_1108 = PHI <i_628(341)>

  <bb 344>:
  # i_224 = PHI <i_1108(343), 0(338)>
  # DEBUG i => i_224
  # DEBUG this => &new_shape
  # DEBUG i => i_224
  # DEBUG val => 1
  new_shape.D.61194.dims_[i_224] = 1;

  <bb 345>:
  # i_1047 = PHI <i_224(344), i_628(342)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  i_628 = i_1047 + 1;
  # DEBUG i => i_628
  # DEBUG i => NULL
  # DEBUG i => i_628
  if (i_628 == 4)
    goto <bb 346>;
  else
    goto <bb 339>;

  <bb 346>:
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG shape_size => NULL
  # DEBUG value => NULL
  # DEBUG this => &D.64495
  # DEBUG i => 0
  _640 = D.64495.size_;
  if (_640 > 0)
    goto <bb 348>;
  else
    goto <bb 347>;

  <bb 347>:
  abort ();

  <bb 348>:
  if (_640 > 5)
    goto <bb 349>;
  else
    goto <bb 350>;

  <bb 349>:
  _641 = D.64495.D.61194.dims_pointer_;
  iftmp.11_645 = MEM[(const int32_t &)_641];
  goto <bb 351>;

  <bb 350>:
  iftmp.11_646 = D.64495.D.61194.dims_[0];

  <bb 351>:
  # iftmp.11_647 = PHI <iftmp.11_645(349), iftmp.11_646(350)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 0
  # DEBUG val => iftmp.11_647
  _648 = new_shape.size_;
  if (_648 > 0)
    goto <bb 354>;
  else
    goto <bb 352>;

  <bb 352>:
  abort ();

<L88>:
  goto <bb 395> (<L25>);

  <bb 354>:
  if (_648 > 5)
    goto <bb 355>;
  else
    goto <bb 356>;

  <bb 355>:
  _649 = new_shape.D.61194.dims_pointer_;
  *_649 = iftmp.11_647;
  pretmp_1020 = D.64495.size_;
  goto <bb 357>;

  <bb 356>:
  new_shape.D.61194.dims_[0] = iftmp.11_647;

  <bb 357>:
  # prephitmp_369 = PHI <_640(356), pretmp_1020(355)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &D.64495
  # DEBUG i => 1
  if (prephitmp_369 > 1)
    goto <bb 360>;
  else
    goto <bb 358>;

  <bb 358>:
  abort ();

<L89>:
  goto <bb 395> (<L25>);

  <bb 360>:
  if (prephitmp_369 > 5)
    goto <bb 361>;
  else
    goto <bb 362>;

  <bb 361>:
  _654 = D.64495.D.61194.dims_pointer_;
  iftmp.11_658 = MEM[(const int32_t &)_654 + 4];
  goto <bb 363>;

  <bb 362>:
  iftmp.11_659 = D.64495.D.61194.dims_[1];

  <bb 363>:
  # iftmp.11_660 = PHI <iftmp.11_658(361), iftmp.11_659(362)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 1
  # DEBUG val => iftmp.11_660
  _661 = new_shape.size_;
  if (_661 > 1)
    goto <bb 366>;
  else
    goto <bb 364>;

  <bb 364>:
  abort ();

<L90>:
  goto <bb 395> (<L25>);

  <bb 366>:
  if (_661 > 5)
    goto <bb 367>;
  else
    goto <bb 368>;

  <bb 367>:
  _662 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_662 + 4B] = iftmp.11_660;
  goto <bb 369>;

  <bb 368>:
  new_shape.D.61194.dims_[1] = iftmp.11_660;

  <bb 369>:
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &D.64495
  # DEBUG i => 2
  if (prephitmp_369 != 2)
    goto <bb 372>;
  else
    goto <bb 370>;

  <bb 370>:
  abort ();

<L91>:
  goto <bb 395> (<L25>);

  <bb 372>:
  if (prephitmp_369 > 5)
    goto <bb 373>;
  else
    goto <bb 374>;

  <bb 373>:
  _667 = D.64495.D.61194.dims_pointer_;
  iftmp.11_671 = MEM[(const int32_t &)_667 + 8];
  goto <bb 375>;

  <bb 374>:
  iftmp.11_672 = D.64495.D.61194.dims_[2];

  <bb 375>:
  # iftmp.11_673 = PHI <iftmp.11_671(373), iftmp.11_672(374)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG this => &new_shape
  # DEBUG i => 3
  # DEBUG val => iftmp.11_673
  if (_661 > 3)
    goto <bb 378>;
  else
    goto <bb 376>;

  <bb 376>:
  abort ();

<L92>:
  goto <bb 395> (<L25>);

  <bb 378>:
  if (_661 > 5)
    goto <bb 379>;
  else
    goto <bb 380>;

  <bb 379>:
  _675 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_675 + 12B] = iftmp.11_673;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &output_shape
  # DEBUG other => &new_shape
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  output_shape.size_ = _661;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &output_shape
  # DEBUG other => &new_shape
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  _680 = (sizetype) _661;
  if (_661 <= 536870910)
    goto <bb 381>;
  else
    goto <bb 385>;

  <bb 380>:
  new_shape.D.61194.dims_[3] = iftmp.11_673;
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG val => NULL
  # DEBUG this => &output_shape
  # DEBUG other => &new_shape
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &new_shape
  # DEBUG this => D#1
  output_shape.size_ = _661;
  # DEBUG this => &output_shape
  goto <bb 388>;

  <bb 381>:
  iftmp.8_681 = _680 * 4;
  _682 = operator new [] (iftmp.8_681);
  goto <bb 383>;

<L93>:
  goto <bb 395> (<L25>);

  <bb 383>:
  output_shape.D.61194.dims_pointer_ = _682;
  # DEBUG this => &output_shape
  _683 = output_shape.size_;
  if (_683 > 5)
    goto <bb 387>;
  else
    goto <bb 384>;

  <bb 384>:
  pretmp_377 = new_shape.size_;
  goto <bb 388>;

  <bb 385>:
  __cxa_throw_bad_array_new_length ();

<L94>:
  goto <bb 395> (<L25>);

  <bb 387>:
  pretmp_368 = new_shape.size_;

  <bb 388>:
  # iftmp.9_691 = PHI <_682(387), &output_shape.D.61194.dims_(384), &output_shape.D.61194.dims_(380)>
  # _885 = PHI <_683(387), _683(384), _661(380)>
  # prephitmp_355 = PHI <pretmp_368(387), pretmp_377(384), _661(380)>
  # DEBUG this => NULL
  # DEBUG this => &new_shape
  if (prephitmp_355 > 5)
    goto <bb 389>;
  else
    goto <bb 390>;

  <bb 389>:
  iftmp.10_687 = new_shape.D.61194.dims_pointer_;

  <bb 390>:
  # iftmp.10_692 = PHI <iftmp.10_687(389), &new_shape.D.61194.dims_(388)>
  # DEBUG this => NULL
  _689 = (long unsigned int) _885;
  _690 = _689 * 4;
  memcpy (iftmp.9_691, iftmp.10_692, _690);
  # DEBUG this => NULL
  # DEBUG other => NULL
  # DEBUG this => &new_shape
  _608 = new_shape.size_;
  if (_608 > 5)
    goto <bb 391>;
  else
    goto <bb 393>;

  <bb 391>:
  _609 = new_shape.D.61194.dims_pointer_;
  if (_609 != 0B)
    goto <bb 392>;
  else
    goto <bb 393>;

  <bb 392>:
  operator delete [] (_609);

  <bb 393>:
  new_shape ={v} {CLOBBER};
  # DEBUG shape => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 3
  _693 = input1_shape.size_;
  if (_693 > 3)
    goto <bb 401>;
  else
    goto <bb 400>;

<L87>:

<L25>:
  # DEBUG this => &new_shape
  _610 = new_shape.size_;
  if (_610 > 5)
    goto <bb 396>;
  else
    goto <bb 398>;

  <bb 396>:
  _611 = new_shape.D.61194.dims_pointer_;
  if (_611 != 0B)
    goto <bb 397>;
  else
    goto <bb 398>;

  <bb 397>:
  operator delete [] (_611);

  <bb 398>:
  # DEBUG this => NULL
  resx 26

<L95>:
  goto <bb 485> (<L22>);

  <bb 400>:
  abort ();

  <bb 401>:
  if (_693 > 5)
    goto <bb 402>;
  else
    goto <bb 403>;

  <bb 402>:
  _694 = input1_shape.D.61194.dims_pointer_;
  iftmp.11_698 = MEM[(const int32_t &)_694 + 12];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG depth => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 2
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG depth => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 2
  iftmp.11_706 = MEM[(const int32_t &)_694 + 8];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_width => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 1
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_width => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 1
  iftmp.11_714 = MEM[(const int32_t &)_694 + 4];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_height => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 0
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_height => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 0
  iftmp.11_722 = MEM[(const int32_t &)_694];
  goto <bb 404>;

  <bb 403>:
  iftmp.11_699 = input1_shape.D.61194.dims_[3];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG depth => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 2
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG depth => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 2
  iftmp.11_707 = input1_shape.D.61194.dims_[2];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_width => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 1
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_width => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 1
  iftmp.11_715 = input1_shape.D.61194.dims_[1];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_height => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 0
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_height => NULL
  # DEBUG this => &input1_shape
  # DEBUG i => 0
  iftmp.11_723 = input1_shape.D.61194.dims_[0];

  <bb 404>:
  # iftmp.11_724 = PHI <iftmp.11_722(402), iftmp.11_723(403)>
  # iftmp.11_612 = PHI <iftmp.11_698(402), iftmp.11_699(403)>
  # iftmp.11_590 = PHI <iftmp.11_706(402), iftmp.11_707(403)>
  # iftmp.11_585 = PHI <iftmp.11_714(402), iftmp.11_715(403)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG input_batch_size => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 2
  _725 = output_shape.size_;
  if (_725 > 2)
    goto <bb 407>;
  else
    goto <bb 405>;

  <bb 405>:
  abort ();

<L97>:
  goto <bb 479> (<L21>);

  <bb 407>:
  if (_725 > 5)
    goto <bb 408>;
  else
    goto <bb 409>;

  <bb 408>:
  _726 = output_shape.D.61194.dims_pointer_;
  iftmp.11_730 = MEM[(const int32_t &)_726 + 8];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_width => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 1
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_width => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 1
  iftmp.11_738 = MEM[(const int32_t &)_726 + 4];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_height => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 0
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_height => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 0
  iftmp.11_746 = MEM[(const int32_t &)_726];
  goto <bb 410>;

  <bb 409>:
  iftmp.11_731 = output_shape.D.61194.dims_[2];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_width => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 1
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_width => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 1
  iftmp.11_739 = output_shape.D.61194.dims_[1];
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_height => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 0
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_height => NULL
  # DEBUG this => &output_shape
  # DEBUG i => 0
  iftmp.11_747 = output_shape.D.61194.dims_[0];

  <bb 410>:
  # iftmp.11_748 = PHI <iftmp.11_746(408), iftmp.11_747(409)>
  # iftmp.11_577 = PHI <iftmp.11_730(408), iftmp.11_731(409)>
  # iftmp.11_540 = PHI <iftmp.11_738(408), iftmp.11_739(409)>
  # DEBUG this => NULL
  # DEBUG i => NULL
  # DEBUG output_batch_size => NULL
  block_shape_height_472 = MEM[(const int32_t *)_66];
  # DEBUG block_shape_height => block_shape_height_472
  _473 = MEM[(long int *)&D.64490];
  # DEBUG D#1 => &D.64490
  # DEBUG this => D#1
  if (_473 == 4)
    goto <bb 411>;
  else
    goto <bb 557>;

  <bb 411>:
  iftmp.14_474 = MEM[(const int32_t *)_66 + 4B];
  # DEBUG block_shape_width => iftmp.14_474
  padding_top_1095 = MEM[(const int32_t *)_67];
  # DEBUG padding_top => padding_top_1095
  # DEBUG D#1 => &D.64490
  # DEBUG this => D#1
  # DEBUG block_shape_width => iftmp.14_474
  # DEBUG padding_top => padding_top_1095
  # DEBUG D#1 => &D.64490
  # DEBUG this => D#1
  iftmp.15_476 = MEM[(const int32_t *)_67 + 8B];

  <bb 412>:
  # iftmp.15_494 = PHI <0(557), iftmp.15_476(411)>
  # padding_top_1110 = PHI <padding_top_1097(557), padding_top_1095(411)>
  # iftmp.14_1111 = PHI <1(557), iftmp.14_474(411)>
  # DEBUG padding_left => iftmp.15_494
  pad_value_477 = MEM[(const struct SpaceToBatchParams &)_11].output_offset;
  # DEBUG pad_value => pad_value_477
  # DEBUG out_b => 0
  # DEBUG out_b => 0
  if (iftmp.11_748 <= 0)
    goto <bb 471>;
  else
    goto <bb 413>;

  <bb 413>:

  <bb 414>:
  # out_b_1027 = PHI <0(413), out_b_505(470)>
  # prephitmp_728 = PHI <_725(413), prephitmp_387(470)>
  # DEBUG out_b => out_b_1027
  input_batch_479 = out_b_1027 % iftmp.11_724;
  # DEBUG input_batch => input_batch_479
  _480 = out_b_1027 / iftmp.11_724;
  shift_w_482 = _480 % iftmp.14_1111;
  # DEBUG shift_w => shift_w_482
  shift_h_483 = _480 / iftmp.14_1111;
  # DEBUG shift_h => shift_h_483
  # DEBUG out_h => 0
  # DEBUG out_h => 0
  if (iftmp.11_540 <= 0)
    goto <bb 468>;
  else
    goto <bb 415>;

  <bb 415>:

  <bb 416>:
  # out_h_1026 = PHI <0(415), out_h_504(467)>
  # prephitmp_413 = PHI <prephitmp_728(415), prephitmp_1045(467)>
  # DEBUG out_h => out_h_1026
  # DEBUG out_w => 0
  if (iftmp.11_577 <= 0)
    goto <bb 465>;
  else
    goto <bb 417>;

  <bb 417>:
  # DEBUG shape => &output_shape
  # DEBUG i0 => out_b_1027
  # DEBUG i1 => out_h_1026
  # DEBUG i2 => 0
  # DEBUG i3 => 0
  # DEBUG D#1 => &output_shape
  # DEBUG this => D#1
  if (prephitmp_413 == 4)
    goto <bb 419>;
  else
    goto <bb 418>;

  <bb 418>:
  abort ();

  <bb 419>:
  # DEBUG this => &output_shape
  # DEBUG this => NULL
  # DEBUG dims_data => NULL
  _437 = MEM[(const int *)&output_shape + 4B];
  if (_437 > out_b_1027)
    goto <bb 421>;
  else
    goto <bb 420>;

  <bb 420>:
  abort ();

  <bb 421>:
  _158 = MEM[(const int *)&output_shape + 8B];
  if (_158 > out_h_1026)
    goto <bb 423>;
  else
    goto <bb 422>;

  <bb 422>:
  abort ();

  <bb 423>:
  _541 = MEM[(const int *)&output_shape + 12B];
  if (_541 > 0)
    goto <bb 425>;
  else
    goto <bb 424>;

  <bb 424>:
  abort ();

  <bb 425>:
  _630 = MEM[(const int *)&output_shape + 16B];
  if (_630 > 0)
    goto <bb 438>;
  else
    goto <bb 426>;

  <bb 426>:
  abort ();

  <bb 427>:
  # DEBUG shape => &output_shape
  # DEBUG i0 => out_b_1027
  # DEBUG i1 => out_h_1026
  # DEBUG i2 => out_w_503
  # DEBUG i3 => 0
  _749 = MEM[(long int *)&output_shape];
  # DEBUG D#1 => &output_shape
  # DEBUG this => D#1
  if (_749 == 4)
    goto <bb 429>;
  else
    goto <bb 418>;

<L98>:
  goto <bb 479> (<L21>);

  <bb 429>:
  # DEBUG this => &output_shape
  # DEBUG this => NULL
  # DEBUG dims_data => NULL
  _750 = MEM[(const int *)&output_shape + 4B];
  if (_750 > out_b_1027)
    goto <bb 431>;
  else
    goto <bb 420>;

<L99>:
  goto <bb 479> (<L21>);

  <bb 431>:
  _751 = MEM[(const int *)&output_shape + 8B];
  if (_751 > out_h_1026)
    goto <bb 433>;
  else
    goto <bb 422>;

<L100>:
  goto <bb 479> (<L21>);

  <bb 433>:
  _752 = MEM[(const int *)&output_shape + 12B];
  if (out_w_503 < _752)
    goto <bb 435>;
  else
    goto <bb 424>;

<L101>:
  goto <bb 479> (<L21>);

  <bb 435>:
  _753 = MEM[(const int *)&output_shape + 16B];
  if (_753 > 0)
    goto <bb 436>;
  else
    goto <bb 426>;

  <bb 436>:
  goto <bb 439>;

<L102>:
  goto <bb 479> (<L21>);

  <bb 438>:
  _419 = block_shape_height_472 * out_h_1026;
  _388 = _419 + shift_h_483;
  _1096 = (unsigned int) iftmp.11_585;
  _1094 = (unsigned int) padding_top_1110;
  _1091 = _1096 + _1094;
  _491 = (int) _1091;
  _1089 = (unsigned int) _388;
  _1086 = (unsigned int) padding_top_1110;
  _1073 = _1089 - _1086;
  _497 = (int) _1073;

  <bb 439>:
  # out_w_1003 = PHI <0(438), out_w_503(436)>
  # _1002 = PHI <_158(438), _751(436)>
  # _1001 = PHI <_541(438), _752(436)>
  # _987 = PHI <_630(438), _753(436)>
  # DEBUG out_w => out_w_1003
  # DEBUG shape => &output_shape
  # DEBUG i0 => out_b_1027
  # DEBUG i1 => out_h_1026
  # DEBUG i2 => out_w_1003
  # DEBUG i3 => 0
  # DEBUG D#1 => &output_shape
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG dims_data => NULL
  _754 = _1002 * out_b_1027;
  _755 = _754 + out_h_1026;
  _756 = _755 * _1001;
  _757 = _756 + out_w_1003;
  _758 = _757 * _987;
  # DEBUG shape => NULL
  # DEBUG i0 => NULL
  # DEBUG i1 => NULL
  # DEBUG i2 => NULL
  # DEBUG i3 => NULL
  _487 = (sizetype) _758;
  out_488 = iftmp.13_69 + _487;
  # DEBUG out => out_488
  if (_388 < padding_top_1110)
    goto <bb 443>;
  else
    goto <bb 440>;

  <bb 440>:
  if (_388 >= _491)
    goto <bb 443>;
  else
    goto <bb 441>;

  <bb 441>:
  _492 = out_w_1003 * iftmp.14_1111;
  _493 = shift_w_482 + _492;
  if (_493 < iftmp.15_494)
    goto <bb 443>;
  else
    goto <bb 442>;

  <bb 442>:
  _495 = iftmp.15_494 + iftmp.11_590;
  if (_493 >= _495)
    goto <bb 443>;
  else
    goto <bb 444>;

  <bb 443>:
  depth.16_496 = (unsigned int) iftmp.11_612;
  memset (out_488, pad_value_477, depth.16_496);
  goto <bb 463>;

  <bb 444>:
  _498 = _493 - iftmp.15_494;
  # DEBUG shape => &input1_shape
  # DEBUG i0 => input_batch_479
  # DEBUG i1 => _388 - padding_top_1110
  # DEBUG i2 => _498
  # DEBUG i3 => 0
  _760 = MEM[(long int *)&input1_shape];
  # DEBUG D#1 => &input1_shape
  # DEBUG this => D#1
  if (_760 == 4)
    goto <bb 447>;
  else
    goto <bb 445>;

  <bb 445>:
  abort ();

<L103>:
  goto <bb 479> (<L21>);

  <bb 447>:
  # DEBUG this => &input1_shape
  # DEBUG this => NULL
  # DEBUG dims_data => NULL
  if (input_batch_479 >= 0)
    goto <bb 448>;
  else
    goto <bb 449>;

  <bb 448>:
  _761 = MEM[(const int *)&input1_shape + 4B];
  if (input_batch_479 < _761)
    goto <bb 451>;
  else
    goto <bb 449>;

  <bb 449>:
  abort ();

<L104>:
  goto <bb 479> (<L21>);

  <bb 451>:
  if (_497 >= 0)
    goto <bb 452>;
  else
    goto <bb 453>;

  <bb 452>:
  _762 = MEM[(const int *)&input1_shape + 8B];
  if (_497 < _762)
    goto <bb 455>;
  else
    goto <bb 453>;

  <bb 453>:
  abort ();

<L105>:
  goto <bb 479> (<L21>);

  <bb 455>:
  if (_498 >= 0)
    goto <bb 456>;
  else
    goto <bb 457>;

  <bb 456>:
  _763 = MEM[(const int *)&input1_shape + 12B];
  if (_498 < _763)
    goto <bb 459>;
  else
    goto <bb 457>;

  <bb 457>:
  abort ();

<L106>:
  goto <bb 479> (<L21>);

  <bb 459>:
  _764 = MEM[(const int *)&input1_shape + 16B];
  if (_764 > 0)
    goto <bb 462>;
  else
    goto <bb 460>;

  <bb 460>:
  abort ();

<L107>:
  goto <bb 479> (<L21>);

  <bb 462>:
  _765 = input_batch_479 * _762;
  _766 = _497 + _765;
  _767 = _763 * _766;
  _768 = _498 + _767;
  _769 = _764 * _768;
  # DEBUG shape => NULL
  # DEBUG i0 => NULL
  # DEBUG i1 => NULL
  # DEBUG i2 => NULL
  # DEBUG i3 => NULL
  _500 = (sizetype) _769;
  in_501 = _65 + _500;
  # DEBUG in => in_501
  depth.16_502 = (unsigned int) iftmp.11_612;
  memcpy (out_488, in_501, depth.16_502);

  <bb 463>:
  out_w_503 = out_w_1003 + 1;
  # DEBUG out_w => out_w_503
  # DEBUG out_w => out_w_503
  if (out_w_503 >= iftmp.11_577)
    goto <bb 464>;
  else
    goto <bb 427>;

  <bb 464>:
  pretmp_156 = MEM[(long int *)&output_shape];

  <bb 465>:
  # prephitmp_1045 = PHI <pretmp_156(464), prephitmp_413(416)>
  out_h_504 = out_h_1026 + 1;
  # DEBUG out_h => out_h_504
  # DEBUG out_h => out_h_504
  if (out_h_504 >= iftmp.11_540)
    goto <bb 466>;
  else
    goto <bb 467>;

  <bb 466>:
  # prephitmp_1099 = PHI <prephitmp_1045(465)>
  goto <bb 468>;

  <bb 467>:
  goto <bb 416>;

  <bb 468>:
  # prephitmp_387 = PHI <prephitmp_1099(466), prephitmp_728(414)>
  out_b_505 = out_b_1027 + 1;
  # DEBUG out_b => out_b_505
  # DEBUG out_b => out_b_505
  if (out_b_505 >= iftmp.11_748)
    goto <bb 469>;
  else
    goto <bb 470>;

  <bb 469>:
  # prephitmp_1112 = PHI <prephitmp_387(468)>
  goto <bb 471>;

  <bb 470>:
  goto <bb 414>;

  <bb 471>:
  # prephitmp_380 = PHI <prephitmp_1112(469), _725(412)>
  # DEBUG this => &output_shape
  if (prephitmp_380 > 5)
    goto <bb 472>;
  else
    goto <bb 474>;

  <bb 472>:
  _507 = output_shape.D.61194.dims_pointer_;
  if (_507 != 0B)
    goto <bb 473>;
  else
    goto <bb 474>;

  <bb 473>:
  operator delete [] (_507);

  <bb 474>:
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => &input1_shape
  _508 = input1_shape.size_;
  if (_508 > 5)
    goto <bb 475>;
  else
    goto <bb 477>;

  <bb 475>:
  _509 = input1_shape.D.61194.dims_pointer_;
  if (_509 != 0B)
    goto <bb 476>;
  else
    goto <bb 477>;

  <bb 476>:
  operator delete [] (_509);

  <bb 477>:
  # DEBUG this => NULL
  # DEBUG this => &label
  # DEBUG this => NULL
  input1_shape ={v} {CLOBBER};
  output_shape ={v} {CLOBBER};
  # DEBUG params => NULL
  # DEBUG unextended_input1_shape => NULL
  # DEBUG input1_data => NULL
  # DEBUG block_shape_data => NULL
  # DEBUG paddings_data => NULL
  # DEBUG unextended_output_shape => NULL
  # DEBUG output_data => NULL
  # DEBUG in => NULL
  # DEBUG out => NULL
  # DEBUG out_w => NULL
  # DEBUG out_h => NULL
  # DEBUG shift_h => NULL
  # DEBUG shift_w => NULL
  # DEBUG input_batch => NULL
  # DEBUG out_b => NULL
  # DEBUG pad_value => NULL
  # DEBUG padding_top => NULL
  # DEBUG block_shape_height => NULL
  # DEBUG this => &D.64495
  _76 = D.64495.size_;
  if (_76 > 5)
    goto <bb 492>;
  else
    goto <bb 494>;

<L96>:

<L21>:
  # DEBUG this => &output_shape
  _510 = output_shape.size_;
  if (_510 > 5)
    goto <bb 480>;
  else
    goto <bb 482>;

  <bb 480>:
  _511 = output_shape.D.61194.dims_pointer_;
  if (_511 != 0B)
    goto <bb 481>;
  else
    goto <bb 482>;

  <bb 481>:
  operator delete [] (_511);

  <bb 482>:
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  # DEBUG this => NULL
  resx 24

<L108>:
  goto <bb 485> (<L22>);

<L86>:

<L22>:
  # DEBUG i => NULL
  # DEBUG this => &input1_shape
  _512 = input1_shape.size_;
  if (_512 > 5)
    goto <bb 486>;
  else
    goto <bb 488>;

  <bb 486>:
  _513 = input1_shape.D.61194.dims_pointer_;
  if (_513 != 0B)
    goto <bb 487>;
  else
    goto <bb 488>;

  <bb 487>:
  operator delete [] (_513);

  <bb 488>:
  # DEBUG this => NULL
  resx 23

<L109>:
  goto <bb 491> (<L23>);

<L73>:

<L23>:
  # DEBUG i => NULL
  # DEBUG this => &label
  # DEBUG this => NULL
  resx 22

  <bb 492>:
  _77 = D.64495.D.61194.dims_pointer_;
  if (_77 != 0B)
    goto <bb 493>;
  else
    goto <bb 494>;

  <bb 493>:
  operator delete [] (_77);

  <bb 494>:
  # DEBUG this => NULL
  D.64495 ={v} {CLOBBER};
  # DEBUG this => &D.64494
  _74 = D.64494.size_;
  if (_74 > 5)
    goto <bb 495>;
  else
    goto <bb 497>;

  <bb 495>:
  _75 = D.64494.D.61194.dims_pointer_;
  if (_75 != 0B)
    goto <bb 496>;
  else
    goto <bb 497>;

  <bb 496>:
  operator delete [] (_75);

  <bb 497>:
  # DEBUG this => NULL
  D.64494 ={v} {CLOBBER};
  # DEBUG this => &D.64493
  _72 = D.64493.size_;
  if (_72 > 5)
    goto <bb 498>;
  else
    goto <bb 500>;

  <bb 498>:
  _73 = D.64493.D.61194.dims_pointer_;
  if (_73 != 0B)
    goto <bb 499>;
  else
    goto <bb 500>;

  <bb 499>:
  operator delete [] (_73);

  <bb 500>:
  # DEBUG this => NULL
  D.64493 ={v} {CLOBBER};
  # DEBUG this => &D.64490
  _70 = D.64490.size_;
  if (_70 > 5)
    goto <bb 501>;
  else
    goto <bb 503>;

  <bb 501>:
  _71 = D.64490.D.61194.dims_pointer_;
  if (_71 != 0B)
    goto <bb 502>;
  else
    goto <bb 503>;

  <bb 502>:
  operator delete [] (_71);

  <bb 503>:
  # DEBUG this => NULL
  D.64490 ={v} {CLOBBER};
  goto <bb 505>;

<L5>:
  _16 = context_12(D)->ReportError;
  _18 = TfLiteTypeGetName (_15);
  _19 = MEM[(const struct TfLiteEvalTensor *)_150].type;
  _20 = (int) _19;
  _16 (context_12(D), "Type %s (%d) not supported.", _18, _20);

  <bb 505>:
  # _1 = PHI <1(504), 0(503), 0(254)>
  return _1;

<L8>:
  input1_shape ={v} {CLOBBER};
  output_shape ={v} {CLOBBER};
  # DEBUG this => &D.64476
  _78 = D.64476.size_;
  if (_78 > 5)
    goto <bb 507>;
  else
    goto <bb 509>;

  <bb 507>:
  _79 = D.64476.D.61194.dims_pointer_;
  if (_79 != 0B)
    goto <bb 508>;
  else
    goto <bb 509>;

  <bb 508>:
  operator delete [] (_79);

  <bb 509>:
  # DEBUG this => NULL
  D.64476 ={v} {CLOBBER};
  resx 4

<L110>:
  goto <bb 512> (<L9>);

<L29>:

<L9>:
  # DEBUG this => &D.64475
  _80 = D.64475.size_;
  if (_80 > 5)
    goto <bb 513>;
  else
    goto <bb 515>;

  <bb 513>:
  _81 = D.64475.D.61194.dims_pointer_;
  if (_81 != 0B)
    goto <bb 514>;
  else
    goto <bb 515>;

  <bb 514>:
  operator delete [] (_81);

  <bb 515>:
  # DEBUG this => NULL
  D.64475 ={v} {CLOBBER};
  resx 3

<L111>:
  goto <bb 518> (<L10>);

<L27>:

<L10>:
  # DEBUG this => &D.64472
  _82 = D.64472.size_;
  if (_82 > 5)
    goto <bb 519>;
  else
    goto <bb 521>;

  <bb 519>:
  _83 = D.64472.D.61194.dims_pointer_;
  if (_83 != 0B)
    goto <bb 520>;
  else
    goto <bb 521>;

  <bb 520>:
  operator delete [] (_83);

  <bb 521>:
  # DEBUG this => NULL
  D.64472 ={v} {CLOBBER};
  resx 2

<L112>:
  goto <bb 524> (<L11>);

<L26>:

<L11>:
  # DEBUG this => &D.64469
  _84 = D.64469.size_;
  if (_84 > 5)
    goto <bb 525>;
  else
    goto <bb 527>;

  <bb 525>:
  _85 = D.64469.D.61194.dims_pointer_;
  if (_85 != 0B)
    goto <bb 526>;
  else
    goto <bb 527>;

  <bb 526>:
  operator delete [] (_85);

  <bb 527>:
  # DEBUG this => NULL
  D.64469 ={v} {CLOBBER};
  resx 1

<L12>:
  input1_shape ={v} {CLOBBER};
  output_shape ={v} {CLOBBER};
  # DEBUG this => &D.64495
  _86 = D.64495.size_;
  if (_86 > 5)
    goto <bb 529>;
  else
    goto <bb 531>;

  <bb 529>:
  _87 = D.64495.D.61194.dims_pointer_;
  if (_87 != 0B)
    goto <bb 530>;
  else
    goto <bb 531>;

  <bb 530>:
  operator delete [] (_87);

  <bb 531>:
  # DEBUG this => NULL
  D.64495 ={v} {CLOBBER};
  resx 12

<L113>:
  goto <bb 534> (<L13>);

<L71>:

<L13>:
  # DEBUG this => &D.64494
  _88 = D.64494.size_;
  if (_88 > 5)
    goto <bb 535>;
  else
    goto <bb 537>;

  <bb 535>:
  _89 = D.64494.D.61194.dims_pointer_;
  if (_89 != 0B)
    goto <bb 536>;
  else
    goto <bb 537>;

  <bb 536>:
  operator delete [] (_89);

  <bb 537>:
  # DEBUG this => NULL
  D.64494 ={v} {CLOBBER};
  resx 11

<L114>:
  goto <bb 540> (<L14>);

<L69>:

<L14>:
  # DEBUG this => &D.64493
  _90 = D.64493.size_;
  if (_90 > 5)
    goto <bb 541>;
  else
    goto <bb 543>;

  <bb 541>:
  _91 = D.64493.D.61194.dims_pointer_;
  if (_91 != 0B)
    goto <bb 542>;
  else
    goto <bb 543>;

  <bb 542>:
  operator delete [] (_91);

  <bb 543>:
  # DEBUG this => NULL
  D.64493 ={v} {CLOBBER};
  resx 10

<L115>:
  goto <bb 546> (<L15>);

<L68>:

<L15>:
  # DEBUG this => &D.64490
  _92 = D.64490.size_;
  if (_92 > 5)
    goto <bb 547>;
  else
    goto <bb 549>;

  <bb 547>:
  _93 = D.64490.D.61194.dims_pointer_;
  if (_93 != 0B)
    goto <bb 548>;
  else
    goto <bb 549>;

  <bb 548>:
  operator delete [] (_93);

  <bb 549>:
  # DEBUG this => NULL
  D.64490 ={v} {CLOBBER};
  resx 9

  <bb 550>:
  # DEBUG this => &output_shape
  # DEBUG other => &D.64476
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &D.64476
  # DEBUG this => D#1
  output_shape.size_ = 4;
  # DEBUG this => &output_shape
  # DEBUG this => NULL
  # DEBUG this => &D.64476
  # DEBUG this => NULL
  memcpy (&output_shape.D.61194.dims_, &D.64476.D.61194.dims_, 16);
  goto <bb 144>;

  <bb 551>:
  pretmp_335 = MEM[(long int *)&D.64476];

  <bb 552>:
  # prephitmp_318 = PHI <pretmp_1017(82), pretmp_335(551), _152(26)>
  new_shape ={v} {CLOBBER};
  # DEBUG shape => NULL
  # DEBUG shape => &D.64476
  # DEBUG D#1 => &D.64476
  # DEBUG this => D#1
  if (prephitmp_318 == 4)
    goto <bb 550>;
  else
    goto <bb 89>;

  <bb 553>:
  # DEBUG block_shape_width => 1
  padding_top_542 = MEM[(const int32_t *)_54];
  # DEBUG padding_top => padding_top_542
  # DEBUG D#1 => &D.64469
  # DEBUG this => D#1
  goto <bb 163>;

  <bb 554>:
  # DEBUG this => &output_shape
  # DEBUG other => &D.64495
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  # DEBUG D#1 => &D.64495
  # DEBUG this => D#1
  output_shape.size_ = 4;
  # DEBUG this => &output_shape
  # DEBUG this => NULL
  # DEBUG this => &D.64495
  # DEBUG this => NULL
  memcpy (&output_shape.D.61194.dims_, &D.64495.D.61194.dims_, 16);
  goto <bb 393>;

  <bb 555>:
  pretmp_744 = MEM[(long int *)&D.64495];

  <bb 556>:
  # prephitmp_420 = PHI <pretmp_1046(331), pretmp_744(555), _464(275)>
  new_shape ={v} {CLOBBER};
  # DEBUG shape => NULL
  # DEBUG shape => &D.64495
  # DEBUG D#1 => &D.64495
  # DEBUG this => D#1
  if (prephitmp_420 == 4)
    goto <bb 554>;
  else
    goto <bb 338>;

  <bb 557>:
  # DEBUG block_shape_width => 1
  padding_top_1097 = MEM[(const int32_t *)_67];
  # DEBUG padding_top => padding_top_1097
  # DEBUG D#1 => &D.64490
  # DEBUG this => D#1
  goto <bb 412>;

}


