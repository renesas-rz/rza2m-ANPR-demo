   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"quantization_util.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.global	__aeabi_d2lz
  17              		.section	.text._ZN6tflite18QuantizeMultiplierEdPlPi,"ax",%progbits
  18              		.align	2
  19              		.global	_ZN6tflite18QuantizeMultiplierEdPlPi
  20              		.syntax unified
  21              		.arm
  22              		.fpu neon
  24              	_ZN6tflite18QuantizeMultiplierEdPlPi:
  25              		.fnstart
  26              	.LFB1118:
  27              		.file 1 "../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp"
   1:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
   3:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** you may not use this file except in compliance with the License.
   5:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** You may obtain a copy of the License at
   6:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
   7:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
   9:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** See the License for the specific language governing permissions and
  13:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** limitations under the License.
  14:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** ==============================================================================*/
  15:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
  16:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  17:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
  18:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #include <algorithm>
  19:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #include <cmath>
  20:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #include <limits>
  21:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
  22:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  23:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  24:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
  25:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** namespace tflite {
  26:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
  27:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** namespace {
  28:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** // These constants are used to manipulate the binary representation of doubles.
  29:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** // Double-precision binary64 floating point format is:
  30:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** // Bit |  63  |  62-52   |   51-0   |
  31:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** //     | Sign | Exponent | Fraction |
  32:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** // To avoid 64-bit integers as much as possible, I break this into high and
  33:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** // low 32-bit chunks. High is:
  34:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** // Bit |  31  |  30-20   |      19-0     |
  35:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** //     | Sign | Exponent | High Fraction |
  36:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** // Low is:
  37:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** // Bit |     31-0     |
  38:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** //     | Low Fraction |
  39:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** // We then access the components through logical bit-wise operations to
  40:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** // extract the parts needed, with the positions and masks derived from the
  41:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** // layout shown above.
  42:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** constexpr uint64_t kSignMask = 0x8000000000000000LL;
  43:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** constexpr uint64_t kExponentMask = 0x7ff0000000000000LL;
  44:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** constexpr int32_t kExponentShift = 52;
  45:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** constexpr int32_t kExponentBias = 1023;
  46:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** constexpr uint32_t kExponentIsBadNum = 0x7ff;
  47:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** constexpr uint64_t kFractionMask = 0x000fffffffc00000LL;
  48:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** constexpr uint32_t kFractionShift = 22;
  49:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** constexpr uint32_t kFractionRoundingMask = 0x003fffff;
  50:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** constexpr uint32_t kFractionRoundingThreshold = 0x00200000;
  51:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }  // namespace
  52:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
  53:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** void QuantizeMultiplier(double double_multiplier, int32_t* quantized_multiplier,
  54:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                         int* shift) {
  28              		.loc 1 54 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  55:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (double_multiplier == 0.) {
  33              		.loc 1 55 0
  34 0000 400BB5EE 		vcmp.f64	d0, #0
  35 0004 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
  36 0008 0300001A 		bne	.L2
  56:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *quantized_multiplier = 0;
  37              		.loc 1 56 0
  38 000c 0030A0E3 		mov	r3, #0
  39 0010 003080E5 		str	r3, [r0]
  57:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
  40              		.loc 1 57 0
  41 0014 003081E5 		str	r3, [r1]
  58:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return;
  42              		.loc 1 58 0
  43 0018 1EFF2FE1 		bx	lr
  44              	.L2:
  54:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (double_multiplier == 0.) {
  45              		.loc 1 54 0
  46 001c 70402DE9 		push	{r4, r5, r6, lr}
  47              		.save {r4, r5, r6, lr}
  48              		.cfi_def_cfa_offset 16
  49              		.cfi_offset 4, -16
  50              		.cfi_offset 5, -12
  51              		.cfi_offset 6, -8
  52              		.cfi_offset 14, -4
  53 0020 0040A0E1 		mov	r4, r0
  54              	.LVL1:
  55              	.LBB43:
  56              	.LBB44:
  59:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
  60:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #ifdef TFLITE_EMULATE_FLOAT
  61:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // If we're trying to avoid the use of floating-point instructions (for
  62:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // example on microcontrollers) then use an alternative implementation
  63:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // that only requires integer and bitwise operations. To enable this, you
  64:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // need to set the define during the build process for your platform.
  65:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int64_t q_fixed = IntegerFrExp(double_multiplier, shift);
  66:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #else   // TFLITE_EMULATE_FLOAT
  67:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const double q = std::frexp(double_multiplier, shift);
  57              		.loc 1 67 0
  58 0024 0100A0E1 		mov	r0, r1
  59              	.LVL2:
  60 0028 0150A0E1 		mov	r5, r1
  61 002c FEFFFFEB 		bl	frexp
  62              	.LVL3:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   auto q_fixed = static_cast<int64_t>(TfLiteRound(q * (1ll << 31)));
  63              		.loc 1 68 0
  64 0030 160BDFED 		vldr.64	d16, .L14
  65              	.LBB45:
  66              	.LBB46:
  67              		.file 2 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/t
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_CPPMATH_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_CPPMATH_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #include <cmath>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** namespace tflite {
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #if defined(TF_LITE_USE_GLOBAL_CMATH_FUNCTIONS) ||                           \
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****     (defined(__ANDROID__) && !defined(__NDK_MAJOR__)) || defined(ARDUINO) || \
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****     defined(__ZEPHYR__)
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #define TF_LITE_GLOBAL_STD_PREFIX
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #else
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #define TF_LITE_GLOBAL_STD_PREFIX std
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #endif
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** #define DECLARE_STD_GLOBAL_SWITCH1(tf_name, std_name) \
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****   template <class T>                                  \
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****   inline T tf_name(const T x) {                       \
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****     return TF_LITE_GLOBAL_STD_PREFIX::std_name(x);    \
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h ****   }
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** 
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_RDK/src/tensorflow_lite/src/tensorflow/lite/kernels/internal\cppmath.h **** DECLARE_STD_GLOBAL_SWITCH1(TfLiteRound, round);
  68              		.loc 2 36 0
  69 0034 200B20EE 		vmul.f64	d0, d0, d16
  70              	.LVL4:
  71 0038 FEFFFFEB 		bl	round
  72              	.LVL5:
  73              	.LBE46:
  74              	.LBE45:
  75              		.loc 1 68 0
  76 003c 100B51EC 		vmov	r0, r1, d0
  77 0040 FEFFFFEB 		bl	__aeabi_d2lz
  78              	.LVL6:
  69:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
  70:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK(q_fixed <= (1ll << 31));
  79              		.loc 1 70 0
  80 0044 0221A0E3 		mov	r2, #-2147483648
  81 0048 0030A0E3 		mov	r3, #0
  82 004c 000052E1 		cmp	r2, r0
  83 0050 01C0D3E0 		sbcs	ip, r3, r1
  84 0054 0B0000BA 		blt	.L13
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (q_fixed == (1ll << 31)) {
  85              		.loc 1 71 0
  86 0058 030051E1 		cmp	r1, r3
  72:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     ++*shift;
  87              		.loc 1 73 0
  88 005c 003095E5 		ldr	r3, [r5]
  89              	.LVL7:
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (q_fixed == (1ll << 31)) {
  90              		.loc 1 71 0
  91 0060 02005001 		cmpeq	r0, r2
  72:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
  92              		.loc 1 72 0
  93 0064 0101A003 		moveq	r0, #1073741824
  94              		.loc 1 73 0
  95 0068 01308302 		addeq	r3, r3, #1
  96 006c 00308505 		streq	r3, [r5]
  97              	.LVL8:
  74:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
  75:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK_LE(q_fixed, std::numeric_limits<int32_t>::max());
  76:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // A shift amount smaller than -31 would cause all bits to be shifted out
  77:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // and thus all results would be zero. We implement that instead with
  78:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // q_fixed==0, so as to avoid hitting issues with right-shift
  79:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // operations with shift amounts greater than 31. Note that this happens
  80:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // roughly when abs(double_multiplier) < 2^-31 and the present handling means
  81:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // that we're effectively flushing tiny double_multiplier's to zero.
  82:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // We could conceivably handle values in the range (roughly) [32, 63]
  83:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // as 'denormals' i.e. (shift==0, q_fixed < 2^30). In that point of view
  84:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // the present handling is just doing 'flush denormals to zero'. We could
  85:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // reconsider and actually generate nonzero denormals if a need arises.
  86:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (*shift < -31) {
  98              		.loc 1 86 0
  99 0070 1F0073E3 		cmn	r3, #31
  87:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 100              		.loc 1 87 0
 101 0074 0030A0B3 		movlt	r3, #0
 102 0078 0300A0B1 		movlt	r0, r3
 103 007c 003085B5 		strlt	r3, [r5]
 104              	.LVL9:
  88:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed = 0;
  89:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *quantized_multiplier = static_cast<int32_t>(q_fixed);
 105              		.loc 1 90 0
 106 0080 000084E5 		str	r0, [r4]
 107 0084 7080BDE8 		pop	{r4, r5, r6, pc}
 108              	.LVL10:
 109              	.L13:
  70:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (q_fixed == (1ll << 31)) {
 110              		.loc 1 70 0
 111 0088 FEFFFFEB 		bl	abort
 112              	.LVL11:
 113              	.L15:
 114 008c 00F020E3 		.align	3
 115              	.L14:
 116 0090 00000000 		.word	0
 117 0094 0000E041 		.word	1105199104
 118              	.LBE44:
 119              	.LBE43:
 120              		.cfi_endproc
 121              	.LFE1118:
 122              		.fnend
 124              		.section	.text._ZN6tflite32QuantizeMultiplierGreaterThanOneEdPlPi,"ax",%progbits
 125              		.align	2
 126              		.global	_ZN6tflite32QuantizeMultiplierGreaterThanOneEdPlPi
 127              		.syntax unified
 128              		.arm
 129              		.fpu neon
 131              	_ZN6tflite32QuantizeMultiplierGreaterThanOneEdPlPi:
 132              		.fnstart
 133              	.LFB1119:
  91:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
  92:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
  93:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** void QuantizeMultiplierGreaterThanOne(double double_multiplier,
  94:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                       int32_t* quantized_multiplier,
  95:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                       int* left_shift) {
 134              		.loc 1 95 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              	.LVL12:
  96:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK_GT(double_multiplier, 1.);
 139              		.loc 1 96 0
 140 0000 001BF7EE 		vmov.f64	d17, #1.0e+0
 141 0004 E10BB4EE 		vcmpe.f64	d0, d17
 142 0008 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
  95:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK_GT(double_multiplier, 1.);
 143              		.loc 1 95 0
 144 000c 70402DE9 		push	{r4, r5, r6, lr}
 145              		.save {r4, r5, r6, lr}
 146              		.cfi_def_cfa_offset 16
 147              		.cfi_offset 4, -16
 148              		.cfi_offset 5, -12
 149              		.cfi_offset 6, -8
 150              		.cfi_offset 14, -4
 151              		.loc 1 96 0
 152 0010 230000DA 		ble	.L20
 153 0014 0050A0E1 		mov	r5, r0
 154 0018 0140A0E1 		mov	r4, r1
 155              	.LVL13:
 156              	.LBB55:
 157              	.LBB56:
  55:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *quantized_multiplier = 0;
 158              		.loc 1 55 0
 159 001c 400BB5EE 		vcmp.f64	d0, #0
 160 0020 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 161 0024 0300001A 		bne	.L18
  56:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 162              		.loc 1 56 0
 163 0028 0030A0E3 		mov	r3, #0
 164 002c 003080E5 		str	r3, [r0]
  57:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return;
 165              		.loc 1 57 0
 166 0030 003081E5 		str	r3, [r1]
 167              	.LVL14:
 168 0034 7080BDE8 		pop	{r4, r5, r6, pc}
 169              	.LVL15:
 170              	.L18:
 171              	.LBB57:
 172              	.LBB58:
  67:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   auto q_fixed = static_cast<int64_t>(TfLiteRound(q * (1ll << 31)));
 173              		.loc 1 67 0
 174 0038 0100A0E1 		mov	r0, r1
 175              	.LVL16:
 176 003c FEFFFFEB 		bl	frexp
 177              	.LVL17:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 178              		.loc 1 68 0
 179 0040 180BDFED 		vldr.64	d16, .L26
 180              	.LBB59:
 181              	.LBB60:
 182              		.loc 2 36 0
 183 0044 200B20EE 		vmul.f64	d0, d0, d16
 184              	.LVL18:
 185 0048 FEFFFFEB 		bl	round
 186              	.LVL19:
 187              	.LBE60:
 188              	.LBE59:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 189              		.loc 1 68 0
 190 004c 100B51EC 		vmov	r0, r1, d0
 191 0050 FEFFFFEB 		bl	__aeabi_d2lz
 192              	.LVL20:
  70:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (q_fixed == (1ll << 31)) {
 193              		.loc 1 70 0
 194 0054 0221A0E3 		mov	r2, #-2147483648
 195 0058 0030A0E3 		mov	r3, #0
 196 005c 000052E1 		cmp	r2, r0
 197 0060 01C0D3E0 		sbcs	ip, r3, r1
 198 0064 0E0000BA 		blt	.L20
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
 199              		.loc 1 71 0
 200 0068 030051E1 		cmp	r1, r3
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 201              		.loc 1 73 0
 202 006c 003094E5 		ldr	r3, [r4]
 203              	.LVL21:
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
 204              		.loc 1 71 0
 205 0070 02005001 		cmpeq	r0, r2
  72:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     ++*shift;
 206              		.loc 1 72 0
 207 0074 0101A003 		moveq	r0, #1073741824
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 208              		.loc 1 73 0
 209 0078 01308302 		addeq	r3, r3, #1
 210 007c 00308405 		streq	r3, [r4]
 211              	.LVL22:
  86:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 212              		.loc 1 86 0
 213 0080 1F0073E3 		cmn	r3, #31
 214 0084 030000AA 		bge	.L25
  87:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed = 0;
 215              		.loc 1 87 0
 216 0088 0030A0E3 		mov	r3, #0
 217 008c 003084E5 		str	r3, [r4]
 218              	.LVL23:
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 219              		.loc 1 90 0
 220 0090 003085E5 		str	r3, [r5]
 221              	.LVL24:
 222 0094 7080BDE8 		pop	{r4, r5, r6, pc}
 223              	.LVL25:
 224              	.L25:
 225              	.LBE58:
 226              	.LBE57:
 227              	.LBE56:
 228              	.LBE55:
  97:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   QuantizeMultiplier(double_multiplier, quantized_multiplier, left_shift);
  98:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK_GE(*left_shift, 0);
 229              		.loc 1 98 0
 230 0098 000053E3 		cmp	r3, #0
 231              	.LBB64:
 232              	.LBB63:
 233              	.LBB62:
 234              	.LBB61:
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 235              		.loc 1 90 0
 236 009c 000085E5 		str	r0, [r5]
 237              	.LVL26:
 238              	.LBE61:
 239              	.LBE62:
 240              	.LBE63:
 241              	.LBE64:
 242              		.loc 1 98 0
 243 00a0 7080BDA8 		popge	{r4, r5, r6, pc}
 244              	.LVL27:
 245              	.L20:
  96:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   QuantizeMultiplier(double_multiplier, quantized_multiplier, left_shift);
 246              		.loc 1 96 0 discriminator 1
 247 00a4 FEFFFFEB 		bl	abort
 248              	.LVL28:
 249              	.L27:
 250              		.align	3
 251              	.L26:
 252 00a8 00000000 		.word	0
 253 00ac 0000E041 		.word	1105199104
 254              		.cfi_endproc
 255              	.LFE1119:
 256              		.fnend
 258              		.section	.text._ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPlPi,"ax",%progbits
 259              		.align	2
 260              		.global	_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPlPi
 261              		.syntax unified
 262              		.arm
 263              		.fpu neon
 265              	_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPlPi:
 266              		.fnstart
 267              	.LFB1120:
  99:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 100:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 101:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** void QuantizeMultiplierSmallerThanOneExp(double double_multiplier,
 102:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                          int32_t* quantized_multiplier,
 103:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                          int* left_shift) {
 268              		.loc 1 103 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 8
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              	.LVL29:
 104:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK_LT(double_multiplier, 1.);
 273              		.loc 1 104 0
 274 0000 001BF7EE 		vmov.f64	d17, #1.0e+0
 275 0004 E10BB4EE 		vcmpe.f64	d0, d17
 276 0008 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 103:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK_LT(double_multiplier, 1.);
 277              		.loc 1 103 0
 278 000c 30402DE9 		push	{r4, r5, lr}
 279              		.save {r4, r5, lr}
 280              		.cfi_def_cfa_offset 12
 281              		.cfi_offset 4, -12
 282              		.cfi_offset 5, -8
 283              		.cfi_offset 14, -4
 284              		.pad #12
 285 0010 0CD04DE2 		sub	sp, sp, #12
 286              		.cfi_def_cfa_offset 24
 287              		.loc 1 104 0
 288 0014 2400005A 		bpl	.L30
 105:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK_GT(double_multiplier, 0.);
 289              		.loc 1 105 0
 290 0018 C00BB5EE 		vcmpe.f64	d0, #0
 291 001c 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 292 0020 210000DA 		ble	.L30
 293 0024 0050A0E1 		mov	r5, r0
 294              	.LVL30:
 295              	.LBB73:
 296              	.LBB74:
 297              	.LBB75:
 298              	.LBB76:
  67:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   auto q_fixed = static_cast<int64_t>(TfLiteRound(q * (1ll << 31)));
 299              		.loc 1 67 0
 300 0028 04008DE2 		add	r0, sp, #4
 301              	.LVL31:
 302 002c 0140A0E1 		mov	r4, r1
 303 0030 FEFFFFEB 		bl	frexp
 304              	.LVL32:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 305              		.loc 1 68 0
 306 0034 1D0BDFED 		vldr.64	d16, .L38
 307              	.LBB77:
 308              	.LBB78:
 309              		.loc 2 36 0
 310 0038 200B20EE 		vmul.f64	d0, d0, d16
 311              	.LVL33:
 312 003c FEFFFFEB 		bl	round
 313              	.LVL34:
 314              	.LBE78:
 315              	.LBE77:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 316              		.loc 1 68 0
 317 0040 100B51EC 		vmov	r0, r1, d0
 318 0044 FEFFFFEB 		bl	__aeabi_d2lz
 319              	.LVL35:
  70:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (q_fixed == (1ll << 31)) {
 320              		.loc 1 70 0
 321 0048 0221A0E3 		mov	r2, #-2147483648
 322 004c 0030A0E3 		mov	r3, #0
 323 0050 000052E1 		cmp	r2, r0
 324 0054 01C0D3E0 		sbcs	ip, r3, r1
 325 0058 130000BA 		blt	.L30
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
 326              		.loc 1 71 0
 327 005c 030051E1 		cmp	r1, r3
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 328              		.loc 1 73 0
 329 0060 04309DE5 		ldr	r3, [sp, #4]
 330              	.LVL36:
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
 331              		.loc 1 71 0
 332 0064 02005001 		cmpeq	r0, r2
  72:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     ++*shift;
 333              		.loc 1 72 0
 334 0068 0101A003 		moveq	r0, #1073741824
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 335              		.loc 1 73 0
 336 006c 01308302 		addeq	r3, r3, #1
 337 0070 04308D05 		streq	r3, [sp, #4]
 338              	.LVL37:
  86:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 339              		.loc 1 86 0
 340 0074 1F0073E3 		cmn	r3, #31
 341 0078 050000BA 		blt	.L34
 342              	.LBE76:
 343              	.LBE75:
 344              	.LBE74:
 345              	.LBE73:
 106:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int shift;
 107:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   QuantizeMultiplier(double_multiplier, quantized_multiplier, &shift);
 108:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK_LE(shift, 0);
 346              		.loc 1 108 0
 347 007c 000053E3 		cmp	r3, #0
 348              	.LBB85:
 349              	.LBB83:
 350              	.LBB81:
 351              	.LBB79:
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 352              		.loc 1 90 0
 353 0080 000085E5 		str	r0, [r5]
 354              	.LVL38:
 355              	.LBE79:
 356              	.LBE81:
 357              	.LBE83:
 358              	.LBE85:
 359              		.loc 1 108 0
 360 0084 080000CA 		bgt	.L30
 109:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *left_shift = shift;
 361              		.loc 1 109 0
 362 0088 003084E5 		str	r3, [r4]
 110:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 363              		.loc 1 110 0
 364 008c 0CD08DE2 		add	sp, sp, #12
 365              		.cfi_remember_state
 366              		.cfi_def_cfa_offset 12
 367              		@ sp needed
 368 0090 3080BDE8 		pop	{r4, r5, pc}
 369              	.LVL39:
 370              	.L34:
 371              		.cfi_restore_state
 372              	.LBB86:
 373              	.LBB84:
 374              	.LBB82:
 375              	.LBB80:
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 376              		.loc 1 90 0
 377 0094 0020A0E3 		mov	r2, #0
 378 0098 0230A0E1 		mov	r3, r2
 379 009c 002085E5 		str	r2, [r5]
 380              	.LVL40:
 381              	.LBE80:
 382              	.LBE82:
 383              	.LBE84:
 384              	.LBE86:
 109:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *left_shift = shift;
 385              		.loc 1 109 0
 386 00a0 003084E5 		str	r3, [r4]
 387              		.loc 1 110 0
 388 00a4 0CD08DE2 		add	sp, sp, #12
 389              		.cfi_remember_state
 390              		.cfi_def_cfa_offset 12
 391              		@ sp needed
 392 00a8 3080BDE8 		pop	{r4, r5, pc}
 393              	.LVL41:
 394              	.L30:
 395              		.cfi_restore_state
 104:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK_GT(double_multiplier, 0.);
 396              		.loc 1 104 0 discriminator 1
 397 00ac FEFFFFEB 		bl	abort
 398              	.LVL42:
 399              	.L39:
 400              		.align	3
 401              	.L38:
 402 00b0 00000000 		.word	0
 403 00b4 0000E041 		.word	1105199104
 404              		.cfi_endproc
 405              	.LFE1120:
 406              		.fnend
 408              		.section	.text._ZN6tflite12IntegerFrExpEdPi,"ax",%progbits
 409              		.align	2
 410              		.global	_ZN6tflite12IntegerFrExpEdPi
 411              		.syntax unified
 412              		.arm
 413              		.fpu neon
 415              	_ZN6tflite12IntegerFrExpEdPi:
 416              		.fnstart
 417              	.LFB1121:
 111:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 112:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** int64_t IntegerFrExp(double input, int* shift) {
 418              		.loc 1 112 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              	.LVL43:
 423 0000 102B53EC 		vmov	r2, r3, d0
 424 0004 00C0A0E1 		mov	ip, r0
 113:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // Make sure our assumptions about the double layout hold.
 114:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK_EQ(8, sizeof(double));
 115:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 116:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // We want to access the bits of the input double value directly, which is
 117:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // tricky to do safely, so use a union to handle the casting.
 118:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   union {
 119:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     double double_value;
 120:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     uint64_t double_as_uint;
 121:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } cast_union;
 122:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   cast_union.double_value = input;
 123:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const uint64_t u = cast_union.double_as_uint;
 124:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 125:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // If the bitfield is all zeros apart from the sign bit, this is a normalized
 126:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // zero value, so return standard values for this special case.
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if ((u & ~kSignMask) == 0) {
 425              		.loc 1 127 0
 426 0008 0211C3E3 		bic	r1, r3, #-2147483648
 427 000c 100A10EE 		vmov	r0, s0	@ int
 428              	.LVL44:
 112:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // Make sure our assumptions about the double layout hold.
 429              		.loc 1 112 0
 430 0010 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 431              		.cfi_def_cfa_offset 28
 432              		.cfi_offset 4, -28
 433              		.cfi_offset 5, -24
 434              		.cfi_offset 6, -20
 435              		.cfi_offset 7, -16
 436              		.cfi_offset 8, -12
 437              		.cfi_offset 9, -8
 438              		.cfi_offset 14, -4
 439              		.loc 1 127 0
 440 0014 01E090E1 		orrs	lr, r0, r1
 441 0018 1E00000A 		beq	.L48
 128:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 129:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 0;
 130:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 131:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 132:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // Deal with NaNs and Infs, which are always indicated with a fixed pattern in
 133:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // the exponent, and distinguished by whether the fractions are zero or
 134:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // non-zero.
 135:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const uint32_t exponent_part = ((u & kExponentMask) >> kExponentShift);
 442              		.loc 1 135 0
 443 001c FF0700E3 		movw	r0, #2047
 444 0020 531AEAE7 		ubfx	r1, r3, #20, #11
 445              	.LVL45:
 136:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (exponent_part == kExponentIsBadNum) {
 446              		.loc 1 136 0
 447 0024 000051E1 		cmp	r1, r0
 448 0028 104A10EE 		vmov	r4, s0	@ int
 449 002c 0350A0E1 		mov	r5, r3
 450 0030 1B00000A 		beq	.L49
 137:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = std::numeric_limits<int>::max();
 138:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     if (u & kFractionMask) {
 139:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       // NaN, so just return zero (with the exponent set to INT_MAX).
 140:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       return 0;
 141:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     } else {
 142:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       // Infinity, so return +/- INT_MAX.
 143:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       if (u & kSignMask) {
 144:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****         return std::numeric_limits<int64_t>::min();
 145:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       } else {
 146:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****         return std::numeric_limits<int64_t>::max();
 147:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       }
 148:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     }
 149:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 150:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 151:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // The shift is fairly easy to extract from the high bits of the double value,
 152:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // just by masking it out and applying a bias. The std::frexp() implementation
 153:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // always returns values between 0.5 and 1.0 though, whereas the exponent
 154:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // assumes 1.0 to 2.0 is the standard range, so I add on one to match that
 155:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // interface.
 156:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *shift = (exponent_part - kExponentBias) + 1;
 157:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 158:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // There's an implicit high bit in the double format definition, so make sure
 159:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // we include that at the top, and then reconstruct the rest of the fractional
 160:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // value from the remaining fragments.
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int64_t fraction = 0x40000000 + ((u & kFractionMask) >> kFractionShift);
 451              		.loc 1 161 0
 452 0034 226BA0E1 		lsr	r6, r2, #22
 162:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 163:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // We're cutting off some bits at the bottom, so to exactly match the standard
 164:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // frexp implementation here we'll apply rounding by adding one to the least
 165:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // significant bit of the result if the discarded portion is over half of the
 166:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // maximum.
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if ((u & kFractionRoundingMask) > kFractionRoundingThreshold) {
 453              		.loc 1 167 0
 454 0038 FF8F0FE3 		movw	r8, #65535
 455 003c 0090A0E3 		mov	r9, #0
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 456              		.loc 1 161 0
 457 0040 036586E1 		orr	r6, r6, r3, lsl #10
 458              		.loc 1 167 0
 459 0044 039009E0 		and	r9, r9, r3
 460 0048 3F8040E3 		movt	r8, 63
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 461              		.loc 1 161 0
 462 004c 0361C6E3 		bic	r6, r6, #-1073741824
 463 0050 0070A0E3 		mov	r7, #0
 464 0054 010196E2 		adds	r0, r6, #1073741824
 156:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 465              		.loc 1 156 0
 466 0058 FF3F41E2 		sub	r3, r1, #1020
 467              		.loc 1 167 0
 468 005c 028008E0 		and	r8, r8, r2
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 469              		.loc 1 161 0
 470 0060 0010A7E2 		adc	r1, r7, #0
 471              	.LVL46:
 472              		.loc 1 167 0
 473 0064 000059E3 		cmp	r9, #0
 156:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 474              		.loc 1 156 0
 475 0068 023043E2 		sub	r3, r3, #2
 476              	.LVL47:
 477              		.loc 1 167 0
 478 006c 02065803 		cmpeq	r8, #2097152
 156:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 479              		.loc 1 156 0
 480 0070 00308CE5 		str	r3, [ip]
 481              		.loc 1 167 0
 482 0074 0100009A 		bls	.L44
 168:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 483              		.loc 1 168 0
 484 0078 050196E2 		adds	r0, r6, #1073741825
 485              	.LVL48:
 486 007c 0010A7E2 		adc	r1, r7, #0
 487              	.LVL49:
 488              	.L44:
 169:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 170:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // Negate the fraction if the sign bit was set.
 171:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (u & kSignMask) {
 489              		.loc 1 171 0
 490 0080 000054E3 		cmp	r4, #0
 491 0084 0030D5E2 		sbcs	r3, r5, #0
 492              	.LVL50:
 493 0088 F083BDA8 		popge	{r4, r5, r6, r7, r8, r9, pc}
 172:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction *= -1;
 494              		.loc 1 172 0
 495 008c 000070E2 		rsbs	r0, r0, #0
 496              	.LVL51:
 497 0090 0010E1E2 		rsc	r1, r1, #0
 498              	.LVL52:
 499 0094 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 500              	.LVL53:
 501              	.L48:
 128:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 0;
 502              		.loc 1 128 0
 503 0098 0030A0E3 		mov	r3, #0
 504 009c 00308CE5 		str	r3, [ip]
 129:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 505              		.loc 1 129 0
 506 00a0 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 507              	.LVL54:
 508              	.L49:
 138:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       // NaN, so just return zero (with the exponent set to INT_MAX).
 509              		.loc 1 138 0
 510 00a4 4C108FE2 		adr	r1, .L50
 511 00a8 D000C1E1 		ldrd	r0, [r1]
 137:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     if (u & kFractionMask) {
 512              		.loc 1 137 0
 513 00ac 02E1E0E3 		mvn	lr, #-2147483648
 514 00b0 00E08CE5 		str	lr, [ip]
 138:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       // NaN, so just return zero (with the exponent set to INT_MAX).
 515              		.loc 1 138 0
 516 00b4 002002E0 		and	r2, r2, r0
 517 00b8 013003E0 		and	r3, r3, r1
 518 00bc 033092E1 		orrs	r3, r2, r3
 519 00c0 0500001A 		bne	.L45
 143:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****         return std::numeric_limits<int64_t>::min();
 520              		.loc 1 143 0
 521 00c4 000054E3 		cmp	r4, #0
 522 00c8 0030D5E2 		sbcs	r3, r5, #0
 523 00cc 050000BA 		blt	.L46
 146:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       }
 524              		.loc 1 146 0
 525 00d0 0000E0E3 		mvn	r0, #0
 526 00d4 0211E0E3 		mvn	r1, #-2147483648
 527              	.LVL55:
 528 00d8 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 529              	.LVL56:
 530              	.L45:
 140:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     } else {
 531              		.loc 1 140 0
 532 00dc 0000A0E3 		mov	r0, #0
 533 00e0 0010A0E3 		mov	r1, #0
 534              	.LVL57:
 535 00e4 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 536              	.LVL58:
 537              	.L46:
 144:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       } else {
 538              		.loc 1 144 0
 539 00e8 0000A0E3 		mov	r0, #0
 540 00ec 0211A0E3 		mov	r1, #-2147483648
 541              	.LVL59:
 173:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 174:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 175:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   return fraction;
 176:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 542              		.loc 1 176 0
 543 00f0 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 544              	.L51:
 545 00f4 00F020E3 		.align	3
 546              	.L50:
 547 00f8 0000C0FF 		.word	-4194304
 548 00fc FFFF0F00 		.word	1048575
 549              		.cfi_endproc
 550              	.LFE1121:
 551              		.cantunwind
 552              		.fnend
 554              		.section	.text._ZN6tflite26DoubleFromFractionAndShiftExi,"ax",%progbits
 555              		.align	2
 556              		.global	_ZN6tflite26DoubleFromFractionAndShiftExi
 557              		.syntax unified
 558              		.arm
 559              		.fpu neon
 561              	_ZN6tflite26DoubleFromFractionAndShiftExi:
 562              		.fnstart
 563              	.LFB1122:
 177:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 178:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** double DoubleFromFractionAndShift(int64_t fraction, int shift) {
 564              		.loc 1 178 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569              	.LVL60:
 179:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   union {
 180:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     double double_value;
 181:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     uint64_t double_as_uint;
 182:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } result;
 183:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 184:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // Detect NaNs and infinities.
 185:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (shift == std::numeric_limits<int>::max()) {
 570              		.loc 1 185 0
 571 0000 060172E3 		cmn	r2, #-2147483647
 572 0004 3B00000A 		beq	.L73
 186:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     if (fraction == 0) {
 187:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       return std::numeric_limits<double>::quiet_NaN();
 188:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     } else if (fraction > 0) {
 189:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       return std::numeric_limits<double>::infinity();
 190:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     } else {
 191:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       return -std::numeric_limits<double>::infinity();
 192:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     }
 193:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 194:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 195:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // Return a normalized zero for a zero fraction.
 196:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (fraction == 0) {
 573              		.loc 1 196 0
 574 0008 013090E1 		orrs	r3, r0, r1
 575 000c 3700000A 		beq	.L65
 576              	.LVL61:
 178:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   union {
 577              		.loc 1 178 0
 578 0010 F0032DE9 		push	{r4, r5, r6, r7, r8, r9}
 579              		.cfi_def_cfa_offset 24
 580              		.cfi_offset 4, -24
 581              		.cfi_offset 5, -20
 582              		.cfi_offset 6, -16
 583              		.cfi_offset 7, -12
 584              		.cfi_offset 8, -8
 585              		.cfi_offset 9, -4
 586 0014 C18FA0E1 		asr	r8, r1, #31
 587 0018 C19FA0E1 		asr	r9, r1, #31
 588              	.LBB89:
 589              	.LBB90:
 197:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     result.double_as_uint = 0;
 198:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return result.double_value;
 199:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 200:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 201:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   bool is_negative = (fraction < 0);
 202:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int64_t encoded_fraction = is_negative ? -fraction : fraction;
 203:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int64_t encoded_shift = (shift - 1);
 204:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   while (encoded_fraction < 0x40000000) {
 590              		.loc 1 204 0
 591 001c 0361E0E3 		mvn	r6, #-1073741824
 592 0020 004028E0 		eor	r4, r8, r0
 593 0024 015029E0 		eor	r5, r9, r1
 594 0028 0070A0E3 		mov	r7, #0
 595 002c 084054E0 		subs	r4, r4, r8
 596 0030 0950C5E0 		sbc	r5, r5, r9
 597              	.LVL62:
 203:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   while (encoded_fraction < 0x40000000) {
 598              		.loc 1 203 0
 599 0034 012042E2 		sub	r2, r2, #1
 600              	.LVL63:
 601              		.loc 1 204 0
 602 0038 040056E1 		cmp	r6, r4
 203:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   while (encoded_fraction < 0x40000000) {
 603              		.loc 1 203 0
 604 003c C23FA0E1 		asr	r3, r2, #31
 605              	.LVL64:
 606              		.loc 1 204 0
 607 0040 05C0D7E0 		sbcs	ip, r7, r5
 608 0044 350000BA 		blt	.L74
 609              	.LVL65:
 610              	.L58:
 205:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_fraction *= 2;
 611              		.loc 1 205 0
 612 0048 044094E0 		adds	r4, r4, r4
 613              	.LVL66:
 614 004c 0550A5E0 		adc	r5, r5, r5
 615              	.LVL67:
 206:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_shift -= 1;
 616              		.loc 1 206 0
 617 0050 012052E2 		subs	r2, r2, #1
 618              	.LVL68:
 619 0054 0030C3E2 		sbc	r3, r3, #0
 620              	.LVL69:
 204:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_fraction *= 2;
 621              		.loc 1 204 0
 622 0058 040056E1 		cmp	r6, r4
 623 005c 05C0D7E0 		sbcs	ip, r7, r5
 624 0060 F8FFFFAA 		bge	.L58
 625              	.L56:
 207:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 208:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   while (encoded_fraction > 0x80000000) {
 209:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_fraction /= 2;
 210:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_shift += 1;
 211:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 212:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   encoded_fraction -= 0x40000000;
 626              		.loc 1 212 0
 627 0064 034194E2 		adds	r4, r4, #-1073741824
 628              	.LVL70:
 629 0068 FF6300E3 		movw	r6, #1023
 630 006c 0070A0E3 		mov	r7, #0
 631 0070 0050C5E2 		sbc	r5, r5, #0
 632              	.LVL71:
 633 0074 020056E1 		cmp	r6, r2
 213:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (encoded_shift < -1022) {
 214:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_shift = -1023;
 215:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } else if (encoded_shift > 1022) {
 216:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_shift = 1023;
 217:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 218:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   encoded_shift += kExponentBias;
 634              		.loc 1 218 0
 635 0078 360BDFED 		vldr.64	d16, .L75	@ int
 636 007c 03C0D7E0 		sbcs	ip, r7, r3
 637 0080 0620A0B1 		movlt	r2, r6
 638              	.LVL72:
 639 0084 016C0FE3 		movw	r6, #64513
 640 0088 FF6F4FE3 		movt	r6, 65535
 641 008c 0730A0B1 		movlt	r3, r7
 642 0090 060052E1 		cmp	r2, r6
 643 0094 0070E0E3 		mvn	r7, #0
 644 0098 07C0D3E0 		sbcs	ip, r3, r7
 645 009c 0620A0B1 		movlt	r2, r6
 646 00a0 0730A0B1 		movlt	r3, r7
 647              	.LVL73:
 648 00a4 312B43EC 		vmov	d17, r2, r3	@ int
 219:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   uint64_t encoded_sign = is_negative ? kSignMask : 0;
 649              		.loc 1 219 0
 650 00a8 0020A0E3 		mov	r2, #0
 651              	.LVL74:
 218:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   uint64_t encoded_sign = is_negative ? kSignMask : 0;
 652              		.loc 1 218 0
 653 00ac A00871F2 		vadd.i64	d16, d17, d16
 654              	.LVL75:
 655              		.loc 1 219 0
 656 00b0 000050E3 		cmp	r0, #0
 657 00b4 0030D1E2 		sbcs	r3, r1, #0
 220:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   result.double_as_uint = encoded_sign | (encoded_shift << kExponentShift) |
 221:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                           (encoded_fraction << kFractionShift);
 658              		.loc 1 221 0
 659 00b8 051BA0E1 		lsl	r1, r5, #22
 660 00bc 040BA0E1 		lsl	r0, r4, #22
 661              	.LVL76:
 219:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   result.double_as_uint = encoded_sign | (encoded_shift << kExponentShift) |
 662              		.loc 1 219 0
 663 00c0 0030A0A3 		movge	r3, #0
 220:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   result.double_as_uint = encoded_sign | (encoded_shift << kExponentShift) |
 664              		.loc 1 220 0
 665 00c4 B015F4F2 		vshl.u64	d17, d16, #52
 666              		.loc 1 221 0
 667 00c8 241581E1 		orr	r1, r1, r4, lsr #10
 219:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   result.double_as_uint = encoded_sign | (encoded_shift << kExponentShift) |
 668              		.loc 1 219 0
 669 00cc 0231A0B3 		movlt	r3, #-2147483648
 670              	.LVL77:
 220:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   result.double_as_uint = encoded_sign | (encoded_shift << kExponentShift) |
 671              		.loc 1 220 0
 672 00d0 314B55EC 		vmov	r4, r5, d17	@ int
 673              	.LVL78:
 674 00d4 004084E1 		orr	r4, r4, r0
 675 00d8 015085E1 		orr	r5, r5, r1
 676 00dc 020084E1 		orr	r0, r4, r2
 677 00e0 031085E1 		orr	r1, r5, r3
 678              	.LBE90:
 679              	.LBE89:
 222:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   return result.double_value;
 223:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 680              		.loc 1 223 0
 681 00e4 F003BDE8 		pop	{r4, r5, r6, r7, r8, r9}
 682              		.cfi_restore 9
 683              		.cfi_restore 8
 684              		.cfi_restore 7
 685              		.cfi_restore 6
 686              		.cfi_restore 5
 687              		.cfi_restore 4
 688              		.cfi_def_cfa_offset 0
 689              	.LBB93:
 690              	.LBB91:
 220:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                           (encoded_fraction << kFractionShift);
 691              		.loc 1 220 0
 692 00e8 100B41EC 		vmov	d0, r0, r1	@ int
 693              	.LVL79:
 694              	.LBE91:
 695              	.LBE93:
 696              		.loc 1 223 0
 697 00ec 1EFF2FE1 		bx	lr
 698              	.LVL80:
 699              	.L65:
 198:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 700              		.loc 1 198 0
 701 00f0 1A0B9FED 		vldr.64	d0, .L75+8
 702              	.LVL81:
 703 00f4 1EFF2FE1 		bx	lr
 704              	.L73:
 186:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       return std::numeric_limits<double>::quiet_NaN();
 705              		.loc 1 186 0
 706 00f8 013090E1 		orrs	r3, r0, r1
 707 00fc 0500000A 		beq	.L63
 191:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     }
 708              		.loc 1 191 0
 709 0100 180BDFED 		vldr.64	d16, .L75+16
 710 0104 010050E3 		cmp	r0, #1
 711 0108 180B9FED 		vldr.64	d0, .L75+24
 712 010c 0030D1E2 		sbcs	r3, r1, #0
 713 0110 600BB0BE 		vmovlt.f64	d0, d16
 714 0114 1EFF2FE1 		bx	lr
 715              	.L63:
 187:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     } else if (fraction > 0) {
 716              		.loc 1 187 0
 717 0118 160B9FED 		vldr.64	d0, .L75+32
 718 011c 1EFF2FE1 		bx	lr
 719              	.LVL82:
 720              	.L74:
 721              		.cfi_def_cfa_offset 24
 722              		.cfi_offset 4, -24
 723              		.cfi_offset 5, -20
 724              		.cfi_offset 6, -16
 725              		.cfi_offset 7, -12
 726              		.cfi_offset 8, -8
 727              		.cfi_offset 9, -4
 728              	.LBB94:
 729              	.LBB92:
 208:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_fraction /= 2;
 730              		.loc 1 208 0
 731 0120 0261A0E3 		mov	r6, #-2147483648
 732 0124 0070A0E3 		mov	r7, #0
 733 0128 040056E1 		cmp	r6, r4
 734 012c 05C0D7E0 		sbcs	ip, r7, r5
 735 0130 CBFFFFAA 		bge	.L56
 736              	.LVL83:
 737              	.L59:
 209:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_shift += 1;
 738              		.loc 1 209 0
 739 0134 C550B0E1 		movs	r5, r5, asr #1
 740 0138 6440A0E1 		mov	r4, r4, rrx
 741              	.LVL84:
 210:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 742              		.loc 1 210 0
 743 013c 012092E2 		adds	r2, r2, #1
 744              	.LVL85:
 745 0140 0030A3E2 		adc	r3, r3, #0
 746              	.LVL86:
 208:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_fraction /= 2;
 747              		.loc 1 208 0
 748 0144 040056E1 		cmp	r6, r4
 749 0148 05C0D7E0 		sbcs	ip, r7, r5
 750 014c F8FFFFBA 		blt	.L59
 751 0150 C3FFFFEA 		b	.L56
 752              	.L76:
 753 0154 00F020E3 		.align	3
 754              	.L75:
 755 0158 FF030000 		.word	1023
 756 015c 00000000 		.word	0
 757 0160 00000000 		.word	0
 758 0164 00000000 		.word	0
 759 0168 00000000 		.word	0
 760 016c 0000F0FF 		.word	-1048576
 761 0170 00000000 		.word	0
 762 0174 0000F07F 		.word	2146435072
 763 0178 00000000 		.word	0
 764 017c 0000F87F 		.word	2146959360
 765              	.LBE92:
 766              	.LBE94:
 767              		.cfi_endproc
 768              	.LFE1122:
 769              		.cantunwind
 770              		.fnend
 772              		.section	.text._ZN6tflite21IntegerDoubleMultiplyEdd,"ax",%progbits
 773              		.align	2
 774              		.global	_ZN6tflite21IntegerDoubleMultiplyEdd
 775              		.syntax unified
 776              		.arm
 777              		.fpu neon
 779              	_ZN6tflite21IntegerDoubleMultiplyEdd:
 780              		.fnstart
 781              	.LFB1123:
 224:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 225:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** double IntegerDoubleMultiply(double a, double b) {
 782              		.loc 1 225 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              	.LVL87:
 787 0000 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 788              		.cfi_def_cfa_offset 28
 789              		.cfi_offset 4, -28
 790              		.cfi_offset 5, -24
 791              		.cfi_offset 6, -20
 792              		.cfi_offset 7, -16
 793              		.cfi_offset 8, -12
 794              		.cfi_offset 9, -8
 795              		.cfi_offset 14, -4
 796              		.loc 1 225 0
 797 0004 104B55EC 		vmov	r4, r5, d0
 798              	.LVL88:
 799              	.LBB103:
 800              	.LBB104:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 801              		.loc 1 127 0
 802 0008 0211C5E3 		bic	r1, r5, #-2147483648
 803 000c 100A10EE 		vmov	r0, s0	@ int
 804 0010 013090E1 		orrs	r3, r0, r1
 805              	.LBE104:
 806              	.LBE103:
 807              		.loc 1 225 0
 808 0014 112B53EC 		vmov	r2, r3, d1
 809              	.LBB108:
 810              	.LBB105:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 811              		.loc 1 127 0
 812 0018 8100000A 		beq	.L78
 135:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (exponent_part == kExponentIsBadNum) {
 813              		.loc 1 135 0
 814 001c FF1700E3 		movw	r1, #2047
 815 0020 55CAEAE7 		ubfx	ip, r5, #20, #11
 816              	.LVL89:
 136:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = std::numeric_limits<int>::max();
 817              		.loc 1 136 0
 818 0024 01005CE1 		cmp	ip, r1
 819 0028 106A10EE 		vmov	r6, s0	@ int
 820 002c 0570A0E1 		mov	r7, r5
 821 0030 8200000A 		beq	.L109
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 822              		.loc 1 161 0
 823 0034 248BA0E1 		lsr	r8, r4, #22
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 824              		.loc 1 167 0
 825 0038 FF0F0FE3 		movw	r0, #65535
 826 003c 3F0040E3 		movt	r0, 63
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 827              		.loc 1 161 0
 828 0040 058588E1 		orr	r8, r8, r5, lsl #10
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 829              		.loc 1 167 0
 830 0044 0010A0E3 		mov	r1, #0
 831 0048 004004E0 		and	r4, r4, r0
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 832              		.loc 1 161 0
 833 004c 0381C8E3 		bic	r8, r8, #-1073741824
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 834              		.loc 1 167 0
 835 0050 015005E0 		and	r5, r5, r1
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 836              		.loc 1 161 0
 837 0054 010198E2 		adds	r0, r8, #1073741824
 838 0058 0090A0E3 		mov	r9, #0
 839 005c 0010A9E2 		adc	r1, r9, #0
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 840              		.loc 1 167 0
 841 0060 000055E3 		cmp	r5, #0
 842 0064 02065403 		cmpeq	r4, #2097152
 156:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 843              		.loc 1 156 0
 844 0068 FFCF4CE2 		sub	ip, ip, #1020
 845              	.LVL90:
 846 006c 02C04CE2 		sub	ip, ip, #2
 847              	.LVL91:
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 848              		.loc 1 167 0
 849 0070 0100009A 		bls	.L81
 168:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 850              		.loc 1 168 0
 851 0074 050198E2 		adds	r0, r8, #1073741825
 852              	.LVL92:
 853 0078 0010A9E2 		adc	r1, r9, #0
 854              	.LVL93:
 855              	.L81:
 171:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction *= -1;
 856              		.loc 1 171 0
 857 007c 000056E3 		cmp	r6, #0
 858 0080 00E0D7E2 		sbcs	lr, r7, #0
 859 0084 010000AA 		bge	.L82
 172:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 860              		.loc 1 172 0
 861 0088 000070E2 		rsbs	r0, r0, #0
 862              	.LVL94:
 863 008c 0010E1E2 		rsc	r1, r1, #0
 864              	.LVL95:
 865              	.L82:
 866              	.LBE105:
 867              	.LBE108:
 868              	.LBB109:
 869              	.LBB110:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 870              		.loc 1 127 0
 871 0090 0240A0E1 		mov	r4, r2
 872 0094 0251C3E3 		bic	r5, r3, #-2147483648
 873              	.LVL96:
 874 0098 05E094E1 		orrs	lr, r4, r5
 875 009c 1E00000A 		beq	.L97
 876              	.LVL97:
 877              	.L94:
 135:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (exponent_part == kExponentIsBadNum) {
 878              		.loc 1 135 0
 879 00a0 FF4700E3 		movw	r4, #2047
 880 00a4 53EAEAE7 		ubfx	lr, r3, #20, #11
 881              	.LVL98:
 136:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = std::numeric_limits<int>::max();
 882              		.loc 1 136 0
 883 00a8 04005EE1 		cmp	lr, r4
 884 00ac 1800000A 		beq	.L105
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 885              		.loc 1 161 0
 886 00b0 228BA0E1 		lsr	r8, r2, #22
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 887              		.loc 1 167 0
 888 00b4 FF6F0FE3 		movw	r6, #65535
 889 00b8 0070A0E3 		mov	r7, #0
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 890              		.loc 1 161 0
 891 00bc 038588E1 		orr	r8, r8, r3, lsl #10
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 892              		.loc 1 167 0
 893 00c0 3F6040E3 		movt	r6, 63
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 894              		.loc 1 161 0
 895 00c4 0090A0E3 		mov	r9, #0
 896 00c8 0381C8E3 		bic	r8, r8, #-1073741824
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 897              		.loc 1 167 0
 898 00cc 037007E0 		and	r7, r7, r3
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 899              		.loc 1 161 0
 900 00d0 014198E2 		adds	r4, r8, #1073741824
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 901              		.loc 1 167 0
 902 00d4 026006E0 		and	r6, r6, r2
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 903              		.loc 1 161 0
 904 00d8 0050A9E2 		adc	r5, r9, #0
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 905              		.loc 1 167 0
 906 00dc 000057E3 		cmp	r7, #0
 907 00e0 02065603 		cmpeq	r6, #2097152
 156:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 908              		.loc 1 156 0
 909 00e4 FFEF4EE2 		sub	lr, lr, #1020
 910              	.LVL99:
 911 00e8 02E04EE2 		sub	lr, lr, #2
 912              	.LVL100:
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 913              		.loc 1 167 0
 914 00ec 0100009A 		bls	.L85
 168:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 915              		.loc 1 168 0
 916 00f0 054198E2 		adds	r4, r8, #1073741825
 917              	.LVL101:
 918 00f4 0050A9E2 		adc	r5, r9, #0
 919              	.LVL102:
 920              	.L85:
 171:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction *= -1;
 921              		.loc 1 171 0
 922 00f8 000052E3 		cmp	r2, #0
 923 00fc 0030D3E2 		sbcs	r3, r3, #0
 924 0100 010000AA 		bge	.L86
 172:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 925              		.loc 1 172 0
 926 0104 004074E2 		rsbs	r4, r4, #0
 927              	.LVL103:
 928 0108 0050E5E2 		rsc	r5, r5, #0
 929              	.LVL104:
 930              	.L86:
 931              	.LBE110:
 932              	.LBE109:
 226:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int a_shift;
 227:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const int64_t a_fraction = IntegerFrExp(a, &a_shift);
 228:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int b_shift;
 229:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const int64_t b_fraction = IntegerFrExp(b, &b_shift);
 230:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // Detect NaNs and infinities.
 231:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (a_shift == std::numeric_limits<int>::max() ||
 933              		.loc 1 231 0
 934 010c 06017CE3 		cmn	ip, #-2147483647
 935 0110 0200001A 		bne	.L83
 936              	.LVL105:
 937              	.L105:
 938              	.LBB115:
 939              	.LBB116:
 187:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     } else if (fraction > 0) {
 940              		.loc 1 187 0
 941 0114 650B9FED 		vldr.64	d0, .L111
 942              	.LVL106:
 943 0118 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 944              	.LVL107:
 945              	.L97:
 946              	.LBE116:
 947              	.LBE115:
 948              	.LBB122:
 949              	.LBB111:
 128:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 0;
 950              		.loc 1 128 0
 951 011c 00E0A0E3 		mov	lr, #0
 952              	.LVL108:
 953              	.L83:
 954 0120 940101E0 		mul	r1, r4, r1
 955 0124 0CE08EE0 		add	lr, lr, ip
 956              	.LVL109:
 957              	.LBE111:
 958              	.LBE122:
 959              	.LBB123:
 960              	.LBB119:
 185:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     if (fraction == 0) {
 961              		.loc 1 185 0
 962 0128 0A017EE3 		cmn	lr, #-2147483646
 963 012c 942083E0 		umull	r2, r3, r4, r0
 964              	.LVL110:
 965 0130 901520E0 		mla	r0, r0, r5, r1
 966 0134 033080E0 		add	r3, r0, r3
 967 0138 0340A0E1 		mov	r4, r3
 968 013c C35FA0E1 		asr	r5, r3, #31
 969              	.LVL111:
 970 0140 5200000A 		beq	.L110
 196:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     result.double_as_uint = 0;
 971              		.loc 1 196 0
 972 0144 051094E1 		orrs	r1, r4, r5
 973 0148 3A00000A 		beq	.L104
 974              	.LVL112:
 975 014c C32FA0E1 		asr	r2, r3, #31
 976 0150 C33FA0E1 		asr	r3, r3, #31
 977 0154 040022E0 		eor	r0, r2, r4
 978 0158 051023E0 		eor	r1, r3, r5
 979 015c 020050E0 		subs	r0, r0, r2
 980 0160 0310C1E0 		sbc	r1, r1, r3
 981              	.LVL113:
 982              	.LBB117:
 983              	.LBB118:
 204:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_fraction *= 2;
 984              		.loc 1 204 0
 985 0164 0361E0E3 		mvn	r6, #-1073741824
 986 0168 0070A0E3 		mov	r7, #0
 987 016c 000056E1 		cmp	r6, r0
 988 0170 01C0D7E0 		sbcs	ip, r7, r1
 203:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   while (encoded_fraction < 0x40000000) {
 989              		.loc 1 203 0
 990 0174 0E20A0E1 		mov	r2, lr
 991 0178 CE3FA0E1 		asr	r3, lr, #31
 992              	.LVL114:
 204:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_fraction *= 2;
 993              		.loc 1 204 0
 994 017c 060000BA 		blt	.L87
 995              	.L88:
 205:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_shift -= 1;
 996              		.loc 1 205 0
 997 0180 000090E0 		adds	r0, r0, r0
 998              	.LVL115:
 999 0184 0110A1E0 		adc	r1, r1, r1
 1000              	.LVL116:
 206:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1001              		.loc 1 206 0
 1002 0188 012052E2 		subs	r2, r2, #1
 1003              	.LVL117:
 1004 018c 0030C3E2 		sbc	r3, r3, #0
 1005              	.LVL118:
 204:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     encoded_fraction *= 2;
 1006              		.loc 1 204 0
 1007 0190 000056E1 		cmp	r6, r0
 1008 0194 01C0D7E0 		sbcs	ip, r7, r1
 1009 0198 F8FFFFAA 		bge	.L88
 1010              	.L87:
 1011 019c FF6300E3 		movw	r6, #1023
 212:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (encoded_shift < -1022) {
 1012              		.loc 1 212 0
 1013 01a0 030190E2 		adds	r0, r0, #-1073741824
 1014              	.LVL119:
 1015 01a4 0070A0E3 		mov	r7, #0
 1016 01a8 0010C1E2 		sbc	r1, r1, #0
 1017              	.LVL120:
 1018 01ac 020056E1 		cmp	r6, r2
 218:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   uint64_t encoded_sign = is_negative ? kSignMask : 0;
 1019              		.loc 1 218 0
 1020 01b0 400BDFED 		vldr.64	d16, .L111+8	@ int
 1021 01b4 03C0D7E0 		sbcs	ip, r7, r3
 1022 01b8 0620A0B1 		movlt	r2, r6
 1023              	.LVL121:
 1024 01bc 016C0FE3 		movw	r6, #64513
 1025 01c0 FF6F4FE3 		movt	r6, 65535
 1026 01c4 0730A0B1 		movlt	r3, r7
 1027 01c8 060052E1 		cmp	r2, r6
 1028 01cc 0070E0E3 		mvn	r7, #0
 1029 01d0 07C0D3E0 		sbcs	ip, r3, r7
 1030 01d4 0620A0B1 		movlt	r2, r6
 1031 01d8 0730A0B1 		movlt	r3, r7
 1032              	.LVL122:
 1033 01dc 312B43EC 		vmov	d17, r2, r3	@ int
 219:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   result.double_as_uint = encoded_sign | (encoded_shift << kExponentShift) |
 1034              		.loc 1 219 0
 1035 01e0 0020A0E3 		mov	r2, #0
 1036              	.LVL123:
 218:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   uint64_t encoded_sign = is_negative ? kSignMask : 0;
 1037              		.loc 1 218 0
 1038 01e4 A00871F2 		vadd.i64	d16, d17, d16
 1039              	.LVL124:
 219:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   result.double_as_uint = encoded_sign | (encoded_shift << kExponentShift) |
 1040              		.loc 1 219 0
 1041 01e8 000054E3 		cmp	r4, #0
 1042 01ec 0030D5E2 		sbcs	r3, r5, #0
 1043 01f0 0231A0B3 		movlt	r3, #-2147483648
 1044 01f4 0030A0A3 		movge	r3, #0
 1045              	.L93:
 1046              	.LVL125:
 221:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   return result.double_value;
 1047              		.loc 1 221 0
 1048 01f8 015BA0E1 		lsl	r5, r1, #22
 220:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                           (encoded_fraction << kFractionShift);
 1049              		.loc 1 220 0
 1050 01fc B015F4F2 		vshl.u64	d17, d16, #52
 221:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   return result.double_value;
 1051              		.loc 1 221 0
 1052 0200 004BA0E1 		lsl	r4, r0, #22
 1053 0204 205585E1 		orr	r5, r5, r0, lsr #10
 220:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                           (encoded_fraction << kFractionShift);
 1054              		.loc 1 220 0
 1055 0208 310B51EC 		vmov	r0, r1, d17	@ int
 1056              	.LVL126:
 1057 020c 040080E1 		orr	r0, r0, r4
 1058 0210 051081E1 		orr	r1, r1, r5
 1059 0214 024080E1 		orr	r4, r0, r2
 1060 0218 035081E1 		orr	r5, r1, r3
 1061 021c 104B45EC 		vmov	d0, r4, r5	@ int
 1062              	.LVL127:
 1063 0220 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1064              	.LVL128:
 1065              	.L78:
 1066              	.LBE118:
 1067              	.LBE117:
 1068              	.LBE119:
 1069              	.LBE123:
 1070              	.LBB124:
 1071              	.LBB112:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1072              		.loc 1 127 0
 1073 0224 104A11EE 		vmov	r4, s2	@ int
 1074              	.LVL129:
 1075 0228 0251C3E3 		bic	r5, r3, #-2147483648
 1076              	.LVL130:
 1077 022c 05C094E1 		orrs	ip, r4, r5
 1078              	.LBE112:
 1079              	.LBE124:
 1080              	.LBB125:
 1081              	.LBB106:
 128:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 0;
 1082              		.loc 1 128 0
 1083 0230 00C0A013 		movne	ip, #0
 1084              	.LBE106:
 1085              	.LBE125:
 1086              	.LBB126:
 1087              	.LBB113:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1088              		.loc 1 127 0
 1089 0234 99FFFF1A 		bne	.L94
 1090              	.LVL131:
 1091              	.L104:
 1092              	.LBE113:
 1093              	.LBE126:
 1094              	.LBB127:
 1095              	.LBB120:
 198:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1096              		.loc 1 198 0
 1097 0238 200B9FED 		vldr.64	d0, .L111+16
 1098              	.LVL132:
 1099 023c F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1100              	.LVL133:
 1101              	.L109:
 1102              	.LBE120:
 1103              	.LBE127:
 1104              	.LBB128:
 1105              	.LBB107:
 138:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       // NaN, so just return zero (with the exponent set to INT_MAX).
 1106              		.loc 1 138 0
 1107 0240 80108FE2 		adr	r1, .L111+24
 1108 0244 D000C1E1 		ldrd	r0, [r1]
 1109 0248 004004E0 		and	r4, r4, r0
 1110              	.LVL134:
 1111 024c 015005E0 		and	r5, r5, r1
 1112 0250 051094E1 		orrs	r1, r4, r5
 140:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     } else {
 1113              		.loc 1 140 0
 1114 0254 0000A013 		movne	r0, #0
 1115 0258 0010A013 		movne	r1, #0
 138:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       // NaN, so just return zero (with the exponent set to INT_MAX).
 1116              		.loc 1 138 0
 1117 025c 0500001A 		bne	.L80
 143:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****         return std::numeric_limits<int64_t>::min();
 1118              		.loc 1 143 0
 1119 0260 000056E3 		cmp	r6, #0
 1120 0264 0010D7E2 		sbcs	r1, r7, #0
 144:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       } else {
 1121              		.loc 1 144 0
 1122 0268 0000A0B3 		movlt	r0, #0
 1123 026c 0211A0B3 		movlt	r1, #-2147483648
 143:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****         return std::numeric_limits<int64_t>::min();
 1124              		.loc 1 143 0
 146:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       }
 1125              		.loc 1 146 0
 1126 0270 0000E0A3 		mvnge	r0, #0
 1127 0274 0211E0A3 		mvnge	r1, #-2147483648
 1128              	.L80:
 1129              	.LVL135:
 1130              	.LBE107:
 1131              	.LBE128:
 1132              	.LBB129:
 1133              	.LBB114:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1134              		.loc 1 127 0
 1135 0278 0240A0E1 		mov	r4, r2
 1136 027c 0251C3E3 		bic	r5, r3, #-2147483648
 1137              	.LVL136:
 1138 0280 05C094E1 		orrs	ip, r4, r5
 1139 0284 02C1E013 		mvnne	ip, #-2147483648
 1140 0288 84FFFF1A 		bne	.L94
 1141 028c A0FFFFEA 		b	.L105
 1142              	.LVL137:
 1143              	.L110:
 1144              	.LBE114:
 1145              	.LBE129:
 1146              	.LBB130:
 1147              	.LBB121:
 186:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       return std::numeric_limits<double>::quiet_NaN();
 1148              		.loc 1 186 0
 1149 0290 053094E1 		orrs	r3, r4, r5
 1150 0294 9EFFFF0A 		beq	.L105
 189:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     } else {
 1151              		.loc 1 189 0
 1152 0298 0C0BDFED 		vldr.64	d16, .L111+32
 1153 029c 010054E3 		cmp	r4, #1
 1154 02a0 0C0B9FED 		vldr.64	d0, .L111+40
 1155              	.LVL138:
 1156 02a4 0030D5E2 		sbcs	r3, r5, #0
 1157 02a8 600BB0AE 		vmovge.f64	d0, d16
 1158 02ac F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1159              	.L112:
 1160              		.align	3
 1161              	.L111:
 1162 02b0 00000000 		.word	0
 1163 02b4 0000F87F 		.word	2146959360
 1164 02b8 FF030000 		.word	1023
 1165 02bc 00000000 		.word	0
 1166 02c0 00000000 		.word	0
 1167 02c4 00000000 		.word	0
 1168 02c8 0000C0FF 		.word	-4194304
 1169 02cc FFFF0F00 		.word	1048575
 1170 02d0 00000000 		.word	0
 1171 02d4 0000F07F 		.word	2146435072
 1172 02d8 00000000 		.word	0
 1173 02dc 0000F0FF 		.word	-1048576
 1174              	.LBE121:
 1175              	.LBE130:
 1176              		.cfi_endproc
 1177              	.LFE1123:
 1178              		.cantunwind
 1179              		.fnend
 1181              		.section	.text._ZN6tflite20IntegerDoubleCompareEdd,"ax",%progbits
 1182              		.align	2
 1183              		.global	_ZN6tflite20IntegerDoubleCompareEdd
 1184              		.syntax unified
 1185              		.arm
 1186              		.fpu neon
 1188              	_ZN6tflite20IntegerDoubleCompareEdd:
 1189              		.fnstart
 1190              	.LFB1124:
 232:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       (b_shift == std::numeric_limits<int>::max())) {
 233:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return std::numeric_limits<double>::quiet_NaN();
 234:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 235:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const int result_shift = a_shift + b_shift + 1;
 236:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const int64_t result_fraction = (a_fraction * b_fraction) >> 32;
 237:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   return DoubleFromFractionAndShift(result_fraction, result_shift);
 238:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 239:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 240:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** int IntegerDoubleCompare(double a, double b) {
 1191              		.loc 1 240 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              	.LVL139:
 1196 0000 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 1197              		.cfi_def_cfa_offset 28
 1198              		.cfi_offset 4, -28
 1199              		.cfi_offset 5, -24
 1200              		.cfi_offset 6, -20
 1201              		.cfi_offset 7, -16
 1202              		.cfi_offset 8, -12
 1203              		.cfi_offset 9, -8
 1204              		.cfi_offset 14, -4
 1205              		.loc 1 240 0
 1206 0004 104B55EC 		vmov	r4, r5, d0
 1207              	.LVL140:
 1208              	.LBB135:
 1209              	.LBB136:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1210              		.loc 1 127 0
 1211 0008 0211C5E3 		bic	r1, r5, #-2147483648
 1212 000c 100A10EE 		vmov	r0, s0	@ int
 1213 0010 013090E1 		orrs	r3, r0, r1
 1214              	.LBE136:
 1215              	.LBE135:
 1216              		.loc 1 240 0
 1217 0014 112B53EC 		vmov	r2, r3, d1
 1218              	.LBB141:
 1219              	.LBB137:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1220              		.loc 1 127 0
 1221 0018 3B00000A 		beq	.L114
 135:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (exponent_part == kExponentIsBadNum) {
 1222              		.loc 1 135 0
 1223 001c FF1700E3 		movw	r1, #2047
 1224 0020 55CAEAE7 		ubfx	ip, r5, #20, #11
 1225              	.LVL141:
 136:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = std::numeric_limits<int>::max();
 1226              		.loc 1 136 0
 1227 0024 01005CE1 		cmp	ip, r1
 1228 0028 106A10EE 		vmov	r6, s0	@ int
 1229 002c 0570A0E1 		mov	r7, r5
 1230 0030 4800000A 		beq	.L142
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 1231              		.loc 1 161 0
 1232 0034 248BA0E1 		lsr	r8, r4, #22
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 1233              		.loc 1 167 0
 1234 0038 FF0F0FE3 		movw	r0, #65535
 1235 003c 3F0040E3 		movt	r0, 63
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 1236              		.loc 1 161 0
 1237 0040 058588E1 		orr	r8, r8, r5, lsl #10
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 1238              		.loc 1 167 0
 1239 0044 0010A0E3 		mov	r1, #0
 1240 0048 004004E0 		and	r4, r4, r0
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 1241              		.loc 1 161 0
 1242 004c 0381C8E3 		bic	r8, r8, #-1073741824
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 1243              		.loc 1 167 0
 1244 0050 015005E0 		and	r5, r5, r1
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 1245              		.loc 1 161 0
 1246 0054 010198E2 		adds	r0, r8, #1073741824
 1247 0058 0090A0E3 		mov	r9, #0
 1248 005c 0010A9E2 		adc	r1, r9, #0
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 1249              		.loc 1 167 0
 1250 0060 000055E3 		cmp	r5, #0
 1251 0064 02065403 		cmpeq	r4, #2097152
 156:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 1252              		.loc 1 156 0
 1253 0068 FFCF4CE2 		sub	ip, ip, #1020
 1254              	.LVL142:
 1255 006c 02C04CE2 		sub	ip, ip, #2
 1256              	.LVL143:
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 1257              		.loc 1 167 0
 1258 0070 0100009A 		bls	.L117
 168:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1259              		.loc 1 168 0
 1260 0074 050198E2 		adds	r0, r8, #1073741825
 1261              	.LVL144:
 1262 0078 0010A9E2 		adc	r1, r9, #0
 1263              	.LVL145:
 1264              	.L117:
 171:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction *= -1;
 1265              		.loc 1 171 0
 1266 007c 000056E3 		cmp	r6, #0
 1267 0080 00E0D7E2 		sbcs	lr, r7, #0
 1268 0084 010000AA 		bge	.L118
 172:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1269              		.loc 1 172 0
 1270 0088 000070E2 		rsbs	r0, r0, #0
 1271              	.LVL146:
 1272 008c 0010E1E2 		rsc	r1, r1, #0
 1273              	.LVL147:
 1274              	.L118:
 1275              	.LBE137:
 1276              	.LBE141:
 1277              	.LBB142:
 1278              	.LBB143:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1279              		.loc 1 127 0
 1280 0090 0240A0E1 		mov	r4, r2
 1281 0094 0251C3E3 		bic	r5, r3, #-2147483648
 1282              	.LVL148:
 1283 0098 05E094E1 		orrs	lr, r4, r5
 1284 009c 5C00000A 		beq	.L143
 1285              	.LVL149:
 1286              	.L124:
 135:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (exponent_part == kExponentIsBadNum) {
 1287              		.loc 1 135 0
 1288 00a0 FF4700E3 		movw	r4, #2047
 1289 00a4 53EAEAE7 		ubfx	lr, r3, #20, #11
 1290              	.LVL150:
 136:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = std::numeric_limits<int>::max();
 1291              		.loc 1 136 0
 1292 00a8 04005EE1 		cmp	lr, r4
 1293 00ac 1400000A 		beq	.L138
 1294              	.LVL151:
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 1295              		.loc 1 161 0
 1296 00b0 228BA0E1 		lsr	r8, r2, #22
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 1297              		.loc 1 167 0
 1298 00b4 FF6F0FE3 		movw	r6, #65535
 1299 00b8 0070A0E3 		mov	r7, #0
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 1300              		.loc 1 161 0
 1301 00bc 038588E1 		orr	r8, r8, r3, lsl #10
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 1302              		.loc 1 167 0
 1303 00c0 3F6040E3 		movt	r6, 63
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 1304              		.loc 1 161 0
 1305 00c4 0090A0E3 		mov	r9, #0
 1306 00c8 0381C8E3 		bic	r8, r8, #-1073741824
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 1307              		.loc 1 167 0
 1308 00cc 037007E0 		and	r7, r7, r3
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 1309              		.loc 1 161 0
 1310 00d0 014198E2 		adds	r4, r8, #1073741824
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 1311              		.loc 1 167 0
 1312 00d4 026006E0 		and	r6, r6, r2
 161:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 1313              		.loc 1 161 0
 1314 00d8 0050A9E2 		adc	r5, r9, #0
 1315              	.LVL152:
 167:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction += 1;
 1316              		.loc 1 167 0
 1317 00dc 000057E3 		cmp	r7, #0
 1318 00e0 02065603 		cmpeq	r6, #2097152
 1319 00e4 0100009A 		bls	.L120
 168:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1320              		.loc 1 168 0
 1321 00e8 054198E2 		adds	r4, r8, #1073741825
 1322              	.LVL153:
 1323 00ec 0050A9E2 		adc	r5, r9, #0
 1324              	.LVL154:
 1325              	.L120:
 171:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     fraction *= -1;
 1326              		.loc 1 171 0
 1327 00f0 000052E3 		cmp	r2, #0
 1328 00f4 0030D3E2 		sbcs	r3, r3, #0
 1329 00f8 2A0000BA 		blt	.L144
 1330              	.LVL155:
 1331              	.LBE143:
 1332              	.LBE142:
 241:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int a_shift;
 242:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const int64_t a_fraction = IntegerFrExp(a, &a_shift);
 243:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int b_shift;
 244:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const int64_t b_fraction = IntegerFrExp(b, &b_shift);
 245:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 246:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // Detect NaNs and infinities.
 247:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (a_shift == std::numeric_limits<int>::max() ||
 1333              		.loc 1 247 0
 1334 00fc 06017CE3 		cmn	ip, #-2147483647
 1335 0100 3700001A 		bne	.L123
 1336              	.LVL156:
 1337              	.L138:
 248:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       (b_shift == std::numeric_limits<int>::max())) {
 249:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 1;
 250:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 251:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 252:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if ((a_fraction == 0) && (b_fraction < 0)) {
 253:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 1;
 254:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } else if ((a_fraction < 0) && (b_fraction == 0)) {
 255:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return -1;
 256:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } else if (a_shift < b_shift) {
 257:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return -1;
 258:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } else if (a_shift > b_shift) {
 259:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 1;
 1338              		.loc 1 259 0
 1339 0104 0100A0E3 		mov	r0, #1
 1340 0108 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1341              	.LVL157:
 1342              	.L114:
 1343              	.LBB151:
 1344              	.LBB144:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1345              		.loc 1 127 0
 1346 010c 104A11EE 		vmov	r4, s2	@ int
 1347              	.LVL158:
 1348 0110 0251C3E3 		bic	r5, r3, #-2147483648
 1349              	.LVL159:
 1350 0114 05C094E1 		orrs	ip, r4, r5
 1351              	.LBE144:
 1352              	.LBE151:
 1353              	.LBB152:
 1354              	.LBB138:
 128:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 0;
 1355              		.loc 1 128 0
 1356 0118 00C0A013 		movne	ip, #0
 1357              	.LBE138:
 1358              	.LBE152:
 1359              	.LBB153:
 1360              	.LBB145:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1361              		.loc 1 127 0
 1362 011c DFFFFF1A 		bne	.L124
 1363              	.LBE145:
 1364              	.LBE153:
 1365              	.LBB154:
 1366              	.LBB139:
 128:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 0;
 1367              		.loc 1 128 0
 1368 0120 00C0A0E3 		mov	ip, #0
 129:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1369              		.loc 1 129 0
 1370 0124 0400A0E1 		mov	r0, r4
 1371 0128 0510A0E1 		mov	r1, r5
 1372              	.LBE139:
 1373              	.LBE154:
 1374              	.LBB155:
 1375              	.LBB146:
 128:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 0;
 1376              		.loc 1 128 0
 1377 012c 0CE0A0E1 		mov	lr, ip
 1378              	.LVL160:
 1379              	.L125:
 1380              	.LBE146:
 1381              	.LBE155:
 258:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 1;
 1382              		.loc 1 258 0
 1383 0130 0C005EE1 		cmp	lr, ip
 1384 0134 F2FFFFBA 		blt	.L138
 260:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } else if (a_fraction < b_fraction) {
 1385              		.loc 1 260 0
 1386 0138 040050E1 		cmp	r0, r4
 1387 013c 0530D1E0 		sbcs	r3, r1, r5
 1388 0140 310000BA 		blt	.L133
 261:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return -1;
 262:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } else if (a_fraction > b_fraction) {
 1389              		.loc 1 262 0
 1390 0144 000054E1 		cmp	r4, r0
 1391 0148 0130D5E0 		sbcs	r3, r5, r1
 1392 014c 0100A0B3 		movlt	r0, #1
 1393 0150 0000A0A3 		movge	r0, #0
 1394 0154 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1395              	.LVL161:
 1396              	.L142:
 1397              	.LBB156:
 1398              	.LBB140:
 138:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       // NaN, so just return zero (with the exponent set to INT_MAX).
 1399              		.loc 1 138 0
 1400 0158 C0108FE2 		adr	r1, .L145
 1401 015c D000C1E1 		ldrd	r0, [r1]
 1402 0160 004004E0 		and	r4, r4, r0
 1403              	.LVL162:
 1404 0164 015005E0 		and	r5, r5, r1
 1405 0168 051094E1 		orrs	r1, r4, r5
 140:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     } else {
 1406              		.loc 1 140 0
 1407 016c 0000A013 		movne	r0, #0
 1408 0170 0010A013 		movne	r1, #0
 138:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       // NaN, so just return zero (with the exponent set to INT_MAX).
 1409              		.loc 1 138 0
 1410 0174 0500001A 		bne	.L116
 143:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****         return std::numeric_limits<int64_t>::min();
 1411              		.loc 1 143 0
 1412 0178 000056E3 		cmp	r6, #0
 1413 017c 0010D7E2 		sbcs	r1, r7, #0
 144:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       } else {
 1414              		.loc 1 144 0
 1415 0180 0000A0B3 		movlt	r0, #0
 1416 0184 0211A0B3 		movlt	r1, #-2147483648
 143:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****         return std::numeric_limits<int64_t>::min();
 1417              		.loc 1 143 0
 146:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       }
 1418              		.loc 1 146 0
 1419 0188 0000E0A3 		mvnge	r0, #0
 1420 018c 0211E0A3 		mvnge	r1, #-2147483648
 1421              	.L116:
 1422              	.LVL163:
 1423              	.LBE140:
 1424              	.LBE156:
 1425              	.LBB157:
 1426              	.LBB147:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1427              		.loc 1 127 0
 1428 0190 0240A0E1 		mov	r4, r2
 1429 0194 0251C3E3 		bic	r5, r3, #-2147483648
 1430              	.LVL164:
 1431 0198 05C094E1 		orrs	ip, r4, r5
 1432 019c 02C1E013 		mvnne	ip, #-2147483648
 1433 01a0 BEFFFF1A 		bne	.L124
 1434 01a4 D6FFFFEA 		b	.L138
 1435              	.LVL165:
 1436              	.L144:
 172:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1437              		.loc 1 172 0
 1438 01a8 002074E2 		rsbs	r2, r4, #0
 1439              	.LVL166:
 1440 01ac 0030E5E2 		rsc	r3, r5, #0
 1441              	.LVL167:
 1442              	.LBE147:
 1443              	.LBE157:
 247:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       (b_shift == std::numeric_limits<int>::max())) {
 1444              		.loc 1 247 0
 1445 01b0 06017CE3 		cmn	ip, #-2147483647
 1446 01b4 D2FFFF0A 		beq	.L138
 252:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 1;
 1447              		.loc 1 252 0
 1448 01b8 016090E1 		orrs	r6, r0, r1
 1449 01bc 0160A003 		moveq	r6, #1
 1450 01c0 0060A013 		movne	r6, #0
 1451 01c4 010054E3 		cmp	r4, #1
 1452 01c8 0040D5E2 		sbcs	r4, r5, #0
 1453 01cc 0040A0B3 		movlt	r4, #0
 1454 01d0 014006A2 		andge	r4, r6, #1
 1455 01d4 000054E3 		cmp	r4, #0
 1456              	.LBB158:
 1457              	.LBB148:
 172:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1458              		.loc 1 172 0
 1459 01d8 0240A001 		moveq	r4, r2
 1460 01dc 0350A001 		moveq	r5, r3
 1461              	.LBE148:
 1462              	.LBE158:
 252:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 1;
 1463              		.loc 1 252 0
 1464 01e0 C7FFFF1A 		bne	.L138
 1465              	.L123:
 1466 01e4 053094E1 		orrs	r3, r4, r5
 1467              	.LBB159:
 1468              	.LBB149:
 156:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 1469              		.loc 1 156 0
 1470 01e8 FFEF4EE2 		sub	lr, lr, #1020
 1471              	.LVL168:
 1472 01ec 02E04EE2 		sub	lr, lr, #2
 1473              	.LVL169:
 1474 01f0 0130A003 		moveq	r3, #1
 1475 01f4 0030A013 		movne	r3, #0
 1476              	.LVL170:
 1477              	.L126:
 1478              	.LBE149:
 1479              	.LBE159:
 254:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return -1;
 1480              		.loc 1 254 0
 1481 01f8 A13F03E0 		and	r3, r3, r1, lsr #31
 256:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return -1;
 1482              		.loc 1 256 0
 1483 01fc 0C005EE1 		cmp	lr, ip
 1484 0200 013083C3 		orrgt	r3, r3, #1
 1485 0204 000053E3 		cmp	r3, #0
 1486 0208 C8FFFF0A 		beq	.L125
 1487              	.L133:
 257:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } else if (a_shift > b_shift) {
 1488              		.loc 1 257 0
 1489 020c 0000E0E3 		mvn	r0, #0
 1490 0210 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1491              	.LVL171:
 1492              	.L143:
 1493              	.LBB160:
 1494              	.LBB150:
 127:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1495              		.loc 1 127 0
 1496 0214 0130A0E3 		mov	r3, #1
 128:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 0;
 1497              		.loc 1 128 0
 1498 0218 00E0A0E3 		mov	lr, #0
 1499 021c F5FFFFEA 		b	.L126
 1500              	.L146:
 1501              		.align	3
 1502              	.L145:
 1503 0220 0000C0FF 		.word	-4194304
 1504 0224 FFFF0F00 		.word	1048575
 1505              	.LBE150:
 1506              	.LBE160:
 1507              		.cfi_endproc
 1508              	.LFE1124:
 1509              		.cantunwind
 1510              		.fnend
 1512              		.section	.text._ZN6tflite24PreprocessSoftmaxScalingEddiPlPi,"ax",%progbits
 1513              		.align	2
 1514              		.global	_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi
 1515              		.syntax unified
 1516              		.arm
 1517              		.fpu neon
 1519              	_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi:
 1520              		.fnstart
 1521              	.LFB1125:
 263:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 1;
 264:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } else {
 265:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return 0;
 266:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 267:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 268:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 269:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** void PreprocessSoftmaxScaling(double beta, double input_scale,
 270:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                               int input_integer_bits,
 271:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                               int32_t* quantized_multiplier, int* left_shift) {
 1522              		.loc 1 271 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              	.LVL172:
 272:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // If the overall multiplier (input and beta) is large, then exp() of an
 273:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // input difference of 1 scaled by this will be large.  In other words, we
 274:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // can cap the multiplier and know that, when it is used, the output will be
 275:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // (round to) zero wherever the input is not at the maximum value.
 276:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 277:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // If the overall scale is less than one, and input_integer_bits=0, then the
 278:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // result is double equivalent of Q0.31 (actually with more precision). Thus
 279:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // this generates a Q(input_integer_bits).(31-input_integer_bits)
 280:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // representation.
 281:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #ifdef TFLITE_EMULATE_FLOAT
 282:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const double input_beta = IntegerDoubleMultiply(beta, input_scale);
 283:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int shift;
 284:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int64_t fraction = IntegerFrExp(input_beta, &shift);
 285:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   shift += (31 - input_integer_bits);
 286:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   double input_beta_real_multiplier =
 287:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       DoubleFromFractionAndShift(fraction, shift);
 288:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (IntegerDoubleCompare(input_beta_real_multiplier, (1ll << 31) - 1.0) > 0) {
 289:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     input_beta_real_multiplier = (1ll << 31) - 1.0;
 290:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 291:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #else   // TFLITE_EMULATE_FLOAT
 292:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const double input_beta_real_multiplier = std::min<double>(
 293:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       beta * input_scale * (1 << (31 - input_integer_bits)), (1ll << 31) - 1.0);
 1527              		.loc 1 293 0
 1528 0000 1F0060E2 		rsb	r0, r0, #31
 1529              	.LVL173:
 1530 0004 0130A0E3 		mov	r3, #1
 1531 0008 1330A0E1 		lsl	r3, r3, r0
 1532 000c 011B20EE 		vmul.f64	d1, d0, d1
 1533              	.LVL174:
 1534              	.LBB173:
 1535              	.LBB174:
 1536              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** /*
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  */
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  */
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** {
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<bool _BoolType>
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __iter_swap
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static void
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         {
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****             _ValueType1;
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	}
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<>
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __iter_swap<true>
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static void 
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         {
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           swap(*__a, *__b);
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         }
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #endif
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   Nothing.
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  iterators themselves.
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline void
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ValueType1;
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ValueType2;
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ValueType2>)
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ValueType1>)
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ReferenceType1;
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ReferenceType2;
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #else
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #endif
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _ForwardIterator2
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       return __first2;
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  preprocessor macro.
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline const _Tp&
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       if (__b < __a)
 1537              		.loc 3 200 0
 1538 0010 300B9FED 		vldr.64	d0, .L159
 1539              	.LVL175:
 1540              	.LBE174:
 1541              	.LBE173:
 271:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // If the overall multiplier (input and beta) is large, then exp() of an
 1542              		.loc 1 271 0
 1543 0014 70402DE9 		push	{r4, r5, r6, lr}
 1544              		.save {r4, r5, r6, lr}
 1545              		.cfi_def_cfa_offset 16
 1546              		.cfi_offset 4, -16
 1547              		.cfi_offset 5, -12
 1548              		.cfi_offset 6, -8
 1549              		.cfi_offset 14, -4
 271:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // If the overall multiplier (input and beta) is large, then exp() of an
 1550              		.loc 1 271 0
 1551 0018 0150A0E1 		mov	r5, r1
 1552              		.loc 1 293 0
 1553 001c 903A07EE 		vmov	s15, r3	@ int
 271:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // If the overall multiplier (input and beta) is large, then exp() of an
 1554              		.loc 1 271 0
 1555 0020 0240A0E1 		mov	r4, r2
 1556              		.loc 1 293 0
 1557 0024 E70BF8EE 		vcvt.f64.s32	d16, s15
 1558 0028 811B20EE 		vmul.f64	d1, d16, d1
 1559              	.LVL176:
 1560              	.LBB177:
 1561              	.LBB175:
 1562              		.loc 3 200 0
 1563 002c C01BB4EE 		vcmpe.f64	d1, d0
 1564 0030 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1565 0034 0B0000CA 		bgt	.L148
 1566              	.LVL177:
 1567              	.LBE175:
 1568              	.LBE177:
 1569              	.LBB178:
 1570              	.LBB179:
  96:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   QuantizeMultiplier(double_multiplier, quantized_multiplier, left_shift);
 1571              		.loc 1 96 0
 1572 0038 000BF7EE 		vmov.f64	d16, #1.0e+0
 1573 003c E01BB4EE 		vcmpe.f64	d1, d16
 1574 0040 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1575 0044 220000DA 		ble	.L151
 1576              	.LVL178:
 1577              	.LBB180:
 1578              	.LBB181:
  55:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *quantized_multiplier = 0;
 1579              		.loc 1 55 0
 1580 0048 401BB5EE 		vcmp.f64	d1, #0
 1581 004c 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1582 0050 0300001A 		bne	.L156
  56:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1583              		.loc 1 56 0
 1584 0054 0030A0E3 		mov	r3, #0
 1585 0058 003081E5 		str	r3, [r1]
  57:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return;
 1586              		.loc 1 57 0
 1587 005c 003082E5 		str	r3, [r2]
 1588              	.LVL179:
 1589 0060 7080BDE8 		pop	{r4, r5, r6, pc}
 1590              	.LVL180:
 1591              	.L156:
 1592              	.LBE181:
 1593              	.LBE180:
 1594              	.LBE179:
 1595              	.LBE178:
 1596              	.LBB193:
 1597              	.LBB176:
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       return __a;
 1598              		.loc 3 202 0
 1599 0064 410BB0EE 		vmov.f64	d0, d1
 1600              	.LVL181:
 1601              	.L148:
 1602              	.LBE176:
 1603              	.LBE193:
 1604              	.LBB194:
 1605              	.LBB192:
 1606              	.LBB190:
 1607              	.LBB188:
 1608              	.LBB182:
 1609              	.LBB183:
  67:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   auto q_fixed = static_cast<int64_t>(TfLiteRound(q * (1ll << 31)));
 1610              		.loc 1 67 0
 1611 0068 0400A0E1 		mov	r0, r4
 1612 006c FEFFFFEB 		bl	frexp
 1613              	.LVL182:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 1614              		.loc 1 68 0
 1615 0070 1A0BDFED 		vldr.64	d16, .L159+8
 1616              	.LBB184:
 1617              	.LBB185:
 1618              		.loc 2 36 0
 1619 0074 200B20EE 		vmul.f64	d0, d0, d16
 1620              	.LVL183:
 1621 0078 FEFFFFEB 		bl	round
 1622              	.LVL184:
 1623              	.LBE185:
 1624              	.LBE184:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 1625              		.loc 1 68 0
 1626 007c 100B51EC 		vmov	r0, r1, d0
 1627 0080 FEFFFFEB 		bl	__aeabi_d2lz
 1628              	.LVL185:
  70:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (q_fixed == (1ll << 31)) {
 1629              		.loc 1 70 0
 1630 0084 0221A0E3 		mov	r2, #-2147483648
 1631 0088 0030A0E3 		mov	r3, #0
 1632 008c 000052E1 		cmp	r2, r0
 1633 0090 01C0D3E0 		sbcs	ip, r3, r1
 1634 0094 0E0000BA 		blt	.L151
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
 1635              		.loc 1 71 0
 1636 0098 030051E1 		cmp	r1, r3
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1637              		.loc 1 73 0
 1638 009c 003094E5 		ldr	r3, [r4]
 1639              	.LVL186:
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
 1640              		.loc 1 71 0
 1641 00a0 02005001 		cmpeq	r0, r2
  72:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     ++*shift;
 1642              		.loc 1 72 0
 1643 00a4 0101A003 		moveq	r0, #1073741824
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1644              		.loc 1 73 0
 1645 00a8 01308302 		addeq	r3, r3, #1
 1646 00ac 00308405 		streq	r3, [r4]
 1647              	.LVL187:
  86:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1648              		.loc 1 86 0
 1649 00b0 1F0073E3 		cmn	r3, #31
 1650 00b4 030000AA 		bge	.L158
  87:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed = 0;
 1651              		.loc 1 87 0
 1652 00b8 0030A0E3 		mov	r3, #0
 1653 00bc 003084E5 		str	r3, [r4]
 1654              	.LVL188:
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 1655              		.loc 1 90 0
 1656 00c0 003085E5 		str	r3, [r5]
 1657              	.LVL189:
 1658 00c4 7080BDE8 		pop	{r4, r5, r6, pc}
 1659              	.LVL190:
 1660              	.L158:
 1661              	.LBE183:
 1662              	.LBE182:
 1663              	.LBE188:
 1664              	.LBE190:
  98:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 1665              		.loc 1 98 0
 1666 00c8 000053E3 		cmp	r3, #0
 1667              	.LBB191:
 1668              	.LBB189:
 1669              	.LBB187:
 1670              	.LBB186:
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 1671              		.loc 1 90 0
 1672 00cc 000085E5 		str	r0, [r5]
 1673              	.LVL191:
 1674              	.LBE186:
 1675              	.LBE187:
 1676              	.LBE189:
 1677              	.LBE191:
  98:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 1678              		.loc 1 98 0
 1679 00d0 7080BDA8 		popge	{r4, r5, r6, pc}
 1680              	.LVL192:
 1681              	.L151:
  96:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   QuantizeMultiplier(double_multiplier, quantized_multiplier, left_shift);
 1682              		.loc 1 96 0
 1683 00d4 FEFFFFEB 		bl	abort
 1684              	.LVL193:
 1685              	.L160:
 1686              		.align	3
 1687              	.L159:
 1688 00d8 0000C0FF 		.word	-4194304
 1689 00dc FFFFDF41 		.word	1105199103
 1690 00e0 00000000 		.word	0
 1691 00e4 0000E041 		.word	1105199104
 1692              	.LBE192:
 1693              	.LBE194:
 1694              		.cfi_endproc
 1695              	.LFE1125:
 1696              		.fnend
 1698              		.section	.text._ZN6tflite30PreprocessLogSoftmaxScalingExpEddiPlPiS0_S1_,"ax",%progbits
 1699              		.align	2
 1700              		.global	_ZN6tflite30PreprocessLogSoftmaxScalingExpEddiPlPiS0_S1_
 1701              		.syntax unified
 1702              		.arm
 1703              		.fpu neon
 1705              	_ZN6tflite30PreprocessLogSoftmaxScalingExpEddiPlPiS0_S1_:
 1706              		.fnstart
 1707              	.LFB1126:
 294:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 295:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 296:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   QuantizeMultiplierGreaterThanOne(input_beta_real_multiplier,
 297:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                    quantized_multiplier, left_shift);
 298:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 299:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 300:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** void PreprocessLogSoftmaxScalingExp(double beta, double input_scale,
 301:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                     int input_integer_bits,
 302:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                     int32_t* quantized_multiplier,
 303:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                     int* left_shift,
 304:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                     int32_t* reverse_scaling_divisor,
 305:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                     int* reverse_scaling_left_shift) {
 1708              		.loc 1 305 0
 1709              		.cfi_startproc
 1710              		@ args = 4, pretend = 0, frame = 8
 1711              		@ frame_needed = 0, uses_anonymous_args = 0
 1712              	.LVL194:
 1713              	.LBB215:
 1714              	.LBB216:
 293:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 1715              		.loc 1 293 0
 1716 0000 1F0060E2 		rsb	r0, r0, #31
 1717              	.LVL195:
 1718 0004 01C0A0E3 		mov	ip, #1
 1719 0008 1CC0A0E1 		lsl	ip, ip, r0
 1720 000c 011B20EE 		vmul.f64	d1, d0, d1
 1721              	.LVL196:
 1722              	.LBB217:
 1723              	.LBB218:
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 1724              		.loc 3 200 0
 1725 0010 680B9FED 		vldr.64	d0, .L181
 1726              	.LVL197:
 1727              	.LBE218:
 1728              	.LBE217:
 1729              	.LBE216:
 1730              	.LBE215:
 1731              		.loc 1 305 0
 1732 0014 70402DE9 		push	{r4, r5, r6, lr}
 1733              		.save {r4, r5, r6, lr}
 1734              		.cfi_def_cfa_offset 16
 1735              		.cfi_offset 4, -16
 1736              		.cfi_offset 5, -12
 1737              		.cfi_offset 6, -8
 1738              		.cfi_offset 14, -4
 1739 0018 0160A0E1 		mov	r6, r1
 1740              	.LVL198:
 1741              	.LBB246:
 1742              	.LBB243:
 293:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 1743              		.loc 1 293 0
 1744 001c 90CA07EE 		vmov	s15, ip	@ int
 1745              	.LBE243:
 1746              	.LBE246:
 1747              		.loc 1 305 0
 1748              		.pad #8
 1749 0020 08D04DE2 		sub	sp, sp, #8
 1750              		.cfi_def_cfa_offset 24
 1751              		.loc 1 305 0
 1752 0024 0250A0E1 		mov	r5, r2
 1753              	.LVL199:
 1754 0028 0340A0E1 		mov	r4, r3
 1755              	.LBB247:
 1756              	.LBB244:
 293:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 1757              		.loc 1 293 0
 1758 002c E70BF8EE 		vcvt.f64.s32	d16, s15
 1759 0030 811B20EE 		vmul.f64	d1, d16, d1
 1760              	.LVL200:
 1761              	.LBB221:
 1762              	.LBB219:
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 1763              		.loc 3 200 0
 1764 0034 C01BB4EE 		vcmpe.f64	d1, d0
 1765 0038 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1766 003c 360000CA 		bgt	.L162
 1767              	.LVL201:
 1768              	.LBE219:
 1769              	.LBE221:
 1770              	.LBB222:
 1771              	.LBB223:
  96:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   QuantizeMultiplier(double_multiplier, quantized_multiplier, left_shift);
 1772              		.loc 1 96 0
 1773 0040 000BF7EE 		vmov.f64	d16, #1.0e+0
 1774 0044 E01BB4EE 		vcmpe.f64	d1, d16
 1775 0048 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1776 004c 570000DA 		ble	.L165
 1777              	.LVL202:
 1778              	.LBB224:
 1779              	.LBB225:
  55:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *quantized_multiplier = 0;
 1780              		.loc 1 55 0
 1781 0050 401BB5EE 		vcmp.f64	d1, #0
 1782 0054 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1783 0058 2E00001A 		bne	.L177
  57:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return;
 1784              		.loc 1 57 0
 1785 005c 570BDFED 		vldr.64	d16, .L181+8
  56:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1786              		.loc 1 56 0
 1787 0060 0030A0E3 		mov	r3, #0
 1788              	.LVL203:
  57:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return;
 1789              		.loc 1 57 0
 1790 0064 571BDFED 		vldr.64	d17, .L181+16
  56:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1791              		.loc 1 56 0
 1792 0068 003081E5 		str	r3, [r1]
  57:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return;
 1793              		.loc 1 57 0
 1794 006c 003082E5 		str	r3, [r2]
 1795              	.LVL204:
 1796              	.L164:
 1797              	.LBE225:
 1798              	.LBE224:
 1799              	.LBE223:
 1800              	.LBE222:
 1801              	.LBE244:
 1802              	.LBE247:
 306:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   PreprocessSoftmaxScaling(beta, input_scale, input_integer_bits,
 307:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                            quantized_multiplier, left_shift);
 308:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 309:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // Also calculate what amounts to the inverse scaling factor for the input.
 310:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const double real_reverse_scaling_divisor =
 311:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       (1 << (31 - *left_shift)) / static_cast<double>(*quantized_multiplier);
 1803              		.loc 1 311 0
 1804 0070 A00B81EE 		vdiv.f64	d0, d17, d16
 1805              	.LVL205:
 1806              	.LBB248:
 1807              	.LBB249:
 104:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   TFLITE_CHECK_GT(double_multiplier, 0.);
 1808              		.loc 1 104 0
 1809 0074 000BF7EE 		vmov.f64	d16, #1.0e+0
 1810 0078 E00BB4EE 		vcmpe.f64	d0, d16
 1811 007c 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1812 0080 4A00005A 		bpl	.L165
 105:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int shift;
 1813              		.loc 1 105 0
 1814 0084 C00BB5EE 		vcmpe.f64	d0, #0
 1815 0088 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1816 008c 470000DA 		ble	.L165
 1817              	.LVL206:
 1818              	.LBB250:
 1819              	.LBB251:
 1820              	.LBB252:
 1821              	.LBB253:
  67:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   auto q_fixed = static_cast<int64_t>(TfLiteRound(q * (1ll << 31)));
 1822              		.loc 1 67 0
 1823 0090 04008DE2 		add	r0, sp, #4
 1824              	.LVL207:
 1825 0094 FEFFFFEB 		bl	frexp
 1826              	.LVL208:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 1827              		.loc 1 68 0
 1828 0098 4C0BDFED 		vldr.64	d16, .L181+24
 1829              	.LBB254:
 1830              	.LBB255:
 1831              		.loc 2 36 0
 1832 009c 200B20EE 		vmul.f64	d0, d0, d16
 1833              	.LVL209:
 1834 00a0 FEFFFFEB 		bl	round
 1835              	.LVL210:
 1836              	.LBE255:
 1837              	.LBE254:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 1838              		.loc 1 68 0
 1839 00a4 100B51EC 		vmov	r0, r1, d0
 1840 00a8 FEFFFFEB 		bl	__aeabi_d2lz
 1841              	.LVL211:
  70:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (q_fixed == (1ll << 31)) {
 1842              		.loc 1 70 0
 1843 00ac 0221A0E3 		mov	r2, #-2147483648
 1844 00b0 0030A0E3 		mov	r3, #0
 1845 00b4 000052E1 		cmp	r2, r0
 1846 00b8 01C0D3E0 		sbcs	ip, r3, r1
 1847 00bc 3B0000BA 		blt	.L165
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
 1848              		.loc 1 71 0
 1849 00c0 030051E1 		cmp	r1, r3
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1850              		.loc 1 73 0
 1851 00c4 04309DE5 		ldr	r3, [sp, #4]
 1852              	.LVL212:
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
 1853              		.loc 1 71 0
 1854 00c8 02005001 		cmpeq	r0, r2
  72:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     ++*shift;
 1855              		.loc 1 72 0
 1856 00cc 0101A003 		moveq	r0, #1073741824
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1857              		.loc 1 73 0
 1858 00d0 01308302 		addeq	r3, r3, #1
 1859 00d4 04308D05 		streq	r3, [sp, #4]
 1860              	.LVL213:
  86:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1861              		.loc 1 86 0
 1862 00d8 1F0073E3 		cmn	r3, #31
 1863 00dc 060000BA 		blt	.L174
 1864              	.LBE253:
 1865              	.LBE252:
 1866              	.LBE251:
 1867              	.LBE250:
 108:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *left_shift = shift;
 1868              		.loc 1 108 0
 1869 00e0 000053E3 		cmp	r3, #0
 1870              	.LBB262:
 1871              	.LBB260:
 1872              	.LBB258:
 1873              	.LBB256:
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 1874              		.loc 1 90 0
 1875 00e4 000084E5 		str	r0, [r4]
 1876              	.LVL214:
 1877              	.LBE256:
 1878              	.LBE258:
 1879              	.LBE260:
 1880              	.LBE262:
 108:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *left_shift = shift;
 1881              		.loc 1 108 0
 1882 00e8 300000CA 		bgt	.L165
 109:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 1883              		.loc 1 109 0
 1884 00ec 18209DE5 		ldr	r2, [sp, #24]
 1885 00f0 003082E5 		str	r3, [r2]
 1886              	.LVL215:
 1887              	.LBE249:
 1888              	.LBE248:
 312:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   tflite::QuantizeMultiplierSmallerThanOneExp(real_reverse_scaling_divisor,
 313:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                               reverse_scaling_divisor,
 314:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                                               reverse_scaling_left_shift);
 315:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 1889              		.loc 1 315 0
 1890 00f4 08D08DE2 		add	sp, sp, #8
 1891              		.cfi_remember_state
 1892              		.cfi_def_cfa_offset 16
 1893              		@ sp needed
 1894 00f8 7080BDE8 		pop	{r4, r5, r6, pc}
 1895              	.LVL216:
 1896              	.L174:
 1897              		.cfi_restore_state
 1898              	.LBB265:
 1899              	.LBB264:
 1900              	.LBB263:
 1901              	.LBB261:
 1902              	.LBB259:
 1903              	.LBB257:
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 1904              		.loc 1 90 0
 1905 00fc 0020A0E3 		mov	r2, #0
 1906 0100 0230A0E1 		mov	r3, r2
 1907 0104 002084E5 		str	r2, [r4]
 1908              	.LVL217:
 1909              	.LBE257:
 1910              	.LBE259:
 1911              	.LBE261:
 1912              	.LBE263:
 109:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 1913              		.loc 1 109 0
 1914 0108 18209DE5 		ldr	r2, [sp, #24]
 1915 010c 003082E5 		str	r3, [r2]
 1916              	.LVL218:
 1917              	.LBE264:
 1918              	.LBE265:
 1919              		.loc 1 315 0
 1920 0110 08D08DE2 		add	sp, sp, #8
 1921              		.cfi_remember_state
 1922              		.cfi_def_cfa_offset 16
 1923              		@ sp needed
 1924 0114 7080BDE8 		pop	{r4, r5, r6, pc}
 1925              	.LVL219:
 1926              	.L177:
 1927              		.cfi_restore_state
 1928              	.LBB266:
 1929              	.LBB245:
 1930              	.LBB241:
 1931              	.LBB220:
 1932              		.loc 3 202 0
 1933 0118 410BB0EE 		vmov.f64	d0, d1
 1934              	.LVL220:
 1935              	.L162:
 1936              	.LBE220:
 1937              	.LBE241:
 1938              	.LBB242:
 1939              	.LBB240:
 1940              	.LBB237:
 1941              	.LBB234:
 1942              	.LBB226:
 1943              	.LBB227:
  67:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   auto q_fixed = static_cast<int64_t>(TfLiteRound(q * (1ll << 31)));
 1944              		.loc 1 67 0
 1945 011c 0500A0E1 		mov	r0, r5
 1946 0120 FEFFFFEB 		bl	frexp
 1947              	.LVL221:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 1948              		.loc 1 68 0
 1949 0124 290BDFED 		vldr.64	d16, .L181+24
 1950              	.LBB228:
 1951              	.LBB229:
 1952              		.loc 2 36 0
 1953 0128 200B20EE 		vmul.f64	d0, d0, d16
 1954              	.LVL222:
 1955 012c FEFFFFEB 		bl	round
 1956              	.LVL223:
 1957              	.LBE229:
 1958              	.LBE228:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 1959              		.loc 1 68 0
 1960 0130 100B51EC 		vmov	r0, r1, d0
 1961 0134 FEFFFFEB 		bl	__aeabi_d2lz
 1962              	.LVL224:
  70:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (q_fixed == (1ll << 31)) {
 1963              		.loc 1 70 0
 1964 0138 0221A0E3 		mov	r2, #-2147483648
 1965 013c 0030A0E3 		mov	r3, #0
 1966 0140 000052E1 		cmp	r2, r0
 1967 0144 01C0D3E0 		sbcs	ip, r3, r1
 1968 0148 180000BA 		blt	.L165
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
 1969              		.loc 1 71 0
 1970 014c 030051E1 		cmp	r1, r3
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1971              		.loc 1 73 0
 1972 0150 003095E5 		ldr	r3, [r5]
 1973              	.LVL225:
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
 1974              		.loc 1 71 0
 1975 0154 02005001 		cmpeq	r0, r2
  72:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     ++*shift;
 1976              		.loc 1 72 0
 1977 0158 0101A003 		moveq	r0, #1073741824
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 1978              		.loc 1 73 0
 1979 015c 01308302 		addeq	r3, r3, #1
 1980 0160 00308505 		streq	r3, [r5]
  86:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 1981              		.loc 1 86 0
 1982 0164 1F0073E3 		cmn	r3, #31
 1983 0168 0A0000BA 		blt	.L168
 1984              	.LBE227:
 1985              	.LBE226:
 1986              	.LBE234:
 1987              	.LBE237:
  98:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 1988              		.loc 1 98 0
 1989 016c 000053E3 		cmp	r3, #0
 1990              	.LBB238:
 1991              	.LBB235:
 1992              	.LBB232:
 1993              	.LBB230:
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 1994              		.loc 1 90 0
 1995 0170 000086E5 		str	r0, [r6]
 1996 0174 900A07EE 		vmov	s15, r0	@ int
 1997              	.LVL226:
 1998              	.LBE230:
 1999              	.LBE232:
 2000              	.LBE235:
 2001              	.LBE238:
  98:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 2002              		.loc 1 98 0
 2003 0178 0C0000BA 		blt	.L165
 2004              	.LVL227:
 2005              	.L169:
 2006 017c 1F2063E2 		rsb	r2, r3, #31
 2007 0180 0130A0E3 		mov	r3, #1
 2008 0184 1332A0E1 		lsl	r3, r3, r2
 2009 0188 E70BF8EE 		vcvt.f64.s32	d16, s15
 2010 018c 903A07EE 		vmov	s15, r3	@ int
 2011 0190 E71BF8EE 		vcvt.f64.s32	d17, s15
 2012 0194 B5FFFFEA 		b	.L164
 2013              	.LVL228:
 2014              	.L168:
 2015              	.LBB239:
 2016              	.LBB236:
 2017              	.LBB233:
 2018              	.LBB231:
  87:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed = 0;
 2019              		.loc 1 87 0
 2020 0198 0020A0E3 		mov	r2, #0
 2021 019c 002085E5 		str	r2, [r5]
 2022              	.LVL229:
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 2023              		.loc 1 90 0
 2024 01a0 0230A0E1 		mov	r3, r2
 2025 01a4 902A07EE 		vmov	s15, r2	@ int
 2026 01a8 002086E5 		str	r2, [r6]
 2027              	.LVL230:
 2028 01ac F2FFFFEA 		b	.L169
 2029              	.LVL231:
 2030              	.L165:
 2031              	.LBE231:
 2032              	.LBE233:
 2033              	.LBE236:
 2034              	.LBE239:
  96:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   QuantizeMultiplier(double_multiplier, quantized_multiplier, left_shift);
 2035              		.loc 1 96 0
 2036 01b0 FEFFFFEB 		bl	abort
 2037              	.LVL232:
 2038              	.L182:
 2039 01b4 00F020E3 		.align	3
 2040              	.L181:
 2041 01b8 0000C0FF 		.word	-4194304
 2042 01bc FFFFDF41 		.word	1105199103
 2043 01c0 00000000 		.word	0
 2044 01c4 00000000 		.word	0
 2045 01c8 00000000 		.word	0
 2046 01cc 0000E0C1 		.word	-1042284544
 2047 01d0 00000000 		.word	0
 2048 01d4 0000E041 		.word	1105199104
 2049              	.LBE240:
 2050              	.LBE242:
 2051              	.LBE245:
 2052              	.LBE266:
 2053              		.cfi_endproc
 2054              	.LFE1126:
 2055              		.fnend
 2057              		.global	__aeabi_l2d
 2058              		.section	.text._ZN6tflite20CalculateInputRadiusEiii,"ax",%progbits
 2059              		.align	2
 2060              		.global	_ZN6tflite20CalculateInputRadiusEiii
 2061              		.syntax unified
 2062              		.arm
 2063              		.fpu neon
 2065              	_ZN6tflite20CalculateInputRadiusEiii:
 2066              		.fnstart
 2067              	.LFB1127:
 316:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 317:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** int CalculateInputRadius(int input_integer_bits, int input_left_shift,
 318:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                          int total_signed_bits) {
 2068              		.loc 1 318 0
 2069              		.cfi_startproc
 2070              		@ args = 0, pretend = 0, frame = 0
 2071              		@ frame_needed = 0, uses_anonymous_args = 0
 2072              	.LVL233:
 319:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #ifdef TFLITE_EMULATE_FLOAT
 320:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   int64_t result = (1 << input_integer_bits) - 1;
 321:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   result <<= (total_signed_bits - input_integer_bits);
 322:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   result >>= input_left_shift;
 323:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   return result;
 324:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #else   // TFLITE_EMULATE_FLOAT
 325:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const double max_input_rescaled =
 326:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       1.0 * ((1 << input_integer_bits) - 1) *
 2073              		.loc 1 326 0
 2074 0000 0030E0E3 		mvn	r3, #0
 318:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #ifdef TFLITE_EMULATE_FLOAT
 2075              		.loc 1 318 0
 2076 0004 70402DE9 		push	{r4, r5, r6, lr}
 2077              		.cfi_def_cfa_offset 16
 2078              		.cfi_offset 4, -16
 2079              		.cfi_offset 5, -12
 2080              		.cfi_offset 6, -8
 2081              		.cfi_offset 14, -4
 2082              		.loc 1 326 0
 2083 0008 1330E0E1 		mvn	r3, r3, lsl r0
 327:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       (1ll << (total_signed_bits - input_integer_bits)) /
 2084              		.loc 1 327 0
 2085 000c 0140A0E3 		mov	r4, #1
 2086 0010 000042E0 		sub	r0, r2, r0
 2087              	.LVL234:
 2088 0014 0050A0E3 		mov	r5, #0
 318:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #ifdef TFLITE_EMULATE_FLOAT
 2089              		.loc 1 318 0
 2090 0018 028B2DED 		vpush.64	{d8}
 2091              		.cfi_def_cfa_offset 24
 2092              		.cfi_offset 80, -24
 2093              		.cfi_offset 81, -20
 326:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       (1ll << (total_signed_bits - input_integer_bits)) /
 2094              		.loc 1 326 0
 2095 001c 900B01EE 		vmov.32	d17[0], r0
 318:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #ifdef TFLITE_EMULATE_FLOAT
 2096              		.loc 1 318 0
 2097 0020 0160A0E1 		mov	r6, r1
 2098              	.LVL235:
 326:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       (1ll << (total_signed_bits - input_integer_bits)) /
 2099              		.loc 1 326 0
 2100 0024 304B45EC 		vmov	d16, r4, r5	@ int
 2101 0028 903A07EE 		vmov	s15, r3	@ int
 2102 002c A00471F3 		vshl.u64	d16, d16, d17
 2103 0030 E78BB8EE 		vcvt.f64.s32	d8, s15
 2104 0034 300B51EC 		vmov	r0, r1, d16	@ int
 2105              	.LVL236:
 2106 0038 FEFFFFEB 		bl	__aeabi_l2d
 2107              	.LVL237:
 2108 003c 300B41EC 		vmov	d16, r0, r1
 2109              		.loc 1 327 0
 2110 0040 1516A0E1 		lsl	r1, r5, r6
 2111 0044 203046E2 		sub	r3, r6, #32
 2112 0048 1406A0E1 		lsl	r0, r4, r6
 326:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       (1ll << (total_signed_bits - input_integer_bits)) /
 2113              		.loc 1 326 0
 2114 004c 208B28EE 		vmul.f64	d8, d8, d16
 2115              		.loc 1 327 0
 2116 0050 141381E1 		orr	r1, r1, r4, lsl r3
 2117 0054 202066E2 		rsb	r2, r6, #32
 2118 0058 341281E1 		orr	r1, r1, r4, lsr r2
 2119 005c FEFFFFEB 		bl	__aeabi_l2d
 2120              	.LVL238:
 328:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****       (1ll << input_left_shift);
 329:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // Tighten bound using floor.  Suppose that we could use the exact value.
 330:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // After scaling the difference, the result would be at the maximum.  Thus we
 331:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // must ensure that our value has lower magnitude.
 332:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   return static_cast<int>(std::floor(max_input_rescaled));
 2121              		.loc 1 332 0
 2122 0060 300B41EC 		vmov	d16, r0, r1
 2123 0064 200B88EE 		vdiv.f64	d0, d8, d16
 2124 0068 FEFFFFEB 		bl	floor
 2125              	.LVL239:
 333:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 334:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 2126              		.loc 1 334 0
 2127 006c 028BBDEC 		vldm	sp!, {d8}
 2128              		.cfi_restore 80
 2129              		.cfi_restore 81
 2130              		.cfi_def_cfa_offset 16
 2131 0070 C07BFDEE 		vcvt.s32.f64	s15, d0
 2132 0074 900A17EE 		vmov	r0, s15	@ int
 2133 0078 7080BDE8 		pop	{r4, r5, r6, pc}
 2134              		.cfi_endproc
 2135              	.LFE1127:
 2136              		.cantunwind
 2137              		.fnend
 2139              		.section	.text._ZN6tflite22NudgeQuantizationRangeEffiiPfS0_S0_,"ax",%progbits
 2140              		.align	2
 2141              		.global	_ZN6tflite22NudgeQuantizationRangeEffiiPfS0_S0_
 2142              		.syntax unified
 2143              		.arm
 2144              		.fpu neon
 2146              	_ZN6tflite22NudgeQuantizationRangeEffiiPfS0_S0_:
 2147              		.fnstart
 2148              	.LFB1128:
 335:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 336:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** void NudgeQuantizationRange(const float min, const float max,
 337:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                             const int quant_min, const int quant_max,
 338:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                             float* nudged_min, float* nudged_max,
 339:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                             float* nudged_scale) {
 2149              		.loc 1 339 0
 2150              		.cfi_startproc
 2151              		@ args = 4, pretend = 0, frame = 8
 2152              		@ frame_needed = 0, uses_anonymous_args = 0
 2153              	.LVL240:
 340:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // This code originates from tensorflow/core/kernels/fake_quant_ops_functor.h.
 341:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const float quant_min_float = static_cast<float>(quant_min);
 2154              		.loc 1 341 0
 2155 0000 900A07EE 		vmov	s15, r0	@ int
 339:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // This code originates from tensorflow/core/kernels/fake_quant_ops_functor.h.
 2156              		.loc 1 339 0
 2157 0004 70402DE9 		push	{r4, r5, r6, lr}
 2158              		.cfi_def_cfa_offset 16
 2159              		.cfi_offset 4, -16
 2160              		.cfi_offset 5, -12
 2161              		.cfi_offset 6, -8
 2162              		.cfi_offset 14, -4
 2163 0008 0260A0E1 		mov	r6, r2
 2164 000c 048B2DED 		vpush.64	{d8, d9}
 2165              		.cfi_def_cfa_offset 32
 2166              		.cfi_offset 80, -32
 2167              		.cfi_offset 81, -28
 2168              		.cfi_offset 82, -24
 2169              		.cfi_offset 83, -20
 2170 0010 08D04DE2 		sub	sp, sp, #8
 2171              		.cfi_def_cfa_offset 40
 339:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // This code originates from tensorflow/core/kernels/fake_quant_ops_functor.h.
 2172              		.loc 1 339 0
 2173 0014 0350A0E1 		mov	r5, r3
 2174              		.loc 1 341 0
 2175 0018 E78AB8EE 		vcvt.f32.s32	s16, s15
 2176              	.LVL241:
 342:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const float quant_max_float = static_cast<float>(quant_max);
 2177              		.loc 1 342 0
 2178 001c 901A07EE 		vmov	s15, r1	@ int
 2179 0020 E78AF8EE 		vcvt.f32.s32	s17, s15
 2180              	.LVL242:
 343:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *nudged_scale = (max - min) / (quant_max_float - quant_min_float);
 2181              		.loc 1 343 0
 2182 0024 C00A70EE 		vsub.f32	s1, s1, s0
 2183              	.LVL243:
 339:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // This code originates from tensorflow/core/kernels/fake_quant_ops_functor.h.
 2184              		.loc 1 339 0
 2185 0028 28409DE5 		ldr	r4, [sp, #40]
 2186 002c 03008DE8 		stm	sp, {r0, r1}
 2187              		.loc 1 343 0
 2188 0030 C87A78EE 		vsub.f32	s15, s17, s16
 2189 0034 A79A80EE 		vdiv.f32	s18, s1, s15
 344:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const float zero_point_from_min = quant_min_float - min / *nudged_scale;
 2190              		.loc 1 344 0
 2191 0038 097AC0EE 		vdiv.f32	s15, s0, s18
 343:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *nudged_scale = (max - min) / (quant_max_float - quant_min_float);
 2192              		.loc 1 343 0
 2193 003c 009A84ED 		vstr.32	s18, [r4]
 2194              		.loc 1 344 0
 2195 0040 670A38EE 		vsub.f32	s0, s16, s15
 2196              	.LVL244:
 345:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   uint16_t nudged_zero_point;
 346:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (zero_point_from_min < quant_min_float) {
 2197              		.loc 1 346 0
 2198 0044 C08AB4EE 		vcmpe.f32	s16, s0
 2199 0048 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2200 004c 050000CA 		bgt	.L196
 347:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     nudged_zero_point = static_cast<uint16_t>(quant_min);
 348:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } else if (zero_point_from_min > quant_max_float) {
 2201              		.loc 1 348 0
 2202 0050 C08AF4EE 		vcmpe.f32	s17, s0
 2203 0054 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2204 0058 0F00004A 		bmi	.L197
 2205              	.LVL245:
 2206              	.LBB267:
 2207              	.LBB268:
 2208              	.LBB269:
 2209              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef _GLIBCXX_CMATH
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #define _GLIBCXX_CMATH 1
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef abs
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR double
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(double __x)
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabs(__x); }
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(float __x)
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsf(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(long double __x)
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsl(__x); }
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     abs(_Tp __x)
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_fabs(__x); }
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acos;
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acos(float __x)
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acosf(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acos(long double __x)
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acosl(__x); }
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     acos(_Tp __x)
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_acos(__x); }
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asin;
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asin(float __x)
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinf(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asin(long double __x)
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinl(__x); }
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     asin(_Tp __x)
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_asin(__x); }
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atan;
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan(float __x)
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanf(__x); }
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan(long double __x)
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanl(__x); }
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     atan(_Tp __x)
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_atan(__x); }
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atan2;
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan2(float __y, float __x)
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan2(long double __y, long double __x)
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     atan2(_Tp __y, _Up __x)
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return atan2(__type(__y), __type(__x));
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ceil;
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ceil(float __x)
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ceilf(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ceil(long double __x)
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ceill(__x); }
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     ceil(_Tp __x)
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_ceil(__x); }
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cos;
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cos(float __x)
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cosf(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cos(long double __x)
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cosl(__x); }
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     cos(_Tp __x)
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_cos(__x); }
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cosh;
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cosh(float __x)
 227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_coshf(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cosh(long double __x)
 231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_coshl(__x); }
 232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     cosh(_Tp __x)
 239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_cosh(__x); }
 240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp;
 242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp(float __x)
 246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expf(__x); }
 247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp(long double __x)
 250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expl(__x); }
 251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     exp(_Tp __x)
 258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_exp(__x); }
 259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fabs;
 261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fabs(float __x)
 265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsf(__x); }
 266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fabs(long double __x)
 269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsl(__x); }
 270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fabs(_Tp __x)
 277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_fabs(__x); }
 278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::floor;
 280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   floor(float __x)
 284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_floorf(__x); }
 285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   floor(long double __x)
 288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_floorl(__x); }
 289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     floor(_Tp __x)
 296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_floor(__x); }
 297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmod;
 299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmod(float __x, float __y)
 303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmod(long double __x, long double __y)
 307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fmod(_Tp __x, _Up __y)
 314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fmod(__type(__x), __type(__y));
 317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::frexp;
 320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline float
 323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   frexp(float __x, int* __exp)
 324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline long double
 327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   frexp(long double __x, int* __exp)
 328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     frexp(_Tp __x, int* __exp)
 336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ldexp;
 339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ldexp(float __x, int __exp)
 343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ldexp(long double __x, int __exp)
 347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     ldexp(_Tp __x, int __exp)
 355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log;
 358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log(float __x)
 362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_logf(__x); }
 363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log(long double __x)
 366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_logl(__x); }
 367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     log(_Tp __x)
 374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_log(__x); }
 375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log10;
 377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log10(float __x)
 381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log10f(__x); }
 382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log10(long double __x)
 385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log10l(__x); }
 386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     log10(_Tp __x)
 393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_log10(__x); }
 394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::modf;
 396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline float
 399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   modf(float __x, float* __iptr)
 400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline long double
 403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   modf(long double __x, long double* __iptr)
 404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::pow;
 408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(float __x, float __y)
 412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powf(__x, __y); }
 413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(long double __x, long double __y)
 416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powl(__x, __y); }
 417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if __cplusplus < 201103L
 419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline double
 422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(double __x, int __i)
 423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powi(__x, __i); }
 424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline float
 426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(float __x, int __n)
 427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powif(__x, __n); }
 428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline long double
 430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(long double __x, int __n)
 431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powil(__x, __n); }
 432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     pow(_Tp __x, _Up __y)
 439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return pow(__type(__x), __type(__y));
 442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::sin;
 445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sin(float __x)
 449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinf(__x); }
 450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sin(long double __x)
 453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinl(__x); }
 454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     sin(_Tp __x)
 461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_sin(__x); }
 462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::sinh;
 464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sinh(float __x)
 468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinhf(__x); }
 469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sinh(long double __x)
 472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinhl(__x); }
 473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 474:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 475:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 476:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 477:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 478:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     sinh(_Tp __x)
 480:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_sinh(__x); }
 481:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 482:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::sqrt;
 483:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 484:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 485:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 486:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sqrt(float __x)
 487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sqrtf(__x); }
 488:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 489:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 490:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sqrt(long double __x)
 491:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sqrtl(__x); }
 492:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 493:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 494:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 495:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 496:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 497:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 498:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     sqrt(_Tp __x)
 499:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_sqrt(__x); }
 500:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 501:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tan;
 502:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 503:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 504:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 505:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tan(float __x)
 506:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanf(__x); }
 507:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 508:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 509:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tan(long double __x)
 510:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanl(__x); }
 511:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 512:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 513:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 514:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 515:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 516:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 517:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     tan(_Tp __x)
 518:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_tan(__x); }
 519:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 520:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tanh;
 521:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 522:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 523:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 524:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tanh(float __x)
 525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanhf(__x); }
 526:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 527:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 528:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tanh(long double __x)
 529:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanhl(__x); }
 530:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 531:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 532:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 533:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 534:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 535:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 536:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     tanh(_Tp __x)
 537:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_tanh(__x); }
 538:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 539:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_END_NAMESPACE_VERSION
 540:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** } // namespace
 541:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 542:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if _GLIBCXX_USE_C99_MATH
 543:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 544:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 545:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // These are possible macros imported from C99-land.
 546:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fpclassify
 547:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isfinite
 548:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isinf
 549:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isnan
 550:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isnormal
 551:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef signbit
 552:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isgreater
 553:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isgreaterequal
 554:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isless
 555:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef islessequal
 556:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef islessgreater
 557:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isunordered
 558:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 559:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
 560:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
 561:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 562:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 563:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if __cplusplus >= 201103L
 564:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 565:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 566:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
 567:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fpclassify(float __x)
 568:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 569:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 570:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 571:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
 572:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fpclassify(double __x)
 573:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 574:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 575:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 576:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
 577:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fpclassify(long double __x)
 578:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 579:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 580:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 581:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 582:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 583:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 584:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 585:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               int>::__type
 586:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fpclassify(_Tp __x)
 587:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 588:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 589:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 590:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 591:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 592:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isfinite(float __x)
 593:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isfinite(__x); }
 594:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 595:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 596:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isfinite(double __x)
 597:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isfinite(__x); }
 598:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 599:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 600:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isfinite(long double __x)
 601:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isfinite(__x); }
 602:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 603:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 604:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 605:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 606:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 607:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 608:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isfinite(_Tp __x)
 609:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return true; }
 610:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 611:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 612:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 613:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 614:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isinf(float __x)
 615:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isinf(__x); }
 616:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 617:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 618:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 619:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::isinf;
 620:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #else
 621:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 622:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isinf(double __x)
 623:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isinf(__x); }
 624:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 625:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 626:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 627:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isinf(long double __x)
 628:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isinf(__x); }
 629:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 630:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 631:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 632:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 633:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 634:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 635:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isinf(_Tp __x)
 636:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return false; }
 637:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 638:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 639:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 640:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 641:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnan(float __x)
 642:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnan(__x); }
 643:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 644:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 645:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 646:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::isnan;
 647:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #else
 648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 649:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnan(double __x)
 650:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnan(__x); }
 651:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 652:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 653:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnan(long double __x)
 655:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnan(__x); }
 656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 657:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 658:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 660:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 661:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 662:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnan(_Tp __x)
 663:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return false; }
 664:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 665:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 666:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 667:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnormal(float __x)
 669:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnormal(__x); }
 670:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 671:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 672:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnormal(double __x)
 673:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnormal(__x); }
 674:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 675:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 676:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnormal(long double __x)
 677:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnormal(__x); }
 678:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 679:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 680:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 681:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 682:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 683:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 684:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnormal(_Tp __x)
 685:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __x != 0 ? true : false; }
 686:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 687:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 689:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 690:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 691:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   signbit(float __x)
 692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_signbit(__x); }
 693:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 694:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 695:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   signbit(double __x)
 696:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_signbit(__x); }
 697:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 698:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 699:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   signbit(long double __x)
 700:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_signbit(__x); }
 701:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 702:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 703:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 704:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 705:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 706:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 707:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     signbit(_Tp __x)
 708:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __x < 0 ? true : false; }
 709:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 710:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 711:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 712:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 713:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreater(float __x, float __y)
 714:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 715:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 716:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 717:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreater(double __x, double __y)
 718:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 719:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 720:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 721:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreater(long double __x, long double __y)
 722:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 723:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 724:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 725:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 726:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 727:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 728:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 729:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 730:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreater(_Tp __x, _Up __y)
 731:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 732:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 733:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 734:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 735:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 736:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 737:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 738:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 739:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreaterequal(float __x, float __y)
 740:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 741:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 742:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 743:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreaterequal(double __x, double __y)
 744:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 745:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 746:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 747:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreaterequal(long double __x, long double __y)
 748:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 749:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 750:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 751:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 752:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 753:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 754:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 755:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 756:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreaterequal(_Tp __x, _Up __y)
 757:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 758:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 759:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 760:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 761:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 762:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 763:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 764:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 765:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isless(float __x, float __y)
 766:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isless(__x, __y); }
 767:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 768:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 769:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isless(double __x, double __y)
 770:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isless(__x, __y); }
 771:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 772:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 773:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isless(long double __x, long double __y)
 774:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isless(__x, __y); }
 775:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 776:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 777:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 778:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 779:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 780:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 781:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 782:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isless(_Tp __x, _Up __y)
 783:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 784:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 785:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isless(__type(__x), __type(__y));
 786:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 787:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 788:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 789:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 790:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 791:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessequal(float __x, float __y)
 792:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 793:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 794:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 795:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessequal(double __x, double __y)
 796:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 797:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 798:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 799:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessequal(long double __x, long double __y)
 800:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 801:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 802:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 803:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 804:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 805:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 806:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 807:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 808:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessequal(_Tp __x, _Up __y)
 809:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 810:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 811:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 812:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 813:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 814:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 815:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 816:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 817:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessgreater(float __x, float __y)
 818:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 819:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 820:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 821:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessgreater(double __x, double __y)
 822:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 823:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 824:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 825:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessgreater(long double __x, long double __y)
 826:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 827:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 828:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 829:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 830:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 831:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 832:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 833:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 834:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessgreater(_Tp __x, _Up __y)
 835:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 836:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 837:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 838:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 839:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 840:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 841:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 842:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 843:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isunordered(float __x, float __y)
 844:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 845:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 846:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 847:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isunordered(double __x, double __y)
 848:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 849:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 850:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 851:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isunordered(long double __x, long double __y)
 852:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 853:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 854:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 855:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 856:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 857:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 858:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 859:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 860:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isunordered(_Tp __x, _Up __y)
 861:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 862:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 863:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 864:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 865:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 866:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 867:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #else
 868:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 869:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 870:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 871:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 872:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fpclassify(_Tp __f)
 873:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 874:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 875:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 876:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 877:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 878:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 879:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 880:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 881:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 882:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isfinite(_Tp __f)
 883:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 884:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 885:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isfinite(__type(__f));
 886:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 887:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 888:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 889:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 890:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 891:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isinf(_Tp __f)
 892:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 893:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 894:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isinf(__type(__f));
 895:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 896:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 897:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 898:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 899:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 900:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnan(_Tp __f)
 901:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 902:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 903:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isnan(__type(__f));
 904:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 905:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 906:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 907:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 908:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 909:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnormal(_Tp __f)
 910:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 911:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 912:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isnormal(__type(__f));
 913:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 914:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 915:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 916:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 917:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 918:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     signbit(_Tp __f)
 919:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 920:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 921:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_signbit(__type(__f));
 922:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 923:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 924:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 925:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 926:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 927:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreater(_Tp __f1, _Tp __f2)
 928:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 929:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 930:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 931:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 932:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 933:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 934:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 935:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 936:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 937:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 938:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 939:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 940:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 941:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 942:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 943:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 944:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 945:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isless(_Tp __f1, _Tp __f2)
 946:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 947:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 948:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 949:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 950:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 951:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 952:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 953:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 954:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessequal(_Tp __f1, _Tp __f2)
 955:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 956:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 957:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 958:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 959:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 960:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 961:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 962:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 963:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 964:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 965:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 966:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 967:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 968:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 969:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 970:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 971:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 972:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isunordered(_Tp __f1, _Tp __f2)
 973:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 974:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 975:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 976:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 977:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 978:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 979:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 980:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_END_NAMESPACE_VERSION
 981:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** } // namespace
 982:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 983:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 984:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 985:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 986:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if __cplusplus >= 201103L
 987:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 988:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 989:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 990:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acosh
 991:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acoshf
 992:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acoshl
 993:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asinh
 994:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asinhf
 995:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asinhl
 996:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atanh
 997:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atanhf
 998:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atanhl
 999:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cbrt
1000:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cbrtf
1001:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cbrtl
1002:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef copysign
1003:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef copysignf
1004:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef copysignl
1005:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erf
1006:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erff
1007:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfl
1008:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfc
1009:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfcf
1010:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfcl
1011:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp2
1012:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp2f
1013:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp2l
1014:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef expm1
1015:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef expm1f
1016:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef expm1l
1017:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fdim
1018:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fdimf
1019:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fdiml
1020:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fma
1021:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmaf
1022:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmal
1023:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmax
1024:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmaxf
1025:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmaxl
1026:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmin
1027:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fminf
1028:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fminl
1029:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef hypot
1030:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef hypotf
1031:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef hypotl
1032:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ilogb
1033:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ilogbf
1034:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ilogbl
1035:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lgamma
1036:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lgammaf
1037:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lgammal
1038:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llrint
1039:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llrintf
1040:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llrintl
1041:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llround
1042:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llroundf
1043:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llroundl
1044:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log1p
1045:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log1pf
1046:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log1pl
1047:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log2
1048:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log2f
1049:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log2l
1050:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef logb
1051:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef logbf
1052:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef logbl
1053:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lrint
1054:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lrintf
1055:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lrintl
1056:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lround
1057:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lroundf
1058:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lroundl
1059:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nan
1060:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nanf
1061:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nanl
1062:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nearbyint
1063:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nearbyintf
1064:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nearbyintl
1065:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nextafter
1066:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nextafterf
1067:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nextafterl
1068:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nexttoward
1069:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nexttowardf
1070:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nexttowardl
1071:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remainder
1072:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remainderf
1073:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remainderl
1074:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remquo
1075:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remquof
1076:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remquol
1077:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef rint
1078:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef rintf
1079:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef rintl
1080:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef round
1081:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef roundf
1082:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef roundl
1083:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbln
1084:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalblnf
1085:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalblnl
1086:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbn
1087:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbnf
1088:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbnl
1089:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tgamma
1090:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tgammaf
1091:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tgammal
1092:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef trunc
1093:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef truncf
1094:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef truncl
1095:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1096:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
1097:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
1098:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
1099:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // types
1101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::double_t;
1102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::float_t;
1103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // functions
1105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acosh;
1106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acoshf;
1107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acoshl;
1108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asinh;
1110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asinhf;
1111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asinhl;
1112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atanh;
1114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atanhf;
1115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atanhl;
1116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cbrt;
1118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cbrtf;
1119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cbrtl;
1120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::copysign;
1122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::copysignf;
1123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::copysignl;
1124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erf;
1126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erff;
1127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfl;
1128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfc;
1130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfcf;
1131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfcl;
1132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp2;
1134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp2f;
1135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp2l;
1136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::expm1;
1138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::expm1f;
1139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::expm1l;
1140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fdim;
1142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fdimf;
1143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fdiml;
1144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fma;
1146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmaf;
1147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmal;
1148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmax;
1150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmaxf;
1151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmaxl;
1152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmin;
1154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fminf;
1155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fminl;
1156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::hypot;
1158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::hypotf;
1159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::hypotl;
1160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ilogb;
1162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ilogbf;
1163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ilogbl;
1164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lgamma;
1166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lgammaf;
1167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lgammal;
1168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llrint;
1170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llrintf;
1171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llrintl;
1172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llround;
1174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llroundf;
1175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llroundl;
1176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log1p;
1178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log1pf;
1179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log1pl;
1180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log2;
1182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log2f;
1183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log2l;
1184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::logb;
1186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::logbf;
1187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::logbl;
1188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lrint;
1190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lrintf;
1191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lrintl;
1192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lround;
1194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lroundf;
1195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lroundl;
1196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nan;
1198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nanf;
1199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nanl;
1200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nearbyint;
1202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nearbyintf;
1203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nearbyintl;
1204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nextafter;
1206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nextafterf;
1207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nextafterl;
1208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nexttoward;
1210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nexttowardf;
1211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nexttowardl;
1212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remainder;
1214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remainderf;
1215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remainderl;
1216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remquo;
1218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remquof;
1219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remquol;
1220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::rint;
1222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::rintf;
1223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::rintl;
1224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::round;
1226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::roundf;
1227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::roundl;
1228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbln;
1230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalblnf;
1231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalblnl;
1232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbn;
1234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbnf;
1235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbnl;
1236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tgamma;
1238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tgammaf;
1239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tgammal;
1240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::trunc;
1242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::truncf;
1243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::truncl;
1244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   /// Additional overloads.
1246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acosh(float __x)
1249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acoshf(__x); }
1250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acosh(long double __x)
1253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acoshl(__x); }
1254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     acosh(_Tp __x)
1261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_acosh(__x); }
1262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asinh(float __x)
1267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinhf(__x); }
1268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asinh(long double __x)
1271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinhl(__x); }
1272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     asinh(_Tp __x)
1279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_asinh(__x); }
1280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atanh(float __x)
1285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanhf(__x); }
1286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atanh(long double __x)
1289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanhl(__x); }
1290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     atanh(_Tp __x)
1297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_atanh(__x); }
1298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cbrt(float __x)
1303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cbrtf(__x); }
1304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cbrt(long double __x)
1307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cbrtl(__x); }
1308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     cbrt(_Tp __x)
1315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_cbrt(__x); }
1316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   copysign(float __x, float __y)
1321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_copysignf(__x, __y); }
1322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   copysign(long double __x, long double __y)
1325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_copysignl(__x, __y); }
1326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     copysign(_Tp __x, _Up __y)
1332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return copysign(__type(__x), __type(__y));
1335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erf(float __x)
1341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erff(__x); }
1342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erf(long double __x)
1345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erfl(__x); }
1346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     erf(_Tp __x)
1353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_erf(__x); }
1354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erfc(float __x)
1359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erfcf(__x); }
1360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erfc(long double __x)
1363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erfcl(__x); }
1364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     erfc(_Tp __x)
1371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_erfc(__x); }
1372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp2(float __x)
1377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_exp2f(__x); }
1378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp2(long double __x)
1381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_exp2l(__x); }
1382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     exp2(_Tp __x)
1389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_exp2(__x); }
1390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   expm1(float __x)
1395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expm1f(__x); }
1396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   expm1(long double __x)
1399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expm1l(__x); }
1400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     expm1(_Tp __x)
1407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_expm1(__x); }
1408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fdim(float __x, float __y)
1413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fdimf(__x, __y); }
1414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fdim(long double __x, long double __y)
1417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fdiml(__x, __y); }
1418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fdim(_Tp __x, _Up __y)
1424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fdim(__type(__x), __type(__y));
1427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fma(float __x, float __y, float __z)
1433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fma(long double __x, long double __y, long double __z)
1437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmal(__x, __y, __z); }
1438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmax(float __x, float __y)
1453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmaxf(__x, __y); }
1454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmax(long double __x, long double __y)
1457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmaxl(__x, __y); }
1458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fmax(_Tp __x, _Up __y)
1464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fmax(__type(__x), __type(__y));
1467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmin(float __x, float __y)
1473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fminf(__x, __y); }
1474:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1475:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1476:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmin(long double __x, long double __y)
1477:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fminl(__x, __y); }
1478:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1480:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1481:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1482:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1483:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fmin(_Tp __x, _Up __y)
1484:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1485:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1486:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fmin(__type(__x), __type(__y));
1487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1488:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1489:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1490:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1491:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1492:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   hypot(float __x, float __y)
1493:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_hypotf(__x, __y); }
1494:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1495:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1496:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   hypot(long double __x, long double __y)
1497:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_hypotl(__x, __y); }
1498:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1499:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1500:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1501:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1502:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1503:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     hypot(_Tp __x, _Up __y)
1504:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1505:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1506:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return hypot(__type(__x), __type(__y));
1507:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1508:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1509:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1510:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1511:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
1512:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ilogb(float __x)
1513:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ilogbf(__x); }
1514:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1515:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
1516:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ilogb(long double __x)
1517:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ilogbl(__x); }
1518:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1519:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1520:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1521:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1522:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr
1523:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1524:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     int>::__type
1525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     ilogb(_Tp __x)
1526:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_ilogb(__x); }
1527:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1528:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1529:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1530:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1531:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lgamma(float __x)
1532:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lgammaf(__x); }
1533:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1534:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1535:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lgamma(long double __x)
1536:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lgammal(__x); }
1537:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1538:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1539:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1540:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1541:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1542:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1543:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     lgamma(_Tp __x)
1544:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_lgamma(__x); }
1545:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1546:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1547:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1548:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long long
1549:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   llrint(float __x)
1550:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_llrintf(__x); }
1551:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1552:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long long
1553:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   llrint(long double __x)
1554:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_llrintl(__x); }
1555:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1556:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1557:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1558:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1559:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1560:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               long long>::__type
1561:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     llrint(_Tp __x)
1562:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_llrint(__x); }
1563:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1564:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1565:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1566:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long long
1567:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   llround(float __x)
1568:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_llroundf(__x); }
1569:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1570:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long long
1571:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   llround(long double __x)
1572:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_llroundl(__x); }
1573:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1574:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1575:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1576:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1577:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1578:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               long long>::__type
1579:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     llround(_Tp __x)
1580:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_llround(__x); }
1581:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1582:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1583:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1584:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1585:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log1p(float __x)
1586:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log1pf(__x); }
1587:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1588:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1589:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log1p(long double __x)
1590:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log1pl(__x); }
1591:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1592:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1593:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1594:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1595:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1596:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1597:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     log1p(_Tp __x)
1598:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_log1p(__x); }
1599:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1600:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1601:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1602:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // DR 568.
1603:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1604:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log2(float __x)
1605:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log2f(__x); }
1606:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1607:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1608:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log2(long double __x)
1609:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log2l(__x); }
1610:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1611:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1612:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1613:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1614:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1615:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1616:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     log2(_Tp __x)
1617:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_log2(__x); }
1618:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1619:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1620:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1621:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1622:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   logb(float __x)
1623:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_logbf(__x); }
1624:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1625:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1626:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   logb(long double __x)
1627:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_logbl(__x); }
1628:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1629:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1630:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1631:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1632:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1633:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1634:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     logb(_Tp __x)
1635:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_logb(__x); }
1636:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1637:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1638:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1639:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long
1640:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lrint(float __x)
1641:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lrintf(__x); }
1642:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1643:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long
1644:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lrint(long double __x)
1645:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lrintl(__x); }
1646:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1647:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1649:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1650:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1651:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               long>::__type
1652:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     lrint(_Tp __x)
1653:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_lrint(__x); }
1654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1655:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1657:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long
1658:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lround(float __x)
1659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lroundf(__x); }
1660:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1661:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long
1662:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lround(long double __x)
1663:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lroundl(__x); }
1664:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1665:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1666:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1667:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1669:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               long>::__type
1670:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     lround(_Tp __x)
1671:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_lround(__x); }
1672:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1673:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1674:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1675:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1676:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nearbyint(float __x)
1677:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nearbyintf(__x); }
1678:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1679:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1680:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nearbyint(long double __x)
1681:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nearbyintl(__x); }
1682:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1683:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1684:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1685:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1686:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1687:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     nearbyint(_Tp __x)
1689:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_nearbyint(__x); }
1690:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1691:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1693:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1694:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nextafter(float __x, float __y)
1695:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nextafterf(__x, __y); }
1696:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1697:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1698:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nextafter(long double __x, long double __y)
1699:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nextafterl(__x, __y); }
1700:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1701:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1702:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1703:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1704:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1705:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     nextafter(_Tp __x, _Up __y)
1706:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1707:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1708:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return nextafter(__type(__x), __type(__y));
1709:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1710:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1711:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1712:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1713:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1714:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nexttoward(float __x, long double __y)
1715:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nexttowardf(__x, __y); }
1716:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1717:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1718:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nexttoward(long double __x, long double __y)
1719:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nexttowardl(__x, __y); }
1720:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1721:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1722:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1723:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1724:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1725:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1726:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     nexttoward(_Tp __x, long double __y)
1727:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_nexttoward(__x, __y); }
1728:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1729:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1730:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1731:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1732:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   remainder(float __x, float __y)
1733:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_remainderf(__x, __y); }
1734:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1735:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1736:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   remainder(long double __x, long double __y)
1737:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_remainderl(__x, __y); }
1738:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1739:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1740:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1741:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1742:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1743:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     remainder(_Tp __x, _Up __y)
1744:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1745:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1746:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return remainder(__type(__x), __type(__y));
1747:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1748:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1749:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1750:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1751:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline float
1752:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   remquo(float __x, float __y, int* __pquo)
1753:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1754:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1755:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline long double
1756:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   remquo(long double __x, long double __y, int* __pquo)
1757:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1758:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1759:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1760:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1761:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1762:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1763:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1764:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1765:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1766:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1767:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1768:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1769:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1770:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1771:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1772:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   rint(float __x)
1773:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_rintf(__x); }
1774:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1775:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1776:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   rint(long double __x)
1777:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_rintl(__x); }
1778:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1779:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1780:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1781:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1782:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1783:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1784:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     rint(_Tp __x)
1785:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_rint(__x); }
1786:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1787:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1788:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1789:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1790:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   round(float __x)
1791:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_roundf(__x); }
 2210              		.loc 4 1791 0
 2211 005c FEFFFFEB 		bl	roundf
 2212              	.LVL246:
 2213              	.LBE269:
 2214              	.LBE268:
 2215              	.LBE267:
 349:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     nudged_zero_point = static_cast<uint16_t>(quant_max);
 350:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } else {
 351:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     nudged_zero_point = static_cast<uint16_t>(TfLiteRound(zero_point_from_min));
 2216              		.loc 1 351 0
 2217 0060 C07AFCEE 		vcvt.u32.f32	s15, s0
 2218 0064 007ACDED 		vstr.32	s15, [sp]	@ int
 2219              	.LVL247:
 2220              	.L196:
 2221 0068 B030DDE1 		ldrh	r3, [sp]
 2222 006c 903A07EE 		vmov	s15, r3	@ int
 2223              	.LVL248:
 2224              	.L188:
 352:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 353:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *nudged_min = (quant_min_float - nudged_zero_point) * (*nudged_scale);
 2225              		.loc 1 353 0
 2226 0070 E77AF8EE 		vcvt.f32.s32	s15, s15
 2227              	.LVL249:
 2228 0074 678A38EE 		vsub.f32	s16, s16, s15
 2229              	.LVL250:
 354:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *nudged_max = (quant_max_float - nudged_zero_point) * (*nudged_scale);
 2230              		.loc 1 354 0
 2231 0078 E77A78EE 		vsub.f32	s15, s17, s15
 353:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *nudged_max = (quant_max_float - nudged_zero_point) * (*nudged_scale);
 2232              		.loc 1 353 0
 2233 007c 098A28EE 		vmul.f32	s16, s16, s18
 2234 0080 008A86ED 		vstr.32	s16, [r6]
 2235              		.loc 1 354 0
 2236 0084 008AD4ED 		vldr.32	s17, [r4]
 2237              	.LVL251:
 2238 0088 A87A67EE 		vmul.f32	s15, s15, s17
 2239 008c 007AC5ED 		vstr.32	s15, [r5]
 355:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 2240              		.loc 1 355 0
 2241 0090 08D08DE2 		add	sp, sp, #8
 2242              		.cfi_remember_state
 2243              		.cfi_def_cfa_offset 32
 2244              		@ sp needed
 2245 0094 048BBDEC 		vldm	sp!, {d8-d9}
 2246              		.cfi_restore 82
 2247              		.cfi_restore 83
 2248              		.cfi_restore 80
 2249              		.cfi_restore 81
 2250              		.cfi_def_cfa_offset 16
 2251              	.LVL252:
 2252 0098 7080BDE8 		pop	{r4, r5, r6, pc}
 2253              	.LVL253:
 2254              	.L197:
 2255              		.cfi_restore_state
 349:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   } else {
 2256              		.loc 1 349 0
 2257 009c B430DDE1 		ldrh	r3, [sp, #4]
 2258              	.LVL254:
 2259 00a0 903A07EE 		vmov	s15, r3	@ int
 2260              	.LVL255:
 2261 00a4 F1FFFFEA 		b	.L188
 2262              		.cfi_endproc
 2263              	.LFE1128:
 2264              		.cantunwind
 2265              		.fnend
 2267              		.section	.text._ZN6tflite17FakeQuantizeArrayEfffPKfPff,"ax",%progbits
 2268              		.align	2
 2269              		.global	_ZN6tflite17FakeQuantizeArrayEfffPKfPff
 2270              		.syntax unified
 2271              		.arm
 2272              		.fpu neon
 2274              	_ZN6tflite17FakeQuantizeArrayEfffPKfPff:
 2275              		.fnstart
 2276              	.LFB1129:
 356:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 357:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** void FakeQuantizeArray(const float nudged_scale, const float nudged_min,
 358:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                        const float nudged_max, const float* input_data,
 359:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                        float* output_data, const float size) {
 2277              		.loc 1 359 0
 2278              		.cfi_startproc
 2279              		@ args = 0, pretend = 0, frame = 0
 2280              		@ frame_needed = 0, uses_anonymous_args = 0
 2281              	.LVL256:
 2282              	.LBB270:
 360:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // This code originates from tensorflow/core/kernels/fake_quant_ops_functor.h.
 361:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const float inv_nudged_scale = 1.0f / nudged_scale;
 362:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 363:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   for (int i = 0; i < size; i++) {
 2283              		.loc 1 363 0
 2284 0000 C01AF5EE 		vcmpe.f32	s3, #0
 2285              	.LBE270:
 361:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 2286              		.loc 1 361 0
 2287 0004 007AF7EE 		vmov.f32	s15, #1.0e+0
 2288              	.LBB278:
 2289              		.loc 1 363 0
 2290 0008 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2291              	.LBE278:
 359:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // This code originates from tensorflow/core/kernels/fake_quant_ops_functor.h.
 2292              		.loc 1 359 0
 2293 000c 70402DE9 		push	{r4, r5, r6, lr}
 2294              		.cfi_def_cfa_offset 16
 2295              		.cfi_offset 4, -16
 2296              		.cfi_offset 5, -12
 2297              		.cfi_offset 6, -8
 2298              		.cfi_offset 14, -4
 2299 0010 068B2DED 		vpush.64	{d8, d9, d10}
 2300              		.cfi_def_cfa_offset 40
 2301              		.cfi_offset 80, -40
 2302              		.cfi_offset 81, -36
 2303              		.cfi_offset 82, -32
 2304              		.cfi_offset 83, -28
 2305              		.cfi_offset 84, -24
 2306              		.cfi_offset 85, -20
 361:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 2307              		.loc 1 361 0
 2308 0014 80AA87EE 		vdiv.f32	s20, s15, s0
 2309              	.LVL257:
 2310              	.LBB279:
 2311              		.loc 1 363 0
 2312 0018 190000DA 		ble	.L198
 2313 001c 418AF0EE 		vmov.f32	s17, s2
 2314 0020 0060A0E1 		mov	r6, r0
 2315 0024 608AB0EE 		vmov.f32	s16, s1
 2316 0028 0150A0E1 		mov	r5, r1
 2317 002c 409AF0EE 		vmov.f32	s19, s0
 2318 0030 0040A0E3 		mov	r4, #0
 2319 0034 619AB0EE 		vmov.f32	s18, s3
 2320              	.LVL258:
 2321              	.L200:
 2322              	.LBB271:
 364:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     const float src_val = input_data[i];
 2323              		.loc 1 364 0 discriminator 2
 2324 0038 017AF6EC 		vldmia.32	r6!, {s15}
 2325              	.LBE271:
 363:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     const float src_val = input_data[i];
 2326              		.loc 1 363 0 discriminator 2
 2327 003c 014084E2 		add	r4, r4, #1
 2328 0040 E78AB4EE 		vcmpe.f32	s16, s15
 2329 0044 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2330 0048 487AF05E 		vmovpl.f32	s15, s16
 2331              	.LVL259:
 2332              	.LBB275:
 365:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     const float clamped = std::min(nudged_max, std::max(nudged_min, src_val));
 366:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     const float clamped_shifted = clamped - nudged_min;
 2333              		.loc 1 366 0 discriminator 2
 2334 004c E87AF4EE 		vcmpe.f32	s15, s17
 2335 0050 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2336 0054 687AF05E 		vmovpl.f32	s15, s17
 2337              	.LVL260:
 2338 0058 C80A37EE 		vsub.f32	s0, s15, s16
 2339              	.LBB272:
 2340              	.LBB273:
 2341              	.LBB274:
 2342              		.loc 4 1791 0 discriminator 2
 2343 005c 0A0A20EE 		vmul.f32	s0, s0, s20
 2344 0060 FEFFFFEB 		bl	roundf
 2345              	.LVL261:
 2346              	.LBE274:
 2347              	.LBE273:
 2348              	.LBE272:
 367:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     const float dst_val =
 368:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****         TfLiteRound(clamped_shifted * inv_nudged_scale) * nudged_scale +
 369:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****         nudged_min;
 2349              		.loc 1 369 0 discriminator 2
 2350 0064 487AF0EE 		vmov.f32	s15, s16
 2351              	.LBE275:
 363:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     const float src_val = input_data[i];
 2352              		.loc 1 363 0 discriminator 2
 2353 0068 104A07EE 		vmov	s14, r4	@ int
 2354              	.LBB276:
 2355              		.loc 1 369 0 discriminator 2
 2356 006c 807A49EE 		vmla.f32	s15, s19, s0
 2357              	.LVL262:
 2358              	.LBE276:
 363:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     const float src_val = input_data[i];
 2359              		.loc 1 363 0 discriminator 2
 2360 0070 C77AB8EE 		vcvt.f32.s32	s14, s14
 2361 0074 C97AB4EE 		vcmpe.f32	s14, s18
 2362 0078 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2363              	.LBB277:
 370:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     output_data[i] = dst_val;
 2364              		.loc 1 370 0 discriminator 2
 2365 007c 017AE5EC 		vstmia.32	r5!, {s15}
 2366              	.LVL263:
 2367              	.LBE277:
 363:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     const float src_val = input_data[i];
 2368              		.loc 1 363 0 discriminator 2
 2369 0080 ECFFFF4A 		bmi	.L200
 2370              	.LVL264:
 2371              	.L198:
 2372              	.LBE279:
 371:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 372:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 2373              		.loc 1 372 0
 2374 0084 068BBDEC 		vldm	sp!, {d8-d10}
 2375              		.cfi_restore 84
 2376              		.cfi_restore 85
 2377              		.cfi_restore 82
 2378              		.cfi_restore 83
 2379              		.cfi_restore 80
 2380              		.cfi_restore 81
 2381              		.cfi_def_cfa_offset 16
 2382              	.LVL265:
 2383 0088 7080BDE8 		pop	{r4, r5, r6, pc}
 2384              		.cfi_endproc
 2385              	.LFE1129:
 2386              		.cantunwind
 2387              		.fnend
 2389              		.section	.text._ZN6tflite11CheckedLog2EfPi,"ax",%progbits
 2390              		.align	2
 2391              		.global	_ZN6tflite11CheckedLog2EfPi
 2392              		.syntax unified
 2393              		.arm
 2394              		.fpu neon
 2396              	_ZN6tflite11CheckedLog2EfPi:
 2397              		.fnstart
 2398              	.LFB1130:
 373:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 374:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** bool CheckedLog2(const float x, int* log2_result) {
 2399              		.loc 1 374 0
 2400              		.cfi_startproc
 2401              		@ args = 0, pretend = 0, frame = 0
 2402              		@ frame_needed = 0, uses_anonymous_args = 0
 2403              	.LVL266:
 2404 0000 10402DE9 		push	{r4, lr}
 2405              		.cfi_def_cfa_offset 8
 2406              		.cfi_offset 4, -8
 2407              		.cfi_offset 14, -4
 2408 0004 0040A0E1 		mov	r4, r0
 2409 0008 028B2DED 		vpush.64	{d8}
 2410              		.cfi_def_cfa_offset 16
 2411              		.cfi_offset 80, -16
 2412              		.cfi_offset 81, -12
 375:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // Using TfLiteRound instead of std::round and std::log instead of
 376:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // std::log2 to work around these functions being missing in a toolchain
 377:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   // used in some TensorFlow tests as of May 2018.
 378:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const float x_log2 = std::log(x) * (1.0f / std::log(2.0f));
 2413              		.loc 1 378 0
 2414 000c 0E8A9FED 		vldr.32	s16, .L206
 2415              	.LBB280:
 2416              	.LBB281:
 362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 2417              		.loc 4 362 0
 2418 0010 FEFFFFEB 		bl	logf
 2419              	.LVL267:
 2420              	.LBE281:
 2421              	.LBE280:
 2422              		.loc 1 378 0
 2423 0014 088A20EE 		vmul.f32	s16, s0, s16
 2424              	.LVL268:
 2425              	.LBB282:
 2426              	.LBB283:
 2427              	.LBB284:
 2428              		.loc 4 1791 0
 2429 0018 480AB0EE 		vmov.f32	s0, s16
 2430 001c FEFFFFEB 		bl	roundf
 2431              	.LVL269:
 2432              	.LBE284:
 2433              	.LBE283:
 2434              	.LBE282:
 379:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const float x_log2_rounded = TfLiteRound(x_log2);
 380:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   const float x_log2_fracpart = x_log2 - x_log2_rounded;
 2435              		.loc 1 380 0
 2436 0020 408A38EE 		vsub.f32	s16, s16, s0
 2437              	.LVL270:
 381:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 382:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   *log2_result = static_cast<int>(x_log2_rounded);
 383:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   return std::abs(x_log2_fracpart) < 1e-3f;
 2438              		.loc 1 383 0
 2439 0024 097ADFED 		vldr.32	s15, .L206+4
 382:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   return std::abs(x_log2_fracpart) < 1e-3f;
 2440              		.loc 1 382 0
 2441 0028 C00ABDEE 		vcvt.s32.f32	s0, s0
 2442              	.LBB285:
 2443              	.LBB286:
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 2444              		.loc 4 92 0
 2445 002c C88AB0EE 		vabs.f32	s16, s16
 2446              	.LVL271:
 2447              	.LBE286:
 2448              	.LBE285:
 2449              		.loc 1 383 0
 2450 0030 E78AB4EE 		vcmpe.f32	s16, s15
 384:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 2451              		.loc 1 384 0
 2452 0034 028BBDEC 		vldm	sp!, {d8}
 2453              		.cfi_restore 80
 2454              		.cfi_restore 81
 2455              		.cfi_def_cfa_offset 8
 383:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 2456              		.loc 1 383 0
 2457 0038 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2458              		.loc 1 384 0
 2459 003c 0100A043 		movmi	r0, #1
 2460 0040 0000A053 		movpl	r0, #0
 382:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   return std::abs(x_log2_fracpart) < 1e-3f;
 2461              		.loc 1 382 0
 2462 0044 000A84ED 		vstr.32	s0, [r4]	@ int
 2463              		.loc 1 384 0
 2464 0048 1080BDE8 		pop	{r4, pc}
 2465              	.LVL272:
 2466              	.L207:
 2467              		.align	2
 2468              	.L206:
 2469 004c 3BAAB83F 		.word	1069066811
 2470 0050 6F12833A 		.word	981668463
 2471              		.cfi_endproc
 2472              	.LFE1130:
 2473              		.cantunwind
 2474              		.fnend
 2476              		.section	.text._ZN6tflite23QuantizeMultiplierArrayEPKdjPlPi,"ax",%progbits
 2477              		.align	2
 2478              		.global	_ZN6tflite23QuantizeMultiplierArrayEPKdjPlPi
 2479              		.syntax unified
 2480              		.arm
 2481              		.fpu neon
 2483              	_ZN6tflite23QuantizeMultiplierArrayEPKdjPlPi:
 2484              		.fnstart
 2485              	.LFB1131:
 385:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** 
 386:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** void QuantizeMultiplierArray(const double* effective_scales, size_t size,
 387:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                              int32_t* effective_scale_significand,
 388:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                              int* effective_shift) {
 2486              		.loc 1 388 0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 0
 2489              		@ frame_needed = 0, uses_anonymous_args = 0
 2490              	.LVL273:
 2491 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2492              		.save {r4, r5, r6, r7, r8, r9, r10, lr}
 2493              		.cfi_def_cfa_offset 32
 2494              		.cfi_offset 4, -32
 2495              		.cfi_offset 5, -28
 2496              		.cfi_offset 6, -24
 2497              		.cfi_offset 7, -20
 2498              		.cfi_offset 8, -16
 2499              		.cfi_offset 9, -12
 2500              		.cfi_offset 10, -8
 2501              		.cfi_offset 14, -4
 2502              	.LBB294:
 389:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   for (size_t i = 0; i < size; ++i) {
 2503              		.loc 1 389 0
 2504 0004 00A051E2 		subs	r10, r1, #0
 2505              	.LBE294:
 388:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   for (size_t i = 0; i < size; ++i) {
 2506              		.loc 1 388 0
 2507 0008 028B2DED 		vpush.64	{d8}
 2508              		.vsave {d8}
 2509              		.cfi_def_cfa_offset 40
 2510              		.cfi_offset 80, -40
 2511              		.cfi_offset 81, -36
 2512              	.LBB313:
 2513              		.loc 1 389 0
 2514 000c 2900000A 		beq	.L208
 2515              	.LBB295:
 2516              	.LBB296:
 2517              	.LBB297:
 2518              	.LBB298:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 2519              		.loc 1 68 0 discriminator 2
 2520 0010 2C8B9FED 		vldr.64	d8, .L222
 2521 0014 0050A0E1 		mov	r5, r0
 2522 0018 0260A0E1 		mov	r6, r2
 2523 001c 0340A0E1 		mov	r4, r3
 2524              	.LBE298:
 2525              	.LBE297:
 2526              	.LBE296:
 2527              	.LBE295:
 2528              		.loc 1 389 0 discriminator 2
 2529 0020 0070A0E3 		mov	r7, #0
 2530              	.LBB310:
 2531              	.LBB307:
 2532              	.LBB304:
 2533              	.LBB301:
  70:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (q_fixed == (1ll << 31)) {
 2534              		.loc 1 70 0 discriminator 2
 2535 0024 0281A0E3 		mov	r8, #-2147483648
 2536 0028 0090A0E3 		mov	r9, #0
 2537 002c 070000EA 		b	.L218
 2538              	.LVL274:
 2539              	.L220:
 2540              	.LBE301:
 2541              	.LBE304:
  56:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 2542              		.loc 1 56 0
 2543 0030 0030A0E3 		mov	r3, #0
 2544 0034 003086E5 		str	r3, [r6]
  57:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     return;
 2545              		.loc 1 57 0
 2546 0038 003084E5 		str	r3, [r4]
 2547              	.LVL275:
 2548              	.L211:
 2549              	.LBE307:
 2550              	.LBE310:
 2551              		.loc 1 389 0 discriminator 2
 2552 003c 017087E2 		add	r7, r7, #1
 2553              	.LVL276:
 2554 0040 046086E2 		add	r6, r6, #4
 2555 0044 07005AE1 		cmp	r10, r7
 2556 0048 044084E2 		add	r4, r4, #4
 2557 004c 1900000A 		beq	.L208
 2558              	.LVL277:
 2559              	.L218:
 2560 0050 20F0D5F5 		pld	[r5, #32]
 390:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     QuantizeMultiplier(effective_scales[i], &effective_scale_significand[i],
 2561              		.loc 1 390 0 discriminator 2
 2562 0054 020BB5EC 		vldmia.64	r5!, {d0}
 2563              	.LVL278:
 2564              	.LBB311:
 2565              	.LBB308:
  55:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *quantized_multiplier = 0;
 2566              		.loc 1 55 0 discriminator 2
 2567 0058 400BB5EE 		vcmp.f64	d0, #0
 2568 005c 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2569 0060 F2FFFF0A 		beq	.L220
 2570              	.LVL279:
 2571              	.LBB305:
 2572              	.LBB302:
  67:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   auto q_fixed = static_cast<int64_t>(TfLiteRound(q * (1ll << 31)));
 2573              		.loc 1 67 0
 2574 0064 0400A0E1 		mov	r0, r4
 2575 0068 FEFFFFEB 		bl	frexp
 2576              	.LVL280:
 2577              	.LBB299:
 2578              	.LBB300:
 2579              		.loc 2 36 0
 2580 006c 080B20EE 		vmul.f64	d0, d0, d8
 2581              	.LVL281:
 2582 0070 FEFFFFEB 		bl	round
 2583              	.LVL282:
 2584              	.LBE300:
 2585              	.LBE299:
  68:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** #endif  // TFLITE_EMULATE_FLOAT
 2586              		.loc 1 68 0
 2587 0074 100B51EC 		vmov	r0, r1, d0
 2588 0078 FEFFFFEB 		bl	__aeabi_d2lz
 2589              	.LVL283:
  70:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (q_fixed == (1ll << 31)) {
 2590              		.loc 1 70 0
 2591 007c 000058E1 		cmp	r8, r0
 2592 0080 0130D9E0 		sbcs	r3, r9, r1
 2593 0084 0D0000BA 		blt	.L221
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 2594              		.loc 1 73 0
 2595 0088 003094E5 		ldr	r3, [r4]
 2596              	.LVL284:
  71:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed /= 2;
 2597              		.loc 1 71 0
 2598 008c 090051E1 		cmp	r1, r9
 2599 0090 08005001 		cmpeq	r0, r8
  72:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     ++*shift;
 2600              		.loc 1 72 0
 2601 0094 0101A003 		moveq	r0, #1073741824
  73:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 2602              		.loc 1 73 0
 2603 0098 01308302 		addeq	r3, r3, #1
 2604 009c 00308405 		streq	r3, [r4]
 2605              	.LVL285:
  86:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     *shift = 0;
 2606              		.loc 1 86 0
 2607 00a0 1F0073E3 		cmn	r3, #31
  87:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****     q_fixed = 0;
 2608              		.loc 1 87 0
 2609 00a4 0030A0B3 		movlt	r3, #0
 2610 00a8 0300A0B1 		movlt	r0, r3
 2611 00ac 003084B5 		strlt	r3, [r4]
 2612              	.LVL286:
  90:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 2613              		.loc 1 90 0
 2614 00b0 000086E5 		str	r0, [r6]
 2615 00b4 E0FFFFEA 		b	.L211
 2616              	.LVL287:
 2617              	.L208:
 2618              	.LBE302:
 2619              	.LBE305:
 2620              	.LBE308:
 2621              	.LBE311:
 2622              	.LBE313:
 391:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****                        &effective_shift[i]);
 392:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   }
 393:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp **** }
 2623              		.loc 1 393 0
 2624 00b8 028BBDEC 		vldm	sp!, {d8}
 2625              		.cfi_remember_state
 2626              		.cfi_restore 80
 2627              		.cfi_restore 81
 2628              		.cfi_def_cfa_offset 32
 2629 00bc F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2630              	.LVL288:
 2631              	.L221:
 2632              		.cfi_restore_state
 2633              	.LBB314:
 2634              	.LBB312:
 2635              	.LBB309:
 2636              	.LBB306:
 2637              	.LBB303:
  70:../src/tensorflow_lite/src/tensorflow/lite/kernels/internal/quantization_util.cpp ****   if (q_fixed == (1ll << 31)) {
 2638              		.loc 1 70 0
 2639 00c0 FEFFFFEB 		bl	abort
 2640              	.LVL289:
 2641              	.L223:
 2642 00c4 00F020E3 		.align	3
 2643              	.L222:
 2644 00c8 00000000 		.word	0
 2645 00cc 0000E041 		.word	1105199104
 2646              	.LBE303:
 2647              	.LBE306:
 2648              	.LBE309:
 2649              	.LBE312:
 2650              	.LBE314:
 2651              		.cfi_endproc
 2652              	.LFE1131:
 2653              		.fnend
 2655              		.text
 2656              	.Letext0:
 2657              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2658              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2659              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2660              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2661              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2662              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2663              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2664              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2665              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2666              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2667              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2668              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2669              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2670              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2671              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 2672              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2673              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2674              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2675              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2676              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2677              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2678              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2679              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2680              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2681              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2682              		.file 30 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 quantization_util.cpp
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:18     .text._ZN6tflite18QuantizeMultiplierEdPlPi:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:24     .text._ZN6tflite18QuantizeMultiplierEdPlPi:00000000 _ZN6tflite18QuantizeMultiplierEdPlPi
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:116    .text._ZN6tflite18QuantizeMultiplierEdPlPi:00000090 $d
.ARM.exidx.text._ZN6tflite18QuantizeMultiplierEdPlPi:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:125    .text._ZN6tflite32QuantizeMultiplierGreaterThanOneEdPlPi:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:131    .text._ZN6tflite32QuantizeMultiplierGreaterThanOneEdPlPi:00000000 _ZN6tflite32QuantizeMultiplierGreaterThanOneEdPlPi
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:252    .text._ZN6tflite32QuantizeMultiplierGreaterThanOneEdPlPi:000000a8 $d
.ARM.exidx.text._ZN6tflite32QuantizeMultiplierGreaterThanOneEdPlPi:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:259    .text._ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPlPi:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:265    .text._ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPlPi:00000000 _ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPlPi
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:402    .text._ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPlPi:000000b0 $d
.ARM.exidx.text._ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPlPi:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:409    .text._ZN6tflite12IntegerFrExpEdPi:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:415    .text._ZN6tflite12IntegerFrExpEdPi:00000000 _ZN6tflite12IntegerFrExpEdPi
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:547    .text._ZN6tflite12IntegerFrExpEdPi:000000f8 $d
.ARM.exidx.text._ZN6tflite12IntegerFrExpEdPi:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:555    .text._ZN6tflite26DoubleFromFractionAndShiftExi:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:561    .text._ZN6tflite26DoubleFromFractionAndShiftExi:00000000 _ZN6tflite26DoubleFromFractionAndShiftExi
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:755    .text._ZN6tflite26DoubleFromFractionAndShiftExi:00000158 $d
.ARM.exidx.text._ZN6tflite26DoubleFromFractionAndShiftExi:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:773    .text._ZN6tflite21IntegerDoubleMultiplyEdd:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:779    .text._ZN6tflite21IntegerDoubleMultiplyEdd:00000000 _ZN6tflite21IntegerDoubleMultiplyEdd
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:1162   .text._ZN6tflite21IntegerDoubleMultiplyEdd:000002b0 $d
.ARM.exidx.text._ZN6tflite21IntegerDoubleMultiplyEdd:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:1182   .text._ZN6tflite20IntegerDoubleCompareEdd:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:1188   .text._ZN6tflite20IntegerDoubleCompareEdd:00000000 _ZN6tflite20IntegerDoubleCompareEdd
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:1503   .text._ZN6tflite20IntegerDoubleCompareEdd:00000220 $d
.ARM.exidx.text._ZN6tflite20IntegerDoubleCompareEdd:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:1513   .text._ZN6tflite24PreprocessSoftmaxScalingEddiPlPi:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:1519   .text._ZN6tflite24PreprocessSoftmaxScalingEddiPlPi:00000000 _ZN6tflite24PreprocessSoftmaxScalingEddiPlPi
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:1688   .text._ZN6tflite24PreprocessSoftmaxScalingEddiPlPi:000000d8 $d
.ARM.exidx.text._ZN6tflite24PreprocessSoftmaxScalingEddiPlPi:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:1699   .text._ZN6tflite30PreprocessLogSoftmaxScalingExpEddiPlPiS0_S1_:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:1705   .text._ZN6tflite30PreprocessLogSoftmaxScalingExpEddiPlPiS0_S1_:00000000 _ZN6tflite30PreprocessLogSoftmaxScalingExpEddiPlPiS0_S1_
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2041   .text._ZN6tflite30PreprocessLogSoftmaxScalingExpEddiPlPiS0_S1_:000001b8 $d
.ARM.exidx.text._ZN6tflite30PreprocessLogSoftmaxScalingExpEddiPlPiS0_S1_:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2059   .text._ZN6tflite20CalculateInputRadiusEiii:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2065   .text._ZN6tflite20CalculateInputRadiusEiii:00000000 _ZN6tflite20CalculateInputRadiusEiii
.ARM.exidx.text._ZN6tflite20CalculateInputRadiusEiii:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2140   .text._ZN6tflite22NudgeQuantizationRangeEffiiPfS0_S0_:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2146   .text._ZN6tflite22NudgeQuantizationRangeEffiiPfS0_S0_:00000000 _ZN6tflite22NudgeQuantizationRangeEffiiPfS0_S0_
.ARM.exidx.text._ZN6tflite22NudgeQuantizationRangeEffiiPfS0_S0_:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2268   .text._ZN6tflite17FakeQuantizeArrayEfffPKfPff:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2274   .text._ZN6tflite17FakeQuantizeArrayEfffPKfPff:00000000 _ZN6tflite17FakeQuantizeArrayEfffPKfPff
.ARM.exidx.text._ZN6tflite17FakeQuantizeArrayEfffPKfPff:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2390   .text._ZN6tflite11CheckedLog2EfPi:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2396   .text._ZN6tflite11CheckedLog2EfPi:00000000 _ZN6tflite11CheckedLog2EfPi
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2469   .text._ZN6tflite11CheckedLog2EfPi:0000004c $d
.ARM.exidx.text._ZN6tflite11CheckedLog2EfPi:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2477   .text._ZN6tflite23QuantizeMultiplierArrayEPKdjPlPi:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2483   .text._ZN6tflite23QuantizeMultiplierArrayEPKdjPlPi:00000000 _ZN6tflite23QuantizeMultiplierArrayEPKdjPlPi
C:\Users\a5050395\AppData\Local\Temp\ccKP7fUJ.s:2644   .text._ZN6tflite23QuantizeMultiplierArrayEPKdjPlPi:000000c8 $d
.ARM.exidx.text._ZN6tflite23QuantizeMultiplierArrayEPKdjPlPi:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.3e1481985cce1e923928453d8be0a65b
                           .group:00000000 wm4.cconfig.h.31.1472b8c7bd4952a63a52f3f4f718f872
                           .group:00000000 wm4.cpu_defines.h.31.54d44f9d3e7c42875c5a7fd49795eb93
                           .group:00000000 wm4.cconfig.h.515.5e729db314ae74226e291b4ae081e353
                           .group:00000000 wm4.cpp_type_traits.h.33.9f2bfd8c4471a9a299f6da3ec24c745c
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.newlib.h.21.59901f4bf241ab46c63694665baa7297
                           .group:00000000 wm4.features.h.22.37852b648068a281464730a5a4cc748e
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:00000000 wm4.stddef.h.39.fa2e86d241f4df50b9327c72832885e1
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.cdefs.h.47.9bc8274c84fddbf05edd550eb0bf48cd
                           .group:00000000 wm4.math.h.13.e7cbdea54f4da98ab8f7fad4d23502b2
                           .group:00000000 wm4.cmath.46.d6e5b776115d39075860ed881d18f087
                           .group:00000000 wm4.stdint.h.4.659be5aa44c4ab4eb7c7cc2b24d8ceee
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.limits.38.55aefcf041805b6211ca3649dd2ab1b5
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stddef.h.161.38688f2eb958a8ed58fdb61ffe554c94
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.7ccf35811a8d906c9cfd8de381f5758a
                           .group:00000000 wm4.cstdio.45.ba8d321feb18bfc8923454067605c368
                           .group:00000000 wm4.cstdlib.44.52c5efdfb0f3c176bd11e611a0b94959
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stdlib.h.56.b4ddaf162082f284ba35b4444af99a9a
                           .group:00000000 wm4.cstdlib.76.ae666499c8f9b0ace1b4b23fe143da2c
                           .group:00000000 wm4.op_macros.h.42.7b718cb416a067e7bb07e7699647769b
                           .group:00000000 wm4.compatibility.h.23.702d6356326ea59aded8ef5c6c4626d5
                           .group:00000000 wm4.cmath.44.b3bcbb5fe53ec6617dec8aa8eb7b03cc
                           .group:00000000 wm4.cppmath.h.27.51580d700716589df4b364298e2ef577
                           .group:00000000 wm4.concept_check.h.31.f19605d278e56917c68a56d378be308c
                           .group:00000000 wm4.type_traits.30.2c7323a483bcd7601e8b71d2546ae284
                           .group:00000000 wm4.move.h.152.41d7b9e6779674d169b7813982cfa003
                           .group:00000000 wm4.exception_defines.h.31.ca6841b9be3287386aafc5c717935b2e
                           .group:00000000 wm4.numeric_traits.h.30.aa01a98564b7e55086aad9e53c7e5c53
                           .group:00000000 wm4.assertions.h.30.51d443923f0d242550e04246a7819b39
                           .group:00000000 wm4.stl_iterator.h.1250.45f349a262f1b0d836d8edbc4b7b98ff
                           .group:00000000 wm4.debug.h.30.5c1f223b12199e851d4d42805b788ccf
                           .group:00000000 wm4.stl_algobase.h.491.aa250b69c90aafa2a0a62b8c58cd5f30
                           .group:00000000 wm4.atomic_lockfree_defines.h.31.d5c6334fb1e95c9462b052951f1411df
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.cstring.45.6ab09de7fb97b576e744347688ddc8d7

UNDEFINED SYMBOLS
__aeabi_d2lz
frexp
round
abort
__aeabi_unwind_cpp_pr0
__aeabi_l2d
floor
roundf
logf
