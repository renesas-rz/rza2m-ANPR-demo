   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"add_n.cc"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode:
  23              		.fnstart
  24              	.LFB4170:
  25              		.file 1 "../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc"
   1:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
   3:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** you may not use this file except in compliance with the License.
   5:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** You may obtain a copy of the License at
   6:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
   7:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
   9:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** See the License for the specific language governing permissions and
  13:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** limitations under the License.
  14:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** ==============================================================================*/
  15:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  16:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** #include "tensorflow/lite/kernels/internal/reference/add_n.h"
  17:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  18:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** #include <cstdint>
  19:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  20:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** #include "tensorflow/lite/c/common.h"
  21:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  22:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** #include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
  23:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** #include "tensorflow/lite/kernels/kernel_util.h"
  24:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** #include "tensorflow/lite/micro/kernels/kernel_util.h"
  25:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  26:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** namespace tflite {
  27:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** namespace {
  28:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  29:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** constexpr int kInputTensor0 = 0;
  30:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** constexpr int kOutputTensor = 0;
  31:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  32:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** constexpr int kAddNIntegerShift = 20;
  33:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  34:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** // only used with INT8 tensors
  35:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** struct OpData {
  36:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int32_t output_activation_min;
  37:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int32_t output_activation_max;
  38:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int32_t input_offset;
  39:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int32_t output_offset;
  40:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int32_t input_multiplier;
  41:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int32_t output_multiplier;
  42:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int input_shift;
  43:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int output_shift;
  44:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int left_shift;
  45:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int scratch_index;
  46:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** };
  47:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  48:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** TfLiteStatus CalculateOpData(TfLiteContext* context, TfLiteNode* node) {
  49:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int num_inputs = NumInputs(node);
  50:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   TF_LITE_ENSURE(context, num_inputs >= 2);
  51:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  52:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  53:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const TfLiteTensor* input_tensor_first;
  54:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   TF_LITE_ENSURE_OK(
  55:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****       context, GetInputSafe(context, node, kInputTensor0, &input_tensor_first));
  56:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   TfLiteTensor* output;
  57:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   TF_LITE_ENSURE_OK(context,
  58:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                     GetOutputSafe(context, node, kOutputTensor, &output));
  59:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  60:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   // Check that all tensors have the same shape and type.
  61:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   TF_LITE_ENSURE_TYPES_EQ(context, output->type, input_tensor_first->type);
  62:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   for (int i = kInputTensor0 + 1; i < num_inputs; ++i) {
  63:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const TfLiteTensor* input;
  64:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, i, &input));
  65:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_ENSURE(context, HaveSameShapes(input_tensor_first, input));
  66:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_ENSURE_TYPES_EQ(context, input_tensor_first->type, input->type);
  67:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  68:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     // Check that all INT8 input tensors have the same zero-point and scale.
  69:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     if (input_tensor_first->type == kTfLiteInt8) {
  70:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****       TF_LITE_ENSURE(context, input_tensor_first->params.zero_point ==
  71:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                                   input->params.zero_point);
  72:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****       TF_LITE_ENSURE(context,
  73:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                      input_tensor_first->params.scale == input->params.scale);
  74:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     }
  75:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   }
  76:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  77:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   if (output->type == kTfLiteFloat32) {
  78:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     // Allocate scratch buffer space for pointer to each tensor's data
  79:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     // and store the scratch buffer index in the node's user_data
  80:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     int scratch_index;
  81:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     size_t scratch_size = sizeof(float*) * num_inputs;
  82:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_ENSURE_OK(context, context->RequestScratchBufferInArena(
  83:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                                    context, scratch_size, &scratch_index));
  84:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     node->user_data =
  85:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         reinterpret_cast<decltype(node->user_data)>(scratch_index);
  86:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   } else if (output->type == kTfLiteInt8) {
  87:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     node->user_data =
  88:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         context->AllocatePersistentBuffer(context, sizeof(OpData));
  89:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     OpData* data = static_cast<OpData*>(node->user_data);
  90:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  91:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     // Allocate scratch buffer space for pointer to each tensor's data
  92:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     // and store the scratch buffer index in OpData
  93:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     size_t scratch_size = sizeof(int8_t*) * num_inputs;
  94:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_ENSURE_OK(
  95:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         context, context->RequestScratchBufferInArena(context, scratch_size,
  96:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                                                       &data->scratch_index));
  97:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  98:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     // 8bit -> 8bit general quantized path, with general rescalings
  99:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     data->input_offset = -input_tensor_first->params.zero_point;
 100:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     data->output_offset = output->params.zero_point;
 101:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     data->left_shift = kAddNIntegerShift;
 102:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const double twice_max_input_scale =
 103:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         2 * static_cast<double>(input_tensor_first->params.scale);
 104:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const double real_input_multiplier =
 105:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         static_cast<double>(input_tensor_first->params.scale) /
 106:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         twice_max_input_scale;
 107:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const double real_output_multiplier =
 108:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         twice_max_input_scale /
 109:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         ((1 << data->left_shift) * static_cast<double>(output->params.scale));
 110:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 111:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     QuantizeMultiplierSmallerThanOneExp(
 112:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         real_input_multiplier, &data->input_multiplier, &data->input_shift);
 113:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 114:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     QuantizeMultiplierSmallerThanOneExp(
 115:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         real_output_multiplier, &data->output_multiplier, &data->output_shift);
 116:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 117:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_ENSURE_STATUS(CalculateActivationRangeQuantized(
 118:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         context, kTfLiteActNone, output, &data->output_activation_min,
 119:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         &data->output_activation_max));
 120:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   } else {
 121:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_KERNEL_LOG(context, "ADD_N only supports FLOAT32 and INT8, got %s.",
 122:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                        TfLiteTypeGetName(output->type));
 123:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     return kTfLiteError;
 124:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   }
 125:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 126:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   return kTfLiteOk;
 127:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** }
 128:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 129:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {
  26              		.loc 1 129 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31              	.LBB133:
  32              	.LBB134:
  33              	.LBB135:
  34              	.LBB136:
  35              		.file 2 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tenso
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #define TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include <stdint.h>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include <limits>
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** namespace tflite {
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // A fair number of functions in this header have historically been inline.
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // It is ok to change functions to not be inline if the latency with
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // benchmark_model for MobileNet + MobileBERT is unaffected. If such a change is
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // made, move the newly non-inlined function declarations to the top of this
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // header file.
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetInput(context, node, kMyTensorIdx);
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetInput(const TfLiteContext* context,
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                              const TfLiteNode* node, int index);
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetInput` but returns boolean and uses output argument for tensor.
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetInputSafe(context, node, kMyTensorIdx, &my_tensor));
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                           int index, const TfLiteTensor** tensor);
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetVariableInput(context, node, kMyTensorIdx);
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                int index);
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOutput(context, node, kMyTensorIdx);
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                         int index);
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetOutput` but returns boolean and uses output argument for tensor.
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetOutputSafe(context, node, kMyTensorIdx, &my_tensor));
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                            int index, TfLiteTensor** tensor);
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOptionalInputTensor(context, node, kIdx);
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Deprecated. GetInput has the same functionality.
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                            const TfLiteNode* node, int index);
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetTemporary(context, node, kMyTensorIdx);
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                            int index);
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetTemporary` but returns boolean and uses output argument for
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetTemporarySafe(context, node, kMyTensorIdx,
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                               const TfLiteNode* node, int index,
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                               TfLiteTensor** tensor);
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetIntermediates(context, node, kMyTensorIdx);
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                      const TfLiteNode* node, int index);
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetIntermediates` but returns boolean and uses output argument for
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetIntermediatesSafe(context, node, kMyTensorIdx,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                   const TfLiteNode* node, int index,
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                   TfLiteTensor** tensor);
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumDimensions(const TfLiteTensor* t) { return t->dims->size; }
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****   return t->dims->data[dim];
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumInputs(const TfLiteNode* node) { return node->inputs->size; }
  36              		.loc 2 152 0
  37 0000 003091E5 		ldr	r3, [r1]
  38              	.LBE136:
  39              	.LBE135:
  40              	.LBE134:
  41              	.LBE133:
  42              		.loc 1 129 0
  43 0004 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
  44              		.save {r4, r5, r6, r7, r8, lr}
  45              		.cfi_def_cfa_offset 24
  46              		.cfi_offset 4, -24
  47              		.cfi_offset 5, -20
  48              		.cfi_offset 6, -16
  49              		.cfi_offset 7, -12
  50              		.cfi_offset 8, -8
  51              		.cfi_offset 14, -4
  52 0008 0060A0E1 		mov	r6, r0
  53              	.LVL1:
  54 000c 028B2DED 		vpush.64	{d8}
  55              		.vsave {d8}
  56              		.cfi_def_cfa_offset 32
  57              		.cfi_offset 80, -32
  58              		.cfi_offset 81, -28
  59              		.pad #32
  60 0010 20D04DE2 		sub	sp, sp, #32
  61              		.cfi_def_cfa_offset 64
  62              	.LBB168:
  63              	.LBB166:
  64              	.LBB138:
  65              	.LBB137:
  66              		.loc 2 152 0
  67 0014 008093E5 		ldr	r8, [r3]
  68              	.LBE137:
  69              	.LBE138:
  50:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  70              		.loc 1 50 0
  71 0018 010058E3 		cmp	r8, #1
  72 001c 620000DA 		ble	.L18
  73              	.LBB139:
  74              	.LBB140:
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
  75              		.loc 2 153 0
  76 0020 043091E5 		ldr	r3, [r1, #4]
  77 0024 0170A0E1 		mov	r7, r1
  78              	.LVL2:
  79 0028 005093E5 		ldr	r5, [r3]
  80              	.LBE140:
  81              	.LBE139:
  51:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
  82              		.loc 1 51 0
  83 002c 010055E3 		cmp	r5, #1
  84 0030 1300000A 		beq	.L4
  85              	.LVL3:
  86 0034 00C000E3 		movw	ip, #:lower16:.LC5
  87 0038 003000E3 		movw	r3, #:lower16:.LC6
  88 003c 003040E3 		movt	r3, #:upper16:.LC6
  89 0040 00C040E3 		movt	ip, #:upper16:.LC5
  90 0044 0140A0E3 		mov	r4, #1
  91 0048 002000E3 		movw	r2, #:lower16:.LC1
  92 004c 001000E3 		movw	r1, #:lower16:.LC4
  93              	.LVL4:
  94 0050 08508DE5 		str	r5, [sp, #8]
  95 0054 002040E3 		movt	r2, #:upper16:.LC1
  96 0058 145090E5 		ldr	r5, [r0, #20]
  97 005c 001040E3 		movt	r1, #:upper16:.LC4
  98 0060 00308DE5 		str	r3, [sp]
  99 0064 04C08DE5 		str	ip, [sp, #4]
 100 0068 3330A0E3 		mov	r3, #51
 101 006c 0C408DE5 		str	r4, [sp, #12]
 102 0070 35FF2FE1 		blx	r5
 103              	.LVL5:
 104              	.L3:
 105              	.LBE166:
 106              	.LBE168:
 130:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   return CalculateOpData(context, node);
 131:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** }
 107              		.loc 1 131 0
 108 0074 0400A0E1 		mov	r0, r4
 109 0078 20D08DE2 		add	sp, sp, #32
 110              		.cfi_remember_state
 111              		.cfi_def_cfa_offset 32
 112              		@ sp needed
 113 007c 028BBDEC 		vldm	sp!, {d8}
 114              		.cfi_restore 80
 115              		.cfi_restore 81
 116              		.cfi_def_cfa_offset 24
 117 0080 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 118              	.LVL6:
 119              	.L4:
 120              		.cfi_restore_state
 121              	.LBB169:
 122              	.LBB167:
 123              	.LBB141:
  54:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****       context, GetInputSafe(context, node, kInputTensor0, &input_tensor_first));
 124              		.loc 1 54 0
 125 0084 14308DE2 		add	r3, sp, #20
 126 0088 0020A0E3 		mov	r2, #0
 127 008c FEFFFFEB 		bl	_ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor
 128              	.LVL7:
 129 0090 004050E2 		subs	r4, r0, #0
 130 0094 F6FFFF1A 		bne	.L3
 131              	.LBE141:
 132              	.LBB142:
  57:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                     GetOutputSafe(context, node, kOutputTensor, &output));
 133              		.loc 1 57 0
 134 0098 0420A0E1 		mov	r2, r4
 135 009c 18308DE2 		add	r3, sp, #24
 136 00a0 0710A0E1 		mov	r1, r7
 137 00a4 0600A0E1 		mov	r0, r6
 138              	.LVL8:
 139 00a8 FEFFFFEB 		bl	_ZN6tflite13GetOutputSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor
 140              	.LVL9:
 141 00ac 004050E2 		subs	r4, r0, #0
 142 00b0 EFFFFF1A 		bne	.L3
 143              	.LBE142:
  61:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   for (int i = kInputTensor0 + 1; i < num_inputs; ++i) {
 144              		.loc 1 61 0
 145 00b4 18209DE5 		ldr	r2, [sp, #24]
 146 00b8 14309DE5 		ldr	r3, [sp, #20]
 147 00bc 0000D2E5 		ldrb	r0, [r2]	@ zero_extendqisi2
 148              	.LVL10:
 149 00c0 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 150 00c4 000053E1 		cmp	r3, r0
 151 00c8 2100000A 		beq	.L12
 152 00cc 147096E5 		ldr	r7, [r6, #20]
 153              	.LVL11:
 154 00d0 0540A0E1 		mov	r4, r5
 155 00d4 FEFFFFEB 		bl	TfLiteTypeGetName
 156              	.LVL12:
 157 00d8 14309DE5 		ldr	r3, [sp, #20]
 158 00dc 0080A0E1 		mov	r8, r0
 159 00e0 0000D3E5 		ldrb	r0, [r3]	@ zero_extendqisi2
 160 00e4 FEFFFFEB 		bl	TfLiteTypeGetName
 161              	.LVL13:
 162 00e8 00C000E3 		movw	ip, #:lower16:.LC8
 163 00ec 003000E3 		movw	r3, #:lower16:.LC9
 164 00f0 00C040E3 		movt	ip, #:upper16:.LC8
 165 00f4 003040E3 		movt	r3, #:upper16:.LC9
 166 00f8 002000E3 		movw	r2, #:lower16:.LC1
 167 00fc 001000E3 		movw	r1, #:lower16:.LC7
 168 0100 0C008DE5 		str	r0, [sp, #12]
 169 0104 002040E3 		movt	r2, #:upper16:.LC1
 170 0108 00308DE5 		str	r3, [sp]
 171 010c 0600A0E1 		mov	r0, r6
 172 0110 08808DE5 		str	r8, [sp, #8]
 173 0114 001040E3 		movt	r1, #:upper16:.LC7
 174 0118 04C08DE5 		str	ip, [sp, #4]
 175 011c 3D30A0E3 		mov	r3, #61
 176 0120 37FF2FE1 		blx	r7
 177              	.LVL14:
 178 0124 D2FFFFEA 		b	.L3
 179              	.LVL15:
 180              	.L24:
 181              	.LBB143:
 182              	.LBB144:
  70:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                                   input->params.zero_point);
 183              		.loc 1 70 0
 184 0128 100091E5 		ldr	r0, [r1, #16]
 185 012c 103092E5 		ldr	r3, [r2, #16]
 186 0130 030050E1 		cmp	r0, r3
 187 0134 9700001A 		bne	.L19
  72:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                      input_tensor_first->params.scale == input->params.scale);
 188              		.loc 1 72 0
 189 0138 037A91ED 		vldr.32	s14, [r1, #12]
 190 013c 037AD2ED 		vldr.32	s15, [r2, #12]
 191 0140 677AB4EE 		vcmp.f32	s14, s15
 192 0144 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 193 0148 2300001A 		bne	.L20
 194              	.L9:
 195              	.LBE144:
  62:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const TfLiteTensor* input;
 196              		.loc 1 62 0
 197 014c 050058E1 		cmp	r8, r5
 198 0150 2E00000A 		beq	.L21
 199              	.LVL16:
 200              	.L12:
 201              	.LBB147:
 202              	.LBB145:
  64:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_ENSURE(context, HaveSameShapes(input_tensor_first, input));
 203              		.loc 1 64 0
 204 0154 0520A0E1 		mov	r2, r5
 205 0158 1C308DE2 		add	r3, sp, #28
 206 015c 0710A0E1 		mov	r1, r7
 207 0160 0600A0E1 		mov	r0, r6
 208 0164 FEFFFFEB 		bl	_ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor
 209              	.LVL17:
 210 0168 004050E2 		subs	r4, r0, #0
 211              	.LBE145:
 212              	.LBE147:
  62:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const TfLiteTensor* input;
 213              		.loc 1 62 0
 214 016c 015085E2 		add	r5, r5, #1
 215              	.LVL18:
 216              	.LBB148:
 217              	.LBB146:
  64:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_ENSURE(context, HaveSameShapes(input_tensor_first, input));
 218              		.loc 1 64 0
 219 0170 BFFFFF1A 		bne	.L3
 220              	.LBE146:
  65:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_ENSURE_TYPES_EQ(context, input_tensor_first->type, input->type);
 221              		.loc 1 65 0
 222 0174 1C109DE5 		ldr	r1, [sp, #28]
 223 0178 14009DE5 		ldr	r0, [sp, #20]
 224              	.LVL19:
 225 017c FEFFFFEB 		bl	_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_
 226              	.LVL20:
 227 0180 000050E3 		cmp	r0, #0
 228 0184 3000000A 		beq	.L22
  66:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 229              		.loc 1 66 0
 230 0188 14109DE5 		ldr	r1, [sp, #20]
 231 018c 1C209DE5 		ldr	r2, [sp, #28]
 232 0190 0000D1E5 		ldrb	r0, [r1]	@ zero_extendqisi2
 233 0194 0030D2E5 		ldrb	r3, [r2]	@ zero_extendqisi2
 234 0198 000053E1 		cmp	r3, r0
 235 019c 3700001A 		bne	.L23
  69:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****       TF_LITE_ENSURE(context, input_tensor_first->params.zero_point ==
 236              		.loc 1 69 0
 237 01a0 090053E3 		cmp	r3, #9
 238 01a4 E8FFFF1A 		bne	.L9
 239 01a8 DEFFFFEA 		b	.L24
 240              	.LVL21:
 241              	.L18:
 242              	.LBE148:
 243              	.LBE143:
  50:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 244              		.loc 1 50 0
 245 01ac 003000E3 		movw	r3, #:lower16:.LC3
 246 01b0 002000E3 		movw	r2, #:lower16:.LC1
 247 01b4 003040E3 		movt	r3, #:upper16:.LC3
 248 01b8 001000E3 		movw	r1, #:lower16:.LC2
 249              	.LVL22:
 250 01bc 145090E5 		ldr	r5, [r0, #20]
 251 01c0 002040E3 		movt	r2, #:upper16:.LC1
 252 01c4 00308DE5 		str	r3, [sp]
 253 01c8 001040E3 		movt	r1, #:upper16:.LC2
 254 01cc 3230A0E3 		mov	r3, #50
 255 01d0 0140A0E3 		mov	r4, #1
 256 01d4 35FF2FE1 		blx	r5
 257              	.LVL23:
 258 01d8 A5FFFFEA 		b	.L3
 259              	.LVL24:
 260              	.L20:
 261              	.LBB152:
 262              	.LBB149:
  72:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                      input_tensor_first->params.scale == input->params.scale);
 263              		.loc 1 72 0
 264 01dc 003000E3 		movw	r3, #:lower16:.LC13
 265 01e0 002000E3 		movw	r2, #:lower16:.LC1
 266 01e4 003040E3 		movt	r3, #:upper16:.LC13
 267 01e8 001000E3 		movw	r1, #:lower16:.LC2
 268 01ec 00308DE5 		str	r3, [sp]
 269 01f0 002040E3 		movt	r2, #:upper16:.LC1
 270 01f4 144096E5 		ldr	r4, [r6, #20]
 271 01f8 001040E3 		movt	r1, #:upper16:.LC2
 272 01fc 0600A0E1 		mov	r0, r6
 273 0200 4930A0E3 		mov	r3, #73
 274 0204 34FF2FE1 		blx	r4
 275              	.LVL25:
 276 0208 0140A0E3 		mov	r4, #1
 277 020c 98FFFFEA 		b	.L3
 278              	.L21:
 279              	.LBE149:
 280              	.LBE152:
 281              	.LBB153:
  77:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     // Allocate scratch buffer space for pointer to each tensor's data
 282              		.loc 1 77 0
 283 0210 18309DE5 		ldr	r3, [sp, #24]
 284 0214 0000D3E5 		ldrb	r0, [r3]	@ zero_extendqisi2
 285 0218 010050E3 		cmp	r0, #1
 286 021c 6A00000A 		beq	.L25
 287              	.LBB154:
  86:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     node->user_data =
 288              		.loc 1 86 0
 289 0220 090050E3 		cmp	r0, #9
 290 0224 2C00000A 		beq	.L26
 121:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                        TfLiteTypeGetName(output->type));
 291              		.loc 1 121 0
 292 0228 145096E5 		ldr	r5, [r6, #20]
 293              	.LVL26:
 123:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   }
 294              		.loc 1 123 0
 295 022c 0140A0E3 		mov	r4, #1
 121:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                        TfLiteTypeGetName(output->type));
 296              		.loc 1 121 0
 297 0230 FEFFFFEB 		bl	TfLiteTypeGetName
 298              	.LVL27:
 299 0234 001000E3 		movw	r1, #:lower16:.LC14
 300 0238 0020A0E1 		mov	r2, r0
 301 023c 001040E3 		movt	r1, #:upper16:.LC14
 302 0240 0600A0E1 		mov	r0, r6
 303 0244 35FF2FE1 		blx	r5
 304              	.LVL28:
 305 0248 89FFFFEA 		b	.L3
 306              	.LVL29:
 307              	.L22:
 308              	.LBE154:
 309              	.LBE153:
 310              	.LBB162:
 311              	.LBB150:
  65:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_ENSURE_TYPES_EQ(context, input_tensor_first->type, input->type);
 312              		.loc 1 65 0
 313 024c 003000E3 		movw	r3, #:lower16:.LC10
 314 0250 002000E3 		movw	r2, #:lower16:.LC1
 315 0254 003040E3 		movt	r3, #:upper16:.LC10
 316 0258 001000E3 		movw	r1, #:lower16:.LC2
 317 025c 00308DE5 		str	r3, [sp]
 318 0260 002040E3 		movt	r2, #:upper16:.LC1
 319 0264 144096E5 		ldr	r4, [r6, #20]
 320 0268 001040E3 		movt	r1, #:upper16:.LC2
 321 026c 0600A0E1 		mov	r0, r6
 322 0270 4130A0E3 		mov	r3, #65
 323 0274 34FF2FE1 		blx	r4
 324              	.LVL30:
 325 0278 0140A0E3 		mov	r4, #1
 326 027c 7CFFFFEA 		b	.L3
 327              	.L23:
  66:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 328              		.loc 1 66 0
 329 0280 145096E5 		ldr	r5, [r6, #20]
 330              	.LVL31:
 331 0284 0140A0E3 		mov	r4, #1
 332 0288 FEFFFFEB 		bl	TfLiteTypeGetName
 333              	.LVL32:
 334 028c 1C309DE5 		ldr	r3, [sp, #28]
 335 0290 0070A0E1 		mov	r7, r0
 336              	.LVL33:
 337 0294 0000D3E5 		ldrb	r0, [r3]	@ zero_extendqisi2
 338 0298 FEFFFFEB 		bl	TfLiteTypeGetName
 339              	.LVL34:
 340 029c 00C000E3 		movw	ip, #:lower16:.LC11
 341 02a0 003000E3 		movw	r3, #:lower16:.LC8
 342 02a4 00C040E3 		movt	ip, #:upper16:.LC11
 343 02a8 003040E3 		movt	r3, #:upper16:.LC8
 344 02ac 002000E3 		movw	r2, #:lower16:.LC1
 345 02b0 001000E3 		movw	r1, #:lower16:.LC7
 346 02b4 0C008DE5 		str	r0, [sp, #12]
 347 02b8 002040E3 		movt	r2, #:upper16:.LC1
 348 02bc 00308DE5 		str	r3, [sp]
 349 02c0 0600A0E1 		mov	r0, r6
 350 02c4 08708DE5 		str	r7, [sp, #8]
 351 02c8 001040E3 		movt	r1, #:upper16:.LC7
 352 02cc 04C08DE5 		str	ip, [sp, #4]
 353 02d0 4230A0E3 		mov	r3, #66
 354 02d4 35FF2FE1 		blx	r5
 355              	.LVL35:
 356 02d8 65FFFFEA 		b	.L3
 357              	.LVL36:
 358              	.L26:
 359              	.LBE150:
 360              	.LBE162:
 361              	.LBB163:
 362              	.LBB159:
 363              	.LBB155:
  88:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     OpData* data = static_cast<OpData*>(node->user_data);
 364              		.loc 1 88 0
 365 02dc 383096E5 		ldr	r3, [r6, #56]
 366 02e0 2810A0E3 		mov	r1, #40
 367 02e4 0600A0E1 		mov	r0, r6
 368 02e8 33FF2FE1 		blx	r3
 369              	.LVL37:
 370 02ec 0050A0E1 		mov	r5, r0
 371              	.LVL38:
 372              	.LBB156:
  94:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         context, context->RequestScratchBufferInArena(context, scratch_size,
 373              		.loc 1 94 0
 374 02f0 0811A0E1 		lsl	r1, r8, #2
 375 02f4 0600A0E1 		mov	r0, r6
 376              	.LBE156:
  87:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         context->AllocatePersistentBuffer(context, sizeof(OpData));
 377              		.loc 1 87 0
 378 02f8 105087E5 		str	r5, [r7, #16]
 379              	.LVL39:
 380              	.LBB157:
  94:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         context, context->RequestScratchBufferInArena(context, scratch_size,
 381              		.loc 1 94 0
 382 02fc 242085E2 		add	r2, r5, #36
 383 0300 403096E5 		ldr	r3, [r6, #64]
 384 0304 33FF2FE1 		blx	r3
 385              	.LVL40:
 386 0308 004050E2 		subs	r4, r0, #0
 387 030c 58FFFF1A 		bne	.L3
 388              	.LBE157:
  99:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     data->output_offset = output->params.zero_point;
 389              		.loc 1 99 0
 390 0310 14309DE5 		ldr	r3, [sp, #20]
 101:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const double twice_max_input_scale =
 391              		.loc 1 101 0
 392 0314 14C0A0E3 		mov	ip, #20
 100:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     data->left_shift = kAddNIntegerShift;
 393              		.loc 1 100 0
 394 0318 18209DE5 		ldr	r2, [sp, #24]
 112:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 395              		.loc 1 112 0
 396 031c 181085E2 		add	r1, r5, #24
 109:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 397              		.loc 1 109 0
 398 0320 322BDFED 		vldr.64	d18, .L27
 112:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 399              		.loc 1 112 0
 400 0324 100085E2 		add	r0, r5, #16
 401              	.LVL41:
 103:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const double real_input_multiplier =
 402              		.loc 1 103 0
 403 0328 030A93ED 		vldr.32	s0, [r3, #12]
 109:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 404              		.loc 1 109 0
 405 032c 037AD2ED 		vldr.32	s15, [r2, #12]
  99:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     data->output_offset = output->params.zero_point;
 406              		.loc 1 99 0
 407 0330 103093E5 		ldr	r3, [r3, #16]
 100:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     data->left_shift = kAddNIntegerShift;
 408              		.loc 1 100 0
 409 0334 102092E5 		ldr	r2, [r2, #16]
 103:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const double real_input_multiplier =
 410              		.loc 1 103 0
 411 0338 C00AB7EE 		vcvt.f64.f32	d0, s0
 109:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 412              		.loc 1 109 0
 413 033c E70AF7EE 		vcvt.f64.f32	d16, s15
  99:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     data->output_offset = output->params.zero_point;
 414              		.loc 1 99 0
 415 0340 003063E2 		rsb	r3, r3, #0
 416 0344 083085E5 		str	r3, [r5, #8]
 100:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     data->left_shift = kAddNIntegerShift;
 417              		.loc 1 100 0
 418 0348 0C2085E5 		str	r2, [r5, #12]
 103:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const double real_input_multiplier =
 419              		.loc 1 103 0
 420 034c 001B70EE 		vadd.f64	d17, d0, d0
 421              	.LVL42:
 109:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 422              		.loc 1 109 0
 423 0350 A20B60EE 		vmul.f64	d16, d16, d18
 101:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const double twice_max_input_scale =
 424              		.loc 1 101 0
 425 0354 20C085E5 		str	ip, [r5, #32]
 112:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 426              		.loc 1 112 0
 427 0358 210B80EE 		vdiv.f64	d0, d0, d17
 428              	.LVL43:
 109:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 429              		.loc 1 109 0
 430 035c A08B81EE 		vdiv.f64	d8, d17, d16
 431              	.LVL44:
 112:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 432              		.loc 1 112 0
 433 0360 FEFFFFEB 		bl	_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPlPi
 434              	.LVL45:
 115:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 435              		.loc 1 115 0
 436 0364 1C1085E2 		add	r1, r5, #28
 437 0368 140085E2 		add	r0, r5, #20
 438 036c 480BB0EE 		vmov.f64	d0, d8
 439 0370 FEFFFFEB 		bl	_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPlPi
 440              	.LVL46:
 441              	.LBB158:
 117:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         context, kTfLiteActNone, output, &data->output_activation_min,
 442              		.loc 1 117 0
 443 0374 043085E2 		add	r3, r5, #4
 444 0378 0410A0E1 		mov	r1, r4
 445 037c 00308DE5 		str	r3, [sp]
 446 0380 0600A0E1 		mov	r0, r6
 447 0384 18209DE5 		ldr	r2, [sp, #24]
 448 0388 0530A0E1 		mov	r3, r5
 449 038c FEFFFFEB 		bl	_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteT
 450              	.LVL47:
 451 0390 0040A0E1 		mov	r4, r0
 452              	.LVL48:
 453 0394 36FFFFEA 		b	.L3
 454              	.LVL49:
 455              	.L19:
 456              	.LBE158:
 457              	.LBE155:
 458              	.LBE159:
 459              	.LBE163:
 460              	.LBB164:
 461              	.LBB151:
  70:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                                   input->params.zero_point);
 462              		.loc 1 70 0
 463 0398 003000E3 		movw	r3, #:lower16:.LC12
 464 039c 002000E3 		movw	r2, #:lower16:.LC1
 465 03a0 003040E3 		movt	r3, #:upper16:.LC12
 466 03a4 001000E3 		movw	r1, #:lower16:.LC2
 467 03a8 00308DE5 		str	r3, [sp]
 468 03ac 002040E3 		movt	r2, #:upper16:.LC1
 469 03b0 144096E5 		ldr	r4, [r6, #20]
 470 03b4 001040E3 		movt	r1, #:upper16:.LC2
 471 03b8 0600A0E1 		mov	r0, r6
 472 03bc 4730A0E3 		mov	r3, #71
 473 03c0 34FF2FE1 		blx	r4
 474              	.LVL50:
 475 03c4 0140A0E3 		mov	r4, #1
 476 03c8 29FFFFEA 		b	.L3
 477              	.L25:
 478              	.LVL51:
 479              	.LBE151:
 480              	.LBE164:
 481              	.LBB165:
 482              	.LBB160:
 483              	.LBB161:
  82:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                                    context, scratch_size, &scratch_index));
 484              		.loc 1 82 0
 485 03cc 403096E5 		ldr	r3, [r6, #64]
 486 03d0 1C208DE2 		add	r2, sp, #28
 487 03d4 0811A0E1 		lsl	r1, r8, #2
 488              	.LVL52:
 489 03d8 0600A0E1 		mov	r0, r6
 490 03dc 33FF2FE1 		blx	r3
 491              	.LVL53:
 492 03e0 004050E2 		subs	r4, r0, #0
 493              	.LBE161:
  84:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         reinterpret_cast<decltype(node->user_data)>(scratch_index);
 494              		.loc 1 84 0
 495 03e4 1C309D05 		ldreq	r3, [sp, #28]
 496 03e8 10308705 		streq	r3, [r7, #16]
 497 03ec 20FFFFEA 		b	.L3
 498              	.L28:
 499              		.align	3
 500              	.L27:
 501 03f0 00000000 		.word	0
 502 03f4 00003041 		.word	1093664768
 503              	.LBE160:
 504              	.LBE165:
 505              	.LBE167:
 506              	.LBE169:
 507              		.cfi_endproc
 508              	.LFE4170:
 509              		.fnend
 511              		.section	.text._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode,"ax",%progbits
 512              		.align	2
 513              		.syntax unified
 514              		.arm
 515              		.fpu neon
 517              	_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode:
 518              		.fnstart
 519              	.LFB4174:
 132:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 133:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** template <typename T>
 134:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** inline const T** CopyInputsToScratchBuffer(TfLiteContext* context,
 135:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                                            TfLiteNode* node,
 136:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                                            const int scratch_index) {
 137:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int num_inputs = NumInputs(node);
 138:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   void* scratch_buffer = context->GetScratchBuffer(context, scratch_index);
 139:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const T** all_inputs = static_cast<decltype(all_inputs)>(scratch_buffer);
 140:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   for (int i = 0; i < num_inputs; i++) {
 141:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const TfLiteEvalTensor* next_input =
 142:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****         tflite::micro::GetEvalInput(context, node, kInputTensor0 + i);
 143:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     all_inputs[i] = tflite::micro::GetTensorData<T>(next_input);
 144:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   }
 145:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 146:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   return all_inputs;
 147:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** }
 148:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 149:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** template <typename T>
 150:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** void EvalAddN(TfLiteContext* context, TfLiteNode* node,
 151:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****               TfLiteEvalTensor* output) {
 152:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int num_inputs = NumInputs(node);
 153:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 154:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int scratch_index =
 155:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****       static_cast<int>(reinterpret_cast<intptr_t>(node->user_data));
 156:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const T** all_inputs =
 157:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****       CopyInputsToScratchBuffer<T>(context, node, scratch_index);
 158:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 159:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   reference_ops::AddN<T>(tflite::micro::GetTensorShape(output), num_inputs,
 160:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                          all_inputs, tflite::micro::GetTensorData<T>(output));
 161:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** }
 162:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 163:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** template <typename T>
 164:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** void EvalAddNQuantized(TfLiteContext* context, TfLiteNode* node,
 165:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                        TfLiteEvalTensor* output) {
 166:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   int num_inputs = NumInputs(node);
 167:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 168:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   OpData* data = static_cast<OpData*>(node->user_data);
 169:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const T** all_inputs =
 170:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****       CopyInputsToScratchBuffer<T>(context, node, data->scratch_index);
 171:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 172:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   ArithmeticParams params;
 173:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.left_shift = data->left_shift;
 174:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.input1_offset = data->input_offset;
 175:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.input1_multiplier = data->input_multiplier;
 176:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.input1_shift = data->input_shift;
 177:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.output_offset = data->output_offset;
 178:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.output_multiplier = data->output_multiplier;
 179:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.output_shift = data->output_shift;
 180:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   SetActivationParams(data->output_activation_min, data->output_activation_max,
 181:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                       &params);
 182:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 183:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   reference_ops::AddN(params, tflite::micro::GetTensorShape(output), num_inputs,
 184:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                       all_inputs, tflite::micro::GetTensorData<T>(output));
 185:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** }
 186:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 187:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {
 520              		.loc 1 187 0
 521              		.cfi_startproc
 522              		.cfi_personality 0,__gxx_personality_v0
 523              		.cfi_lsda 0,.LLSDA4174
 524              		@ args = 0, pretend = 0, frame = 88
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              	.LVL54:
 527 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 528              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 529              		.cfi_def_cfa_offset 36
 530              		.cfi_offset 4, -36
 531              		.cfi_offset 5, -32
 532              		.cfi_offset 6, -28
 533              		.cfi_offset 7, -24
 534              		.cfi_offset 8, -20
 535              		.cfi_offset 9, -16
 536              		.cfi_offset 10, -12
 537              		.cfi_offset 11, -8
 538              		.cfi_offset 14, -4
 539              	.LBB319:
 540              	.LBB320:
 541              		.file 3 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tenso
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #define TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #include <cstdint>
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/types.h"
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** namespace tflite {
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** namespace micro {
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns a mutable tensor for a given input index. is_variable must be checked
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // during prepare when the full TfLiteTensor is available.
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetMutableEvalInput(const TfLiteContext* context,
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****                                              const TfLiteNode* node,
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****                                              int index) {
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given input index in a node.
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** inline const TfLiteEvalTensor* GetEvalInput(const TfLiteContext* context,
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****                                             const TfLiteNode* node, int index) {
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return GetMutableEvalInput(context, node, index);
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given output index in a node.
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetEvalOutput(const TfLiteContext* context,
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****                                        const TfLiteNode* node, int index) {
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
 542              		.loc 3 48 0
 543 0004 007050E2 		subs	r7, r0, #0
 544              	.LVL55:
 545              	.LBE320:
 546              	.LBE319:
 547              		.loc 1 187 0
 548              		.pad #92
 549 0008 5CD04DE2 		sub	sp, sp, #92
 550              		.cfi_def_cfa_offset 128
 551              	.LBB323:
 552              	.LBB321:
 553              		.loc 3 48 0
 554 000c 2802000A 		beq	.L31
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 555              		.loc 3 49 0
 556 0010 000051E3 		cmp	r1, #0
 557 0014 0180A0E1 		mov	r8, r1
 558 0018 2502000A 		beq	.L31
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
 559              		.loc 3 50 0
 560 001c 042091E5 		ldr	r2, [r1, #4]
 561 0020 543097E5 		ldr	r3, [r7, #84]
 562 0024 041092E5 		ldr	r1, [r2, #4]
 563              	.LVL56:
 564              	.LEHB0:
 565 0028 33FF2FE1 		blx	r3
 566              	.LVL57:
 567 002c 0040A0E1 		mov	r4, r0
 568              	.LVL58:
 569              	.LBE321:
 570              	.LBE323:
 188:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   TfLiteEvalTensor* output =
 189:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****       tflite::micro::GetEvalOutput(context, node, kOutputTensor);
 190:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   if (output->type == kTfLiteFloat32) {
 571              		.loc 1 190 0
 572 0030 0800D0E5 		ldrb	r0, [r0, #8]	@ zero_extendqisi2
 573 0034 010050E3 		cmp	r0, #1
 574 0038 4F01000A 		beq	.L158
 191:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     EvalAddN<float>(context, node, output);
 192:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   } else if (output->type == kTfLiteInt8) {
 575              		.loc 1 192 0
 576 003c 090050E3 		cmp	r0, #9
 577 0040 0900000A 		beq	.L159
 193:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     EvalAddNQuantized<int8_t>(context, node, output);
 194:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   } else {
 195:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     TF_LITE_KERNEL_LOG(context, "ADD_N only supports FLOAT32 and INT8, got %s.",
 578              		.loc 1 195 0
 579 0044 144097E5 		ldr	r4, [r7, #20]
 580 0048 FEFFFFEB 		bl	TfLiteTypeGetName
 581              	.LVL59:
 582 004c 001000E3 		movw	r1, #:lower16:.LC14
 583 0050 0020A0E1 		mov	r2, r0
 584 0054 001040E3 		movt	r1, #:upper16:.LC14
 585 0058 0700A0E1 		mov	r0, r7
 586 005c 34FF2FE1 		blx	r4
 587              	.LVL60:
 196:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                        TfLiteTypeGetName(output->type));
 197:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     return kTfLiteError;
 588              		.loc 1 197 0
 589 0060 0100A0E3 		mov	r0, #1
 198:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   }
 199:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   return kTfLiteOk;
 200:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** }
 590              		.loc 1 200 0
 591 0064 5CD08DE2 		add	sp, sp, #92
 592              		.cfi_remember_state
 593              		.cfi_def_cfa_offset 36
 594              		@ sp needed
 595 0068 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 596              	.LVL61:
 597              	.L159:
 598              		.cfi_restore_state
 599              	.LBB324:
 600              	.LBB325:
 601              	.LBB326:
 602              	.LBB327:
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 603              		.loc 2 152 0
 604 006c 002098E5 		ldr	r2, [r8]
 605              	.LBE327:
 606              	.LBE326:
 607              	.LBB330:
 608              	.LBB331:
 138:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const T** all_inputs = static_cast<decltype(all_inputs)>(scratch_buffer);
 609              		.loc 1 138 0
 610 0070 0700A0E1 		mov	r0, r7
 611              	.LBE331:
 612              	.LBE330:
 168:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const T** all_inputs =
 613              		.loc 1 168 0
 614 0074 105098E5 		ldr	r5, [r8, #16]
 615              	.LBB344:
 616              	.LBB341:
 138:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const T** all_inputs = static_cast<decltype(all_inputs)>(scratch_buffer);
 617              		.loc 1 138 0
 618 0078 443097E5 		ldr	r3, [r7, #68]
 619              	.LBE341:
 620              	.LBE344:
 621              	.LBB345:
 622              	.LBB328:
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 623              		.loc 2 152 0
 624 007c 002092E5 		ldr	r2, [r2]
 625              	.LBE328:
 626              	.LBE345:
 627              	.LBB346:
 628              	.LBB342:
 138:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const T** all_inputs = static_cast<decltype(all_inputs)>(scratch_buffer);
 629              		.loc 1 138 0
 630 0080 241095E5 		ldr	r1, [r5, #36]
 631              	.LBE342:
 632              	.LBE346:
 633              	.LBB347:
 634              	.LBB329:
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 635              		.loc 2 152 0
 636 0084 0260A0E1 		mov	r6, r2
 637 0088 14208DE5 		str	r2, [sp, #20]
 638              	.LVL62:
 639              	.LBE329:
 640              	.LBE347:
 641              	.LBB348:
 642              	.LBB343:
 138:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const T** all_inputs = static_cast<decltype(all_inputs)>(scratch_buffer);
 643              		.loc 1 138 0
 644 008c 33FF2FE1 		blx	r3
 645              	.LVL63:
 646              	.LBB332:
 140:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const TfLiteEvalTensor* next_input =
 647              		.loc 1 140 0
 648 0090 000056E3 		cmp	r6, #0
 649              	.LBE332:
 138:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const T** all_inputs = static_cast<decltype(all_inputs)>(scratch_buffer);
 650              		.loc 1 138 0
 651 0094 18008DE5 		str	r0, [sp, #24]
 652              	.LVL64:
 653              	.LBB340:
 140:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const TfLiteEvalTensor* next_input =
 654              		.loc 1 140 0
 655 0098 0F0000DA 		ble	.L63
 656 009c 14A09DE5 		ldr	r10, [sp, #20]
 657 00a0 049040E2 		sub	r9, r0, #4
 658 00a4 0060A0E3 		mov	r6, #0
 659              	.LVL65:
 660              	.L64:
 661              	.LBB333:
 662              	.LBB334:
 663              	.LBB335:
 664              	.LBB336:
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
 665              		.loc 3 36 0
 666 00a8 003098E5 		ldr	r3, [r8]
 667 00ac 0700A0E1 		mov	r0, r7
 668 00b0 542097E5 		ldr	r2, [r7, #84]
 669 00b4 063183E0 		add	r3, r3, r6, lsl #2
 670 00b8 041093E5 		ldr	r1, [r3, #4]
 671 00bc 32FF2FE1 		blx	r2
 672              	.LVL66:
 673              	.LBE336:
 674              	.LBE335:
 675              	.LBE334:
 676              	.LBB337:
 677              	.LBB338:
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns data for a TfLiteEvalTensor struct.
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** T* GetTensorData(TfLiteEvalTensor* tensor) {
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns const data for a TfLiteEvalTensor struct.
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** const T* GetTensorData(const TfLiteEvalTensor* tensor) {
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(tensor != nullptr);
 678              		.loc 3 62 0
 679 00c0 000050E3 		cmp	r0, #0
 680 00c4 FA01000A 		beq	.L31
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 681              		.loc 3 63 0
 682 00c8 003090E5 		ldr	r3, [r0]
 683              	.LBE338:
 684              	.LBE337:
 685              	.LBE333:
 140:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const TfLiteEvalTensor* next_input =
 686              		.loc 1 140 0
 687 00cc 016086E2 		add	r6, r6, #1
 688              	.LVL67:
 689 00d0 06005AE1 		cmp	r10, r6
 690              	.LBB339:
 143:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   }
 691              		.loc 1 143 0
 692 00d4 0430A9E5 		str	r3, [r9, #4]!
 693              	.LBE339:
 140:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const TfLiteEvalTensor* next_input =
 694              		.loc 1 140 0
 695 00d8 F2FFFF1A 		bne	.L64
 696              	.LVL68:
 697              	.L63:
 698              	.LBE340:
 699              	.LBE343:
 700              	.LBE348:
 180:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                       &params);
 701              		.loc 1 180 0
 702 00dc 003095E5 		ldr	r3, [r5]
 183:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                       all_inputs, tflite::micro::GetTensorData<T>(output));
 703              		.loc 1 183 0
 704 00e0 0410A0E1 		mov	r1, r4
 705 00e4 40008DE2 		add	r0, sp, #64
 174:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.input1_multiplier = data->input_multiplier;
 706              		.loc 1 174 0
 707 00e8 089095E5 		ldr	r9, [r5, #8]
 175:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.input1_shift = data->input_shift;
 708              		.loc 1 175 0
 709 00ec 10A095E5 		ldr	r10, [r5, #16]
 180:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                       &params);
 710              		.loc 1 180 0
 711 00f0 0360A0E1 		mov	r6, r3
 712 00f4 2C308DE5 		str	r3, [sp, #44]
 713 00f8 043095E5 		ldr	r3, [r5, #4]
 714 00fc 0370A0E1 		mov	r7, r3
 715              	.LVL69:
 716 0100 30308DE5 		str	r3, [sp, #48]
 173:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.input1_offset = data->input_offset;
 717              		.loc 1 173 0
 718 0104 203095E5 		ldr	r3, [r5, #32]
 719 0108 00308DE5 		str	r3, [sp]
 720              	.LVL70:
 176:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.output_offset = data->output_offset;
 721              		.loc 1 176 0
 722 010c 183095E5 		ldr	r3, [r5, #24]
 723              	.LVL71:
 724 0110 08308DE5 		str	r3, [sp, #8]
 177:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.output_multiplier = data->output_multiplier;
 725              		.loc 1 177 0
 726 0114 0C3095E5 		ldr	r3, [r5, #12]
 727 0118 28308DE5 		str	r3, [sp, #40]
 728              	.LVL72:
 178:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   params.output_shift = data->output_shift;
 729              		.loc 1 178 0
 730 011c 143095E5 		ldr	r3, [r5, #20]
 731              	.LVL73:
 732 0120 1C308DE5 		str	r3, [sp, #28]
 733              	.LVL74:
 179:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   SetActivationParams(data->output_activation_min, data->output_activation_max,
 734              		.loc 1 179 0
 735 0124 1C3095E5 		ldr	r3, [r5, #28]
 736              	.LVL75:
 737 0128 0C308DE5 		str	r3, [sp, #12]
 738              	.LVL76:
 183:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                       all_inputs, tflite::micro::GetTensorData<T>(output));
 739              		.loc 1 183 0
 740 012c FEFFFFEB 		bl	_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 741              	.LVL77:
 742              	.LBB349:
 743              	.LBB350:
 744              		.file 4 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tenso
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_ADD_N_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_ADD_N_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** #include <algorithm>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** #include <limits>
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** #include "tensorflow/lite/kernels/internal/common.h"
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** namespace tflite {
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** namespace reference_ops {
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** // T is expected to be either float or int.
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** template <typename T>
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** inline void AddN(const RuntimeShape& input_shape, const size_t num_inputs,
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****                  const T* const* input_data, T* output_data) {
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   // All inputs and output should have the same shape, this is checked during
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   // Prepare stage.
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   const size_t size = input_shape.FlatSize();
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   for (size_t i = 0; i < size; ++i) {
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     T x = 0;
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     for (size_t j = 0; j < num_inputs; ++j) {
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       x += input_data[j][i];
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     }
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     output_data[i] = x;
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   }
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** }
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** inline void AddN(const ArithmeticParams& params,
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****                  const RuntimeShape& input_shape, const size_t num_inputs,
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****                  const int8_t* const* input_data, int8_t* output_data) {
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   TFLITE_DCHECK_LE(params.quantized_activation_min,
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****                    params.quantized_activation_max);
 745              		.loc 4 46 0
 746 0130 070056E1 		cmp	r6, r7
 747 0134 0720A0E1 		mov	r2, r7
 748              	.LBE350:
 749              	.LBE349:
 750              	.LBB522:
 751              	.LBB523:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
 752              		.loc 3 56 0
 753 0138 007094E5 		ldr	r7, [r4]
 754              	.LVL78:
 755              	.LBE523:
 756              	.LBE522:
 757              	.LBB524:
 758              	.LBB516:
 759              		.loc 4 46 0
 760 013c E60100CA 		bgt	.L160
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   // Input offset is negative input zero point. Activation tensors are
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   // asymmetric quantized so they span the full int8 range.
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   // All inputs should have same zero-point and scale, this is checked during
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   // Prepare stage.
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   TFLITE_DCHECK_GE(-params.input1_offset, std::numeric_limits<int8_t>::min());
 761              		.loc 4 51 0
 762 0140 800059E3 		cmp	r9, #128
 763 0144 E30100CA 		bgt	.L161
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   TFLITE_DCHECK_LE(-params.input1_offset, std::numeric_limits<int8_t>::max());
 764              		.loc 4 52 0
 765 0148 7F0079E3 		cmn	r9, #127
 766 014c 030200BA 		blt	.L162
 767              	.LVL79:
 768              	.LBB351:
 769              	.LBB352:
 770              	.LBB353:
 771              	.LBB354:
 772              		.file 5 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tenso
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** /* Copyright 2018 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #include <algorithm>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #include <cstdint>
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #include <cstring>
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #include <initializer_list>
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** namespace tflite {
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** enum class FusedActivationFunctionType : uint8_t {
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kNone,
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kRelu6,
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kRelu1,
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kRelu
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** enum class PaddingType : uint8_t { kNone, kSame, kValid };
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** struct PaddingValues {
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t width;
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t height;
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // offset is used for calculating "remaining" padding, for example, `width`
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // is 1 and `width_offset` is 1, so padding_left is 1 while padding_right is
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // 1 + 1 = 2.
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t width_offset;
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the height dimension.
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t height_offset;
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** struct Padding3DValues {
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t width;
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t height;
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t depth;
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // offset is used for calculating "remaining" padding, for example, `width`
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // is 1 and `width_offset` is 1, so padding_left is 1 while padding_right is
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // 1 + 1 = 2.
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t width_offset;
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the height dimension.
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t height_offset;
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the depth dimension.
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t depth_offset;
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // This enumeration allows for non-default formats for the weights array
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // of a fully-connected operator, allowing the use of special optimized
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // runtime paths.
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** enum class FullyConnectedWeightsFormat : uint8_t {
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Default format (flat 2D layout, the inner contiguous dimension
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // is input_depth, the outer non-contiguous dimension is output_depth)
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kDefault,
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Summary: optimized layout for fast CPU runtime implementation,
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // aimed specifically at ARM CPUs at the moment, and specialized for
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // 8-bit quantized layers.
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // The use case we're concerned with here is: 8-bit quantization,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // large weights matrix that doesn't fit in cache (e.g. 4096x2048 in
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // a key application that drove this), very small batch size (e.g. 1 -- 4).
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Even with 8-bit quantization of weights, the performance of memory
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // accesses to the weights can become the dominant issue when
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // the batch size is small, so each weight value is used in only a few
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // arithmetic ops, i.e. the fully-connected node has a low arithmetic
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // intensity. The specific issues that arise are of three kinds:
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // (1) One may, ideally, max out DRAM bandwidth, i.e. be truly memory
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     bound. That's the "good" issue to run into.
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // (2) One may run into sub-optimal pre-fetching: the data hasn't been
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     prefetched into the cache by the time we need it.
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // (3) One may run into cache aliasing: multiple values that are
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     pre-fetched, alias each other in the L1 cache (which typically
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     has only 4-way set associativity in ARM CPUs) and thus evict
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     each other before we get to using them.
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // The point of this shuffling is to avoid issues (2) and (3) so that
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // we get as fast as possible given only the hard constraint (1).
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // This is achieved by turning the difficulty into a solution: the
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // difficulty, that each value loaded from memory is used only in
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // one kernel iteration, making this operation memory-intensive, hints at
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // the solution, of shuffling the weights so that they are stored in the
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // exact order as the kernel needs to load them, so that the memory
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // accesses made by the kernel are trivial. This solves (2) because the
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // trivial memory access pattern allows the CPU's automatic prefetching
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // to perform very well (no need even for preload instructions), and this
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // solves (3) because the values being loaded concurrently are now
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // contiguous in the address space, thus don't alias each other in the cache.
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // On ARM, we typically want our kernel to process a 4x16 block of weights
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // at a time, because:
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //   - 16 is the number of bytes in a NEON register.
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //   - 4 is how many rows we need to handle concurrently in the kernel in
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     order to have sufficient mutual independence of instructions to
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     maximize arithmetic throughput.
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Finally, the 'Int8' part in the name refers to the fact that this
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // weights format has each weights value encoded as a signed int8_t value,
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // even if the data type of the weights buffer is uint8_t.  This is intended
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // to save runtime kernels the effort to have to XOR the top bit of these
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // bytes before using them in signed arithmetic, see this file for more
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // explanations on the 'signed int8_t trick' in matrix multiplication kernels:
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //   tensorflow/lite/toco/graph_transformations/ensure_uint8_weights_safe_for_fast_int8_kernels.c
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kShuffled4x16Int8,
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // Quantization parameters, determining the mapping of quantized values
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // to real values (i.e. determining how quantized values are mathematically
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // interpreted).
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** //
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // The correspondence is as follows:
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** //
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** //   real_value = scale * (quantized_value - zero_point);
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** //
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // In other words, zero_point designates which quantized value corresponds to
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // the real 0 value, and scale designates the difference between the real values
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // corresponding to consecutive quantized values differing by 1.
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** struct QuantizationParams {
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int32_t zero_point = 0;
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   double scale = 0.0;
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline bool operator==(const QuantizationParams& qp1,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                        const QuantizationParams& qp2) {
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return qp1.zero_point == qp2.zero_point && qp1.scale == qp2.scale;
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** template <int N>
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** struct Dims {
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int sizes[N];
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int strides[N];
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** class RuntimeShape {
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****  public:
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Shapes with dimensions up to 5 are stored directly in the structure, while
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // larger shapes are separately allocated.
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   static constexpr int kMaxSmallSize = 5;
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape& operator=(RuntimeShape const&) = delete;
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape() : size_(0) {}
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   explicit RuntimeShape(int dimensions_count) : size_(dimensions_count) {
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 165:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 166:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 167:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 168:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int shape_size, int32_t value) : size_(0) {
 169:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     Resize(shape_size);
 170:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < shape_size; ++i) {
 171:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, value);
 172:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 173:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 174:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 175:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int dimensions_count, const int32_t* dims_data) : size_(0) {
 176:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     ReplaceWith(dimensions_count, dims_data);
 177:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 178:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 179:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(const std::initializer_list<int> init_list) : size_(0) {
 180:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     BuildFrom(init_list);
 181:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 182:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 183:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Avoid using this constructor.  We should be able to delete it when C++17
 184:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // rolls out.
 185:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(RuntimeShape const& other) : size_(other.DimensionsCount()) {
 186:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 187:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 188:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 189:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #else
 190:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[size_];
 191:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif
 192:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 193:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData(), other.DimsData(), sizeof(int32_t) * size_);
 194:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 195:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 196:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   bool operator==(const RuntimeShape& comp) const {
 197:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return this->size_ == comp.size_ &&
 198:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****            std::memcmp(DimsData(), comp.DimsData(), size_ * sizeof(int32_t)) ==
 199:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                0;
 200:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 201:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 202:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   ~RuntimeShape() {
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 204:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 205:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 206:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 208:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 209:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 210:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 211:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 212:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline int32_t DimensionsCount() const { return size_; }
 213:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 214:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 217:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 218:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline void SetDim(int i, int32_t val) {
 219:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 220:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 221:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 222:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_[i] = val;
 223:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     } else {
 224:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       dims_[i] = val;
 225:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 226:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 228:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline int32_t* DimsData() {
 229:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 230:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 231:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsData() const {
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 773              		.loc 5 232 0
 774 0150 40109DE5 		ldr	r1, [sp, #64]
 775 0154 050051E3 		cmp	r1, #5
 776 0158 BC0100DA 		ble	.L67
 777 015c 44009DE5 		ldr	r0, [sp, #68]
 778              	.LVL80:
 779              	.L68:
 780 0160 5031A0E7 		sbfx	r3, r0, #2, #1
 781 0164 033003E2 		and	r3, r3, #3
 782 0168 010053E1 		cmp	r3, r1
 783 016c 0130A021 		movcs	r3, r1
 784 0170 080051E3 		cmp	r1, #8
 785 0174 0130A0D1 		movle	r3, r1
 786 0178 B80100CA 		bgt	.L163
 787              	.LVL81:
 788              	.L70:
 789 017c 010053E3 		cmp	r3, #1
 790              	.LBE354:
 791              	.LBE353:
 792              	.LBB356:
 233:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 234:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // The caller must ensure that the shape is no bigger than 5-D.
 235:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsDataUpTo5D() const { return dims_; }
 236:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 237:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline void Resize(int dimensions_count) {
 238:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 239:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 242:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 243:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 244:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 245:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     size_ = dimensions_count;
 246:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 247:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 248:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 249:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 250:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 251:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 253:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 254:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 255:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline void ReplaceWith(int dimensions_count, const int32_t* dims_data) {
 256:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 257:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     int32_t* dst_dims = DimsData();
 258:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(dst_dims, dims_data, dimensions_count * sizeof(int32_t));
 259:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 260:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 261:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   template <typename T>
 262:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const T& src_iterable) {
 263:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     const int dimensions_count =
 264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****         std::distance(src_iterable.begin(), src_iterable.end());
 265:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 266:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     int32_t* data = DimsData();
 267:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     for (auto it : src_iterable) {
 268:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       *data = it;
 269:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       ++data;
 270:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 271:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 272:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 273:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // This will probably be factored out. Old code made substantial use of 4-D
 274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // shapes, and so this function is used to extend smaller shapes. Note that
 275:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // (a) as Dims<4>-dependent code is eliminated, the reliance on this should be
 276:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // reduced, and (b) some kernels are stricly 4-D, but then the shapes of their
 277:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // inputs should already be 4-D, so this function should not be needed.
 278:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline static RuntimeShape ExtendedShape(int new_shape_size,
 279:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                                            const RuntimeShape& shape) {
 280:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return RuntimeShape(new_shape_size, shape, 1);
 281:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 282:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 283:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const std::initializer_list<int> init_list) {
 284:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     BuildFrom<const std::initializer_list<int>>(init_list);
 285:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 286:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 287:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Returns the total count of elements, that is the size when flattened into a
 288:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // vector.
 289:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline int FlatSize() const {
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     int buffer_size = 1;
 291:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 793              		.loc 5 293 0
 794 0180 002090E5 		ldr	r2, [r0]
 795              	.LVL82:
 796 0184 F700000A 		beq	.L118
 797 0188 04C090E5 		ldr	ip, [r0, #4]
 798 018c 020053E3 		cmp	r3, #2
 799 0190 9C0202E0 		mul	r2, ip, r2
 800              	.LVL83:
 801 0194 F300000A 		beq	.L118
 802 0198 08C090E5 		ldr	ip, [r0, #8]
 803 019c 030053E3 		cmp	r3, #3
 804 01a0 9C0202E0 		mul	r2, ip, r2
 805              	.LVL84:
 806 01a4 EF00000A 		beq	.L118
 807 01a8 0CC090E5 		ldr	ip, [r0, #12]
 808 01ac 040053E3 		cmp	r3, #4
 809 01b0 9C0202E0 		mul	r2, ip, r2
 810              	.LVL85:
 811 01b4 EB00000A 		beq	.L118
 812 01b8 10C090E5 		ldr	ip, [r0, #16]
 813 01bc 050053E3 		cmp	r3, #5
 814 01c0 9C0202E0 		mul	r2, ip, r2
 815              	.LVL86:
 816 01c4 E700000A 		beq	.L118
 817 01c8 14C090E5 		ldr	ip, [r0, #20]
 818 01cc 060053E3 		cmp	r3, #6
 819 01d0 9C0202E0 		mul	r2, ip, r2
 820              	.LVL87:
 821 01d4 E300000A 		beq	.L118
 822 01d8 18C090E5 		ldr	ip, [r0, #24]
 823 01dc 070053E3 		cmp	r3, #7
 824 01e0 9C0202E0 		mul	r2, ip, r2
 825              	.LVL88:
 826 01e4 DF00000A 		beq	.L118
 827 01e8 1CC090E5 		ldr	ip, [r0, #28]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 828              		.loc 5 292 0
 829 01ec 0850A0E3 		mov	r5, #8
 830              		.loc 5 293 0
 831 01f0 9C0202E0 		mul	r2, ip, r2
 832              	.LVL89:
 833              	.L72:
 834 01f4 030051E1 		cmp	r1, r3
 835 01f8 2800000A 		beq	.L73
 836              	.LVL90:
 837              	.L71:
 838 01fc 036041E0 		sub	r6, r1, r3
 839 0200 01E041E2 		sub	lr, r1, #1
 840 0204 04C046E2 		sub	ip, r6, #4
 841 0208 03E04EE0 		sub	lr, lr, r3
 842 020c 2CC1A0E1 		lsr	ip, ip, #2
 843 0210 02005EE3 		cmp	lr, #2
 844 0214 01C08CE2 		add	ip, ip, #1
 845 0218 0C41A0E1 		lsl	r4, ip, #2
 846              	.LVL91:
 847 021c 1200009A 		bls	.L74
 848 0220 033180E0 		add	r3, r0, r3, lsl #2
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 849              		.loc 5 292 0
 850 0224 5100C0F2 		vmov.i32	q8, #1  @ v4si
 851 0228 00E0A0E3 		mov	lr, #0
 852              	.L76:
 853 022c 01E08EE2 		add	lr, lr, #1
 854              		.loc 5 293 0
 855 0230 DF2A63F4 		vld1.64	{d18-d19}, [r3:64]
 856 0234 0E005CE1 		cmp	ip, lr
 857 0238 103083E2 		add	r3, r3, #16
 858 023c F20960F2 		vmul.i32	q8, q8, q9
 859 0240 F9FFFF8A 		bhi	.L76
 860 0244 060054E1 		cmp	r4, r6
 861 0248 045085E0 		add	r5, r5, r4
 862 024c 5020C0F2 		vmov.i32	q9, #0  @ v4si
 863 0250 E248F0F2 		vext.32	q10, q8, q9, #2
 864 0254 F04964F2 		vmul.i32	q10, q10, q8
 865 0258 E204F4F2 		vext.32	q8, q10, q9, #1
 866 025c F40960F2 		vmul.i32	q8, q8, q10
 867 0260 903B10EE 		vmov.32	r3, d16[0]
 868 0264 930202E0 		mul	r2, r3, r2
 869 0268 0C00000A 		beq	.L73
 870              	.L74:
 871              	.LVL92:
 872 026c 05C190E7 		ldr	ip, [r0, r5, lsl #2]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 873              		.loc 5 292 0
 874 0270 013085E2 		add	r3, r5, #1
 875 0274 030051E1 		cmp	r1, r3
 876              		.loc 5 293 0
 877 0278 0531A0E1 		lsl	r3, r5, #2
 878 027c 9C0202E0 		mul	r2, ip, r2
 879              	.LVL93:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 880              		.loc 5 292 0
 881 0280 060000DA 		ble	.L73
 882              		.loc 5 293 0
 883 0284 030080E0 		add	r0, r0, r3
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 884              		.loc 5 292 0
 885 0288 025085E2 		add	r5, r5, #2
 886              		.loc 5 293 0
 887 028c 043090E5 		ldr	r3, [r0, #4]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 888              		.loc 5 292 0
 889 0290 050051E1 		cmp	r1, r5
 890              		.loc 5 293 0
 891 0294 930202E0 		mul	r2, r3, r2
 892              	.LVL94:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 893              		.loc 5 292 0
 894              		.loc 5 293 0
 895 0298 083090C5 		ldrgt	r3, [r0, #8]
 896 029c 930202C0 		mulgt	r2, r3, r2
 897              	.LVL95:
 898              	.L73:
 899              	.LBE356:
 900              	.LBE352:
 901              	.LBE351:
 902              	.LBB363:
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   // All inputs and output should have the same shape, this is checked during
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   // Prepare stage.
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   const size_t size = input_shape.FlatSize();
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   for (size_t i = 0; i < size; ++i) {
 903              		.loc 4 57 0
 904 02a0 003052E2 		subs	r3, r2, #0
 905 02a4 20308DE5 		str	r3, [sp, #32]
 906 02a8 A300000A 		beq	.L80
 907              	.LVL96:
 908              	.L69:
 909 02ac 00309DE5 		ldr	r3, [sp]
 910              	.LBB364:
 911              	.LBB365:
 912              	.LBB366:
 913              	.LBB367:
 914              		.file 6 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Copyright 2015 The Gemmlowp Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // fixedpoint.h: fixed-point arithmetic, with basic operations and
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // a few math functions such as tanh.
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #ifndef GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <algorithm>
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cassert>
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cmath>
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cstdint>
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <limits>
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include "../internal/detect_platform.h"
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** namespace gemmlowp {
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Part 1: Low-level integer-arithmetic primitives.
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The implementations here are generic implementations valid for
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // scalar types (e.g. std::int32_t). Architecture-specific SIMD types
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // (e.g. NEON int32x4_t) may be supported by providing
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // specializations for them in separate files.
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The purpose of these primitives is two-fold:
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be used to implement higher-level fixed-point
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    abstractions, namely the FixedPoint class and its arithmetic
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    operators.
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be directly used to implement some more involved
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    fixed-point computations, e.g. the fixed-point implementation
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    of math functions such as tanh.
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Some compile-time traits around raw types to handle SIMD aspects:
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // number of lanes, underlying scalar type.
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits {};
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int32_t> {
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int32_t ScalarRawType;
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int16_t> {
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int16_t ScalarRawType;
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns a SIMD value duplicating a scalar value across all lanes.
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tRawType Dup(typename FixedPointRawTypeTraits<tRawType>::ScalarRawType x) {
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return x;
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise AND
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitAnd(tIntegerType a, tIntegerType b) {
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a & b;
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise OR
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitOr(tIntegerType a, tIntegerType b) {
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a | b;
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise XOR
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitXor(tIntegerType a, tIntegerType b) {
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a ^ b;
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise NOT
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitNot(tIntegerType a) {
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return ~a;
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer addition. Not saturating. Overflow is undefined behavior.
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Add(tIntegerType a, tIntegerType b) {
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a + b;
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer subtraction. Not saturating. Overflow is undefined behavior.
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Mul(tIntegerType a, tIntegerType b) {
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a * b;
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Sub(tIntegerType a, tIntegerType b) {
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a - b;
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer unary negative. Not saturating. Overflow is undefined behavior.
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Neg(tIntegerType a) {
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return -a;
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic left-shift, equivalent to multiplying with a power of two.
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Negative values are OK. In case of overflow, no Undefined
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Behavior, but the results are implementation-defined (in practice,
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // they currently are saturated, but we make no commitment to that). The idea
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // is that the caller will want to implement the overflowing cases with
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // saturation with compare-and-mask, so we don't care about the results
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // in the overflow case, we just want to avoid undefined behavior.
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerType may be int32 or any narrower signed type.
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftLeft(tIntegerType a, int offset) {
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_a = static_cast<std::int64_t>(a);
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_shifted = wide_a * (1 << offset);
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto max = std::numeric_limits<tIntegerType>::max();
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return wide_shifted < min
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              ? min
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic right-shift. Not rounding.
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Relying on implementation-defined, but in-practice-consistent,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // C++ compiler behavior.
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftRight(tIntegerType a, int offset) {
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a >> offset;
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Each bit of the result is set to the corresponding bit of either then_val or
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // else_val depending on whether the corresponding bit of if_mask is set.
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to the VBSL instruction in ARM NEON.
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType SelectUsingMask(tIntegerType if_mask, tIntegerType then_val,
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                              tIntegerType else_val) {
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return BitXor(BitAnd(if_mask, then_val), BitAnd(BitNot(if_mask), else_val));
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is non-zero.
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNonZero(tIntegerType a) {
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr tIntegerType zero = 0;
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a ? BitNot(zero) : zero;
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is zero.
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfZero(tIntegerType a) {
 165:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(!a);
 166:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 167:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 168:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 169:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are equal.
 170:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 171:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfEqual(tIntegerType a, tIntegerType b) {
 172:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a == b);
 173:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 174:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 175:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 176:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are not equal.
 177:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 178:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNotEqual(tIntegerType a, tIntegerType b) {
 179:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a != b);
 180:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 181:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 182:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 183:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a > b.
 184:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 185:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThan(tIntegerType a, tIntegerType b) {
 186:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a > b);
 187:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 188:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 189:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 190:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a >= b.
 191:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 192:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThanOrEqual(tIntegerType a, tIntegerType b) {
 193:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a >= b);
 194:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 195:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 196:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 197:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a < b.
 198:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 199:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThan(tIntegerType a, tIntegerType b) {
 200:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a < b);
 201:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 202:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 204:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a <= b.
 205:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 206:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThanOrEqual(tIntegerType a, tIntegerType b) {
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a <= b);
 208:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 209:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 210:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if all of the input scalars are nonzero.
 211:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 212:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 213:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 214:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** bool All(tIntegerType a) {
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 217:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 218:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if any of the input scalars are nonzero.
 219:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 220:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 221:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 222:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** bool Any(tIntegerType a) {
 223:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 224:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 225:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 226:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns (a+b)/2, rounded to the nearest integer.
 227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to VRHADD in the ARM NEON instruction set.
 228:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 229:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType RoundingHalfSum(IntegerType a, IntegerType b) {
 230:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 231:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 233:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 234:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 235:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 236:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t RoundingHalfSum(std::int32_t a, std::int32_t b) {
 237:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a64 = a;
 238:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b64 = b;
 239:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sum = a64 + b64;
 240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sign = sum >= 0 ? 1 : -1;
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 242:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 243:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 244:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 245:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t RoundingHalfSum(std::int16_t a, std::int16_t b) {
 246:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 247:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 248:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 249:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sign = sum >= 0 ? 1 : -1;
 250:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>((sum + sign) / 2);
 251:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 253:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 254:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingAdd(IntegerType a, IntegerType b) {
 255:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 256:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 257:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 258:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 259:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 260:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // So far this is only needed for int16.
 261:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 262:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingAdd(std::int16_t a, std::int16_t b) {
 263:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 265:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 266:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 267:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       std::min(static_cast<std::int32_t>(32767),
 268:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                std::max(static_cast<std::int32_t>(-32768), sum)));
 269:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 270:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 271:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns a+b, saturating if the integers are 16bit or narrower,
 272:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // otherwise just a plain addition.
 273:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, bool Is16Bit>
 274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl {
 275:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) { return Add(a, b); }
 276:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 277:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 278:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl<IntegerType, true> {
 279:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) {
 280:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return SaturatingAdd(a, b);
 281:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 282:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 283:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 284:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType AddSaturatingIf16Bit(IntegerType a, IntegerType b) {
 285:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   using ScalarType =
 286:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       typename FixedPointRawTypeTraits<IntegerType>::ScalarRawType;
 287:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return AddSaturatingIf16BitImpl<IntegerType, sizeof(ScalarType) == 2>::Run(a,
 288:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                                              b);
 289:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 291:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns the integer that represents the product of two fixed-point
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // numbers, interpreting all integers as fixed-point values in the
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1), rounding to the nearest value, and saturating
 294:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // -1 * -1 to the maximum value (since 1 is not in the half-open
 295:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1)).
 296:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 297:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // [The explanation below specializes to std::int32_t for example purpose.]
 298:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 299:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The mapping between IntegerType and the interval [-1, 1) is unique and
 300:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // implied by IntegerType, which is assumed to be signed. For example,
 301:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // for IntegerType==std::int32_t, the mapping is
 302:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   real_value = integer_value / 2^31.
 303:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // So in this case, and leaving aside rounding and saturating, this
 304:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // function computes ((a / 2^31) * (b / 2^31)) * 2^31, which simplifies to
 305:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^31.
 306:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 307:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The 'doubling' part in the name of this function comes from the fact that
 308:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // this operation is very close to a "multiply-high" operation, keeping only
 309:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // the top half bits, except that that would be effectively computing
 310:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^32,
 311:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // so here we are computing 2x that, since
 312:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   1/2^31 = 2 * 1/2^32.
 313:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The idea is to use all of the available 32 bits in the destination int32
 314:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // value.
 315:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 316:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // [End of the explanation specializing to int32.]
 317:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 318:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This is equivalent to the VQRDMULH instruction in ARM NEON.
 319:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 320:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingRoundingDoublingHighMul(IntegerType a, IntegerType b) {
 321:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 322:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 323:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 324:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 325:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 326:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function implements the same computation as the ARMv7 NEON VQRDMULH
 327:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // instruction.
 328:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 329:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t SaturatingRoundingDoublingHighMul(std::int32_t a,
 330:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int32_t b) {
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int32_t>::min();
 332:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 336:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 339:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 340:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 341:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 342:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingRoundingDoublingHighMul(std::int16_t a,
 343:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int16_t b) {
 344:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int16_t>::min();
 345:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 346:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 347:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 348:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 349:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 350:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 351:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 352:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 353:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 354:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Correctly-rounded-to-nearest division by a power-of-two.
 355:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Also known as a rounding arithmetic right shift.
 356:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 357:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline IntegerType RoundingDivideByPOT(IntegerType x, int exponent) {
 358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent >= 0);
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 915              		.loc 6 360 0
 916 02b0 AE0BDFED 		vldr.64	d16, .L169	@ int
 917 02b4 1913A0E1 		lsl	r1, r9, r3
 918 02b8 08309DE5 		ldr	r3, [sp, #8]
 919 02bc 914AC5E0 		smull	r4, r5, r1, r10
 920 02c0 00B063E2 		rsb	fp, r3, #0
 921              	.LBE367:
 922              	.LBE366:
 923              	.LBE365:
 924              	.LBB414:
 925              	.LBB415:
 926              		.file 7 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tenso
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #ifndef ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #ifdef GEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #define ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #endif
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #endif
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #include <functional>
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #include "fixedpoint/fixedpoint.h"
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/optimized/neon_check.h"
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/types.h"
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** namespace tflite {
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** constexpr int kReverseShift = -1;
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** inline void GetActivationMinMax(FusedActivationFunctionType ac,
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_min,
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_max) {
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   switch (ac) {
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kNone:
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = std::numeric_limits<float>::lowest();
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       break;
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu:
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       break;
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu1:
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = -1.f;
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 1.f;
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       break;
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu6:
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 6.f;
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       break;
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   }
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** }
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** template <typename T>
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** inline T ActivationFunctionWithMinMax(T x, T output_activation_min,
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                       T output_activation_max) {
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   using std::max;
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   using std::min;
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   return min(max(x, output_activation_min), output_activation_max);
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** }
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** // Legacy function, left for compatibility only.
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** template <FusedActivationFunctionType Ac>
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** float ActivationFunction(float x) {
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   float output_activation_min, output_activation_max;
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   GetActivationMinMax(Ac, &output_activation_min, &output_activation_max);
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   return ActivationFunctionWithMinMax(x, output_activation_min,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                       output_activation_max);
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** }
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                          const float* bias_data, int array_size,
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                          float* array_data) {
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   // Note: see b/132215220: in May 2019 we thought it would be OK to replace
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   // this with the Eigen one-liner:
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   //   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max).
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   // This turned out to severely regress performance: +4ms (i.e. 8%) on
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   // MobileNet v2 / 1.0 / 224. So we keep custom NEON code for now.
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   TFLITE_DCHECK_EQ((array_size % bias_size), 0);
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #ifdef USE_NEON
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   float* array_ptr = array_data;
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   float* array_end_ptr = array_ptr + array_size;
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_min_vec = vdupq_n_f32(clamp_min);
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_max_vec = vdupq_n_f32(clamp_max);
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   for (; array_ptr != array_end_ptr; array_ptr += bias_size) {
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     int i = 0;
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 16; i += 16) {
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto b0 = vld1q_f32(bias_data + i);
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto b1 = vld1q_f32(bias_data + i + 4);
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto b2 = vld1q_f32(bias_data + i + 8);
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto b3 = vld1q_f32(bias_data + i + 12);
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto a0 = vld1q_f32(array_ptr + i);
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto a1 = vld1q_f32(array_ptr + i + 4);
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto a2 = vld1q_f32(array_ptr + i + 8);
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto a3 = vld1q_f32(array_ptr + i + 12);
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto x0 = vaddq_f32(a0, b0);
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto x1 = vaddq_f32(a1, b1);
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto x2 = vaddq_f32(a2, b2);
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto x3 = vaddq_f32(a3, b3);
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x0 = vmaxq_f32(clamp_min_vec, x0);
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x1 = vmaxq_f32(clamp_min_vec, x1);
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x2 = vmaxq_f32(clamp_min_vec, x2);
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x3 = vmaxq_f32(clamp_min_vec, x3);
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x0 = vminq_f32(clamp_max_vec, x0);
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x1 = vminq_f32(clamp_max_vec, x1);
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x2 = vminq_f32(clamp_max_vec, x2);
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x3 = vminq_f32(clamp_max_vec, x3);
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x0);
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 4, x1);
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 8, x2);
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 12, x3);
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     }
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 4; i += 4) {
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto b = vld1q_f32(bias_data + i);
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto a = vld1q_f32(array_ptr + i);
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto x = vaddq_f32(a, b);
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x = vmaxq_f32(clamp_min_vec, x);
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x = vminq_f32(clamp_max_vec, x);
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x);
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     }
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     for (; i < bias_size; i++) {
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       array_ptr[i] = ActivationFunctionWithMinMax(array_ptr[i] + bias_data[i],
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                                   clamp_min, clamp_max);
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     }
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   }
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #else  // not NEON
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   for (int array_offset = 0; array_offset < array_size;
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****        array_offset += bias_size) {
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     for (int i = 0; i < bias_size; i++) {
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       array_data[array_offset + i] = ActivationFunctionWithMinMax(
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****           array_data[array_offset + i] + bias_data[i], clamp_min, clamp_max);
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     }
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   }
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #endif
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** }
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierSmallerThanOneExp(
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(
 927              		.loc 7 145 0
 928 02c4 0C309DE5 		ldr	r3, [sp, #12]
 929              	.LBE415:
 930              	.LBE414:
 931              	.LBB458:
 932              	.LBB395:
 933              	.LBB386:
 934              		.loc 6 360 0
 935 02c8 90BB01EE 		vmov.32	d17[0], fp
 936              	.LBE386:
 937              	.LBE395:
 938              	.LBE458:
 939              	.LBB459:
 940              	.LBB450:
 941              		.loc 7 145 0
 942 02cc 003063E2 		rsb	r3, r3, #0
 943              	.LBE450:
 944              	.LBE459:
 945              	.LBB460:
 946              	.LBB396:
 947              	.LBB387:
 948              		.loc 6 360 0
 949 02d0 A07431F3 		vshl.u64	d7, d16, d17
 950              	.LBE387:
 951              	.LBE396:
 952              	.LBB397:
 953              	.LBB398:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 954              		.loc 6 337 0
 955 02d4 000054E3 		cmp	r4, #0
 956              	.LBE398:
 957              	.LBE397:
 958              	.LBE460:
 959              	.LBB461:
 960              	.LBB451:
 961              	.LBB416:
 962              	.LBB417:
 963              		.loc 6 360 0
 964 02d8 903B01EE 		vmov.32	d17[0], r3
 965              	.LBE417:
 966              	.LBE416:
 967              		.loc 7 145 0
 968 02dc 34308DE5 		str	r3, [sp, #52]
 969              	.LBB441:
 970              	.LBB434:
 971              		.loc 6 360 0
 972 02e0 A00471F3 		vshl.u64	d16, d16, d17
 973              	.LBE434:
 974              	.LBE441:
 975              	.LBE451:
 976              	.LBE461:
 977              	.LBB462:
 978              	.LBB403:
 979              	.LBB388:
 980 02e4 100A17EE 		vmov	r0, s14	@ int
 981 02e8 018040E2 		sub	r8, r0, #1
 982              	.LVL97:
 983              	.LBE388:
 984              	.LBE403:
 985              	.LBE462:
 986              	.LBB463:
 987              	.LBB452:
 988              	.LBB442:
 989              	.LBB435:
 990 02ec 302B53EC 		vmov	r2, r3, d16	@ int
 991 02f0 013042E2 		sub	r3, r2, #1
 992 02f4 012047E2 		sub	r2, r7, #1
 993 02f8 38308DE5 		str	r3, [sp, #56]
 994              	.LBB418:
 995              	.LBB419:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 996              		.loc 6 141 0
 997 02fc C330A0E1 		asr	r3, r3, #1
 998 0300 10208DE5 		str	r2, [sp, #16]
 999              	.LBE419:
 1000              	.LBE418:
 1001              	.LBE435:
 1002              	.LBE442:
 1003              	.LBE452:
 1004              	.LBE463:
 1005              	.LBB464:
 1006              	.LBB404:
 1007              	.LBB389:
 1008              	.LBB368:
 1009              	.LBB369:
 1010 0304 C820A0E1 		asr	r2, r8, #1
 1011              	.LBE369:
 1012              	.LBE368:
 1013              	.LBE389:
 1014              	.LBE404:
 1015              	.LBE464:
 1016              	.LBB465:
 1017              	.LBB453:
 1018              	.LBB443:
 1019              	.LBB436:
 1020              	.LBB421:
 1021              	.LBB420:
 1022 0308 3C308DE5 		str	r3, [sp, #60]
 1023              	.LBE420:
 1024              	.LBE421:
 1025              	.LBE436:
 1026              	.LBE443:
 1027              	.LBE453:
 1028              	.LBE465:
 1029              	.LBB466:
 1030              	.LBB405:
 1031              	.LBB399:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1032              		.loc 6 337 0
 1033 030c 0030D5E2 		sbcs	r3, r5, #0
 1034              	.LBE399:
 1035              	.LBE405:
 1036              	.LBB406:
 1037              	.LBB390:
 1038              	.LBB371:
 1039              	.LBB370:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1040              		.loc 6 141 0
 1041 0310 04208DE5 		str	r2, [sp, #4]
 1042              	.LBE370:
 1043              	.LBE371:
 1044              	.LBE390:
 1045              	.LBE406:
 1046              	.LBB407:
 1047              	.LBB400:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1048              		.loc 6 337 0
 1049 0314 0121A0A3 		movge	r2, #1073741824
 1050 0318 0721A0B3 		movlt	r2, #-1073741823
 1051 031c 0030A0A3 		movge	r3, #0
 1052 0320 0030E0B3 		mvnlt	r3, #0
 1053 0324 046092E0 		adds	r6, r2, r4
 1054 0328 0570A3E0 		adc	r7, r3, r5
 1055              	.LVL98:
 1056 032c 14209DE5 		ldr	r2, [sp, #20]
 1057 0330 18309DE5 		ldr	r3, [sp, #24]
 1058              	.LBE400:
 1059              	.LBE407:
 1060              	.LBB408:
 1061              	.LBB391:
 1062              	.LBB372:
 1063              	.LBB373:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1064              		.loc 6 95 0
 1065 0334 0050A0E3 		mov	r5, #0
 1066 0338 020183E0 		add	r0, r3, r2, lsl #2
 1067              	.LBE373:
 1068              	.LBE372:
 1069              	.LBE391:
 1070              	.LBE408:
 1071              	.LBB409:
 1072              	.LBB401:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1073              		.loc 6 337 0
 1074 033c C72FA0E1 		asr	r2, r7, #31
 1075 0340 0221C2E3 		bic	r2, r2, #-2147483648
 1076 0344 0030A0E3 		mov	r3, #0
 1077 0348 026096E0 		adds	r6, r6, r2
 1078 034c 0620A0E1 		mov	r2, r6
 1079 0350 0370A7E0 		adc	r7, r7, r3
 1080 0354 A22FA0E1 		lsr	r2, r2, #31
 1081 0358 01005AE1 		cmp	r10, r1
 1082 035c 02015103 		cmpeq	r1, #-2147483648
 1083              	.LBE401:
 1084              	.LBE409:
 1085              	.LBB410:
 1086              	.LBB392:
 1087              	.LBB376:
 1088              	.LBB377:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1089              		.loc 6 95 0
 1090 0360 C830A0E1 		asr	r3, r8, #1
 1091 0364 0261C8E3 		bic	r6, r8, #-2147483648
 1092              	.LBE377:
 1093              	.LBE376:
 1094              	.LBE392:
 1095              	.LBE410:
 1096              	.LBB411:
 1097              	.LBB402:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1098              		.loc 6 337 0
 1099 0368 872082E1 		orr	r2, r2, r7, lsl #1
 1100 036c 0221E003 		mvneq	r2, #-2147483648
 1101              	.LBE402:
 1102              	.LBE411:
 1103              	.LBB412:
 1104              	.LBB393:
 1105              	.LBB379:
 1106              	.LBB374:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1107              		.loc 6 95 0
 1108 0370 0070A0E1 		mov	r7, r0
 1109              	.LBE374:
 1110              	.LBE379:
 1111              	.LBB380:
 1112              	.LBB378:
 1113 0374 A21F83E0 		add	r1, r3, r2, lsr #31
 1114              	.LBE378:
 1115              	.LBE380:
 1116              	.LBB381:
 1117              	.LBB382:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1118              		.loc 6 141 0
 1119 0378 523BA0E1 		asr	r3, r2, fp
 1120              	.LBE382:
 1121              	.LBE381:
 1122              	.LBB383:
 1123              	.LBB384:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1124              		.loc 6 71 0
 1125 037c 082002E0 		and	r2, r2, r8
 1126              	.LBE384:
 1127              	.LBE383:
 1128              	.LBB385:
 1129              	.LBB375:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1130              		.loc 6 95 0
 1131 0380 010052E1 		cmp	r2, r1
 1132 0384 013083C2 		addgt	r3, r3, #1
 1133 0388 24308DE5 		str	r3, [sp, #36]
 1134              	.LVL99:
 1135              	.L93:
 1136              	.LBE375:
 1137              	.LBE385:
 358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 1138              		.loc 6 358 0
 1139 038c 08309DE5 		ldr	r3, [sp, #8]
 1140 0390 000053E3 		cmp	r3, #0
 1141 0394 690100CA 		bgt	.L164
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 1142              		.loc 6 359 0
 1143 0398 1F0073E3 		cmn	r3, #31
 1144 039c 5F0100BA 		blt	.L165
 1145              	.LVL100:
 1146              	.LBE393:
 1147              	.LBE412:
 1148              	.LBE466:
 1149              	.LBB467:
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     // accumulate in scaled_x before clamping to avoid overflow
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     const int32_t x = params.input1_offset;  // x = 0
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     const int32_t shifted_x = x * (1 << params.left_shift);
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     int32_t scaled_x = MultiplyByQuantizedMultiplierSmallerThanOneExp(
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****         shifted_x, params.input1_multiplier, params.input1_shift);
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     for (size_t j = 0; j < num_inputs; ++j) {
 1150              		.loc 4 64 0
 1151 03a0 14309DE5 		ldr	r3, [sp, #20]
 1152 03a4 000053E3 		cmp	r3, #0
 1153 03a8 6C00000A 		beq	.L119
 1154 03ac 18E09DE5 		ldr	lr, [sp, #24]
 1155 03b0 09C0A0E1 		mov	ip, r9
 1156 03b4 24409DE5 		ldr	r4, [sp, #36]
 1157 03b8 0800A0E1 		mov	r0, r8
 1158              	.LVL101:
 1159              	.L88:
 1160              	.LBB468:
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       const int32_t y = params.input1_offset + input_data[j][i];
 1161              		.loc 4 65 0
 1162 03bc 04309EE4 		ldr	r3, [lr], #4
 1163 03c0 D51093E1 		ldrsb	r1, [r3, r5]
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       const int32_t shifted_y = y * (1 << params.left_shift);
 1164              		.loc 4 66 0
 1165 03c4 00309DE5 		ldr	r3, [sp]
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       const int32_t y = params.input1_offset + input_data[j][i];
 1166              		.loc 4 65 0
 1167 03c8 0C1081E0 		add	r1, r1, ip
 1168              		.loc 4 66 0
 1169 03cc 1113A0E1 		lsl	r1, r1, r3
 1170              	.LBB469:
 1171              	.LBB470:
 1172              	.LBB471:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1173              		.loc 6 334 0
 1174 03d0 912AC3E0 		smull	r2, r3, r1, r10
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 1175              		.loc 6 331 0
 1176 03d4 01005AE1 		cmp	r10, r1
 1177 03d8 02015103 		cmpeq	r1, #-2147483648
 1178 03dc 0110A003 		moveq	r1, #1
 1179 03e0 0010A013 		movne	r1, #0
 1180              	.LBE471:
 1181              	.LBE470:
 1182              	.LBB474:
 1183              	.LBB475:
 1184              	.LBB476:
 1185              	.LBB477:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1186              		.loc 6 95 0
 1187 03e4 7110AFE6 		sxtb	r1, r1
 1188              	.LBE477:
 1189              	.LBE476:
 1190              	.LBE475:
 1191              	.LBE474:
 1192              	.LBB495:
 1193              	.LBB472:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1194              		.loc 6 337 0
 1195 03e8 000052E3 		cmp	r2, #0
 1196 03ec 0080D3E2 		sbcs	r8, r3, #0
 1197 03f0 0181A0A3 		movge	r8, #1073741824
 1198 03f4 0781A0B3 		movlt	r8, #-1073741823
 1199 03f8 0090A0A3 		movge	r9, #0
 1200 03fc 0090E0B3 		mvnlt	r9, #0
 1201 0400 028098E0 		adds	r8, r8, r2
 1202 0404 0390A9E0 		adc	r9, r9, r3
 1203 0408 0030A0E3 		mov	r3, #0
 1204 040c C92FA0E1 		asr	r2, r9, #31
 1205 0410 0221C2E3 		bic	r2, r2, #-2147483648
 1206 0414 082092E0 		adds	r2, r2, r8
 1207 0418 A22FA0E1 		lsr	r2, r2, #31
 1208 041c 0930A3E0 		adc	r3, r3, r9
 1209              	.LBE472:
 1210              	.LBE495:
 1211              	.LBB496:
 1212              	.LBB493:
 1213              	.LBB481:
 1214              	.LBB478:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1215              		.loc 6 95 0
 1216 0420 000051E3 		cmp	r1, #0
 1217 0424 04109DE5 		ldr	r1, [sp, #4]
 1218              	.LBE478:
 1219              	.LBE481:
 1220              	.LBE493:
 1221              	.LBE496:
 1222              	.LBB497:
 1223              	.LBB473:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1224              		.loc 6 337 0
 1225 0428 832082E1 		orr	r2, r2, r3, lsl #1
 1226              	.LBE473:
 1227              	.LBE497:
 1228              	.LBB498:
 1229              	.LBB494:
 1230              	.LBB482:
 1231              	.LBB479:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1232              		.loc 6 95 0
 1233 042c 0030A013 		movne	r3, #0
 1234 0430 A23FA001 		moveq	r3, r2, lsr #31
 1235              	.LBE479:
 1236              	.LBE482:
 1237              	.LBB483:
 1238              	.LBB484:
 1239              	.LBB485:
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1240              		.loc 6 158 0
 1241 0434 02800000 		andeq	r8, r0, r2
 1242 0438 0680A011 		movne	r8, r6
 1243              	.LBE485:
 1244              	.LBE484:
 1245              	.LBE483:
 1246              	.LBB486:
 1247              	.LBB487:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1248              		.loc 6 141 0
 1249 043c 0221E013 		mvnne	r2, #-2147483648
 1250              	.LBE487:
 1251              	.LBE486:
 1252              	.LBB489:
 1253              	.LBB480:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1254              		.loc 6 95 0
 1255 0440 013083E0 		add	r3, r3, r1
 1256              	.LBE480:
 1257              	.LBE489:
 1258              	.LBB490:
 1259              	.LBB488:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1260              		.loc 6 141 0
 1261 0444 522BA0E1 		asr	r2, r2, fp
 1262              	.LBE488:
 1263              	.LBE490:
 1264              	.LBB491:
 1265              	.LBB492:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1266              		.loc 6 95 0
 1267 0448 080053E1 		cmp	r3, r8
 1268 044c 0280A0A1 		movge	r8, r2
 1269 0450 018082B2 		addlt	r8, r2, #1
 1270              	.LBE492:
 1271              	.LBE491:
 1272              	.LBE494:
 1273              	.LBE498:
 1274              	.LBE469:
 1275              	.LBE468:
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       const int32_t y = params.input1_offset + input_data[j][i];
 1276              		.loc 4 64 0
 1277 0454 07005EE1 		cmp	lr, r7
 1278              	.LBB499:
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       int32_t scaled_y = MultiplyByQuantizedMultiplierSmallerThanOneExp(
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****           shifted_y, params.input1_multiplier, params.input1_shift);
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       scaled_x += scaled_y;
 1279              		.loc 4 69 0
 1280 0458 084084E0 		add	r4, r4, r8
 1281              	.LVL102:
 1282              	.LBE499:
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       const int32_t y = params.input1_offset + input_data[j][i];
 1283              		.loc 4 64 0
 1284 045c D6FFFF1A 		bne	.L88
 1285 0460 0C90A0E1 		mov	r9, ip
 1286 0464 0080A0E1 		mov	r8, r0
 1287              	.LVL103:
 1288              	.L85:
 1289              	.LBE467:
 1290              	.LBB500:
 1291              	.LBB454:
 1292              	.LBB444:
 1293              	.LBB445:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1294              		.loc 6 334 0
 1295 0468 1C309DE5 		ldr	r3, [sp, #28]
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 1296              		.loc 6 331 0
 1297 046c 040053E1 		cmp	r3, r4
 1298 0470 02015403 		cmpeq	r4, #-2147483648
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1299              		.loc 6 334 0
 1300 0474 9403C1E0 		smull	r0, r1, r4, r3
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 1301              		.loc 6 331 0
 1302 0478 0140A003 		moveq	r4, #1
 1303              	.LVL104:
 1304 047c 0040A013 		movne	r4, #0
 1305              	.LVL105:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1306              		.loc 6 335 0
 1307 0480 000050E3 		cmp	r0, #0
 1308 0484 0030D1E2 		sbcs	r3, r1, #0
 1309 0488 0121A0A3 		movge	r2, #1073741824
 1310 048c 0721A0B3 		movlt	r2, #-1073741823
 1311 0490 0030A0A3 		movge	r3, #0
 1312 0494 0030E0B3 		mvnlt	r3, #0
 1313              	.LVL106:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1314              		.loc 6 338 0
 1315 0498 000054E3 		cmp	r4, #0
 1316 049c 0221E013 		mvnne	r2, #-2147483648
 1317              	.LVL107:
 1318 04a0 0800001A 		bne	.L90
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1319              		.loc 6 337 0
 1320 04a4 020090E0 		adds	r0, r0, r2
 1321              	.LVL108:
 1322 04a8 0310A1E0 		adc	r1, r1, r3
 1323 04ac 0030A0E3 		mov	r3, #0
 1324 04b0 C12FA0E1 		asr	r2, r1, #31
 1325 04b4 0221C2E3 		bic	r2, r2, #-2147483648
 1326 04b8 002092E0 		adds	r2, r2, r0
 1327 04bc A22FA0E1 		lsr	r2, r2, #31
 1328 04c0 0130A3E0 		adc	r3, r3, r1
 1329 04c4 832082E1 		orr	r2, r2, r3, lsl #1
 1330              	.L90:
 1331              	.LVL109:
 1332              	.LBE445:
 1333              	.LBE444:
 1334              	.LBB446:
 1335              	.LBB437:
 358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 1336              		.loc 6 358 0
 1337 04c8 0C309DE5 		ldr	r3, [sp, #12]
 1338 04cc 000053E3 		cmp	r3, #0
 1339 04d0 0A0100CA 		bgt	.L166
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 1340              		.loc 6 359 0
 1341 04d4 1F0073E3 		cmn	r3, #31
 1342 04d8 F60000BA 		blt	.L167
 1343              	.LVL110:
 1344              	.LBB422:
 1345              	.LBB423:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1346              		.loc 6 95 0
 1347 04dc 3C309DE5 		ldr	r3, [sp, #60]
 1348              	.LBE423:
 1349              	.LBE422:
 1350              	.LBE437:
 1351              	.LBE446:
 1352              	.LBE454:
 1353              	.LBE500:
 1354              	.LBE364:
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     // accumulate in scaled_x before clamping to avoid overflow
 1355              		.loc 4 57 0
 1356 04e0 015085E2 		add	r5, r5, #1
 1357              	.LVL111:
 1358              	.LBB506:
 1359              	.LBB501:
 1360              	.LBB455:
 1361              	.LBB447:
 1362              	.LBB438:
 1363              	.LBB425:
 1364              	.LBB426:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1365              		.loc 6 71 0
 1366 04e4 38009DE5 		ldr	r0, [sp, #56]
 1367              	.LBE426:
 1368              	.LBE425:
 1369              	.LBB428:
 1370              	.LBB424:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1371              		.loc 6 95 0
 1372 04e8 A21F83E0 		add	r1, r3, r2, lsr #31
 1373              	.LBE424:
 1374              	.LBE428:
 1375              	.LBB429:
 1376              	.LBB430:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1377              		.loc 6 141 0
 1378 04ec 34309DE5 		ldr	r3, [sp, #52]
 1379 04f0 5233A0E1 		asr	r3, r2, r3
 1380              	.LBE430:
 1381              	.LBE429:
 1382              	.LBB431:
 1383              	.LBB427:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1384              		.loc 6 71 0
 1385 04f4 002002E0 		and	r2, r2, r0
 1386              	.LVL112:
 1387              	.LBE427:
 1388              	.LBE431:
 1389              	.LBB432:
 1390              	.LBB433:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1391              		.loc 6 95 0
 1392 04f8 010052E1 		cmp	r2, r1
 1393 04fc 013083C2 		addgt	r3, r3, #1
 1394              	.LBE433:
 1395              	.LBE432:
 1396              	.LBE438:
 1397              	.LBE447:
 1398              	.LBE455:
 1399              	.LBE501:
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     }
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     const int32_t raw_output =
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****         MultiplyByQuantizedMultiplierSmallerThanOneExp(
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****             scaled_x, params.output_multiplier, params.output_shift) +
 1400              		.loc 4 74 0
 1401 0500 28209DE5 		ldr	r2, [sp, #40]
 1402 0504 023083E0 		add	r3, r3, r2
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****         params.output_offset;
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     const int32_t clamped_output =
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****         std::min(params.quantized_activation_max,
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****                  std::max(params.quantized_activation_min, raw_output));
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     output_data[i] = static_cast<int8_t>(clamped_output);
 1403              		.loc 4 79 0
 1404 0508 2C209DE5 		ldr	r2, [sp, #44]
 1405 050c 020053E1 		cmp	r3, r2
 1406 0510 0230A0B1 		movlt	r3, r2
 1407 0514 30209DE5 		ldr	r2, [sp, #48]
 1408 0518 020053E1 		cmp	r3, r2
 1409 051c 0230A0A1 		movge	r3, r2
 1410              	.LBE506:
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     // accumulate in scaled_x before clamping to avoid overflow
 1411              		.loc 4 57 0
 1412 0520 20209DE5 		ldr	r2, [sp, #32]
 1413 0524 020055E1 		cmp	r5, r2
 1414              	.LBB507:
 1415              		.loc 4 79 0
 1416 0528 10209DE5 		ldr	r2, [sp, #16]
 1417 052c 0130E2E5 		strb	r3, [r2, #1]!
 1418 0530 10208DE5 		str	r2, [sp, #16]
 1419              	.LVL113:
 1420              	.LBE507:
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     // accumulate in scaled_x before clamping to avoid overflow
 1421              		.loc 4 57 0
 1422 0534 94FFFF3A 		bcc	.L93
 1423 0538 40109DE5 		ldr	r1, [sp, #64]
 1424              	.LVL114:
 1425              	.L80:
 1426              	.LBE363:
 1427              	.LBE516:
 1428              	.LBE524:
 1429              	.LBB525:
 1430              	.LBB526:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1431              		.loc 5 203 0
 1432 053c 050051E3 		cmp	r1, #5
 1433 0540 030000DA 		ble	.L94
 1434              	.LVL115:
 1435              	.L155:
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1436              		.loc 5 207 0
 1437 0544 44009DE5 		ldr	r0, [sp, #68]
 1438 0548 000050E3 		cmp	r0, #0
 1439 054c 0000000A 		beq	.L94
 1440 0550 FEFFFFEB 		bl	_ZdaPv
 1441              	.LVL116:
 1442              	.L94:
 1443              	.LBE526:
 1444              	.LBE525:
 1445              	.LBE325:
 1446              	.LBE324:
 199:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** }
 1447              		.loc 1 199 0
 1448 0554 0000A0E3 		mov	r0, #0
 1449              		.loc 1 200 0
 1450 0558 5CD08DE2 		add	sp, sp, #92
 1451              		.cfi_remember_state
 1452              		.cfi_def_cfa_offset 36
 1453              		@ sp needed
 1454 055c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1455              	.LVL117:
 1456              	.L119:
 1457              		.cfi_restore_state
 1458              	.LBB538:
 1459              	.LBB534:
 1460              	.LBB527:
 1461              	.LBB517:
 1462              	.LBB511:
 1463              	.LBB508:
 1464              	.LBB502:
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       const int32_t y = params.input1_offset + input_data[j][i];
 1465              		.loc 4 64 0
 1466 0560 24409DE5 		ldr	r4, [sp, #36]
 1467 0564 BFFFFFEA 		b	.L85
 1468              	.LVL118:
 1469              	.L118:
 1470              	.LBE502:
 1471              	.LBE508:
 1472              	.LBE511:
 1473              	.LBB512:
 1474              	.LBB361:
 1475              	.LBB357:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1476              		.loc 5 292 0
 1477 0568 0350A0E1 		mov	r5, r3
 1478 056c 20FFFFEA 		b	.L72
 1479              	.L170:
 1480              		.align	3
 1481              	.L169:
 1482 0570 01000000 		.word	1
 1483 0574 00000000 		.word	0
 1484 0578 00000000 		.word	0
 1485              	.LVL119:
 1486              	.L158:
 1487              	.LBE357:
 1488              	.LBE361:
 1489              	.LBE512:
 1490              	.LBE517:
 1491              	.LBE527:
 1492              	.LBE534:
 1493              	.LBE538:
 1494              	.LBB539:
 1495              	.LBB540:
 1496              	.LBB541:
 1497              	.LBB542:
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 1498              		.loc 2 152 0
 1499 057c 002098E5 		ldr	r2, [r8]
 1500              	.LBE542:
 1501              	.LBE541:
 1502              	.LBB544:
 1503              	.LBB545:
 138:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const T** all_inputs = static_cast<decltype(all_inputs)>(scratch_buffer);
 1504              		.loc 1 138 0
 1505 0580 0700A0E1 		mov	r0, r7
 1506 0584 443097E5 		ldr	r3, [r7, #68]
 1507 0588 101098E5 		ldr	r1, [r8, #16]
 1508              	.LBE545:
 1509              	.LBE544:
 1510              	.LBB555:
 1511              	.LBB543:
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 1512              		.loc 2 152 0
 1513 058c 006092E5 		ldr	r6, [r2]
 1514              	.LVL120:
 1515              	.LBE543:
 1516              	.LBE555:
 1517              	.LBB556:
 1518              	.LBB554:
 138:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   const T** all_inputs = static_cast<decltype(all_inputs)>(scratch_buffer);
 1519              		.loc 1 138 0
 1520 0590 33FF2FE1 		blx	r3
 1521              	.LVL121:
 1522 0594 0050A0E1 		mov	r5, r0
 1523              	.LVL122:
 1524              	.LBB546:
 140:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const TfLiteEvalTensor* next_input =
 1525              		.loc 1 140 0
 1526 0598 000056E3 		cmp	r6, #0
 1527 059c 04A040C2 		subgt	r10, r0, #4
 1528 05a0 0090A0C3 		movgt	r9, #0
 1529 05a4 0C0000DA 		ble	.L36
 1530              	.LVL123:
 1531              	.L37:
 1532              	.LBB547:
 1533              	.LBB548:
 1534              	.LBB549:
 1535              	.LBB550:
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1536              		.loc 3 36 0
 1537 05a8 003098E5 		ldr	r3, [r8]
 1538 05ac 0700A0E1 		mov	r0, r7
 1539 05b0 542097E5 		ldr	r2, [r7, #84]
 1540 05b4 093183E0 		add	r3, r3, r9, lsl #2
 1541 05b8 041093E5 		ldr	r1, [r3, #4]
 1542 05bc 32FF2FE1 		blx	r2
 1543              	.LVL124:
 1544              	.LBE550:
 1545              	.LBE549:
 1546              	.LBE548:
 1547              	.LBB551:
 1548              	.LBB552:
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 1549              		.loc 3 62 0
 1550 05c0 000050E3 		cmp	r0, #0
 1551 05c4 BA00000A 		beq	.L31
 1552              		.loc 3 63 0
 1553 05c8 003090E5 		ldr	r3, [r0]
 1554              	.LBE552:
 1555              	.LBE551:
 1556              	.LBE547:
 140:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const TfLiteEvalTensor* next_input =
 1557              		.loc 1 140 0
 1558 05cc 019089E2 		add	r9, r9, #1
 1559              	.LVL125:
 1560 05d0 090056E1 		cmp	r6, r9
 1561              	.LBB553:
 143:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   }
 1562              		.loc 1 143 0
 1563 05d4 0430AAE5 		str	r3, [r10, #4]!
 1564              	.LBE553:
 140:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****     const TfLiteEvalTensor* next_input =
 1565              		.loc 1 140 0
 1566 05d8 F2FFFF1A 		bne	.L37
 1567              	.LVL126:
 1568              	.L36:
 1569              	.LBE546:
 1570              	.LBE554:
 1571              	.LBE556:
 159:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****                          all_inputs, tflite::micro::GetTensorData<T>(output));
 1572              		.loc 1 159 0
 1573 05dc 0410A0E1 		mov	r1, r4
 1574 05e0 40008DE2 		add	r0, sp, #64
 1575 05e4 FEFFFFEB 		bl	_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1576              	.LVL127:
 1577              	.LBB557:
 1578              	.LBB558:
 1579              	.LBB559:
 1580              	.LBB560:
 1581              	.LBB561:
 1582              	.LBB562:
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1583              		.loc 5 232 0
 1584 05e8 40709DE5 		ldr	r7, [sp, #64]
 1585              	.LVL128:
 1586              	.LBE562:
 1587              	.LBE561:
 1588              	.LBE560:
 1589              	.LBE559:
 1590              	.LBE558:
 1591              	.LBE557:
 1592              	.LBB589:
 1593              	.LBB590:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1594              		.loc 3 56 0
 1595 05ec 008094E5 		ldr	r8, [r4]
 1596              	.LVL129:
 1597              	.LBE590:
 1598              	.LBE589:
 1599              	.LBB591:
 1600              	.LBB586:
 1601              	.LBB575:
 1602              	.LBB572:
 1603              	.LBB566:
 1604              	.LBB563:
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1605              		.loc 5 232 0
 1606 05f0 050057E3 		cmp	r7, #5
 1607 05f4 9E0000CA 		bgt	.L34
 1608              	.LVL130:
 1609              	.LBE563:
 1610              	.LBE566:
 1611              	.LBB567:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1612              		.loc 5 292 0
 1613 05f8 000057E3 		cmp	r7, #0
 1614 05fc AA0000DA 		ble	.L97
 1615              	.LBE567:
 1616              	.LBB568:
 1617              	.LBB564:
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1618              		.loc 5 232 0
 1619 0600 44008DE2 		add	r0, sp, #68
 1620              	.LVL131:
 1621              	.L38:
 1622 0604 5031A0E7 		sbfx	r3, r0, #2, #1
 1623 0608 033003E2 		and	r3, r3, #3
 1624 060c 070053E1 		cmp	r3, r7
 1625 0610 0730A021 		movcs	r3, r7
 1626 0614 080057E3 		cmp	r7, #8
 1627 0618 0730A0D1 		movle	r3, r7
 1628 061c 9A0000CA 		bgt	.L168
 1629              	.LVL132:
 1630              	.L40:
 1631 0620 010053E3 		cmp	r3, #1
 1632              	.LBE564:
 1633              	.LBE568:
 1634              	.LBB569:
 1635              		.loc 5 293 0
 1636 0624 004090E5 		ldr	r4, [r0]
 1637              	.LVL133:
 1638 0628 9500000A 		beq	.L106
 1639 062c 042090E5 		ldr	r2, [r0, #4]
 1640 0630 020053E3 		cmp	r3, #2
 1641 0634 920404E0 		mul	r4, r2, r4
 1642              	.LVL134:
 1643 0638 9100000A 		beq	.L106
 1644 063c 082090E5 		ldr	r2, [r0, #8]
 1645 0640 030053E3 		cmp	r3, #3
 1646 0644 920404E0 		mul	r4, r2, r4
 1647              	.LVL135:
 1648 0648 8D00000A 		beq	.L106
 1649 064c 0C2090E5 		ldr	r2, [r0, #12]
 1650 0650 040053E3 		cmp	r3, #4
 1651 0654 920404E0 		mul	r4, r2, r4
 1652              	.LVL136:
 1653 0658 8900000A 		beq	.L106
 1654 065c 102090E5 		ldr	r2, [r0, #16]
 1655 0660 050053E3 		cmp	r3, #5
 1656 0664 920404E0 		mul	r4, r2, r4
 1657              	.LVL137:
 1658 0668 8500000A 		beq	.L106
 1659 066c 142090E5 		ldr	r2, [r0, #20]
 1660 0670 060053E3 		cmp	r3, #6
 1661 0674 920404E0 		mul	r4, r2, r4
 1662              	.LVL138:
 1663 0678 8100000A 		beq	.L106
 1664 067c 182090E5 		ldr	r2, [r0, #24]
 1665 0680 070053E3 		cmp	r3, #7
 1666 0684 920404E0 		mul	r4, r2, r4
 1667              	.LVL139:
 1668 0688 7D00000A 		beq	.L106
 1669 068c 1C1090E5 		ldr	r1, [r0, #28]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1670              		.loc 5 292 0
 1671 0690 0820A0E3 		mov	r2, #8
 1672              		.loc 5 293 0
 1673 0694 910404E0 		mul	r4, r1, r4
 1674              	.LVL140:
 1675              	.L42:
 1676 0698 030057E1 		cmp	r7, r3
 1677 069c 2800000A 		beq	.L43
 1678              	.LVL141:
 1679              	.L41:
 1680 06a0 03E047E0 		sub	lr, r7, r3
 1681 06a4 01C047E2 		sub	ip, r7, #1
 1682 06a8 04104EE2 		sub	r1, lr, #4
 1683 06ac 03C04CE0 		sub	ip, ip, r3
 1684 06b0 2111A0E1 		lsr	r1, r1, #2
 1685 06b4 02005CE3 		cmp	ip, #2
 1686 06b8 011081E2 		add	r1, r1, #1
 1687 06bc 0191A0E1 		lsl	r9, r1, #2
 1688 06c0 1200009A 		bls	.L44
 1689 06c4 033180E0 		add	r3, r0, r3, lsl #2
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1690              		.loc 5 292 0
 1691 06c8 5120C0F2 		vmov.i32	q9, #1  @ v4si
 1692 06cc 00C0A0E3 		mov	ip, #0
 1693              	.L46:
 1694 06d0 01C08CE2 		add	ip, ip, #1
 1695              		.loc 5 293 0
 1696 06d4 DF0A63F4 		vld1.64	{d16-d17}, [r3:64]
 1697 06d8 0C0051E1 		cmp	r1, ip
 1698 06dc 103083E2 		add	r3, r3, #16
 1699 06e0 F02962F2 		vmul.i32	q9, q9, q8
 1700 06e4 F9FFFF8A 		bhi	.L46
 1701 06e8 0E0059E1 		cmp	r9, lr
 1702 06ec 092082E0 		add	r2, r2, r9
 1703 06f0 5000C0F2 		vmov.i32	q8, #0  @ v4si
 1704 06f4 E048F2F2 		vext.32	q10, q9, q8, #2
 1705 06f8 F22964F2 		vmul.i32	q9, q10, q9
 1706 06fc E004F2F2 		vext.32	q8, q9, q8, #1
 1707 0700 F20960F2 		vmul.i32	q8, q8, q9
 1708 0704 903B10EE 		vmov.32	r3, d16[0]
 1709 0708 930404E0 		mul	r4, r3, r4
 1710 070c 0C00000A 		beq	.L43
 1711              	.L44:
 1712              	.LVL142:
 1713 0710 021190E7 		ldr	r1, [r0, r2, lsl #2]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1714              		.loc 5 292 0
 1715 0714 013082E2 		add	r3, r2, #1
 1716 0718 030057E1 		cmp	r7, r3
 1717              		.loc 5 293 0
 1718 071c 0231A0E1 		lsl	r3, r2, #2
 1719 0720 910404E0 		mul	r4, r1, r4
 1720              	.LVL143:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1721              		.loc 5 292 0
 1722 0724 060000DA 		ble	.L43
 1723              		.loc 5 293 0
 1724 0728 033080E0 		add	r3, r0, r3
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1725              		.loc 5 292 0
 1726 072c 022082E2 		add	r2, r2, #2
 1727              		.loc 5 293 0
 1728 0730 041093E5 		ldr	r1, [r3, #4]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1729              		.loc 5 292 0
 1730 0734 020057E1 		cmp	r7, r2
 1731              		.loc 5 293 0
 1732 0738 910404E0 		mul	r4, r1, r4
 1733              	.LVL144:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1734              		.loc 5 292 0
 1735              		.loc 5 293 0
 1736 073c 083093C5 		ldrgt	r3, [r3, #8]
 1737 0740 930404C0 		mulgt	r4, r3, r4
 1738              	.LVL145:
 1739              	.L43:
 1740              	.LBE569:
 1741              	.LBE572:
 1742              	.LBE575:
 1743              	.LBB576:
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     T x = 0;
 1744              		.loc 4 33 0
 1745 0744 000054E3 		cmp	r4, #0
 1746 0748 3D00000A 		beq	.L56
 1747              	.LVL146:
 1748              	.L39:
 1749              	.LBE576:
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   for (size_t i = 0; i < size; ++i) {
 1750              		.loc 4 32 0
 1751 074c 0020A0E3 		mov	r2, #0
 1752 0750 07C046E2 		sub	ip, r6, #7
 1753 0754 02E0A0E1 		mov	lr, r2
 1754              	.LVL147:
 1755              	.L57:
 1756              	.LBB582:
 1757              	.LBB577:
 1758              	.LBB578:
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       x += input_data[j][i];
 1759              		.loc 4 35 0
 1760 0758 000056E3 		cmp	r6, #0
 1761 075c 7B7A5FED 		vldr.32	s15, .L169+8
 1762 0760 3200000A 		beq	.L52
 1763 0764 080056E3 		cmp	r6, #8
 1764 0768 4300009A 		bls	.L108
 1765 076c 5C3085E2 		add	r3, r5, #92
 1766 0770 00A0A0E3 		mov	r10, #0
 1767              	.LVL148:
 1768              	.L54:
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     }
 1769              		.loc 4 36 0
 1770 0774 5C9013E5 		ldr	r9, [r3, #-92]
 1771 0778 09108AE2 		add	r1, r10, #9
 1772 077c 01005CE1 		cmp	ip, r1
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       x += input_data[j][i];
 1773              		.loc 4 35 0
 1774 0780 08108AE2 		add	r1, r10, #8
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     }
 1775              		.loc 4 36 0
 1776 0784 580013E5 		ldr	r0, [r3, #-88]
 1777 0788 02A089E0 		add	r10, r9, r2
 1778              	.LVL149:
 1779 078c 549013E5 		ldr	r9, [r3, #-84]
 1780 0790 007A9AED 		vldr.32	s14, [r10]
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       x += input_data[j][i];
 1781              		.loc 4 35 0
 1782 0794 01A0A0E1 		mov	r10, r1
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     }
 1783              		.loc 4 36 0
 1784 0798 020080E0 		add	r0, r0, r2
 1785 079c 00F0D3F5 		pld	[r3]
 1786 07a0 006A90ED 		vldr.32	s12, [r0]
 1787 07a4 029089E0 		add	r9, r9, r2
 1788 07a8 006AD9ED 		vldr.32	s13, [r9]
 1789 07ac 203083E2 		add	r3, r3, #32
 1790 07b0 877A77EE 		vadd.f32	s15, s15, s14
 1791              	.LVL150:
 1792 07b4 700013E5 		ldr	r0, [r3, #-112]
 1793 07b8 6C9013E5 		ldr	r9, [r3, #-108]
 1794 07bc 867A77EE 		vadd.f32	s15, s15, s12
 1795              	.LVL151:
 1796 07c0 020080E0 		add	r0, r0, r2
 1797 07c4 007A90ED 		vldr.32	s14, [r0]
 1798 07c8 029089E0 		add	r9, r9, r2
 1799 07cc 680013E5 		ldr	r0, [r3, #-104]
 1800 07d0 005AD9ED 		vldr.32	s11, [r9]
 1801 07d4 A67A77EE 		vadd.f32	s15, s15, s13
 1802              	.LVL152:
 1803 07d8 020080E0 		add	r0, r0, r2
 1804 07dc 649013E5 		ldr	r9, [r3, #-100]
 1805 07e0 006A90ED 		vldr.32	s12, [r0]
 1806 07e4 600013E5 		ldr	r0, [r3, #-96]
 1807 07e8 877A77EE 		vadd.f32	s15, s15, s14
 1808              	.LVL153:
 1809 07ec 029089E0 		add	r9, r9, r2
 1810 07f0 006AD9ED 		vldr.32	s13, [r9]
 1811 07f4 020080E0 		add	r0, r0, r2
 1812 07f8 007A90ED 		vldr.32	s14, [r0]
 1813 07fc A57A77EE 		vadd.f32	s15, s15, s11
 1814              	.LVL154:
 1815 0800 867A77EE 		vadd.f32	s15, s15, s12
 1816              	.LVL155:
 1817 0804 A67A77EE 		vadd.f32	s15, s15, s13
 1818              	.LVL156:
 1819 0808 877A77EE 		vadd.f32	s15, s15, s14
 1820              	.LVL157:
 1821 080c D8FFFF8A 		bhi	.L54
 1822              	.LVL158:
 1823              	.L53:
 1824 0810 010185E0 		add	r0, r5, r1, lsl #2
 1825              	.L55:
 1826              	.LVL159:
 1827 0814 043090E4 		ldr	r3, [r0], #4
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       x += input_data[j][i];
 1828              		.loc 4 35 0
 1829 0818 011081E2 		add	r1, r1, #1
 1830              	.LVL160:
 1831 081c 010056E1 		cmp	r6, r1
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     }
 1832              		.loc 4 36 0
 1833 0820 023083E0 		add	r3, r3, r2
 1834 0824 007A93ED 		vldr.32	s14, [r3]
 1835 0828 877A77EE 		vadd.f32	s15, s15, s14
 1836              	.LVL161:
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       x += input_data[j][i];
 1837              		.loc 4 35 0
 1838 082c F8FFFF8A 		bhi	.L55
 1839              	.LVL162:
 1840              	.L52:
 1841              	.LBE578:
 1842              	.LBE577:
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     T x = 0;
 1843              		.loc 4 33 0
 1844 0830 01E08EE2 		add	lr, lr, #1
 1845              	.LVL163:
 1846              	.LBB580:
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   }
 1847              		.loc 4 38 0
 1848 0834 017AE8EC 		vstmia.32	r8!, {s15}
 1849              	.LBE580:
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****     T x = 0;
 1850              		.loc 4 33 0
 1851 0838 04005EE1 		cmp	lr, r4
 1852 083c 042082E2 		add	r2, r2, #4
 1853 0840 C4FFFF3A 		bcc	.L57
 1854              	.LVL164:
 1855              	.L56:
 1856              	.LBE582:
 1857              	.LBE586:
 1858              	.LBE591:
 1859              	.LBB592:
 1860              	.LBB593:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1861              		.loc 5 203 0
 1862 0844 050057E3 		cmp	r7, #5
 1863 0848 3DFFFFCA 		bgt	.L155
 1864 084c 40FFFFEA 		b	.L94
 1865              	.LVL165:
 1866              	.L67:
 1867              	.LBE593:
 1868              	.LBE592:
 1869              	.LBE540:
 1870              	.LBE539:
 1871              	.LBB598:
 1872              	.LBB535:
 1873              	.LBB528:
 1874              	.LBB518:
 1875              	.LBB513:
 1876              	.LBB362:
 1877              	.LBB358:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1878              		.loc 5 292 0
 1879 0850 000051E3 		cmp	r1, #0
 1880 0854 110000DA 		ble	.L109
 1881              	.LBE358:
 1882              	.LBB359:
 1883              	.LBB355:
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1884              		.loc 5 232 0
 1885 0858 44008DE2 		add	r0, sp, #68
 1886 085c 3FFEFFEA 		b	.L68
 1887              	.L163:
 1888 0860 000053E3 		cmp	r3, #0
 1889              	.LBE355:
 1890              	.LBE359:
 1891              	.LBB360:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1892              		.loc 5 292 0
 1893 0864 0120A003 		moveq	r2, #1
 1894 0868 0350A001 		moveq	r5, r3
 1895              	.LVL166:
 1896 086c 62FEFF0A 		beq	.L71
 1897 0870 41FEFFEA 		b	.L70
 1898              	.LVL167:
 1899              	.L34:
 1900              	.LBE360:
 1901              	.LBE362:
 1902              	.LBE513:
 1903              	.LBE518:
 1904              	.LBE528:
 1905              	.LBE535:
 1906              	.LBE598:
 1907              	.LBB599:
 1908              	.LBB596:
 1909              	.LBB594:
 1910              	.LBB587:
 1911              	.LBB583:
 1912              	.LBB573:
 1913              	.LBB570:
 1914              	.LBB565:
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1915              		.loc 5 232 0
 1916 0874 44009DE5 		ldr	r0, [sp, #68]
 1917 0878 61FFFFEA 		b	.L38
 1918              	.LVL168:
 1919              	.L108:
 1920              	.LBE565:
 1921              	.LBE570:
 1922              	.LBE573:
 1923              	.LBE583:
 1924              	.LBB584:
 1925              	.LBB581:
 1926              	.LBB579:
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****       x += input_data[j][i];
 1927              		.loc 4 35 0
 1928 087c 0010A0E3 		mov	r1, #0
 1929 0880 E2FFFFEA 		b	.L53
 1930              	.LVL169:
 1931              	.L106:
 1932              	.LBE579:
 1933              	.LBE581:
 1934              	.LBE584:
 1935              	.LBB585:
 1936              	.LBB574:
 1937              	.LBB571:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1938              		.loc 5 292 0
 1939 0884 0320A0E1 		mov	r2, r3
 1940 0888 82FFFFEA 		b	.L42
 1941              	.LVL170:
 1942              	.L168:
 1943 088c 000053E3 		cmp	r3, #0
 1944 0890 0140A003 		moveq	r4, #1
 1945              	.LVL171:
 1946 0894 0320A001 		moveq	r2, r3
 1947 0898 80FFFF0A 		beq	.L41
 1948 089c 5FFFFFEA 		b	.L40
 1949              	.LVL172:
 1950              	.L109:
 1951              	.LBE571:
 1952              	.LBE574:
 1953              	.LBE585:
 1954              	.LBE587:
 1955              	.LBE594:
 1956              	.LBE596:
 1957              	.LBE599:
 1958              	.LBB600:
 1959              	.LBB536:
 1960              	.LBB529:
 1961              	.LBB519:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   for (size_t i = 0; i < size; ++i) {
 1962              		.loc 4 56 0
 1963 08a0 0130A0E3 		mov	r3, #1
 1964 08a4 20308DE5 		str	r3, [sp, #32]
 1965 08a8 7FFEFFEA 		b	.L69
 1966              	.LVL173:
 1967              	.L97:
 1968              	.LBE519:
 1969              	.LBE529:
 1970              	.LBE536:
 1971              	.LBE600:
 1972              	.LBB601:
 1973              	.LBB597:
 1974              	.LBB595:
 1975              	.LBB588:
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   for (size_t i = 0; i < size; ++i) {
 1976              		.loc 4 32 0
 1977 08ac 0140A0E3 		mov	r4, #1
 1978              	.LVL174:
 1979 08b0 A5FFFFEA 		b	.L39
 1980              	.LVL175:
 1981              	.L31:
 1982              	.LBE588:
 1983              	.LBE595:
 1984              	.LBE597:
 1985              	.LBE601:
 1986              	.LBB602:
 1987              	.LBB322:
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 1988              		.loc 3 48 0
 1989 08b4 FEFFFFEB 		bl	abort
 1990              	.LVL176:
 1991              	.LEHE0:
 1992              	.L167:
 1993              	.LBE322:
 1994              	.LBE602:
 1995              	.LBB603:
 1996              	.LBB537:
 1997              	.LBB530:
 1998              	.LBB520:
 1999              	.LBB514:
 2000              	.LBB509:
 2001              	.LBB503:
 2002              	.LBB456:
 2003              	.LBB448:
 2004              	.LBB439:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 2005              		.loc 6 359 0
 2006 08b8 003000E3 		movw	r3, #:lower16:.LC17
 2007              	.LVL177:
 2008 08bc 002000E3 		movw	r2, #:lower16:.LANCHOR0
 2009 08c0 000000E3 		movw	r0, #:lower16:.LC16
 2010 08c4 003040E3 		movt	r3, #:upper16:.LC17
 2011 08c8 002040E3 		movt	r2, #:upper16:.LANCHOR0
 2012 08cc 000040E3 		movt	r0, #:upper16:.LC16
 2013 08d0 671100E3 		movw	r1, #359
 2014              	.LEHB1:
 2015 08d4 FEFFFFEB 		bl	__assert_func
 2016              	.LVL178:
 2017              	.L161:
 2018              	.LBE439:
 2019              	.LBE448:
 2020              	.LBE456:
 2021              	.LBE503:
 2022              	.LBE509:
 2023              	.LBE514:
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****   TFLITE_DCHECK_LE(-params.input1_offset, std::numeric_limits<int8_t>::max());
 2024              		.loc 4 51 0
 2025 08d8 FEFFFFEB 		bl	abort
 2026              	.LVL179:
 2027              	.L160:
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h ****                    params.quantized_activation_max);
 2028              		.loc 4 45 0
 2029 08dc FEFFFFEB 		bl	abort
 2030              	.LVL180:
 2031              	.LEHE1:
 2032              	.L122:
 2033              	.LBE520:
 2034              	.LBE530:
 2035              	.LBB531:
 2036              	.LBB532:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 2037              		.loc 5 203 0
 2038 08e0 40309DE5 		ldr	r3, [sp, #64]
 2039 08e4 050053E3 		cmp	r3, #5
 2040 08e8 030000DA 		ble	.L96
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 2041              		.loc 5 207 0
 2042 08ec 44009DE5 		ldr	r0, [sp, #68]
 2043 08f0 000050E3 		cmp	r0, #0
 2044 08f4 0000000A 		beq	.L96
 2045 08f8 FEFFFFEB 		bl	_ZdaPv
 2046              	.LVL181:
 2047              	.L96:
 2048              	.LEHB2:
 2049 08fc FEFFFFEB 		bl	__cxa_end_cleanup
 2050              	.LVL182:
 2051              	.LEHE2:
 2052              	.L166:
 2053              	.LBE532:
 2054              	.LBE531:
 2055              	.LBB533:
 2056              	.LBB521:
 2057              	.LBB515:
 2058              	.LBB510:
 2059              	.LBB504:
 2060              	.LBB457:
 2061              	.LBB449:
 2062              	.LBB440:
 358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 2063              		.loc 6 358 0
 2064 0900 003000E3 		movw	r3, #:lower16:.LC15
 2065              	.LVL183:
 2066 0904 002000E3 		movw	r2, #:lower16:.LANCHOR0
 2067 0908 000000E3 		movw	r0, #:lower16:.LC16
 2068 090c 003040E3 		movt	r3, #:upper16:.LC15
 2069 0910 002040E3 		movt	r2, #:upper16:.LANCHOR0
 2070 0914 000040E3 		movt	r0, #:upper16:.LC16
 2071 0918 661100E3 		movw	r1, #358
 2072              	.LEHB3:
 2073 091c FEFFFFEB 		bl	__assert_func
 2074              	.LVL184:
 2075              	.L165:
 2076              	.LBE440:
 2077              	.LBE449:
 2078              	.LBE457:
 2079              	.LBE504:
 2080              	.LBB505:
 2081              	.LBB413:
 2082              	.LBB394:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 2083              		.loc 6 359 0
 2084 0920 003000E3 		movw	r3, #:lower16:.LC17
 2085              	.LVL185:
 2086 0924 002000E3 		movw	r2, #:lower16:.LANCHOR0
 2087 0928 000000E3 		movw	r0, #:lower16:.LC16
 2088 092c 003040E3 		movt	r3, #:upper16:.LC17
 2089 0930 002040E3 		movt	r2, #:upper16:.LANCHOR0
 2090 0934 000040E3 		movt	r0, #:upper16:.LC16
 2091 0938 671100E3 		movw	r1, #359
 2092 093c FEFFFFEB 		bl	__assert_func
 2093              	.LVL186:
 2094              	.L164:
 358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 2095              		.loc 6 358 0
 2096 0940 003000E3 		movw	r3, #:lower16:.LC15
 2097              	.LVL187:
 2098 0944 002000E3 		movw	r2, #:lower16:.LANCHOR0
 2099 0948 000000E3 		movw	r0, #:lower16:.LC16
 2100 094c 003040E3 		movt	r3, #:upper16:.LC15
 2101 0950 002040E3 		movt	r2, #:upper16:.LANCHOR0
 2102 0954 000040E3 		movt	r0, #:upper16:.LC16
 2103 0958 661100E3 		movw	r1, #358
 2104 095c FEFFFFEB 		bl	__assert_func
 2105              	.LVL188:
 2106              	.L162:
 2107              	.LBE394:
 2108              	.LBE413:
 2109              	.LBE505:
 2110              	.LBE510:
 2111              	.LBE515:
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\add_n.h **** 
 2112              		.loc 4 52 0
 2113 0960 FEFFFFEB 		bl	abort
 2114              	.LVL189:
 2115              	.LEHE3:
 2116              	.LBE521:
 2117              	.LBE533:
 2118              	.LBE537:
 2119              	.LBE603:
 2120              		.cfi_endproc
 2121              	.LFE4174:
 2122              		.global	__gxx_personality_v0
 2123              		.personality	__gxx_personality_v0
 2124              		.handlerdata
 2125              	.LLSDA4174:
 2126 0008 FF       		.byte	0xff
 2127 0009 FF       		.byte	0xff
 2128 000a 01       		.byte	0x1
 2129 000b 16       		.uleb128 .LLSDACSE4174-.LLSDACSB4174
 2130              	.LLSDACSB4174:
 2131 000c 28       		.uleb128 .LEHB0-.LFB4174
 2132 000d 9011     		.uleb128 .LEHE0-.LEHB0
 2133 000f 00       		.uleb128 0
 2134 0010 00       		.uleb128 0
 2135 0011 D411     		.uleb128 .LEHB1-.LFB4174
 2136 0013 0C       		.uleb128 .LEHE1-.LEHB1
 2137 0014 E011     		.uleb128 .L122-.LFB4174
 2138 0016 00       		.uleb128 0
 2139 0017 FC11     		.uleb128 .LEHB2-.LFB4174
 2140 0019 04       		.uleb128 .LEHE2-.LEHB2
 2141 001a 00       		.uleb128 0
 2142 001b 00       		.uleb128 0
 2143 001c 9C12     		.uleb128 .LEHB3-.LFB4174
 2144 001e 48       		.uleb128 .LEHE3-.LEHB3
 2145 001f E011     		.uleb128 .L122-.LFB4174
 2146 0021 00       		.uleb128 0
 2147              	.LLSDACSE4174:
 2148              		.section	.text._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode
 2149              		.fnend
 2151              		.section	.text._ZN6tflite14Register_ADD_NEv,"ax",%progbits
 2152              		.align	2
 2153              		.global	_ZN6tflite14Register_ADD_NEv
 2154              		.syntax unified
 2155              		.arm
 2156              		.fpu neon
 2158              	_ZN6tflite14Register_ADD_NEv:
 2159              		.fnstart
 2160              	.LFB4175:
 201:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 202:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** }  // namespace
 203:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** 
 204:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** TfLiteRegistration Register_ADD_N() {
 2161              		.loc 1 204 0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 0
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165              	.LVL190:
 205:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   return {/*init=*/nullptr,
 206:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****           /*free=*/nullptr,
 207:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****           /*prepare=*/Prepare,
 208:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****           /*invoke=*/Eval,
 209:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****           /*profiling_string=*/nullptr,
 210:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****           /*builtin_code=*/0,
 211:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****           /*custom_name=*/nullptr,
 212:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****           /*version=*/0};
 2166              		.loc 1 212 0
 2167 0000 00C000E3 		movw	ip, #:lower16:.LANCHOR1
 204:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   return {/*init=*/nullptr,
 2168              		.loc 1 204 0
 2169 0004 10402DE9 		push	{r4, lr}
 2170              		.cfi_def_cfa_offset 8
 2171              		.cfi_offset 4, -8
 2172              		.cfi_offset 14, -4
 2173              		.loc 1 212 0
 2174 0008 00C040E3 		movt	ip, #:upper16:.LANCHOR1
 204:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc ****   return {/*init=*/nullptr,
 2175              		.loc 1 204 0
 2176 000c 0040A0E1 		mov	r4, r0
 2177              		.loc 1 212 0
 2178 0010 00E0A0E1 		mov	lr, r0
 2179 0014 0F00BCE8 		ldmia	ip!, {r0, r1, r2, r3}
 2180              	.LVL191:
 2181 0018 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 2182 001c 0F009CE8 		ldm	ip, {r0, r1, r2, r3}
 2183 0020 0F008EE8 		stm	lr, {r0, r1, r2, r3}
 213:../src/tensorflow_lite/tensorflow/lite/micro/kernels/add_n.cc **** }
 2184              		.loc 1 213 0
 2185 0024 0400A0E1 		mov	r0, r4
 2186 0028 1080BDE8 		pop	{r4, pc}
 2187              		.cfi_endproc
 2188              	.LFE4175:
 2189              		.cantunwind
 2190              		.fnend
 2192              		.section	.rodata
 2193              		.align	2
 2194              		.set	.LANCHOR1,. + 0
 2195              	.LC0:
 2196 0000 00000000 		.word	0
 2197 0004 00000000 		.word	0
 2198 0008 00000000 		.word	_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode
 2199 000c 00000000 		.word	_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode
 2200 0010 00000000 		.word	0
 2201 0014 00000000 		.word	0
 2202 0018 00000000 		.word	0
 2203 001c 00000000 		.word	0
 2204              		.section	.rodata._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode.str1.4,"aMS",%progbit
 2205              		.align	2
 2206              	.LC15:
 2207 0000 6578706F 		.ascii	"exponent >= 0\000"
 2207      6E656E74 
 2207      203E3D20 
 2207      3000
 2208 000e 0000     		.space	2
 2209              	.LC16:
 2210 0010 433A2F52 		.ascii	"C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/AN"
 2210      656E6573 
 2210      61732F65 
 2210      32737475 
 2210      64696F5F 
 2211 0043 50525F52 		.ascii	"PR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlo"
 2211      5A41324D 
 2211      5F45424B 
 2211      2F737263 
 2211      2F74656E 
 2212 0076 77702F66 		.ascii	"wp/fixedpoint/fixedpoint.h\000"
 2212      69786564 
 2212      706F696E 
 2212      742F6669 
 2212      78656470 
 2213 0091 000000   		.space	3
 2214              	.LC17:
 2215 0094 6578706F 		.ascii	"exponent <= 31\000"
 2215      6E656E74 
 2215      203C3D20 
 2215      333100
 2216              		.section	.rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4,"aMS",%prog
 2217              		.align	2
 2218              	.LC1:
 2219 0000 2E2E2F73 		.ascii	"../src/tensorflow_lite/tensorflow/lite/micro/kernel"
 2219      72632F74 
 2219      656E736F 
 2219      72666C6F 
 2219      775F6C69 
 2220 0033 732F6164 		.ascii	"s/add_n.cc\000"
 2220      645F6E2E 
 2220      636300
 2221 003e 0000     		.space	2
 2222              	.LC2:
 2223 0040 25733A25 		.ascii	"%s:%d %s was not true.\000"
 2223      64202573 
 2223      20776173 
 2223      206E6F74 
 2223      20747275 
 2224 0057 00       		.space	1
 2225              	.LC3:
 2226 0058 6E756D5F 		.ascii	"num_inputs >= 2\000"
 2226      696E7075 
 2226      7473203E 
 2226      3D203200 
 2227              	.LC4:
 2228 0068 25733A25 		.ascii	"%s:%d %s != %s (%d != %d)\000"
 2228      64202573 
 2228      20213D20 
 2228      25732028 
 2228      25642021 
 2229 0082 0000     		.space	2
 2230              	.LC5:
 2231 0084 3100     		.ascii	"1\000"
 2232 0086 0000     		.space	2
 2233              	.LC6:
 2234 0088 4E756D4F 		.ascii	"NumOutputs(node)\000"
 2234      75747075 
 2234      7473286E 
 2234      6F646529 
 2234      00
 2235 0099 000000   		.space	3
 2236              	.LC7:
 2237 009c 25733A25 		.ascii	"%s:%d %s != %s (%s != %s)\000"
 2237      64202573 
 2237      20213D20 
 2237      25732028 
 2237      25732021 
 2238 00b6 0000     		.space	2
 2239              	.LC8:
 2240 00b8 696E7075 		.ascii	"input_tensor_first->type\000"
 2240      745F7465 
 2240      6E736F72 
 2240      5F666972 
 2240      73742D3E 
 2241 00d1 000000   		.space	3
 2242              	.LC9:
 2243 00d4 6F757470 		.ascii	"output->type\000"
 2243      75742D3E 
 2243      74797065 
 2243      00
 2244 00e1 000000   		.space	3
 2245              	.LC10:
 2246 00e4 48617665 		.ascii	"HaveSameShapes(input_tensor_first, input)\000"
 2246      53616D65 
 2246      53686170 
 2246      65732869 
 2246      6E707574 
 2247 010e 0000     		.space	2
 2248              	.LC11:
 2249 0110 696E7075 		.ascii	"input->type\000"
 2249      742D3E74 
 2249      79706500 
 2250              	.LC12:
 2251 011c 696E7075 		.ascii	"input_tensor_first->params.zero_point == input->par"
 2251      745F7465 
 2251      6E736F72 
 2251      5F666972 
 2251      73742D3E 
 2252 014f 616D732E 		.ascii	"ams.zero_point\000"
 2252      7A65726F 
 2252      5F706F69 
 2252      6E7400
 2253 015e 0000     		.space	2
 2254              	.LC13:
 2255 0160 696E7075 		.ascii	"input_tensor_first->params.scale == input->params.s"
 2255      745F7465 
 2255      6E736F72 
 2255      5F666972 
 2255      73742D3E 
 2256 0193 63616C65 		.ascii	"cale\000"
 2256      00
 2257              	.LC14:
 2258 0198 4144445F 		.ascii	"ADD_N only supports FLOAT32 and INT8, got %s.\000"
 2258      4E206F6E 
 2258      6C792073 
 2258      7570706F 
 2258      72747320 
 2259              		.section	.rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__,"a",%progbits
 2260              		.align	3
 2261              		.set	.LANCHOR0,. + 0
 2264              	_ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:
 2265 0000 496E7465 		.ascii	"IntegerType gemmlowp::RoundingDivideByPOT(IntegerTy"
 2265      67657254 
 2265      79706520 
 2265      67656D6D 
 2265      6C6F7770 
 2266 0033 70652C20 		.ascii	"pe, int) [with IntegerType = long int]\000"
 2266      696E7429 
 2266      205B7769 
 2266      74682049 
 2266      6E746567 
 2267              		.text
 2268              	.Letext0:
 2269              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2270              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2271              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2272              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2273              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2274              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2275              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2276              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2277              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2278              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2279              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2280              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2281              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2282              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2283              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2284              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2285              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2286              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2287              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2288              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2289              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2290              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2291              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2292              		.file 31 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 2293              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2294              		.file 33 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2295              		.file 34 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2296              		.file 35 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2297              		.file 36 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2298              		.file 37 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 2299              		.file 38 "<built-in>"
 2300              		.file 39 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2301              		.file 40 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2302              		.file 41 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2303              		.file 42 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2304              		.file 43 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2305              		.file 44 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2306              		.file 45 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2307              		.file 46 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2308              		.file 47 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2309              		.file 48 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tens
 2310              		.file 49 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tens
 2311              		.file 50 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tens
 2312              		.file 51 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tens
 2313              		.file 52 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tens
 2314              		.file 53 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 add_n.cc
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:17     .text._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:22     .text._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode:00000000 _ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2230   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000084 .LC5
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2233   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000088 .LC6
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2218   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000000 .LC1
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2227   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000068 .LC4
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2239   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:000000b8 .LC8
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2242   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:000000d4 .LC9
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2236   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:0000009c .LC7
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2225   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000058 .LC3
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2222   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000040 .LC2
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2254   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000160 .LC13
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2257   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000198 .LC14
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2245   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:000000e4 .LC10
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2248   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000110 .LC11
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2250   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:0000011c .LC12
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:501    .text._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode:000003f0 $d
.ARM.extab.text._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode:00000000 $d
.ARM.exidx.text._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:512    .text._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:517    .text._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode:00000000 _ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:1482   .text._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode:00000570 $d
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:1499   .text._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode:0000057c $a
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2214   .rodata._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode.str1.4:00000094 .LC17
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2261   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 .LANCHOR0
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2209   .rodata._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode.str1.4:00000010 .LC16
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2206   .rodata._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode.str1.4:00000000 .LC15
.ARM.extab.text._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode:00000000 $d
.ARM.exidx.text._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2152   .text._ZN6tflite14Register_ADD_NEv:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2158   .text._ZN6tflite14Register_ADD_NEv:00000000 _ZN6tflite14Register_ADD_NEv
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2194   .rodata:00000000 .LANCHOR1
.ARM.exidx.text._ZN6tflite14Register_ADD_NEv:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2193   .rodata:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2205   .rodata._ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2217   .rodata._ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2260   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccE5vONK.s:2264   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 _ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.3e1481985cce1e923928453d8be0a65b
                           .group:00000000 wm4.cconfig.h.31.1472b8c7bd4952a63a52f3f4f718f872
                           .group:00000000 wm4.cpu_defines.h.31.54d44f9d3e7c42875c5a7fd49795eb93
                           .group:00000000 wm4.cconfig.h.515.5e729db314ae74226e291b4ae081e353
                           .group:00000000 wm4.concept_check.h.31.f19605d278e56917c68a56d378be308c
                           .group:00000000 wm4.type_traits.30.2c7323a483bcd7601e8b71d2546ae284
                           .group:00000000 wm4.move.h.152.41d7b9e6779674d169b7813982cfa003
                           .group:00000000 wm4.exception_defines.h.31.ca6841b9be3287386aafc5c717935b2e
                           .group:00000000 wm4.cpp_type_traits.h.33.9f2bfd8c4471a9a299f6da3ec24c745c
                           .group:00000000 wm4.numeric_traits.h.30.aa01a98564b7e55086aad9e53c7e5c53
                           .group:00000000 wm4.assertions.h.30.51d443923f0d242550e04246a7819b39
                           .group:00000000 wm4.stl_iterator.h.1250.45f349a262f1b0d836d8edbc4b7b98ff
                           .group:00000000 wm4.debug.h.30.5c1f223b12199e851d4d42805b788ccf
                           .group:00000000 wm4.stl_algobase.h.491.aa250b69c90aafa2a0a62b8c58cd5f30
                           .group:00000000 wm4.cstdlib.44.52c5efdfb0f3c176bd11e611a0b94959
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.newlib.h.21.59901f4bf241ab46c63694665baa7297
                           .group:00000000 wm4.features.h.22.37852b648068a281464730a5a4cc748e
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.187.e3ca1cb00044c044f8b956a6107cebb6
                           .group:00000000 wm4.stddef.h.39.60c5e3eb202f4a8f413509aeb6ad39fb
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.cdefs.h.47.9bc8274c84fddbf05edd550eb0bf48cd
                           .group:00000000 wm4.stdlib.h.56.b4ddaf162082f284ba35b4444af99a9a
                           .group:00000000 wm4.cstdlib.76.ae666499c8f9b0ace1b4b23fe143da2c
                           .group:00000000 wm4.atomic_lockfree_defines.h.31.d5c6334fb1e95c9462b052951f1411df
                           .group:00000000 wm4.limits.38.55aefcf041805b6211ca3649dd2ab1b5
                           .group:00000000 wm4.wchar.h.2.f837619576d797e948eb58c44fac4678
                           .group:00000000 wm4.stddef.h.161.9f48187563b2a85291a91832aa425498
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.wchar.h.41.bce54f0deafe8a72ebb0005417e8a086
                           .group:00000000 wm4.cwchar.48.c4e882638bf84f6da89479dda6fe8e17
                           .group:00000000 wm4.stdint.h.4.659be5aa44c4ab4eb7c7cc2b24d8ceee
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.4c107c5a20920bfc6e94fb2672bbd9ee
                           .group:00000000 wm4.allocator.h.52.0ceafb36dc1b82dbfa6b05003082e3f5
                           .group:00000000 wm4.locale.h.8.27d0fe4c0abbb6f8893a1fa7c1799fd9
                           .group:00000000 wm4.stddef.h.161.38688f2eb958a8ed58fdb61ffe554c94
                           .group:00000000 wm4.locale.h.16.524572cf3c2ed9856516685acdc598fe
                           .group:00000000 wm4.clocale.45.c36d2d5b631a875aa5273176b54fdf0f
                           .group:00000000 wm4.ctype.h.2.da310d2ad165ccf8b86542f76fdb938d
                           .group:00000000 wm4.cctype.45.0da5714876b0be7f2d816b53d9670403
                           .group:00000000 wm4.gthr.h.27.ceb1c66b926f052afcba57e8784df0d4
                           .group:00000000 wm4.gthrdefault.h.27.edc94d4398c0534988962be77dc3c2e1
                           .group:00000000 wm4.atomic_word.h.30.9e0ac69fd462d5e650933e05133b4afa
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.c3e9cb15e5af2807c4650345134c1a8a
                           .group:00000000 wm4.cstdio.45.ba8d321feb18bfc8923454067605c368
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.1ecd7b1049497a0ab61da0f6cbd4b0c6
                           .group:00000000 wm4.functional_hash.h.31.bccc014fee6fc3f930045d809df6f486
                           .group:00000000 wm4.functional.549.0bc5b448cf999863d3841495cd6fe920
                           .group:00000000 wm4.assert.h.11.a5d97ca77559a42890313c4941c01fd9
                           .group:00000000 wm4.math.h.13.e7cbdea54f4da98ab8f7fad4d23502b2
                           .group:00000000 wm4.cmath.46.d6e5b776115d39075860ed881d18f087
                           .group:00000000 wm4.detect_platform.h.19.a1891273c0cad215067ddb8219400136
                           .group:00000000 wm4.fixedpoint.h.567.8a6371d9452be19811601bace78b0abc
                           .group:00000000 wm4.cmath.44.b3bcbb5fe53ec6617dec8aa8eb7b03cc
                           .group:00000000 wm4.cppmath.h.27.51580d700716589df4b364298e2ef577
                           .group:00000000 wm4.neon_check.h.16.79a4dcb572cbeac06c4924f1f20cb68d
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.cstring.45.6ab09de7fb97b576e744347688ddc8d7
                           .group:00000000 wm4.op_macros.h.42.7b718cb416a067e7bb07e7699647769b
                           .group:00000000 wm4.compatibility.h.23.702d6356326ea59aded8ef5c6c4626d5
                           .group:00000000 wm4.stdbool.h.29.01580e438512fc255c0619569742ffd3
                           .group:00000000 wm4.c_api_types.h.20.9b09175981ed746180e205cc0b4b2bfd
                           .group:00000000 wm4.common.h.77.124de099ec0ac4f95ebf1618a5f42cf6
                           .group:00000000 wm4.builtin_op_data.h.16.b961d1222c948363e3f10ad99298fd3f

UNDEFINED SYMBOLS
_ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor
_ZN6tflite13GetOutputSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor
TfLiteTypeGetName
_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_
_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPlPi
_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_
__aeabi_unwind_cpp_pr1
__gxx_personality_v0
_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
_ZdaPv
abort
__assert_func
__cxa_end_cleanup
