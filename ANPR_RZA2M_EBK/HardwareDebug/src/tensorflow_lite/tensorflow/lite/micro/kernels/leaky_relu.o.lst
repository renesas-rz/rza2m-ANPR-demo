   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"leaky_relu.cc"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN6tflite12_GLOBAL__N_113LeakyReluInitEP13TfLiteContextPKcj,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	_ZN6tflite12_GLOBAL__N_113LeakyReluInitEP13TfLiteContextPKcj:
  23              		.fnstart
  24              	.LFB4169:
  25              		.file 1 "../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc"
   1:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
   3:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** you may not use this file except in compliance with the License.
   5:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** You may obtain a copy of the License at
   6:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
   7:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
   9:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** See the License for the specific language governing permissions and
  13:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** limitations under the License.
  14:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** ==============================================================================*/
  15:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  16:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** #include "tensorflow/lite/kernels/internal/reference/leaky_relu.h"
  17:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  18:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** #include "tensorflow/lite/c/common.h"
  19:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  20:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** #include "tensorflow/lite/kernels/internal/reference/process_broadcast_shapes.h"
  21:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** #include "tensorflow/lite/kernels/internal/types.h"
  22:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** #include "tensorflow/lite/kernels/kernel_util.h"
  23:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** #include "tensorflow/lite/micro/kernels/kernel_util.h"
  24:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  25:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** namespace tflite {
  26:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** namespace {
  27:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  28:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** // Input/output tensor index.
  29:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** constexpr int kInputTensor = 0;
  30:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** constexpr int kOutputTensor = 0;
  31:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  32:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** struct LeakyReluOpData {
  33:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   // quantization parameters
  34:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   int32_t output_multiplier_alpha;
  35:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   int32_t output_shift_alpha;
  36:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   int32_t output_multiplier_identity;
  37:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   int32_t output_shift_identity;
  38:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   int32_t input_zero_point;
  39:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   int32_t output_zero_point;
  40:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** };
  41:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  42:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** template <typename T>
  43:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** void QuantizeLeakyRelu(const LeakyReluOpData& data,
  44:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                        const TfLiteEvalTensor* input,
  45:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                        TfLiteEvalTensor* output) {
  46:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   LeakyReluParams op_params = {};
  47:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  48:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   op_params.input_offset = data.input_zero_point;
  49:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   op_params.output_offset = data.output_zero_point;
  50:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   op_params.output_multiplier_alpha = data.output_multiplier_alpha;
  51:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   op_params.output_shift_alpha = data.output_shift_alpha;
  52:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   op_params.output_multiplier_identity = data.output_multiplier_identity;
  53:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   op_params.output_shift_identity = data.output_shift_identity;
  54:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   reference_ops::QuantizeLeakyRelu(op_params,
  55:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                    tflite::micro::GetTensorShape(input),
  56:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                    tflite::micro::GetTensorData<T>(input),
  57:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                    tflite::micro::GetTensorShape(output),
  58:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                    tflite::micro::GetTensorData<T>(output));
  59:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** }
  60:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  61:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** TfLiteStatus CalculateOpData(TfLiteContext* context, TfLiteNode* node) {
  62:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);
  63:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  64:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   const TfLiteTensor* input;
  65:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));
  66:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TfLiteTensor* output;
  67:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TF_LITE_ENSURE_OK(context,
  68:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                     GetOutputSafe(context, node, kOutputTensor, &output));
  69:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);
  70:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  71:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   if (output->type == kTfLiteInt8) {
  72:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     LeakyReluOpData* data = static_cast<LeakyReluOpData*>(node->user_data);
  73:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     const auto* params =
  74:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****         static_cast<TfLiteLeakyReluParams*>(node->builtin_data);
  75:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  76:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->input_zero_point = input->params.zero_point;
  77:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->output_zero_point = output->params.zero_point;
  78:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  79:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     int output_shift_alpha;
  80:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     double alpha_multiplier = static_cast<double>(
  81:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****         input->params.scale * params->alpha / output->params.scale);
  82:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     QuantizeMultiplier(alpha_multiplier, &data->output_multiplier_alpha,
  83:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                        &output_shift_alpha);
  84:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->output_shift_alpha = static_cast<int32_t>(output_shift_alpha);
  85:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  86:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     int output_shift_identity;
  87:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     double identity_multiplier =
  88:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****         static_cast<double>(input->params.scale / output->params.scale);
  89:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     QuantizeMultiplier(identity_multiplier, &data->output_multiplier_identity,
  90:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                        &output_shift_identity);
  91:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->output_shift_identity = static_cast<int32_t>(output_shift_identity);
  92:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   }
  93:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  94:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   return kTfLiteOk;
  95:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** }
  96:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
  97:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** void* LeakyReluInit(TfLiteContext* context, const char* buffer, size_t length) {
  26              		.loc 1 97 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  98:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  31              		.loc 1 98 0
  32 0000 383090E5 		ldr	r3, [r0, #56]
  33 0004 000053E3 		cmp	r3, #0
  34 0008 0100000A 		beq	.L7
  99:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   return context->AllocatePersistentBuffer(context, sizeof(LeakyReluOpData));
  35              		.loc 1 99 0
  36 000c 1810A0E3 		mov	r1, #24
  37              	.LVL1:
  38 0010 13FF2FE1 		bx	r3
  39              	.LVL2:
  40              	.L7:
  97:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  41              		.loc 1 97 0 discriminator 1
  42 0014 10402DE9 		push	{r4, lr}
  43              		.save {r4, lr}
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 4, -8
  46              		.cfi_offset 14, -4
  98:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);
  47              		.loc 1 98 0 discriminator 1
  48 0018 FEFFFFEB 		bl	abort
  49              	.LVL3:
  50              		.cfi_endproc
  51              	.LFE4169:
  52              		.fnend
  54              		.section	.text._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode,"ax",%prog
  55              		.align	2
  56              		.syntax unified
  57              		.arm
  58              		.fpu neon
  60              	_ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode:
  61              		.fnstart
  62              	.LFB4170:
 100:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** }
 101:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 102:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** TfLiteStatus LeakyReluPrepare(TfLiteContext* context, TfLiteNode* node) {
  63              		.loc 1 102 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 16
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              	.LVL4:
  68              	.LBB120:
  69              	.LBB121:
  70              	.LBB122:
  71              	.LBB123:
  72              		.file 2 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tenso
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #define TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include <stdint.h>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include <limits>
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** namespace tflite {
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // A fair number of functions in this header have historically been inline.
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // It is ok to change functions to not be inline if the latency with
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // benchmark_model for MobileNet + MobileBERT is unaffected. If such a change is
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // made, move the newly non-inlined function declarations to the top of this
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // header file.
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetInput(context, node, kMyTensorIdx);
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetInput(const TfLiteContext* context,
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                              const TfLiteNode* node, int index);
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetInput` but returns boolean and uses output argument for tensor.
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetInputSafe(context, node, kMyTensorIdx, &my_tensor));
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                           int index, const TfLiteTensor** tensor);
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetVariableInput(context, node, kMyTensorIdx);
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                int index);
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOutput(context, node, kMyTensorIdx);
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                         int index);
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetOutput` but returns boolean and uses output argument for tensor.
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetOutputSafe(context, node, kMyTensorIdx, &my_tensor));
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                            int index, TfLiteTensor** tensor);
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOptionalInputTensor(context, node, kIdx);
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Deprecated. GetInput has the same functionality.
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                            const TfLiteNode* node, int index);
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetTemporary(context, node, kMyTensorIdx);
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                            int index);
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetTemporary` but returns boolean and uses output argument for
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetTemporarySafe(context, node, kMyTensorIdx,
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                               const TfLiteNode* node, int index,
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                               TfLiteTensor** tensor);
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetIntermediates(context, node, kMyTensorIdx);
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                      const TfLiteNode* node, int index);
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetIntermediates` but returns boolean and uses output argument for
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetIntermediatesSafe(context, node, kMyTensorIdx,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                   const TfLiteNode* node, int index,
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                   TfLiteTensor** tensor);
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumDimensions(const TfLiteTensor* t) { return t->dims->size; }
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****   return t->dims->data[dim];
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumInputs(const TfLiteNode* node) { return node->inputs->size; }
  73              		.loc 2 152 0
  74 0000 003091E5 		ldr	r3, [r1]
  75              	.LBE123:
  76              	.LBE122:
  77              	.LBE121:
  78              	.LBE120:
  79              		.loc 1 102 0
  80 0004 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
  81              		.save {r4, r5, r6, r7, r8, lr}
  82              		.cfi_def_cfa_offset 24
  83              		.cfi_offset 4, -24
  84              		.cfi_offset 5, -20
  85              		.cfi_offset 6, -16
  86              		.cfi_offset 7, -12
  87              		.cfi_offset 8, -8
  88              		.cfi_offset 14, -4
  89 0008 0050A0E1 		mov	r5, r0
  90              	.LVL5:
  91              		.pad #32
  92 000c 20D04DE2 		sub	sp, sp, #32
  93              		.cfi_def_cfa_offset 56
  94              	.LBB135:
  95              	.LBB132:
  96              	.LBB125:
  97              	.LBB124:
  98              		.loc 2 152 0
  99 0010 006093E5 		ldr	r6, [r3]
 100              	.LBE124:
 101              	.LBE125:
  62:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 102              		.loc 1 62 0
 103 0014 010056E3 		cmp	r6, #1
 104 0018 4800001A 		bne	.L15
 105              	.LBB126:
 106              	.LBB127:
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 107              		.loc 2 153 0
 108 001c 043091E5 		ldr	r3, [r1, #4]
 109 0020 0170A0E1 		mov	r7, r1
 110              	.LVL6:
 111 0024 008093E5 		ldr	r8, [r3]
 112              	.LBE127:
 113              	.LBE126:
  63:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   const TfLiteTensor* input;
 114              		.loc 1 63 0
 115 0028 010058E3 		cmp	r8, #1
 116 002c 1200000A 		beq	.L11
 117              	.LVL7:
 118 0030 00E000E3 		movw	lr, #:lower16:.LC3
 119 0034 00C000E3 		movw	ip, #:lower16:.LC5
 120 0038 00E040E3 		movt	lr, #:upper16:.LC3
 121 003c 00C040E3 		movt	ip, #:upper16:.LC5
 122 0040 002000E3 		movw	r2, #:lower16:.LC1
 123 0044 001000E3 		movw	r1, #:lower16:.LC2
 124              	.LVL8:
 125 0048 0C608DE5 		str	r6, [sp, #12]
 126 004c 002040E3 		movt	r2, #:upper16:.LC1
 127 0050 08808DE5 		str	r8, [sp, #8]
 128 0054 001040E3 		movt	r1, #:upper16:.LC2
 129 0058 145090E5 		ldr	r5, [r0, #20]
 130 005c 3F30A0E3 		mov	r3, #63
 131 0060 04E08DE5 		str	lr, [sp, #4]
 132 0064 0640A0E1 		mov	r4, r6
 133 0068 00C08DE5 		str	ip, [sp]
 134 006c 35FF2FE1 		blx	r5
 135              	.LVL9:
 136              	.L10:
 137              	.LBE132:
 138              	.LBE135:
 103:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   return CalculateOpData(context, node);
 104:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** }
 139              		.loc 1 104 0
 140 0070 0400A0E1 		mov	r0, r4
 141 0074 20D08DE2 		add	sp, sp, #32
 142              		.cfi_remember_state
 143              		.cfi_def_cfa_offset 24
 144              		@ sp needed
 145 0078 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 146              	.LVL10:
 147              	.L11:
 148              		.cfi_restore_state
 149              	.LBB136:
 150              	.LBB133:
 151              	.LBB128:
  65:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TfLiteTensor* output;
 152              		.loc 1 65 0
 153 007c 10308DE2 		add	r3, sp, #16
 154 0080 0020A0E3 		mov	r2, #0
 155 0084 FEFFFFEB 		bl	_ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor
 156              	.LVL11:
 157 0088 004050E2 		subs	r4, r0, #0
 158 008c F7FFFF1A 		bne	.L10
 159              	.LBE128:
 160              	.LBB129:
  67:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                     GetOutputSafe(context, node, kOutputTensor, &output));
 161              		.loc 1 67 0
 162 0090 0420A0E1 		mov	r2, r4
 163 0094 14308DE2 		add	r3, sp, #20
 164 0098 0710A0E1 		mov	r1, r7
 165 009c 0500A0E1 		mov	r0, r5
 166              	.LVL12:
 167 00a0 FEFFFFEB 		bl	_ZN6tflite13GetOutputSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor
 168              	.LVL13:
 169 00a4 004050E2 		subs	r4, r0, #0
 170 00a8 F0FFFF1A 		bne	.L10
 171              	.LBE129:
  69:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 172              		.loc 1 69 0
 173 00ac 10C09DE5 		ldr	ip, [sp, #16]
 174 00b0 14209DE5 		ldr	r2, [sp, #20]
 175 00b4 0000DCE5 		ldrb	r0, [ip]	@ zero_extendqisi2
 176              	.LVL14:
 177 00b8 0030D2E5 		ldrb	r3, [r2]	@ zero_extendqisi2
 178 00bc 000053E1 		cmp	r3, r0
 179 00c0 3100001A 		bne	.L16
 180              	.LBB130:
  71:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     LeakyReluOpData* data = static_cast<LeakyReluOpData*>(node->user_data);
 181              		.loc 1 71 0
 182 00c4 090053E3 		cmp	r3, #9
 183 00c8 E8FFFF1A 		bne	.L10
 184              	.LBB131:
  74:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 185              		.loc 1 74 0
 186 00cc 143097E5 		ldr	r3, [r7, #20]
  83:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->output_shift_alpha = static_cast<int32_t>(output_shift_alpha);
 187              		.loc 1 83 0
 188 00d0 18108DE2 		add	r1, sp, #24
  81:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     QuantizeMultiplier(alpha_multiplier, &data->output_multiplier_alpha,
 189              		.loc 1 81 0
 190 00d4 037ADCED 		vldr.32	s15, [ip, #12]
 191 00d8 037A92ED 		vldr.32	s14, [r2, #12]
 192 00dc 006AD3ED 		vldr.32	s13, [r3]
  72:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     const auto* params =
 193              		.loc 1 72 0
 194 00e0 105097E5 		ldr	r5, [r7, #16]
 195              	.LVL15:
  77:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 196              		.loc 1 77 0
 197 00e4 103092E5 		ldr	r3, [r2, #16]
 198              	.LVL16:
  76:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->output_zero_point = output->params.zero_point;
 199              		.loc 1 76 0
 200 00e8 10C09CE5 		ldr	ip, [ip, #16]
  81:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     QuantizeMultiplier(alpha_multiplier, &data->output_multiplier_alpha,
 201              		.loc 1 81 0
 202 00ec A67A67EE 		vmul.f32	s15, s15, s13
  83:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->output_shift_alpha = static_cast<int32_t>(output_shift_alpha);
 203              		.loc 1 83 0
 204 00f0 0500A0E1 		mov	r0, r5
  77:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 205              		.loc 1 77 0
 206 00f4 143085E5 		str	r3, [r5, #20]
 207              	.LVL17:
  76:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->output_zero_point = output->params.zero_point;
 208              		.loc 1 76 0
 209 00f8 10C085E5 		str	ip, [r5, #16]
  81:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     QuantizeMultiplier(alpha_multiplier, &data->output_multiplier_alpha,
 210              		.loc 1 81 0
 211 00fc 870A87EE 		vdiv.f32	s0, s15, s14
  83:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->output_shift_alpha = static_cast<int32_t>(output_shift_alpha);
 212              		.loc 1 83 0
 213 0100 C00AB7EE 		vcvt.f64.f32	d0, s0
 214 0104 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 215              	.LVL18:
  88:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     QuantizeMultiplier(identity_multiplier, &data->output_multiplier_identity,
 216              		.loc 1 88 0
 217 0108 10C09DE5 		ldr	ip, [sp, #16]
  90:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->output_shift_identity = static_cast<int32_t>(output_shift_identity);
 218              		.loc 1 90 0
 219 010c 080085E2 		add	r0, r5, #8
  88:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     QuantizeMultiplier(identity_multiplier, &data->output_multiplier_identity,
 220              		.loc 1 88 0
 221 0110 14209DE5 		ldr	r2, [sp, #20]
  90:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->output_shift_identity = static_cast<int32_t>(output_shift_identity);
 222              		.loc 1 90 0
 223 0114 1C108DE2 		add	r1, sp, #28
  84:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 224              		.loc 1 84 0
 225 0118 18309DE5 		ldr	r3, [sp, #24]
  88:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     QuantizeMultiplier(identity_multiplier, &data->output_multiplier_identity,
 226              		.loc 1 88 0
 227 011c 037A9CED 		vldr.32	s14, [ip, #12]
 228 0120 037AD2ED 		vldr.32	s15, [r2, #12]
  84:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 229              		.loc 1 84 0
 230 0124 043085E5 		str	r3, [r5, #4]
 231              	.LVL19:
  88:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     QuantizeMultiplier(identity_multiplier, &data->output_multiplier_identity,
 232              		.loc 1 88 0
 233 0128 270A87EE 		vdiv.f32	s0, s14, s15
  90:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     data->output_shift_identity = static_cast<int32_t>(output_shift_identity);
 234              		.loc 1 90 0
 235 012c C00AB7EE 		vcvt.f64.f32	d0, s0
 236 0130 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 237              	.LVL20:
  91:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   }
 238              		.loc 1 91 0
 239 0134 1C309DE5 		ldr	r3, [sp, #28]
 240 0138 0C3085E5 		str	r3, [r5, #12]
 241 013c CBFFFFEA 		b	.L10
 242              	.LVL21:
 243              	.L15:
 244              	.LBE131:
 245              	.LBE130:
  62:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
 246              		.loc 1 62 0
 247 0140 00C000E3 		movw	ip, #:lower16:.LC3
 248 0144 003000E3 		movw	r3, #:lower16:.LC4
 249 0148 00C040E3 		movt	ip, #:upper16:.LC3
 250 014c 0140A0E3 		mov	r4, #1
 251 0150 003040E3 		movt	r3, #:upper16:.LC4
 252 0154 002000E3 		movw	r2, #:lower16:.LC1
 253 0158 001000E3 		movw	r1, #:lower16:.LC2
 254              	.LVL22:
 255 015c 08608DE5 		str	r6, [sp, #8]
 256 0160 002040E3 		movt	r2, #:upper16:.LC1
 257 0164 145090E5 		ldr	r5, [r0, #20]
 258 0168 001040E3 		movt	r1, #:upper16:.LC2
 259 016c 00308DE5 		str	r3, [sp]
 260 0170 04C08DE5 		str	ip, [sp, #4]
 261 0174 3E30A0E3 		mov	r3, #62
 262 0178 0C408DE5 		str	r4, [sp, #12]
 263 017c 35FF2FE1 		blx	r5
 264              	.LVL23:
 265              	.LBE133:
 266              	.LBE136:
 267              		.loc 1 104 0
 268 0180 0400A0E1 		mov	r0, r4
 269 0184 20D08DE2 		add	sp, sp, #32
 270              		.cfi_remember_state
 271              		.cfi_def_cfa_offset 24
 272              		@ sp needed
 273 0188 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 274              	.LVL24:
 275              	.L16:
 276              		.cfi_restore_state
 277              	.LBB137:
 278              	.LBB134:
  69:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 279              		.loc 1 69 0
 280 018c 146095E5 		ldr	r6, [r5, #20]
 281 0190 0840A0E1 		mov	r4, r8
 282 0194 FEFFFFEB 		bl	TfLiteTypeGetName
 283              	.LVL25:
 284 0198 14309DE5 		ldr	r3, [sp, #20]
 285 019c 0070A0E1 		mov	r7, r0
 286              	.LVL26:
 287 01a0 0000D3E5 		ldrb	r0, [r3]	@ zero_extendqisi2
 288 01a4 FEFFFFEB 		bl	TfLiteTypeGetName
 289              	.LVL27:
 290 01a8 00C000E3 		movw	ip, #:lower16:.LC7
 291 01ac 003000E3 		movw	r3, #:lower16:.LC8
 292 01b0 00C040E3 		movt	ip, #:upper16:.LC7
 293 01b4 003040E3 		movt	r3, #:upper16:.LC8
 294 01b8 002000E3 		movw	r2, #:lower16:.LC1
 295 01bc 001000E3 		movw	r1, #:lower16:.LC6
 296 01c0 0C008DE5 		str	r0, [sp, #12]
 297 01c4 002040E3 		movt	r2, #:upper16:.LC1
 298 01c8 00308DE5 		str	r3, [sp]
 299 01cc 0500A0E1 		mov	r0, r5
 300 01d0 08708DE5 		str	r7, [sp, #8]
 301 01d4 001040E3 		movt	r1, #:upper16:.LC6
 302 01d8 04C08DE5 		str	ip, [sp, #4]
 303 01dc 4530A0E3 		mov	r3, #69
 304 01e0 36FF2FE1 		blx	r6
 305              	.LVL28:
 306 01e4 A1FFFFEA 		b	.L10
 307              	.LBE134:
 308              	.LBE137:
 309              		.cfi_endproc
 310              	.LFE4170:
 311              		.fnend
 313              		.section	.text._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode,"ax",%progbit
 314              		.align	2
 315              		.syntax unified
 316              		.arm
 317              		.fpu neon
 319              	_ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode:
 320              		.fnstart
 321              	.LFB4171:
 105:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 106:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** TfLiteStatus LeakyReluEval(TfLiteContext* context, TfLiteNode* node) {
 322              		.loc 1 106 0
 323              		.cfi_startproc
 324              		.cfi_personality 0,__gxx_personality_v0
 325              		.cfi_lsda 0,.LLSDA4171
 326              		@ args = 0, pretend = 0, frame = 88
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              	.LVL29:
 329 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 330              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 331              		.cfi_def_cfa_offset 36
 332              		.cfi_offset 4, -36
 333              		.cfi_offset 5, -32
 334              		.cfi_offset 6, -28
 335              		.cfi_offset 7, -24
 336              		.cfi_offset 8, -20
 337              		.cfi_offset 9, -16
 338              		.cfi_offset 10, -12
 339              		.cfi_offset 11, -8
 340              		.cfi_offset 14, -4
 341              	.LBB261:
 342              	.LBB262:
 343              	.LBB263:
 344              		.file 3 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tenso
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #define TENSORFLOW_LITE_MICRO_KERNELS_KERNEL_UTIL_H_
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #include <cstdint>
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** #include "tensorflow/lite/kernels/internal/types.h"
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** namespace tflite {
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** namespace micro {
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns a mutable tensor for a given input index. is_variable must be checked
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // during prepare when the full TfLiteTensor is available.
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetMutableEvalInput(const TfLiteContext* context,
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****                                              const TfLiteNode* node,
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****                                              int index) {
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
 345              		.loc 3 34 0
 346 0004 004050E2 		subs	r4, r0, #0
 347              	.LVL30:
 348              	.LBE263:
 349              	.LBE262:
 350              	.LBE261:
 351              		.loc 1 106 0
 352 0008 028B2DED 		vpush.64	{d8}
 353              		.vsave {d8}
 354              		.cfi_def_cfa_offset 44
 355              		.cfi_offset 80, -44
 356              		.cfi_offset 81, -40
 357              		.pad #92
 358 000c 5CD04DE2 		sub	sp, sp, #92
 359              		.cfi_def_cfa_offset 136
 360              	.LBB270:
 361              	.LBB267:
 362              	.LBB264:
 363              		.loc 3 34 0
 364 0010 2D02000A 		beq	.L19
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 365              		.loc 3 35 0
 366 0014 000051E3 		cmp	r1, #0
 367 0018 0150A0E1 		mov	r5, r1
 368 001c 2A02000A 		beq	.L19
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 369              		.loc 3 36 0
 370 0020 002091E5 		ldr	r2, [r1]
 371 0024 543094E5 		ldr	r3, [r4, #84]
 372 0028 041092E5 		ldr	r1, [r2, #4]
 373              	.LVL31:
 374              	.LEHB0:
 375 002c 33FF2FE1 		blx	r3
 376              	.LVL32:
 377              	.LBE264:
 378              	.LBE267:
 379              	.LBE270:
 380              	.LBB271:
 381              	.LBB272:
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given input index in a node.
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** inline const TfLiteEvalTensor* GetEvalInput(const TfLiteContext* context,
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****                                             const TfLiteNode* node, int index) {
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return GetMutableEvalInput(context, node, index);
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns the TfLiteEvalTensor struct for a given output index in a node.
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** inline TfLiteEvalTensor* GetEvalOutput(const TfLiteContext* context,
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****                                        const TfLiteNode* node, int index) {
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(context != nullptr);
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->outputs->data[index]);
 382              		.loc 3 50 0
 383 0030 042095E5 		ldr	r2, [r5, #4]
 384              	.LBE272:
 385              	.LBE271:
 386              	.LBB274:
 387              	.LBB268:
 388              	.LBB265:
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return context->GetEvalTensor(context, node->inputs->data[index]);
 389              		.loc 3 36 0
 390 0034 00A0A0E1 		mov	r10, r0
 391              	.LVL33:
 392              	.LBE265:
 393              	.LBE268:
 394              	.LBE274:
 395              	.LBB275:
 396              	.LBB273:
 397              		.loc 3 50 0
 398 0038 543094E5 		ldr	r3, [r4, #84]
 399 003c 0400A0E1 		mov	r0, r4
 400 0040 041092E5 		ldr	r1, [r2, #4]
 401 0044 33FF2FE1 		blx	r3
 402              	.LVL34:
 403 0048 0060A0E1 		mov	r6, r0
 404              	.LVL35:
 405              	.LBE273:
 406              	.LBE275:
 407              	.LBB276:
 107:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   const TfLiteEvalTensor* input =
 108:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       tflite::micro::GetEvalInput(context, node, kInputTensor);
 109:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   TfLiteEvalTensor* output =
 110:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       tflite::micro::GetEvalOutput(context, node, kOutputTensor);
 111:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   const LeakyReluOpData& data = *static_cast<LeakyReluOpData*>(node->user_data);
 112:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 113:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   switch (input->type) {
 408              		.loc 1 113 0
 409 004c 0800DAE5 		ldrb	r0, [r10, #8]	@ zero_extendqisi2
 410 0050 010050E3 		cmp	r0, #1
 411 0054 EF00000A 		beq	.L21
 412 0058 090050E3 		cmp	r0, #9
 413 005c DF00001A 		bne	.L199
 414              	.LBE276:
 111:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 415              		.loc 1 111 0
 416 0060 103095E5 		ldr	r3, [r5, #16]
 417              	.LVL36:
 418              	.LBB602:
 419              	.LBB277:
 420              	.LBB278:
 421              	.LBB279:
  54:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                    tflite::micro::GetTensorShape(input),
 422              		.loc 1 54 0
 423 0064 0A10A0E1 		mov	r1, r10
 424 0068 40008DE2 		add	r0, sp, #64
  50:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   op_params.output_shift_alpha = data.output_shift_alpha;
 425              		.loc 1 50 0
 426 006c 002093E5 		ldr	r2, [r3]
  48:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   op_params.output_offset = data.output_zero_point;
 427              		.loc 1 48 0
 428 0070 108093E5 		ldr	r8, [r3, #16]
  49:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   op_params.output_multiplier_alpha = data.output_multiplier_alpha;
 429              		.loc 1 49 0
 430 0074 149093E5 		ldr	r9, [r3, #20]
  52:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   op_params.output_shift_identity = data.output_shift_identity;
 431              		.loc 1 52 0
 432 0078 A00093E9 		ldmib	r3, {r5, r7}
 433              	.LVL37:
  53:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   reference_ops::QuantizeLeakyRelu(op_params,
 434              		.loc 1 53 0
 435 007c 0C4093E5 		ldr	r4, [r3, #12]
 436              	.LVL38:
  50:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   op_params.output_shift_alpha = data.output_shift_alpha;
 437              		.loc 1 50 0
 438 0080 10208DE5 		str	r2, [sp, #16]
  54:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                    tflite::micro::GetTensorShape(input),
 439              		.loc 1 54 0
 440 0084 FEFFFFEB 		bl	_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 441              	.LVL39:
 442              	.LEHE0:
 443              	.LBB280:
 444              	.LBB281:
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns data for a TfLiteEvalTensor struct.
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** T* GetTensorData(TfLiteEvalTensor* tensor) {
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return tensor != nullptr ? reinterpret_cast<T*>(tensor->data.raw) : nullptr;
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** 
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** // Returns const data for a TfLiteEvalTensor struct.
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** template <typename T>
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** const T* GetTensorData(const TfLiteEvalTensor* tensor) {
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(tensor != nullptr);
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   return reinterpret_cast<const T*>(tensor->data.raw);
 445              		.loc 3 63 0
 446 0088 00309AE5 		ldr	r3, [r10]
 447              	.LBE281:
 448              	.LBE280:
  54:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                    tflite::micro::GetTensorShape(input),
 449              		.loc 1 54 0
 450 008c 0610A0E1 		mov	r1, r6
 451 0090 28008DE2 		add	r0, sp, #40
 452              	.LBB283:
 453              	.LBB282:
 454              		.loc 3 63 0
 455 0094 20308DE5 		str	r3, [sp, #32]
 456              	.LVL40:
 457              	.LEHB1:
 458              	.LBE282:
 459              	.LBE283:
  54:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                    tflite::micro::GetTensorShape(input),
 460              		.loc 1 54 0
 461 0098 FEFFFFEB 		bl	_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 462              	.LVL41:
 463              	.LEHE1:
 464              	.LBB284:
 465              	.LBB285:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
 466              		.loc 3 56 0
 467 009c 000056E3 		cmp	r6, #0
 468 00a0 28A09DE5 		ldr	r10, [sp, #40]
 469              	.LVL42:
 470 00a4 00309615 		ldrne	r3, [r6]
 471 00a8 24608D05 		streq	r6, [sp, #36]
 472              	.LVL43:
 473 00ac 24308D15 		strne	r3, [sp, #36]
 474              	.LVL44:
 475 00b0 40309DE5 		ldr	r3, [sp, #64]
 476              	.LVL45:
 477              	.LBE285:
 478              	.LBE284:
 479              	.LBB286:
 480              	.LBB287:
 481              	.LBB288:
 482              	.LBB289:
 483              		.file 4 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tenso
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** /* Copyright 2018 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_TYPES_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #include <algorithm>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #include <cstdint>
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #include <cstring>
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #include <initializer_list>
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #include "tensorflow/lite/kernels/internal/compatibility.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** namespace tflite {
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** enum class FusedActivationFunctionType : uint8_t {
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kNone,
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kRelu6,
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kRelu1,
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kRelu
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** enum class PaddingType : uint8_t { kNone, kSame, kValid };
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** struct PaddingValues {
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t width;
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t height;
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // offset is used for calculating "remaining" padding, for example, `width`
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // is 1 and `width_offset` is 1, so padding_left is 1 while padding_right is
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // 1 + 1 = 2.
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t width_offset;
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the height dimension.
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t height_offset;
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** struct Padding3DValues {
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t width;
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t height;
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t depth;
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // offset is used for calculating "remaining" padding, for example, `width`
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // is 1 and `width_offset` is 1, so padding_left is 1 while padding_right is
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // 1 + 1 = 2.
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t width_offset;
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the height dimension.
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t height_offset;
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Same as width_offset except it's over the depth dimension.
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int16_t depth_offset;
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // This enumeration allows for non-default formats for the weights array
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // of a fully-connected operator, allowing the use of special optimized
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // runtime paths.
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** enum class FullyConnectedWeightsFormat : uint8_t {
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Default format (flat 2D layout, the inner contiguous dimension
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // is input_depth, the outer non-contiguous dimension is output_depth)
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kDefault,
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Summary: optimized layout for fast CPU runtime implementation,
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // aimed specifically at ARM CPUs at the moment, and specialized for
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // 8-bit quantized layers.
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // The use case we're concerned with here is: 8-bit quantization,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // large weights matrix that doesn't fit in cache (e.g. 4096x2048 in
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // a key application that drove this), very small batch size (e.g. 1 -- 4).
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Even with 8-bit quantization of weights, the performance of memory
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // accesses to the weights can become the dominant issue when
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // the batch size is small, so each weight value is used in only a few
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // arithmetic ops, i.e. the fully-connected node has a low arithmetic
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // intensity. The specific issues that arise are of three kinds:
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // (1) One may, ideally, max out DRAM bandwidth, i.e. be truly memory
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     bound. That's the "good" issue to run into.
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // (2) One may run into sub-optimal pre-fetching: the data hasn't been
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     prefetched into the cache by the time we need it.
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // (3) One may run into cache aliasing: multiple values that are
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     pre-fetched, alias each other in the L1 cache (which typically
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     has only 4-way set associativity in ARM CPUs) and thus evict
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     each other before we get to using them.
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // The point of this shuffling is to avoid issues (2) and (3) so that
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // we get as fast as possible given only the hard constraint (1).
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // This is achieved by turning the difficulty into a solution: the
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // difficulty, that each value loaded from memory is used only in
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // one kernel iteration, making this operation memory-intensive, hints at
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // the solution, of shuffling the weights so that they are stored in the
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // exact order as the kernel needs to load them, so that the memory
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // accesses made by the kernel are trivial. This solves (2) because the
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // trivial memory access pattern allows the CPU's automatic prefetching
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // to perform very well (no need even for preload instructions), and this
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // solves (3) because the values being loaded concurrently are now
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // contiguous in the address space, thus don't alias each other in the cache.
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // On ARM, we typically want our kernel to process a 4x16 block of weights
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // at a time, because:
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //   - 16 is the number of bytes in a NEON register.
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //   - 4 is how many rows we need to handle concurrently in the kernel in
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     order to have sufficient mutual independence of instructions to
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //     maximize arithmetic throughput.
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Finally, the 'Int8' part in the name refers to the fact that this
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // weights format has each weights value encoded as a signed int8_t value,
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // even if the data type of the weights buffer is uint8_t.  This is intended
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // to save runtime kernels the effort to have to XOR the top bit of these
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // bytes before using them in signed arithmetic, see this file for more
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // explanations on the 'signed int8_t trick' in matrix multiplication kernels:
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //   tensorflow/lite/toco/graph_transformations/ensure_uint8_weights_safe_for_fast_int8_kernels.c
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   //
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   kShuffled4x16Int8,
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // Quantization parameters, determining the mapping of quantized values
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // to real values (i.e. determining how quantized values are mathematically
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // interpreted).
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** //
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // The correspondence is as follows:
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** //
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** //   real_value = scale * (quantized_value - zero_point);
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** //
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // In other words, zero_point designates which quantized value corresponds to
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // the real 0 value, and scale designates the difference between the real values
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // corresponding to consecutive quantized values differing by 1.
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** struct QuantizationParams {
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int32_t zero_point = 0;
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   double scale = 0.0;
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline bool operator==(const QuantizationParams& qp1,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                        const QuantizationParams& qp2) {
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return qp1.zero_point == qp2.zero_point && qp1.scale == qp2.scale;
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** template <int N>
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** struct Dims {
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int sizes[N];
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int strides[N];
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** class RuntimeShape {
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****  public:
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Shapes with dimensions up to 5 are stored directly in the structure, while
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // larger shapes are separately allocated.
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   static constexpr int kMaxSmallSize = 5;
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape& operator=(RuntimeShape const&) = delete;
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape() : size_(0) {}
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   explicit RuntimeShape(int dimensions_count) : size_(dimensions_count) {
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 165:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 166:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 167:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 168:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int shape_size, int32_t value) : size_(0) {
 169:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     Resize(shape_size);
 170:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < shape_size; ++i) {
 171:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, value);
 172:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 173:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 174:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 175:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int dimensions_count, const int32_t* dims_data) : size_(0) {
 176:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     ReplaceWith(dimensions_count, dims_data);
 177:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 178:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 179:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(const std::initializer_list<int> init_list) : size_(0) {
 180:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     BuildFrom(init_list);
 181:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 182:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 183:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Avoid using this constructor.  We should be able to delete it when C++17
 184:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // rolls out.
 185:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(RuntimeShape const& other) : size_(other.DimensionsCount()) {
 186:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 187:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 188:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 189:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #else
 190:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[size_];
 191:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif
 192:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 193:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData(), other.DimsData(), sizeof(int32_t) * size_);
 194:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 195:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 196:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   bool operator==(const RuntimeShape& comp) const {
 197:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return this->size_ == comp.size_ &&
 198:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****            std::memcmp(DimsData(), comp.DimsData(), size_ * sizeof(int32_t)) ==
 199:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                0;
 200:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 201:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 202:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   ~RuntimeShape() {
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 204:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 205:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 206:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 208:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 209:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 210:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 211:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 212:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline int32_t DimensionsCount() const { return size_; }
 213:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline int32_t Dims(int i) const {
 214:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 217:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 218:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline void SetDim(int i, int32_t val) {
 219:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(i, 0);
 220:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_LT(i, size_);
 221:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 222:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_[i] = val;
 223:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     } else {
 224:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       dims_[i] = val;
 225:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 226:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 228:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline int32_t* DimsData() {
 229:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 230:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 231:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsData() const {
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_ : dims_;
 233:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 234:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // The caller must ensure that the shape is no bigger than 5-D.
 235:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline const int32_t* DimsDataUpTo5D() const { return dims_; }
 236:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 237:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline void Resize(int dimensions_count) {
 238:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (size_ > kMaxSmallSize) {
 239:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 242:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       delete[] dims_pointer_;
 243:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 244:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 245:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     size_ = dimensions_count;
 246:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (dimensions_count > kMaxSmallSize) {
 247:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 248:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       TFLITE_CHECK(false && "No shape resizing supported on this platform");
 249:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #else  // TF_LITE_STATIC_MEMORY
 250:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       dims_pointer_ = new int32_t[dimensions_count];
 251:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 253:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 254:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 255:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline void ReplaceWith(int dimensions_count, const int32_t* dims_data) {
 256:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 257:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     int32_t* dst_dims = DimsData();
 258:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(dst_dims, dims_data, dimensions_count * sizeof(int32_t));
 259:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 260:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 261:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   template <typename T>
 262:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const T& src_iterable) {
 263:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     const int dimensions_count =
 264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****         std::distance(src_iterable.begin(), src_iterable.end());
 265:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     Resize(dimensions_count);
 266:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     int32_t* data = DimsData();
 267:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     for (auto it : src_iterable) {
 268:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       *data = it;
 269:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       ++data;
 270:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 271:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 272:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 273:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // This will probably be factored out. Old code made substantial use of 4-D
 274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // shapes, and so this function is used to extend smaller shapes. Note that
 275:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // (a) as Dims<4>-dependent code is eliminated, the reliance on this should be
 276:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // reduced, and (b) some kernels are stricly 4-D, but then the shapes of their
 277:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // inputs should already be 4-D, so this function should not be needed.
 278:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline static RuntimeShape ExtendedShape(int new_shape_size,
 279:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                                            const RuntimeShape& shape) {
 280:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return RuntimeShape(new_shape_size, shape, 1);
 281:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 282:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 283:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline void BuildFrom(const std::initializer_list<int> init_list) {
 284:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     BuildFrom<const std::initializer_list<int>>(init_list);
 285:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 286:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 287:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // Returns the total count of elements, that is the size when flattened into a
 288:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // vector.
 289:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   inline int FlatSize() const {
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     int buffer_size = 1;
 291:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_; i++) {
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 294:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 295:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return buffer_size;
 296:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 297:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 298:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   bool operator!=(const RuntimeShape& comp) const { return !((*this) == comp); }
 299:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 300:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****  private:
 301:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // For use only by ExtendedShape(), written to guarantee (return-value) copy
 302:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // elision in C++17.
 303:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   // This creates a shape padded to the desired size with the specified value.
 304:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   RuntimeShape(int new_shape_size, const RuntimeShape& shape, int pad_value)
 305:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       : size_(0) {
 306:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     // If the following check fails, it is likely because a 4D-only kernel is
 307:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     // being used with an array of larger dimension count.
 308:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_CHECK_GE(new_shape_size, shape.DimensionsCount());
 309:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     Resize(new_shape_size);
 310:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     const int size_increase = new_shape_size - shape.DimensionsCount();
 311:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     for (int i = 0; i < size_increase; ++i) {
 312:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       SetDim(i, pad_value);
 313:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 314:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     std::memcpy(DimsData() + size_increase, shape.DimsData(),
 315:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                 sizeof(int32_t) * shape.DimensionsCount());
 316:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 317:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 318:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int32_t size_;
 319:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   union {
 320:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     int32_t dims_[kMaxSmallSize];
 321:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     int32_t* dims_pointer_;
 322:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   };
 323:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** };
 324:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 325:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // Converts inference-style shape to legacy tflite::Dims<4>.
 326:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline tflite::Dims<4> ToRuntimeDims(const tflite::RuntimeShape& array_shape) {
 327:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   tflite::Dims<4> result;
 328:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   const int dimensions_count = array_shape.DimensionsCount();
 329:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_LE(dimensions_count, 4);
 330:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int cum_prod = 1;
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < 4; i++) {
 332:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     const int new_dim =
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****         (i < dimensions_count) ? array_shape.Dims(dimensions_count - 1 - i) : 1;
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     result.sizes[i] = new_dim;
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     result.strides[i] = cum_prod;
 336:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     cum_prod *= new_dim;
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return result;
 339:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 340:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 341:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // TODO(b/80418076): Move to legacy ops file, update invocations.
 342:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline RuntimeShape DimsToShape(const tflite::Dims<4>& dims) {
 343:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return RuntimeShape(
 344:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       {dims.sizes[3], dims.sizes[2], dims.sizes[1], dims.sizes[0]});
 345:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 346:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 347:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // Gets next index to iterate through a multidimensional array.
 348:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline bool NextIndex(const int num_dims, const int* dims, int* current) {
 349:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 350:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return false;
 351:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 352:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 353:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(current != nullptr);
 354:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int carry = 1;
 355:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   for (int idx = num_dims - 1; idx >= 0; --idx) {
 356:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     int current_val = current[idx] + carry;
 357:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_GE(dims[idx], current_val);
 358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (dims[idx] == current_val) {
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       current[idx] = 0;
 360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     } else {
 361:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       current[idx] = current_val;
 362:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       carry = 0;
 363:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       break;
 364:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 365:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 366:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return (carry == 0);
 367:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 368:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 369:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // Gets offset of index if reducing on axis. When reducing, the flattened offset
 370:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // will not change, if the input index changes on the given axis. For example,
 371:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // if you have a 3D tensor and you are reducing to 2D by eliminating axis 0,
 372:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // then index (0, 1, 2) and index (1, 1, 2) will map to the same flattened
 373:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // offset.
 374:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // TODO(kanlig): uses Dims to represent dimensions.
 375:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline size_t ReducedOutputOffset(const int num_dims, const int* dims,
 376:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                                   const int* index, const int num_axis,
 377:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                                   const int* axis) {
 378:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   if (num_dims == 0) {
 379:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return 0;
 380:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 381:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(dims != nullptr);
 382:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index != nullptr);
 383:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   size_t offset = 0;
 384:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   for (int idx = 0; idx < num_dims; ++idx) {
 385:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     // if we need to skip this axis
 386:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     bool is_axis = false;
 387:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (axis != nullptr) {
 388:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       for (int axis_idx = 0; axis_idx < num_axis; ++axis_idx) {
 389:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****         if (idx == axis[axis_idx]) {
 390:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****           is_axis = true;
 391:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****           break;
 392:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****         }
 393:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       }
 394:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 395:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     if (!is_axis) {
 396:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       offset = offset * static_cast<size_t>(dims[idx]) +
 397:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                static_cast<size_t>(index[idx]);
 398:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 399:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 400:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return offset;
 401:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 402:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 403:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int i0, int i1, int i2, int i3) {
 404:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), 4);
 405:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 406:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 407:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 408:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 409:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 410:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return ((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3;
 411:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 412:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 413:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int i0, int i1, int i2, int i3,
 414:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                   int i4) {
 415:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), 5);
 416:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   const int* dims_data = reinterpret_cast<const int*>(shape.DimsDataUpTo5D());
 417:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims_data[0]);
 418:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims_data[1]);
 419:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims_data[2]);
 420:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims_data[3]);
 421:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i4 >= 0 && i4 < dims_data[4]);
 422:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return (((i0 * dims_data[1] + i1) * dims_data[2] + i2) * dims_data[3] + i3) *
 423:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****              dims_data[4] +
 424:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****          i4;
 425:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 426:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 427:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int i0, int i1, int i2, int i3) {
 428:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i0 >= 0 && i0 < dims.sizes[0]);
 429:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i1 >= 0 && i1 < dims.sizes[1]);
 430:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i2 >= 0 && i2 < dims.sizes[2]);
 431:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(i3 >= 0 && i3 < dims.sizes[3]);
 432:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return i0 * dims.strides[0] + i1 * dims.strides[1] + i2 * dims.strides[2] +
 433:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****          i3 * dims.strides[3];
 434:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 435:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 436:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const Dims<4>& dims, int* index) {
 437:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return Offset(dims, index[0], index[1], index[2], index[3]);
 438:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 439:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 440:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline int Offset(const RuntimeShape& shape, int* index) {
 441:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return Offset(shape, index[0], index[1], index[2], index[3]);
 442:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 443:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 444:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // Get array size, DCHECKing that the dim index is in range.
 445:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** //
 446:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // Note that this will be phased out with Dims<4>, since RuntimeShape::Dims()
 447:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // already performs this check.
 448:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** template <int N>
 449:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** int ArraySize(const Dims<N>& array, int index) {
 450:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK(index >= 0 && index < N);
 451:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return array.sizes[index];
 452:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 453:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 454:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // Get common array size, DCHECKing that they all agree.
 455:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2>
 456:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 457:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2) {
 458:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 459:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return ArraySize(array1, index1);
 460:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 461:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 462:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** template <typename ArrayType1, typename ArrayType2, typename... Args>
 463:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** int MatchingArraySize(const ArrayType1& array1, int index1,
 464:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                       const ArrayType2& array2, int index2, Args... args) {
 465:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(ArraySize(array1, index1), ArraySize(array2, index2));
 466:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return MatchingArraySize(array1, index1, args...);
 467:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 468:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 469:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // Get common shape dim, DCHECKing that they all agree.
 470:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline int MatchingDim(const RuntimeShape& shape1, int index1,
 471:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                        const RuntimeShape& shape2, int index2) {
 472:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 473:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return std::min(shape1.Dims(index1), shape2.Dims(index2));
 474:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 475:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 476:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** template <typename... Args>
 477:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** int MatchingDim(const RuntimeShape& shape1, int index1,
 478:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                 const RuntimeShape& shape2, int index2, Args... args) {
 479:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));
 480:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return MatchingDim(shape1, index1, args...);
 481:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 482:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 483:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // Will be phased out with Dims<4>, replaced by RuntimeShape::FlatSize().
 484:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** template <int N>
 485:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline int FlatSize(const Dims<N>& dims) {
 486:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   int flat_size = 1;
 487:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < N; ++i) {
 488:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     flat_size *= dims.sizes[i];
 489:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 490:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return flat_size;
 491:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 492:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 493:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** TFLITE_DEPRECATED("Prefer FlatSize.")
 494:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline int RequiredBufferSizeForDims(const Dims<4>& dims) {
 495:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return FlatSize(dims);
 496:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 497:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 498:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 499:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0) {
 500:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 501:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 502:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 503:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 504:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 505:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 506:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline int MatchingElementsSize(const RuntimeShape& shape,
 507:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_0,
 508:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                                 const RuntimeShape& check_shape_1) {
 509:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   const int size_1 = shape.FlatSize();
 510:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   const int size_2 = check_shape_0.FlatSize();
 511:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   const int size_3 = check_shape_1.FlatSize();
 512:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_1, size_2);
 513:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_CHECK_EQ(size_2, size_3);
 514:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   return size_1;
 515:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** }
 516:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** 
 517:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // Flat size calculation, checking that dimensions match with one or more other
 518:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** // arrays.
 519:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** inline int MatchingFlatSize(const RuntimeShape& shape,
 520:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****                             const RuntimeShape& check_shape_0) {
 521:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   TFLITE_DCHECK_EQ(shape.DimensionsCount(), check_shape_0.DimensionsCount());
 484              		.loc 4 521 0
 485 00b4 0A0053E1 		cmp	r3, r10
 486 00b8 1402001A 		bne	.L53
 487              	.LVL46:
 488              	.LBB290:
 522:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   for (int i = 0; i < dims_count; ++i) {
 489              		.loc 4 523 0
 490 00bc 000053E3 		cmp	r3, #0
 491 00c0 870100DA 		ble	.L121
 492 00c4 050053E3 		cmp	r3, #5
 493              	.LBB291:
 494              	.LBB292:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 495              		.loc 4 216 0
 496 00c8 44109DE5 		ldr	r1, [sp, #68]
 497              	.LBE292:
 498              	.LBE291:
 499              	.LBB298:
 500              	.LBB299:
 501 00cc 2C009DE5 		ldr	r0, [sp, #44]
 502 00d0 750100CA 		bgt	.L56
 503              	.LVL47:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 504              		.loc 4 215 0
 505 00d4 000053E3 		cmp	r3, #0
 506 00d8 EA0100DA 		ble	.L57
 507              	.LVL48:
 508              	.LBE299:
 509              	.LBE298:
 524:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 510              		.loc 4 524 0
 511 00dc 000051E1 		cmp	r1, r0
 512 00e0 D801001A 		bne	.L58
 513              	.LVL49:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 514              		.loc 4 523 0
 515 00e4 010053E3 		cmp	r3, #1
 516 00e8 1900000A 		beq	.L120
 517              	.LVL50:
 518              	.LBB307:
 519              	.LBB293:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 520              		.loc 4 216 0
 521 00ec 48109DE5 		ldr	r1, [sp, #72]
 522              	.LVL51:
 523              	.LBE293:
 524              	.LBE307:
 525              		.loc 4 524 0
 526 00f0 30209DE5 		ldr	r2, [sp, #48]
 527 00f4 020051E1 		cmp	r1, r2
 528 00f8 D201001A 		bne	.L58
 529              	.LVL52:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 530              		.loc 4 523 0
 531 00fc 020053E3 		cmp	r3, #2
 532 0100 1300000A 		beq	.L120
 533              	.LVL53:
 534              	.LBB308:
 535              	.LBB294:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 536              		.loc 4 216 0
 537 0104 4C109DE5 		ldr	r1, [sp, #76]
 538              	.LVL54:
 539              	.LBE294:
 540              	.LBE308:
 541              		.loc 4 524 0
 542 0108 34209DE5 		ldr	r2, [sp, #52]
 543 010c 020051E1 		cmp	r1, r2
 544 0110 CC01001A 		bne	.L58
 545              	.LVL55:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 546              		.loc 4 523 0
 547 0114 030053E3 		cmp	r3, #3
 548 0118 0D00000A 		beq	.L120
 549              	.LVL56:
 550              	.LBB309:
 551              	.LBB300:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 552              		.loc 4 215 0
 553 011c 03005AE3 		cmp	r10, #3
 554              	.LBE300:
 555              	.LBE309:
 556              	.LBB310:
 557              	.LBB295:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 558              		.loc 4 216 0
 559 0120 50109DE5 		ldr	r1, [sp, #80]
 560              	.LVL57:
 561              	.LBE295:
 562              	.LBE310:
 563              	.LBB311:
 564              	.LBB301:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 565              		.loc 4 215 0
 566 0124 D701000A 		beq	.L57
 567              	.LVL58:
 568              	.LBE301:
 569              	.LBE311:
 570              		.loc 4 524 0
 571 0128 38209DE5 		ldr	r2, [sp, #56]
 572 012c 020051E1 		cmp	r1, r2
 573 0130 C401001A 		bne	.L58
 574              	.LVL59:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 575              		.loc 4 523 0
 576 0134 040053E3 		cmp	r3, #4
 577 0138 0500000A 		beq	.L120
 578              	.LVL60:
 579              	.LBB312:
 580              	.LBB302:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 581              		.loc 4 215 0
 582 013c 04005AE3 		cmp	r10, #4
 583              	.LBE302:
 584              	.LBE312:
 585              	.LBB313:
 586              	.LBB296:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 587              		.loc 4 216 0
 588 0140 54209DE5 		ldr	r2, [sp, #84]
 589              	.LVL61:
 590              	.LBE296:
 591              	.LBE313:
 592              	.LBB314:
 593              	.LBB303:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 594              		.loc 4 215 0
 595 0144 CF01000A 		beq	.L57
 596              	.LVL62:
 597              	.LBE303:
 598              	.LBE314:
 599              		.loc 4 524 0
 600 0148 3C109DE5 		ldr	r1, [sp, #60]
 601 014c 020051E1 		cmp	r1, r2
 602 0150 BC01001A 		bne	.L58
 603              	.LVL63:
 604              	.L120:
 605              	.LBE290:
 606              	.LBB319:
 607              	.LBB320:
 608              	.LBB321:
 609              	.LBB322:
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 610              		.loc 4 232 0
 611 0154 44108DE2 		add	r1, sp, #68
 612              	.LVL64:
 613              	.L59:
 614 0158 5121A0E7 		sbfx	r2, r1, #2, #1
 615 015c 032002E2 		and	r2, r2, #3
 616 0160 030052E1 		cmp	r2, r3
 617 0164 0320A021 		movcs	r2, r3
 618 0168 080053E3 		cmp	r3, #8
 619 016c 0320A091 		movls	r2, r3
 620 0170 000052E3 		cmp	r2, #0
 621 0174 B001000A 		beq	.L122
 622 0178 010052E3 		cmp	r2, #1
 623              	.LBE322:
 624              	.LBE321:
 625              	.LBB323:
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 626              		.loc 4 293 0
 627 017c 00E091E5 		ldr	lr, [r1]
 628              	.LVL65:
 629 0180 A601000A 		beq	.L129
 630 0184 040091E5 		ldr	r0, [r1, #4]
 631 0188 020052E3 		cmp	r2, #2
 632 018c 900E0EE0 		mul	lr, r0, lr
 633              	.LVL66:
 634 0190 A201000A 		beq	.L129
 635 0194 080091E5 		ldr	r0, [r1, #8]
 636 0198 030052E3 		cmp	r2, #3
 637 019c 900E0EE0 		mul	lr, r0, lr
 638              	.LVL67:
 639 01a0 9E01000A 		beq	.L129
 640 01a4 0C0091E5 		ldr	r0, [r1, #12]
 641 01a8 040052E3 		cmp	r2, #4
 642 01ac 900E0EE0 		mul	lr, r0, lr
 643              	.LVL68:
 644 01b0 9A01000A 		beq	.L129
 645 01b4 100091E5 		ldr	r0, [r1, #16]
 646 01b8 050052E3 		cmp	r2, #5
 647 01bc 900E0EE0 		mul	lr, r0, lr
 648              	.LVL69:
 649 01c0 9601000A 		beq	.L129
 650 01c4 140091E5 		ldr	r0, [r1, #20]
 651 01c8 060052E3 		cmp	r2, #6
 652 01cc 900E0EE0 		mul	lr, r0, lr
 653              	.LVL70:
 654 01d0 9201000A 		beq	.L129
 655 01d4 180091E5 		ldr	r0, [r1, #24]
 656 01d8 070052E3 		cmp	r2, #7
 657 01dc 900E0EE0 		mul	lr, r0, lr
 658              	.LVL71:
 659 01e0 8E01000A 		beq	.L129
 660 01e4 1CC091E5 		ldr	ip, [r1, #28]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 661              		.loc 4 292 0
 662 01e8 0800A0E3 		mov	r0, #8
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 663              		.loc 4 293 0
 664 01ec 9C0E0EE0 		mul	lr, ip, lr
 665              	.LVL72:
 666              	.L66:
 667 01f0 020053E1 		cmp	r3, r2
 668 01f4 2800000A 		beq	.L67
 669              	.LVL73:
 670              	.L65:
 671 01f8 02A043E0 		sub	r10, r3, r2
 672 01fc 016043E2 		sub	r6, r3, #1
 673 0200 04C04AE2 		sub	ip, r10, #4
 674 0204 026046E0 		sub	r6, r6, r2
 675 0208 2CC1A0E1 		lsr	ip, ip, #2
 676 020c 020056E3 		cmp	r6, #2
 677 0210 01C08CE2 		add	ip, ip, #1
 678 0214 0CB1A0E1 		lsl	fp, ip, #2
 679 0218 1200009A 		bls	.L68
 680 021c 022181E0 		add	r2, r1, r2, lsl #2
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 681              		.loc 4 292 0
 682 0220 5100C0F2 		vmov.i32	q8, #1  @ v4si
 683 0224 0060A0E3 		mov	r6, #0
 684              	.L70:
 685 0228 016086E2 		add	r6, r6, #1
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 686              		.loc 4 293 0
 687 022c DF2A62F4 		vld1.64	{d18-d19}, [r2:64]
 688 0230 06005CE1 		cmp	ip, r6
 689 0234 102082E2 		add	r2, r2, #16
 690 0238 F20960F2 		vmul.i32	q8, q8, q9
 691 023c F9FFFF8A 		bhi	.L70
 692 0240 0B005AE1 		cmp	r10, fp
 693 0244 0B0080E0 		add	r0, r0, fp
 694 0248 5020C0F2 		vmov.i32	q9, #0  @ v4si
 695 024c E248F0F2 		vext.32	q10, q8, q9, #2
 696 0250 F40960F2 		vmul.i32	q8, q8, q10
 697 0254 E224F0F2 		vext.32	q9, q8, q9, #1
 698 0258 F20960F2 		vmul.i32	q8, q8, q9
 699 025c 902B10EE 		vmov.32	r2, d16[0]
 700 0260 920E0EE0 		mul	lr, r2, lr
 701 0264 0C00000A 		beq	.L67
 702              	.L68:
 703              	.LVL74:
 704 0268 00C191E7 		ldr	ip, [r1, r0, lsl #2]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 705              		.loc 4 292 0
 706 026c 012080E2 		add	r2, r0, #1
 707 0270 020053E1 		cmp	r3, r2
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 708              		.loc 4 293 0
 709 0274 0021A0E1 		lsl	r2, r0, #2
 710 0278 9C0E0EE0 		mul	lr, ip, lr
 711              	.LVL75:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 712              		.loc 4 292 0
 713 027c 060000DA 		ble	.L67
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 714              		.loc 4 293 0
 715 0280 021081E0 		add	r1, r1, r2
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 716              		.loc 4 292 0
 717 0284 020080E2 		add	r0, r0, #2
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 718              		.loc 4 293 0
 719 0288 042091E5 		ldr	r2, [r1, #4]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 720              		.loc 4 292 0
 721 028c 000053E1 		cmp	r3, r0
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 722              		.loc 4 293 0
 723 0290 920E0EE0 		mul	lr, r2, lr
 724              	.LVL76:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 725              		.loc 4 292 0
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 726              		.loc 4 293 0
 727 0294 082091C5 		ldrgt	r2, [r1, #8]
 728 0298 920E0EC0 		mulgt	lr, r2, lr
 729              	.LVL77:
 730              	.L67:
 731              	.LBE323:
 732              	.LBE320:
 733              	.LBE319:
 734              	.LBE289:
 735              	.LBE288:
 736              	.LBB341:
 737              		.file 5 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tenso
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** /* Copyright 2020 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_LEAKY_RELU_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_REFERENCE_LEAKY_RELU_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** #include <algorithm>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** #include <limits>
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** 
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** #include "tensorflow/lite/kernels/internal/common.h"
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** 
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** namespace tflite {
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** namespace reference_ops {
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** inline void LeakyRelu(const tflite::LeakyReluParams& params,
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                       const RuntimeShape& input_shape, const float* input_data,
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                       const RuntimeShape& output_shape, float* output_data) {
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****   for (int i = 0; i < flat_size; ++i) {
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     const float val = input_data[i];
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     // Note that alpha might be > 1 or < 0, so we don't use std::max here.
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     output_data[i] = val > 0 ? val : val * params.alpha;
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****   }
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** }
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** 
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** template <typename T>
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h **** inline void QuantizeLeakyRelu(const LeakyReluParams& params,
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                               const RuntimeShape& input_shape,
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                               const T* input_data,
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                               const RuntimeShape& output_shape,
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                               T* output_data) {
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****   const int flat_size = MatchingFlatSize(input_shape, output_shape);
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****   static const int32_t quantized_min = std::numeric_limits<T>::min();
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****   static const int32_t quantized_max = std::numeric_limits<T>::max();
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****   for (int i = 0; i < flat_size; ++i) {
 738              		.loc 5 46 0
 739 029c 00005EE3 		cmp	lr, #0
 740 02a0 4E0100DA 		ble	.L63
 741              	.LVL78:
 742              	.L54:
 743 02a4 000055E3 		cmp	r5, #0
 744              	.LBB342:
 745              	.LBB343:
 746              	.LBB344:
 747              		.file 6 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tenso
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #ifndef TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #define TENSORFLOW_LITE_KERNELS_INTERNAL_COMMON_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #ifndef ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #ifdef GEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #define ALLOW_SLOW_GENERIC_DEPTHWISECONV_FALLBACK
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #endif
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #endif
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #include <functional>
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #include "fixedpoint/fixedpoint.h"
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/optimized/neon_check.h"
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #include "tensorflow/lite/kernels/internal/types.h"
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** namespace tflite {
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** constexpr int kReverseShift = -1;
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** inline void GetActivationMinMax(FusedActivationFunctionType ac,
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_min,
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                 float* output_activation_max) {
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   switch (ac) {
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kNone:
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = std::numeric_limits<float>::lowest();
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       break;
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu:
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = std::numeric_limits<float>::max();
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       break;
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu1:
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = -1.f;
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 1.f;
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       break;
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     case FusedActivationFunctionType::kRelu6:
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_min = 0.f;
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       *output_activation_max = 6.f;
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       break;
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   }
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** }
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** template <typename T>
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** inline T ActivationFunctionWithMinMax(T x, T output_activation_min,
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                       T output_activation_max) {
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   using std::max;
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   using std::min;
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   return min(max(x, output_activation_min), output_activation_max);
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** }
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** // Legacy function, left for compatibility only.
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** template <FusedActivationFunctionType Ac>
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** float ActivationFunction(float x) {
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   float output_activation_min, output_activation_max;
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   GetActivationMinMax(Ac, &output_activation_min, &output_activation_max);
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   return ActivationFunctionWithMinMax(x, output_activation_min,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                       output_activation_max);
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** }
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                          const float* bias_data, int array_size,
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                          float* array_data) {
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   // Note: see b/132215220: in May 2019 we thought it would be OK to replace
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   // this with the Eigen one-liner:
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   //   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max).
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   // This turned out to severely regress performance: +4ms (i.e. 8%) on
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   // MobileNet v2 / 1.0 / 224. So we keep custom NEON code for now.
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   TFLITE_DCHECK_EQ((array_size % bias_size), 0);
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #ifdef USE_NEON
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   float* array_ptr = array_data;
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   float* array_end_ptr = array_ptr + array_size;
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_min_vec = vdupq_n_f32(clamp_min);
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   const auto clamp_max_vec = vdupq_n_f32(clamp_max);
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   for (; array_ptr != array_end_ptr; array_ptr += bias_size) {
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     int i = 0;
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 16; i += 16) {
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto b0 = vld1q_f32(bias_data + i);
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto b1 = vld1q_f32(bias_data + i + 4);
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto b2 = vld1q_f32(bias_data + i + 8);
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto b3 = vld1q_f32(bias_data + i + 12);
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto a0 = vld1q_f32(array_ptr + i);
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto a1 = vld1q_f32(array_ptr + i + 4);
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto a2 = vld1q_f32(array_ptr + i + 8);
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto a3 = vld1q_f32(array_ptr + i + 12);
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto x0 = vaddq_f32(a0, b0);
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto x1 = vaddq_f32(a1, b1);
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto x2 = vaddq_f32(a2, b2);
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto x3 = vaddq_f32(a3, b3);
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x0 = vmaxq_f32(clamp_min_vec, x0);
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x1 = vmaxq_f32(clamp_min_vec, x1);
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x2 = vmaxq_f32(clamp_min_vec, x2);
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x3 = vmaxq_f32(clamp_min_vec, x3);
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x0 = vminq_f32(clamp_max_vec, x0);
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x1 = vminq_f32(clamp_max_vec, x1);
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x2 = vminq_f32(clamp_max_vec, x2);
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x3 = vminq_f32(clamp_max_vec, x3);
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x0);
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 4, x1);
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 8, x2);
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i + 12, x3);
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     }
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     for (; i <= bias_size - 4; i += 4) {
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto b = vld1q_f32(bias_data + i);
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto a = vld1q_f32(array_ptr + i);
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       auto x = vaddq_f32(a, b);
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x = vmaxq_f32(clamp_min_vec, x);
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       x = vminq_f32(clamp_max_vec, x);
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       vst1q_f32(array_ptr + i, x);
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     }
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     for (; i < bias_size; i++) {
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       array_ptr[i] = ActivationFunctionWithMinMax(array_ptr[i] + bias_data[i],
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                                   clamp_min, clamp_max);
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     }
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   }
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #else  // not NEON
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   for (int array_offset = 0; array_offset < array_size;
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****        array_offset += bias_size) {
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     for (int i = 0; i < bias_size; i++) {
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       array_data[array_offset + i] = ActivationFunctionWithMinMax(
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****           array_data[array_offset + i] + bias_data[i], clamp_min, clamp_max);
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     }
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   }
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** #endif
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** }
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierSmallerThanOneExp(
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****       SaturatingRoundingDoublingHighMul(x, quantized_multiplier), -left_shift);
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** }
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplierGreaterThanOne(
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****     int32_t x, int32_t quantized_multiplier, int left_shift) {
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   return SaturatingRoundingDoublingHighMul(x * (1 << left_shift),
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                            quantized_multiplier);
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** }
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** 
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h **** inline int32_t MultiplyByQuantizedMultiplier(int32_t x,
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                              int32_t quantized_multiplier,
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****                                              int shift) {
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::RoundingDivideByPOT;
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   using gemmlowp::SaturatingRoundingDoublingHighMul;
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   int left_shift = shift > 0 ? shift : 0;
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 748              		.loc 6 162 0
 749 02a8 003065E2 		rsb	r3, r5, #0
 750              	.LBB345:
 751              	.LBB346:
 752              		.file 7 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Copyright 2015 The Gemmlowp Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // fixedpoint.h: fixed-point arithmetic, with basic operations and
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // a few math functions such as tanh.
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #ifndef GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #define GEMMLOWP_INTERNAL_FIXEDPOINT_H_
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <algorithm>
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cassert>
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cmath>
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <cstdint>
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include <limits>
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** #include "../internal/detect_platform.h"
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** namespace gemmlowp {
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Part 1: Low-level integer-arithmetic primitives.
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The implementations here are generic implementations valid for
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // scalar types (e.g. std::int32_t). Architecture-specific SIMD types
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // (e.g. NEON int32x4_t) may be supported by providing
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // specializations for them in separate files.
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The purpose of these primitives is two-fold:
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be used to implement higher-level fixed-point
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    abstractions, namely the FixedPoint class and its arithmetic
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    operators.
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //  - They will be directly used to implement some more involved
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    fixed-point computations, e.g. the fixed-point implementation
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //    of math functions such as tanh.
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Some compile-time traits around raw types to handle SIMD aspects:
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // number of lanes, underlying scalar type.
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits {};
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int32_t> {
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int32_t ScalarRawType;
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct FixedPointRawTypeTraits<std::int16_t> {
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   typedef std::int16_t ScalarRawType;
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr int kLanes = 1;
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns a SIMD value duplicating a scalar value across all lanes.
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tRawType>
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tRawType Dup(typename FixedPointRawTypeTraits<tRawType>::ScalarRawType x) {
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return x;
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise AND
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitAnd(tIntegerType a, tIntegerType b) {
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a & b;
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise OR
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitOr(tIntegerType a, tIntegerType b) {
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a | b;
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise XOR
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitXor(tIntegerType a, tIntegerType b) {
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a ^ b;
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Plain bit-wise NOT
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType BitNot(tIntegerType a) {
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return ~a;
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer addition. Not saturating. Overflow is undefined behavior.
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Add(tIntegerType a, tIntegerType b) {
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a + b;
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer subtraction. Not saturating. Overflow is undefined behavior.
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Mul(tIntegerType a, tIntegerType b) {
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a * b;
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Sub(tIntegerType a, tIntegerType b) {
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a - b;
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer unary negative. Not saturating. Overflow is undefined behavior.
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType Neg(tIntegerType a) {
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return -a;
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic left-shift, equivalent to multiplying with a power of two.
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Negative values are OK. In case of overflow, no Undefined
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Behavior, but the results are implementation-defined (in practice,
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // they currently are saturated, but we make no commitment to that). The idea
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // is that the caller will want to implement the overflowing cases with
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // saturation with compare-and-mask, so we don't care about the results
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // in the overflow case, we just want to avoid undefined behavior.
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // tIntegerType may be int32 or any narrower signed type.
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftLeft(tIntegerType a, int offset) {
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_a = static_cast<std::int64_t>(a);
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const std::int64_t wide_shifted = wide_a * (1 << offset);
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto min = std::numeric_limits<tIntegerType>::min();
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const auto max = std::numeric_limits<tIntegerType>::max();
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return wide_shifted < min
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              ? min
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****              : wide_shifted > max ? max
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                   : static_cast<tIntegerType>(wide_shifted);
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Integer arithmetic right-shift. Not rounding.
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Relying on implementation-defined, but in-practice-consistent,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // C++ compiler behavior.
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType ShiftRight(tIntegerType a, int offset) {
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a >> offset;
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Each bit of the result is set to the corresponding bit of either then_val or
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // else_val depending on whether the corresponding bit of if_mask is set.
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to the VBSL instruction in ARM NEON.
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType SelectUsingMask(tIntegerType if_mask, tIntegerType then_val,
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                              tIntegerType else_val) {
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return BitXor(BitAnd(if_mask, then_val), BitAnd(BitNot(if_mask), else_val));
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is non-zero.
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNonZero(tIntegerType a) {
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static constexpr tIntegerType zero = 0;
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a ? BitNot(zero) : zero;
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each input scalar, the corresponding bits of the result are set if the
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // input scalar is zero.
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfZero(tIntegerType a) {
 165:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(!a);
 166:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 167:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 168:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 169:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are equal.
 170:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 171:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfEqual(tIntegerType a, tIntegerType b) {
 172:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a == b);
 173:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 174:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 175:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 176:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars are not equal.
 177:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 178:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfNotEqual(tIntegerType a, tIntegerType b) {
 179:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a != b);
 180:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 181:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 182:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 183:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a > b.
 184:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 185:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThan(tIntegerType a, tIntegerType b) {
 186:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a > b);
 187:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 188:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 189:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 190:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a >= b.
 191:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 192:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfGreaterThanOrEqual(tIntegerType a, tIntegerType b) {
 193:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a >= b);
 194:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 195:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 196:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 197:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a < b.
 198:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 199:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThan(tIntegerType a, tIntegerType b) {
 200:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a < b);
 201:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 202:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // For each pair of input scalars, the corresponding bits of the result are
 204:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // set if the input scalars a, b satisfy a <= b.
 205:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 206:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** tIntegerType MaskIfLessThanOrEqual(tIntegerType a, tIntegerType b) {
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return MaskIfNonZero<tIntegerType>(a <= b);
 208:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 209:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 210:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if all of the input scalars are nonzero.
 211:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 212:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 213:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 214:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** bool All(tIntegerType a) {
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 217:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 218:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns true if any of the input scalars are nonzero.
 219:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function may currently assume that each of the input scalars has either
 220:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // all or none of its bits set. Otherwise, its behavior is currently undefined.
 221:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename tIntegerType>
 222:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** bool Any(tIntegerType a) {
 223:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 224:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 225:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 226:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns (a+b)/2, rounded to the nearest integer.
 227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Equivalent to VRHADD in the ARM NEON instruction set.
 228:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 229:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType RoundingHalfSum(IntegerType a, IntegerType b) {
 230:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 231:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 233:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 234:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 235:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 236:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t RoundingHalfSum(std::int32_t a, std::int32_t b) {
 237:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a64 = a;
 238:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b64 = b;
 239:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sum = a64 + b64;
 240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t sign = sum >= 0 ? 1 : -1;
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int32_t>((sum + sign) / 2);
 242:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 243:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 244:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 245:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t RoundingHalfSum(std::int16_t a, std::int16_t b) {
 246:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 247:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 248:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 249:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sign = sum >= 0 ? 1 : -1;
 250:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>((sum + sign) / 2);
 251:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 253:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 254:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingAdd(IntegerType a, IntegerType b) {
 255:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 256:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 257:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 258:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 259:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 260:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // So far this is only needed for int16.
 261:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 262:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingAdd(std::int16_t a, std::int16_t b) {
 263:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a32 = a;
 264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b32 = b;
 265:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t sum = a32 + b32;
 266:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return static_cast<std::int16_t>(
 267:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       std::min(static_cast<std::int32_t>(32767),
 268:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                std::max(static_cast<std::int32_t>(-32768), sum)));
 269:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 270:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 271:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns a+b, saturating if the integers are 16bit or narrower,
 272:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // otherwise just a plain addition.
 273:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType, bool Is16Bit>
 274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl {
 275:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) { return Add(a, b); }
 276:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 277:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 278:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** struct AddSaturatingIf16BitImpl<IntegerType, true> {
 279:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static IntegerType Run(IntegerType a, IntegerType b) {
 280:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****     return SaturatingAdd(a, b);
 281:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   }
 282:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** };
 283:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 284:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType AddSaturatingIf16Bit(IntegerType a, IntegerType b) {
 285:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   using ScalarType =
 286:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       typename FixedPointRawTypeTraits<IntegerType>::ScalarRawType;
 287:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return AddSaturatingIf16BitImpl<IntegerType, sizeof(ScalarType) == 2>::Run(a,
 288:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                                              b);
 289:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 291:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Returns the integer that represents the product of two fixed-point
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // numbers, interpreting all integers as fixed-point values in the
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1), rounding to the nearest value, and saturating
 294:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // -1 * -1 to the maximum value (since 1 is not in the half-open
 295:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // interval [-1, 1)).
 296:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 297:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // [The explanation below specializes to std::int32_t for example purpose.]
 298:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 299:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The mapping between IntegerType and the interval [-1, 1) is unique and
 300:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // implied by IntegerType, which is assumed to be signed. For example,
 301:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // for IntegerType==std::int32_t, the mapping is
 302:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   real_value = integer_value / 2^31.
 303:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // So in this case, and leaving aside rounding and saturating, this
 304:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // function computes ((a / 2^31) * (b / 2^31)) * 2^31, which simplifies to
 305:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^31.
 306:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 307:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The 'doubling' part in the name of this function comes from the fact that
 308:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // this operation is very close to a "multiply-high" operation, keeping only
 309:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // the top half bits, except that that would be effectively computing
 310:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   (a * b) / 2^32,
 311:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // so here we are computing 2x that, since
 312:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //   1/2^31 = 2 * 1/2^32.
 313:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // The idea is to use all of the available 32 bits in the destination int32
 314:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // value.
 315:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 316:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // [End of the explanation specializing to int32.]
 317:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** //
 318:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This is equivalent to the VQRDMULH instruction in ARM NEON.
 319:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 320:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** IntegerType SaturatingRoundingDoublingHighMul(IntegerType a, IntegerType b) {
 321:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   static_assert(std::is_same<IntegerType, void>::value, "unimplemented");
 322:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   (void)b;
 323:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return a;
 324:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 325:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 326:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // This function implements the same computation as the ARMv7 NEON VQRDMULH
 327:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // instruction.
 328:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 329:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int32_t SaturatingRoundingDoublingHighMul(std::int32_t a,
 330:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int32_t b) {
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int32_t>::min();
 332:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t b_64(b);
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t ab_64 = a_64 * b_64;
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 336:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int32_t>((ab_64 + nudge) / (1ll << 31));
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 339:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 340:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 341:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <>
 342:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline std::int16_t SaturatingRoundingDoublingHighMul(std::int16_t a,
 343:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****                                                       std::int16_t b) {
 344:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   bool overflow = a == b && a == std::numeric_limits<std::int16_t>::min();
 345:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t a_32(a);
 346:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t b_32(b);
 347:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_32 = a_32 * b_32;
 348:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t nudge = ab_32 >= 0 ? (1 << 14) : (1 - (1 << 14));
 349:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int16_t ab_x2_high16 =
 350:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****       static_cast<std::int16_t>((ab_32 + nudge) / (1 << 15));
 351:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int16_t>::max() : ab_x2_high16;
 352:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 353:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** 
 354:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Correctly-rounded-to-nearest division by a power-of-two.
 355:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** // Also known as a rounding arithmetic right shift.
 356:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** template <typename IntegerType>
 357:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** inline IntegerType RoundingDivideByPOT(IntegerType x, int exponent) {
 358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent >= 0);
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   assert(exponent <= 31);
 360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 753              		.loc 7 360 0
 754 02ac 570BDFED 		vldr.64	d16, .L204	@ int
 755 02b0 0030A0C3 		movgt	r3, #0
 756 02b4 000054E3 		cmp	r4, #0
 757              	.LBE346:
 758              	.LBE345:
 759              	.LBE344:
 760              	.LBE343:
 761              	.LBB390:
 762              	.LBB391:
 763              		.loc 6 162 0
 764 02b8 006064E2 		rsb	r6, r4, #0
 765              	.LBE391:
 766              	.LBE390:
 767              	.LBB432:
 768              	.LBB381:
 769              	.LBB369:
 770              	.LBB363:
 771              		.loc 7 360 0
 772 02bc 903B02EE 		vmov.32	d18[0], r3
 773 02c0 0060A0C3 		movgt	r6, #0
 774 02c4 0C308DE5 		str	r3, [sp, #12]
 775              	.LBE363:
 776              	.LBE369:
 777              	.LBE381:
 778              	.LBE432:
 779              	.LBB433:
 780              	.LBB424:
 781              	.LBB392:
 782              	.LBB393:
 783              	.LBB394:
 784              	.LBB395:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 785              		.loc 7 141 0
 786 02c8 00C0A0E3 		mov	ip, #0
 787              	.LBE395:
 788              	.LBE394:
 789              	.LBE393:
 790              	.LBE392:
 791              	.LBE424:
 792              	.LBE433:
 793              	.LBB434:
 794              	.LBB382:
 795              	.LBB370:
 796              	.LBB364:
 797              		.loc 7 360 0
 798 02cc A01472F3 		vshl.u64	d17, d16, d18
 799 02d0 312B53EC 		vmov	r2, r3, d17	@ int
 800              	.LBE364:
 801              	.LBE370:
 802              	.LBE382:
 803              	.LBE434:
 804              	.LBB435:
 805              	.LBB425:
 806              	.LBB412:
 807              	.LBB406:
 808 02d4 906B01EE 		vmov.32	d17[0], r6
 809              	.LBE406:
 810              	.LBE412:
 811              	.LBE425:
 812              	.LBE435:
 813              	.LBB436:
 814              	.LBB383:
 815              	.LBB371:
 816              	.LBB365:
 817 02d8 013042E2 		sub	r3, r2, #1
 818 02dc 14308DE5 		str	r3, [sp, #20]
 819              	.LBB347:
 820              	.LBB348:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 821              		.loc 7 141 0
 822 02e0 C330A0E1 		asr	r3, r3, #1
 823              	.LBE348:
 824              	.LBE347:
 825              	.LBE365:
 826              	.LBE371:
 827              	.LBE383:
 828              	.LBE436:
 829              	.LBB437:
 830              	.LBB426:
 831              	.LBB413:
 832              	.LBB407:
 833              		.loc 7 360 0
 834 02e4 A00471F3 		vshl.u64	d16, d16, d17
 835              	.LBE407:
 836              	.LBE413:
 837              	.LBE426:
 838              	.LBE437:
 839              	.LBB438:
 840              	.LBB384:
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 841              		.loc 6 161 0
 842 02e8 C52FC5E1 		bic	r2, r5, r5, asr #31
 843              	.LBB372:
 844              	.LBB366:
 845              	.LBB350:
 846              	.LBB349:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 847              		.loc 7 141 0
 848 02ec 18308DE5 		str	r3, [sp, #24]
 849              	.LBE349:
 850              	.LBE350:
 851              	.LBE366:
 852              	.LBE372:
 853              	.LBE384:
 854              	.LBE438:
 855              	.LBB439:
 856              	.LBB427:
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 857              		.loc 6 161 0
 858 02f0 C43FC4E1 		bic	r3, r4, r4, asr #31
 859              	.LBE427:
 860              	.LBE439:
 861              	.LBB440:
 862              	.LBB385:
 863 02f4 1C208DE5 		str	r2, [sp, #28]
 864              	.LBE385:
 865              	.LBE440:
 866              	.LBB441:
 867              	.LBB428:
 868              	.LBB414:
 869              	.LBB408:
 870              		.loc 7 360 0
 871 02f8 30AB5BEC 		vmov	r10, fp, d16	@ int
 872 02fc 01A04AE2 		sub	r10, r10, #1
 873              	.LBE408:
 874              	.LBE414:
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   int right_shift = shift > 0 ? 0 : -shift;
 875              		.loc 6 161 0
 876 0300 08308DE5 		str	r3, [sp, #8]
 877              	.LBB415:
 878              	.LBB409:
 879              	.LBB397:
 880              	.LBB396:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 881              		.loc 7 141 0
 882 0304 CA30A0E1 		asr	r3, r10, #1
 883 0308 04308DE5 		str	r3, [sp, #4]
 884 030c 20309DE5 		ldr	r3, [sp, #32]
 885 0310 015043E2 		sub	r5, r3, #1
 886 0314 24309DE5 		ldr	r3, [sp, #36]
 887 0318 014043E2 		sub	r4, r3, #1
 888 031c 1C0000EA 		b	.L81
 889              	.LVL79:
 890              	.L191:
 891              	.LBE396:
 892              	.LBE397:
 893              	.LBE409:
 894              	.LBE415:
 895              	.LBB416:
 896              	.LBB417:
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 897              		.loc 7 337 0
 898 0320 020090E0 		adds	r0, r0, r2
 899              	.LVL80:
 900 0324 0310A1E0 		adc	r1, r1, r3
 901 0328 0030A0E3 		mov	r3, #0
 902              	.LVL81:
 903 032c C12FA0E1 		asr	r2, r1, #31
 904              	.LVL82:
 905 0330 0221C2E3 		bic	r2, r2, #-2147483648
 906 0334 002092E0 		adds	r2, r2, r0
 907 0338 A22FA0E1 		lsr	r2, r2, #31
 908 033c 0130A3E0 		adc	r3, r3, r1
 909 0340 832082E1 		orr	r2, r2, r3, lsl #1
 910              	.L92:
 911              	.LVL83:
 912              	.LBE417:
 913              	.LBE416:
 914              	.LBB420:
 915              	.LBB410:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 916              		.loc 7 359 0
 917 0344 1F0056E3 		cmp	r6, #31
 918 0348 600100CA 		bgt	.L200
 919              	.LVL84:
 920              	.LBB398:
 921              	.LBB399:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 922              		.loc 7 95 0
 923 034c 04309DE5 		ldr	r3, [sp, #4]
 924 0350 A21F83E0 		add	r1, r3, r2, lsr #31
 925              	.LBE399:
 926              	.LBE398:
 927              	.LBB400:
 928              	.LBB401:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 929              		.loc 7 141 0
 930 0354 5236A0E1 		asr	r3, r2, r6
 931              	.LBE401:
 932              	.LBE400:
 933              	.LBB402:
 934              	.LBB403:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 935              		.loc 7 71 0
 936 0358 0A2002E0 		and	r2, r2, r10
 937              	.LBE403:
 938              	.LBE402:
 939              	.LBB404:
 940              	.LBB405:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 941              		.loc 7 95 0
 942 035c 010052E1 		cmp	r2, r1
 943 0360 0320A0D1 		movle	r2, r3
 944 0364 012083C2 		addgt	r2, r3, #1
 945              	.LBE405:
 946              	.LBE404:
 947              	.LBE410:
 948              	.LBE420:
 949              	.LBE428:
 950              	.LBE441:
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     const int32_t input_value = input_data[i] - params.input_offset;
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     int32_t unclamped_output;
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     if (input_value >= 0) {
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****       unclamped_output = params.output_offset +
 951              		.loc 5 50 0
 952 0368 092082E0 		add	r2, r2, r9
 953              	.LVL85:
 954              	.L77:
 955              	.LBB442:
 956              	.LBB443:
 957              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** /*
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  */
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  */
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** {
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<bool _BoolType>
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __iter_swap
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static void
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         {
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****             _ValueType1;
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	}
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<>
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __iter_swap<true>
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static void 
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         {
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           swap(*__a, *__b);
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         }
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #endif
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   Nothing.
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  iterators themselves.
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline void
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ValueType1;
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ValueType2;
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ValueType2>)
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ValueType1>)
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ReferenceType1;
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ReferenceType2;
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #else
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #endif
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _ForwardIterator2
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       return __first2;
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  preprocessor macro.
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline const _Tp&
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       if (__b < __a)
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       return __a;
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  preprocessor macro.
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _Tp>
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline const _Tp&
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       if (__a < __b)
 958              		.loc 8 224 0
 959 036c 7F0072E3 		cmn	r2, #127
 960 0370 7F20E0B3 		mvnlt	r2, #127
 961              	.LVL86:
 962 0374 020000BA 		blt	.L80
 963              	.LVL87:
 964              	.LBE443:
 965              	.LBE442:
 966              	.LBB444:
 967              	.LBB445:
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 968              		.loc 8 200 0
 969 0378 7E0052E3 		cmp	r2, #126
 970 037c 7220AFD6 		sxtble	r2, r2
 971 0380 7F20A0C3 		movgt	r2, #127
 972              	.L80:
 973              	.LBE445:
 974              	.LBE444:
 975              	.LBE342:
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     const int32_t input_value = input_data[i] - params.input_offset;
 976              		.loc 5 46 0
 977 0384 01C08CE2 		add	ip, ip, #1
 978              	.LVL88:
 979              	.LBB453:
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                          MultiplyByQuantizedMultiplier(
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                              input_value, params.output_multiplier_identity,
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                              params.output_shift_identity);
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     } else {
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****       unclamped_output = params.output_offset +
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                          MultiplyByQuantizedMultiplier(
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                              input_value, params.output_multiplier_alpha,
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                              params.output_shift_alpha);
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     }
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     const T clamped_output =
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****         std::min(quantized_max, std::max(quantized_min, unclamped_output));
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     output_data[i] = static_cast<T>(clamped_output);
 980              		.loc 5 62 0
 981 0388 0120E4E5 		strb	r2, [r4, #1]!
 982              	.LVL89:
 983              	.LBE453:
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     const int32_t input_value = input_data[i] - params.input_offset;
 984              		.loc 5 46 0
 985 038c 0E005CE1 		cmp	ip, lr
 986 0390 110100AA 		bge	.L201
 987              	.LVL90:
 988              	.L81:
 989              	.LBB454:
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     int32_t unclamped_output;
 990              		.loc 5 47 0
 991 0394 D1B0F5E1 		ldrsb	fp, [r5, #1]!
 992              	.LVL91:
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****       unclamped_output = params.output_offset +
 993              		.loc 5 49 0
 994 0398 08B05BE0 		subs	fp, fp, r8
 995              	.LVL92:
 996 039c E300004A 		bmi	.L74
 997              	.LVL93:
 998              	.LBB446:
 999              	.LBB429:
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\common.h ****   return RoundingDivideByPOT(SaturatingRoundingDoublingHighMul(
 1000              		.loc 6 163 0
 1001 03a0 08309DE5 		ldr	r3, [sp, #8]
 1002 03a4 1BB3A0E1 		lsl	fp, fp, r3
 1003              	.LVL94:
 1004              	.LBB421:
 1005              	.LBB418:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1006              		.loc 7 334 0
 1007 03a8 9B27C3E0 		smull	r2, r3, fp, r7
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 1008              		.loc 7 331 0
 1009 03ac 0B0057E1 		cmp	r7, fp
 1010 03b0 02015B03 		cmpeq	fp, #-2147483648
 1011 03b4 01B0A003 		moveq	fp, #1
 1012              	.LVL95:
 1013 03b8 00B0A013 		movne	fp, #0
 1014              	.LVL96:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1015              		.loc 7 335 0
 1016 03bc 000052E3 		cmp	r2, #0
 1017 03c0 0010D3E2 		sbcs	r1, r3, #0
 1018 03c4 FF0000BA 		blt	.L130
 1019 03c8 0101A0E3 		mov	r0, #1073741824
 1020 03cc 0010A0E3 		mov	r1, #0
 1021              	.L75:
 1022              	.LVL97:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1023              		.loc 7 338 0
 1024 03d0 00005BE3 		cmp	fp, #0
 1025 03d4 D1FFFF0A 		beq	.L191
 1026 03d8 0221E0E3 		mvn	r2, #-2147483648
 1027              	.LVL98:
 1028 03dc D8FFFFEA 		b	.L92
 1029              	.LVL99:
 1030              	.L199:
 1031              	.LBE418:
 1032              	.LBE421:
 1033              	.LBE429:
 1034              	.LBE446:
 1035              	.LBE454:
 1036              	.LBE341:
 1037              	.LBE287:
 1038              	.LBE286:
 1039              	.LBE279:
 1040              	.LBE278:
 114:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     case kTfLiteFloat32: {
 115:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       LeakyReluParams op_params = {};
 116:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       const auto* params =
 117:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****           static_cast<TfLiteLeakyReluParams*>(node->builtin_data);
 118:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 119:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       op_params.alpha = params->alpha;
 120:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       reference_ops::LeakyRelu(op_params, tflite::micro::GetTensorShape(input),
 121:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                tflite::micro::GetTensorData<float>(input),
 122:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                tflite::micro::GetTensorShape(output),
 123:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                tflite::micro::GetTensorData<float>(output));
 124:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       return kTfLiteOk;
 125:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     } break;
 126:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     case kTfLiteInt8: {
 127:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       QuantizeLeakyRelu<int8_t>(data, input, output);
 128:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       return kTfLiteOk;
 129:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     } break;
 130:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     default:
 131:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       TF_LITE_KERNEL_LOG(
 1041              		.loc 1 131 0
 1042 03e0 145094E5 		ldr	r5, [r4, #20]
 1043              	.LVL100:
 1044              	.LEHB2:
 1045 03e4 FEFFFFEB 		bl	TfLiteTypeGetName
 1046              	.LVL101:
 1047 03e8 001000E3 		movw	r1, #:lower16:.LC11
 1048 03ec 0020A0E1 		mov	r2, r0
 1049 03f0 001040E3 		movt	r1, #:upper16:.LC11
 1050 03f4 0400A0E1 		mov	r0, r4
 1051 03f8 35FF2FE1 		blx	r5
 1052              	.LVL102:
 132:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****           context, "Only float32, int8 are supported by LEAKY_RELU, got %s.",
 133:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****           TfLiteTypeGetName(input->type));
 134:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       return kTfLiteError;
 1053              		.loc 1 134 0
 1054 03fc 0100A0E3 		mov	r0, #1
 1055              	.LBE277:
 1056              	.LBE602:
 135:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   }
 136:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 137:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   return kTfLiteError;
 138:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** }
 1057              		.loc 1 138 0
 1058 0400 5CD08DE2 		add	sp, sp, #92
 1059              		.cfi_remember_state
 1060              		.cfi_def_cfa_offset 44
 1061              		@ sp needed
 1062 0404 028BBDEC 		vldm	sp!, {d8}
 1063              		.cfi_restore 80
 1064              		.cfi_restore 81
 1065              		.cfi_def_cfa_offset 36
 1066 0408 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1067              	.LVL103:
 1068              	.L205:
 1069 040c 00F020E3 		.align	3
 1070              	.L204:
 1071 0410 01000000 		.word	1
 1072 0414 00000000 		.word	0
 1073              	.LVL104:
 1074              	.L21:
 1075              		.cfi_restore_state
 1076              	.LBB603:
 1077              	.LBB599:
 1078              	.LBB494:
 119:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       reference_ops::LeakyRelu(op_params, tflite::micro::GetTensorShape(input),
 1079              		.loc 1 119 0
 1080 0418 143095E5 		ldr	r3, [r5, #20]
 120:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                tflite::micro::GetTensorData<float>(input),
 1081              		.loc 1 120 0
 1082 041c 0A10A0E1 		mov	r1, r10
 1083 0420 28008DE2 		add	r0, sp, #40
 119:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****       reference_ops::LeakyRelu(op_params, tflite::micro::GetTensorShape(input),
 1084              		.loc 1 119 0
 1085 0424 008A93ED 		vldr.32	s16, [r3]
 120:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                tflite::micro::GetTensorData<float>(input),
 1086              		.loc 1 120 0
 1087 0428 FEFFFFEB 		bl	_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1088              	.LVL105:
 1089              	.LEHE2:
 122:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                tflite::micro::GetTensorData<float>(output));
 1090              		.loc 1 122 0
 1091 042c 0610A0E1 		mov	r1, r6
 1092 0430 40008DE2 		add	r0, sp, #64
 1093              	.LBB495:
 1094              	.LBB496:
 1095              		.loc 3 63 0
 1096 0434 00509AE5 		ldr	r5, [r10]
 1097              	.LVL106:
 1098              	.LEHB3:
 1099              	.LBE496:
 1100              	.LBE495:
 122:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****                                tflite::micro::GetTensorData<float>(output));
 1101              		.loc 1 122 0
 1102 0438 FEFFFFEB 		bl	_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
 1103              	.LVL107:
 1104              	.LEHE3:
 1105 043c 28109DE5 		ldr	r1, [sp, #40]
 1106              	.LBB497:
 1107              	.LBB498:
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h **** }
 1108              		.loc 3 56 0
 1109 0440 000056E3 		cmp	r6, #0
 1110 0444 40E09DE5 		ldr	lr, [sp, #64]
 1111 0448 0640A001 		moveq	r4, r6
 1112              	.LVL108:
 1113 044c 00409615 		ldrne	r4, [r6]
 1114              	.LVL109:
 1115              	.LBE498:
 1116              	.LBE497:
 1117              	.LBB499:
 1118              	.LBB500:
 1119              	.LBB501:
 1120              	.LBB502:
 521:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 1121              		.loc 4 521 0
 1122 0450 0E0051E1 		cmp	r1, lr
 1123 0454 2E01001A 		bne	.L24
 1124              	.LVL110:
 1125              	.LBB503:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1126              		.loc 4 523 0
 1127 0458 000051E3 		cmp	r1, #0
 1128 045c B10000DA 		ble	.L104
 1129 0460 050051E3 		cmp	r1, #5
 1130              	.LBB504:
 1131              	.LBB505:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1132              		.loc 4 216 0
 1133 0464 2C709DE5 		ldr	r7, [sp, #44]
 1134              	.LBE505:
 1135              	.LBE504:
 1136              	.LBB511:
 1137              	.LBB512:
 1138 0468 44209DE5 		ldr	r2, [sp, #68]
 1139 046c 9E0000CA 		bgt	.L27
 1140              	.LVL111:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1141              		.loc 4 215 0
 1142 0470 000051E3 		cmp	r1, #0
 1143 0474 130100DA 		ble	.L28
 1144              	.LVL112:
 1145              	.LBE512:
 1146              	.LBE511:
 1147              		.loc 4 524 0
 1148 0478 020057E1 		cmp	r7, r2
 1149 047c 0201001A 		bne	.L29
 1150              	.LVL113:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1151              		.loc 4 523 0
 1152 0480 010051E3 		cmp	r1, #1
 1153 0484 1900000A 		beq	.L103
 1154              	.LVL114:
 1155              	.LBB520:
 1156              	.LBB506:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1157              		.loc 4 216 0
 1158 0488 30209DE5 		ldr	r2, [sp, #48]
 1159              	.LVL115:
 1160              	.LBE506:
 1161              	.LBE520:
 1162              		.loc 4 524 0
 1163 048c 48309DE5 		ldr	r3, [sp, #72]
 1164 0490 030052E1 		cmp	r2, r3
 1165 0494 FC00001A 		bne	.L29
 1166              	.LVL116:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1167              		.loc 4 523 0
 1168 0498 020051E3 		cmp	r1, #2
 1169 049c 1300000A 		beq	.L103
 1170              	.LVL117:
 1171              	.LBB521:
 1172              	.LBB507:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1173              		.loc 4 216 0
 1174 04a0 34209DE5 		ldr	r2, [sp, #52]
 1175              	.LVL118:
 1176              	.LBE507:
 1177              	.LBE521:
 1178              		.loc 4 524 0
 1179 04a4 4C309DE5 		ldr	r3, [sp, #76]
 1180 04a8 030052E1 		cmp	r2, r3
 1181 04ac F600001A 		bne	.L29
 1182              	.LVL119:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1183              		.loc 4 523 0
 1184 04b0 030051E3 		cmp	r1, #3
 1185 04b4 0D00000A 		beq	.L103
 1186              	.LVL120:
 1187              	.LBB522:
 1188              	.LBB513:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1189              		.loc 4 215 0
 1190 04b8 03005EE3 		cmp	lr, #3
 1191              	.LBE513:
 1192              	.LBE522:
 1193              	.LBB523:
 1194              	.LBB508:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1195              		.loc 4 216 0
 1196 04bc 38209DE5 		ldr	r2, [sp, #56]
 1197              	.LVL121:
 1198              	.LBE508:
 1199              	.LBE523:
 1200              	.LBB524:
 1201              	.LBB514:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1202              		.loc 4 215 0
 1203 04c0 0001000A 		beq	.L28
 1204              	.LVL122:
 1205              	.LBE514:
 1206              	.LBE524:
 1207              		.loc 4 524 0
 1208 04c4 50309DE5 		ldr	r3, [sp, #80]
 1209 04c8 030052E1 		cmp	r2, r3
 1210 04cc EE00001A 		bne	.L29
 1211              	.LVL123:
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1212              		.loc 4 523 0
 1213 04d0 040051E3 		cmp	r1, #4
 1214 04d4 0500000A 		beq	.L103
 1215              	.LVL124:
 1216              	.LBB525:
 1217              	.LBB515:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1218              		.loc 4 215 0
 1219 04d8 04005EE3 		cmp	lr, #4
 1220              	.LBE515:
 1221              	.LBE525:
 1222              	.LBB526:
 1223              	.LBB509:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1224              		.loc 4 216 0
 1225 04dc 3C309DE5 		ldr	r3, [sp, #60]
 1226              	.LVL125:
 1227              	.LBE509:
 1228              	.LBE526:
 1229              	.LBB527:
 1230              	.LBB516:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1231              		.loc 4 215 0
 1232 04e0 F800000A 		beq	.L28
 1233              	.LVL126:
 1234              	.LBE516:
 1235              	.LBE527:
 1236              		.loc 4 524 0
 1237 04e4 54209DE5 		ldr	r2, [sp, #84]
 1238 04e8 030052E1 		cmp	r2, r3
 1239 04ec E600001A 		bne	.L29
 1240              	.LVL127:
 1241              	.L103:
 1242              	.LBE503:
 1243              	.LBB532:
 1244              	.LBB533:
 1245              	.LBB534:
 1246              	.LBB535:
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1247              		.loc 4 232 0
 1248 04f0 2C608DE2 		add	r6, sp, #44
 1249              	.L30:
 1250              	.LVL128:
 1251 04f4 5631A0E7 		sbfx	r3, r6, #2, #1
 1252 04f8 033003E2 		and	r3, r3, #3
 1253 04fc 010053E1 		cmp	r3, r1
 1254 0500 0130A021 		movcs	r3, r1
 1255 0504 080051E3 		cmp	r1, #8
 1256 0508 0130A091 		movls	r3, r1
 1257 050c 000053E3 		cmp	r3, #0
 1258 0510 C600000A 		beq	.L105
 1259 0514 010053E3 		cmp	r3, #1
 1260              	.LBE535:
 1261              	.LBE534:
 1262              	.LBB537:
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 1263              		.loc 4 293 0
 1264 0518 002096E5 		ldr	r2, [r6]
 1265              	.LVL129:
 1266 051c C100000A 		beq	.L112
 1267 0520 040096E5 		ldr	r0, [r6, #4]
 1268 0524 020053E3 		cmp	r3, #2
 1269 0528 900202E0 		mul	r2, r0, r2
 1270              	.LVL130:
 1271 052c BD00000A 		beq	.L112
 1272 0530 080096E5 		ldr	r0, [r6, #8]
 1273 0534 030053E3 		cmp	r3, #3
 1274 0538 900202E0 		mul	r2, r0, r2
 1275              	.LVL131:
 1276 053c B900000A 		beq	.L112
 1277 0540 0C0096E5 		ldr	r0, [r6, #12]
 1278 0544 040053E3 		cmp	r3, #4
 1279 0548 900202E0 		mul	r2, r0, r2
 1280              	.LVL132:
 1281 054c B500000A 		beq	.L112
 1282 0550 100096E5 		ldr	r0, [r6, #16]
 1283 0554 050053E3 		cmp	r3, #5
 1284 0558 900202E0 		mul	r2, r0, r2
 1285              	.LVL133:
 1286 055c B100000A 		beq	.L112
 1287 0560 140096E5 		ldr	r0, [r6, #20]
 1288 0564 060053E3 		cmp	r3, #6
 1289 0568 900202E0 		mul	r2, r0, r2
 1290              	.LVL134:
 1291 056c AD00000A 		beq	.L112
 1292 0570 180096E5 		ldr	r0, [r6, #24]
 1293 0574 070053E3 		cmp	r3, #7
 1294 0578 900202E0 		mul	r2, r0, r2
 1295              	.LVL135:
 1296 057c A900000A 		beq	.L112
 1297 0580 1CC096E5 		ldr	ip, [r6, #28]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1298              		.loc 4 292 0
 1299 0584 0800A0E3 		mov	r0, #8
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 1300              		.loc 4 293 0
 1301 0588 9C0202E0 		mul	r2, ip, r2
 1302              	.LVL136:
 1303              	.L38:
 1304 058c 030051E1 		cmp	r1, r3
 1305 0590 2800000A 		beq	.L39
 1306              	.LVL137:
 1307              	.L37:
 1308 0594 038041E0 		sub	r8, r1, r3
 1309 0598 017041E2 		sub	r7, r1, #1
 1310 059c 04C048E2 		sub	ip, r8, #4
 1311 05a0 037047E0 		sub	r7, r7, r3
 1312 05a4 2CC1A0E1 		lsr	ip, ip, #2
 1313 05a8 020057E3 		cmp	r7, #2
 1314 05ac 01C08CE2 		add	ip, ip, #1
 1315 05b0 0C91A0E1 		lsl	r9, ip, #2
 1316 05b4 1200009A 		bls	.L40
 1317 05b8 033186E0 		add	r3, r6, r3, lsl #2
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1318              		.loc 4 292 0
 1319 05bc 5120C0F2 		vmov.i32	q9, #1  @ v4si
 1320 05c0 0070A0E3 		mov	r7, #0
 1321              	.L42:
 1322 05c4 017087E2 		add	r7, r7, #1
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 1323              		.loc 4 293 0
 1324 05c8 DF0A63F4 		vld1.64	{d16-d17}, [r3:64]
 1325 05cc 0C0057E1 		cmp	r7, ip
 1326 05d0 103083E2 		add	r3, r3, #16
 1327 05d4 F02962F2 		vmul.i32	q9, q9, q8
 1328 05d8 F9FFFF3A 		bcc	.L42
 1329 05dc 080059E1 		cmp	r9, r8
 1330 05e0 090080E0 		add	r0, r0, r9
 1331 05e4 5000C0F2 		vmov.i32	q8, #0  @ v4si
 1332 05e8 E048F2F2 		vext.32	q10, q9, q8, #2
 1333 05ec F22964F2 		vmul.i32	q9, q10, q9
 1334 05f0 E004F2F2 		vext.32	q8, q9, q8, #1
 1335 05f4 F20960F2 		vmul.i32	q8, q8, q9
 1336 05f8 903B10EE 		vmov.32	r3, d16[0]
 1337 05fc 930202E0 		mul	r2, r3, r2
 1338 0600 0C00000A 		beq	.L39
 1339              	.L40:
 1340              	.LVL138:
 1341 0604 00C196E7 		ldr	ip, [r6, r0, lsl #2]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1342              		.loc 4 292 0
 1343 0608 013080E2 		add	r3, r0, #1
 1344 060c 010053E1 		cmp	r3, r1
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 1345              		.loc 4 293 0
 1346 0610 0031A0E1 		lsl	r3, r0, #2
 1347 0614 9C0202E0 		mul	r2, ip, r2
 1348              	.LVL139:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1349              		.loc 4 292 0
 1350 0618 060000AA 		bge	.L39
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 1351              		.loc 4 293 0
 1352 061c 033086E0 		add	r3, r6, r3
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1353              		.loc 4 292 0
 1354 0620 020080E2 		add	r0, r0, #2
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 1355              		.loc 4 293 0
 1356 0624 04C093E5 		ldr	ip, [r3, #4]
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1357              		.loc 4 292 0
 1358 0628 000051E1 		cmp	r1, r0
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 1359              		.loc 4 293 0
 1360 062c 9C0202E0 		mul	r2, ip, r2
 1361              	.LVL140:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1362              		.loc 4 292 0
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     }
 1363              		.loc 4 293 0
 1364 0630 083093C5 		ldrgt	r3, [r3, #8]
 1365 0634 930202C0 		mulgt	r2, r3, r2
 1366              	.LVL141:
 1367              	.L39:
 1368              	.LBE537:
 1369              	.LBE533:
 1370              	.LBE532:
 1371              	.LBE502:
 1372              	.LBE501:
 1373              	.LBB557:
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     const float val = input_data[i];
 1374              		.loc 5 30 0
 1375 0638 000052E3 		cmp	r2, #0
 1376 063c 090000DA 		ble	.L47
 1377              	.LVL142:
 1378              	.L25:
 1379 0640 0510A0E1 		mov	r1, r5
 1380              	.LBE557:
 1381              	.LBB561:
 1382              	.LBB551:
 1383              	.LBB545:
 1384              	.LBB542:
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 1385              		.loc 4 290 0
 1386 0644 0030A0E3 		mov	r3, #0
 1387              	.LVL143:
 1388              	.L48:
 1389              	.LBE542:
 1390              	.LBE545:
 1391              	.LBE551:
 1392              	.LBE561:
 1393              	.LBB562:
 1394              	.LBB558:
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     // Note that alpha might be > 1 or < 0, so we don't use std::max here.
 1395              		.loc 5 31 0
 1396 0648 017AF1EC 		vldmia.32	r1!, {s15}
 1397              	.LVL144:
 1398              	.LBE558:
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     const float val = input_data[i];
 1399              		.loc 5 30 0
 1400 064c 013083E2 		add	r3, r3, #1
 1401              	.LVL145:
 1402              	.LBB559:
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****   }
 1403              		.loc 5 33 0
 1404 0650 C07AF5EE 		vcmpe.f32	s15, #0
 1405 0654 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1406 0658 277A68DE 		vmulle.f32	s15, s16, s15
 1407              	.LVL146:
 1408              	.LBE559:
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     const float val = input_data[i];
 1409              		.loc 5 30 0
 1410 065c 020053E1 		cmp	r3, r2
 1411              	.LBB560:
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****   }
 1412              		.loc 5 33 0
 1413 0660 017AE4EC 		vstmia.32	r4!, {s15}
 1414              	.LVL147:
 1415              	.LBE560:
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****     const float val = input_data[i];
 1416              		.loc 5 30 0
 1417 0664 F7FFFFBA 		blt	.L48
 1418              	.LVL148:
 1419              	.L47:
 1420              	.LBE562:
 1421              	.LBE500:
 1422              	.LBE499:
 1423              	.LBB573:
 1424              	.LBB574:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1425              		.loc 4 203 0
 1426 0668 05005EE3 		cmp	lr, #5
 1427 066c 0A0000DA 		ble	.L83
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1428              		.loc 4 207 0
 1429 0670 44009DE5 		ldr	r0, [sp, #68]
 1430 0674 000050E3 		cmp	r0, #0
 1431 0678 0300000A 		beq	.L96
 1432 067c FEFFFFEB 		bl	_ZdaPv
 1433              	.LVL149:
 1434 0680 28309DE5 		ldr	r3, [sp, #40]
 1435              	.LVL150:
 1436              	.LBE574:
 1437              	.LBE573:
 1438              	.LBB575:
 1439              	.LBB576:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1440              		.loc 4 203 0
 1441 0684 050053E3 		cmp	r3, #5
 1442 0688 030000DA 		ble	.L83
 1443              	.LVL151:
 1444              	.L96:
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1445              		.loc 4 207 0
 1446 068c 2C009DE5 		ldr	r0, [sp, #44]
 1447 0690 000050E3 		cmp	r0, #0
 1448 0694 0000000A 		beq	.L83
 1449              	.LVL152:
 1450              	.L194:
 1451              	.LBE576:
 1452              	.LBE575:
 1453              	.LBE494:
 1454              	.LBB588:
 1455              	.LBB488:
 1456              	.LBB472:
 1457              	.LBB473:
 1458 0698 FEFFFFEB 		bl	_ZdaPv
 1459              	.LVL153:
 1460              	.L83:
 1461              	.LBE473:
 1462              	.LBE472:
 1463              	.LBE488:
 1464              	.LBE588:
 128:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****     } break;
 1465              		.loc 1 128 0
 1466 069c 0000A0E3 		mov	r0, #0
 1467              	.LBE599:
 1468              	.LBE603:
 1469              		.loc 1 138 0
 1470 06a0 5CD08DE2 		add	sp, sp, #92
 1471              		.cfi_remember_state
 1472              		.cfi_def_cfa_offset 44
 1473              		@ sp needed
 1474 06a4 028BBDEC 		vldm	sp!, {d8}
 1475              		.cfi_restore 80
 1476              		.cfi_restore 81
 1477              		.cfi_def_cfa_offset 36
 1478 06a8 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1479              	.LVL154:
 1480              	.L56:
 1481              		.cfi_restore_state
 1482 06ac 040040E2 		sub	r0, r0, #4
 1483 06b0 04C041E2 		sub	ip, r1, #4
 1484              	.LBB604:
 1485              	.LBB600:
 1486              	.LBB589:
 1487              	.LBB489:
 1488              	.LBB475:
 1489              	.LBB466:
 1490              	.LBB458:
 1491              	.LBB336:
 1492              	.LBB330:
 1493              	.LBB315:
 1494              	.LBB304:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1495              		.loc 4 216 0
 1496 06b4 0020A0E3 		mov	r2, #0
 1497              	.LVL155:
 1498              	.L62:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1499              		.loc 4 215 0
 1500 06b8 02005AE1 		cmp	r10, r2
 1501              	.LBE304:
 1502              	.LBE315:
 1503              	.LBB316:
 1504              	.LBB297:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1505              		.loc 4 216 0
 1506 06bc 04E0BCE5 		ldr	lr, [ip, #4]!
 1507              	.LVL156:
 1508              	.LBE297:
 1509              	.LBE316:
 1510              	.LBB317:
 1511              	.LBB305:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1512              		.loc 4 215 0
 1513 06c0 700000DA 		ble	.L57
 1514              	.LVL157:
 1515              	.LBE305:
 1516              	.LBE317:
 1517              		.loc 4 524 0
 1518 06c4 0460B0E5 		ldr	r6, [r0, #4]!
 1519 06c8 06005EE1 		cmp	lr, r6
 1520 06cc 5D00001A 		bne	.L58
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1521              		.loc 4 523 0
 1522 06d0 012082E2 		add	r2, r2, #1
 1523              	.LVL158:
 1524 06d4 020053E1 		cmp	r3, r2
 1525 06d8 F6FFFF1A 		bne	.L62
 1526              	.LVL159:
 1527              	.LBE330:
 1528              	.LBB331:
 1529              	.LBB327:
 1530              	.LBB324:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1531              		.loc 4 292 0
 1532 06dc 000053E3 		cmp	r3, #0
 1533              	.LVL160:
 1534 06e0 9CFEFFCA 		bgt	.L59
 1535              	.LVL161:
 1536              	.L121:
 1537              	.LBE324:
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 1538              		.loc 4 290 0
 1539 06e4 01E0A0E3 		mov	lr, #1
 1540 06e8 EDFEFFEA 		b	.L54
 1541              	.LVL162:
 1542              	.L27:
 1543 06ec 042042E2 		sub	r2, r2, #4
 1544 06f0 040047E2 		sub	r0, r7, #4
 1545              	.LBE327:
 1546              	.LBE331:
 1547              	.LBE336:
 1548              	.LBE458:
 1549              	.LBE466:
 1550              	.LBE475:
 1551              	.LBE489:
 1552              	.LBE589:
 1553              	.LBB590:
 1554              	.LBB577:
 1555              	.LBB568:
 1556              	.LBB563:
 1557              	.LBB552:
 1558              	.LBB546:
 1559              	.LBB528:
 1560              	.LBB517:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1561              		.loc 4 216 0
 1562 06f4 0030A0E3 		mov	r3, #0
 1563              	.LVL163:
 1564              	.L33:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1565              		.loc 4 215 0
 1566 06f8 03005EE1 		cmp	lr, r3
 1567              	.LBE517:
 1568              	.LBE528:
 1569              	.LBB529:
 1570              	.LBB510:
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1571              		.loc 4 216 0
 1572 06fc 04C0B0E5 		ldr	ip, [r0, #4]!
 1573              	.LVL164:
 1574              	.LBE510:
 1575              	.LBE529:
 1576              	.LBB530:
 1577              	.LBB518:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1578              		.loc 4 215 0
 1579 0700 700000DA 		ble	.L28
 1580              	.LVL165:
 1581              	.LBE518:
 1582              	.LBE530:
 1583              		.loc 4 524 0
 1584 0704 0460B2E5 		ldr	r6, [r2, #4]!
 1585 0708 06005CE1 		cmp	ip, r6
 1586 070c 5E00001A 		bne	.L29
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     TFLITE_DCHECK_EQ(shape.Dims(i), check_shape_0.Dims(i));
 1587              		.loc 4 523 0
 1588 0710 013083E2 		add	r3, r3, #1
 1589              	.LVL166:
 1590 0714 030051E1 		cmp	r1, r3
 1591 0718 F6FFFF1A 		bne	.L33
 1592              	.LVL167:
 1593              	.LBE546:
 1594              	.LBB547:
 1595              	.LBB543:
 1596              	.LBB538:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1597              		.loc 4 292 0
 1598 071c 000051E3 		cmp	r1, #0
 1599              	.LBE538:
 1600              	.LBB539:
 1601              	.LBB536:
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   }
 1602              		.loc 4 232 0
 1603 0720 0760A0E1 		mov	r6, r7
 1604              	.LVL168:
 1605              	.LBE536:
 1606              	.LBE539:
 1607              	.LBB540:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1608              		.loc 4 292 0
 1609 0724 72FFFFCA 		bgt	.L30
 1610              	.LVL169:
 1611              	.L104:
 1612              	.LBE540:
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     const int* dims_data = reinterpret_cast<const int*>(DimsData());
 1613              		.loc 4 290 0
 1614 0728 0120A0E3 		mov	r2, #1
 1615 072c C3FFFFEA 		b	.L25
 1616              	.LVL170:
 1617              	.L74:
 1618              	.LBE543:
 1619              	.LBE547:
 1620              	.LBE552:
 1621              	.LBE563:
 1622              	.LBE568:
 1623              	.LBE577:
 1624              	.LBE590:
 1625              	.LBB591:
 1626              	.LBB490:
 1627              	.LBB476:
 1628              	.LBB467:
 1629              	.LBB459:
 1630              	.LBB455:
 1631              	.LBB447:
 1632              	.LBB386:
 1633              		.loc 6 163 0
 1634 0730 1C309DE5 		ldr	r3, [sp, #28]
 1635 0734 1BB3A0E1 		lsl	fp, fp, r3
 1636              	.LVL171:
 1637              	.LBB373:
 1638              	.LBB374:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1639              		.loc 7 334 0
 1640 0738 10309DE5 		ldr	r3, [sp, #16]
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 1641              		.loc 7 331 0
 1642 073c 0B0053E1 		cmp	r3, fp
 1643 0740 02015B03 		cmpeq	fp, #-2147483648
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t nudge = ab_64 >= 0 ? (1 << 30) : (1 - (1 << 30));
 1644              		.loc 7 334 0
 1645 0744 9B03C1E0 		smull	r0, r1, fp, r3
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int64_t a_64(a);
 1646              		.loc 7 331 0
 1647 0748 01B0A003 		moveq	fp, #1
 1648              	.LVL172:
 1649 074c 00B0A013 		movne	fp, #0
 1650              	.LVL173:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1651              		.loc 7 335 0
 1652 0750 000050E3 		cmp	r0, #0
 1653 0754 0030D1E2 		sbcs	r3, r1, #0
 1654 0758 2D0000BA 		blt	.L131
 1655 075c 0121A0E3 		mov	r2, #1073741824
 1656 0760 0030A0E3 		mov	r3, #0
 1657              	.L78:
 1658              	.LVL174:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1659              		.loc 7 338 0
 1660 0764 00005BE3 		cmp	fp, #0
 1661 0768 1900001A 		bne	.L202
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   return overflow ? std::numeric_limits<std::int32_t>::max() : ab_x2_high32;
 1662              		.loc 7 337 0
 1663 076c 020090E0 		adds	r0, r0, r2
 1664              	.LVL175:
 1665 0770 0310A1E0 		adc	r1, r1, r3
 1666 0774 0030A0E3 		mov	r3, #0
 1667 0778 C12FA0E1 		asr	r2, r1, #31
 1668              	.LVL176:
 1669 077c 0221C2E3 		bic	r2, r2, #-2147483648
 1670 0780 002092E0 		adds	r2, r2, r0
 1671 0784 A22FA0E1 		lsr	r2, r2, #31
 1672 0788 0130A3E0 		adc	r3, r3, r1
 1673 078c 832082E1 		orr	r2, r2, r3, lsl #1
 1674              	.LVL177:
 1675              	.L94:
 1676              	.LBE374:
 1677              	.LBE373:
 1678              	.LBB377:
 1679              	.LBB367:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 1680              		.loc 7 359 0
 1681 0790 0C309DE5 		ldr	r3, [sp, #12]
 1682 0794 1F0053E3 		cmp	r3, #31
 1683 0798 540000CA 		bgt	.L203
 1684              	.LVL178:
 1685              	.LBB351:
 1686              	.LBB352:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1687              		.loc 7 95 0
 1688 079c 18309DE5 		ldr	r3, [sp, #24]
 1689              	.LBE352:
 1690              	.LBE351:
 1691              	.LBB354:
 1692              	.LBB355:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1693              		.loc 7 71 0
 1694 07a0 14009DE5 		ldr	r0, [sp, #20]
 1695              	.LBE355:
 1696              	.LBE354:
 1697              	.LBB357:
 1698              	.LBB353:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1699              		.loc 7 95 0
 1700 07a4 A21F83E0 		add	r1, r3, r2, lsr #31
 1701              	.LBE353:
 1702              	.LBE357:
 1703              	.LBB358:
 1704              	.LBB359:
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1705              		.loc 7 141 0
 1706 07a8 0C309DE5 		ldr	r3, [sp, #12]
 1707 07ac 5233A0E1 		asr	r3, r2, r3
 1708              	.LBE359:
 1709              	.LBE358:
 1710              	.LBB360:
 1711              	.LBB356:
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1712              		.loc 7 71 0
 1713 07b0 002002E0 		and	r2, r2, r0
 1714              	.LBE356:
 1715              	.LBE360:
 1716              	.LBB361:
 1717              	.LBB362:
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1718              		.loc 7 95 0
 1719 07b4 010052E1 		cmp	r2, r1
 1720 07b8 0320A0D1 		movle	r2, r3
 1721 07bc 012083C2 		addgt	r2, r3, #1
 1722              	.LBE362:
 1723              	.LBE361:
 1724              	.LBE367:
 1725              	.LBE377:
 1726              	.LBE386:
 1727              	.LBE447:
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference\leaky_relu.h ****                          MultiplyByQuantizedMultiplier(
 1728              		.loc 5 55 0
 1729 07c0 092082E0 		add	r2, r2, r9
 1730              	.LVL179:
 1731 07c4 E8FEFFEA 		b	.L77
 1732              	.LVL180:
 1733              	.L130:
 1734              	.LBB448:
 1735              	.LBB430:
 1736              	.LBB422:
 1737              	.LBB419:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1738              		.loc 7 335 0
 1739 07c8 0701A0E3 		mov	r0, #-1073741823
 1740 07cc 0010E0E3 		mvn	r1, #0
 1741 07d0 FEFEFFEA 		b	.L75
 1742              	.LVL181:
 1743              	.L202:
 1744              	.LBE419:
 1745              	.LBE422:
 1746              	.LBE430:
 1747              	.LBE448:
 1748              	.LBB449:
 1749              	.LBB387:
 1750              	.LBB378:
 1751              	.LBB375:
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h **** }
 1752              		.loc 7 338 0
 1753 07d4 0221E0E3 		mvn	r2, #-2147483648
 1754              	.LVL182:
 1755 07d8 ECFFFFEA 		b	.L94
 1756              	.LVL183:
 1757              	.L201:
 1758 07dc 28309DE5 		ldr	r3, [sp, #40]
 1759              	.LVL184:
 1760              	.L63:
 1761              	.LBE375:
 1762              	.LBE378:
 1763              	.LBE387:
 1764              	.LBE449:
 1765              	.LBE455:
 1766              	.LBE459:
 1767              	.LBE467:
 1768              	.LBE476:
 1769              	.LBB477:
 1770              	.LBB478:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1771              		.loc 4 203 0
 1772 07e0 050053E3 		cmp	r3, #5
 1773 07e4 030000DA 		ble	.L82
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1774              		.loc 4 207 0
 1775 07e8 2C009DE5 		ldr	r0, [sp, #44]
 1776 07ec 000050E3 		cmp	r0, #0
 1777 07f0 0000000A 		beq	.L82
 1778 07f4 FEFFFFEB 		bl	_ZdaPv
 1779              	.LVL185:
 1780              	.L82:
 1781              	.LBE478:
 1782              	.LBE477:
 1783              	.LBB479:
 1784              	.LBB474:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1785              		.loc 4 203 0
 1786 07f8 40309DE5 		ldr	r3, [sp, #64]
 1787 07fc 050053E3 		cmp	r3, #5
 1788 0800 A5FFFFDA 		ble	.L83
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1789              		.loc 4 207 0
 1790 0804 44009DE5 		ldr	r0, [sp, #68]
 1791 0808 000050E3 		cmp	r0, #0
 1792 080c A1FFFF1A 		bne	.L194
 1793 0810 A1FFFFEA 		b	.L83
 1794              	.LVL186:
 1795              	.L131:
 1796              	.LBE474:
 1797              	.LBE479:
 1798              	.LBB480:
 1799              	.LBB468:
 1800              	.LBB460:
 1801              	.LBB456:
 1802              	.LBB450:
 1803              	.LBB388:
 1804              	.LBB379:
 1805              	.LBB376:
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   std::int32_t ab_x2_high32 =
 1806              		.loc 7 335 0
 1807 0814 0721A0E3 		mov	r2, #-1073741823
 1808 0818 0030E0E3 		mvn	r3, #0
 1809 081c D0FFFFEA 		b	.L78
 1810              	.LVL187:
 1811              	.L129:
 1812              	.LBE376:
 1813              	.LBE379:
 1814              	.LBE388:
 1815              	.LBE450:
 1816              	.LBE456:
 1817              	.LBE460:
 1818              	.LBB461:
 1819              	.LBB337:
 1820              	.LBB332:
 1821              	.LBB328:
 1822              	.LBB325:
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****       buffer_size *= dims_data[i];
 1823              		.loc 4 292 0
 1824 0820 0200A0E1 		mov	r0, r2
 1825 0824 71FEFFEA 		b	.L66
 1826              	.LVL188:
 1827              	.L112:
 1828              	.LBE325:
 1829              	.LBE328:
 1830              	.LBE332:
 1831              	.LBE337:
 1832              	.LBE461:
 1833              	.LBE468:
 1834              	.LBE480:
 1835              	.LBE490:
 1836              	.LBE591:
 1837              	.LBB592:
 1838              	.LBB578:
 1839              	.LBB569:
 1840              	.LBB564:
 1841              	.LBB553:
 1842              	.LBB548:
 1843              	.LBB544:
 1844              	.LBB541:
 1845 0828 0300A0E1 		mov	r0, r3
 1846 082c 56FFFFEA 		b	.L38
 1847              	.LVL189:
 1848              	.L105:
 1849 0830 0120A0E3 		mov	r2, #1
 1850 0834 0300A0E1 		mov	r0, r3
 1851 0838 55FFFFEA 		b	.L37
 1852              	.LVL190:
 1853              	.L122:
 1854              	.LBE541:
 1855              	.LBE544:
 1856              	.LBE548:
 1857              	.LBE553:
 1858              	.LBE564:
 1859              	.LBE569:
 1860              	.LBE578:
 1861              	.LBE592:
 1862              	.LBB593:
 1863              	.LBB491:
 1864              	.LBB481:
 1865              	.LBB469:
 1866              	.LBB462:
 1867              	.LBB338:
 1868              	.LBB333:
 1869              	.LBB329:
 1870              	.LBB326:
 1871 083c 01E0A0E3 		mov	lr, #1
 1872 0840 0200A0E1 		mov	r0, r2
 1873 0844 6BFEFFEA 		b	.L65
 1874              	.LVL191:
 1875              	.L58:
 1876              	.LEHB4:
 1877              	.LBE326:
 1878              	.LBE329:
 1879              	.LBE333:
 1880              	.LBB334:
 1881              		.loc 4 524 0
 1882 0848 FEFFFFEB 		bl	abort
 1883              	.LVL192:
 1884              	.LEHE4:
 1885              	.L139:
 1886              	.LBE334:
 1887              	.LBE338:
 1888              	.LBE462:
 1889              	.LBE469:
 1890              	.LBE481:
 1891              	.LBB482:
 1892              	.LBB483:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1893              		.loc 4 203 0
 1894 084c 28309DE5 		ldr	r3, [sp, #40]
 1895 0850 050053E3 		cmp	r3, #5
 1896 0854 030000DA 		ble	.L86
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1897              		.loc 4 207 0
 1898 0858 2C009DE5 		ldr	r0, [sp, #44]
 1899 085c 000050E3 		cmp	r0, #0
 1900 0860 0000000A 		beq	.L86
 1901 0864 FEFFFFEB 		bl	_ZdaPv
 1902              	.LVL193:
 1903              	.L86:
 1904              	.LBE483:
 1905              	.LBE482:
 1906              	.LBB484:
 1907              	.LBB485:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1908              		.loc 4 203 0
 1909 0868 40309DE5 		ldr	r3, [sp, #64]
 1910 086c 050053E3 		cmp	r3, #5
 1911 0870 030000DA 		ble	.L91
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1912              		.loc 4 207 0
 1913 0874 44009DE5 		ldr	r0, [sp, #68]
 1914 0878 000050E3 		cmp	r0, #0
 1915 087c 0000000A 		beq	.L91
 1916              	.LVL194:
 1917              	.L195:
 1918              	.LBE485:
 1919              	.LBE484:
 1920              	.LBE491:
 1921              	.LBE593:
 1922              	.LBB594:
 1923              	.LBB579:
 1924              	.LBB580:
 1925 0880 FEFFFFEB 		bl	_ZdaPv
 1926              	.LVL195:
 1927              	.L91:
 1928              	.LEHB5:
 1929 0884 FEFFFFEB 		bl	__cxa_end_cleanup
 1930              	.LVL196:
 1931              	.LEHE5:
 1932              	.L57:
 1933              	.LEHB6:
 1934              	.LBE580:
 1935              	.LBE579:
 1936              	.LBE594:
 1937              	.LBB595:
 1938              	.LBB492:
 1939              	.LBB486:
 1940              	.LBB470:
 1941              	.LBB463:
 1942              	.LBB339:
 1943              	.LBB335:
 1944              	.LBB318:
 1945              	.LBB306:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 1946              		.loc 4 215 0
 1947 0888 FEFFFFEB 		bl	abort
 1948              	.LVL197:
 1949              	.LEHE6:
 1950              	.L29:
 1951              	.LEHB7:
 1952              	.LBE306:
 1953              	.LBE318:
 1954              	.LBE335:
 1955              	.LBE339:
 1956              	.LBE463:
 1957              	.LBE470:
 1958              	.LBE486:
 1959              	.LBE492:
 1960              	.LBE595:
 1961              	.LBB596:
 1962              	.LBB582:
 1963              	.LBB570:
 1964              	.LBB565:
 1965              	.LBB554:
 1966              	.LBB549:
 1967              		.loc 4 524 0
 1968 088c FEFFFFEB 		bl	abort
 1969              	.LVL198:
 1970              	.L137:
 1971              	.LBE549:
 1972              	.LBE554:
 1973              	.LBE565:
 1974              	.LBE570:
 1975              	.LBE582:
 1976              	.LBB583:
 1977              	.LBB584:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1978              		.loc 4 203 0
 1979 0890 40309DE5 		ldr	r3, [sp, #64]
 1980 0894 050053E3 		cmp	r3, #5
 1981 0898 030000DA 		ble	.L90
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1982              		.loc 4 207 0
 1983 089c 44009DE5 		ldr	r0, [sp, #68]
 1984 08a0 000050E3 		cmp	r0, #0
 1985 08a4 0000000A 		beq	.L90
 1986 08a8 FEFFFFEB 		bl	_ZdaPv
 1987              	.LVL199:
 1988              	.L90:
 1989              	.LBE584:
 1990              	.LBE583:
 1991              	.LBB585:
 1992              	.LBB581:
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #ifdef TF_LITE_STATIC_MEMORY
 1993              		.loc 4 203 0 discriminator 2
 1994 08ac 28309DE5 		ldr	r3, [sp, #40]
 1995 08b0 050053E3 		cmp	r3, #5
 1996 08b4 F2FFFFDA 		ble	.L91
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h **** #endif  // TF_LITE_STATIC_MEMORY
 1997              		.loc 4 207 0
 1998 08b8 2C009DE5 		ldr	r0, [sp, #44]
 1999 08bc 000050E3 		cmp	r0, #0
 2000 08c0 EEFFFF1A 		bne	.L195
 2001 08c4 EEFFFFEA 		b	.L91
 2002              	.LVL200:
 2003              	.L28:
 2004              	.LBE581:
 2005              	.LBE585:
 2006              	.LBB586:
 2007              	.LBB571:
 2008              	.LBB566:
 2009              	.LBB555:
 2010              	.LBB550:
 2011              	.LBB531:
 2012              	.LBB519:
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****     return size_ > kMaxSmallSize ? dims_pointer_[i] : dims_[i];
 2013              		.loc 4 215 0
 2014 08c8 FEFFFFEB 		bl	abort
 2015              	.LVL201:
 2016              	.LEHE7:
 2017              	.L19:
 2018              	.LEHB8:
 2019              	.LBE519:
 2020              	.LBE531:
 2021              	.LBE550:
 2022              	.LBE555:
 2023              	.LBE566:
 2024              	.LBE571:
 2025              	.LBE586:
 2026              	.LBE596:
 2027              	.LBE600:
 2028              	.LBE604:
 2029              	.LBB605:
 2030              	.LBB269:
 2031              	.LBB266:
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/kernels\kernel_util.h ****   TFLITE_DCHECK(node != nullptr);
 2032              		.loc 3 34 0
 2033 08cc FEFFFFEB 		bl	abort
 2034              	.LVL202:
 2035              	.LEHE8:
 2036              	.L200:
 2037              	.LBE266:
 2038              	.LBE269:
 2039              	.LBE605:
 2040              	.LBB606:
 2041              	.LBB601:
 2042              	.LBB597:
 2043              	.LBB493:
 2044              	.LBB487:
 2045              	.LBB471:
 2046              	.LBB464:
 2047              	.LBB457:
 2048              	.LBB451:
 2049              	.LBB431:
 2050              	.LBB423:
 2051              	.LBB411:
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlowp/fixedpoint\fixedpoint.h ****   const IntegerType mask = Dup<IntegerType>((1ll << exponent) - 1);
 2052              		.loc 7 359 0
 2053 08d0 003000E3 		movw	r3, #:lower16:.LC9
 2054 08d4 002000E3 		movw	r2, #:lower16:.LANCHOR0
 2055 08d8 000000E3 		movw	r0, #:lower16:.LC10
 2056 08dc 003040E3 		movt	r3, #:upper16:.LC9
 2057 08e0 002040E3 		movt	r2, #:upper16:.LANCHOR0
 2058 08e4 000040E3 		movt	r0, #:upper16:.LC10
 2059 08e8 671100E3 		movw	r1, #359
 2060              	.LEHB9:
 2061 08ec FEFFFFEB 		bl	__assert_func
 2062              	.LVL203:
 2063              	.L203:
 2064              	.LBE411:
 2065              	.LBE423:
 2066              	.LBE431:
 2067              	.LBE451:
 2068              	.LBB452:
 2069              	.LBB389:
 2070              	.LBB380:
 2071              	.LBB368:
 2072 08f0 003000E3 		movw	r3, #:lower16:.LC9
 2073              	.LVL204:
 2074 08f4 002000E3 		movw	r2, #:lower16:.LANCHOR0
 2075 08f8 000000E3 		movw	r0, #:lower16:.LC10
 2076 08fc 003040E3 		movt	r3, #:upper16:.LC9
 2077 0900 002040E3 		movt	r2, #:upper16:.LANCHOR0
 2078 0904 000040E3 		movt	r0, #:upper16:.LC10
 2079 0908 671100E3 		movw	r1, #359
 2080 090c FEFFFFEB 		bl	__assert_func
 2081              	.LVL205:
 2082              	.L53:
 2083              	.LBE368:
 2084              	.LBE380:
 2085              	.LBE389:
 2086              	.LBE452:
 2087              	.LBE457:
 2088              	.LBE464:
 2089              	.LBB465:
 2090              	.LBB340:
 521:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal\types.h ****   const int dims_count = shape.DimensionsCount();
 2091              		.loc 4 521 0
 2092 0910 FEFFFFEB 		bl	abort
 2093              	.LVL206:
 2094              	.LEHE9:
 2095              	.L24:
 2096              	.LEHB10:
 2097              	.LBE340:
 2098              	.LBE465:
 2099              	.LBE471:
 2100              	.LBE487:
 2101              	.LBE493:
 2102              	.LBE597:
 2103              	.LBB598:
 2104              	.LBB587:
 2105              	.LBB572:
 2106              	.LBB567:
 2107              	.LBB556:
 2108 0914 FEFFFFEB 		bl	abort
 2109              	.LVL207:
 2110              	.LEHE10:
 2111              	.L138:
 2112 0918 D2FFFFEA 		b	.L86
 2113              	.LVL208:
 2114              	.L136:
 2115 091c E2FFFFEA 		b	.L90
 2116              	.LBE556:
 2117              	.LBE567:
 2118              	.LBE572:
 2119              	.LBE587:
 2120              	.LBE598:
 2121              	.LBE601:
 2122              	.LBE606:
 2123              		.cfi_endproc
 2124              	.LFE4171:
 2125              		.global	__gxx_personality_v0
 2126              		.personality	__gxx_personality_v0
 2127              		.handlerdata
 2128              	.LLSDA4171:
 2129 000c FF       		.byte	0xff
 2130 000d FF       		.byte	0xff
 2131 000e 01       		.byte	0x1
 2132 000f 3D       		.uleb128 .LLSDACSE4171-.LLSDACSB4171
 2133              	.LLSDACSB4171:
 2134 0010 2C       		.uleb128 .LEHB0-.LFB4171
 2135 0011 5C       		.uleb128 .LEHE0-.LEHB0
 2136 0012 00       		.uleb128 0
 2137 0013 00       		.uleb128 0
 2138 0014 9801     		.uleb128 .LEHB1-.LFB4171
 2139 0016 04       		.uleb128 .LEHE1-.LEHB1
 2140 0017 9812     		.uleb128 .L138-.LFB4171
 2141 0019 00       		.uleb128 0
 2142 001a E407     		.uleb128 .LEHB2-.LFB4171
 2143 001c 48       		.uleb128 .LEHE2-.LEHB2
 2144 001d 00       		.uleb128 0
 2145 001e 00       		.uleb128 0
 2146 001f B808     		.uleb128 .LEHB3-.LFB4171
 2147 0021 04       		.uleb128 .LEHE3-.LEHB3
 2148 0022 9C12     		.uleb128 .L136-.LFB4171
 2149 0024 00       		.uleb128 0
 2150 0025 C810     		.uleb128 .LEHB4-.LFB4171
 2151 0027 04       		.uleb128 .LEHE4-.LEHB4
 2152 0028 CC10     		.uleb128 .L139-.LFB4171
 2153 002a 00       		.uleb128 0
 2154 002b 8411     		.uleb128 .LEHB5-.LFB4171
 2155 002d 04       		.uleb128 .LEHE5-.LEHB5
 2156 002e 00       		.uleb128 0
 2157 002f 00       		.uleb128 0
 2158 0030 8811     		.uleb128 .LEHB6-.LFB4171
 2159 0032 04       		.uleb128 .LEHE6-.LEHB6
 2160 0033 CC10     		.uleb128 .L139-.LFB4171
 2161 0035 00       		.uleb128 0
 2162 0036 8C11     		.uleb128 .LEHB7-.LFB4171
 2163 0038 40       		.uleb128 .LEHE7-.LEHB7
 2164 0039 9011     		.uleb128 .L137-.LFB4171
 2165 003b 00       		.uleb128 0
 2166 003c CC11     		.uleb128 .LEHB8-.LFB4171
 2167 003e 04       		.uleb128 .LEHE8-.LEHB8
 2168 003f 00       		.uleb128 0
 2169 0040 00       		.uleb128 0
 2170 0041 EC11     		.uleb128 .LEHB9-.LFB4171
 2171 0043 28       		.uleb128 .LEHE9-.LEHB9
 2172 0044 CC10     		.uleb128 .L139-.LFB4171
 2173 0046 00       		.uleb128 0
 2174 0047 9412     		.uleb128 .LEHB10-.LFB4171
 2175 0049 04       		.uleb128 .LEHE10-.LEHB10
 2176 004a 9011     		.uleb128 .L137-.LFB4171
 2177 004c 00       		.uleb128 0
 2178              	.LLSDACSE4171:
 2179              		.section	.text._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode
 2180              		.fnend
 2182              		.section	.text._ZN6tflite19Register_LEAKY_RELUEv,"ax",%progbits
 2183              		.align	2
 2184              		.global	_ZN6tflite19Register_LEAKY_RELUEv
 2185              		.syntax unified
 2186              		.arm
 2187              		.fpu neon
 2189              	_ZN6tflite19Register_LEAKY_RELUEv:
 2190              		.fnstart
 2191              	.LFB4172:
 139:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 140:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** }  // namespace
 141:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** 
 142:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** TfLiteRegistration Register_LEAKY_RELU() {
 2192              		.loc 1 142 0
 2193              		.cfi_startproc
 2194              		@ args = 0, pretend = 0, frame = 0
 2195              		@ frame_needed = 0, uses_anonymous_args = 0
 2196              	.LVL209:
 143:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   return {/*init=*/LeakyReluInit,
 144:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****           /*free=*/nullptr,
 145:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****           /*prepare=*/LeakyReluPrepare,
 146:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****           /*invoke=*/LeakyReluEval,
 147:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****           /*profiling_string=*/nullptr,
 148:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****           /*builtin_code=*/0,
 149:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****           /*custom_name=*/nullptr,
 150:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****           /*version=*/0};
 2197              		.loc 1 150 0
 2198 0000 00C000E3 		movw	ip, #:lower16:.LANCHOR1
 142:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   return {/*init=*/LeakyReluInit,
 2199              		.loc 1 142 0
 2200 0004 10402DE9 		push	{r4, lr}
 2201              		.cfi_def_cfa_offset 8
 2202              		.cfi_offset 4, -8
 2203              		.cfi_offset 14, -4
 2204              		.loc 1 150 0
 2205 0008 00C040E3 		movt	ip, #:upper16:.LANCHOR1
 142:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc ****   return {/*init=*/LeakyReluInit,
 2206              		.loc 1 142 0
 2207 000c 0040A0E1 		mov	r4, r0
 2208              		.loc 1 150 0
 2209 0010 00E0A0E1 		mov	lr, r0
 2210 0014 0F00BCE8 		ldmia	ip!, {r0, r1, r2, r3}
 2211              	.LVL210:
 2212 0018 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 2213 001c 0F009CE8 		ldm	ip, {r0, r1, r2, r3}
 2214 0020 0F008EE8 		stm	lr, {r0, r1, r2, r3}
 151:../src/tensorflow_lite/tensorflow/lite/micro/kernels/leaky_relu.cc **** }
 2215              		.loc 1 151 0
 2216 0024 0400A0E1 		mov	r0, r4
 2217 0028 1080BDE8 		pop	{r4, pc}
 2218              		.cfi_endproc
 2219              	.LFE4172:
 2220              		.cantunwind
 2221              		.fnend
 2223              		.section	.rodata
 2224              		.align	2
 2225              		.set	.LANCHOR1,. + 0
 2226              	.LC0:
 2227 0000 00000000 		.word	_ZN6tflite12_GLOBAL__N_113LeakyReluInitEP13TfLiteContextPKcj
 2228 0004 00000000 		.word	0
 2229 0008 00000000 		.word	_ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode
 2230 000c 00000000 		.word	_ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode
 2231 0010 00000000 		.word	0
 2232 0014 00000000 		.word	0
 2233 0018 00000000 		.word	0
 2234 001c 00000000 		.word	0
 2235              		.section	.rodata._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode.str1.4,"aMS
 2236              		.align	2
 2237              	.LC9:
 2238 0000 6578706F 		.ascii	"exponent <= 31\000"
 2238      6E656E74 
 2238      203C3D20 
 2238      333100
 2239 000f 00       		.space	1
 2240              	.LC10:
 2241 0010 433A2F52 		.ascii	"C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/AN"
 2241      656E6573 
 2241      61732F65 
 2241      32737475 
 2241      64696F5F 
 2242 0043 50525F52 		.ascii	"PR_RZA2M_EBK/src/tensorflow_lite/third_party/gemmlo"
 2242      5A41324D 
 2242      5F45424B 
 2242      2F737263 
 2242      2F74656E 
 2243 0076 77702F66 		.ascii	"wp/fixedpoint/fixedpoint.h\000"
 2243      69786564 
 2243      706F696E 
 2243      742F6669 
 2243      78656470 
 2244 0091 000000   		.space	3
 2245              	.LC11:
 2246 0094 4F6E6C79 		.ascii	"Only float32, int8 are supported by LEAKY_RELU, got"
 2246      20666C6F 
 2246      61743332 
 2246      2C20696E 
 2246      74382061 
 2247 00c7 2025732E 		.ascii	" %s.\000"
 2247      00
 2248              		.section	.rodata._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode.str1.4,"
 2249              		.align	2
 2250              	.LC1:
 2251 0000 2E2E2F73 		.ascii	"../src/tensorflow_lite/tensorflow/lite/micro/kernel"
 2251      72632F74 
 2251      656E736F 
 2251      72666C6F 
 2251      775F6C69 
 2252 0033 732F6C65 		.ascii	"s/leaky_relu.cc\000"
 2252      616B795F 
 2252      72656C75 
 2252      2E636300 
 2253 0043 00       		.space	1
 2254              	.LC2:
 2255 0044 25733A25 		.ascii	"%s:%d %s != %s (%d != %d)\000"
 2255      64202573 
 2255      20213D20 
 2255      25732028 
 2255      25642021 
 2256 005e 0000     		.space	2
 2257              	.LC3:
 2258 0060 3100     		.ascii	"1\000"
 2259 0062 0000     		.space	2
 2260              	.LC4:
 2261 0064 4E756D49 		.ascii	"NumInputs(node)\000"
 2261      6E707574 
 2261      73286E6F 
 2261      64652900 
 2262              	.LC5:
 2263 0074 4E756D4F 		.ascii	"NumOutputs(node)\000"
 2263      75747075 
 2263      7473286E 
 2263      6F646529 
 2263      00
 2264 0085 000000   		.space	3
 2265              	.LC6:
 2266 0088 25733A25 		.ascii	"%s:%d %s != %s (%s != %s)\000"
 2266      64202573 
 2266      20213D20 
 2266      25732028 
 2266      25732021 
 2267 00a2 0000     		.space	2
 2268              	.LC7:
 2269 00a4 6F757470 		.ascii	"output->type\000"
 2269      75742D3E 
 2269      74797065 
 2269      00
 2270 00b1 000000   		.space	3
 2271              	.LC8:
 2272 00b4 696E7075 		.ascii	"input->type\000"
 2272      742D3E74 
 2272      79706500 
 2273              		.section	.rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__,"a",%progbits
 2274              		.align	3
 2275              		.set	.LANCHOR0,. + 0
 2278              	_ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:
 2279 0000 496E7465 		.ascii	"IntegerType gemmlowp::RoundingDivideByPOT(IntegerTy"
 2279      67657254 
 2279      79706520 
 2279      67656D6D 
 2279      6C6F7770 
 2280 0033 70652C20 		.ascii	"pe, int) [with IntegerType = long int]\000"
 2280      696E7429 
 2280      205B7769 
 2280      74682049 
 2280      6E746567 
 2281              		.text
 2282              	.Letext0:
 2283              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2284              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2285              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2286              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2287              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2288              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2289              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2290              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2291              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2292              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2293              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2294              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2295              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2296              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2297              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2298              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2299              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2300              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2301              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2302              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2303              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2304              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2305              		.file 31 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 2306              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2307              		.file 33 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2308              		.file 34 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2309              		.file 35 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2310              		.file 36 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2311              		.file 37 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 2312              		.file 38 "<built-in>"
 2313              		.file 39 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2314              		.file 40 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2315              		.file 41 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2316              		.file 42 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2317              		.file 43 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2318              		.file 44 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2319              		.file 45 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2320              		.file 46 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2321              		.file 47 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2322              		.file 48 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tens
 2323              		.file 49 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tens
 2324              		.file 50 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tens
 2325              		.file 51 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tens
 2326              		.file 52 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tens
 2327              		.file 53 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 leaky_relu.cc
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:17     .text._ZN6tflite12_GLOBAL__N_113LeakyReluInitEP13TfLiteContextPKcj:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:22     .text._ZN6tflite12_GLOBAL__N_113LeakyReluInitEP13TfLiteContextPKcj:00000000 _ZN6tflite12_GLOBAL__N_113LeakyReluInitEP13TfLiteContextPKcj
.ARM.exidx.text._ZN6tflite12_GLOBAL__N_113LeakyReluInitEP13TfLiteContextPKcj:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:55     .text._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:60     .text._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode:00000000 _ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2257   .rodata._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000060 .LC3
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2262   .rodata._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000074 .LC5
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2250   .rodata._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000000 .LC1
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2254   .rodata._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000044 .LC2
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2260   .rodata._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000064 .LC4
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2268   .rodata._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode.str1.4:000000a4 .LC7
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2271   .rodata._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode.str1.4:000000b4 .LC8
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2265   .rodata._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000088 .LC6
.ARM.exidx.text._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:314    .text._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:319    .text._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode:00000000 _ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2245   .rodata._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode.str1.4:00000094 .LC11
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:1071   .text._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode:00000410 $d
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:1080   .text._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode:00000418 $a
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2237   .rodata._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode.str1.4:00000000 .LC9
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2275   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 .LANCHOR0
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2240   .rodata._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode.str1.4:00000010 .LC10
.ARM.extab.text._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode:00000000 $d
.ARM.exidx.text._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2183   .text._ZN6tflite19Register_LEAKY_RELUEv:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2189   .text._ZN6tflite19Register_LEAKY_RELUEv:00000000 _ZN6tflite19Register_LEAKY_RELUEv
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2225   .rodata:00000000 .LANCHOR1
.ARM.exidx.text._ZN6tflite19Register_LEAKY_RELUEv:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2224   .rodata:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2236   .rodata._ZN6tflite12_GLOBAL__N_113LeakyReluEvalEP13TfLiteContextP10TfLiteNode.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2249   .rodata._ZN6tflite12_GLOBAL__N_116LeakyReluPrepareEP13TfLiteContextP10TfLiteNode.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2274   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccNLnLQg.s:2278   .rodata._ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__:00000000 _ZZN8gemmlowp19RoundingDivideByPOTIlEET_S1_iE19__PRETTY_FUNCTION__
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.3e1481985cce1e923928453d8be0a65b
                           .group:00000000 wm4.cconfig.h.31.1472b8c7bd4952a63a52f3f4f718f872
                           .group:00000000 wm4.cpu_defines.h.31.54d44f9d3e7c42875c5a7fd49795eb93
                           .group:00000000 wm4.cconfig.h.515.5e729db314ae74226e291b4ae081e353
                           .group:00000000 wm4.concept_check.h.31.f19605d278e56917c68a56d378be308c
                           .group:00000000 wm4.type_traits.30.2c7323a483bcd7601e8b71d2546ae284
                           .group:00000000 wm4.move.h.152.41d7b9e6779674d169b7813982cfa003
                           .group:00000000 wm4.exception_defines.h.31.ca6841b9be3287386aafc5c717935b2e
                           .group:00000000 wm4.cpp_type_traits.h.33.9f2bfd8c4471a9a299f6da3ec24c745c
                           .group:00000000 wm4.numeric_traits.h.30.aa01a98564b7e55086aad9e53c7e5c53
                           .group:00000000 wm4.assertions.h.30.51d443923f0d242550e04246a7819b39
                           .group:00000000 wm4.stl_iterator.h.1250.45f349a262f1b0d836d8edbc4b7b98ff
                           .group:00000000 wm4.debug.h.30.5c1f223b12199e851d4d42805b788ccf
                           .group:00000000 wm4.stl_algobase.h.491.aa250b69c90aafa2a0a62b8c58cd5f30
                           .group:00000000 wm4.cstdlib.44.52c5efdfb0f3c176bd11e611a0b94959
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.newlib.h.21.59901f4bf241ab46c63694665baa7297
                           .group:00000000 wm4.features.h.22.37852b648068a281464730a5a4cc748e
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.187.e3ca1cb00044c044f8b956a6107cebb6
                           .group:00000000 wm4.stddef.h.39.60c5e3eb202f4a8f413509aeb6ad39fb
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.cdefs.h.47.9bc8274c84fddbf05edd550eb0bf48cd
                           .group:00000000 wm4.stdlib.h.56.b4ddaf162082f284ba35b4444af99a9a
                           .group:00000000 wm4.cstdlib.76.ae666499c8f9b0ace1b4b23fe143da2c
                           .group:00000000 wm4.atomic_lockfree_defines.h.31.d5c6334fb1e95c9462b052951f1411df
                           .group:00000000 wm4.limits.38.55aefcf041805b6211ca3649dd2ab1b5
                           .group:00000000 wm4.wchar.h.2.f837619576d797e948eb58c44fac4678
                           .group:00000000 wm4.stddef.h.161.9f48187563b2a85291a91832aa425498
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.wchar.h.41.bce54f0deafe8a72ebb0005417e8a086
                           .group:00000000 wm4.cwchar.48.c4e882638bf84f6da89479dda6fe8e17
                           .group:00000000 wm4.stdint.h.4.659be5aa44c4ab4eb7c7cc2b24d8ceee
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.4c107c5a20920bfc6e94fb2672bbd9ee
                           .group:00000000 wm4.allocator.h.52.0ceafb36dc1b82dbfa6b05003082e3f5
                           .group:00000000 wm4.locale.h.8.27d0fe4c0abbb6f8893a1fa7c1799fd9
                           .group:00000000 wm4.stddef.h.161.38688f2eb958a8ed58fdb61ffe554c94
                           .group:00000000 wm4.locale.h.16.524572cf3c2ed9856516685acdc598fe
                           .group:00000000 wm4.clocale.45.c36d2d5b631a875aa5273176b54fdf0f
                           .group:00000000 wm4.ctype.h.2.da310d2ad165ccf8b86542f76fdb938d
                           .group:00000000 wm4.cctype.45.0da5714876b0be7f2d816b53d9670403
                           .group:00000000 wm4.gthr.h.27.ceb1c66b926f052afcba57e8784df0d4
                           .group:00000000 wm4.gthrdefault.h.27.edc94d4398c0534988962be77dc3c2e1
                           .group:00000000 wm4.atomic_word.h.30.9e0ac69fd462d5e650933e05133b4afa
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.c3e9cb15e5af2807c4650345134c1a8a
                           .group:00000000 wm4.cstdio.45.ba8d321feb18bfc8923454067605c368
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.1ecd7b1049497a0ab61da0f6cbd4b0c6
                           .group:00000000 wm4.functional_hash.h.31.bccc014fee6fc3f930045d809df6f486
                           .group:00000000 wm4.functional.549.0bc5b448cf999863d3841495cd6fe920
                           .group:00000000 wm4.assert.h.11.a5d97ca77559a42890313c4941c01fd9
                           .group:00000000 wm4.math.h.13.e7cbdea54f4da98ab8f7fad4d23502b2
                           .group:00000000 wm4.cmath.46.d6e5b776115d39075860ed881d18f087
                           .group:00000000 wm4.detect_platform.h.19.a1891273c0cad215067ddb8219400136
                           .group:00000000 wm4.fixedpoint.h.567.8a6371d9452be19811601bace78b0abc
                           .group:00000000 wm4.cmath.44.b3bcbb5fe53ec6617dec8aa8eb7b03cc
                           .group:00000000 wm4.cppmath.h.27.51580d700716589df4b364298e2ef577
                           .group:00000000 wm4.neon_check.h.16.79a4dcb572cbeac06c4924f1f20cb68d
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.cstring.45.6ab09de7fb97b576e744347688ddc8d7
                           .group:00000000 wm4.op_macros.h.42.7b718cb416a067e7bb07e7699647769b
                           .group:00000000 wm4.compatibility.h.23.702d6356326ea59aded8ef5c6c4626d5
                           .group:00000000 wm4.stdbool.h.29.01580e438512fc255c0619569742ffd3
                           .group:00000000 wm4.c_api_types.h.20.9b09175981ed746180e205cc0b4b2bfd
                           .group:00000000 wm4.common.h.77.124de099ec0ac4f95ebf1618a5f42cf6
                           .group:00000000 wm4.builtin_op_data.h.16.b961d1222c948363e3f10ad99298fd3f

UNDEFINED SYMBOLS
abort
__aeabi_unwind_cpp_pr0
_ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor
_ZN6tflite13GetOutputSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor
_ZN6tflite18QuantizeMultiplierEdPlPi
TfLiteTypeGetName
__gxx_personality_v0
_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor
_ZdaPv
__cxa_end_cleanup
__assert_func
