   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"r_os_abstraction_api.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.main_task,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	main_task:
  23              	.LFB5:
  24              		.file 1 "../generate/os_abstraction/src/r_os_abstraction_api.c"
   1:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
   2:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * DISCLAIMER
   3:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * This software is supplied by Renesas Electronics Corporation and is only intended for use with R
   4:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * other uses are authorized. This software is owned by Renesas Electronics Corporation and is prot
   5:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * applicable laws, including copyright laws.
   6:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   7:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
   8:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAI
   9:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS A
  10:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY R
  11:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DA
  12:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Renesas reserves the right, without notice, to make changes to this software and to discontinue 
  13:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * this software. By using this software, you agree to the additional terms and conditions found by
  14:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * following link:
  15:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * http://www.renesas.com/disclaimer
  16:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *
  17:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Copyright (C) 2019 Renesas Electronics Corporation. All rights reserved.
  18:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
  19:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  20:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
  21:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * File Name    : r_os_abstraction.c
  22:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Version      : see OS_LESS_RZ_HLD_VERSION_MAJOR.OS_LESS_RZ_HLD_VERSION_MINOR
  23:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : To make efficient code re-use the identical high layer driver shall be used in bo
  24:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                OS Less applications.
  25:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                This file aims to abstract the Operating system (OS) awareness when creating an O
  26:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
  27:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
  28:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * History      : DD.MM.YYYY Version Description
  29:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *              : 03.09.2019 3.03    Added R_COMPILER_WEAK to vApplicationStackOverflowHook () allo
  30:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
  31:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  32:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include <stdio.h>
  33:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include <fcntl.h>
  34:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "r_devlink_wrapper.h"
  35:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  36:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "r_typedefs.h"
  37:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "driver.h"
  38:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  39:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "FreeRTOS.h"
  40:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "FreeRTOSConfig.h"
  41:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "semphr.h"
  42:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "queue.h"
  43:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "task.h"
  44:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "string.h"
  45:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "r_ostm_drv_api.h"
  46:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  47:../generate/os_abstraction/src/r_os_abstraction_api.c **** /* compiler specific API header */
  48:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "r_compiler_abstraction_api.h"
  49:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  50:../generate/os_abstraction/src/r_os_abstraction_api.c **** /* OS abstraction specific API header */
  51:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "r_os_abstraction_api.h"
  52:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  53:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "r_task_priority.h"
  54:../generate/os_abstraction/src/r_os_abstraction_api.c **** #include "application_cfg.h"
  55:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  56:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
  57:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Macro definitions
  58:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
  59:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  60:../generate/os_abstraction/src/r_os_abstraction_api.c **** /* A minimum of 8 characters or "Unknown" will not fit! */
  61:../generate/os_abstraction/src/r_os_abstraction_api.c **** #define R_OS_PRV_TINY_STACK_SIZE        (configMINIMAL_STACK_SIZE)
  62:../generate/os_abstraction/src/r_os_abstraction_api.c **** #define R_OS_PRV_SMALL_STACK_SIZE       (configSMALL_STACK_SIZE)
  63:../generate/os_abstraction/src/r_os_abstraction_api.c **** #define R_OS_PRV_DEFAULT_STACK_SIZE     (configDEFAULT_STACK_SIZE)
  64:../generate/os_abstraction/src/r_os_abstraction_api.c **** #define R_OS_PRV_LARGE_STACK_SIZE       (configDEFAULT_STACK_SIZE*2)
  65:../generate/os_abstraction/src/r_os_abstraction_api.c **** #define R_OS_PRV_HUGE_STACK_SIZE        (configDEFAULT_STACK_SIZE*4)
  66:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  67:../generate/os_abstraction/src/r_os_abstraction_api.c **** /* needs to link to configMEMORY_TYPE_FOR_ALLOCATOR */
  68:../generate/os_abstraction/src/r_os_abstraction_api.c **** #define R_OS_PRV_DEFAULT_HEAP_PRV_      (configTOTAL_HEAP_SIZE)
  69:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  70:../generate/os_abstraction/src/r_os_abstraction_api.c **** #define FREERTOS_HEAP_START_PRV_        ((void *)&__freertos_heap_start)
  71:../generate/os_abstraction/src/r_os_abstraction_api.c **** #define FREERTOS_HEAP_END_PRV_          ((void *)&__freertos_heap_end)
  72:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  73:../generate/os_abstraction/src/r_os_abstraction_api.c **** #ifdef LOG_TASK_INFO
  74:../generate/os_abstraction/src/r_os_abstraction_api.c ****     #define LOG_DATA_DUMP_SIZE_PRV_     (4096)
  75:../generate/os_abstraction/src/r_os_abstraction_api.c **** #endif /* LOG_TASK_INFO */
  76:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  77:../generate/os_abstraction/src/r_os_abstraction_api.c **** #ifdef OS_DEBUG_RECORD_MEM_ALLOCS
  78:../generate/os_abstraction/src/r_os_abstraction_api.c ****     #define R_PRV_MAX_LEN_TASK_NAME     (24)
  79:../generate/os_abstraction/src/r_os_abstraction_api.c **** #endif /* OS_DEBUG_RECORD_MEM_ALLOCS */
  80:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  81:../generate/os_abstraction/src/r_os_abstraction_api.c **** extern uint8_t __freertos_heap_start;
  82:../generate/os_abstraction/src/r_os_abstraction_api.c **** extern uint8_t __freertos_heap_end;
  83:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  84:../generate/os_abstraction/src/r_os_abstraction_api.c **** /* Note ucHeap is used in freeRTOS for fixed location fixed sized memory pool */
  85:../generate/os_abstraction/src/r_os_abstraction_api.c **** uint8_t ucHeap[configTOTAL_HEAP_SIZE] __attribute__ ((section(".freertos_heap")));
  86:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  87:../generate/os_abstraction/src/r_os_abstraction_api.c **** extern uint32_t ulPortInterruptNesting;
  88:../generate/os_abstraction/src/r_os_abstraction_api.c **** UBaseType_t uxSavedInterruptStatus;
  89:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  90:../generate/os_abstraction/src/r_os_abstraction_api.c **** /* Allocate two blocks of RAM for use by the heap. */
  91:../generate/os_abstraction/src/r_os_abstraction_api.c **** R_COMPILER_WEAK HeapRegion_t xHeapRegions[] =
  92:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
  93:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Initialise default region in the function . */
  94:../generate/os_abstraction/src/r_os_abstraction_api.c ****     { NULL, 0 },
  95:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
  96:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Terminates the array. */
  97:../generate/os_abstraction/src/r_os_abstraction_api.c ****     { NULL, 0 }
  98:../generate/os_abstraction/src/r_os_abstraction_api.c **** };
  99:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 100:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 101:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Private global variables
 102:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 103:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 104:../generate/os_abstraction/src/r_os_abstraction_api.c **** #ifdef OS_DEBUG_RECORD_MEM_ALLOCS
 105:../generate/os_abstraction/src/r_os_abstraction_api.c **** static volatile char gs_debug_task_malloc_str[24];
 106:../generate/os_abstraction/src/r_os_abstraction_api.c **** static volatile char gs_debug_task_free_str[24];
 107:../generate/os_abstraction/src/r_os_abstraction_api.c **** #endif /* OS_DEBUG_RECORD_MEM_ALLOCS */
 108:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 109:../generate/os_abstraction/src/r_os_abstraction_api.c **** static const st_os_abstraction_info_t s_os_version =
 110:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 111:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Version Number*/
 112:../generate/os_abstraction/src/r_os_abstraction_api.c ****     { ((R_OS_ABSTRACTION_VERSION_MAJOR << 16) + R_OS_ABSTRACTION_VERSION_MINOR) },
 113:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 114:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Build Number*/
 115:../generate/os_abstraction/src/r_os_abstraction_api.c ****     tskKERNEL_VERSION_BUILD,
 116:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 117:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Name of OS Abstraction Layer*/
 118:../generate/os_abstraction/src/r_os_abstraction_api.c ****     ("FreeRTOS OS Abstraction")
 119:../generate/os_abstraction/src/r_os_abstraction_api.c **** };
 120:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 121:../generate/os_abstraction/src/r_os_abstraction_api.c **** static const char s_startup_task_name_str[] = "Main";
 122:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 123:../generate/os_abstraction/src/r_os_abstraction_api.c **** /*xSemaphoreHandle is defined as a void pointer*/
 124:../generate/os_abstraction/src/r_os_abstraction_api.c **** static p_mutex_t s_pstream_mutex = NULL;
 125:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 126:../generate/os_abstraction/src/r_os_abstraction_api.c **** /*Initialising as Null*/
 127:../generate/os_abstraction/src/r_os_abstraction_api.c **** static void *sp_task_handle = NULL;
 128:../generate/os_abstraction/src/r_os_abstraction_api.c **** static char s_file[200];
 129:../generate/os_abstraction/src/r_os_abstraction_api.c **** static uint32_t s_line;
 130:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 131:../generate/os_abstraction/src/r_os_abstraction_api.c **** static size_t s_event_count = 0UL;
 132:../generate/os_abstraction/src/r_os_abstraction_api.c **** static size_t s_event_max = 0UL;
 133:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 134:../generate/os_abstraction/src/r_os_abstraction_api.c **** static bool_t s_os_running = false;
 135:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 136:../generate/os_abstraction/src/r_os_abstraction_api.c **** /* LOG_TASK_INFO provides logging of information into a circular buffer. This is currently
 137:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * configured to do so in mallocs and frees.
 138:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * To use: Add text to log using the log_data function. The log_write_data_to_console will
 139:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * output the contents of the buffer to the console (currently set to do this in the
 140:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * OS_assert function).
 141:../generate/os_abstraction/src/r_os_abstraction_api.c ****  */
 142:../generate/os_abstraction/src/r_os_abstraction_api.c **** #ifdef LOG_TASK_INFO
 143:../generate/os_abstraction/src/r_os_abstraction_api.c **** static volatile char s_log_data[LOG_DATA_DUMP_SIZE_PRV_ + 1];
 144:../generate/os_abstraction/src/r_os_abstraction_api.c **** static volatile char *sp_log_head = s_log_data;
 145:../generate/os_abstraction/src/r_os_abstraction_api.c **** static volatile char *sp_log_tail = s_log_data;
 146:../generate/os_abstraction/src/r_os_abstraction_api.c **** static volatile uint8_t s_log_readback_running = 0u;
 147:../generate/os_abstraction/src/r_os_abstraction_api.c **** #endif /* LOG_TASK_INFO */
 148:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 149:../generate/os_abstraction/src/r_os_abstraction_api.c **** extern void vPortDefineHeapRegions (const HeapRegion_t * const pxHeapRegions);
 150:../generate/os_abstraction/src/r_os_abstraction_api.c **** R_COMPILER_WEAK void vApplicationStackOverflowHook (xTaskHandle xTask, char *pcTaskName);
 151:../generate/os_abstraction/src/r_os_abstraction_api.c **** void vApplicationIdleHook( void );
 152:../generate/os_abstraction/src/r_os_abstraction_api.c **** void os_abstraction_isr (void);
 153:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 154:../generate/os_abstraction/src/r_os_abstraction_api.c **** R_COMPILER_WEAK void pvPortsetDesiredBlockForMalloc( size_t xWantedBlock );
 155:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 156:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 157:../generate/os_abstraction/src/r_os_abstraction_api.c **** R_COMPILER_WEAK void pvPortsetDesiredBlockForMalloc( size_t xWantedBlock )
 158:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 159:../generate/os_abstraction/src/r_os_abstraction_api.c **** 	UNUSED_PARAM(xWantedBlock);
 160:../generate/os_abstraction/src/r_os_abstraction_api.c **** 	R_COMPILER_Nop();
 161:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 162:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 163:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 164:../generate/os_abstraction/src/r_os_abstraction_api.c **** #ifdef LOG_TASK_INFO
 165:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 166:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: log_data
 167:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Logs text to a circular buffer for debug purposes
 168:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : char *p_data_to_log
 169:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                uint32_t len_data
 170:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : void
 171:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 172:../generate/os_abstraction/src/r_os_abstraction_api.c **** static void log_data (char *p_data_to_log, uint32_t len_data)
 173:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 174:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint32_t len = 0;
 175:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 176:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* determine length of data to log */
 177:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (0 == len_data)
 178:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 179:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* using strlen */
 180:../generate/os_abstraction/src/r_os_abstraction_api.c ****         len = strlen(p_data_to_log);
 181:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 182:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
 183:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 184:../generate/os_abstraction/src/r_os_abstraction_api.c ****         len = len_data;
 185:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 186:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 187:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* will head fit in buffer without overlap */
 188:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if ((sp_log_head + len) < (s_log_data + LOG_DATA_DUMP_SIZE_PRV_))
 189:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 190:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* push tail up if overlapped */
 191:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if ((sp_log_tail > sp_log_head) && (sp_log_tail < (sp_log_head + len)))
 192:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 193:../generate/os_abstraction/src/r_os_abstraction_api.c ****             sp_log_tail = (sp_log_head + len);
 194:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 195:../generate/os_abstraction/src/r_os_abstraction_api.c ****         strncpy(sp_log_head, p_data_to_log, len);
 196:../generate/os_abstraction/src/r_os_abstraction_api.c ****         sp_log_head += len;
 197:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 198:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
 199:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 200:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* overlap */
 201:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 202:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* add to top of buffer */
 203:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 204:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* calc number of bytes to top */
 205:../generate/os_abstraction/src/r_os_abstraction_api.c ****         uint32_t num_chars_to_top = ((s_log_data + LOG_DATA_DUMP_SIZE_PRV_) - sp_log_head);
 206:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 207:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* fill buffer to the top */
 208:../generate/os_abstraction/src/r_os_abstraction_api.c ****         strncpy(sp_log_head, p_data_to_log, num_chars_to_top);
 209:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 210:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* add remaining to start of buffer */
 211:../generate/os_abstraction/src/r_os_abstraction_api.c ****         strncpy(s_log_data, (char *) (p_data_to_log + num_chars_to_top), (len - num_chars_to_top));
 212:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 213:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* update head */
 214:../generate/os_abstraction/src/r_os_abstraction_api.c ****         sp_log_head = (char *) (s_log_data + (len - num_chars_to_top));
 215:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 216:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* update tail if overlapped */
 217:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (sp_log_tail < sp_log_head)
 218:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 219:../generate/os_abstraction/src/r_os_abstraction_api.c ****             sp_log_tail = sp_log_head;
 220:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 221:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 222:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 223:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 224:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function log_data
 225:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 226:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 227:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 228:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: log_write_data_to_console
 229:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Outputs contents of circular debug buffer to console
 230:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : void
 231:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : void
 232:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 233:../generate/os_abstraction/src/r_os_abstraction_api.c **** static void log_write_data_to_console (void)
 234:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 235:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* check if console reporting is already underway */
 236:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* sometimes assert runs in more than 1 task... */
 237:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (s_log_readback_running)
 238:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 239:../generate/os_abstraction/src/r_os_abstraction_api.c ****         return;
 240:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 241:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 242:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* prevent multiple access in assert */
 243:../generate/os_abstraction/src/r_os_abstraction_api.c ****     s_log_readback_running = 1u;
 244:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 245:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (sp_log_tail < sp_log_head)
 246:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 247:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* not overlapped. can just printf */
 248:../generate/os_abstraction/src/r_os_abstraction_api.c ****         *(sp_log_head + 1) = 0;
 249:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 250:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* cast to remove volatile qualifier */
 251:../generate/os_abstraction/src/r_os_abstraction_api.c ****         printf((char *) sp_log_tail);
 252:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 253:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
 254:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 255:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* overlapped. print up to top of buffer */
 256:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* not overlapped. can just printf */
 257:../generate/os_abstraction/src/r_os_abstraction_api.c ****         s_log_data[LOG_DATA_DUMP_SIZE_PRV_] = 0;
 258:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 259:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* cast to remove volatile qualifier */
 260:../generate/os_abstraction/src/r_os_abstraction_api.c ****         printf((char *) sp_log_tail);
 261:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 262:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* not overlapped. can just printf */
 263:../generate/os_abstraction/src/r_os_abstraction_api.c ****         *(sp_log_head + 1) = 0;
 264:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 265:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* cast to remove volatile qualifier */
 266:../generate/os_abstraction/src/r_os_abstraction_api.c ****         printf((char *) s_log_data);
 267:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 268:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 269:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* empty buffer */
 270:../generate/os_abstraction/src/r_os_abstraction_api.c ****     sp_log_head = s_log_data;
 271:../generate/os_abstraction/src/r_os_abstraction_api.c ****     sp_log_tail = s_log_data;
 272:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 273:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* reset multiple access */
 274:../generate/os_abstraction/src/r_os_abstraction_api.c ****     s_log_readback_running = 0u;
 275:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 276:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 277:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function log_write_data_to_console
 278:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 279:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 280:../generate/os_abstraction/src/r_os_abstraction_api.c **** #endif /* LOG_TASK_INFO */
 281:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 282:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 283:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: main_task
 284:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : The main task, performs any ramining initialisation and call
 285:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                the user level function main().
 286:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : none
 287:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
 288:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 289:../generate/os_abstraction/src/r_os_abstraction_api.c **** static void main_task (void)
 290:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
  25              		.loc 1 290 0
  26              		.cfi_startproc
  27              		@ Volatile: function does not return.
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10402DE9 		push	{r4, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
 291:../generate/os_abstraction/src/r_os_abstraction_api.c **** 	s_os_running = true;
  34              		.loc 1 291 0
  35 0004 003000E3 		movw	r3, #:lower16:.LANCHOR0
  36 0008 003040E3 		movt	r3, #:upper16:.LANCHOR0
  37 000c 0120A0E3 		mov	r2, #1
  38 0010 002083E5 		str	r2, [r3]
 292:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 293:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Call application main function which shouldn't return */
 294:../generate/os_abstraction/src/r_os_abstraction_api.c ****     extern int_t os_main_task_t (void);
 295:../generate/os_abstraction/src/r_os_abstraction_api.c ****     os_main_task_t();
  39              		.loc 1 295 0
  40 0014 FEFFFFEB 		bl	os_main_task_t
  41              	.LVL0:
  42              	.L2:
  43 0018 FEFFFFEA 		b	.L2
  44              		.cfi_endproc
  45              	.LFE5:
  47              		.section	.text.pvPortsetDesiredBlockForMalloc,"ax",%progbits
  48              		.align	2
  49              		.weak	pvPortsetDesiredBlockForMalloc
  50              		.syntax unified
  51              		.arm
  52              		.fpu neon
  54              	pvPortsetDesiredBlockForMalloc:
  55              	.LFB4:
 158:../generate/os_abstraction/src/r_os_abstraction_api.c **** 	UNUSED_PARAM(xWantedBlock);
  56              		.loc 1 158 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL1:
  62              	.LBB8:
  63              	.LBB9:
  64              		.file 2 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc/r_c
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** /**************************************************************************************************
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * DISCLAIMER
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * This software is supplied by Renesas Electronics Corporation and is only intended for use with R
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * other uses are authorized. This software is owned by Renesas Electronics Corporation and is prot
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * applicable laws, including copyright laws.
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAI
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS A
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY R
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Renesas reserves the right, without notice, to make changes to this software and to discontinue 
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * this software. By using this software, you agree to the additional terms and conditions found by
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * following link:
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * http://www.renesas.com/disclaimer
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  *
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Copyright (C) 2020 Renesas Electronics Corporation. All rights reserved.
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  **************************************************************************************************
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** /**************************************************************************************************
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * File Name    : r_compiler_abstraction_api.h
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Description  : Provides a common API for frequently used compiler specific operations
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  **************************************************************************************************
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** #include  "r_typedefs.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** 
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** #ifndef SRC_PRV_RENESAS_COMPILER_INC_R_COMPILER_ABSTRACTION_API_H_
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** #define SRC_PRV_RENESAS_COMPILER_INC_R_COMPILER_ABSTRACTION_API_H_
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** 
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** /* Macro is used to declare linkage to a function as weak so that it can be overridden by a normall
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Update this when using a different compiler. */
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** #define R_COMPILER_WEAK __attribute__((weak))
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** 
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** #define R_COMPILER_INLINE static inline
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** 
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** extern void __enable_irq (void);
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** extern uint32_t __disable_irq (void);
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** extern void __enable_fiq (void);
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** extern void __disable_fiq (void);
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** 
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** /**************************************************************************************************
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Function Name: R_COMPILER_Nop
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Description  : Abstracting a compiler No Operation opcode into a C function. Update this when us
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  *                compiler.
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Return Value : None.
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****  **************************************************************************************************
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h **** R_COMPILER_INLINE void R_COMPILER_Nop (void)
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****     {
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc\r_compiler_abstraction_api.h ****         __asm volatile ("nop");
  65              		.loc 2 47 0
  66              		.syntax divided
  67              	@ 47 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc/r_compi
  68 0000 00F020E3 		nop
  69              	@ 0 "" 2
  70              		.arm
  71              		.syntax unified
  72 0004 1EFF2FE1 		bx	lr
  73              	.LBE9:
  74              	.LBE8:
  75              		.cfi_endproc
  76              	.LFE4:
  78              		.section	.text.R_OS_Running,"ax",%progbits
  79              		.align	2
  80              		.global	R_OS_Running
  81              		.syntax unified
  82              		.arm
  83              		.fpu neon
  85              	R_OS_Running:
  86              	.LFB9:
 296:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 297:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Guard here to protect the system if main returns */
 298:../generate/os_abstraction/src/r_os_abstraction_api.c ****     while (1)
 299:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 300:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Stops program from running off */
 301:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ;
 302:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 303:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 304:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 305:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function  main_task
 306:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 307:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 308:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 309:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_AbstractionLayerInit
 310:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Function to configure critical resources for the connected
 311:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                OS or scheduler.
 312:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : void
 313:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : true if there were no errors when initialising the Layer.
 314:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                false if there errors when initialising the Layer.
 315:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *****************************************************************************/
 316:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_AbstractionLayerInit (void)
 317:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 318:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ready = true;
 319:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 320:../generate/os_abstraction/src/r_os_abstraction_api.c ****     R_OS_KernelInit();
 321:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 322:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ready);
 323:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 324:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 325:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_AbstractionLayerInit
 326:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 327:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 328:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 329:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_AbstractionLayerShutdown
 330:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Function to release critical resources for the connected
 331:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                OS or scheduler.
 332:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : void
 333:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : true if there were no errors when closing the Layer.
 334:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                false if there errors when closing the Layer.
 335:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *****************************************************************************/
 336:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_AbstractionLayerShutdown (void)
 337:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 338:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ready = true;
 339:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 340:../generate/os_abstraction/src/r_os_abstraction_api.c ****     R_OS_KernelStop();
 341:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 342:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ready);
 343:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 344:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 345:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_AbstractionLayerShutdown
 346:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 347:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 348:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 349:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                                  Kernel API
 350:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 351:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 352:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 353:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_KernelInit
 354:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Initialise the kernel
 355:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : None
 356:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : None
 357:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 358:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_KernelInit (void)
 359:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 360:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* set default heap */
 361:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint32_t default_heap = R_OS_PRV_DEFAULT_HEAP_PRV_;
 362:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint8_t test_task_created = 0;
 363:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 364:../generate/os_abstraction/src/r_os_abstraction_api.c ****     R_OS_InitMemManager();
 365:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 366:../generate/os_abstraction/src/r_os_abstraction_api.c ****     R_DEVLINK_Init();
 367:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 368:../generate/os_abstraction/src/r_os_abstraction_api.c **** #if R_USE_ANSI_STDIO_MODE_CFG
 369:../generate/os_abstraction/src/r_os_abstraction_api.c ****     extern void initialise_monitor_handles _PARAMS ((void));
 370:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 371:../generate/os_abstraction/src/r_os_abstraction_api.c ****     initialise_monitor_handles();
 372:../generate/os_abstraction/src/r_os_abstraction_api.c **** #endif
 373:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 374:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Create the main task */
 375:../generate/os_abstraction/src/r_os_abstraction_api.c ****     BaseType_t t = xTaskCreate((pdTASK_CODE) main_task,
 376:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 377:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* ASCII human readable name for task */
 378:../generate/os_abstraction/src/r_os_abstraction_api.c ****     s_startup_task_name_str,
 379:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 380:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* stack size, should be just big enough as to not waste resources */
 381:../generate/os_abstraction/src/r_os_abstraction_api.c **** #ifdef LOG_TASK_INFO
 382:../generate/os_abstraction/src/r_os_abstraction_api.c ****             R_OS_PRV_HUGE_STACK_SIZE,
 383:../generate/os_abstraction/src/r_os_abstraction_api.c **** #else
 384:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 385:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /*Standard Task stack size*/
 386:../generate/os_abstraction/src/r_os_abstraction_api.c ****             R_OS_PRV_HUGE_STACK_SIZE,
 387:../generate/os_abstraction/src/r_os_abstraction_api.c **** #endif /* LOG_TASK_INFO */
 388:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 389:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Memory type for heap, useful if your system support fast RAM to boost performance */
 390:../generate/os_abstraction/src/r_os_abstraction_api.c ****             &default_heap,
 391:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 392:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Initial task priority */
 393:../generate/os_abstraction/src/r_os_abstraction_api.c ****             R_OS_TASK_MAIN_TASK_PRI,
 394:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 395:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Handle to created task not required */
 396:../generate/os_abstraction/src/r_os_abstraction_api.c ****             NULL);
 397:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 398:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Confirm that the task was successfully created */
 399:../generate/os_abstraction/src/r_os_abstraction_api.c ****     configASSERT(pdPASS == t);
 400:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 401:../generate/os_abstraction/src/r_os_abstraction_api.c ****     R_OS_KernelStart();
 402:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 403:../generate/os_abstraction/src/r_os_abstraction_api.c ****     while (1)
 404:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 405:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* This point should never be reached */
 406:../generate/os_abstraction/src/r_os_abstraction_api.c ****         R_COMPILER_Nop();
 407:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 408:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 409:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 410:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_KernelInit
 411:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 412:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 413:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 414:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 415:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_Running
 416:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *          Used to determine if the OS has started
 417:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * @retval OS running true or false
 418:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 419:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_Running(void)
 420:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
  87              		.loc 1 420 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 421:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (s_os_running);
  92              		.loc 1 421 0
  93 0000 003000E3 		movw	r3, #:lower16:.LANCHOR0
  94 0004 003040E3 		movt	r3, #:upper16:.LANCHOR0
 422:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
  95              		.loc 1 422 0
  96 0008 000093E5 		ldr	r0, [r3]
  97 000c 1EFF2FE1 		bx	lr
  98              		.cfi_endproc
  99              	.LFE9:
 101              		.section	.text.R_OS_KernelStart,"ax",%progbits
 102              		.align	2
 103              		.global	R_OS_KernelStart
 104              		.syntax unified
 105              		.arm
 106              		.fpu neon
 108              	R_OS_KernelStart:
 109              	.LFB10:
 423:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 424:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_IsOSRunning
 425:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 426:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 427:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 428:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_KernelStart
 429:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Start the kernel
 430:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : None
 431:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : None
 432:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 433:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_KernelStart (void)
 434:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 110              		.loc 1 434 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 10402DE9 		push	{r4, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 4, -8
 117              		.cfi_offset 14, -4
 435:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Start the FreeRTOS scheduler */
 436:../generate/os_abstraction/src/r_os_abstraction_api.c ****     vTaskStartScheduler();
 118              		.loc 1 436 0
 119 0004 FEFFFFEB 		bl	vTaskStartScheduler
 120              	.LVL2:
 121 0008 1080BDE8 		pop	{r4, pc}
 122              		.cfi_endproc
 123              	.LFE10:
 125              		.section	.text.R_OS_KernelStop,"ax",%progbits
 126              		.align	2
 127              		.global	R_OS_KernelStop
 128              		.syntax unified
 129              		.arm
 130              		.fpu neon
 132              	R_OS_KernelStop:
 133              	.LFB11:
 437:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 438:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 439:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_KernelStart
 440:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 441:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 442:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 443:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_KernelStop
 444:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Stop the kernel
 445:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : None
 446:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : None
 447:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 448:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_KernelStop (void)
 449:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 134              		.loc 1 449 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138 0000 10402DE9 		push	{r4, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 4, -8
 141              		.cfi_offset 14, -4
 450:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Tell FreeRTOS to end scheduler*/
 451:../generate/os_abstraction/src/r_os_abstraction_api.c ****     vTaskEndScheduler();
 142              		.loc 1 451 0
 143 0004 FEFFFFEB 		bl	vTaskEndScheduler
 144              	.LVL3:
 145 0008 1080BDE8 		pop	{r4, pc}
 146              		.cfi_endproc
 147              	.LFE11:
 149              		.section	.text.R_OS_AbstractionLayerShutdown,"ax",%progbits
 150              		.align	2
 151              		.global	R_OS_AbstractionLayerShutdown
 152              		.syntax unified
 153              		.arm
 154              		.fpu neon
 156              	R_OS_AbstractionLayerShutdown:
 157              	.LFB7:
 337:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ready = true;
 158              		.loc 1 337 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 10402DE9 		push	{r4, lr}
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 4, -8
 165              		.cfi_offset 14, -4
 166              	.LVL4:
 340:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 167              		.loc 1 340 0
 168 0004 FEFFFFEB 		bl	R_OS_KernelStop
 169              	.LVL5:
 343:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 170              		.loc 1 343 0
 171 0008 0100A0E3 		mov	r0, #1
 172 000c 1080BDE8 		pop	{r4, pc}
 173              		.cfi_endproc
 174              	.LFE7:
 176              		.section	.text.R_OS_InitMemManager,"ax",%progbits
 177              		.align	2
 178              		.global	R_OS_InitMemManager
 179              		.syntax unified
 180              		.arm
 181              		.fpu neon
 183              	R_OS_InitMemManager:
 184              	.LFB12:
 452:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 453:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 454:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_KernelStop
 455:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 456:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 457:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 458:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_InitMemManager
 459:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Initialise the Memory manager needs to be called before RAM usage
 460:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : None
 461:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : None
 462:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 463:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_InitMemManager (void)
 464:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 185              		.loc 1 464 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 10402DE9 		push	{r4, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 4, -8
 192              		.cfi_offset 14, -4
 465:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Heap_5 method of memory management */
 466:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Initialise the xHeapRegions array from the linker settings */
 467:../generate/os_abstraction/src/r_os_abstraction_api.c **** 	/* Only used when customer application doesn't override the default (implemented here ) */
 468:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 469:../generate/os_abstraction/src/r_os_abstraction_api.c **** 	/* Ensure the heap correctly allocated in linker file. */
 470:../generate/os_abstraction/src/r_os_abstraction_api.c ****     ucHeap[0] = 1;
 193              		.loc 1 470 0
 194 0004 003000E3 		movw	r3, #:lower16:.LANCHOR1
 195 0008 003040E3 		movt	r3, #:upper16:.LANCHOR1
 196 000c 0120A0E3 		mov	r2, #1
 197 0010 0020C3E5 		strb	r2, [r3]
 471:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 472:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 473:../generate/os_abstraction/src/r_os_abstraction_api.c **** 	if(xHeapRegions[0].xSizeInBytes == 0)
 198              		.loc 1 473 0
 199 0014 003000E3 		movw	r3, #:lower16:xHeapRegions
 200 0018 003040E3 		movt	r3, #:upper16:xHeapRegions
 201 001c 043093E5 		ldr	r3, [r3, #4]
 202 0020 000053E3 		cmp	r3, #0
 203 0024 0B00001A 		bne	.L13
 474:../generate/os_abstraction/src/r_os_abstraction_api.c **** 	{
 475:../generate/os_abstraction/src/r_os_abstraction_api.c **** 		xHeapRegions[0].pucStartAddress = (FREERTOS_HEAP_START_PRV_);
 204              		.loc 1 475 0
 205 0028 003000E3 		movw	r3, #:lower16:xHeapRegions
 206 002c 003040E3 		movt	r3, #:upper16:xHeapRegions
 207 0030 001000E3 		movw	r1, #:lower16:__freertos_heap_start
 208 0034 001040E3 		movt	r1, #:upper16:__freertos_heap_start
 209 0038 001083E5 		str	r1, [r3]
 476:../generate/os_abstraction/src/r_os_abstraction_api.c **** 		xHeapRegions[0].xSizeInBytes = ((uint32_t)FREERTOS_HEAP_END_PRV_ - (uint32_t)FREERTOS_HEAP_START_
 210              		.loc 1 476 0
 211 003c 002000E3 		movw	r2, #:lower16:__freertos_heap_end
 212 0040 002040E3 		movt	r2, #:upper16:__freertos_heap_end
 213 0044 012042E0 		sub	r2, r2, r1
 214 0048 042083E5 		str	r2, [r3, #4]
 477:../generate/os_abstraction/src/r_os_abstraction_api.c **** 		xHeapRegions[1].pucStartAddress = (0);
 215              		.loc 1 477 0
 216 004c 0020A0E3 		mov	r2, #0
 217 0050 082083E5 		str	r2, [r3, #8]
 478:../generate/os_abstraction/src/r_os_abstraction_api.c **** 		xHeapRegions[1].xSizeInBytes = (0);
 218              		.loc 1 478 0
 219 0054 0C2083E5 		str	r2, [r3, #12]
 220              	.L13:
 479:../generate/os_abstraction/src/r_os_abstraction_api.c **** 	}
 480:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 481:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Pass the array into vPortDefineHeapRegions(). */
 482:../generate/os_abstraction/src/r_os_abstraction_api.c ****     vPortDefineHeapRegions(xHeapRegions);
 221              		.loc 1 482 0
 222 0058 000000E3 		movw	r0, #:lower16:xHeapRegions
 223 005c 000040E3 		movt	r0, #:upper16:xHeapRegions
 224 0060 FEFFFFEB 		bl	vPortDefineHeapRegions
 225              	.LVL6:
 226 0064 1080BDE8 		pop	{r4, pc}
 227              		.cfi_endproc
 228              	.LFE12:
 230              		.section	.text.R_OS_TaskCreate,"ax",%progbits
 231              		.align	2
 232              		.global	R_OS_TaskCreate
 233              		.syntax unified
 234              		.arm
 235              		.fpu neon
 237              	R_OS_TaskCreate:
 238              	.LFB13:
 483:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 484:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 485:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_InitMemManager
 486:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 487:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 488:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 489:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                                  Task API
 490:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 491:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 492:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TaskCreate
 493:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Create a task
 494:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    :  p_name - task name string
 495:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                 task_code - task main function
 496:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                 p_params - task associated parameters (task defined)
 497:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                 stack_size - initial stack size (maximum)
 498:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                 priority - initial priority
 499:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : os_task_t - pointer to newly created task, NULL if failed
 500:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 501:../generate/os_abstraction/src/r_os_abstraction_api.c **** os_task_t *R_OS_TaskCreate (const char_t *p_name, os_task_code_t task_code, void *p_params, size_t 
 502:../generate/os_abstraction/src/r_os_abstraction_api.c ****         int_t priority)
 503:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 239              		.loc 1 503 0
 240              		.cfi_startproc
 241              		@ args = 4, pretend = 0, frame = 8
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              	.LVL7:
 244 0000 04E02DE5 		str	lr, [sp, #-4]!
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 14, -4
 247 0004 14D04DE2 		sub	sp, sp, #20
 248              		.cfi_def_cfa_offset 24
 249 0008 00E0A0E1 		mov	lr, r0
 250 000c 0100A0E1 		mov	r0, r1
 251              	.LVL8:
 504:../generate/os_abstraction/src/r_os_abstraction_api.c ****     portBASE_TYPE status;
 505:../generate/os_abstraction/src/r_os_abstraction_api.c ****     configSTACK_DEPTH_TYPE  actual_stack = 0;
 506:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 507:../generate/os_abstraction/src/r_os_abstraction_api.c ****     switch (stack_size)
 252              		.loc 1 507 0
 253 0010 040053E3 		cmp	r3, #4
 254 0014 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 255 0018 0C0000EA 		b	.L16
 256              	.L18:
 257 001c 30000000 		.word	.L17
 258 0020 58000000 		.word	.L24
 259 0024 38000000 		.word	.L20
 260 0028 40000000 		.word	.L21
 261 002c 48000000 		.word	.L22
 262              	.L17:
 508:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 509:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case R_OS_ABSTRACTION_TINY_STACK_SIZE:
 510:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 511:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Stack size is defined in FreeRTOS as unsigned short, convert to 32 bit */
 512:../generate/os_abstraction/src/r_os_abstraction_api.c ****             actual_stack = (uint32_t) R_OS_PRV_TINY_STACK_SIZE;
 263              		.loc 1 512 0
 264 0030 A010A0E3 		mov	r1, #160
 265              	.LVL9:
 266 0034 080000EA 		b	.L19
 267              	.L20:
 268              	.LVL10:
 513:../generate/os_abstraction/src/r_os_abstraction_api.c ****             break;
 514:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 515:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case R_OS_ABSTRACTION_SMALL_STACK_SIZE:
 516:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 517:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Stack size is defined in FreeRTOS as unsigned short, convert to 32 bit */
 518:../generate/os_abstraction/src/r_os_abstraction_api.c ****             actual_stack = (uint32_t) R_OS_PRV_SMALL_STACK_SIZE;
 519:../generate/os_abstraction/src/r_os_abstraction_api.c ****             break;
 520:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 521:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case R_OS_ABSTRACTION_DEFAULT_STACK_SIZE:
 522:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 523:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Stack size is defined in FreeRTOS as unsigned short, convert to 32 bit */
 524:../generate/os_abstraction/src/r_os_abstraction_api.c ****             actual_stack = (uint32_t) R_OS_PRV_DEFAULT_STACK_SIZE;
 269              		.loc 1 524 0
 270 0038 011AA0E3 		mov	r1, #4096
 525:../generate/os_abstraction/src/r_os_abstraction_api.c ****             break;
 271              		.loc 1 525 0
 272 003c 060000EA 		b	.L19
 273              	.LVL11:
 274              	.L21:
 526:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 527:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case R_OS_ABSTRACTION_LARGE_STACK_SIZE:
 528:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 529:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Stack size is defined in FreeRTOS as unsigned short, convert to 32 bit */
 530:../generate/os_abstraction/src/r_os_abstraction_api.c ****             actual_stack = (uint32_t) R_OS_PRV_LARGE_STACK_SIZE;
 275              		.loc 1 530 0
 276 0040 021AA0E3 		mov	r1, #8192
 531:../generate/os_abstraction/src/r_os_abstraction_api.c ****             break;
 277              		.loc 1 531 0
 278 0044 040000EA 		b	.L19
 279              	.LVL12:
 280              	.L22:
 532:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 533:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case R_OS_ABSTRACTION_HUGE_STACK_SIZE:
 534:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 535:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Stack size is defined in FreeRTOS as unsigned short, convert to 32 bit */
 536:../generate/os_abstraction/src/r_os_abstraction_api.c ****             actual_stack = (uint32_t) R_OS_PRV_HUGE_STACK_SIZE;
 281              		.loc 1 536 0
 282 0048 0119A0E3 		mov	r1, #16384
 537:../generate/os_abstraction/src/r_os_abstraction_api.c ****             break;
 283              		.loc 1 537 0
 284 004c 020000EA 		b	.L19
 285              	.LVL13:
 286              	.L16:
 538:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 539:../generate/os_abstraction/src/r_os_abstraction_api.c ****         default:
 540:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 541:../generate/os_abstraction/src/r_os_abstraction_api.c ****             actual_stack = (configSTACK_DEPTH_TYPE)stack_size;
 287              		.loc 1 541 0
 288 0050 7310FFE6 		uxth	r1, r3
 289              	.LVL14:
 542:../generate/os_abstraction/src/r_os_abstraction_api.c ****             break;
 290              		.loc 1 542 0
 291 0054 000000EA 		b	.L19
 292              	.LVL15:
 293              	.L24:
 518:../generate/os_abstraction/src/r_os_abstraction_api.c ****             break;
 294              		.loc 1 518 0
 295 0058 021BA0E3 		mov	r1, #2048
 296              	.LVL16:
 297              	.L19:
 543:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 544:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 545:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 546:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Initialised variable (task) is checked against NULL to determine if the new task can be init
 547:../generate/os_abstraction/src/r_os_abstraction_api.c ****      * see prvInitialiseNewTask in file freertos\tasks.c */
 548:../generate/os_abstraction/src/r_os_abstraction_api.c ****     xTaskHandle task = (TaskHandle_t *) (NULL);
 298              		.loc 1 548 0
 299 005c 10308DE2 		add	r3, sp, #16
 300              	.LVL17:
 301 0060 00C0A0E3 		mov	ip, #0
 302 0064 04C023E5 		str	ip, [r3, #-4]!
 549:../generate/os_abstraction/src/r_os_abstraction_api.c ****     os_task_t *p_new_task;
 550:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 551:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Create a new task */
 552:../generate/os_abstraction/src/r_os_abstraction_api.c ****     status = xTaskCreate((pdTASK_CODE) task_code, p_name, (actual_stack / sizeof(StackType_t)), p_p
 303              		.loc 1 552 0
 304 0068 04308DE5 		str	r3, [sp, #4]
 305 006c 18309DE5 		ldr	r3, [sp, #24]
 306 0070 00308DE5 		str	r3, [sp]
 307 0074 0230A0E1 		mov	r3, r2
 308 0078 2121A0E1 		lsr	r2, r1, #2
 309              	.LVL18:
 310 007c 0E10A0E1 		mov	r1, lr
 311              	.LVL19:
 312 0080 FEFFFFEB 		bl	xTaskCreate
 313              	.LVL20:
 553:../generate/os_abstraction/src/r_os_abstraction_api.c **** 	                     (UBaseType_t) priority, &task);
 554:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 555:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Check whether the task was successfully created */
 556:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (pdPASS == status)
 314              		.loc 1 556 0
 315 0084 010050E3 		cmp	r0, #1
 316 0088 0200001A 		bne	.L25
 557:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 558:../generate/os_abstraction/src/r_os_abstraction_api.c ****         p_new_task = task;
 317              		.loc 1 558 0
 318 008c 0C009DE5 		ldr	r0, [sp, #12]
 319              	.LVL21:
 320              	.L15:
 559:../generate/os_abstraction/src/r_os_abstraction_api.c ****         return task;
 560:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 561:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
 562:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 563:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* cast to NULL required to fulfil FreeRTOS requirements */
 564:../generate/os_abstraction/src/r_os_abstraction_api.c ****         p_new_task = (os_task_t *) (NULL);
 565:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 566:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return p_new_task;
 567:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 321              		.loc 1 567 0
 322 0090 14D08DE2 		add	sp, sp, #20
 323              		.cfi_remember_state
 324              		.cfi_def_cfa_offset 4
 325              		@ sp needed
 326 0094 04F09DE4 		ldr	pc, [sp], #4
 327              	.LVL22:
 328              	.L25:
 329              		.cfi_restore_state
 566:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 330              		.loc 1 566 0
 331 0098 0000A0E3 		mov	r0, #0
 332              	.LVL23:
 333 009c FBFFFFEA 		b	.L15
 334              		.cfi_endproc
 335              	.LFE13:
 337              		.section	.text.R_OS_TaskDelete,"ax",%progbits
 338              		.align	2
 339              		.global	R_OS_TaskDelete
 340              		.syntax unified
 341              		.arm
 342              		.fpu neon
 344              	R_OS_TaskDelete:
 345              	.LFB14:
 568:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 569:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TaskCreate
 570:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 571:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 572:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 573:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TaskDelete
 574:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Delete task
 575:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pp_task - pointer to task handle, NULL deletes the current task
 576:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
 577:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 578:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_TaskDelete (os_task_t **pp_task)
 579:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 346              		.loc 1 579 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL24:
 351 0000 10402DE9 		push	{r4, lr}
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 4, -8
 354              		.cfi_offset 14, -4
 580:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Delete the specified task */
 581:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (NULL == pp_task)
 355              		.loc 1 581 0
 356 0004 004050E2 		subs	r4, r0, #0
 357 0008 0400000A 		beq	.L31
 582:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 583:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* pass NULL down to freeRTOS */
 584:../generate/os_abstraction/src/r_os_abstraction_api.c ****         vTaskDelete((xTaskHandle) NULL);
 585:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 586:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
 587:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 588:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* delete task */
 589:../generate/os_abstraction/src/r_os_abstraction_api.c ****         vTaskDelete((xTaskHandle) *pp_task);
 358              		.loc 1 589 0
 359 000c 000094E5 		ldr	r0, [r4]
 360              	.LVL25:
 361 0010 FEFFFFEB 		bl	vTaskDelete
 362              	.LVL26:
 590:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 591:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* NULL the pointer */
 592:../generate/os_abstraction/src/r_os_abstraction_api.c ****         *pp_task = NULL;
 363              		.loc 1 592 0
 364 0014 0030A0E3 		mov	r3, #0
 365 0018 003084E5 		str	r3, [r4]
 366 001c 1080BDE8 		pop	{r4, pc}
 367              	.LVL27:
 368              	.L31:
 584:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 369              		.loc 1 584 0
 370 0020 FEFFFFEB 		bl	vTaskDelete
 371              	.LVL28:
 372 0024 1080BDE8 		pop	{r4, pc}
 373              		.cfi_endproc
 374              	.LFE14:
 376              		.section	.text.R_OS_TaskSleep,"ax",%progbits
 377              		.align	2
 378              		.global	R_OS_TaskSleep
 379              		.syntax unified
 380              		.arm
 381              		.fpu neon
 383              	R_OS_TaskSleep:
 384              	.LFB15:
 593:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 594:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 595:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 596:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TaskDelete
 597:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 598:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 599:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 600:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TaskSleep
 601:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Suspend the task for the specified period of time
 602:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : sleep_ms - sleep period in milliseconds
 603:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
 604:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 605:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_TaskSleep (uint32_t sleep_ms)
 606:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 385              		.loc 1 606 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              	.LVL29:
 390 0000 10402DE9 		push	{r4, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 4, -8
 393              		.cfi_offset 14, -4
 607:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Delay the task for the specified duration */
 608:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (R_OS_ABSTRACTION_EV_WAIT_INFINITE == sleep_ms)
 394              		.loc 1 608 0
 395 0004 010070E3 		cmn	r0, #1
 396 0008 0100000A 		beq	.L36
 609:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 610:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* wait for ever*/
 611:../generate/os_abstraction/src/r_os_abstraction_api.c ****         vTaskDelay(R_OS_MS_TO_SYSTICKS(portMAX_DELAY));
 612:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 613:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
 614:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 615:../generate/os_abstraction/src/r_os_abstraction_api.c ****         vTaskDelay(R_OS_MS_TO_SYSTICKS(sleep_ms));
 397              		.loc 1 615 0
 398 000c FEFFFFEB 		bl	vTaskDelay
 399              	.LVL30:
 400 0010 1080BDE8 		pop	{r4, pc}
 401              	.LVL31:
 402              	.L36:
 611:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 403              		.loc 1 611 0
 404 0014 FEFFFFEB 		bl	vTaskDelay
 405              	.LVL32:
 406 0018 1080BDE8 		pop	{r4, pc}
 407              		.cfi_endproc
 408              	.LFE15:
 410              		.section	.text.R_OS_TaskYield,"ax",%progbits
 411              		.align	2
 412              		.global	R_OS_TaskYield
 413              		.syntax unified
 414              		.arm
 415              		.fpu neon
 417              	R_OS_TaskYield:
 418              	.LFB16:
 616:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 617:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 618:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 619:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TaskSleep
 620:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 621:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 622:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 623:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TaskYield
 624:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Force a context switch
 625:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : none
 626:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
 627:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 628:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_TaskYield (void)
 629:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 419              		.loc 1 629 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 630:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Force a context switch */
 631:../generate/os_abstraction/src/r_os_abstraction_api.c ****     taskYIELD()
 424              		.loc 1 631 0
 425              		.syntax divided
 426              	@ 631 "../generate/os_abstraction/src/r_os_abstraction_api.c" 1
 427 0000 000000EF 		SWI 0
 428              	@ 0 "" 2
 429              		.arm
 430              		.syntax unified
 431 0004 1EFF2FE1 		bx	lr
 432              		.cfi_endproc
 433              	.LFE16:
 435              		.section	.text.R_OS_TaskSuspend,"ax",%progbits
 436              		.align	2
 437              		.global	R_OS_TaskSuspend
 438              		.syntax unified
 439              		.arm
 440              		.fpu neon
 442              	R_OS_TaskSuspend:
 443              	.LFB17:
 632:../generate/os_abstraction/src/r_os_abstraction_api.c ****     ;
 633:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 634:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 635:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TaskYield
 636:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 637:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 638:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 639:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TaskSuspend
 640:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Suspend the specified task
 641:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : p_task - pointer to task, NULL deletes the current task
 642:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
 643:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 644:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_TaskSuspend (os_task_t *p_task)
 645:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 444              		.loc 1 645 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              	.LVL33:
 449 0000 10402DE9 		push	{r4, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 4, -8
 452              		.cfi_offset 14, -4
 453 0004 0040A0E1 		mov	r4, r0
 646:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret;
 647:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 648:../generate/os_abstraction/src/r_os_abstraction_api.c ****     switch (eTaskGetState(p_task))
 454              		.loc 1 648 0
 455 0008 FEFFFFEB 		bl	eTaskGetState
 456              	.LVL34:
 457 000c 020050E3 		cmp	r0, #2
 458 0010 0100009A 		bls	.L43
 649:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 650:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case eReady:
 651:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case eRunning:
 652:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case eBlocked:
 653:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 654:../generate/os_abstraction/src/r_os_abstraction_api.c ****             vTaskSuspend(p_task);
 655:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret = true;
 656:../generate/os_abstraction/src/r_os_abstraction_api.c ****             break;
 657:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 658:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 659:../generate/os_abstraction/src/r_os_abstraction_api.c ****         default:
 660:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case eDeleted:
 661:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case eSuspended:
 662:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 663:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret = false;
 459              		.loc 1 663 0
 460 0014 0000A0E3 		mov	r0, #0
 461              	.LVL35:
 664:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 665:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 666:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ret);
 667:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 462              		.loc 1 667 0
 463 0018 1080BDE8 		pop	{r4, pc}
 464              	.LVL36:
 465              	.L43:
 654:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret = true;
 466              		.loc 1 654 0
 467 001c 0400A0E1 		mov	r0, r4
 468 0020 FEFFFFEB 		bl	vTaskSuspend
 469              	.LVL37:
 655:../generate/os_abstraction/src/r_os_abstraction_api.c ****             break;
 470              		.loc 1 655 0
 471 0024 0100A0E3 		mov	r0, #1
 656:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 472              		.loc 1 656 0
 473 0028 1080BDE8 		pop	{r4, pc}
 474              		.cfi_endproc
 475              	.LFE17:
 477              		.section	.text.R_OS_TaskResume,"ax",%progbits
 478              		.align	2
 479              		.global	R_OS_TaskResume
 480              		.syntax unified
 481              		.arm
 482              		.fpu neon
 484              	R_OS_TaskResume:
 485              	.LFB18:
 668:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 669:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TaskSuspend
 670:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 671:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 672:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 673:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TaskResume
 674:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Resume the task
 675:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : p_task - pointer to task, NULL deletes the current task
 676:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
 677:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 678:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_TaskResume (os_task_t *p_task)
 679:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 486              		.loc 1 679 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              	.LVL38:
 491 0000 10402DE9 		push	{r4, lr}
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 4, -8
 494              		.cfi_offset 14, -4
 495 0004 0040A0E1 		mov	r4, r0
 680:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret;
 681:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 682:../generate/os_abstraction/src/r_os_abstraction_api.c ****     switch (eTaskGetState(p_task))
 496              		.loc 1 682 0
 497 0008 FEFFFFEB 		bl	eTaskGetState
 498              	.LVL39:
 499 000c 030050E3 		cmp	r0, #3
 500 0010 0100000A 		beq	.L50
 683:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 684:../generate/os_abstraction/src/r_os_abstraction_api.c ****         default:
 685:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case eReady:
 686:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case eRunning:
 687:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case eBlocked:
 688:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case eDeleted:
 689:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 690:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret = false;
 501              		.loc 1 690 0
 502 0014 0000A0E3 		mov	r0, #0
 503              	.LVL40:
 691:../generate/os_abstraction/src/r_os_abstraction_api.c ****             break;
 692:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 693:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 694:../generate/os_abstraction/src/r_os_abstraction_api.c ****         case eSuspended:
 695:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 696:../generate/os_abstraction/src/r_os_abstraction_api.c ****             vTaskResume(p_task);
 697:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret = true;
 698:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 699:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 700:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ret);
 701:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 504              		.loc 1 701 0
 505 0018 1080BDE8 		pop	{r4, pc}
 506              	.LVL41:
 507              	.L50:
 696:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret = true;
 508              		.loc 1 696 0
 509 001c 0400A0E1 		mov	r0, r4
 510 0020 FEFFFFEB 		bl	vTaskResume
 511              	.LVL42:
 697:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 512              		.loc 1 697 0
 513 0024 0100A0E3 		mov	r0, #1
 514 0028 1080BDE8 		pop	{r4, pc}
 515              		.cfi_endproc
 516              	.LFE18:
 518              		.section	.text.R_OS_TasksSuspendAll,"ax",%progbits
 519              		.align	2
 520              		.global	R_OS_TasksSuspendAll
 521              		.syntax unified
 522              		.arm
 523              		.fpu neon
 525              	R_OS_TasksSuspendAll:
 526              	.LFB19:
 702:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 703:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TaskResume
 704:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 705:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 706:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 707:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TasksSuspendAll
 708:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Suspend all tasks, only attempted if the operating system is running
 709:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : none
 710:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
 711:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 712:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_TasksSuspendAll (void)
 713:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 527              		.loc 1 713 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531 0000 10402DE9 		push	{r4, lr}
 532              		.cfi_def_cfa_offset 8
 533              		.cfi_offset 4, -8
 534              		.cfi_offset 14, -4
 714:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Make sure the operating system is running */
 715:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (xTaskGetSchedulerState() == taskSCHEDULER_RUNNING)
 535              		.loc 1 715 0
 536 0004 FEFFFFEB 		bl	xTaskGetSchedulerState
 537              	.LVL43:
 538 0008 020050E3 		cmp	r0, #2
 539 000c 1080BD18 		popne	{r4, pc}
 716:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 717:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Suspend all tasks */
 718:../generate/os_abstraction/src/r_os_abstraction_api.c ****         vTaskSuspendAll();
 540              		.loc 1 718 0
 541 0010 FEFFFFEB 		bl	vTaskSuspendAll
 542              	.LVL44:
 543 0014 1080BDE8 		pop	{r4, pc}
 544              		.cfi_endproc
 545              	.LFE19:
 547              		.section	.text.R_OS_TasksResumeAll,"ax",%progbits
 548              		.align	2
 549              		.global	R_OS_TasksResumeAll
 550              		.syntax unified
 551              		.arm
 552              		.fpu neon
 554              	R_OS_TasksResumeAll:
 555              	.LFB20:
 719:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 720:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 721:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 722:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TasksSuspendAll
 723:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 724:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 725:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 726:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TasksResumeAll
 727:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Resume all tasks, only attempted if the operating system is running
 728:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : none
 729:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
 730:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 731:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_TasksResumeAll (void)
 732:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 556              		.loc 1 732 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560 0000 10402DE9 		push	{r4, lr}
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 4, -8
 563              		.cfi_offset 14, -4
 733:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Make sure the operating system is running */
 734:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED)
 564              		.loc 1 734 0
 565 0004 FEFFFFEB 		bl	xTaskGetSchedulerState
 566              	.LVL45:
 567 0008 000050E3 		cmp	r0, #0
 568 000c 1080BD18 		popne	{r4, pc}
 735:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 736:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Resume all tasks */
 737:../generate/os_abstraction/src/r_os_abstraction_api.c ****         xTaskResumeAll();
 569              		.loc 1 737 0
 570 0010 FEFFFFEB 		bl	xTaskResumeAll
 571              	.LVL46:
 572 0014 1080BDE8 		pop	{r4, pc}
 573              		.cfi_endproc
 574              	.LFE20:
 576              		.section	.text.R_OS_TasksGetNumber,"ax",%progbits
 577              		.align	2
 578              		.global	R_OS_TasksGetNumber
 579              		.syntax unified
 580              		.arm
 581              		.fpu neon
 583              	R_OS_TasksGetNumber:
 584              	.LFB21:
 738:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 739:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 740:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 741:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TasksResumeAll
 742:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 743:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 744:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 745:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TasksGetNumber
 746:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Obtain total number of active tasks defined in the system, only attempted if the 
 747:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                running
 748:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : none
 749:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
 750:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 751:../generate/os_abstraction/src/r_os_abstraction_api.c **** uint32_t R_OS_TasksGetNumber (void)
 752:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 585              		.loc 1 752 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 10402DE9 		push	{r4, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 4, -8
 592              		.cfi_offset 14, -4
 593              	.LVL47:
 753:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint32_t num_tasks = 0;
 754:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 755:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Make sure the operating system is running */
 756:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 594              		.loc 1 756 0
 595 0004 FEFFFFEB 		bl	xTaskGetSchedulerState
 596              	.LVL48:
 597 0008 010050E3 		cmp	r0, #1
 598 000c 0100000A 		beq	.L59
 757:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 758:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* use FreeRTOS call to obtain information */
 759:../generate/os_abstraction/src/r_os_abstraction_api.c ****         num_tasks = uxTaskGetNumberOfTasks();
 599              		.loc 1 759 0
 600 0010 FEFFFFEB 		bl	uxTaskGetNumberOfTasks
 601              	.LVL49:
 602 0014 1080BDE8 		pop	{r4, pc}
 603              	.LVL50:
 604              	.L59:
 753:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint32_t num_tasks = 0;
 605              		.loc 1 753 0
 606 0018 0000A0E3 		mov	r0, #0
 760:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 761:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (num_tasks);
 762:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 607              		.loc 1 762 0
 608 001c 1080BDE8 		pop	{r4, pc}
 609              		.cfi_endproc
 610              	.LFE21:
 612              		.section	.text.R_OS_TaskUsesFloatingPoint,"ax",%progbits
 613              		.align	2
 614              		.global	R_OS_TaskUsesFloatingPoint
 615              		.syntax unified
 616              		.arm
 617              		.fpu neon
 619              	R_OS_TaskUsesFloatingPoint:
 620              	.LFB22:
 763:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 764:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TasksGetNumber
 765:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 766:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 767:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 768:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TaskUsesFloatingPoint
 769:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Enables tasks to use floating point variables.
 770:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : None
 771:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : None
 772:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 773:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_TaskUsesFloatingPoint (void)
 774:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 621              		.loc 1 774 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625 0000 10402DE9 		push	{r4, lr}
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 4, -8
 628              		.cfi_offset 14, -4
 775:../generate/os_abstraction/src/r_os_abstraction_api.c ****     portTASK_USES_FLOATING_POINT();
 629              		.loc 1 775 0
 630 0004 FEFFFFEB 		bl	vPortTaskUsesFPU
 631              	.LVL51:
 632 0008 1080BDE8 		pop	{r4, pc}
 633              		.cfi_endproc
 634              	.LFE22:
 636              		.section	.text.R_OS_TaskGetPriority,"ax",%progbits
 637              		.align	2
 638              		.global	R_OS_TaskGetPriority
 639              		.syntax unified
 640              		.arm
 641              		.fpu neon
 643              	R_OS_TaskGetPriority:
 644              	.LFB23:
 776:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 777:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 778:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TaskUsesFloatingPoint
 779:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 780:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 781:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 782:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Function Name: R_OS_TaskGetPriority
 783:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Description:   Function to get the task priority
 784:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Arguments:     IN task_id - The ID of the task to get the priority of
 785:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Return value:  The priority of the task or -1U if not found
 786:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 787:../generate/os_abstraction/src/r_os_abstraction_api.c **** int32_t R_OS_TaskGetPriority (uint32_t task_id)
 788:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 645              		.loc 1 788 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              	.LVL52:
 789:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Cast to task handle for FreeRTOS*/
 790:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if ((xTaskHandle) task_id != (xTaskHandle) NULL)
 650              		.loc 1 790 0
 651 0000 000050E3 		cmp	r0, #0
 652 0004 0200000A 		beq	.L65
 788:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Cast to task handle for FreeRTOS*/
 653              		.loc 1 788 0
 654 0008 10402DE9 		push	{r4, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 4, -8
 657              		.cfi_offset 14, -4
 791:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 792:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /*Cast to int32_t for OS Abstraction*/
 793:../generate/os_abstraction/src/r_os_abstraction_api.c ****         return ((int32_t) uxTaskPriorityGet((xTaskHandle) task_id));
 658              		.loc 1 793 0
 659 000c FEFFFFEB 		bl	uxTaskPriorityGet
 660              	.LVL53:
 661 0010 1080BDE8 		pop	{r4, pc}
 662              	.LVL54:
 663              	.L65:
 664              		.cfi_def_cfa_offset 0
 665              		.cfi_restore 4
 666              		.cfi_restore 14
 794:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 795:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
 796:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 797:../generate/os_abstraction/src/r_os_abstraction_api.c ****         return ( -1);
 667              		.loc 1 797 0
 668 0014 0000E0E3 		mvn	r0, #0
 669              	.LVL55:
 670 0018 1EFF2FE1 		bx	lr
 671              		.cfi_endproc
 672              	.LFE23:
 674              		.section	.text.R_OS_TaskSetPriority,"ax",%progbits
 675              		.align	2
 676              		.global	R_OS_TaskSetPriority
 677              		.syntax unified
 678              		.arm
 679              		.fpu neon
 681              	R_OS_TaskSetPriority:
 682              	.LFB24:
 798:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 799:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 800:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 801:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function  R_OS_TaskGetPriority
 802:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 803:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 804:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 805:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Function Name: R_OS_TaskSetPriority
 806:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Description:   Function to set the priority of a task
 807:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Arguments:     IN  task_id - The ID of the task to get the priority for
 808:../generate/os_abstraction/src/r_os_abstraction_api.c ****  IN  uiPriority - The priority of the task
 809:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Return value:  true if the priority was set
 810:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 811:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_TaskSetPriority (uint32_t task_id, uint32_t priority)
 812:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 683              		.loc 1 812 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              	.LVL56:
 813:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret_val = false;
 814:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 815:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Cast to task handle for FreeRTOS*/
 816:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if ((xTaskHandle) task_id != (xTaskHandle) NULL)
 688              		.loc 1 816 0
 689 0000 000050E3 		cmp	r0, #0
 690 0004 0300000A 		beq	.L72
 812:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret_val = false;
 691              		.loc 1 812 0
 692 0008 10402DE9 		push	{r4, lr}
 693              		.cfi_def_cfa_offset 8
 694              		.cfi_offset 4, -8
 695              		.cfi_offset 14, -4
 817:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 818:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /*Cast to task handle for FreeRTOS*/
 819:../generate/os_abstraction/src/r_os_abstraction_api.c ****         vTaskPrioritySet((xTaskHandle) task_id, priority);
 696              		.loc 1 819 0
 697 000c FEFFFFEB 		bl	vTaskPrioritySet
 698              	.LVL57:
 820:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ret_val = true;
 699              		.loc 1 820 0
 700 0010 0100A0E3 		mov	r0, #1
 701 0014 1080BDE8 		pop	{r4, pc}
 702              	.LVL58:
 703              	.L72:
 704              		.cfi_def_cfa_offset 0
 705              		.cfi_restore 4
 706              		.cfi_restore 14
 821:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 822:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
 823:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 824:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ret_val = false;
 707              		.loc 1 824 0
 708 0018 0000A0E3 		mov	r0, #0
 709              	.LVL59:
 825:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 826:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 827:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ret_val);
 710              		.loc 1 827 0
 711 001c 1EFF2FE1 		bx	lr
 712              		.cfi_endproc
 713              	.LFE24:
 715              		.section	.text.R_OS_TaskGetCurrentHandle,"ax",%progbits
 716              		.align	2
 717              		.global	R_OS_TaskGetCurrentHandle
 718              		.syntax unified
 719              		.arm
 720              		.fpu neon
 722              	R_OS_TaskGetCurrentHandle:
 723              	.LFB25:
 828:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 829:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 830:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function  R_OS_TaskSetPriority
 831:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 832:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 833:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 834:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TaskGetCurrentHandle
 835:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Get the ID of a task
 836:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : task - pointer to task
 837:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : Task id
 838:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 839:../generate/os_abstraction/src/r_os_abstraction_api.c **** os_task_t *R_OS_TaskGetCurrentHandle (void)
 840:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 724              		.loc 1 840 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728 0000 10402DE9 		push	{r4, lr}
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 4, -8
 731              		.cfi_offset 14, -4
 841:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return xTaskGetCurrentTaskHandle();
 732              		.loc 1 841 0
 733 0004 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 734              	.LVL60:
 842:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 735              		.loc 1 842 0
 736 0008 1080BDE8 		pop	{r4, pc}
 737              		.cfi_endproc
 738              	.LFE25:
 740              		.section	.text.R_OS_TaskGetCurrentName,"ax",%progbits
 741              		.align	2
 742              		.global	R_OS_TaskGetCurrentName
 743              		.syntax unified
 744              		.arm
 745              		.fpu neon
 747              	R_OS_TaskGetCurrentName:
 748              	.LFB26:
 843:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 844:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TaskGetCurrentHandle
 845:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 846:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 847:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 848:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TaskGetCurrentName
 849:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : return a pointer to the current task name
 850:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : none
 851:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : char * pointer to task name
 852:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 853:../generate/os_abstraction/src/r_os_abstraction_api.c **** const char *R_OS_TaskGetCurrentName (void)
 854:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 749              		.loc 1 854 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 40
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753 0000 04E02DE5 		str	lr, [sp, #-4]!
 754              		.cfi_def_cfa_offset 4
 755              		.cfi_offset 14, -4
 756 0004 2CD04DE2 		sub	sp, sp, #44
 757              		.cfi_def_cfa_offset 48
 855:../generate/os_abstraction/src/r_os_abstraction_api.c ****     TaskHandle_t handle = xTaskGetCurrentTaskHandle();
 758              		.loc 1 855 0
 759 0008 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 760              	.LVL61:
 856:../generate/os_abstraction/src/r_os_abstraction_api.c ****     TaskStatus_t task_details;
 857:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 858:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Use the handle to obtain further information about the task.*/
 859:../generate/os_abstraction/src/r_os_abstraction_api.c ****     vTaskGetInfo(handle, &task_details, pdTRUE, eInvalid);
 761              		.loc 1 859 0
 762 000c 0530A0E3 		mov	r3, #5
 763 0010 0120A0E3 		mov	r2, #1
 764 0014 04108DE2 		add	r1, sp, #4
 765 0018 FEFFFFEB 		bl	vTaskGetInfo
 766              	.LVL62:
 860:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 861:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (task_details.pcTaskName);
 862:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 767              		.loc 1 862 0
 768 001c 08009DE5 		ldr	r0, [sp, #8]
 769 0020 2CD08DE2 		add	sp, sp, #44
 770              		.cfi_def_cfa_offset 4
 771              		@ sp needed
 772 0024 04F09DE4 		ldr	pc, [sp], #4
 773              		.cfi_endproc
 774              	.LFE26:
 776              		.section	.text.R_OS_SysLock,"ax",%progbits
 777              		.align	2
 778              		.global	R_OS_SysLock
 779              		.syntax unified
 780              		.arm
 781              		.fpu neon
 783              	R_OS_SysLock:
 784              	.LFB28:
 863:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 864:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TaskGetCurrentName
 865:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 866:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 867:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 868:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_TaskGetState
 869:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Get the state of a task
 870:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : p_task - pointer to task
 871:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : String describing the status of the task
 872:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 873:../generate/os_abstraction/src/r_os_abstraction_api.c **** const char *R_OS_TaskGetState (const char *p_task)
 874:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 875:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* initialise pointer to NULL */
 876:../generate/os_abstraction/src/r_os_abstraction_api.c ****     xTaskStatusType *p_task_status_array = NULL;
 877:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint32_t ux_array_size = 0;
 878:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint32_t ux_size = 0;
 879:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint16_t j;
 880:../generate/os_abstraction/src/r_os_abstraction_api.c ****     eTaskState ret_state = eInvalid;
 881:../generate/os_abstraction/src/r_os_abstraction_api.c ****     e_memory_region_t dummy = R_MEMORY_REGION_DEFAULT;
 882:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t exit_loop;
 883:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 884:../generate/os_abstraction/src/r_os_abstraction_api.c ****     static const char *sp_status_name[] =
 885:../generate/os_abstraction/src/r_os_abstraction_api.c ****     { [eRunning] = "Running", [eReady] = "Ready", [eBlocked] = "Blocked", [eSuspended] = "Suspended
 886:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ] = "Deleted", [eInvalid] = "Invalid" };
 887:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 888:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (ux_array_size > 0)
 889:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 890:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /*Cast FreeRTOS specific variable to void**/
 891:../generate/os_abstraction/src/r_os_abstraction_api.c ****         R_OS_Free((void *) &p_task_status_array);
 892:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 893:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 894:../generate/os_abstraction/src/r_os_abstraction_api.c ****     ux_array_size = uxTaskGetNumberOfTasks();
 895:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 896:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (ux_array_size > 0)
 897:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 898:../generate/os_abstraction/src/r_os_abstraction_api.c ****         p_task_status_array = R_OS_Malloc(ux_array_size * sizeof(xTaskStatusType), dummy);
 899:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 900:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 901:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* handle unsuccessful malloc */
 902:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (NULL == p_task_status_array)
 903:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 904:../generate/os_abstraction/src/r_os_abstraction_api.c ****         printf("Cannot get memory for threads list\r\n");
 905:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 906:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* return NULL if unsuccessful */
 907:../generate/os_abstraction/src/r_os_abstraction_api.c ****         return (NULL);
 908:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 909:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 910:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* determine system status */
 911:../generate/os_abstraction/src/r_os_abstraction_api.c ****     ux_size = uxTaskGetSystemState(p_task_status_array, ux_array_size, NULL);
 912:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 913:../generate/os_abstraction/src/r_os_abstraction_api.c ****     exit_loop = false;
 914:../generate/os_abstraction/src/r_os_abstraction_api.c ****     for (j = 0; ((j < ux_array_size) && ( !exit_loop)); j++)
 915:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 916:../generate/os_abstraction/src/r_os_abstraction_api.c ****         xTaskStatusType *p_xt = p_task_status_array + j;
 917:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 918:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if ( !(strcmp(p_xt->pcTaskName, p_task)))
 919:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 920:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret_state = p_xt->eCurrentState;
 921:../generate/os_abstraction/src/r_os_abstraction_api.c ****             exit_loop = true;
 922:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 923:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 924:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 925:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (ux_array_size > 0)
 926:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 927:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /*Cast FreeRTOS specific variable to void**/
 928:../generate/os_abstraction/src/r_os_abstraction_api.c ****         R_OS_Free((void *) &p_task_status_array);
 929:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 930:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 931:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (sp_status_name[ret_state]);
 932:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 933:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 934:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_TaskGetState
 935:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 936:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 937:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 938:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                                  System API
 939:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 940:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 941:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 942:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_SysLock
 943:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Function to lock a critical section.
 944:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : None.
 945:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : 1 - Critical section entered outside ISR
 946:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                0 - Critical section entered inside ISR
 947:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 948:../generate/os_abstraction/src/r_os_abstraction_api.c **** int_t R_OS_SysLock (void)
 949:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 785              		.loc 1 949 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789 0000 10402DE9 		push	{r4, lr}
 790              		.cfi_def_cfa_offset 8
 791              		.cfi_offset 4, -8
 792              		.cfi_offset 14, -4
 793              	.LVL63:
 950:../generate/os_abstraction/src/r_os_abstraction_api.c ****     int_t return_value = 0;
 951:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 952:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Disable Interrupts if not done already*/
 953:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (0 == ulPortInterruptNesting)
 794              		.loc 1 953 0
 795 0004 003000E3 		movw	r3, #:lower16:ulPortInterruptNesting
 796 0008 003040E3 		movt	r3, #:upper16:ulPortInterruptNesting
 797 000c 003093E5 		ldr	r3, [r3]
 798 0010 000053E3 		cmp	r3, #0
 799 0014 0500000A 		beq	.L85
 954:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 955:../generate/os_abstraction/src/r_os_abstraction_api.c ****         taskENTER_CRITICAL()
 956:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ;
 957:../generate/os_abstraction/src/r_os_abstraction_api.c ****         return_value = 1;
 958:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 959:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
 960:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 961:../generate/os_abstraction/src/r_os_abstraction_api.c ****         uxSavedInterruptStatus = taskENTER_CRITICAL_FROM_ISR();
 800              		.loc 1 961 0
 801 0018 FEFFFFEB 		bl	ulPortSetInterruptMask
 802              	.LVL64:
 803 001c 003000E3 		movw	r3, #:lower16:uxSavedInterruptStatus
 804 0020 003040E3 		movt	r3, #:upper16:uxSavedInterruptStatus
 805 0024 000083E5 		str	r0, [r3]
 950:../generate/os_abstraction/src/r_os_abstraction_api.c ****     int_t return_value = 0;
 806              		.loc 1 950 0
 807 0028 0000A0E3 		mov	r0, #0
 962:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 963:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 964:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (return_value);
 965:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 808              		.loc 1 965 0
 809 002c 1080BDE8 		pop	{r4, pc}
 810              	.L85:
 955:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ;
 811              		.loc 1 955 0
 812 0030 FEFFFFEB 		bl	vPortEnterCritical
 813              	.LVL65:
 957:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 814              		.loc 1 957 0
 815 0034 0100A0E3 		mov	r0, #1
 816 0038 1080BDE8 		pop	{r4, pc}
 817              		.cfi_endproc
 818              	.LFE28:
 820              		.section	.text.R_OS_SysUnlock,"ax",%progbits
 821              		.align	2
 822              		.global	R_OS_SysUnlock
 823              		.syntax unified
 824              		.arm
 825              		.fpu neon
 827              	R_OS_SysUnlock:
 828              	.LFB29:
 966:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 967:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_SysLock
 968:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 969:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 970:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 971:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_SysUnlock
 972:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Function to unlock system, or OS object.
 973:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : None.
 974:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : None
 975:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 976:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_SysUnlock (void)
 977:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 829              		.loc 1 977 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833 0000 10402DE9 		push	{r4, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 4, -8
 836              		.cfi_offset 14, -4
 978:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (0 == ulPortInterruptNesting)
 837              		.loc 1 978 0
 838 0004 003000E3 		movw	r3, #:lower16:ulPortInterruptNesting
 839 0008 003040E3 		movt	r3, #:upper16:ulPortInterruptNesting
 840 000c 003093E5 		ldr	r3, [r3]
 841 0010 000053E3 		cmp	r3, #0
 842 0014 0400000A 		beq	.L90
 979:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 980:../generate/os_abstraction/src/r_os_abstraction_api.c ****         taskEXIT_CRITICAL()
 981:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ;
 982:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 983:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
 984:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 985:../generate/os_abstraction/src/r_os_abstraction_api.c ****         taskEXIT_CRITICAL_FROM_ISR(uxSavedInterruptStatus);
 843              		.loc 1 985 0
 844 0018 003000E3 		movw	r3, #:lower16:uxSavedInterruptStatus
 845 001c 003040E3 		movt	r3, #:upper16:uxSavedInterruptStatus
 846 0020 000093E5 		ldr	r0, [r3]
 847 0024 FEFFFFEB 		bl	vPortClearInterruptMask
 848              	.LVL66:
 849 0028 1080BDE8 		pop	{r4, pc}
 850              	.L90:
 980:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ;
 851              		.loc 1 980 0
 852 002c FEFFFFEB 		bl	vPortExitCritical
 853              	.LVL67:
 854 0030 1080BDE8 		pop	{r4, pc}
 855              		.cfi_endproc
 856              	.LFE29:
 858              		.section	.text.R_OS_SysWaitAccess,"ax",%progbits
 859              		.align	2
 860              		.global	R_OS_SysWaitAccess
 861              		.syntax unified
 862              		.arm
 863              		.fpu neon
 865              	R_OS_SysWaitAccess:
 866              	.LFB30:
 986:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 987:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 988:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 989:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_SysUnlock
 990:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
 991:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 992:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 993:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_SysWaitAccess
 994:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : The OS Abstraction layer contains a system mutex. This function allows a user to 
 995:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                mutex for system critical usage.
 996:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *
 997:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *               sp_task_handle - keeps record of which task owns the mutex, to allow for re-entran
 998:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *               s_pstream_mutex - system mutex
 999:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *
1000:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : none
1001:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
1002:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1003:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_SysWaitAccess (void)
1004:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 867              		.loc 1 1004 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871 0000 10402DE9 		push	{r4, lr}
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 4, -8
 874              		.cfi_offset 14, -4
1005:../generate/os_abstraction/src/r_os_abstraction_api.c ****     void *p_task_handle = xTaskGetCurrentTaskHandle();
 875              		.loc 1 1005 0
 876 0004 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 877              	.LVL68:
1006:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1007:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if(false == s_os_running)
 878              		.loc 1 1007 0
 879 0008 003000E3 		movw	r3, #:lower16:.LANCHOR0
 880 000c 003040E3 		movt	r3, #:upper16:.LANCHOR0
 881 0010 003093E5 		ldr	r3, [r3]
 882 0014 000053E3 		cmp	r3, #0
 883 0018 1080BD08 		popeq	{r4, pc}
 884 001c 0040A0E1 		mov	r4, r0
1008:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1009:../generate/os_abstraction/src/r_os_abstraction_api.c ****     	return;
1010:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1011:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1012:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (sp_task_handle == p_task_handle)
 885              		.loc 1 1012 0
 886 0020 003000E3 		movw	r3, #:lower16:.LANCHOR2
 887 0024 003040E3 		movt	r3, #:upper16:.LANCHOR2
 888 0028 003093E5 		ldr	r3, [r3]
 889 002c 030050E1 		cmp	r0, r3
 890 0030 1080BD08 		popeq	{r4, pc}
1013:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1014:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ;/* allow re-entrant access */
1015:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1016:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
1017:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1018:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Wait for access to the list */
1019:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (NULL == s_pstream_mutex)
 891              		.loc 1 1019 0
 892 0034 003000E3 		movw	r3, #:lower16:.LANCHOR3
 893 0038 003040E3 		movt	r3, #:upper16:.LANCHOR3
 894 003c 003093E5 		ldr	r3, [r3]
 895 0040 000053E3 		cmp	r3, #0
 896 0044 0800000A 		beq	.L95
 897              	.LVL69:
 898              	.L93:
1020:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1021:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /*Get handle to mutex*/
1022:../generate/os_abstraction/src/r_os_abstraction_api.c ****             s_pstream_mutex = xSemaphoreCreateMutex();
1023:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1024:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1025:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Wait mutex */
1026:../generate/os_abstraction/src/r_os_abstraction_api.c ****         xSemaphoreTake(s_pstream_mutex, portMAX_DELAY);
 899              		.loc 1 1026 0
 900 0048 003000E3 		movw	r3, #:lower16:.LANCHOR3
 901 004c 003040E3 		movt	r3, #:upper16:.LANCHOR3
 902 0050 0010E0E3 		mvn	r1, #0
 903 0054 000093E5 		ldr	r0, [r3]
 904 0058 FEFFFFEB 		bl	xQueueSemaphoreTake
 905              	.LVL70:
1027:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1028:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Assign the task ID for future reentrant access */
1029:../generate/os_abstraction/src/r_os_abstraction_api.c ****         sp_task_handle = p_task_handle;
 906              		.loc 1 1029 0
 907 005c 003000E3 		movw	r3, #:lower16:.LANCHOR2
 908 0060 003040E3 		movt	r3, #:upper16:.LANCHOR2
 909 0064 004083E5 		str	r4, [r3]
 910 0068 1080BDE8 		pop	{r4, pc}
 911              	.LVL71:
 912              	.L95:
1022:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 913              		.loc 1 1022 0
 914 006c 0100A0E3 		mov	r0, #1
 915              	.LVL72:
 916 0070 FEFFFFEB 		bl	xQueueCreateMutex
 917              	.LVL73:
 918 0074 003000E3 		movw	r3, #:lower16:.LANCHOR3
 919 0078 003040E3 		movt	r3, #:upper16:.LANCHOR3
 920 007c 000083E5 		str	r0, [r3]
 921 0080 F0FFFFEA 		b	.L93
 922              		.cfi_endproc
 923              	.LFE30:
 925              		.section	.text.R_OS_SysReleaseAccess,"ax",%progbits
 926              		.align	2
 927              		.global	R_OS_SysReleaseAccess
 928              		.syntax unified
 929              		.arm
 930              		.fpu neon
 932              	R_OS_SysReleaseAccess:
 933              	.LFB31:
1030:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1031:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1032:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1033:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_SysWaitAccess
1034:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1035:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1036:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1037:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_SysReleaseAccess
1038:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  :  The OS Abstraction layer contains a system mutex, this function allows a user to
1039:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                 mutex from system critical usage.
1040:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *
1041:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *               sp_task_handle - keeps record of which task owns the mutex, to allow for re-entran
1042:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *               s_pstream_mutex - system mutex
1043:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *
1044:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : none
1045:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
1046:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1047:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_SysReleaseAccess (void)
1048:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 934              		.loc 1 1048 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
1049:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if(false == s_os_running)
 938              		.loc 1 1049 0
 939 0000 003000E3 		movw	r3, #:lower16:.LANCHOR0
 940 0004 003040E3 		movt	r3, #:upper16:.LANCHOR0
 941 0008 003093E5 		ldr	r3, [r3]
 942 000c 000053E3 		cmp	r3, #0
 943 0010 1EFF2F01 		bxeq	lr
1048:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if(false == s_os_running)
 944              		.loc 1 1048 0
 945 0014 10402DE9 		push	{r4, lr}
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 4, -8
 948              		.cfi_offset 14, -4
1050:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1051:../generate/os_abstraction/src/r_os_abstraction_api.c ****     	return;
1052:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1053:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1054:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Release current task ownership of mutex*/
1055:../generate/os_abstraction/src/r_os_abstraction_api.c ****     sp_task_handle = NULL;
 949              		.loc 1 1055 0
 950 0018 003000E3 		movw	r3, #:lower16:.LANCHOR2
 951 001c 003040E3 		movt	r3, #:upper16:.LANCHOR2
 952 0020 0010A0E3 		mov	r1, #0
 953 0024 001083E5 		str	r1, [r3]
1056:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1057:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Release mutex */
1058:../generate/os_abstraction/src/r_os_abstraction_api.c ****     xSemaphoreGive(s_pstream_mutex);
 954              		.loc 1 1058 0
 955 0028 000000E3 		movw	r0, #:lower16:.LANCHOR3
 956 002c 000040E3 		movt	r0, #:upper16:.LANCHOR3
 957 0030 0130A0E1 		mov	r3, r1
 958 0034 0120A0E1 		mov	r2, r1
 959 0038 000090E5 		ldr	r0, [r0]
 960 003c FEFFFFEB 		bl	xQueueGenericSend
 961              	.LVL74:
 962 0040 1080BDE8 		pop	{r4, pc}
 963              		.cfi_endproc
 964              	.LFE31:
 966              		.section	.text.R_OS_AssertCalled,"ax",%progbits
 967              		.align	2
 968              		.global	R_OS_AssertCalled
 969              		.syntax unified
 970              		.arm
 971              		.fpu neon
 973              	R_OS_AssertCalled:
 974              	.LFB32:
1059:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1060:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1061:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_SysReleaseAccess
1062:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1063:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1064:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1065:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_AssertCalled
1066:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Generic error Handler
1067:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : file - Source code file where the error occurred.
1068:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                line - Source code file where the error occurred.
1069:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
1070:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1071:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_AssertCalled (const char *p_file, uint32_t line)
1072:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1073:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 975              		.loc 1 1073 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 40
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979              	.LVL75:
 980 0000 70402DE9 		push	{r4, r5, r6, lr}
 981              		.cfi_def_cfa_offset 16
 982              		.cfi_offset 4, -16
 983              		.cfi_offset 5, -12
 984              		.cfi_offset 6, -8
 985              		.cfi_offset 14, -4
 986 0004 28D04DE2 		sub	sp, sp, #40
 987              		.cfi_def_cfa_offset 56
 988 0008 0040A0E1 		mov	r4, r0
 989 000c 0160A0E1 		mov	r6, r1
1074:../generate/os_abstraction/src/r_os_abstraction_api.c ****     volatile uint32_t ul = 0;
 990              		.loc 1 1074 0
 991 0010 0010A0E3 		mov	r1, #0
 992              	.LVL76:
 993 0014 24108DE5 		str	r1, [sp, #36]
1075:../generate/os_abstraction/src/r_os_abstraction_api.c ****     char local_string_buffer[32];
1076:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1077:../generate/os_abstraction/src/r_os_abstraction_api.c ****     memset(local_string_buffer, 0, 32);
 994              		.loc 1 1077 0
 995 0018 2020A0E3 		mov	r2, #32
 996 001c 04008DE2 		add	r0, sp, #4
 997              	.LVL77:
 998 0020 FEFFFFEB 		bl	memset
 999              	.LVL78:
1078:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1079:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Variable assigned to a volatile static variable to avoid being optimised away */
1080:../generate/os_abstraction/src/r_os_abstraction_api.c ****     strncpy(s_file, p_file, 199);
 1000              		.loc 1 1080 0
 1001 0024 005000E3 		movw	r5, #:lower16:.LANCHOR4
 1002 0028 005040E3 		movt	r5, #:upper16:.LANCHOR4
 1003 002c C720A0E3 		mov	r2, #199
 1004 0030 0410A0E1 		mov	r1, r4
 1005 0034 0500A0E1 		mov	r0, r5
 1006 0038 FEFFFFEB 		bl	strncpy
 1007              	.LVL79:
1081:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1082:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Variable assigned to a volatile static variable to avoid being optimised away */
1083:../generate/os_abstraction/src/r_os_abstraction_api.c ****     s_line = line;
 1008              		.loc 1 1083 0
 1009 003c 004000E3 		movw	r4, #:lower16:.LANCHOR5
 1010              	.LVL80:
 1011 0040 004040E3 		movt	r4, #:upper16:.LANCHOR5
 1012 0044 006084E5 		str	r6, [r4]
1084:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1085:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* print to console */
1086:../generate/os_abstraction/src/r_os_abstraction_api.c ****     printf("\r\nR_OS_Assert. File :%s", s_file);
 1013              		.loc 1 1086 0
 1014 0048 0510A0E1 		mov	r1, r5
 1015 004c 000000E3 		movw	r0, #:lower16:.LC0
 1016 0050 000040E3 		movt	r0, #:upper16:.LC0
 1017 0054 FEFFFFEB 		bl	printf
 1018              	.LVL81:
1087:../generate/os_abstraction/src/r_os_abstraction_api.c ****     printf("\r\n Line %d\r\n:(\r\n", ((uint16_t) s_line));
 1019              		.loc 1 1087 0
 1020 0058 B010D4E1 		ldrh	r1, [r4]
 1021 005c 000000E3 		movw	r0, #:lower16:.LC1
 1022 0060 000040E3 		movt	r0, #:upper16:.LC1
 1023 0064 FEFFFFEB 		bl	printf
 1024              	.LVL82:
1088:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1089:../generate/os_abstraction/src/r_os_abstraction_api.c ****     strncpy(local_string_buffer, R_OS_TaskGetCurrentName(), 31);
 1025              		.loc 1 1089 0
 1026 0068 FEFFFFEB 		bl	R_OS_TaskGetCurrentName
 1027              	.LVL83:
 1028 006c 1F20A0E3 		mov	r2, #31
 1029 0070 0010A0E1 		mov	r1, r0
 1030 0074 04008DE2 		add	r0, sp, #4
 1031 0078 FEFFFFEB 		bl	strncpy
 1032              	.LVL84:
1090:../generate/os_abstraction/src/r_os_abstraction_api.c ****     strcat(local_string_buffer, "\0");
1091:../generate/os_abstraction/src/r_os_abstraction_api.c ****     printf("Current task: %s\r\n", local_string_buffer);
 1033              		.loc 1 1091 0
 1034 007c 04108DE2 		add	r1, sp, #4
 1035 0080 000000E3 		movw	r0, #:lower16:.LC2
 1036 0084 000040E3 		movt	r0, #:upper16:.LC2
 1037 0088 FEFFFFEB 		bl	printf
 1038              	.LVL85:
1092:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1093:../generate/os_abstraction/src/r_os_abstraction_api.c ****     fflush(stdout);
 1039              		.loc 1 1093 0
 1040 008c 003000E3 		movw	r3, #:lower16:_impure_ptr
 1041 0090 003040E3 		movt	r3, #:upper16:_impure_ptr
 1042 0094 003093E5 		ldr	r3, [r3]
 1043 0098 080093E5 		ldr	r0, [r3, #8]
 1044 009c FEFFFFEB 		bl	fflush
 1045              	.LVL86:
1094:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1095:../generate/os_abstraction/src/r_os_abstraction_api.c **** #ifdef LOG_TASK_INFO
1096:../generate/os_abstraction/src/r_os_abstraction_api.c ****     printf("\r\nLog of Memory transactions:\r\n");
1097:../generate/os_abstraction/src/r_os_abstraction_api.c ****     log_write_data_to_console();
1098:../generate/os_abstraction/src/r_os_abstraction_api.c **** #endif /* LOG_TASK_INFO */
1099:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1100:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Software Loop to ensure error detail printed to console*/
1101:../generate/os_abstraction/src/r_os_abstraction_api.c ****     while (0xFFFFFF >= ul)
 1046              		.loc 1 1101 0
 1047 00a0 060000EA 		b	.L103
 1048              	.LVL87:
 1049              	.L104:
 1050              	.LBB10:
1102:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1103:../generate/os_abstraction/src/r_os_abstraction_api.c ****         uint32_t ll;
1104:../generate/os_abstraction/src/r_os_abstraction_api.c ****         for (ll = 0; ll < 0xFFFF; ll++)
 1051              		.loc 1 1104 0 discriminator 3
 1052 00a4 013083E2 		add	r3, r3, #1
 1053              	.LVL88:
 1054              	.L105:
 1055              		.loc 1 1104 0 is_stmt 0 discriminator 1
 1056 00a8 FE2F0FE3 		movw	r2, #65534
 1057 00ac 020053E1 		cmp	r3, r2
 1058 00b0 FBFFFF9A 		bls	.L104
1105:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1106:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ;
1107:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1108:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ul++;
 1059              		.loc 1 1108 0 is_stmt 1
 1060 00b4 24309DE5 		ldr	r3, [sp, #36]
 1061              	.LVL89:
 1062 00b8 013083E2 		add	r3, r3, #1
 1063 00bc 24308DE5 		str	r3, [sp, #36]
 1064              	.L103:
 1065              	.LBE10:
1101:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 1066              		.loc 1 1101 0
 1067 00c0 24309DE5 		ldr	r3, [sp, #36]
 1068 00c4 010453E3 		cmp	r3, #16777216
 1069 00c8 0030A033 		movcc	r3, #0
 1070 00cc F5FFFF3A 		bcc	.L105
 1071              	.L109:
1109:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1110:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1111:../generate/os_abstraction/src/r_os_abstraction_api.c ****     ul = 0;
 1072              		.loc 1 1111 0
 1073 00d0 0030A0E3 		mov	r3, #0
 1074 00d4 24308DE5 		str	r3, [sp, #36]
1112:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1113:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*FreeRTOS Error Handling Loop*/
1114:../generate/os_abstraction/src/r_os_abstraction_api.c ****     taskENTER_CRITICAL()
 1075              		.loc 1 1114 0
 1076 00d8 FEFFFFEB 		bl	vPortEnterCritical
 1077              	.LVL90:
 1078              	.L106:
1115:../generate/os_abstraction/src/r_os_abstraction_api.c ****     ;
1116:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1117:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Set ul to a non-zero value using the debugger to step out of this function */
1118:../generate/os_abstraction/src/r_os_abstraction_api.c ****     while (0 == ul)
 1079              		.loc 1 1118 0 discriminator 1
 1080 00dc 24309DE5 		ldr	r3, [sp, #36]
 1081 00e0 000053E3 		cmp	r3, #0
 1082 00e4 FCFFFF0A 		beq	.L106
1119:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1120:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ;
1121:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1122:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1123:../generate/os_abstraction/src/r_os_abstraction_api.c ****     taskEXIT_CRITICAL()
 1083              		.loc 1 1123 0
 1084 00e8 FEFFFFEB 		bl	vPortExitCritical
 1085              	.LVL91:
1124:../generate/os_abstraction/src/r_os_abstraction_api.c ****     ;
1125:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1086              		.loc 1 1125 0
 1087 00ec 28D08DE2 		add	sp, sp, #40
 1088              		.cfi_def_cfa_offset 16
 1089              		@ sp needed
 1090 00f0 7080BDE8 		pop	{r4, r5, r6, pc}
 1091              		.cfi_endproc
 1092              	.LFE32:
 1094              		.section	.text.R_OS_KernelInit,"ax",%progbits
 1095              		.align	2
 1096              		.global	R_OS_KernelInit
 1097              		.syntax unified
 1098              		.arm
 1099              		.fpu neon
 1101              	R_OS_KernelInit:
 1102              	.LFB8:
 359:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* set default heap */
 1103              		.loc 1 359 0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 8
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 1107 0000 10402DE9 		push	{r4, lr}
 1108              		.cfi_def_cfa_offset 8
 1109              		.cfi_offset 4, -8
 1110              		.cfi_offset 14, -4
 1111 0004 10D04DE2 		sub	sp, sp, #16
 1112              		.cfi_def_cfa_offset 24
 361:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint8_t test_task_created = 0;
 1113              		.loc 1 361 0
 1114 0008 10408DE2 		add	r4, sp, #16
 1115 000c 0639A0E3 		mov	r3, #98304
 1116 0010 043024E5 		str	r3, [r4, #-4]!
 1117              	.LVL92:
 364:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1118              		.loc 1 364 0
 1119 0014 FEFFFFEB 		bl	R_OS_InitMemManager
 1120              	.LVL93:
 366:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1121              		.loc 1 366 0
 1122 0018 FEFFFFEB 		bl	R_DEVLINK_Init
 1123              	.LVL94:
 371:../generate/os_abstraction/src/r_os_abstraction_api.c **** #endif
 1124              		.loc 1 371 0
 1125 001c FEFFFFEB 		bl	initialise_monitor_handles
 1126              	.LVL95:
 375:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1127              		.loc 1 375 0
 1128 0020 0030A0E3 		mov	r3, #0
 1129 0024 04308DE5 		str	r3, [sp, #4]
 1130 0028 0630A0E3 		mov	r3, #6
 1131 002c 00308DE5 		str	r3, [sp]
 1132 0030 0430A0E1 		mov	r3, r4
 1133 0034 0129A0E3 		mov	r2, #16384
 1134 0038 001000E3 		movw	r1, #:lower16:.LANCHOR6
 1135 003c 001040E3 		movt	r1, #:upper16:.LANCHOR6
 1136 0040 000000E3 		movw	r0, #:lower16:main_task
 1137 0044 000040E3 		movt	r0, #:upper16:main_task
 1138 0048 FEFFFFEB 		bl	xTaskCreate
 1139              	.LVL96:
 399:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1140              		.loc 1 399 0
 1141 004c 010050E3 		cmp	r0, #1
 1142 0050 0300000A 		beq	.L111
 399:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1143              		.loc 1 399 0 is_stmt 0 discriminator 1
 1144 0054 8F1100E3 		movw	r1, #399
 1145 0058 000000E3 		movw	r0, #:lower16:.LC3
 1146              	.LVL97:
 1147 005c 000040E3 		movt	r0, #:upper16:.LC3
 1148 0060 FEFFFFEB 		bl	R_OS_AssertCalled
 1149              	.LVL98:
 1150              	.L111:
 401:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1151              		.loc 1 401 0 is_stmt 1
 1152 0064 FEFFFFEB 		bl	R_OS_KernelStart
 1153              	.LVL99:
 1154              	.L112:
 1155              	.LBB11:
 1156              	.LBB12:
 1157              		.loc 2 47 0 discriminator 1
 1158              		.syntax divided
 1159              	@ 47 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc/r_compi
 1160 0068 00F020E3 		nop
 1161              	@ 0 "" 2
 1162              		.arm
 1163              		.syntax unified
 1164 006c FDFFFFEA 		b	.L112
 1165              	.LBE12:
 1166              	.LBE11:
 1167              		.cfi_endproc
 1168              	.LFE8:
 1170              		.section	.text.R_OS_AbstractionLayerInit,"ax",%progbits
 1171              		.align	2
 1172              		.global	R_OS_AbstractionLayerInit
 1173              		.syntax unified
 1174              		.arm
 1175              		.fpu neon
 1177              	R_OS_AbstractionLayerInit:
 1178              	.LFB6:
 317:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ready = true;
 1179              		.loc 1 317 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183 0000 10402DE9 		push	{r4, lr}
 1184              		.cfi_def_cfa_offset 8
 1185              		.cfi_offset 4, -8
 1186              		.cfi_offset 14, -4
 1187              	.LVL100:
 320:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1188              		.loc 1 320 0
 1189 0004 FEFFFFEB 		bl	R_OS_KernelInit
 1190              	.LVL101:
 1191              		.cfi_endproc
 1192              	.LFE6:
 1194              		.section	.text.R_OS_Malloc,"ax",%progbits
 1195              		.align	2
 1196              		.global	R_OS_Malloc
 1197              		.syntax unified
 1198              		.arm
 1199              		.fpu neon
 1201              	R_OS_Malloc:
 1202              	.LFB33:
1126:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1127:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_AssertCalled
1128:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1129:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1130:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1131:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                                  Memory Management API
1132:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1133:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1134:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1135:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_Malloc
1136:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Allocate a block of memory
1137:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : size - request size
1138:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *              : region - region of memory to allocate from
1139:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : ptr to memory block
1140:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1141:../generate/os_abstraction/src/r_os_abstraction_api.c **** void *R_OS_Malloc (size_t size, e_memory_region_t region)
1142:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1203              		.loc 1 1142 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207              	.LVL102:
 1208 0000 70402DE9 		push	{r4, r5, r6, lr}
 1209              		.cfi_def_cfa_offset 16
 1210              		.cfi_offset 4, -16
 1211              		.cfi_offset 5, -12
 1212              		.cfi_offset 6, -8
 1213              		.cfi_offset 14, -4
 1214 0004 0050A0E1 		mov	r5, r0
 1215 0008 0140A0E1 		mov	r4, r1
 1216              	.LVL103:
1143:../generate/os_abstraction/src/r_os_abstraction_api.c ****     void *p_mem_to_alloc;
1144:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint32_t num_regions = (sizeof(xHeapRegions)/sizeof(HeapRegion_t));
1145:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1146:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* The call sequence pvPortsetDesiredBlockForMalloc() to pvPortMalloc() must not be interrupted
1147:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* If interrupted (via task switching) the chosen memory region might be changed by the swapped
1148:../generate/os_abstraction/src/r_os_abstraction_api.c ****     vTaskSuspendAll();
 1217              		.loc 1 1148 0
 1218 000c FEFFFFEB 		bl	vTaskSuspendAll
 1219              	.LVL104:
1149:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1150:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Use the specified region as long as its referring to a valid section the the xHeapRegions ta
1151:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* If the section is invalid use section 0 which has a default implementation in this file.  */
1152:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Final entry in xHeapRegions table { NULL, 0 }  can not be specified as this entry indicates 
1153:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if((region >= 0 ) && (region < num_regions))
 1220              		.loc 1 1153 0
 1221 0010 010054E3 		cmp	r4, #1
 1222 0014 0900009A 		bls	.L120
1154:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1155:../generate/os_abstraction/src/r_os_abstraction_api.c ****         pvPortsetDesiredBlockForMalloc((size_t) xHeapRegions[region].pucStartAddress);
1156:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1157:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
1158:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1159:../generate/os_abstraction/src/r_os_abstraction_api.c ****         pvPortsetDesiredBlockForMalloc((size_t) xHeapRegions[0].pucStartAddress);
 1223              		.loc 1 1159 0
 1224 0018 003000E3 		movw	r3, #:lower16:xHeapRegions
 1225 001c 003040E3 		movt	r3, #:upper16:xHeapRegions
 1226 0020 000093E5 		ldr	r0, [r3]
 1227 0024 FEFFFFEB 		bl	pvPortsetDesiredBlockForMalloc
 1228              	.LVL105:
 1229              	.L118:
1160:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1161:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1162:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Allocate a memory block */
1163:../generate/os_abstraction/src/r_os_abstraction_api.c ****     p_mem_to_alloc = pvPortMalloc(size);
 1230              		.loc 1 1163 0
 1231 0028 0500A0E1 		mov	r0, r5
 1232 002c FEFFFFEB 		bl	pvPortMalloc
 1233              	.LVL106:
 1234 0030 0040A0E1 		mov	r4, r0
 1235              	.LVL107:
1164:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1165:../generate/os_abstraction/src/r_os_abstraction_api.c ****     xTaskResumeAll();
 1236              		.loc 1 1165 0
 1237 0034 FEFFFFEB 		bl	xTaskResumeAll
 1238              	.LVL108:
1166:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1167:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Return a pointer to the newly allocated memory block */
1168:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (p_mem_to_alloc);
1169:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1239              		.loc 1 1169 0
 1240 0038 0400A0E1 		mov	r0, r4
 1241 003c 7080BDE8 		pop	{r4, r5, r6, pc}
 1242              	.LVL109:
 1243              	.L120:
1155:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 1244              		.loc 1 1155 0
 1245 0040 003000E3 		movw	r3, #:lower16:xHeapRegions
 1246 0044 003040E3 		movt	r3, #:upper16:xHeapRegions
 1247 0048 840193E7 		ldr	r0, [r3, r4, lsl #3]
 1248 004c FEFFFFEB 		bl	pvPortsetDesiredBlockForMalloc
 1249              	.LVL110:
 1250 0050 F4FFFFEA 		b	.L118
 1251              		.cfi_endproc
 1252              	.LFE33:
 1254              		.section	.text.R_OS_Free,"ax",%progbits
 1255              		.align	2
 1256              		.global	R_OS_Free
 1257              		.syntax unified
 1258              		.arm
 1259              		.fpu neon
 1261              	R_OS_Free:
 1262              	.LFB34:
1170:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1171:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_Malloc
1172:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1173:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1174:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1175:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_Free
1176:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Free memory block
1177:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : p_memory_to_free - ptr to memory block that is to be freed
1178:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
1179:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1180:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_Free (void **pp_memory_to_free)
1181:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1263              		.loc 1 1181 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              	.LVL111:
 1268 0000 10402DE9 		push	{r4, lr}
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 4, -8
 1271              		.cfi_offset 14, -4
1182:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Make sure the pointer, and the pointer that it points to are valid */
1183:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if ((NULL != pp_memory_to_free) && (NULL != (*pp_memory_to_free)))
 1272              		.loc 1 1183 0
 1273 0004 004050E2 		subs	r4, r0, #0
 1274 0008 1080BD08 		popeq	{r4, pc}
 1275              		.loc 1 1183 0 is_stmt 0 discriminator 1
 1276 000c 000094E5 		ldr	r0, [r4]
 1277              	.LVL112:
 1278 0010 000050E3 		cmp	r0, #0
 1279 0014 1080BD08 		popeq	{r4, pc}
1184:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1185:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Free memory block */
1186:../generate/os_abstraction/src/r_os_abstraction_api.c ****         vPortFree(*pp_memory_to_free);
 1280              		.loc 1 1186 0 is_stmt 1
 1281 0018 FEFFFFEB 		bl	vPortFree
 1282              	.LVL113:
1187:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1188:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* clear pointer */
1189:../generate/os_abstraction/src/r_os_abstraction_api.c ****         *pp_memory_to_free = NULL;
 1283              		.loc 1 1189 0
 1284 001c 0030A0E3 		mov	r3, #0
 1285 0020 003084E5 		str	r3, [r4]
 1286 0024 1080BDE8 		pop	{r4, pc}
 1287              		.cfi_endproc
 1288              	.LFE34:
 1290              		.section	.text.R_OS_TaskGetState,"ax",%progbits
 1291              		.align	2
 1292              		.global	R_OS_TaskGetState
 1293              		.syntax unified
 1294              		.arm
 1295              		.fpu neon
 1297              	R_OS_TaskGetState:
 1298              	.LFB27:
 874:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* initialise pointer to NULL */
 1299              		.loc 1 874 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 8
 1302              		@ frame_needed = 0, uses_anonymous_args = 0
 1303              	.LVL114:
 1304 0000 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 1305              		.cfi_def_cfa_offset 28
 1306              		.cfi_offset 4, -28
 1307              		.cfi_offset 5, -24
 1308              		.cfi_offset 6, -20
 1309              		.cfi_offset 7, -16
 1310              		.cfi_offset 8, -12
 1311              		.cfi_offset 9, -8
 1312              		.cfi_offset 14, -4
 1313 0004 0CD04DE2 		sub	sp, sp, #12
 1314              		.cfi_def_cfa_offset 40
 1315 0008 0080A0E1 		mov	r8, r0
 876:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint32_t ux_array_size = 0;
 1316              		.loc 1 876 0
 1317 000c 0030A0E3 		mov	r3, #0
 1318 0010 04308DE5 		str	r3, [sp, #4]
 1319              	.LVL115:
 894:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1320              		.loc 1 894 0
 1321 0014 FEFFFFEB 		bl	uxTaskGetNumberOfTasks
 1322              	.LVL116:
 896:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 1323              		.loc 1 896 0
 1324 0018 007050E2 		subs	r7, r0, #0
 1325 001c 0900001A 		bne	.L134
 1326              	.LVL117:
 1327              	.L125:
 902:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 1328              		.loc 1 902 0
 1329 0020 04009DE5 		ldr	r0, [sp, #4]
 1330 0024 000050E3 		cmp	r0, #0
 1331 0028 0C00000A 		beq	.L135
 911:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1332              		.loc 1 911 0
 1333 002c 0020A0E3 		mov	r2, #0
 1334 0030 0710A0E1 		mov	r1, r7
 1335 0034 FEFFFFEB 		bl	uxTaskGetSystemState
 1336              	.LVL118:
 913:../generate/os_abstraction/src/r_os_abstraction_api.c ****     for (j = 0; ((j < ux_array_size) && ( !exit_loop)); j++)
 1337              		.loc 1 913 0
 1338 0038 0060A0E3 		mov	r6, #0
 880:../generate/os_abstraction/src/r_os_abstraction_api.c ****     e_memory_region_t dummy = R_MEMORY_REGION_DEFAULT;
 1339              		.loc 1 880 0
 1340 003c 0590A0E3 		mov	r9, #5
 914:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 1341              		.loc 1 914 0
 1342 0040 0640A0E1 		mov	r4, r6
 1343 0044 0C0000EA 		b	.L128
 1344              	.LVL119:
 1345              	.L134:
 898:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 1346              		.loc 1 898 0
 1347 0048 873187E0 		add	r3, r7, r7, lsl #3
 1348 004c 0301A0E1 		lsl	r0, r3, #2
 1349              	.LVL120:
 1350 0050 0010A0E3 		mov	r1, #0
 1351 0054 FEFFFFEB 		bl	R_OS_Malloc
 1352              	.LVL121:
 1353 0058 04008DE5 		str	r0, [sp, #4]
 1354 005c EFFFFFEA 		b	.L125
 1355              	.L135:
 904:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1356              		.loc 1 904 0
 1357 0060 000000E3 		movw	r0, #:lower16:.LC4
 1358 0064 000040E3 		movt	r0, #:upper16:.LC4
 1359 0068 FEFFFFEB 		bl	puts
 1360              	.LVL122:
 907:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 1361              		.loc 1 907 0
 1362 006c 0000A0E3 		mov	r0, #0
 1363 0070 160000EA 		b	.L124
 1364              	.LVL123:
 1365              	.L129:
 914:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 1366              		.loc 1 914 0 discriminator 2
 1367 0074 014084E2 		add	r4, r4, #1
 1368              	.LVL124:
 1369 0078 7440FFE6 		uxth	r4, r4
 1370              	.LVL125:
 1371              	.L128:
 914:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 1372              		.loc 1 914 0 is_stmt 0 discriminator 1
 1373 007c 0430A0E1 		mov	r3, r4
 1374 0080 040057E1 		cmp	r7, r4
 1375 0084 0C00009A 		bls	.L130
 914:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 1376              		.loc 1 914 0 discriminator 3
 1377 0088 000056E3 		cmp	r6, #0
 1378 008c 0A00001A 		bne	.L130
 1379              	.LBB13:
 916:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1380              		.loc 1 916 0 is_stmt 1
 1381 0090 833183E0 		add	r3, r3, r3, lsl #3
 1382 0094 0321A0E1 		lsl	r2, r3, #2
 1383 0098 04509DE5 		ldr	r5, [sp, #4]
 1384 009c 025085E0 		add	r5, r5, r2
 1385              	.LVL126:
 918:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 1386              		.loc 1 918 0
 1387 00a0 0810A0E1 		mov	r1, r8
 1388 00a4 040095E5 		ldr	r0, [r5, #4]
 1389 00a8 FEFFFFEB 		bl	strcmp
 1390              	.LVL127:
 1391 00ac 000050E3 		cmp	r0, #0
 920:../generate/os_abstraction/src/r_os_abstraction_api.c ****             exit_loop = true;
 1392              		.loc 1 920 0
 1393 00b0 0C90D505 		ldrbeq	r9, [r5, #12]	@ zero_extendqisi2
 1394              	.LVL128:
 921:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 1395              		.loc 1 921 0
 1396 00b4 0160A003 		moveq	r6, #1
 1397 00b8 EDFFFFEA 		b	.L129
 1398              	.LVL129:
 1399              	.L130:
 1400              	.LBE13:
 925:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 1401              		.loc 1 925 0
 1402 00bc 000057E3 		cmp	r7, #0
 1403 00c0 0400001A 		bne	.L136
 1404              	.L132:
 931:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1405              		.loc 1 931 0
 1406 00c4 003000E3 		movw	r3, #:lower16:.LANCHOR7
 1407 00c8 003040E3 		movt	r3, #:upper16:.LANCHOR7
 1408 00cc 090193E7 		ldr	r0, [r3, r9, lsl #2]
 1409              	.LVL130:
 1410              	.L124:
 932:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
 1411              		.loc 1 932 0
 1412 00d0 0CD08DE2 		add	sp, sp, #12
 1413              		.cfi_remember_state
 1414              		.cfi_def_cfa_offset 28
 1415              		@ sp needed
 1416 00d4 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1417              	.LVL131:
 1418              	.L136:
 1419              		.cfi_restore_state
 928:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 1420              		.loc 1 928 0
 1421 00d8 04008DE2 		add	r0, sp, #4
 1422 00dc FEFFFFEB 		bl	R_OS_Free
 1423              	.LVL132:
 1424 00e0 F7FFFFEA 		b	.L132
 1425              		.cfi_endproc
 1426              	.LFE27:
 1428              		.section	.text.R_OS_SemaphoreCreate,"ax",%progbits
 1429              		.align	2
 1430              		.global	R_OS_SemaphoreCreate
 1431              		.syntax unified
 1432              		.arm
 1433              		.fpu neon
 1435              	R_OS_SemaphoreCreate:
 1436              	.LFB35:
1190:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1191:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1192:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1193:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_Free
1194:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1195:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1196:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1197:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                                  Semaphore API
1198:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1199:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1200:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1201:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_SemaphoreCreate
1202:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Create a semaphore
1203:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : p_semaphore - Pointer to a associated semaphore
1204:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *              : count         - The maximum count for the semaphore object. This value must be gr
1205:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : The function returns TRUE if the semaphore object was successfully created
1206:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                Otherwise, FALSE is returned
1207:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1208:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_SemaphoreCreate (p_semaphore_t p_semaphore, uint32_t count)
1209:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1437              		.loc 1 1209 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441              	.LVL133:
1210:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret = false;
1211:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1212:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if ((count > 0) & (count <= configQUEUE_REGISTRY_SIZE))
 1442              		.loc 1 1212 0
 1443 0000 013041E2 		sub	r3, r1, #1
 1444 0004 070053E3 		cmp	r3, #7
 1445 0008 0100009A 		bls	.L145
1210:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret = false;
 1446              		.loc 1 1210 0
 1447 000c 0000A0E3 		mov	r0, #0
 1448              	.LVL134:
 1449 0010 1EFF2FE1 		bx	lr
 1450              	.LVL135:
 1451              	.L145:
1209:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret = false;
 1452              		.loc 1 1209 0
 1453 0014 10402DE9 		push	{r4, lr}
 1454              		.cfi_def_cfa_offset 8
 1455              		.cfi_offset 4, -8
 1456              		.cfi_offset 14, -4
 1457 0018 0040A0E1 		mov	r4, r0
1213:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1214:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* semaphore is uint32_t */
1215:../generate/os_abstraction/src/r_os_abstraction_api.c ****         *p_semaphore = (uint32_t) xSemaphoreCreateCounting(count, count);
 1458              		.loc 1 1215 0
 1459 001c 0100A0E1 		mov	r0, r1
 1460              	.LVL136:
 1461 0020 FEFFFFEB 		bl	xQueueCreateCountingSemaphore
 1462              	.LVL137:
 1463 0024 000084E5 		str	r0, [r4]
1216:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1217:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (0 != ( *p_semaphore))
 1464              		.loc 1 1217 0
 1465 0028 000050E3 		cmp	r0, #0
 1466 002c 0100000A 		beq	.L146
1218:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1219:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret = true;
 1467              		.loc 1 1219 0
 1468 0030 0100A0E3 		mov	r0, #1
 1469              	.LVL138:
1220:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1221:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1222:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1223:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ret);
1224:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1470              		.loc 1 1224 0
 1471 0034 1080BDE8 		pop	{r4, pc}
 1472              	.LVL139:
 1473              	.L146:
 1474 0038 1080BDE8 		pop	{r4, pc}
 1475              		.cfi_endproc
 1476              	.LFE35:
 1478              		.section	.text.R_OS_SemaphoreDelete,"ax",%progbits
 1479              		.align	2
 1480              		.global	R_OS_SemaphoreDelete
 1481              		.syntax unified
 1482              		.arm
 1483              		.fpu neon
 1485              	R_OS_SemaphoreDelete:
 1486              	.LFB36:
1225:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1226:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_SemaphoreCreate
1227:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1228:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1229:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1230:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_SemaphoreDelete
1231:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Delete a semaphore, freeing any associated resources
1232:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : semaphore_ptr - Pointer to a associated semaphore
1233:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
1234:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1235:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_SemaphoreDelete (p_semaphore_t p_semaphore)
1236:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1487              		.loc 1 1236 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 8
 1490              		@ frame_needed = 0, uses_anonymous_args = 0
 1491              	.LVL140:
1237:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (0 != ( *p_semaphore))
 1492              		.loc 1 1237 0
 1493 0000 003090E5 		ldr	r3, [r0]
 1494 0004 000053E3 		cmp	r3, #0
 1495 0008 1EFF2F01 		bxeq	lr
1236:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (0 != ( *p_semaphore))
 1496              		.loc 1 1236 0
 1497 000c 04E02DE5 		str	lr, [sp, #-4]!
 1498              		.cfi_def_cfa_offset 4
 1499              		.cfi_offset 14, -4
 1500 0010 0CD04DE2 		sub	sp, sp, #12
 1501              		.cfi_def_cfa_offset 16
 1502              	.LBB14:
1238:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1239:../generate/os_abstraction/src/r_os_abstraction_api.c ****         volatile uint32_t temp_semaphore_handle = *p_semaphore;
 1503              		.loc 1 1239 0
 1504 0014 04308DE5 		str	r3, [sp, #4]
1240:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1241:../generate/os_abstraction/src/r_os_abstraction_api.c ****         *p_semaphore = 0;
 1505              		.loc 1 1241 0
 1506 0018 0030A0E3 		mov	r3, #0
 1507 001c 003080E5 		str	r3, [r0]
1242:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1243:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* cast semaphore_t used by OS abstraction to SemaphoreHandle_t used by FreeRTOS */
1244:../generate/os_abstraction/src/r_os_abstraction_api.c ****         vSemaphoreDelete((SemaphoreHandle_t )temp_semaphore_handle);
 1508              		.loc 1 1244 0
 1509 0020 04009DE5 		ldr	r0, [sp, #4]
 1510              	.LVL141:
 1511 0024 FEFFFFEB 		bl	vQueueDelete
 1512              	.LVL142:
 1513              	.LBE14:
1245:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1246:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1514              		.loc 1 1246 0
 1515 0028 0CD08DE2 		add	sp, sp, #12
 1516              		.cfi_def_cfa_offset 4
 1517              		@ sp needed
 1518 002c 04F09DE4 		ldr	pc, [sp], #4
 1519              		.cfi_endproc
 1520              	.LFE36:
 1522              		.section	.text.R_OS_SemaphoreWait,"ax",%progbits
 1523              		.align	2
 1524              		.global	R_OS_SemaphoreWait
 1525              		.syntax unified
 1526              		.arm
 1527              		.fpu neon
 1529              	R_OS_SemaphoreWait:
 1530              	.LFB37:
1247:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1248:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_SemaphoreDelete
1249:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1250:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1251:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1252:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_SemaphoreWait
1253:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Blocks operation until one of the following occurs:
1254:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *              :        A timeout occurs
1255:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *              :     The associated semaphore has been set
1256:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : p_semaphore - Pointer to a associated semaphore
1257:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *              : timeout       - Maximum time to wait for associated event to occur
1258:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : The function returns TRUE if the semaphore object was successfully set. Otherwise
1259:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1260:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_SemaphoreWait (p_semaphore_t p_semaphore, systime_t timeout)
1261:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1531              		.loc 1 1261 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 8
 1534              		@ frame_needed = 0, uses_anonymous_args = 0
 1535              	.LVL143:
1262:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret = false;
1263:../generate/os_abstraction/src/r_os_abstraction_api.c ****     TickType_t ticks_to_wait;
1264:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1265:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Check that there is a non zero handle to the semaphore. */
1266:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (0 != ( *p_semaphore))
 1536              		.loc 1 1266 0
 1537 0000 000090E5 		ldr	r0, [r0]
 1538              	.LVL144:
 1539 0004 000050E3 		cmp	r0, #0
 1540 0008 1500000A 		beq	.L158
1261:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret = false;
 1541              		.loc 1 1261 0
 1542 000c 04E02DE5 		str	lr, [sp, #-4]!
 1543              		.cfi_def_cfa_offset 4
 1544              		.cfi_offset 14, -4
 1545 0010 0CD04DE2 		sub	sp, sp, #12
 1546              		.cfi_def_cfa_offset 16
 1547              	.LVL145:
1267:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1268:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* If timeout has reached infinite delay value*/
1269:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (R_OS_ABSTRACTION_EV_WAIT_INFINITE == timeout)
1270:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1271:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Cast to uint32_t from tick type*/
1272:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ticks_to_wait = portMAX_DELAY;
1273:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1274:../generate/os_abstraction/src/r_os_abstraction_api.c ****         else
1275:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1276:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ticks_to_wait = R_OS_MS_TO_SYSTICKS(timeout);
1277:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1278:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1279:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Check if we are in an ISR */
1280:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (ulPortInterruptNesting)
 1548              		.loc 1 1280 0
 1549 0014 003000E3 		movw	r3, #:lower16:ulPortInterruptNesting
 1550 0018 003040E3 		movt	r3, #:upper16:ulPortInterruptNesting
 1551 001c 003093E5 		ldr	r3, [r3]
 1552 0020 000053E3 		cmp	r3, #0
 1553 0024 0900000A 		beq	.L156
 1554              	.LBB15:
1281:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1282:../generate/os_abstraction/src/r_os_abstraction_api.c ****             BaseType_t dummy_variable;
1283:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1284:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* cast semaphore_t used by OS abstraction to SemaphoreHandle_t used by FreeRTOS */
1285:../generate/os_abstraction/src/r_os_abstraction_api.c ****             if (xSemaphoreTakeFromISR((SemaphoreHandle_t) (*p_semaphore), &dummy_variable) == pdTRU
 1555              		.loc 1 1285 0
 1556 0028 04208DE2 		add	r2, sp, #4
 1557 002c 0010A0E3 		mov	r1, #0
 1558              	.LVL146:
 1559 0030 FEFFFFEB 		bl	xQueueReceiveFromISR
 1560              	.LVL147:
 1561 0034 010050E3 		cmp	r0, #1
 1562 0038 0200000A 		beq	.L159
 1563              	.LBE15:
1262:../generate/os_abstraction/src/r_os_abstraction_api.c ****     TickType_t ticks_to_wait;
 1564              		.loc 1 1262 0
 1565 003c 0000A0E3 		mov	r0, #0
 1566              	.LVL148:
 1567              	.L153:
1286:../generate/os_abstraction/src/r_os_abstraction_api.c ****             {
1287:../generate/os_abstraction/src/r_os_abstraction_api.c ****                 ret = true;
1288:../generate/os_abstraction/src/r_os_abstraction_api.c ****             }
1289:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1290:../generate/os_abstraction/src/r_os_abstraction_api.c ****         else
1291:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1292:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* cast semaphore_t used by OS abstraction to SemaphoreHandle_t used by FreeRTOS */
1293:../generate/os_abstraction/src/r_os_abstraction_api.c ****             if (xSemaphoreTake((SemaphoreHandle_t) (*p_semaphore), ticks_to_wait) == pdTRUE)
1294:../generate/os_abstraction/src/r_os_abstraction_api.c ****             {
1295:../generate/os_abstraction/src/r_os_abstraction_api.c ****                 ret = true;
1296:../generate/os_abstraction/src/r_os_abstraction_api.c ****             }
1297:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1298:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1299:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1300:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ret);
1301:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1568              		.loc 1 1301 0
 1569 0040 0CD08DE2 		add	sp, sp, #12
 1570              		.cfi_remember_state
 1571              		.cfi_def_cfa_offset 4
 1572              		@ sp needed
 1573 0044 04F09DE4 		ldr	pc, [sp], #4
 1574              	.LVL149:
 1575              	.L159:
 1576              		.cfi_restore_state
 1577              	.LBB16:
1287:../generate/os_abstraction/src/r_os_abstraction_api.c ****             }
 1578              		.loc 1 1287 0
 1579 0048 0100A0E3 		mov	r0, #1
 1580              	.LVL150:
 1581 004c FBFFFFEA 		b	.L153
 1582              	.LVL151:
 1583              	.L156:
 1584              	.LBE16:
1293:../generate/os_abstraction/src/r_os_abstraction_api.c ****             {
 1585              		.loc 1 1293 0
 1586 0050 FEFFFFEB 		bl	xQueueSemaphoreTake
 1587              	.LVL152:
 1588 0054 010050E3 		cmp	r0, #1
 1589 0058 0300000A 		beq	.L160
1262:../generate/os_abstraction/src/r_os_abstraction_api.c ****     TickType_t ticks_to_wait;
 1590              		.loc 1 1262 0
 1591 005c 0000A0E3 		mov	r0, #0
 1592 0060 F6FFFFEA 		b	.L153
 1593              	.LVL153:
 1594              	.L158:
 1595              		.cfi_def_cfa_offset 0
 1596              		.cfi_restore 14
 1597 0064 0000A0E3 		mov	r0, #0
 1598 0068 1EFF2FE1 		bx	lr
 1599              	.LVL154:
 1600              	.L160:
 1601              		.cfi_def_cfa_offset 16
 1602              		.cfi_offset 14, -4
1295:../generate/os_abstraction/src/r_os_abstraction_api.c ****             }
 1603              		.loc 1 1295 0
 1604 006c 0100A0E3 		mov	r0, #1
 1605              	.LVL155:
1300:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1606              		.loc 1 1300 0
 1607 0070 F2FFFFEA 		b	.L153
 1608              		.cfi_endproc
 1609              	.LFE37:
 1611              		.section	.text.R_OS_SemaphoreRelease,"ax",%progbits
 1612              		.align	2
 1613              		.global	R_OS_SemaphoreRelease
 1614              		.syntax unified
 1615              		.arm
 1616              		.fpu neon
 1618              	R_OS_SemaphoreRelease:
 1619              	.LFB38:
1302:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1303:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_SemaphoreWait
1304:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1305:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1306:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1307:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_SemaphoreRelease
1308:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Release a semaphore, freeing freeing it to be used by another task
1309:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : semaphore_ptr - Pointer to a associated semaphore
1310:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
1311:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1312:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_SemaphoreRelease (p_semaphore_t p_semaphore)
1313:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1620              		.loc 1 1313 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 1624              	.LVL156:
1314:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Check that there is a non zero handle to the semaphore. */
1315:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (0 != ( *p_semaphore))
 1625              		.loc 1 1315 0
 1626 0000 000090E5 		ldr	r0, [r0]
 1627              	.LVL157:
 1628 0004 000050E3 		cmp	r0, #0
 1629 0008 1EFF2F01 		bxeq	lr
1313:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Check that there is a non zero handle to the semaphore. */
 1630              		.loc 1 1313 0
 1631 000c 10402DE9 		push	{r4, lr}
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 4, -8
 1634              		.cfi_offset 14, -4
1316:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1317:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Check if we are in an ISR */
1318:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (ulPortInterruptNesting)
 1635              		.loc 1 1318 0
 1636 0010 003000E3 		movw	r3, #:lower16:ulPortInterruptNesting
 1637 0014 003040E3 		movt	r3, #:upper16:ulPortInterruptNesting
 1638 0018 003093E5 		ldr	r3, [r3]
 1639 001c 000053E3 		cmp	r3, #0
 1640 0020 0400001A 		bne	.L172
1319:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1320:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* cast semaphore_t used by OS abstraction to SemaphoreHandle_t used by FreeRTOS */
1321:../generate/os_abstraction/src/r_os_abstraction_api.c ****             xSemaphoreGiveFromISR((SemaphoreHandle_t ) ( *p_semaphore), NULL);
1322:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1323:../generate/os_abstraction/src/r_os_abstraction_api.c ****         else
1324:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1325:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* cast semaphore_t used by OS abstraction to SemaphoreHandle_t used by FreeRTOS */
1326:../generate/os_abstraction/src/r_os_abstraction_api.c ****             xSemaphoreGive((SemaphoreHandle_t ) ( *p_semaphore));
 1641              		.loc 1 1326 0
 1642 0024 0030A0E3 		mov	r3, #0
 1643 0028 0320A0E1 		mov	r2, r3
 1644 002c 0310A0E1 		mov	r1, r3
 1645 0030 FEFFFFEB 		bl	xQueueGenericSend
 1646              	.LVL158:
 1647 0034 1080BDE8 		pop	{r4, pc}
 1648              	.L172:
1321:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 1649              		.loc 1 1321 0
 1650 0038 0010A0E3 		mov	r1, #0
 1651 003c FEFFFFEB 		bl	xQueueGiveFromISR
 1652              	.LVL159:
 1653 0040 1080BDE8 		pop	{r4, pc}
 1654              		.cfi_endproc
 1655              	.LFE38:
 1657              		.section	.text.R_OS_MutexCreate,"ax",%progbits
 1658              		.align	2
 1659              		.global	R_OS_MutexCreate
 1660              		.syntax unified
 1661              		.arm
 1662              		.fpu neon
 1664              	R_OS_MutexCreate:
 1665              	.LFB39:
1327:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1328:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1329:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1330:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1331:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_SemaphoreRelease
1332:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1333:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1334:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1335:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                                  Mutex API
1336:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1337:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1338:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1339:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_MutexCreate
1340:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Create a mutex
1341:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : None
1342:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : mutex - ptr to object
1343:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1344:../generate/os_abstraction/src/r_os_abstraction_api.c **** void *R_OS_MutexCreate (void)
1345:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1666              		.loc 1 1345 0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 0
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 1670 0000 10402DE9 		push	{r4, lr}
 1671              		.cfi_def_cfa_offset 8
 1672              		.cfi_offset 4, -8
 1673              		.cfi_offset 14, -4
1346:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* cast SemaphoreHandle_t used by FreeRTOS to void * used by OS abstraction */
1347:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return ((void *) xSemaphoreCreateMutex());
 1674              		.loc 1 1347 0
 1675 0004 0100A0E3 		mov	r0, #1
 1676 0008 FEFFFFEB 		bl	xQueueCreateMutex
 1677              	.LVL160:
1348:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1678              		.loc 1 1348 0
 1679 000c 1080BDE8 		pop	{r4, pc}
 1680              		.cfi_endproc
 1681              	.LFE39:
 1683              		.section	.text.R_OS_MutexDelete,"ax",%progbits
 1684              		.align	2
 1685              		.global	R_OS_MutexDelete
 1686              		.syntax unified
 1687              		.arm
 1688              		.fpu neon
 1690              	R_OS_MutexDelete:
 1691              	.LFB40:
1349:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1350:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_MutexCreate
1351:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1352:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1353:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1354:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_MutexDelete
1355:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Delete mutex
1356:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pp_mutex - ptr to mutex object
1357:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
1358:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1359:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_MutexDelete (pp_mutex_t pp_mutex)
1360:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1692              		.loc 1 1360 0
 1693              		.cfi_startproc
 1694              		@ args = 0, pretend = 0, frame = 0
 1695              		@ frame_needed = 0, uses_anonymous_args = 0
 1696              	.LVL161:
 1697 0000 10402DE9 		push	{r4, lr}
 1698              		.cfi_def_cfa_offset 8
 1699              		.cfi_offset 4, -8
 1700              		.cfi_offset 14, -4
 1701 0004 0040A0E1 		mov	r4, r0
1361:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* cast void * used by OS abstraction to SemaphoreHandle_t used by FreeRTOS */
1362:../generate/os_abstraction/src/r_os_abstraction_api.c ****     vSemaphoreDelete((SemaphoreHandle_t ) *pp_mutex);
 1702              		.loc 1 1362 0
 1703 0008 000090E5 		ldr	r0, [r0]
 1704              	.LVL162:
 1705 000c FEFFFFEB 		bl	vQueueDelete
 1706              	.LVL163:
1363:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1364:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Set NULL as Deleted */
1365:../generate/os_abstraction/src/r_os_abstraction_api.c ****     *pp_mutex = NULL;
 1707              		.loc 1 1365 0
 1708 0010 0030A0E3 		mov	r3, #0
 1709 0014 003084E5 		str	r3, [r4]
 1710 0018 1080BDE8 		pop	{r4, pc}
 1711              		.cfi_endproc
 1712              	.LFE40:
 1714              		.section	.text.R_OS_MutexAcquire,"ax",%progbits
 1715              		.align	2
 1716              		.global	R_OS_MutexAcquire
 1717              		.syntax unified
 1718              		.arm
 1719              		.fpu neon
 1721              	R_OS_MutexAcquire:
 1722              	.LFB41:
1366:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1367:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1368:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_MutexDelete
1369:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1370:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1371:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1372:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_MutexAcquire
1373:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Acquire the mutex, waiting indefinitely if need be
1374:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : p_mutex - pointer to object
1375:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
1376:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1377:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_MutexAcquire (p_mutex_t p_mutex)
1378:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1723              		.loc 1 1378 0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 0
 1726              		@ frame_needed = 0, uses_anonymous_args = 0
 1727              	.LVL164:
 1728 0000 10402DE9 		push	{r4, lr}
 1729              		.cfi_def_cfa_offset 8
 1730              		.cfi_offset 4, -8
 1731              		.cfi_offset 14, -4
1379:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Obtain ownership of the mutex object */
1380:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* cast void * used by OS abstraction to SemaphoreHandle_t used by FreeRTOS */
1381:../generate/os_abstraction/src/r_os_abstraction_api.c ****     xSemaphoreTake((SemaphoreHandle_t ) p_mutex, portMAX_DELAY);
 1732              		.loc 1 1381 0
 1733 0004 0010E0E3 		mvn	r1, #0
 1734 0008 FEFFFFEB 		bl	xQueueSemaphoreTake
 1735              	.LVL165:
 1736 000c 1080BDE8 		pop	{r4, pc}
 1737              		.cfi_endproc
 1738              	.LFE41:
 1740              		.section	.text.R_OS_MutexRelease,"ax",%progbits
 1741              		.align	2
 1742              		.global	R_OS_MutexRelease
 1743              		.syntax unified
 1744              		.arm
 1745              		.fpu neon
 1747              	R_OS_MutexRelease:
 1748              	.LFB42:
1382:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1383:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1384:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_MutexAcquire
1385:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1386:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1387:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1388:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_MutexRelease
1389:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : This primitive function is specific for os_less applications
1390:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : p_mutex - ptr to object
1391:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
1392:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1393:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_MutexRelease (p_mutex_t p_mutex)
1394:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1749              		.loc 1 1394 0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 0
 1752              		@ frame_needed = 0, uses_anonymous_args = 0
 1753              	.LVL166:
 1754 0000 10402DE9 		push	{r4, lr}
 1755              		.cfi_def_cfa_offset 8
 1756              		.cfi_offset 4, -8
 1757              		.cfi_offset 14, -4
1395:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Release ownership of the mutex object */
1396:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* cast void * used by OS abstraction to SemaphoreHandle_t used by FreeRTOS */
1397:../generate/os_abstraction/src/r_os_abstraction_api.c ****     xSemaphoreGive((SemaphoreHandle_t ) p_mutex);
 1758              		.loc 1 1397 0
 1759 0004 0030A0E3 		mov	r3, #0
 1760 0008 0320A0E1 		mov	r2, r3
 1761 000c 0310A0E1 		mov	r1, r3
 1762 0010 FEFFFFEB 		bl	xQueueGenericSend
 1763              	.LVL167:
 1764 0014 1080BDE8 		pop	{r4, pc}
 1765              		.cfi_endproc
 1766              	.LFE42:
 1768              		.section	.text.R_OS_MutexWait,"ax",%progbits
 1769              		.align	2
 1770              		.global	R_OS_MutexWait
 1771              		.syntax unified
 1772              		.arm
 1773              		.fpu neon
 1775              	R_OS_MutexWait:
 1776              	.LFB43:
1398:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1399:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1400:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_MutexRelease
1401:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1402:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1403:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1404:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_MutexWait
1405:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Creates a mutex if NULL object handle given.
1406:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                If a valid mutex object given, try acquire mutex for time of length timeout.
1407:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                If mutex acquired, return true, otherwise timeout is reached and returns false.
1408:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pp_mutex - object to lock
1409:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                time_out - wait time, maximum use R_OS_ABSTRACTION_EV_WAIT_INFINITE
1410:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : true if the mutex was acquired, false if not
1411:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1412:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_MutexWait (pp_mutex_t pp_mutex, uint32_t time_out)
1413:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1777              		.loc 1 1413 0
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 0
 1780              		@ frame_needed = 0, uses_anonymous_args = 0
 1781              	.LVL168:
 1782 0000 70402DE9 		push	{r4, r5, r6, lr}
 1783              		.cfi_def_cfa_offset 16
 1784              		.cfi_offset 4, -16
 1785              		.cfi_offset 5, -12
 1786              		.cfi_offset 6, -8
 1787              		.cfi_offset 14, -4
 1788 0004 0040A0E1 		mov	r4, r0
 1789 0008 0150A0E1 		mov	r5, r1
 1790              	.LVL169:
1414:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret_val = false;
1415:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1416:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Check to see if it is pointing to NULL */
1417:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (NULL == ( *pp_mutex))
 1791              		.loc 1 1417 0
 1792 000c 003090E5 		ldr	r3, [r0]
 1793 0010 000053E3 		cmp	r3, #0
 1794 0014 0800000A 		beq	.L189
 1795              	.LVL170:
 1796              	.L182:
1418:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1419:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Create the mutex */
1420:../generate/os_abstraction/src/r_os_abstraction_api.c ****         *pp_mutex = xSemaphoreCreateMutex();
1421:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1422:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1423:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Check that the mutex was created */
1424:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (NULL != ( *pp_mutex))
 1797              		.loc 1 1424 0
 1798 0018 000094E5 		ldr	r0, [r4]
 1799 001c 000050E3 		cmp	r0, #0
 1800 0020 0A00000A 		beq	.L185
1425:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1426:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (R_OS_ABSTRACTION_EV_WAIT_INFINITE == time_out)
1427:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1428:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /*Cast to uint32_t from tick type*/
1429:../generate/os_abstraction/src/r_os_abstraction_api.c ****             time_out = portMAX_DELAY;
1430:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1431:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1432:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Try Get mutex */
1433:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (xSemaphoreTake(( *pp_mutex), time_out))
 1801              		.loc 1 1433 0
 1802 0024 0510A0E1 		mov	r1, r5
 1803 0028 FEFFFFEB 		bl	xQueueSemaphoreTake
 1804              	.LVL171:
 1805 002c 000050E3 		cmp	r0, #0
 1806 0030 0500000A 		beq	.L190
1434:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1435:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret_val = true;
 1807              		.loc 1 1435 0
 1808 0034 0100A0E3 		mov	r0, #1
 1809              	.LVL172:
1436:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1437:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1438:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1439:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ret_val);
1440:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1810              		.loc 1 1440 0
 1811 0038 7080BDE8 		pop	{r4, r5, r6, pc}
 1812              	.LVL173:
 1813              	.L189:
1420:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 1814              		.loc 1 1420 0
 1815 003c 0100A0E3 		mov	r0, #1
 1816              	.LVL174:
 1817 0040 FEFFFFEB 		bl	xQueueCreateMutex
 1818              	.LVL175:
 1819 0044 000084E5 		str	r0, [r4]
 1820 0048 F2FFFFEA 		b	.L182
 1821              	.L190:
 1822 004c 7080BDE8 		pop	{r4, r5, r6, pc}
 1823              	.L185:
1414:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1824              		.loc 1 1414 0
 1825 0050 0000A0E3 		mov	r0, #0
 1826 0054 7080BDE8 		pop	{r4, r5, r6, pc}
 1827              		.cfi_endproc
 1828              	.LFE43:
 1830              		.section	.text.R_OS_EnterCritical,"ax",%progbits
 1831              		.align	2
 1832              		.global	R_OS_EnterCritical
 1833              		.syntax unified
 1834              		.arm
 1835              		.fpu neon
 1837              	R_OS_EnterCritical:
 1838              	.LFB44:
1441:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1442:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_MutexWait
1443:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1444:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1445:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1446:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_EnterCritical
1447:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Enter critical section
1448:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : None
1449:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : None
1450:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1451:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_EnterCritical (void)
1452:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1839              		.loc 1 1452 0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 0
 1842              		@ frame_needed = 0, uses_anonymous_args = 0
 1843 0000 10402DE9 		push	{r4, lr}
 1844              		.cfi_def_cfa_offset 8
 1845              		.cfi_offset 4, -8
 1846              		.cfi_offset 14, -4
1453:../generate/os_abstraction/src/r_os_abstraction_api.c ****     taskENTER_CRITICAL()
 1847              		.loc 1 1453 0
 1848 0004 FEFFFFEB 		bl	vPortEnterCritical
 1849              	.LVL176:
 1850 0008 1080BDE8 		pop	{r4, pc}
 1851              		.cfi_endproc
 1852              	.LFE44:
 1854              		.section	.text.R_OS_ExitCritical,"ax",%progbits
 1855              		.align	2
 1856              		.global	R_OS_ExitCritical
 1857              		.syntax unified
 1858              		.arm
 1859              		.fpu neon
 1861              	R_OS_ExitCritical:
 1862              	.LFB45:
1454:../generate/os_abstraction/src/r_os_abstraction_api.c ****     ;
1455:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1456:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1457:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_EnterCritical
1458:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1459:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1460:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1461:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_ExitCritical
1462:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Exit critical section
1463:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : None
1464:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : None
1465:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1466:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_ExitCritical (void)
1467:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1863              		.loc 1 1467 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 0
 1866              		@ frame_needed = 0, uses_anonymous_args = 0
 1867 0000 10402DE9 		push	{r4, lr}
 1868              		.cfi_def_cfa_offset 8
 1869              		.cfi_offset 4, -8
 1870              		.cfi_offset 14, -4
1468:../generate/os_abstraction/src/r_os_abstraction_api.c ****     taskEXIT_CRITICAL()
 1871              		.loc 1 1468 0
 1872 0004 FEFFFFEB 		bl	vPortExitCritical
 1873              	.LVL177:
 1874 0008 1080BDE8 		pop	{r4, pc}
 1875              		.cfi_endproc
 1876              	.LFE45:
 1878              		.section	.text.R_OS_MessageQueueCreate,"ax",%progbits
 1879              		.align	2
 1880              		.global	R_OS_MessageQueueCreate
 1881              		.syntax unified
 1882              		.arm
 1883              		.fpu neon
 1885              	R_OS_MessageQueueCreate:
 1886              	.LFB46:
1469:../generate/os_abstraction/src/r_os_abstraction_api.c ****     ;
1470:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1471:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1472:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_ExitCritical
1473:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1474:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1475:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1476:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                                  Message Queue API
1477:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1478:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1479:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1480:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_MessageQueueCreate
1481:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Create an Message Queue.
1482:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : queue_sz - Maximum number of elements in queue.
1483:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                pp_queue_handle - pointer to queue handle pointer.
1484:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : The function returns TRUE if the message queue was successfully created.
1485:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                Otherwise, FALSE is returned.
1486:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1487:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_MessageQueueCreate (p_os_msg_queue_handle_t *pp_queue_handle, uint32_t queue_sz)
1488:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1887              		.loc 1 1488 0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 0, uses_anonymous_args = 0
 1891              	.LVL178:
 1892 0000 10402DE9 		push	{r4, lr}
 1893              		.cfi_def_cfa_offset 8
 1894              		.cfi_offset 4, -8
 1895              		.cfi_offset 14, -4
 1896 0004 0040A0E1 		mov	r4, r0
 1897 0008 0100A0E1 		mov	r0, r1
 1898              	.LVL179:
1489:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret_value = false;
1490:../generate/os_abstraction/src/r_os_abstraction_api.c ****     p_os_msg_queue_handle_t *p_queue_temp;
1491:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1492:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Create queue with size of os_msg_t struct which points to message */
1493:../generate/os_abstraction/src/r_os_abstraction_api.c ****     p_queue_temp = (p_os_msg_queue_handle_t *) xQueueCreate(queue_sz, sizeof(p_os_msg_t));
 1899              		.loc 1 1493 0
 1900 000c 0020A0E3 		mov	r2, #0
 1901 0010 0410A0E3 		mov	r1, #4
 1902              	.LVL180:
 1903 0014 FEFFFFEB 		bl	xQueueGenericCreate
 1904              	.LVL181:
1494:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1495:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* test for valid response before confirming correct create */
1496:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (NULL != p_queue_temp)
 1905              		.loc 1 1496 0
 1906 0018 000050E3 		cmp	r0, #0
 1907 001c 0200000A 		beq	.L197
1497:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1498:../generate/os_abstraction/src/r_os_abstraction_api.c ****         *pp_queue_handle = p_queue_temp;
 1908              		.loc 1 1498 0
 1909 0020 000084E5 		str	r0, [r4]
 1910              	.LVL182:
1499:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ret_value = true;
 1911              		.loc 1 1499 0
 1912 0024 0100A0E3 		mov	r0, #1
 1913              	.LVL183:
 1914 0028 1080BDE8 		pop	{r4, pc}
 1915              	.LVL184:
 1916              	.L197:
1489:../generate/os_abstraction/src/r_os_abstraction_api.c ****     p_os_msg_queue_handle_t *p_queue_temp;
 1917              		.loc 1 1489 0
 1918 002c 0000A0E3 		mov	r0, #0
 1919              	.LVL185:
1500:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1501:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1502:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ret_value);
1503:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1920              		.loc 1 1503 0
 1921 0030 1080BDE8 		pop	{r4, pc}
 1922              		.cfi_endproc
 1923              	.LFE46:
 1925              		.section	.text.R_OS_MessageQueuePut,"ax",%progbits
 1926              		.align	2
 1927              		.global	R_OS_MessageQueuePut
 1928              		.syntax unified
 1929              		.arm
 1930              		.fpu neon
 1932              	R_OS_MessageQueuePut:
 1933              	.LFB47:
1504:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1505:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_MessageQueueCreate
1506:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1507:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1508:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1509:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_MessageQueuePut
1510:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Put a message onto a queue.
1511:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : p_queue_handle - pointer to queue handle.
1512:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                p_message - pointer to message.
1513:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : The function returns TRUE if the event object was successfully added to the queue
1514:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                FALSE is returned
1515:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1516:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_MessageQueuePut (p_os_msg_queue_handle_t p_queue_handle, p_os_msg_t p_message)
1517:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 1934              		.loc 1 1517 0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 8
 1937              		@ frame_needed = 0, uses_anonymous_args = 0
 1938              	.LVL186:
 1939 0000 04E02DE5 		str	lr, [sp, #-4]!
 1940              		.cfi_def_cfa_offset 4
 1941              		.cfi_offset 14, -4
 1942 0004 0CD04DE2 		sub	sp, sp, #12
 1943              		.cfi_def_cfa_offset 16
 1944 0008 04108DE5 		str	r1, [sp, #4]
 1945              	.LVL187:
1518:../generate/os_abstraction/src/r_os_abstraction_api.c ****     int32_t freertos_ret_value;
1519:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret_value = false;
1520:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1521:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* return failed if queue handle pointer is NULL */
1522:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (NULL != p_queue_handle)
 1946              		.loc 1 1522 0
 1947 000c 000050E3 		cmp	r0, #0
 1948 0010 1200000A 		beq	.L203
1523:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1524:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Check if we are in an ISR */
1525:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (ulPortInterruptNesting)
 1949              		.loc 1 1525 0
 1950 0014 003000E3 		movw	r3, #:lower16:ulPortInterruptNesting
 1951 0018 003040E3 		movt	r3, #:upper16:ulPortInterruptNesting
 1952 001c 003093E5 		ldr	r3, [r3]
 1953 0020 000053E3 		cmp	r3, #0
 1954 0024 0800000A 		beq	.L201
1526:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1527:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* casts to xQueueHandle and void **/
1528:../generate/os_abstraction/src/r_os_abstraction_api.c ****             freertos_ret_value = xQueueSendFromISR((xQueueHandle)p_queue_handle, (void * ) &p_messa
 1955              		.loc 1 1528 0
 1956 0028 0030A0E3 		mov	r3, #0
 1957 002c 0320A0E1 		mov	r2, r3
 1958 0030 04108DE2 		add	r1, sp, #4
 1959              	.LVL188:
 1960 0034 FEFFFFEB 		bl	xQueueGenericSendFromISR
 1961              	.LVL189:
 1962              	.L202:
1529:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1530:../generate/os_abstraction/src/r_os_abstraction_api.c ****         else
1531:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1532:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* casts to xQueueHandle and void * */
1533:../generate/os_abstraction/src/r_os_abstraction_api.c ****             freertos_ret_value = xQueueSend((xQueueHandle)p_queue_handle, (void * ) &p_message, 0UL
1534:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1535:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1536:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* check for failure of operation */
1537:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (pdPASS != freertos_ret_value)
 1963              		.loc 1 1537 0
 1964 0038 010050E3 		cmp	r0, #1
 1965 003c 0900000A 		beq	.L204
1538:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1539:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret_value = false;
 1966              		.loc 1 1539 0
 1967 0040 0000A0E3 		mov	r0, #0
 1968              	.LVL190:
 1969              	.L199:
1540:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1541:../generate/os_abstraction/src/r_os_abstraction_api.c ****         else
1542:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1543:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret_value = true;
1544:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1545:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1546:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1547:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* return status */
1548:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ret_value);
1549:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1970              		.loc 1 1549 0
 1971 0044 0CD08DE2 		add	sp, sp, #12
 1972              		.cfi_remember_state
 1973              		.cfi_def_cfa_offset 4
 1974              		@ sp needed
 1975 0048 04F09DE4 		ldr	pc, [sp], #4
 1976              	.LVL191:
 1977              	.L201:
 1978              		.cfi_restore_state
1533:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 1979              		.loc 1 1533 0
 1980 004c 0030A0E3 		mov	r3, #0
 1981 0050 0320A0E1 		mov	r2, r3
 1982 0054 04108DE2 		add	r1, sp, #4
 1983              	.LVL192:
 1984 0058 FEFFFFEB 		bl	xQueueGenericSend
 1985              	.LVL193:
 1986 005c F5FFFFEA 		b	.L202
 1987              	.LVL194:
 1988              	.L203:
1519:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 1989              		.loc 1 1519 0
 1990 0060 0000A0E3 		mov	r0, #0
 1991              	.LVL195:
 1992 0064 F6FFFFEA 		b	.L199
 1993              	.LVL196:
 1994              	.L204:
1543:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
 1995              		.loc 1 1543 0
 1996 0068 0100A0E3 		mov	r0, #1
 1997              	.LVL197:
1548:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 1998              		.loc 1 1548 0
 1999 006c F4FFFFEA 		b	.L199
 2000              		.cfi_endproc
 2001              	.LFE47:
 2003              		.section	.text.R_OS_MessageQueueGet,"ax",%progbits
 2004              		.align	2
 2005              		.global	R_OS_MessageQueueGet
 2006              		.syntax unified
 2007              		.arm
 2008              		.fpu neon
 2010              	R_OS_MessageQueueGet:
 2011              	.LFB48:
1550:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1551:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_MessageQueuePut
1552:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1553:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1554:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1555:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_MessageQueueGet
1556:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Get a message from a queue.
1557:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : p_queue_handle - pointer to queue handle
1558:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                pp_msg pointer - Pointer will point to NULL if no message and times out.
1559:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                timeout - in system ticks.
1560:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                blocking true = block thread/task until message received.False = not blocking
1561:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : The function returns TRUE if the event object was successfully retrieved from the
1562:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                Otherwise, FALSE is returned
1563:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1564:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_MessageQueueGet (p_os_msg_queue_handle_t p_queue, p_os_msg_t *pp_msg, uint32_t timeout,
1565:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2012              		.loc 1 1565 0
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
 2016              	.LVL198:
1566:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* set default timeout to be OS max */
1567:../generate/os_abstraction/src/r_os_abstraction_api.c ****     uint32_t ticks_to_wait = portMAX_DELAY;
1568:../generate/os_abstraction/src/r_os_abstraction_api.c ****     bool_t ret_value = false;
1569:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1570:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* ensure that pointers are not NULL before proceeding */
1571:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if ((NULL != p_queue) && (NULL != pp_msg))
 2017              		.loc 1 1571 0
 2018 0000 000050E3 		cmp	r0, #0
 2019 0004 00005113 		cmpne	r1, #0
 2020 0008 1500000A 		beq	.L211
1565:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* set default timeout to be OS max */
 2021              		.loc 1 1565 0
 2022 000c F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 2023              		.cfi_def_cfa_offset 24
 2024              		.cfi_offset 4, -24
 2025              		.cfi_offset 5, -20
 2026              		.cfi_offset 6, -16
 2027              		.cfi_offset 7, -12
 2028              		.cfi_offset 8, -8
 2029              		.cfi_offset 14, -4
 2030 0010 0240A0E1 		mov	r4, r2
 2031 0014 0370A0E1 		mov	r7, r3
 2032 0018 0060A0E1 		mov	r6, r0
 2033 001c 0150A0E1 		mov	r5, r1
 2034              	.LVL199:
1572:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1573:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* handle max timeout */
1574:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (R_OS_ABSTRACTION_EV_WAIT_INFINITE != timeout)
1575:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1576:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ticks_to_wait = R_OS_MS_TO_SYSTICKS(timeout);
1577:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1578:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1579:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (false == blocking)
 2035              		.loc 1 1579 0
 2036 0020 000053E3 		cmp	r3, #0
 2037 0024 0700001A 		bne	.L209
1580:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1581:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Receive check is not task-blocking */
1582:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Receive with time-out. Cast to xQueueHandle */
1583:../generate/os_abstraction/src/r_os_abstraction_api.c ****             if (pdPASS == xQueueReceive((xQueueHandle) p_queue, (void *) (pp_msg), ticks_to_wait / 
 2038              		.loc 1 1583 0
 2039 0028 FEFFFFEB 		bl	xQueueReceive
 2040              	.LVL200:
 2041 002c 010050E3 		cmp	r0, #1
 2042 0030 0D00000A 		beq	.L212
1584:../generate/os_abstraction/src/r_os_abstraction_api.c ****             {
1585:../generate/os_abstraction/src/r_os_abstraction_api.c ****                 ret_value = true;
1586:../generate/os_abstraction/src/r_os_abstraction_api.c ****             }
1587:../generate/os_abstraction/src/r_os_abstraction_api.c ****             else
1588:../generate/os_abstraction/src/r_os_abstraction_api.c ****             {
1589:../generate/os_abstraction/src/r_os_abstraction_api.c ****                 /* timed out - report failure */
1590:../generate/os_abstraction/src/r_os_abstraction_api.c ****                 *pp_msg = NULL;
 2043              		.loc 1 1590 0
 2044 0034 0030A0E3 		mov	r3, #0
 2045 0038 003085E5 		str	r3, [r5]
1568:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 2046              		.loc 1 1568 0
 2047 003c 0700A0E1 		mov	r0, r7
 2048 0040 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 2049              	.L210:
1591:../generate/os_abstraction/src/r_os_abstraction_api.c ****             }
1592:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1593:../generate/os_abstraction/src/r_os_abstraction_api.c ****         else
1594:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1595:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Receive check is task-blocking */
1596:../generate/os_abstraction/src/r_os_abstraction_api.c ****             /* Receive with time-out. Cast to xQueueHandle */
1597:../generate/os_abstraction/src/r_os_abstraction_api.c ****             while (pdPASS !=
1598:../generate/os_abstraction/src/r_os_abstraction_api.c ****                     xQueueReceive((xQueueHandle) p_queue, (void *) (pp_msg), ticks_to_wait / portTI
1599:../generate/os_abstraction/src/r_os_abstraction_api.c ****             {
1600:../generate/os_abstraction/src/r_os_abstraction_api.c ****                 taskYIELD()
 2050              		.loc 1 1600 0
 2051              		.syntax divided
 2052              	@ 1600 "../generate/os_abstraction/src/r_os_abstraction_api.c" 1
 2053 0044 000000EF 		SWI 0
 2054              	@ 0 "" 2
 2055              		.arm
 2056              		.syntax unified
 2057              	.L209:
1598:../generate/os_abstraction/src/r_os_abstraction_api.c ****             {
 2058              		.loc 1 1598 0
 2059 0048 0420A0E1 		mov	r2, r4
 2060 004c 0510A0E1 		mov	r1, r5
 2061 0050 0600A0E1 		mov	r0, r6
 2062 0054 FEFFFFEB 		bl	xQueueReceive
 2063              	.LVL201:
1597:../generate/os_abstraction/src/r_os_abstraction_api.c ****                     xQueueReceive((xQueueHandle) p_queue, (void *) (pp_msg), ticks_to_wait / portTI
 2064              		.loc 1 1597 0
 2065 0058 010050E3 		cmp	r0, #1
 2066 005c F8FFFF1A 		bne	.L210
 2067 0060 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 2068              	.LVL202:
 2069              	.L211:
 2070              		.cfi_def_cfa_offset 0
 2071              		.cfi_restore 4
 2072              		.cfi_restore 5
 2073              		.cfi_restore 6
 2074              		.cfi_restore 7
 2075              		.cfi_restore 8
 2076              		.cfi_restore 14
1568:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
 2077              		.loc 1 1568 0
 2078 0064 0000A0E3 		mov	r0, #0
 2079              	.LVL203:
 2080 0068 1EFF2FE1 		bx	lr
 2081              	.LVL204:
 2082              	.L212:
 2083              		.cfi_def_cfa_offset 24
 2084              		.cfi_offset 4, -24
 2085              		.cfi_offset 5, -20
 2086              		.cfi_offset 6, -16
 2087              		.cfi_offset 7, -12
 2088              		.cfi_offset 8, -8
 2089              		.cfi_offset 14, -4
1585:../generate/os_abstraction/src/r_os_abstraction_api.c ****             }
 2090              		.loc 1 1585 0
 2091 006c 0100A0E3 		mov	r0, #1
 2092              	.LVL205:
1601:../generate/os_abstraction/src/r_os_abstraction_api.c ****                 ;
1602:../generate/os_abstraction/src/r_os_abstraction_api.c ****             }
1603:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1604:../generate/os_abstraction/src/r_os_abstraction_api.c ****             ret_value = true;
1605:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1606:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1607:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1608:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* return status */
1609:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ret_value);
1610:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 2093              		.loc 1 1610 0
 2094 0070 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 2095              		.cfi_endproc
 2096              	.LFE48:
 2098              		.section	.text.R_OS_MessageQueueClear,"ax",%progbits
 2099              		.align	2
 2100              		.global	R_OS_MessageQueueClear
 2101              		.syntax unified
 2102              		.arm
 2103              		.fpu neon
 2105              	R_OS_MessageQueueClear:
 2106              	.LFB49:
1611:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1612:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_MessageQueueGet
1613:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1614:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1615:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1616:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_MessageQueueClear
1617:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Clear a message queue.
1618:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : p_queue_handle - pointer to queue handle.
1619:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : The function returns TRUE if the event object was successfully cleared. Otherwise
1620:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1621:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_MessageQueueClear (p_os_msg_queue_handle_t p_queue_handle)
1622:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2107              		.loc 1 1622 0
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 0
 2110              		@ frame_needed = 0, uses_anonymous_args = 0
 2111              	.LVL206:
1623:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* ensure that queue handle is valid */
1624:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (NULL != p_queue_handle)
 2112              		.loc 1 1624 0
 2113 0000 000050E3 		cmp	r0, #0
 2114 0004 0400000A 		beq	.L219
1622:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* ensure that queue handle is valid */
 2115              		.loc 1 1622 0
 2116 0008 10402DE9 		push	{r4, lr}
 2117              		.cfi_def_cfa_offset 8
 2118              		.cfi_offset 4, -8
 2119              		.cfi_offset 14, -4
1625:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1626:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* cast to xQueueHandle */
1627:../generate/os_abstraction/src/r_os_abstraction_api.c ****         xQueueReset((xQueueHandle) p_queue_handle);
 2120              		.loc 1 1627 0
 2121 000c 0010A0E3 		mov	r1, #0
 2122 0010 FEFFFFEB 		bl	xQueueGenericReset
 2123              	.LVL207:
1628:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1629:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* freeRTOS always returns true */
1630:../generate/os_abstraction/src/r_os_abstraction_api.c ****         return (true);
 2124              		.loc 1 1630 0
 2125 0014 0100A0E3 		mov	r0, #1
 2126 0018 1080BDE8 		pop	{r4, pc}
 2127              	.LVL208:
 2128              	.L219:
 2129              		.cfi_def_cfa_offset 0
 2130              		.cfi_restore 4
 2131              		.cfi_restore 14
1631:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1632:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1633:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* NULL queue pointer as argument */
1634:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (false);
 2132              		.loc 1 1634 0
 2133 001c 0000A0E3 		mov	r0, #0
 2134              	.LVL209:
 2135 0020 1EFF2FE1 		bx	lr
 2136              		.cfi_endproc
 2137              	.LFE49:
 2139              		.section	.text.R_OS_MessageQueueDelete,"ax",%progbits
 2140              		.align	2
 2141              		.global	R_OS_MessageQueueDelete
 2142              		.syntax unified
 2143              		.arm
 2144              		.fpu neon
 2146              	R_OS_MessageQueueDelete:
 2147              	.LFB50:
1635:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1636:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1637:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_MessageQueueClear
1638:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1639:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1640:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1641:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_MessageQueueDelete
1642:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Delete a message queue. The message queue pointer argument will be set to NULL.
1643:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pp_queue_handle - pointer to queue handle pointer.
1644:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : The function returns TRUE if the event object was successfully deleted. Otherwise
1645:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1646:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_MessageQueueDelete (p_os_msg_queue_handle_t *pp_queue_handle)
1647:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2148              		.loc 1 1647 0
 2149              		.cfi_startproc
 2150              		@ args = 0, pretend = 0, frame = 0
 2151              		@ frame_needed = 0, uses_anonymous_args = 0
 2152              	.LVL210:
 2153 0000 10402DE9 		push	{r4, lr}
 2154              		.cfi_def_cfa_offset 8
 2155              		.cfi_offset 4, -8
 2156              		.cfi_offset 14, -4
1648:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* ensure that queue handle is valid */
1649:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (NULL != pp_queue_handle)
 2157              		.loc 1 1649 0
 2158 0004 004050E2 		subs	r4, r0, #0
 2159 0008 0500000A 		beq	.L226
1650:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1651:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* delete queue structure */
1652:../generate/os_abstraction/src/r_os_abstraction_api.c ****         vQueueDelete((xQueueHandle) *pp_queue_handle);
 2160              		.loc 1 1652 0
 2161 000c 000094E5 		ldr	r0, [r4]
 2162              	.LVL211:
 2163 0010 FEFFFFEB 		bl	vQueueDelete
 2164              	.LVL212:
1653:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1654:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* set queue pointer to NULL */
1655:../generate/os_abstraction/src/r_os_abstraction_api.c ****         *pp_queue_handle = NULL;
 2165              		.loc 1 1655 0
 2166 0014 0030A0E3 		mov	r3, #0
 2167 0018 003084E5 		str	r3, [r4]
1656:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1657:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* freeRTOS always returns true */
1658:../generate/os_abstraction/src/r_os_abstraction_api.c ****         return (true);
 2168              		.loc 1 1658 0
 2169 001c 0100A0E3 		mov	r0, #1
 2170 0020 1080BDE8 		pop	{r4, pc}
 2171              	.LVL213:
 2172              	.L226:
1659:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1660:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1661:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* queue pointer is NULL to start with so nothing deleted */
1662:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (false);
 2173              		.loc 1 1662 0
 2174 0024 0000A0E3 		mov	r0, #0
 2175              	.LVL214:
1663:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 2176              		.loc 1 1663 0
 2177 0028 1080BDE8 		pop	{r4, pc}
 2178              		.cfi_endproc
 2179              	.LFE50:
 2181              		.section	.text.R_OS_EventCreate,"ax",%progbits
 2182              		.align	2
 2183              		.global	R_OS_EventCreate
 2184              		.syntax unified
 2185              		.arm
 2186              		.fpu neon
 2188              	R_OS_EventCreate:
 2189              	.LFB51:
1664:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1665:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_MessageQueueDelete
1666:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1667:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1668:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1669:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                                      Event API
1670:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1671:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1672:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_EventCreate
1673:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Create an event
1674:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pp_event - pointer to a associated event
1675:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : The function returns TRUE if the event object was successfully created. Otherwise
1676:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1677:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_EventCreate (pp_event_t pp_event)
1678:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2190              		.loc 1 1678 0
 2191              		.cfi_startproc
 2192              		@ args = 0, pretend = 0, frame = 0
 2193              		@ frame_needed = 0, uses_anonymous_args = 0
 2194              	.LVL215:
 2195 0000 70402DE9 		push	{r4, r5, r6, lr}
 2196              		.cfi_def_cfa_offset 16
 2197              		.cfi_offset 4, -16
 2198              		.cfi_offset 5, -12
 2199              		.cfi_offset 6, -8
 2200              		.cfi_offset 14, -4
 2201 0004 0050A0E1 		mov	r5, r0
1679:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Allocate a queue */
1680:../generate/os_abstraction/src/r_os_abstraction_api.c ****     QueueHandle_t p_temp_event = xQueueCreate(1U, sizeof(e_event_state_t));
 2202              		.loc 1 1680 0
 2203 0008 0020A0E3 		mov	r2, #0
 2204 000c 0110A0E3 		mov	r1, #1
 2205 0010 0100A0E1 		mov	r0, r1
 2206              	.LVL216:
 2207 0014 FEFFFFEB 		bl	xQueueGenericCreate
 2208              	.LVL217:
1681:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1682:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Only return event if created*/
1683:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (NULL != p_temp_event)
 2209              		.loc 1 1683 0
 2210 0018 004050E2 		subs	r4, r0, #0
 2211 001c 0F00000A 		beq	.L229
1684:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1685:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Reset the event */
1686:../generate/os_abstraction/src/r_os_abstraction_api.c ****         xQueueReset(p_temp_event);
 2212              		.loc 1 1686 0
 2213 0020 0010A0E3 		mov	r1, #0
 2214 0024 0400A0E1 		mov	r0, r4
 2215 0028 FEFFFFEB 		bl	xQueueGenericReset
 2216              	.LVL218:
1687:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1688:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* return the event */
1689:../generate/os_abstraction/src/r_os_abstraction_api.c ****         *pp_event = p_temp_event;
 2217              		.loc 1 1689 0
 2218 002c 004085E5 		str	r4, [r5]
1690:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1691:../generate/os_abstraction/src/r_os_abstraction_api.c ****         s_event_count++;
 2219              		.loc 1 1691 0
 2220 0030 002000E3 		movw	r2, #:lower16:.LANCHOR8
 2221 0034 002040E3 		movt	r2, #:upper16:.LANCHOR8
 2222 0038 003092E5 		ldr	r3, [r2]
 2223 003c 013083E2 		add	r3, r3, #1
 2224 0040 003082E5 		str	r3, [r2]
1692:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (s_event_count > s_event_max)
 2225              		.loc 1 1692 0
 2226 0044 002000E3 		movw	r2, #:lower16:.LANCHOR9
 2227 0048 002040E3 		movt	r2, #:upper16:.LANCHOR9
 2228 004c 002092E5 		ldr	r2, [r2]
 2229 0050 020053E1 		cmp	r3, r2
1693:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1694:../generate/os_abstraction/src/r_os_abstraction_api.c ****             s_event_max = s_event_count;
 2230              		.loc 1 1694 0
 2231 0054 00200083 		movwhi	r2, #:lower16:.LANCHOR9
 2232 0058 00204083 		movthi	r2, #:upper16:.LANCHOR9
 2233 005c 00308285 		strhi	r3, [r2]
 2234              	.L229:
1695:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1696:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1697:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1698:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Return boolean true if event created*/
1699:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (NULL != p_temp_event);
1700:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 2235              		.loc 1 1700 0
 2236 0060 000094E2 		adds	r0, r4, #0
 2237 0064 0100A013 		movne	r0, #1
 2238 0068 7080BDE8 		pop	{r4, r5, r6, pc}
 2239              		.cfi_endproc
 2240              	.LFE51:
 2242              		.section	.text.R_OS_EventDelete,"ax",%progbits
 2243              		.align	2
 2244              		.global	R_OS_EventDelete
 2245              		.syntax unified
 2246              		.arm
 2247              		.fpu neon
 2249              	R_OS_EventDelete:
 2250              	.LFB52:
1701:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1702:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_EventCreate
1703:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1704:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1705:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1706:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_EventDelete
1707:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Delete an event, freeing any associated resources
1708:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pp_event - pointer to a associated event
1709:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : None
1710:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1711:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_EventDelete (pp_event_t pp_event)
1712:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2251              		.loc 1 1712 0
 2252              		.cfi_startproc
 2253              		@ args = 0, pretend = 0, frame = 0
 2254              		@ frame_needed = 0, uses_anonymous_args = 0
 2255              	.LVL219:
 2256 0000 10402DE9 		push	{r4, lr}
 2257              		.cfi_def_cfa_offset 8
 2258              		.cfi_offset 4, -8
 2259              		.cfi_offset 14, -4
1713:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Make sure the handle is valid */
1714:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (NULL != pp_event)
 2260              		.loc 1 1714 0
 2261 0004 004050E2 		subs	r4, r0, #0
 2262 0008 0900000A 		beq	.L232
1715:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1716:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Properly dispose the event object */
1717:../generate/os_abstraction/src/r_os_abstraction_api.c ****         vQueueDelete( *pp_event);
 2263              		.loc 1 1717 0
 2264 000c 000094E5 		ldr	r0, [r4]
 2265              	.LVL220:
 2266 0010 FEFFFFEB 		bl	vQueueDelete
 2267              	.LVL221:
1718:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1719:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (0 != s_event_count)
 2268              		.loc 1 1719 0
 2269 0014 003000E3 		movw	r3, #:lower16:.LANCHOR8
 2270 0018 003040E3 		movt	r3, #:upper16:.LANCHOR8
 2271 001c 003093E5 		ldr	r3, [r3]
 2272 0020 000053E3 		cmp	r3, #0
1720:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1721:../generate/os_abstraction/src/r_os_abstraction_api.c ****             s_event_count--;
 2273              		.loc 1 1721 0
 2274 0024 00200013 		movwne	r2, #:lower16:.LANCHOR8
 2275 0028 00204013 		movtne	r2, #:upper16:.LANCHOR8
 2276 002c 01304312 		subne	r3, r3, #1
 2277 0030 00308215 		strne	r3, [r2]
 2278              	.L232:
1722:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1723:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1724:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1725:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* The expectation is that the handle to the event should now be NULL
1726:../generate/os_abstraction/src/r_os_abstraction_api.c ****      * so that any future attempt to get the event will not be valid */
1727:../generate/os_abstraction/src/r_os_abstraction_api.c ****     *pp_event = NULL;
 2279              		.loc 1 1727 0
 2280 0034 0030A0E3 		mov	r3, #0
 2281 0038 003084E5 		str	r3, [r4]
 2282 003c 1080BDE8 		pop	{r4, pc}
 2283              		.cfi_endproc
 2284              	.LFE52:
 2286              		.section	.text.R_OS_EventSet,"ax",%progbits
 2287              		.align	2
 2288              		.global	R_OS_EventSet
 2289              		.syntax unified
 2290              		.arm
 2291              		.fpu neon
 2293              	R_OS_EventSet:
 2294              	.LFB53:
1728:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1729:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1730:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_EventDelete
1731:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1732:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1733:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1734:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_EventSet
1735:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Sets the state on the associated event
1736:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pp_event - pointer to a associated event
1737:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : None
1738:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1739:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_EventSet (pp_event_t pp_event)
1740:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2295              		.loc 1 1740 0
 2296              		.cfi_startproc
 2297              		@ args = 0, pretend = 0, frame = 8
 2298              		@ frame_needed = 0, uses_anonymous_args = 0
 2299              	.LVL222:
 2300 0000 04E02DE5 		str	lr, [sp, #-4]!
 2301              		.cfi_def_cfa_offset 4
 2302              		.cfi_offset 14, -4
 2303 0004 0CD04DE2 		sub	sp, sp, #12
 2304              		.cfi_def_cfa_offset 16
1741:../generate/os_abstraction/src/r_os_abstraction_api.c ****     e_event_state_t event_state = EV_SET;
 2305              		.loc 1 1741 0
 2306 0008 0130A0E3 		mov	r3, #1
 2307 000c 0730CDE5 		strb	r3, [sp, #7]
1742:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1743:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Check if we are in an ISR */
1744:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (ulPortInterruptNesting)
 2308              		.loc 1 1744 0
 2309 0010 003000E3 		movw	r3, #:lower16:ulPortInterruptNesting
 2310 0014 003040E3 		movt	r3, #:upper16:ulPortInterruptNesting
 2311 0018 003093E5 		ldr	r3, [r3]
 2312 001c 000053E3 		cmp	r3, #0
 2313 0020 0600001A 		bne	.L238
1745:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1746:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /*Set Event - in ISR*/
1747:../generate/os_abstraction/src/r_os_abstraction_api.c ****         xQueueOverwriteFromISR( *pp_event, &event_state, NULL);
1748:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1749:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
1750:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1751:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /*Set Event*/
1752:../generate/os_abstraction/src/r_os_abstraction_api.c ****         xQueueOverwrite( *pp_event, &event_state);
 2314              		.loc 1 1752 0
 2315 0024 0230A0E3 		mov	r3, #2
 2316 0028 0020A0E3 		mov	r2, #0
 2317 002c 07108DE2 		add	r1, sp, #7
 2318 0030 000090E5 		ldr	r0, [r0]
 2319              	.LVL223:
 2320 0034 FEFFFFEB 		bl	xQueueGenericSend
 2321              	.LVL224:
 2322              	.L234:
1753:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1754:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 2323              		.loc 1 1754 0
 2324 0038 0CD08DE2 		add	sp, sp, #12
 2325              		.cfi_remember_state
 2326              		.cfi_def_cfa_offset 4
 2327              		@ sp needed
 2328 003c 04F09DE4 		ldr	pc, [sp], #4
 2329              	.LVL225:
 2330              	.L238:
 2331              		.cfi_restore_state
1747:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 2332              		.loc 1 1747 0
 2333 0040 0230A0E3 		mov	r3, #2
 2334 0044 0020A0E3 		mov	r2, #0
 2335 0048 07108DE2 		add	r1, sp, #7
 2336 004c 000090E5 		ldr	r0, [r0]
 2337              	.LVL226:
 2338 0050 FEFFFFEB 		bl	xQueueGenericSendFromISR
 2339              	.LVL227:
 2340 0054 F7FFFFEA 		b	.L234
 2341              		.cfi_endproc
 2342              	.LFE53:
 2344              		.section	.text.R_OS_EventReset,"ax",%progbits
 2345              		.align	2
 2346              		.global	R_OS_EventReset
 2347              		.syntax unified
 2348              		.arm
 2349              		.fpu neon
 2351              	R_OS_EventReset:
 2352              	.LFB54:
1755:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1756:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_EventSet
1757:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1758:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1759:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1760:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_EventReset
1761:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Clears the state on the associated event
1762:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pp_event - pointer to a associated event
1763:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : None
1764:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1765:../generate/os_abstraction/src/r_os_abstraction_api.c **** void R_OS_EventReset (pp_event_t pp_event)
1766:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2353              		.loc 1 1766 0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 8
 2356              		@ frame_needed = 0, uses_anonymous_args = 0
 2357              	.LVL228:
 2358 0000 04E02DE5 		str	lr, [sp, #-4]!
 2359              		.cfi_def_cfa_offset 4
 2360              		.cfi_offset 14, -4
 2361 0004 0CD04DE2 		sub	sp, sp, #12
 2362              		.cfi_def_cfa_offset 16
1767:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Force the specified event to the non-signalled state */
1768:../generate/os_abstraction/src/r_os_abstraction_api.c ****     e_event_state_t event_state = EV_RESET;
 2363              		.loc 1 1768 0
 2364 0008 0030A0E3 		mov	r3, #0
 2365 000c 0730CDE5 		strb	r3, [sp, #7]
1769:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1770:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Check if we are in an ISR */
1771:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (ulPortInterruptNesting)
 2366              		.loc 1 1771 0
 2367 0010 003000E3 		movw	r3, #:lower16:ulPortInterruptNesting
 2368 0014 003040E3 		movt	r3, #:upper16:ulPortInterruptNesting
 2369 0018 003093E5 		ldr	r3, [r3]
 2370 001c 000053E3 		cmp	r3, #0
 2371 0020 0600001A 		bne	.L243
1772:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1773:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /*Reset event - in ISR*/
1774:../generate/os_abstraction/src/r_os_abstraction_api.c ****         xQueueOverwriteFromISR( *pp_event, &event_state, NULL);
1775:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1776:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
1777:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1778:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /*Reset Event*/
1779:../generate/os_abstraction/src/r_os_abstraction_api.c ****         xQueueOverwrite( *pp_event, &event_state);
 2372              		.loc 1 1779 0
 2373 0024 0230A0E3 		mov	r3, #2
 2374 0028 0020A0E3 		mov	r2, #0
 2375 002c 07108DE2 		add	r1, sp, #7
 2376 0030 000090E5 		ldr	r0, [r0]
 2377              	.LVL229:
 2378 0034 FEFFFFEB 		bl	xQueueGenericSend
 2379              	.LVL230:
 2380              	.L239:
1780:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1781:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 2381              		.loc 1 1781 0
 2382 0038 0CD08DE2 		add	sp, sp, #12
 2383              		.cfi_remember_state
 2384              		.cfi_def_cfa_offset 4
 2385              		@ sp needed
 2386 003c 04F09DE4 		ldr	pc, [sp], #4
 2387              	.LVL231:
 2388              	.L243:
 2389              		.cfi_restore_state
1774:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 2390              		.loc 1 1774 0
 2391 0040 0230A0E3 		mov	r3, #2
 2392 0044 0020A0E3 		mov	r2, #0
 2393 0048 07108DE2 		add	r1, sp, #7
 2394 004c 000090E5 		ldr	r0, [r0]
 2395              	.LVL232:
 2396 0050 FEFFFFEB 		bl	xQueueGenericSendFromISR
 2397              	.LVL233:
 2398 0054 F7FFFFEA 		b	.L239
 2399              		.cfi_endproc
 2400              	.LFE54:
 2402              		.section	.text.R_OS_EventGet,"ax",%progbits
 2403              		.align	2
 2404              		.global	R_OS_EventGet
 2405              		.syntax unified
 2406              		.arm
 2407              		.fpu neon
 2409              	R_OS_EventGet:
 2410              	.LFB55:
1782:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1783:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_EventReset
1784:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1785:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1786:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1787:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Function Name: R_OS_EventGet
1788:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Description:   Function to return the current state of an event
1789:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Arguments:     IN pp_event - pointer to the event
1790:../generate/os_abstraction/src/r_os_abstraction_api.c ****  Return value:  The state of the event
1791:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1792:../generate/os_abstraction/src/r_os_abstraction_api.c **** e_event_state_t R_OS_EventGet (pp_event_t pp_event)
1793:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2411              		.loc 1 1793 0
 2412              		.cfi_startproc
 2413              		@ args = 0, pretend = 0, frame = 8
 2414              		@ frame_needed = 0, uses_anonymous_args = 0
 2415              	.LVL234:
 2416 0000 04E02DE5 		str	lr, [sp, #-4]!
 2417              		.cfi_def_cfa_offset 4
 2418              		.cfi_offset 14, -4
 2419 0004 0CD04DE2 		sub	sp, sp, #12
 2420              		.cfi_def_cfa_offset 16
1794:../generate/os_abstraction/src/r_os_abstraction_api.c ****     e_event_state_t event_state = EV_RESET;
 2421              		.loc 1 1794 0
 2422 0008 0030A0E3 		mov	r3, #0
 2423 000c 0730CDE5 		strb	r3, [sp, #7]
1795:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1796:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (ulPortInterruptNesting)
 2424              		.loc 1 1796 0
 2425 0010 003000E3 		movw	r3, #:lower16:ulPortInterruptNesting
 2426 0014 003040E3 		movt	r3, #:upper16:ulPortInterruptNesting
 2427 0018 003093E5 		ldr	r3, [r3]
 2428 001c 000053E3 		cmp	r3, #0
 2429 0020 0600001A 		bne	.L248
1797:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1798:../generate/os_abstraction/src/r_os_abstraction_api.c ****         xQueuePeekFromISR( *pp_event, &event_state);
1799:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1800:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
1801:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1802:../generate/os_abstraction/src/r_os_abstraction_api.c ****         xQueuePeek( *pp_event, &event_state, 0UL);
 2430              		.loc 1 1802 0
 2431 0024 0020A0E3 		mov	r2, #0
 2432 0028 07108DE2 		add	r1, sp, #7
 2433 002c 000090E5 		ldr	r0, [r0]
 2434              	.LVL235:
 2435 0030 FEFFFFEB 		bl	xQueuePeek
 2436              	.LVL236:
 2437              	.L246:
1803:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1804:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1805:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return event_state;
1806:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 2438              		.loc 1 1806 0
 2439 0034 0700DDE5 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2440 0038 0CD08DE2 		add	sp, sp, #12
 2441              		.cfi_remember_state
 2442              		.cfi_def_cfa_offset 4
 2443              		@ sp needed
 2444 003c 04F09DE4 		ldr	pc, [sp], #4
 2445              	.LVL237:
 2446              	.L248:
 2447              		.cfi_restore_state
1798:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 2448              		.loc 1 1798 0
 2449 0040 07108DE2 		add	r1, sp, #7
 2450 0044 000090E5 		ldr	r0, [r0]
 2451              	.LVL238:
 2452 0048 FEFFFFEB 		bl	xQueuePeekFromISR
 2453              	.LVL239:
 2454 004c F8FFFFEA 		b	.L246
 2455              		.cfi_endproc
 2456              	.LFE55:
 2458              		.section	.text.R_OS_EventWait,"ax",%progbits
 2459              		.align	2
 2460              		.global	R_OS_EventWait
 2461              		.syntax unified
 2462              		.arm
 2463              		.fpu neon
 2465              	R_OS_EventWait:
 2466              	.LFB56:
1807:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1808:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_EventGet
1809:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1810:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1811:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1812:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_EventWait
1813:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Blocks operation until one of the following occurs
1814:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                A timeout occurs
1815:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                The associated event has been set
1816:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pp_event - pointer to a associated event
1817:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                timeout   - maximum time to wait for associated event to occur
1818:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : The function returns TRUE if the event object was successfully set. Otherwise, FA
1819:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1820:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_EventWait (pp_event_t pp_event, systime_t timeout)
1821:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2467              		.loc 1 1821 0
 2468              		.cfi_startproc
 2469              		@ args = 0, pretend = 0, frame = 16
 2470              		@ frame_needed = 0, uses_anonymous_args = 0
 2471              	.LVL240:
 2472 0000 70402DE9 		push	{r4, r5, r6, lr}
 2473              		.cfi_def_cfa_offset 16
 2474              		.cfi_offset 4, -16
 2475              		.cfi_offset 5, -12
 2476              		.cfi_offset 6, -8
 2477              		.cfi_offset 14, -4
 2478 0004 10D04DE2 		sub	sp, sp, #16
 2479              		.cfi_def_cfa_offset 32
 2480 0008 0050A0E1 		mov	r5, r0
 2481 000c 0140A0E1 		mov	r4, r1
1822:../generate/os_abstraction/src/r_os_abstraction_api.c ****     volatile bool_t ret_value = false;
 2482              		.loc 1 1822 0
 2483 0010 0030A0E3 		mov	r3, #0
 2484 0014 0C308DE5 		str	r3, [sp, #12]
1823:../generate/os_abstraction/src/r_os_abstraction_api.c ****     volatile bool_t process = true;
 2485              		.loc 1 1823 0
 2486 0018 0130A0E3 		mov	r3, #1
 2487 001c 08308DE5 		str	r3, [sp, #8]
1824:../generate/os_abstraction/src/r_os_abstraction_api.c ****     e_event_state_t event_state = EV_INVALID;
 2488              		.loc 1 1824 0
 2489 0020 0230A0E3 		mov	r3, #2
 2490 0024 0730CDE5 		strb	r3, [sp, #7]
1825:../generate/os_abstraction/src/r_os_abstraction_api.c ****     TickType_t ticks_to_wait;
1826:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1827:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*If timeout has reached maximum value*/
1828:../generate/os_abstraction/src/r_os_abstraction_api.c ****     if (R_OS_ABSTRACTION_EV_WAIT_INFINITE == timeout)
 2491              		.loc 1 1828 0
 2492 0028 010071E3 		cmn	r1, #1
1829:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1830:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /*Assign to max value*/
1831:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ticks_to_wait = portMAX_DELAY;
1832:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1833:../generate/os_abstraction/src/r_os_abstraction_api.c ****     else
1834:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1835:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ticks_to_wait = R_OS_MS_TO_SYSTICKS(timeout);
 2493              		.loc 1 1835 0
 2494 002c 0160A011 		movne	r6, r1
 2495 0030 0300001A 		bne	.L253
 2496              	.L257:
1831:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
 2497              		.loc 1 1831 0
 2498 0034 0060E0E3 		mvn	r6, #0
 2499 0038 010000EA 		b	.L253
 2500              	.LVL241:
 2501              	.L252:
1836:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1837:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1838:../generate/os_abstraction/src/r_os_abstraction_api.c ****     while (true == process)
1839:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1840:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /*Set event only if item received from queue*/
1841:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (pdTRUE == xQueueReceive( *pp_event, &event_state, ticks_to_wait))
1842:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1843:../generate/os_abstraction/src/r_os_abstraction_api.c ****             if (EV_SET == event_state)
1844:../generate/os_abstraction/src/r_os_abstraction_api.c ****             {
1845:../generate/os_abstraction/src/r_os_abstraction_api.c ****                 ret_value = true;
1846:../generate/os_abstraction/src/r_os_abstraction_api.c ****                 process = false;
1847:../generate/os_abstraction/src/r_os_abstraction_api.c ****             }
1848:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1849:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1850:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /**/
1851:../generate/os_abstraction/src/r_os_abstraction_api.c ****         if (R_OS_ABSTRACTION_EV_WAIT_INFINITE != timeout)
 2502              		.loc 1 1851 0
 2503 003c 010074E3 		cmn	r4, #1
 2504 0040 0E00001A 		bne	.L258
 2505              	.LVL242:
 2506              	.L253:
1838:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
 2507              		.loc 1 1838 0
 2508 0044 08309DE5 		ldr	r3, [sp, #8]
 2509 0048 010053E3 		cmp	r3, #1
 2510 004c 0E00001A 		bne	.L259
1841:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
 2511              		.loc 1 1841 0
 2512 0050 0620A0E1 		mov	r2, r6
 2513 0054 07108DE2 		add	r1, sp, #7
 2514 0058 000095E5 		ldr	r0, [r5]
 2515 005c FEFFFFEB 		bl	xQueueReceive
 2516              	.LVL243:
 2517 0060 010050E3 		cmp	r0, #1
 2518 0064 F4FFFF1A 		bne	.L252
1843:../generate/os_abstraction/src/r_os_abstraction_api.c ****             {
 2519              		.loc 1 1843 0
 2520 0068 0730DDE5 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2521 006c 010053E3 		cmp	r3, #1
1845:../generate/os_abstraction/src/r_os_abstraction_api.c ****                 process = false;
 2522              		.loc 1 1845 0
 2523 0070 0C308D05 		streq	r3, [sp, #12]
1846:../generate/os_abstraction/src/r_os_abstraction_api.c ****             }
 2524              		.loc 1 1846 0
 2525 0074 0030A003 		moveq	r3, #0
 2526 0078 08308D05 		streq	r3, [sp, #8]
 2527 007c EEFFFFEA 		b	.L252
 2528              	.L258:
1852:../generate/os_abstraction/src/r_os_abstraction_api.c ****         {
1853:../generate/os_abstraction/src/r_os_abstraction_api.c ****             process = false;
 2529              		.loc 1 1853 0
 2530 0080 0030A0E3 		mov	r3, #0
 2531 0084 08308DE5 		str	r3, [sp, #8]
 2532 0088 EDFFFFEA 		b	.L253
 2533              	.L259:
1854:../generate/os_abstraction/src/r_os_abstraction_api.c ****         }
1855:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1856:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1857:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (ret_value);
 2534              		.loc 1 1857 0
 2535 008c 0C009DE5 		ldr	r0, [sp, #12]
1858:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 2536              		.loc 1 1858 0
 2537 0090 10D08DE2 		add	sp, sp, #16
 2538              		.cfi_def_cfa_offset 16
 2539              		@ sp needed
 2540 0094 7080BDE8 		pop	{r4, r5, r6, pc}
 2541              		.cfi_endproc
 2542              	.LFE56:
 2544              		.section	.text.R_OS_EventSetFromIsr,"ax",%progbits
 2545              		.align	2
 2546              		.global	R_OS_EventSetFromIsr
 2547              		.syntax unified
 2548              		.arm
 2549              		.fpu neon
 2551              	R_OS_EventSetFromIsr:
 2552              	.LFB57:
1859:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1860:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_EventWait
1861:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1862:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1863:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1864:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_EventSetFromIsr
1865:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Sets the state on the associated event
1866:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                Warning : Function shall only be caller from within an ISR routine
1867:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pp_event  - Pointer to a associated event
1868:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : The function returns TRUE if the event object was successfully set. Otherwise, FA
1869:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1870:../generate/os_abstraction/src/r_os_abstraction_api.c **** bool_t R_OS_EventSetFromIsr (pp_event_t pp_event)
1871:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2553              		.loc 1 1871 0
 2554              		.cfi_startproc
 2555              		@ args = 0, pretend = 0, frame = 8
 2556              		@ frame_needed = 0, uses_anonymous_args = 0
 2557              	.LVL244:
 2558 0000 04E02DE5 		str	lr, [sp, #-4]!
 2559              		.cfi_def_cfa_offset 4
 2560              		.cfi_offset 14, -4
 2561 0004 0CD04DE2 		sub	sp, sp, #12
 2562              		.cfi_def_cfa_offset 16
1872:../generate/os_abstraction/src/r_os_abstraction_api.c ****     portBASE_TYPE ret_value;
1873:../generate/os_abstraction/src/r_os_abstraction_api.c ****     e_event_state_t event_state = EV_SET;
 2563              		.loc 1 1873 0
 2564 0008 08108DE2 		add	r1, sp, #8
 2565 000c 0130A0E3 		mov	r3, #1
 2566 0010 013061E5 		strb	r3, [r1, #-1]!
1874:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1875:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Cast to NULL as set from ISR*/
1876:../generate/os_abstraction/src/r_os_abstraction_api.c ****     ret_value = xQueueSendFromISR( *pp_event, &event_state, NULL);
 2567              		.loc 1 1876 0
 2568 0014 0030A0E3 		mov	r3, #0
 2569 0018 0320A0E1 		mov	r2, r3
 2570 001c 000090E5 		ldr	r0, [r0]
 2571              	.LVL245:
 2572 0020 FEFFFFEB 		bl	xQueueGenericSendFromISR
 2573              	.LVL246:
1877:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1878:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /*Return boolean*/
1879:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return ((pdTRUE == ret_value));
1880:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 2574              		.loc 1 1880 0
 2575 0024 010050E3 		cmp	r0, #1
 2576 0028 0000A013 		movne	r0, #0
 2577              	.LVL247:
 2578 002c 0100A003 		moveq	r0, #1
 2579 0030 0CD08DE2 		add	sp, sp, #12
 2580              		.cfi_def_cfa_offset 4
 2581              		@ sp needed
 2582 0034 04F09DE4 		ldr	pc, [sp], #4
 2583              		.cfi_endproc
 2584              	.LFE57:
 2586              		.section	.text.R_OS_GetTickCount,"ax",%progbits
 2587              		.align	2
 2588              		.global	R_OS_GetTickCount
 2589              		.syntax unified
 2590              		.arm
 2591              		.fpu neon
 2593              	R_OS_GetTickCount:
 2594              	.LFB58:
1881:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1882:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_EventSetFromIsr
1883:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1884:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1885:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1886:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_GetTickCount
1887:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Get the number of task ticks.
1888:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : None
1889:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : Number of Ticks counted for a task
1890:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1891:../generate/os_abstraction/src/r_os_abstraction_api.c **** uint32_t R_OS_GetTickCount (void)
1892:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2595              		.loc 1 1892 0
 2596              		.cfi_startproc
 2597              		@ args = 0, pretend = 0, frame = 0
 2598              		@ frame_needed = 0, uses_anonymous_args = 0
 2599 0000 10402DE9 		push	{r4, lr}
 2600              		.cfi_def_cfa_offset 8
 2601              		.cfi_offset 4, -8
 2602              		.cfi_offset 14, -4
1893:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (xTaskGetTickCount());
 2603              		.loc 1 1893 0
 2604 0004 FEFFFFEB 		bl	xTaskGetTickCount
 2605              	.LVL248:
1894:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 2606              		.loc 1 1894 0
 2607 0008 1080BDE8 		pop	{r4, pc}
 2608              		.cfi_endproc
 2609              	.LFE58:
 2611              		.section	.text.R_OS_GetVersion,"ax",%progbits
 2612              		.align	2
 2613              		.global	R_OS_GetVersion
 2614              		.syntax unified
 2615              		.arm
 2616              		.fpu neon
 2618              	R_OS_GetVersion:
 2619              	.LFB59:
1895:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1896:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_GetTickCount
1897:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1898:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1899:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1900:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: R_OS_GetVersion
1901:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  :
1902:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pinfo - detailed driver information structure
1903:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : 0 can not fail
1904:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1905:../generate/os_abstraction/src/r_os_abstraction_api.c **** int32_t R_OS_GetVersion (st_os_abstraction_info_t *p_info)
1906:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2620              		.loc 1 1906 0
 2621              		.cfi_startproc
 2622              		@ args = 0, pretend = 0, frame = 0
 2623              		@ frame_needed = 0, uses_anonymous_args = 0
 2624              		@ link register save eliminated.
 2625              	.LVL249:
1907:../generate/os_abstraction/src/r_os_abstraction_api.c ****     p_info->version.sub.major = s_os_version.version.sub.major;
 2626              		.loc 1 1907 0
 2627 0000 0330A0E3 		mov	r3, #3
 2628 0004 B230C0E1 		strh	r3, [r0, #2]	@ movhi
1908:../generate/os_abstraction/src/r_os_abstraction_api.c ****     p_info->version.sub.minor = s_os_version.version.sub.minor;
 2629              		.loc 1 1908 0
 2630 0008 0530A0E3 		mov	r3, #5
 2631 000c B030C0E1 		strh	r3, [r0]	@ movhi
1909:../generate/os_abstraction/src/r_os_abstraction_api.c ****     p_info->build = s_os_version.build;
 2632              		.loc 1 1909 0
 2633 0010 0130A0E3 		mov	r3, #1
 2634 0014 043080E5 		str	r3, [r0, #4]
1910:../generate/os_abstraction/src/r_os_abstraction_api.c ****     p_info->p_szdriver_name = s_os_version.p_szdriver_name;
 2635              		.loc 1 1910 0
 2636 0018 003000E3 		movw	r3, #:lower16:.LC5
 2637 001c 003040E3 		movt	r3, #:upper16:.LC5
 2638 0020 083080E5 		str	r3, [r0, #8]
1911:../generate/os_abstraction/src/r_os_abstraction_api.c ****     return (0);
1912:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 2639              		.loc 1 1912 0
 2640 0024 0000A0E3 		mov	r0, #0
 2641              	.LVL250:
 2642 0028 1EFF2FE1 		bx	lr
 2643              		.cfi_endproc
 2644              	.LFE59:
 2646              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 2647              		.align	2
 2648              		.weak	vApplicationStackOverflowHook
 2649              		.syntax unified
 2650              		.arm
 2651              		.fpu neon
 2653              	vApplicationStackOverflowHook:
 2654              	.LFB60:
1913:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1914:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function R_OS_GetVersion
1915:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1916:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1917:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1918:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: vApplicationStackOverflowHook
1919:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : Stops any destruction when a task escapes its alloted stack.
1920:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                Possible solution increase stack size in the tasks creation function.
1921:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : pxTask - Task Object
1922:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *                pcTaskName - Name of the task in ASCII
1923:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
1924:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1925:../generate/os_abstraction/src/r_os_abstraction_api.c **** R_COMPILER_WEAK void vApplicationStackOverflowHook (xTaskHandle xTask, char *pcTaskName)
1926:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2655              		.loc 1 1926 0
 2656              		.cfi_startproc
 2657              		@ args = 0, pretend = 0, frame = 0
 2658              		@ frame_needed = 0, uses_anonymous_args = 0
 2659              	.LVL251:
 2660 0000 10402DE9 		push	{r4, lr}
 2661              		.cfi_def_cfa_offset 8
 2662              		.cfi_offset 4, -8
 2663              		.cfi_offset 14, -4
1927:../generate/os_abstraction/src/r_os_abstraction_api.c **** 	UNUSED_PARAM(xTask);
1928:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1929:../generate/os_abstraction/src/r_os_abstraction_api.c ****     printf("Stack overflow occured at in %s \n\r", pcTaskName);
 2664              		.loc 1 1929 0
 2665 0004 000000E3 		movw	r0, #:lower16:.LC6
 2666              	.LVL252:
 2667 0008 000040E3 		movt	r0, #:upper16:.LC6
 2668 000c FEFFFFEB 		bl	printf
 2669              	.LVL253:
1930:../generate/os_abstraction/src/r_os_abstraction_api.c ****     fflush(stdout);
 2670              		.loc 1 1930 0
 2671 0010 003000E3 		movw	r3, #:lower16:_impure_ptr
 2672 0014 003040E3 		movt	r3, #:upper16:_impure_ptr
 2673 0018 003093E5 		ldr	r3, [r3]
 2674 001c 080093E5 		ldr	r0, [r3, #8]
 2675 0020 FEFFFFEB 		bl	fflush
 2676              	.LVL254:
1931:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1932:../generate/os_abstraction/src/r_os_abstraction_api.c ****     taskDISABLE_INTERRUPTS();
 2677              		.loc 1 1932 0
 2678 0024 FEFFFFEB 		bl	ulPortSetInterruptMask
 2679              	.LVL255:
 2680              	.L266:
 2681 0028 FEFFFFEA 		b	.L266
 2682              		.cfi_endproc
 2683              	.LFE60:
 2685              		.section	.text.vApplicationIdleHook,"ax",%progbits
 2686              		.align	2
 2687              		.global	vApplicationIdleHook
 2688              		.syntax unified
 2689              		.arm
 2690              		.fpu neon
 2692              	vApplicationIdleHook:
 2693              	.LFB61:
1933:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1934:../generate/os_abstraction/src/r_os_abstraction_api.c ****     while (1)
1935:../generate/os_abstraction/src/r_os_abstraction_api.c ****     {
1936:../generate/os_abstraction/src/r_os_abstraction_api.c ****         /* Do Nothing */
1937:../generate/os_abstraction/src/r_os_abstraction_api.c ****         ;
1938:../generate/os_abstraction/src/r_os_abstraction_api.c ****     }
1939:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
1940:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1941:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function vApplicationStackOverflowHook
1942:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1943:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1944:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1945:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: vApplicationIdleHook
1946:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Description  : The FreeRTOS idle application hook
1947:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Arguments    : none
1948:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Return Value : none
1949:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1950:../generate/os_abstraction/src/r_os_abstraction_api.c **** void vApplicationIdleHook (void)
1951:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2694              		.loc 1 1951 0
 2695              		.cfi_startproc
 2696              		@ args = 0, pretend = 0, frame = 8
 2697              		@ frame_needed = 0, uses_anonymous_args = 0
 2698 0000 04E02DE5 		str	lr, [sp, #-4]!
 2699              		.cfi_def_cfa_offset 4
 2700              		.cfi_offset 14, -4
 2701 0004 0CD04DE2 		sub	sp, sp, #12
 2702              		.cfi_def_cfa_offset 16
1952:../generate/os_abstraction/src/r_os_abstraction_api.c ****     volatile size_t x_free_heap_space;
1953:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1954:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* This is just a trivial example of an idle hook.  It is called on each
1955:../generate/os_abstraction/src/r_os_abstraction_api.c ****      cycle of the idle task.  It must *NOT* attempt to block.  In this case the
1956:../generate/os_abstraction/src/r_os_abstraction_api.c ****      idle task just queries the amount of FreeRTOS heap that remains.  See the
1957:../generate/os_abstraction/src/r_os_abstraction_api.c ****      memory management section on the http://www.FreeRTOS.org web site for memory
1958:../generate/os_abstraction/src/r_os_abstraction_api.c ****      management options.  If there is a lot of heap memory free then the
1959:../generate/os_abstraction/src/r_os_abstraction_api.c ****      configTOTAL_HEAP_SIZE value in FreeRTOSConfig.h can be reduced to free up
1960:../generate/os_abstraction/src/r_os_abstraction_api.c ****      RAM. */
1961:../generate/os_abstraction/src/r_os_abstraction_api.c ****     x_free_heap_space = xPortGetFreeHeapSize();
 2703              		.loc 1 1961 0
 2704 0008 FEFFFFEB 		bl	xPortGetFreeHeapSize
 2705              	.LVL256:
 2706 000c 04008DE5 		str	r0, [sp, #4]
1962:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1963:../generate/os_abstraction/src/r_os_abstraction_api.c ****     /* Remove compiler warning about xFreeHeapSpace being set but never used. */
1964:../generate/os_abstraction/src/r_os_abstraction_api.c ****     (void) x_free_heap_space;
 2707              		.loc 1 1964 0
 2708 0010 04309DE5 		ldr	r3, [sp, #4]
1965:../generate/os_abstraction/src/r_os_abstraction_api.c **** }
 2709              		.loc 1 1965 0
 2710 0014 0CD08DE2 		add	sp, sp, #12
 2711              		.cfi_def_cfa_offset 4
 2712              		@ sp needed
 2713 0018 04F09DE4 		ldr	pc, [sp], #4
 2714              		.cfi_endproc
 2715              	.LFE61:
 2717              		.section	.text.os_abstraction_isr,"ax",%progbits
 2718              		.align	2
 2719              		.global	os_abstraction_isr
 2720              		.syntax unified
 2721              		.arm
 2722              		.fpu neon
 2724              	os_abstraction_isr:
 2725              	.LFB62:
1966:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1967:../generate/os_abstraction/src/r_os_abstraction_api.c ****  End of function  vApplicationIdleHook
1968:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1969:../generate/os_abstraction/src/r_os_abstraction_api.c **** 
1970:../generate/os_abstraction/src/r_os_abstraction_api.c **** /**************************************************************************************************
1971:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * Function Name: os_abstraction_isr
1972:../generate/os_abstraction/src/r_os_abstraction_api.c ****  *          Used to perform timing operations (for function like R_OS_TaskSleep()
1973:../generate/os_abstraction/src/r_os_abstraction_api.c ****  * @retval test status pass true or false
1974:../generate/os_abstraction/src/r_os_abstraction_api.c ****  **************************************************************************************************
1975:../generate/os_abstraction/src/r_os_abstraction_api.c **** void os_abstraction_isr (void)
1976:../generate/os_abstraction/src/r_os_abstraction_api.c **** {
 2726              		.loc 1 1976 0
 2727              		.cfi_startproc
 2728              		@ args = 0, pretend = 0, frame = 0
 2729              		@ frame_needed = 0, uses_anonymous_args = 0
 2730              		@ link register save eliminated.
 2731              	.LBB17:
 2732              	.LBB18:
 2733              		.loc 2 47 0
 2734              		.syntax divided
 2735              	@ 47 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/compiler/inc/r_compi
 2736 0000 00F020E3 		nop
 2737              	@ 0 "" 2
 2738              		.arm
 2739              		.syntax unified
 2740 0004 1EFF2FE1 		bx	lr
 2741              	.LBE18:
 2742              	.LBE17:
 2743              		.cfi_endproc
 2744              	.LFE62:
 2746              		.weak	xHeapRegions
 2747              		.comm	uxSavedInterruptStatus,4,4
 2748              		.global	ucHeap
 2749              		.section	.bss.s_event_count,"aw",%nobits
 2750              		.align	2
 2751              		.set	.LANCHOR8,. + 0
 2754              	s_event_count:
 2755 0000 00000000 		.space	4
 2756              		.section	.bss.s_event_max,"aw",%nobits
 2757              		.align	2
 2758              		.set	.LANCHOR9,. + 0
 2761              	s_event_max:
 2762 0000 00000000 		.space	4
 2763              		.section	.bss.s_file,"aw",%nobits
 2764              		.align	2
 2765              		.set	.LANCHOR4,. + 0
 2768              	s_file:
 2769 0000 00000000 		.space	200
 2769      00000000 
 2769      00000000 
 2769      00000000 
 2769      00000000 
 2770              		.section	.bss.s_line,"aw",%nobits
 2771              		.align	2
 2772              		.set	.LANCHOR5,. + 0
 2775              	s_line:
 2776 0000 00000000 		.space	4
 2777              		.section	.bss.s_os_running,"aw",%nobits
 2778              		.align	2
 2779              		.set	.LANCHOR0,. + 0
 2782              	s_os_running:
 2783 0000 00000000 		.space	4
 2784              		.section	.bss.s_pstream_mutex,"aw",%nobits
 2785              		.align	2
 2786              		.set	.LANCHOR3,. + 0
 2789              	s_pstream_mutex:
 2790 0000 00000000 		.space	4
 2791              		.section	.bss.sp_task_handle,"aw",%nobits
 2792              		.align	2
 2793              		.set	.LANCHOR2,. + 0
 2796              	sp_task_handle:
 2797 0000 00000000 		.space	4
 2798              		.section	.bss.xHeapRegions,"aw",%nobits
 2799              		.align	2
 2802              	xHeapRegions:
 2803 0000 00000000 		.space	16
 2803      00000000 
 2803      00000000 
 2803      00000000 
 2804              		.section	.freertos_heap,"aw",%progbits
 2805              		.align	2
 2806              		.set	.LANCHOR1,. + 0
 2809              	ucHeap:
 2810 0000 00000000 		.space	98304
 2810      00000000 
 2810      00000000 
 2810      00000000 
 2810      00000000 
 2811              		.section	.rodata.R_OS_AssertCalled.str1.4,"aMS",%progbits,1
 2812              		.align	2
 2813              	.LC0:
 2814 0000 0D0A525F 		.ascii	"\015\012R_OS_Assert. File :%s\000"
 2814      4F535F41 
 2814      73736572 
 2814      742E2046 
 2814      696C6520 
 2815              	.LC1:
 2816 0018 0D0A204C 		.ascii	"\015\012 Line %d\015\012:(\015\012\000"
 2816      696E6520 
 2816      25640D0A 
 2816      3A280D0A 
 2816      00
 2817 0029 000000   		.space	3
 2818              	.LC2:
 2819 002c 43757272 		.ascii	"Current task: %s\015\012\000"
 2819      656E7420 
 2819      7461736B 
 2819      3A202573 
 2819      0D0A00
 2820              		.section	.rodata.R_OS_GetVersion.str1.4,"aMS",%progbits,1
 2821              		.align	2
 2822              	.LC5:
 2823 0000 46726565 		.ascii	"FreeRTOS OS Abstraction\000"
 2823      52544F53 
 2823      204F5320 
 2823      41627374 
 2823      72616374 
 2824              		.section	.rodata.R_OS_KernelInit.str1.4,"aMS",%progbits,1
 2825              		.align	2
 2826              	.LC3:
 2827 0000 2E2E2F67 		.ascii	"../generate/os_abstraction/src/r_os_abstraction_api"
 2827      656E6572 
 2827      6174652F 
 2827      6F735F61 
 2827      62737472 
 2828 0033 2E6300   		.ascii	".c\000"
 2829              		.section	.rodata.R_OS_TaskGetState.str1.4,"aMS",%progbits,1
 2830              		.align	2
 2831              	.LC4:
 2832 0000 43616E6E 		.ascii	"Cannot get memory for threads list\015\000"
 2832      6F742067 
 2832      6574206D 
 2832      656D6F72 
 2832      7920666F 
 2833              		.section	.rodata.s_startup_task_name_str,"a",%progbits
 2834              		.align	2
 2835              		.set	.LANCHOR6,. + 0
 2838              	s_startup_task_name_str:
 2839 0000 4D61696E 		.ascii	"Main\000"
 2839      00
 2840              		.section	.rodata.sp_status_name.71505,"a",%progbits
 2841              		.align	2
 2842              		.set	.LANCHOR7,. + 0
 2845              	sp_status_name.71505:
 2846 0000 00000000 		.word	.LC7
 2847 0004 08000000 		.word	.LC8
 2848 0008 10000000 		.word	.LC9
 2849 000c 18000000 		.word	.LC10
 2850 0010 24000000 		.word	.LC11
 2851 0014 2C000000 		.word	.LC12
 2852              		.section	.rodata.str1.4,"aMS",%progbits,1
 2853              		.align	2
 2854              	.LC7:
 2855 0000 52756E6E 		.ascii	"Running\000"
 2855      696E6700 
 2856              	.LC8:
 2857 0008 52656164 		.ascii	"Ready\000"
 2857      7900
 2858 000e 0000     		.space	2
 2859              	.LC9:
 2860 0010 426C6F63 		.ascii	"Blocked\000"
 2860      6B656400 
 2861              	.LC10:
 2862 0018 53757370 		.ascii	"Suspended\000"
 2862      656E6465 
 2862      6400
 2863 0022 0000     		.space	2
 2864              	.LC11:
 2865 0024 44656C65 		.ascii	"Deleted\000"
 2865      74656400 
 2866              	.LC12:
 2867 002c 496E7661 		.ascii	"Invalid\000"
 2867      6C696400 
 2868              		.section	.rodata.vApplicationStackOverflowHook.str1.4,"aMS",%progbits,1
 2869              		.align	2
 2870              	.LC6:
 2871 0000 53746163 		.ascii	"Stack overflow occured at in %s \012\015\000"
 2871      6B206F76 
 2871      6572666C 
 2871      6F77206F 
 2871      63637572 
 2872              		.text
 2873              	.Letext0:
 2874              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2875              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 2876              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2877              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2878              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2879              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2880              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2881              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2882              		.file 11 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/system/inc/r_ty
 2883              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2884              		.file 13 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/system/inc/driv
 2885              		.file 14 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/FreeRTOS/include/pri
 2886              		.file 15 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/FreeRTOS/portable/GC
 2887              		.file 16 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/FreeRTOS/include/pri
 2888              		.file 17 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/FreeRTOS/include/que
 2889              		.file 18 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/FreeRTOS/include/sem
 2890              		.file 19 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/FreeRTOS/include/tas
 2891              		.file 20 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/drivers/r_intc/
 2892              		.file 21 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/sc_drivers/r_os
 2893              		.file 22 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/os_abstraction/
 2894              		.file 23 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/os_abstraction/
 2895              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2896              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2897              		.file 26 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/generate/system/inc/r_de
 2898              		.file 27 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 r_os_abstraction_api.c
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:17     .text.main_task:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:22     .text.main_task:00000000 main_task
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2779   .bss.s_os_running:00000000 .LANCHOR0
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:48     .text.pvPortsetDesiredBlockForMalloc:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:54     .text.pvPortsetDesiredBlockForMalloc:00000000 pvPortsetDesiredBlockForMalloc
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:79     .text.R_OS_Running:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:85     .text.R_OS_Running:00000000 R_OS_Running
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:102    .text.R_OS_KernelStart:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:108    .text.R_OS_KernelStart:00000000 R_OS_KernelStart
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:126    .text.R_OS_KernelStop:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:132    .text.R_OS_KernelStop:00000000 R_OS_KernelStop
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:150    .text.R_OS_AbstractionLayerShutdown:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:156    .text.R_OS_AbstractionLayerShutdown:00000000 R_OS_AbstractionLayerShutdown
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:177    .text.R_OS_InitMemManager:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:183    .text.R_OS_InitMemManager:00000000 R_OS_InitMemManager
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2806   .freertos_heap:00000000 .LANCHOR1
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2802   .bss.xHeapRegions:00000000 xHeapRegions
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:231    .text.R_OS_TaskCreate:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:237    .text.R_OS_TaskCreate:00000000 R_OS_TaskCreate
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:257    .text.R_OS_TaskCreate:0000001c $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:264    .text.R_OS_TaskCreate:00000030 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:338    .text.R_OS_TaskDelete:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:344    .text.R_OS_TaskDelete:00000000 R_OS_TaskDelete
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:377    .text.R_OS_TaskSleep:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:383    .text.R_OS_TaskSleep:00000000 R_OS_TaskSleep
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:411    .text.R_OS_TaskYield:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:417    .text.R_OS_TaskYield:00000000 R_OS_TaskYield
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:436    .text.R_OS_TaskSuspend:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:442    .text.R_OS_TaskSuspend:00000000 R_OS_TaskSuspend
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:478    .text.R_OS_TaskResume:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:484    .text.R_OS_TaskResume:00000000 R_OS_TaskResume
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:519    .text.R_OS_TasksSuspendAll:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:525    .text.R_OS_TasksSuspendAll:00000000 R_OS_TasksSuspendAll
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:548    .text.R_OS_TasksResumeAll:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:554    .text.R_OS_TasksResumeAll:00000000 R_OS_TasksResumeAll
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:577    .text.R_OS_TasksGetNumber:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:583    .text.R_OS_TasksGetNumber:00000000 R_OS_TasksGetNumber
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:613    .text.R_OS_TaskUsesFloatingPoint:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:619    .text.R_OS_TaskUsesFloatingPoint:00000000 R_OS_TaskUsesFloatingPoint
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:637    .text.R_OS_TaskGetPriority:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:643    .text.R_OS_TaskGetPriority:00000000 R_OS_TaskGetPriority
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:675    .text.R_OS_TaskSetPriority:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:681    .text.R_OS_TaskSetPriority:00000000 R_OS_TaskSetPriority
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:716    .text.R_OS_TaskGetCurrentHandle:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:722    .text.R_OS_TaskGetCurrentHandle:00000000 R_OS_TaskGetCurrentHandle
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:741    .text.R_OS_TaskGetCurrentName:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:747    .text.R_OS_TaskGetCurrentName:00000000 R_OS_TaskGetCurrentName
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:777    .text.R_OS_SysLock:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:783    .text.R_OS_SysLock:00000000 R_OS_SysLock
                            *COM*:00000004 uxSavedInterruptStatus
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:821    .text.R_OS_SysUnlock:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:827    .text.R_OS_SysUnlock:00000000 R_OS_SysUnlock
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:859    .text.R_OS_SysWaitAccess:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:865    .text.R_OS_SysWaitAccess:00000000 R_OS_SysWaitAccess
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2793   .bss.sp_task_handle:00000000 .LANCHOR2
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2786   .bss.s_pstream_mutex:00000000 .LANCHOR3
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:926    .text.R_OS_SysReleaseAccess:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:932    .text.R_OS_SysReleaseAccess:00000000 R_OS_SysReleaseAccess
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:967    .text.R_OS_AssertCalled:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:973    .text.R_OS_AssertCalled:00000000 R_OS_AssertCalled
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2765   .bss.s_file:00000000 .LANCHOR4
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2772   .bss.s_line:00000000 .LANCHOR5
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2813   .rodata.R_OS_AssertCalled.str1.4:00000000 .LC0
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2815   .rodata.R_OS_AssertCalled.str1.4:00000018 .LC1
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2818   .rodata.R_OS_AssertCalled.str1.4:0000002c .LC2
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1095   .text.R_OS_KernelInit:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1101   .text.R_OS_KernelInit:00000000 R_OS_KernelInit
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2835   .rodata.s_startup_task_name_str:00000000 .LANCHOR6
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2826   .rodata.R_OS_KernelInit.str1.4:00000000 .LC3
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1171   .text.R_OS_AbstractionLayerInit:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1177   .text.R_OS_AbstractionLayerInit:00000000 R_OS_AbstractionLayerInit
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1195   .text.R_OS_Malloc:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1201   .text.R_OS_Malloc:00000000 R_OS_Malloc
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1255   .text.R_OS_Free:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1261   .text.R_OS_Free:00000000 R_OS_Free
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1291   .text.R_OS_TaskGetState:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1297   .text.R_OS_TaskGetState:00000000 R_OS_TaskGetState
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2831   .rodata.R_OS_TaskGetState.str1.4:00000000 .LC4
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2842   .rodata.sp_status_name.71505:00000000 .LANCHOR7
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1429   .text.R_OS_SemaphoreCreate:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1435   .text.R_OS_SemaphoreCreate:00000000 R_OS_SemaphoreCreate
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1479   .text.R_OS_SemaphoreDelete:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1485   .text.R_OS_SemaphoreDelete:00000000 R_OS_SemaphoreDelete
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1523   .text.R_OS_SemaphoreWait:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1529   .text.R_OS_SemaphoreWait:00000000 R_OS_SemaphoreWait
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1612   .text.R_OS_SemaphoreRelease:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1618   .text.R_OS_SemaphoreRelease:00000000 R_OS_SemaphoreRelease
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1658   .text.R_OS_MutexCreate:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1664   .text.R_OS_MutexCreate:00000000 R_OS_MutexCreate
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1684   .text.R_OS_MutexDelete:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1690   .text.R_OS_MutexDelete:00000000 R_OS_MutexDelete
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1715   .text.R_OS_MutexAcquire:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1721   .text.R_OS_MutexAcquire:00000000 R_OS_MutexAcquire
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1741   .text.R_OS_MutexRelease:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1747   .text.R_OS_MutexRelease:00000000 R_OS_MutexRelease
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1769   .text.R_OS_MutexWait:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1775   .text.R_OS_MutexWait:00000000 R_OS_MutexWait
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1831   .text.R_OS_EnterCritical:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1837   .text.R_OS_EnterCritical:00000000 R_OS_EnterCritical
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1855   .text.R_OS_ExitCritical:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1861   .text.R_OS_ExitCritical:00000000 R_OS_ExitCritical
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1879   .text.R_OS_MessageQueueCreate:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1885   .text.R_OS_MessageQueueCreate:00000000 R_OS_MessageQueueCreate
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1926   .text.R_OS_MessageQueuePut:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:1932   .text.R_OS_MessageQueuePut:00000000 R_OS_MessageQueuePut
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2004   .text.R_OS_MessageQueueGet:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2010   .text.R_OS_MessageQueueGet:00000000 R_OS_MessageQueueGet
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2099   .text.R_OS_MessageQueueClear:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2105   .text.R_OS_MessageQueueClear:00000000 R_OS_MessageQueueClear
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2140   .text.R_OS_MessageQueueDelete:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2146   .text.R_OS_MessageQueueDelete:00000000 R_OS_MessageQueueDelete
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2182   .text.R_OS_EventCreate:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2188   .text.R_OS_EventCreate:00000000 R_OS_EventCreate
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2751   .bss.s_event_count:00000000 .LANCHOR8
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2758   .bss.s_event_max:00000000 .LANCHOR9
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2243   .text.R_OS_EventDelete:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2249   .text.R_OS_EventDelete:00000000 R_OS_EventDelete
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2287   .text.R_OS_EventSet:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2293   .text.R_OS_EventSet:00000000 R_OS_EventSet
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2345   .text.R_OS_EventReset:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2351   .text.R_OS_EventReset:00000000 R_OS_EventReset
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2403   .text.R_OS_EventGet:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2409   .text.R_OS_EventGet:00000000 R_OS_EventGet
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2459   .text.R_OS_EventWait:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2465   .text.R_OS_EventWait:00000000 R_OS_EventWait
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2545   .text.R_OS_EventSetFromIsr:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2551   .text.R_OS_EventSetFromIsr:00000000 R_OS_EventSetFromIsr
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2587   .text.R_OS_GetTickCount:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2593   .text.R_OS_GetTickCount:00000000 R_OS_GetTickCount
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2612   .text.R_OS_GetVersion:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2618   .text.R_OS_GetVersion:00000000 R_OS_GetVersion
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2822   .rodata.R_OS_GetVersion.str1.4:00000000 .LC5
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2647   .text.vApplicationStackOverflowHook:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2653   .text.vApplicationStackOverflowHook:00000000 vApplicationStackOverflowHook
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2870   .rodata.vApplicationStackOverflowHook.str1.4:00000000 .LC6
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2686   .text.vApplicationIdleHook:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2692   .text.vApplicationIdleHook:00000000 vApplicationIdleHook
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2718   .text.os_abstraction_isr:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2724   .text.os_abstraction_isr:00000000 os_abstraction_isr
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2809   .freertos_heap:00000000 ucHeap
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2750   .bss.s_event_count:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2754   .bss.s_event_count:00000000 s_event_count
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2757   .bss.s_event_max:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2761   .bss.s_event_max:00000000 s_event_max
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2764   .bss.s_file:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2768   .bss.s_file:00000000 s_file
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2771   .bss.s_line:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2775   .bss.s_line:00000000 s_line
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2778   .bss.s_os_running:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2782   .bss.s_os_running:00000000 s_os_running
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2785   .bss.s_pstream_mutex:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2789   .bss.s_pstream_mutex:00000000 s_pstream_mutex
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2792   .bss.sp_task_handle:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2796   .bss.sp_task_handle:00000000 sp_task_handle
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2799   .bss.xHeapRegions:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2805   .freertos_heap:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2812   .rodata.R_OS_AssertCalled.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2821   .rodata.R_OS_GetVersion.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2825   .rodata.R_OS_KernelInit.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2830   .rodata.R_OS_TaskGetState.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2834   .rodata.s_startup_task_name_str:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2838   .rodata.s_startup_task_name_str:00000000 s_startup_task_name_str
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2841   .rodata.sp_status_name.71505:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2845   .rodata.sp_status_name.71505:00000000 sp_status_name.71505
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2853   .rodata.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccCEDbAg.s:2869   .rodata.vApplicationStackOverflowHook.str1.4:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.14fc17be114e5a2cba0959c511ea2aaf
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.newlib.h.21.59901f4bf241ab46c63694665baa7297
                           .group:00000000 wm4.features.h.22.5cdadbb3efe495d1c9e38350b8c376c7
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:00000000 wm4.cdefs.h.47.e658329a094974ebad41b40c60502de7
                           .group:00000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.8188691c2279eac7a223caa50f6694b9
                           .group:00000000 wm4._default_fcntl.h.6.b13d56891b95175b639f824a0fd1ed77
                           .group:00000000 wm4.time.h.8.db4619001f026d0b4874c029fef0e91f
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.time.h.2.4581ce0ffb6627cfc02162c94bf846c9
                           .group:00000000 wm4.time.h.25.0e6a0fdbc9955f5707ed54246ed2e089
                           .group:00000000 wm4.time.h.162.d096f2f5887c52e271c4dc33d795dc64
                           .group:00000000 wm4.stat.h.71.d65ac61ff88c651e198008cfb38bda9c
                           .group:00000000 wm4.fcntl.h.9.9336f33d7f5028f694c75e6e224e0cf7
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.math.h.13.adb102f7bd7860b1f241e149d6914a1e
                           .group:00000000 wm4.r_typedefs.h.38.e90d9de5300d9ae020e5db8c5af88b3e
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.reent.h.91.b3ea049ebc5486622b61409b78486f84
                           .group:00000000 wm4.driver.h.34.180df73e0731406f5e50150641059ede
                           .group:00000000 wm4.r_devlink_wrapper.h.72.ad1de4c851513efa3aed0532ebca7ca2
                           .group:00000000 wm4.r_task_priority.h.26.416bb98a222bf391200df359bd0318d1
                           .group:00000000 wm4.FreeRTOSConfig.h.79.fd739ecab5eecc474fbd4cdebb362b54
                           .group:00000000 wm4.projdefs.h.29.3472c8470d131a5f474bc7437ea94609
                           .group:00000000 wm4.portmacro.h.32.440d21c040186908c7273660706c6bca
                           .group:00000000 wm4.portable.h.64.00b423ba030e23bed354b037664af7a6
                           .group:00000000 wm4.mpu_wrappers.h.29.89d425470b0b1ff39fbd61026b3dc073
                           .group:00000000 wm4.FreeRTOS.h.66.bad6b88d088f10e2b23c3b49ecb7db7d
                           .group:00000000 wm4.queue.h.30.26f4e98f11131ce77daaf8e01a2b98bf
                           .group:00000000 wm4.semphr.h.39.340b671c07db4901cda8217ed0bf5efe
                           .group:00000000 wm4.list.h.61.bafeaa82806d71ae8917c6d7827fc3d2
                           .group:00000000 wm4.task.h.46.d14b2b6bfa640e74f781e050155168fa
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.adc_iodefine.h.29.14c6f50dce37432a7d004e4b1ce33da7
                           .group:00000000 wm4.bsc_iodefine.h.29.9281d1f3639266933964d6d0c2d42c4f
                           .group:00000000 wm4.ceu_iodefine.h.29.2a669d0b46fdde030a50db9e3c307fbf
                           .group:00000000 wm4.cpg_iodefine.h.29.d6fdc9cb4798723afd88b251d64c2ce2
                           .group:00000000 wm4.csi2link_iodefine.h.29.221c4531636a409f24d307b16341ada8
                           .group:00000000 wm4.dmac_iodefine.h.29.578fccc2cc1da886ec95a029bf874f01
                           .group:00000000 wm4.drpk_iodefine.h.29.580eb8588a2b2d43d2726fbe791e513f
                           .group:00000000 wm4.drw_iodefine.h.29.df30f4a4a34a79f6a86c4df91353dffe
                           .group:00000000 wm4.edmac_iodefine.h.29.33e8759349004a722f42f5429c1353f6
                           .group:00000000 wm4.eptpc_iodefine.h.29.74d8f9fab0f5549b56097fb9e937dde8
                           .group:00000000 wm4.etherc_iodefine.h.29.14602750383a574f1c21f994ad33a366
                           .group:00000000 wm4.gpio_iodefine.h.29.3d0b021c56839cee4ae5149903684e4b
                           .group:00000000 wm4.gpt_iodefine.h.29.557ead75d7b0585b898d3898b64c7f87
                           .group:00000000 wm4.hyper_iodefine.h.29.000caadbb74d881e97db55b39b432154
                           .group:00000000 wm4.imr_iodefine.h.29.77c022f017e711c4d51cc0145db1dad3
                           .group:00000000 wm4.intc_iodefine.h.29.b68f5799a35a7495d63b4cd458e1ba57
                           .group:00000000 wm4.irda_iodefine.h.29.37e67bd2005173d68a74d1cc937d8444
                           .group:00000000 wm4.jcu_iodefine.h.29.3aca452908962e7a7ccf26164751feda
                           .group:00000000 wm4.lvds_iodefine.h.29.c11cbe1900e5209c8dcc76c2336c16bc
                           .group:00000000 wm4.mtu_iodefine.h.29.5498fb974bb53caf05aa143c2deec781
                           .group:00000000 wm4.nandc_iodefine.h.29.e0b343306750f017ee86e169ad98efe9
                           .group:00000000 wm4.octa_iodefine.h.29.4cb0d62e4b9633e173858000dc1c626c
                           .group:00000000 wm4.ostm_iodefine.h.29.6914f7e330a1cf0008b34219adcdfed4
                           .group:00000000 wm4.pl_iodefine.h.29.abbb6d725aed990aa8343242bfe31416
                           .group:00000000 wm4.pmg_iodefine.h.29.8bcfbc4771a6f9b7dd4d6f504427219e
                           .group:00000000 wm4.poeg_iodefine.h.29.0d8e258d10986260cbc70cfb8c0ef273
                           .group:00000000 wm4.poe_iodefine.h.29.fe74e55e7b6b4afbe3596c74ba035e98
                           .group:00000000 wm4.prr_iodefine.h.29.c1f15576f7a27b9c83aa3b40f5b2f988
                           .group:00000000 wm4.ptpedmac_iodefine.h.29.cd24a93374ce35cebc41e26889d619ef
                           .group:00000000 wm4.rcanfd_iodefine.h.29.532dd48b82fcb61d63538aba4b6f1289
                           .group:00000000 wm4.rcan_iodefine.h.29.a47a89db1b35c12b54af48fa1956acba
                           .group:00000000 wm4.riic_iodefine.h.29.f96943d49800d297612c4af3bba5c943
                           .group:00000000 wm4.rspi_iodefine.h.29.7efa041fe34a7d27db66a7b337879dfe
                           .group:00000000 wm4.rtc_iodefine.h.29.6dc76be5ca3df69cecb5a81d06cc46b5
                           .group:00000000 wm4.scifa_iodefine.h.29.b04ccd664d71baaf31c75761c45b9c4d
                           .group:00000000 wm4.scim_iodefine.h.29.87d0760abf94446b00d826c797bf0ff2
                           .group:00000000 wm4.sdmmc_iodefine.h.29.e67e9815445e8057a3262d1566bea0db
                           .group:00000000 wm4.spdif_iodefine.h.29.59f5d70150fa200a4d8ee50be1ee34c8
                           .group:00000000 wm4.spibsc_iodefine.h.29.f4930f8b8da1140200204513a363c76f
                           .group:00000000 wm4.sprite_iodefine.h.29.55796d1fa083a2457fea4ece974a192e
                           .group:00000000 wm4.ssif_iodefine.h.29.054ec6d95f487f631f16aee39c85c47a
                           .group:00000000 wm4.usb_iodefine.h.29.6dc44ea388ba227e8fdcfb33c315887b
                           .group:00000000 wm4.vdc_iodefine.h.29.db282ded1f052d8567fbbd3b61ce8f7a
                           .group:00000000 wm4.vin_iodefine.h.29.9b392e5601347d53e64be3272934e170
                           .group:00000000 wm4.wdt_iodefine.h.29.ed07bb44b797072f8c28b41c64fdca30
                           .group:00000000 wm4.r_intc_lld_rza2m.h.35.148dee33e6a963828fdce2545668b517
                           .group:00000000 wm4.r_ostm_lld_rza2m.h.66.272f829b409763a94e47858c6b6cb517
                           .group:00000000 wm4.r_ostm_drv_api.h.51.adcd0e7bd4841f6d7c67e44f00650c60
                           .group:00000000 wm4.r_compiler_abstraction_api.h.26.bb21b39b83806cb7bb8838b6f825dcff
                           .group:00000000 wm4.r_os_abstraction_api.h.53.c40489f97d2474c70b40d43822d1406c
                           .group:00000000 wm4.application_cfg.h.34.5933f86187a4e016c22c12e023d46cf0

UNDEFINED SYMBOLS
os_main_task_t
vTaskStartScheduler
vTaskEndScheduler
__freertos_heap_start
__freertos_heap_end
vPortDefineHeapRegions
xTaskCreate
vTaskDelete
vTaskDelay
eTaskGetState
vTaskSuspend
vTaskResume
xTaskGetSchedulerState
vTaskSuspendAll
xTaskResumeAll
uxTaskGetNumberOfTasks
vPortTaskUsesFPU
uxTaskPriorityGet
vTaskPrioritySet
xTaskGetCurrentTaskHandle
vTaskGetInfo
ulPortInterruptNesting
ulPortSetInterruptMask
vPortEnterCritical
vPortClearInterruptMask
vPortExitCritical
xQueueSemaphoreTake
xQueueCreateMutex
xQueueGenericSend
memset
strncpy
printf
_impure_ptr
fflush
R_DEVLINK_Init
initialise_monitor_handles
pvPortMalloc
vPortFree
uxTaskGetSystemState
puts
strcmp
xQueueCreateCountingSemaphore
vQueueDelete
xQueueReceiveFromISR
xQueueGiveFromISR
xQueueGenericCreate
xQueueGenericSendFromISR
xQueueReceive
xQueueGenericReset
xQueuePeek
xQueuePeekFromISR
xTaskGetTickCount
xPortGetFreeHeapSize
