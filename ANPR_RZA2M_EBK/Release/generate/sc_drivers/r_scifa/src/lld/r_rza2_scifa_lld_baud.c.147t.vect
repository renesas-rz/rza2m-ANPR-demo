
;; Function R_SCIFA_SetBaud (R_SCIFA_SetBaud, funcdef_no=5, decl_uid=69379, cgraph_uid=5, symbol_order=19)


Analyzing loop at ../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c:282
../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c:282:52: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c:282:52: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c:282:52: note: not vectorized: control flow in loop.
../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c:282:52: note: bad loop form.

Analyzing loop at ../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c:292
../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c:292:29: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c:292:29: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c:292:29: note: not vectorized: control flow in loop.
../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c:292:29: note: bad loop form.
../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c:330:7: note: vectorized 0 loops in function.
R_SCIFA_SetBaud (r_channel_t channel, uint32_t desired_baud_rate, uint32_t clock_freq, scifa_sync_mode_t mode, uint32_t * p_achieved_baud_rate)
{
  _Bool gs_divisor_index_lsm.41;
  uint32_t gs_divisor_index_lsm.40;
  _Bool gs_divisor_index_lsm.39;
  uint32_t gs_divisor_index_lsm.38;
  int_t _1;
  long unsigned int iftmp.7_2;
  long unsigned int iftmp.11_3;
  unsigned char channel.0_7;
  long unsigned int gs_divisor_index.1_13;
  const struct st_baud_divisorb_t * gsp_baud_info.3_15;
  const struct st_baud_divisorb_t * _17;
  short int _18;
  long unsigned int _19;
  long unsigned int gs_ratio.4_21;
  long unsigned int _22;
  int _24;
  volatile struct st_scifa * _25;
  volatile unsigned char * _26;
  long unsigned int gs_ratio.4_28;
  long unsigned int gs_divisor.5_29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int iftmp.7_33;
  long unsigned int _34;
  long unsigned int iftmp.7_35;
  int _41;
  short int _42;
  long unsigned int _43;
  unsigned char _46;
  long unsigned int gs_divisor_index.13_49;
  float _51;
  float _55;
  float _57;
  float _58;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int iftmp.11_63;
  long unsigned int iftmp.11_64;
  float gs_actual_baud_rate.9_67;
  long unsigned int _68;
  long unsigned int _72;
  float gs_actual_baud_rate.9_74;
  long unsigned int _75;
  double _79;
  double _80;
  float _81;
  float _82;
  long unsigned int _84;
  long unsigned int _86;
  long unsigned int _89;
  const struct st_baud_divisorb_t * _90;
  short int _91;
  int _92;
  int _93;
  long unsigned int _94;
  unsigned char _95;
  long unsigned int _97;
  long unsigned int _100;
  const struct st_baud_divisorb_t * _101;
  short int _102;
  int _103;
  int _104;
  long unsigned int _105;
  float _106;
  long unsigned int gs_brr.21_107;
  long unsigned int _108;
  float _109;
  float _110;
  long unsigned int gs_divisor.22_111;
  float _112;
  float _113;
  float _114;
  float _115;
  float _116;
  float _117;
  float _118;
  float _119;
  float iftmp.23_120;
  float iftmp.23_121;
  int _122;
  long unsigned int _123;
  volatile unsigned char * _124;
  long unsigned int gs_divisor_index.13_125;
  unsigned char _126;
  const struct st_baud_divisorb_t * gsp_baud_info.18_129;
  long unsigned int gs_divisor_index.19_130;
  long unsigned int _131;
  const struct st_baud_divisorb_t * _132;
  unsigned char _133;
  const struct st_baud_divisorb_t * gsp_baud_info.18_136;
  long unsigned int gs_divisor_index.19_137;
  long unsigned int _138;
  const struct st_baud_divisorb_t * _139;
  unsigned char _140;
  volatile short unsigned int * _142;
  const struct st_baud_divisorb_t * gsp_baud_info.18_143;
  long unsigned int gs_divisor_index.19_144;
  long unsigned int _145;
  const struct st_baud_divisorb_t * _146;
  unsigned char _147;
  short unsigned int _148;
  long unsigned int gs_int_mddr.29_154;
  unsigned char _155;
  long unsigned int cstore_185;
  long unsigned int cstore_186;
  const struct st_baud_divisorb_t * cstore_187;
  const struct st_baud_divisorb_t * cstore_188;
  long unsigned int _189;
  long unsigned int _190;
  long unsigned int _203;
  long unsigned int prephitmp_204;
  long unsigned int _206;
  float _208;
  float prephitmp_209;
  float _210;
  float _212;
  float prephitmp_213;
  long unsigned int prephitmp_234;
  long unsigned int _246;
  long unsigned int pretmp_251;
  long unsigned int prephitmp_252;

  <bb 2>:
  channel.0_7 = (unsigned char) channel_6(D);
  if (channel.0_7 > 4)
    goto <bb 43>;
  else
    goto <bb 3>;

  <bb 3>:
  if (mode_11(D) == 0)
    goto <bb 41>;
  else
    goto <bb 4>;

  <bb 4>:
  gs_num_divisors = 4;
  gsp_baud_info = &gs_scifa_sync_baud;
  _84 = clock_freq_10(D) / desired_baud_rate_9(D);
  gs_ratio = _84;
  gs_divisor_index = 0;
  if (channel_6(D) == 0)
    goto <bb 10>;
  else
    goto <bb 5>;

  <bb 5>:
  # cstore_185 = PHI <4(4), 9(41)>
  # cstore_187 = PHI <&gs_scifa_sync_baud(4), &gs_scifa_async_baud(41)>
  # _189 = PHI <_84(4), _72(41)>
  if (cstore_185 != 0)
    goto <bb 6>;
  else
    goto <bb 42>;

  <bb 6>:
  _42 = cstore_187->divisor;
  _41 = (int) _42;
  _122 = _41 * 256;
  _123 = (long unsigned int) _122;
  if (_123 <= _189)
    goto <bb 16>;
  else
    goto <bb 22>;

  <bb 7>:
  _86 = gs_divisor_index.13_125 + 1;
  if (_86 < cstore_186)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  # gs_divisor_index_lsm.38_200 = PHI <_86(7)>
  gs_divisor_index = gs_divisor_index_lsm.38_200;
  goto <bb 42>;

  <bb 9>:
  goto <bb 11>;

  <bb 10>:
  # cstore_186 = PHI <4(4), 9(41)>
  # cstore_188 = PHI <&gs_scifa_sync_baud(4), &gs_scifa_async_baud(41)>
  # _190 = PHI <_84(4), _72(41)>
  # prephitmp_234 = PHI <4(4), 9(41)>
  gs_divisor_index_lsm.38_218 = gs_divisor_index;

  <bb 11>:
  # gs_divisor_index.13_125 = PHI <0(10), _86(9)>
  # gs_divisor_index_lsm.38_226 = PHI <gs_divisor_index_lsm.38_218(10), _86(9)>
  # gs_divisor_index_lsm.39_225 = PHI <0(10), 1(9)>
  _89 = gs_divisor_index.13_125 * 6;
  _90 = cstore_188 + _89;
  _91 = _90->divisor;
  _92 = (int) _91;
  _93 = _92 * 256;
  _94 = (long unsigned int) _93;
  if (_94 <= _190)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  _95 = _90->cks;
  if (_95 == 2)
    goto <bb 7>;
  else
    goto <bb 13>;

  <bb 13>:
  # gs_divisor_index_lsm.39_195 = PHI <gs_divisor_index_lsm.39_225(12)>
  # gs_divisor_index_lsm.38_194 = PHI <gs_divisor_index_lsm.38_226(12)>
  if (gs_divisor_index_lsm.39_195 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  gs_divisor_index = gs_divisor_index_lsm.38_194;

  <bb 15>:
  goto <bb 23>;

  <bb 16>:

  <bb 17>:
  # gs_divisor_index.13_49 = PHI <0(16), _97(21)>
  _97 = gs_divisor_index.13_49 + 1;
  if (_97 < cstore_185)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  # gs_divisor_index_lsm.40_197 = PHI <_97(17)>
  gs_divisor_index = gs_divisor_index_lsm.40_197;
  goto <bb 42>;

  <bb 19>:
  _100 = _97 * 6;
  _101 = cstore_187 + _100;
  _102 = _101->divisor;
  _103 = (int) _102;
  _104 = _103 * 256;
  _105 = (long unsigned int) _104;
  if (_105 <= _189)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  # _246 = PHI <_100(19)>
  # gs_divisor_index_lsm.40_196 = PHI <_97(19)>
  gs_divisor_index = gs_divisor_index_lsm.40_196;
  goto <bb 25>;

  <bb 21>:
  goto <bb 17>;

  <bb 22>:
  pretmp_251 = gs_num_divisors;

  <bb 23>:
  # prephitmp_252 = PHI <prephitmp_234(15), pretmp_251(22)>
  gs_divisor_index.1_13 = gs_divisor_index;
  if (gs_divisor_index.1_13 >= prephitmp_252)
    goto <bb 43>;
  else
    goto <bb 24>;

  <bb 24>:
  _203 = gs_divisor_index.1_13 * 6;

  <bb 25>:
  # prephitmp_204 = PHI <_203(24), _246(20)>
  gsp_baud_info.3_15 = gsp_baud_info;
  _17 = gsp_baud_info.3_15 + prephitmp_204;
  _18 = _17->divisor;
  _19 = (long unsigned int) _18;
  gs_divisor = _19;
  gs_ratio.4_21 = gs_ratio;
  _22 = gs_ratio.4_21 / _19;
  gs_brr = _22;
  if (_22 == 0)
    goto <bb 43>;
  else
    goto <bb 26>;

  <bb 26>:
  _24 = (int) channel_6(D);
  _25 = sp_scifa[_24];
  _26 = &_25->SEMR.BYTE;
  RZA_IO_RegWrite_8 (_26, 0, 4, 16);
  gs_ratio.4_28 = gs_ratio;
  gs_divisor.5_29 = gs_divisor;
  _30 = gs_divisor.5_29 >> 1;
  _31 = gs_ratio.4_28 / _30;
  _32 = _31 & 1;
  if (_32 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  iftmp.7_33 = _31 >> 1;
  goto <bb 29>;

  <bb 28>:
  _34 = _31 >> 1;
  iftmp.7_35 = _34 + 4294967295;

  <bb 29>:
  # iftmp.7_2 = PHI <iftmp.7_33(27), iftmp.7_35(28)>
  gs_brr = iftmp.7_2;
  _124 = &_25->BRR_MDDR.BRR.BYTE;
  _126 = (unsigned char) iftmp.7_2;
  RZA_IO_RegWrite_8 (_124, _126, 0, 4294967295);
  gsp_baud_info.18_129 = gsp_baud_info;
  gs_divisor_index.19_130 = gs_divisor_index;
  _131 = gs_divisor_index.19_130 * 6;
  _132 = gsp_baud_info.18_129 + _131;
  _133 = _132->abcs;
  RZA_IO_RegWrite_8 (_26, _133, 0, 1);
  gsp_baud_info.18_136 = gsp_baud_info;
  gs_divisor_index.19_137 = gs_divisor_index;
  _138 = gs_divisor_index.19_137 * 6;
  _139 = gsp_baud_info.18_136 + _138;
  _140 = _139->bgdm;
  RZA_IO_RegWrite_8 (_26, _140, 7, 128);
  _142 = &_25->SMR.WORD;
  gsp_baud_info.18_143 = gsp_baud_info;
  gs_divisor_index.19_144 = gs_divisor_index;
  _145 = gs_divisor_index.19_144 * 6;
  _146 = gsp_baud_info.18_143 + _145;
  _147 = _146->cks;
  _148 = (short unsigned int) _147;
  RZA_IO_RegWrite_16 (_142, _148, 0, 3);
  _106 = (float) clock_freq_10(D);
  gs_brr.21_107 = gs_brr;
  _108 = gs_brr.21_107 + 1;
  _109 = (float) _108;
  _110 = _106 / _109;
  gs_divisor.22_111 = gs_divisor;
  _112 = (float) gs_divisor.22_111;
  _113 = _110 / _112;
  gs_actual_baud_rate = _113;
  _114 = (float) desired_baud_rate_9(D);
  _115 = _112 * _114;
  _116 = _109 * _115;
  _117 = _106 / _116;
  _118 = _117 - 1.0e+0;
  _119 = _118 * 1.0e+2;
  if (_119 < 0.0)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  iftmp.23_120 = -_119;

  <bb 31>:
  # iftmp.23_121 = PHI <_119(29), iftmp.23_120(30)>
  gs_abs_error = iftmp.23_121;
  if (iftmp.23_121 <= 1.0e+0)
    goto <bb 33>;
  else
    goto <bb 32>;

  <bb 32>:
  if (gs_brr.21_107 == 1)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  RZA_IO_RegWrite_8 (_26, 0, 5, 32);
  gs_actual_baud_rate.9_74 = gs_actual_baud_rate;
  _75 = (long unsigned int) gs_actual_baud_rate.9_74;
  *p_achieved_baud_rate_69(D) = _75;
  goto <bb 40>;

  <bb 34>:
  if (_113 < _114)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  _43 = gs_brr.21_107 + 4294967295;
  gs_brr = _43;
  _46 = (unsigned char) _43;
  _25->BRR_MDDR.BRR.BYTE ={v} _46;
  _206 = _43 + 1;
  _208 = (float) _206;
  _210 = _106 / _208;
  _212 = _210 / _112;

  <bb 36>:
  # prephitmp_209 = PHI <_109(34), _208(35)>
  # prephitmp_213 = PHI <_113(34), _212(35)>
  _51 = _115 * 2.56e+2;
  _55 = _51 * prephitmp_209;
  _57 = _55 / _106;
  _58 = _57 * 2.0e+0;
  _60 = (long unsigned int) _58;
  _61 = _60 & 1;
  if (_61 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  _62 = _60 >> 1;
  iftmp.11_63 = _62 + 1;
  goto <bb 39>;

  <bb 38>:
  iftmp.11_64 = _60 >> 1;

  <bb 39>:
  # iftmp.11_3 = PHI <iftmp.11_63(37), iftmp.11_64(38)>
  gs_int_mddr = iftmp.11_3;
  _79 = (double) iftmp.11_3;
  _80 = 2.56e+2 / _79;
  _81 = (float) _80;
  _82 = prephitmp_213 / _81;
  gs_actual_baud_rate = _82;
  RZA_IO_RegWrite_8 (_26, 1, 4, 16);
  gs_int_mddr.29_154 = gs_int_mddr;
  _155 = (unsigned char) gs_int_mddr.29_154;
  RZA_IO_RegWrite_8 (_124, _155, 0, 4294967295);
  RZA_IO_RegWrite_8 (_26, 1, 5, 32);
  gs_actual_baud_rate.9_67 = gs_actual_baud_rate;
  _68 = (long unsigned int) gs_actual_baud_rate.9_67;
  *p_achieved_baud_rate_69(D) = _68;

  <bb 40>:
  # _1 = PHI <-1(43), 0(39), 0(33)>
  return _1;

  <bb 41>:
  gs_num_divisors = 9;
  gsp_baud_info = &gs_scifa_async_baud;
  _72 = clock_freq_10(D) / desired_baud_rate_9(D);
  gs_ratio = _72;
  gs_divisor_index = 0;
  if (channel_6(D) == 0)
    goto <bb 10>;
  else
    goto <bb 5>;

  <bb 42>:

  <bb 43>:
  goto <bb 40>;

}


