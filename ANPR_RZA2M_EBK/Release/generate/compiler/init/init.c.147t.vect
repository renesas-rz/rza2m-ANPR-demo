
;; Function __libc_init_array (__libc_init_array, funcdef_no=0, decl_uid=5413, cgraph_uid=0, symbol_order=0)


Analyzing loop at ../generate/compiler/init/init.c:66
../generate/compiler/init/init.c:66:3: note: ===== analyze_loop_nest =====
../generate/compiler/init/init.c:66:3: note: === vect_analyze_loop_form ===
../generate/compiler/init/init.c:66:3: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [1, + , 1] < (size_t) _17
  bounds on difference of bases: 0 ... 4294967294
Applying pattern match.pd:695, generic-match.c:64
Applying pattern match.pd:732, generic-match.c:10709
  result:
    # of iterations (size_t) _17 + 4294967295, bounded by 4294967294
Applying pattern match.pd:1047, generic-match.c:4821
Applying pattern match.pd:83, generic-match.c:9008
../generate/compiler/init/init.c:66:3: note: Symbolic number of iterations is (size_t) _17
Creating dr for __init_array_start[i_27]
analyze_innermost: Applying pattern match.pd:83, generic-match.c:9008
success.
	base_address: &__init_array_start
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: __init_array_start
	Access function 0: {0, +, 1}_2
../generate/compiler/init/init.c:66:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed

Analyzing loop at ../generate/compiler/init/init.c:60
../generate/compiler/init/init.c:60:3: note: ===== analyze_loop_nest =====
../generate/compiler/init/init.c:60:3: note: === vect_analyze_loop_form ===
../generate/compiler/init/init.c:60:3: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [1, + , 1] < (size_t) _8
  bounds on difference of bases: 0 ... 4294967294
Applying pattern match.pd:695, generic-match.c:64
Applying pattern match.pd:732, generic-match.c:10709
  result:
    # of iterations (size_t) _8 + 4294967295, bounded by 4294967294
Applying pattern match.pd:1047, generic-match.c:4821
Applying pattern match.pd:83, generic-match.c:9008
../generate/compiler/init/init.c:60:3: note: Symbolic number of iterations is (size_t) _8
Creating dr for __preinit_array_start[i_26]
analyze_innermost: Applying pattern match.pd:83, generic-match.c:9008
success.
	base_address: &__preinit_array_start
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: __preinit_array_start
	Access function 0: {0, +, 1}_1
../generate/compiler/init/init.c:60:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
../generate/compiler/init/init.c:54:6: note: vectorized 0 loops in function.
__libc_init_array ()
{
  size_t i;
  size_t count;
  int __preinit_array_end.0_5;
  int __preinit_array_start.1_6;
  int _7;
  int _8;
  void (*<T1296>) (void) _11;
  int __init_array_end.2_14;
  int __init_array_start.3_15;
  int _16;
  int _17;
  void (*<T1296>) (void) _19;

  <bb 2>:
  __preinit_array_end.0_5 = (int) &__preinit_array_end;
  __preinit_array_start.1_6 = (int) &__preinit_array_start;
  _7 = __preinit_array_end.0_5 - __preinit_array_start.1_6;
  _8 = _7 /[ex] 4;
  count_9 = (size_t) _8;
  if (count_9 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __init_array_end.2_14 = (int) &__init_array_end;
  __init_array_start.3_15 = (int) &__init_array_start;
  _16 = __init_array_end.2_14 - __init_array_start.3_15;
  _17 = _16 /[ex] 4;
  count_18 = (size_t) _17;
  if (count_18 != 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 4>:

  <bb 5>:
  # i_26 = PHI <0(4), i_13(7)>
  _11 = __preinit_array_start[i_26];
  _11 ();
  i_13 = i_26 + 1;
  if (count_9 > i_13)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 3>;

  <bb 7>:
  goto <bb 5>;

  <bb 8>:

  <bb 9>:
  return;

  <bb 10>:

  <bb 11>:
  # i_27 = PHI <0(10), i_21(12)>
  _19 = __init_array_start[i_27];
  _19 ();
  i_21 = i_27 + 1;
  if (count_18 > i_21)
    goto <bb 12>;
  else
    goto <bb 8>;

  <bb 12>:
  goto <bb 11>;

}


