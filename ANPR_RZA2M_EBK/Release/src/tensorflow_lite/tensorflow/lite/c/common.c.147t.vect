
;; Function TfLiteIntArrayEqual (TfLiteIntArrayEqual, funcdef_no=1, decl_uid=5346, cgraph_uid=1, symbol_order=1)


Analyzing loop at ../src/tensorflow_lite/tensorflow/lite/c/common.c:40
../src/tensorflow_lite/tensorflow/lite/c/common.c:40:24: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/tensorflow/lite/c/common.c:40:24: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/tensorflow/lite/c/common.c:40:24: note: not vectorized: control flow in loop.
../src/tensorflow_lite/tensorflow/lite/c/common.c:40:24: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/c/common.c:29:5: note: vectorized 0 loops in function.
TfLiteIntArrayEqual (const struct TfLiteIntArray * a, const struct TfLiteIntArray * b)
{
  int i;
  int _1;
  _Bool _5;
  _Bool _6;
  _Bool _7;
  int _8;
  const int[0:] * _9;
  int _11;
  int _12;
  int _14;
  unsigned int i.1_15;
  unsigned int _16;
  const int * _17;
  int _18;
  int _21;

  <bb 2>:
  if (a_2(D) == b_3(D))
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:
  _5 = a_2(D) == 0B;
  _6 = b_3(D) == 0B;
  _7 = _5 | _6;
  if (_7 != 0)
    goto <bb 11>;
  else
    goto <bb 4>;

  <bb 4>:
  _8 = b_3(D)->size;
  _12 = a_2(D)->size;
  if (_8 != _12)
    goto <bb 11>;
  else
    goto <bb 5>;

  <bb 5>:
  if (_8 > 0)
    goto <bb 6>;
  else
    goto <bb 11>;

  <bb 6>:
  _11 = a_2(D)->data[0];
  _21 = MEM[(const int *)b_3(D) + 4B];
  if (_11 != _21)
    goto <bb 11>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 10>;

  <bb 8>:
  _14 = a_2(D)->data[i_19];
  i.1_15 = (unsigned int) i_19;
  _16 = i.1_15 * 4;
  _9 = &b_3(D)->data;
  _17 = _9 + _16;
  _18 = *_17;
  if (_14 != _18)
    goto <bb 11>;
  else
    goto <bb 9>;

  <bb 9>:

  <bb 10>:
  # i_24 = PHI <0(7), i_19(9)>
  i_19 = i_24 + 1;
  if (_8 > i_19)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 11>:
  # _1 = PHI <1(5), 0(4), 1(2), 1(10), 0(3), 0(8), 0(6)>
  return _1;

}



;; Function TfLiteIntArrayEqualsArray (TfLiteIntArrayEqualsArray, funcdef_no=2, decl_uid=5350, cgraph_uid=2, symbol_order=2)


Analyzing loop at ../src/tensorflow_lite/tensorflow/lite/c/common.c:40
../src/tensorflow_lite/tensorflow/lite/c/common.c:40:24: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/tensorflow/lite/c/common.c:40:24: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/tensorflow/lite/c/common.c:40:24: note: not vectorized: control flow in loop.
../src/tensorflow_lite/tensorflow/lite/c/common.c:40:24: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/c/common.c:35:5: note: vectorized 0 loops in function.
TfLiteIntArrayEqualsArray (const struct TfLiteIntArray * a, int b_size, const int * b_data)
{
  int i;
  int _2;
  _Bool _5;
  int _6;
  int _8;
  int _10;
  unsigned int i.1_11;
  unsigned int _12;
  const int * _14;
  int _15;
  int _19;
  int _22;

  <bb 2>:
  if (a_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = b_size_4(D) == 0;
  _6 = (int) _5;
  goto <bb 11>;

  <bb 4>:
  _8 = a_3(D)->size;
  if (b_size_4(D) != _8)
    goto <bb 11>;
  else
    goto <bb 5>;

  <bb 5>:
  if (b_size_4(D) > 0)
    goto <bb 6>;
  else
    goto <bb 11>;

  <bb 6>:
  _19 = a_3(D)->data[0];
  _22 = *b_data_13(D);
  if (_19 != _22)
    goto <bb 11>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 10>;

  <bb 8>:
  _10 = a_3(D)->data[i_16];
  i.1_11 = (unsigned int) i_16;
  _12 = i.1_11 * 4;
  _14 = b_data_13(D) + _12;
  _15 = *_14;
  if (_10 != _15)
    goto <bb 11>;
  else
    goto <bb 9>;

  <bb 9>:

  <bb 10>:
  # i_23 = PHI <0(7), i_16(9)>
  i_16 = i_23 + 1;
  if (b_size_4(D) > i_16)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 11>:
  # _2 = PHI <_6(3), 0(6), 1(10), 0(4), 0(8), 1(5)>
  return _2;

}



;; Function TfLiteSparsityFree (TfLiteSparsityFree, funcdef_no=11, decl_uid=5484, cgraph_uid=11, symbol_order=11)


Analyzing loop at ../src/tensorflow_lite/tensorflow/lite/c/common.c:128
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: not vectorized: control flow in loop.
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/c/common.c:111:6: note: vectorized 0 loops in function.
TfLiteSparsityFree (struct TfLiteSparsity * sparsity)
{
  struct TfLiteIntArray * metadata$array_indices;
  struct TfLiteIntArray * metadata$array_segments;
  unsigned char metadata;
  int i;
  struct TfLiteIntArray * _10;
  struct TfLiteIntArray * _12;
  struct TfLiteDimensionMetadata * _14;
  unsigned int i.4_18;
  unsigned int _19;
  struct TfLiteDimensionMetadata * _20;
  struct TfLiteDimensionMetadata * prephitmp_35;
  int _38;
  struct TfLiteDimensionMetadata * prephitmp_44;
  int prephitmp_48;
  int pretmp_49;
  int prephitmp_50;
  struct TfLiteDimensionMetadata * pretmp_51;
  struct TfLiteDimensionMetadata * prephitmp_52;
  struct TfLiteDimensionMetadata * prephitmp_54;

  <bb 2>:
  if (sparsity_8(D) == 0B)
    goto <bb 17>;
  else
    goto <bb 3>;

  <bb 3>:
  _10 = sparsity_8(D)->traversal_order;
  if (_10 != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  free (_10);
  sparsity_8(D)->traversal_order = 0B;

  <bb 5>:
  _12 = sparsity_8(D)->block_map;
  if (_12 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  free (_12);
  sparsity_8(D)->block_map = 0B;

  <bb 7>:
  _14 = sparsity_8(D)->dim_metadata;
  if (_14 != 0B)
    goto <bb 8>;
  else
    goto <bb 16>;

  <bb 8>:
  _38 = sparsity_8(D)->dim_metadata_size;
  if (_38 > 0)
    goto <bb 9>;
  else
    goto <bb 15>;

  <bb 9>:

  <bb 10>:
  # i_41 = PHI <0(9), i_23(14)>
  # prephitmp_44 = PHI <_14(9), prephitmp_52(14)>
  # prephitmp_48 = PHI <_38(9), prephitmp_50(14)>
  i.4_18 = (unsigned int) i_41;
  _19 = i.4_18 * 16;
  _20 = prephitmp_44 + _19;
  metadata_15 = MEM[(struct TfLiteDimensionMetadata *)_20];
  if (metadata_15 == 1)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  metadata$array_segments_21 = MEM[(struct TfLiteDimensionMetadata *)_20 + 8B];
  metadata$array_indices_22 = MEM[(struct TfLiteDimensionMetadata *)_20 + 12B];
  free (metadata$array_segments_21);
  free (metadata$array_indices_22);
  pretmp_49 = sparsity_8(D)->dim_metadata_size;
  pretmp_51 = sparsity_8(D)->dim_metadata;

  <bb 12>:
  # prephitmp_50 = PHI <prephitmp_48(10), pretmp_49(11)>
  # prephitmp_52 = PHI <prephitmp_44(10), pretmp_51(11)>
  i_23 = i_41 + 1;
  if (i_23 < prephitmp_50)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  # prephitmp_35 = PHI <prephitmp_52(12)>
  goto <bb 15>;

  <bb 14>:
  goto <bb 10>;

  <bb 15>:
  # prephitmp_54 = PHI <prephitmp_35(13), _14(8)>
  free (prephitmp_54);

  <bb 16>:
  free (sparsity_8(D));

  <bb 17>:
  return;

}



;; Function TfLiteTensorFree (TfLiteTensorFree, funcdef_no=12, decl_uid=5486, cgraph_uid=12, symbol_order=12)


Analyzing loop at ../src/tensorflow_lite/tensorflow/lite/c/common.c:128
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: not vectorized: control flow in loop.
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/c/common.c:144:6: note: vectorized 0 loops in function.
TfLiteTensorFree (struct TfLiteTensor * t)
{
  struct TfLiteAffineQuantization * q_params;
  struct TfLiteIntArray * metadata$array_indices;
  struct TfLiteIntArray * metadata$array_segments;
  unsigned char metadata;
  int i;
  struct TfLiteIntArray * _5;
  const struct TfLiteIntArray * _7;
  struct TfLiteSparsity * _11;
  int prephitmp_12;
  TfLiteAllocationType _14;
  unsigned char _15;
  char * _16;
  struct TfLiteIntArray * _22;
  struct TfLiteIntArray * _23;
  struct TfLiteDimensionMetadata * _24;
  unsigned int i.4_27;
  unsigned int _28;
  struct TfLiteDimensionMetadata * _29;
  TfLiteQuantizationType _37;
  struct TfLiteFloatArray * _39;
  struct TfLiteIntArray * _40;
  int pretmp_65;
  int prephitmp_66;
  struct TfLiteDimensionMetadata * prephitmp_68;
  int _73;
  struct TfLiteDimensionMetadata * prephitmp_77;
  struct TfLiteDimensionMetadata * pretmp_79;
  struct TfLiteDimensionMetadata * prephitmp_80;
  struct TfLiteDimensionMetadata * prephitmp_82;

  <bb 2>:
  _14 = t_4(D)->allocation_type;
  _15 = _14 + 252;
  if (_15 <= 1)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _16 = t_4(D)->data.raw;
  free (_16);

  <bb 4>:
  t_4(D)->data.raw = 0B;
  _5 = t_4(D)->dims;
  if (_5 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  free (_5);

  <bb 6>:
  t_4(D)->dims = 0B;
  _7 = t_4(D)->dims_signature;
  if (_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  free (_7);

  <bb 8>:
  t_4(D)->dims_signature = 0B;
  _37 = MEM[(struct TfLiteQuantization *)t_4(D) + 48B].type;
  if (_37 == 1)
    goto <bb 9>;
  else
    goto <bb 14>;

  <bb 9>:
  q_params_38 = MEM[(struct TfLiteQuantization *)t_4(D) + 48B].params;
  _39 = q_params_38->scale;
  if (_39 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  free (_39);
  q_params_38->scale = 0B;

  <bb 11>:
  _40 = q_params_38->zero_point;
  if (_40 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  free (_40);

  <bb 13>:
  free (q_params_38);

  <bb 14>:
  MEM[(struct TfLiteQuantization *)t_4(D) + 48B].params = 0B;
  MEM[(struct TfLiteQuantization *)t_4(D) + 48B].type = 0;
  _11 = t_4(D)->sparsity;
  if (_11 == 0B)
    goto <bb 29>;
  else
    goto <bb 15>;

  <bb 15>:
  _22 = _11->traversal_order;
  if (_22 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  free (_22);
  _11->traversal_order = 0B;

  <bb 17>:
  _23 = _11->block_map;
  if (_23 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  free (_23);
  _11->block_map = 0B;

  <bb 19>:
  _24 = _11->dim_metadata;
  if (_24 != 0B)
    goto <bb 20>;
  else
    goto <bb 28>;

  <bb 20>:
  _73 = _11->dim_metadata_size;
  if (_73 > 0)
    goto <bb 21>;
  else
    goto <bb 27>;

  <bb 21>:

  <bb 22>:
  # i_69 = PHI <0(21), i_33(26)>
  # prephitmp_77 = PHI <_24(21), prephitmp_80(26)>
  # prephitmp_66 = PHI <_73(21), prephitmp_12(26)>
  i.4_27 = (unsigned int) i_69;
  _28 = i.4_27 * 16;
  _29 = prephitmp_77 + _28;
  metadata_30 = MEM[(struct TfLiteDimensionMetadata *)_29];
  if (metadata_30 == 1)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  metadata$array_segments_31 = MEM[(struct TfLiteDimensionMetadata *)_29 + 8B];
  metadata$array_indices_32 = MEM[(struct TfLiteDimensionMetadata *)_29 + 12B];
  free (metadata$array_segments_31);
  free (metadata$array_indices_32);
  pretmp_65 = _11->dim_metadata_size;
  pretmp_79 = _11->dim_metadata;

  <bb 24>:
  # prephitmp_12 = PHI <prephitmp_66(22), pretmp_65(23)>
  # prephitmp_80 = PHI <prephitmp_77(22), pretmp_79(23)>
  i_33 = i_69 + 1;
  if (prephitmp_12 > i_33)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  # prephitmp_68 = PHI <prephitmp_80(24)>
  goto <bb 27>;

  <bb 26>:
  goto <bb 22>;

  <bb 27>:
  # prephitmp_82 = PHI <prephitmp_68(25), _24(20)>
  free (prephitmp_82);

  <bb 28>:
  free (_11);

  <bb 29>:
  t_4(D)->sparsity = 0B;
  return;

}



;; Function TfLiteTensorReset (TfLiteTensorReset, funcdef_no=13, decl_uid=5497, cgraph_uid=13, symbol_order=13)


Analyzing loop at ../src/tensorflow_lite/tensorflow/lite/c/common.c:128
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: not vectorized: control flow in loop.
../src/tensorflow_lite/tensorflow/lite/c/common.c:128:5: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/c/common.c:159:6: note: vectorized 0 loops in function.
TfLiteTensorReset (TfLiteType type, const char * name, struct TfLiteIntArray * dims, struct TfLiteQuantizationParams quantization, char * buffer, size_t size, TfLiteAllocationType allocation_type, const void * allocation, _Bool is_variable, struct TfLiteTensor * tensor)
{
  struct TfLiteAffineQuantization * q_params;
  struct TfLiteIntArray * metadata$array_indices;
  struct TfLiteIntArray * metadata$array_segments;
  unsigned char metadata;
  int i;
  TfLiteAllocationType _23;
  unsigned char _24;
  char * _25;
  struct TfLiteIntArray * _26;
  const struct TfLiteIntArray * _27;
  struct TfLiteSparsity * _29;
  struct TfLiteIntArray * _30;
  struct TfLiteIntArray * _31;
  struct TfLiteDimensionMetadata * _32;
  unsigned int i.4_35;
  unsigned int _36;
  struct TfLiteDimensionMetadata * _37;
  TfLiteQuantizationType _45;
  struct TfLiteFloatArray * _47;
  struct TfLiteIntArray * _48;
  int prephitmp_82;
  int pretmp_84;
  int prephitmp_85;
  struct TfLiteDimensionMetadata * prephitmp_87;
  int _92;
  struct TfLiteDimensionMetadata * prephitmp_96;
  struct TfLiteDimensionMetadata * pretmp_98;
  struct TfLiteDimensionMetadata * prephitmp_99;
  struct TfLiteDimensionMetadata * prephitmp_101;

  <bb 2>:
  _23 = tensor_2(D)->allocation_type;
  _24 = _23 + 252;
  if (_24 <= 1)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _25 = tensor_2(D)->data.raw;
  free (_25);

  <bb 4>:
  tensor_2(D)->data.raw = 0B;
  _26 = tensor_2(D)->dims;
  if (_26 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  free (_26);

  <bb 6>:
  tensor_2(D)->dims = 0B;
  _27 = tensor_2(D)->dims_signature;
  if (_27 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  free (_27);

  <bb 8>:
  tensor_2(D)->dims_signature = 0B;
  _45 = MEM[(struct TfLiteQuantization *)tensor_2(D) + 48B].type;
  if (_45 == 1)
    goto <bb 9>;
  else
    goto <bb 14>;

  <bb 9>:
  q_params_46 = MEM[(struct TfLiteQuantization *)tensor_2(D) + 48B].params;
  _47 = q_params_46->scale;
  if (_47 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  free (_47);
  q_params_46->scale = 0B;

  <bb 11>:
  _48 = q_params_46->zero_point;
  if (_48 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  free (_48);

  <bb 13>:
  free (q_params_46);

  <bb 14>:
  MEM[(struct TfLiteQuantization *)tensor_2(D) + 48B].params = 0B;
  MEM[(struct TfLiteQuantization *)tensor_2(D) + 48B].type = 0;
  _29 = tensor_2(D)->sparsity;
  if (_29 == 0B)
    goto <bb 29>;
  else
    goto <bb 15>;

  <bb 15>:
  _30 = _29->traversal_order;
  if (_30 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  free (_30);
  _29->traversal_order = 0B;

  <bb 17>:
  _31 = _29->block_map;
  if (_31 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  free (_31);
  _29->block_map = 0B;

  <bb 19>:
  _32 = _29->dim_metadata;
  if (_32 != 0B)
    goto <bb 20>;
  else
    goto <bb 28>;

  <bb 20>:
  _92 = _29->dim_metadata_size;
  if (_92 > 0)
    goto <bb 21>;
  else
    goto <bb 27>;

  <bb 21>:

  <bb 22>:
  # i_88 = PHI <0(21), i_41(26)>
  # prephitmp_96 = PHI <_32(21), prephitmp_99(26)>
  # prephitmp_85 = PHI <_92(21), prephitmp_82(26)>
  i.4_35 = (unsigned int) i_88;
  _36 = i.4_35 * 16;
  _37 = prephitmp_96 + _36;
  metadata_38 = MEM[(struct TfLiteDimensionMetadata *)_37];
  if (metadata_38 == 1)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  metadata$array_segments_39 = MEM[(struct TfLiteDimensionMetadata *)_37 + 8B];
  metadata$array_indices_40 = MEM[(struct TfLiteDimensionMetadata *)_37 + 12B];
  free (metadata$array_segments_39);
  free (metadata$array_indices_40);
  pretmp_84 = _29->dim_metadata_size;
  pretmp_98 = _29->dim_metadata;

  <bb 24>:
  # prephitmp_82 = PHI <prephitmp_85(22), pretmp_84(23)>
  # prephitmp_99 = PHI <prephitmp_96(22), pretmp_98(23)>
  i_41 = i_88 + 1;
  if (i_41 < prephitmp_82)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  # prephitmp_87 = PHI <prephitmp_99(24)>
  goto <bb 27>;

  <bb 26>:
  goto <bb 22>;

  <bb 27>:
  # prephitmp_101 = PHI <prephitmp_87(25), _32(20)>
  free (prephitmp_101);

  <bb 28>:
  free (_29);

  <bb 29>:
  tensor_2(D)->sparsity = 0B;
  tensor_2(D)->type = type_4(D);
  tensor_2(D)->name = name_6(D);
  tensor_2(D)->dims = dims_8(D);
  tensor_2(D)->params = quantization;
  tensor_2(D)->data.raw = buffer_11(D);
  tensor_2(D)->bytes = size_13(D);
  tensor_2(D)->allocation_type = allocation_type_15(D);
  tensor_2(D)->allocation = allocation_17(D);
  tensor_2(D)->is_variable = is_variable_19(D);
  tensor_2(D)->quantization.type = 0;
  tensor_2(D)->quantization.params = 0B;
  return;

}


