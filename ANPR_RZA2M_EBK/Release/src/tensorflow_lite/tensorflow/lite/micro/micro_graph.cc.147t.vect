
;; Function virtual TfLiteStatus tflite::MicroGraph::InvokeSubgraph(int) (_ZN6tflite10MicroGraph14InvokeSubgraphEi, funcdef_no=6527, decl_uid=178271, cgraph_uid=3743, symbol_order=3778)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/base.h:392
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/base.h:392:22: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/base.h:392:22: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/base.h:392:22: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/base.h:392:22: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:146:14: note: vectorized 0 loops in function.
virtual TfLiteStatus tflite::MicroGraph::InvokeSubgraph(int) (struct MicroGraph * const this, int subgraph_idx)
{
  const uint8_t * p;
  const struct SubGraph * D.231414;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  const struct TfLiteRegistration * registration;
  struct TfLiteNode * node;
  size_t i;
  int previous_subgraph_idx;
  TfLiteStatus _2;
  const struct Vector * _10;
  long unsigned int _11;
  long unsigned int subgraph_idx.14_12;
  long unsigned int _14;
  struct SubgraphAllocations * _15;
  unsigned int _16;
  struct SubgraphAllocations * _17;
  struct NodeAndRegistration * _18;
  unsigned int _19;
  struct NodeAndRegistration * _20;
  TfLiteStatus (*<T1332>) (struct TfLiteContext *, struct TfLiteNode *) _23;
  struct TfLiteContext * _24;
  TfLiteStatus _26;
  struct MicroAllocator * _27;
  int (*__vtbl_ptr_type) () * _28;
  int (*__vtbl_ptr_type) () _29;
  long int _35;
  sizetype _36;
  sizetype _37;
  const uint8_t * _38;
  short unsigned int _39;
  int _40;
  short unsigned int _41;
  sizetype _43;
  long unsigned int _45;
  const struct Vector * iftmp.5_46;
  const uint8_t * _50;
  long unsigned int _51;
  long unsigned int _53;
  const struct SubGraph * _54;
  long unsigned int _64;
  const uint8_t[1] * pretmp_67;
  TfLiteStatus _73;

  <bb 2>:
  previous_subgraph_idx_7 = this_6(D)->current_subgraph_index_;
  this_6(D)->current_subgraph_index_ = subgraph_idx_8(D);
  _10 = this_6(D)->subgraphs_;
  _14 = _10->length_;
  subgraph_idx.14_12 = (long unsigned int) subgraph_idx_8(D);
  if (subgraph_idx.14_12 >= _14)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 15>;

  <bb 4>:
  _50 = &MEM[(void *)_10 + 4B];
  _51 = subgraph_idx.14_12 * 4;
  p_52 = _50 + _51;
  _53 = MEM[(const long unsigned int *)p_52];
  _54 = p_52 + _53;
  pretmp_67 = &MEM[(const struct Table *)_54].data_;
  _16 = subgraph_idx.14_12 * 8;

  <bb 5>:
  # i_1 = PHI <0(4), i_31(13)>
  _35 = MEM[(const long int *)_54];
  _36 = (sizetype) _35;
  _37 = -_36;
  _38 = pretmp_67 + _37;
  _39 = MEM[(const short unsigned int *)_38];
  _40 = (int) _39;
  if (_40 > 10)
    goto <bb 6>;
  else
    goto <bb 16>;

  <bb 6>:
  _41 = MEM[(const short unsigned int *)_38 + 10B];
  _43 = (sizetype) _41;
  p_44 = pretmp_67 + _43;
  if (_41 != 0)
    goto <bb 7>;
  else
    goto <bb 16>;

  <bb 7>:
  _45 = MEM[(const long unsigned int *)p_44];
  iftmp.5_46 = p_44 + _45;
  _11 = iftmp.5_46->length_;
  if (i_1 < _11)
    goto <bb 8>;
  else
    goto <bb 14>;

  <bb 8>:
  _15 = this_6(D)->subgraph_allocations_;
  _17 = _15 + _16;
  _18 = _17->node_and_registrations;
  _19 = i_1 * 44;
  _20 = _18 + _19;
  node_21 = &_20->node;
  registration_22 = _20->registration;
  _23 = registration_22->invoke;
  if (_23 != 0B)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  abort ();

  <bb 10>:
  _24 = this_6(D)->context_;
  _26 = _23 (_24, node_21);
  _27 = this_6(D)->allocator_;
  _28 = _27->_vptr.MicroAllocator;
  _29 = MEM[(int (*__vtbl_ptr_type) () *)_28 + 8B];
  OBJ_TYPE_REF(_29;(struct MicroAllocator)_27->2) (_27);
  if (_26 == 1)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:
  if (_26 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # _73 = PHI <_26(11)>
  goto <bb 15>;

  <bb 13>:
  i_31 = i_1 + 1;
  goto <bb 5>;

  <bb 14>:
  this_6(D)->current_subgraph_index_ = previous_subgraph_idx_7;

  <bb 15>:
  # _2 = PHI <1(3), 0(14), _73(12)>
  return _2;

  <bb 16>:
  _64 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}



;; Function virtual TfLiteStatus tflite::MicroGraph::FreeSubgraphs() (_ZN6tflite10MicroGraph13FreeSubgraphsEv, funcdef_no=6526, decl_uid=178268, cgraph_uid=3742, symbol_order=3777)


Analyzing loop at ../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:125
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:125:43: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:125:43: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:125:43: note: not vectorized: control flow in loop.
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:125:43: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:120:14: note: vectorized 0 loops in function.
virtual TfLiteStatus tflite::MicroGraph::FreeSubgraphs() (struct MicroGraph * const this)
{
  const uint8_t * p;
  const struct SubGraph * D.231427;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  const struct TfLiteRegistration * registration;
  size_t i;
  size_t subgraph_idx;
  int previous_subgraph_idx;
  const struct Vector * _9;
  long unsigned int _10;
  int subgraph_idx.11_11;
  long unsigned int _14;
  struct SubgraphAllocations * _15;
  unsigned int _16;
  struct SubgraphAllocations * _17;
  struct NodeAndRegistration * _18;
  unsigned int _19;
  struct NodeAndRegistration * _20;
  void (*<T132e>) (struct TfLiteContext *, void *) _22;
  struct TfLiteContext * _23;
  void * _24;
  sizetype _31;
  sizetype _32;
  const uint8_t * _33;
  int _35;
  short unsigned int _36;
  sizetype _38;
  long unsigned int _40;
  const struct Vector * iftmp.5_41;
  const struct Vector * _44;
  const uint8_t * _45;
  long unsigned int _46;
  long unsigned int _48;
  const struct SubGraph * _49;
  long unsigned int _55;
  const struct Vector * _58;
  long unsigned int _59;
  const uint8_t[1] * pretmp_120;
  long int pretmp_127;
  long int prephitmp_128;
  sizetype _129;
  sizetype _131;
  const uint8_t[1] * _133;
  short unsigned int pretmp_135;
  short unsigned int prephitmp_136;
  long int pretmp_139;
  long int prephitmp_140;
  sizetype _141;
  sizetype _142;
  const uint8_t[1] * _143;
  short unsigned int pretmp_144;
  short unsigned int prephitmp_145;

  <bb 2>:
  previous_subgraph_idx_8 = this_7(D)->current_subgraph_index_;
  _58 = this_7(D)->subgraphs_;
  _59 = _58->length_;
  if (_59 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  this_7(D)->current_subgraph_index_ = previous_subgraph_idx_8;
  return 0;

  <bb 4>:

  <bb 5>:
  # subgraph_idx_53 = PHI <0(4), subgraph_idx_27(14)>
  # _44 = PHI <_58(4), _9(14)>
  subgraph_idx.11_11 = (int) subgraph_idx_53;
  this_7(D)->current_subgraph_index_ = subgraph_idx.11_11;
  _45 = &MEM[(void *)_44 + 4B];
  _46 = subgraph_idx_53 * 4;
  p_47 = _45 + _46;
  _48 = MEM[(const long unsigned int *)p_47];
  _49 = p_47 + _48;
  pretmp_120 = &MEM[(const struct Table *)_49].data_;
  pretmp_139 = MEM[(const long int *)_49];
  _141 = (sizetype) pretmp_139;
  _142 = -_141;
  _143 = pretmp_120 + _142;
  pretmp_144 = MEM[(const short unsigned int *)_143];
  _16 = subgraph_idx_53 * 8;

  <bb 6>:
  # i_2 = PHI <0(5), i_26(12)>
  # prephitmp_140 = PHI <pretmp_139(5), prephitmp_128(12)>
  # prephitmp_145 = PHI <pretmp_144(5), prephitmp_136(12)>
  _35 = (int) prephitmp_145;
  if (_35 > 10)
    goto <bb 7>;
  else
    goto <bb 15>;

  <bb 7>:
  _31 = (sizetype) prephitmp_140;
  _32 = -_31;
  _33 = pretmp_120 + _32;
  _36 = MEM[(const short unsigned int *)_33 + 10B];
  _38 = (sizetype) _36;
  p_39 = pretmp_120 + _38;
  if (_36 != 0)
    goto <bb 8>;
  else
    goto <bb 15>;

  <bb 8>:
  _40 = MEM[(const long unsigned int *)p_39];
  iftmp.5_41 = p_39 + _40;
  _10 = iftmp.5_41->length_;
  if (i_2 < _10)
    goto <bb 9>;
  else
    goto <bb 13>;

  <bb 9>:
  _15 = this_7(D)->subgraph_allocations_;
  _17 = _15 + _16;
  _18 = _17->node_and_registrations;
  _19 = i_2 * 44;
  _20 = _18 + _19;
  registration_21 = _20->registration;
  if (registration_21 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  _22 = registration_21->free;
  if (_22 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _23 = this_7(D)->context_;
  _24 = MEM[(struct TfLiteNode *)_20].user_data;
  _22 (_23, _24);
  pretmp_127 = MEM[(const long int *)_49];
  _129 = (sizetype) pretmp_127;
  _131 = -_129;
  _133 = pretmp_120 + _131;
  pretmp_135 = MEM[(const short unsigned int *)_133];

  <bb 12>:
  # prephitmp_128 = PHI <prephitmp_140(9), prephitmp_140(10), pretmp_127(11)>
  # prephitmp_136 = PHI <prephitmp_145(9), prephitmp_145(10), pretmp_135(11)>
  i_26 = i_2 + 1;
  goto <bb 6>;

  <bb 13>:
  subgraph_idx_27 = subgraph_idx_53 + 1;
  _9 = this_7(D)->subgraphs_;
  _14 = _9->length_;
  if (_14 > subgraph_idx_27)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 14>:
  goto <bb 5>;

  <bb 15>:
  _55 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}



;; Function virtual TfLiteStatus tflite::MicroGraph::InitSubgraphs() (_ZN6tflite10MicroGraph13InitSubgraphsEv, funcdef_no=6524, decl_uid=178264, cgraph_uid=3740, symbol_order=3775)


Analyzing loop at ../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:59
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:59:43: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:59:43: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:59:43: note: not vectorized: control flow in loop.
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:59:43: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:54:14: note: vectorized 0 loops in function.
virtual TfLiteStatus tflite::MicroGraph::InitSubgraphs() (struct MicroGraph * const this)
{
  const uint8_t * p;
  const struct SubGraph * D.231440;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  const char * init_data;
  size_t init_data_size;
  const struct TfLiteRegistration * registration;
  size_t i;
  size_t subgraph_idx;
  int previous_subgraph_idx;
  const struct Vector * _11;
  long unsigned int _12;
  int subgraph_idx.3_13;
  long unsigned int _16;
  struct SubgraphAllocations * _17;
  unsigned int _18;
  struct SubgraphAllocations * _19;
  struct NodeAndRegistration * _20;
  unsigned int _21;
  struct NodeAndRegistration * _22;
  long int _24;
  int _26;
  void * (*<T132a>) (struct TfLiteContext *, const char *, size_t) _29;
  struct TfLiteContext * _30;
  void * _32;
  sizetype _39;
  sizetype _40;
  const uint8_t * _41;
  int _43;
  short unsigned int _44;
  sizetype _46;
  long unsigned int _48;
  const struct Vector * iftmp.5_49;
  const struct Vector * _51;
  long unsigned int _52;
  const uint8_t * _53;
  long unsigned int _54;
  long unsigned int _56;
  const struct SubGraph * _57;
  const struct Vector * _67;
  long unsigned int _68;
  const uint8_t[1] * pretmp_130;
  long int pretmp_137;
  long int prephitmp_138;
  sizetype _139;
  sizetype _141;
  const uint8_t[1] * _143;
  short unsigned int pretmp_145;
  short unsigned int prephitmp_146;
  long int pretmp_149;
  long int prephitmp_150;
  sizetype _151;
  sizetype _152;
  const uint8_t[1] * _153;
  short unsigned int pretmp_154;
  short unsigned int prephitmp_155;

  <bb 2>:
  previous_subgraph_idx_10 = this_9(D)->current_subgraph_index_;
  _67 = this_9(D)->subgraphs_;
  _68 = _67->length_;
  if (_68 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  this_9(D)->current_subgraph_index_ = previous_subgraph_idx_10;
  return 0;

  <bb 4>:

  <bb 5>:
  # subgraph_idx_62 = PHI <0(4), subgraph_idx_35(15)>
  # _51 = PHI <_67(4), _11(15)>
  subgraph_idx.3_13 = (int) subgraph_idx_62;
  this_9(D)->current_subgraph_index_ = subgraph_idx.3_13;
  _53 = &MEM[(void *)_51 + 4B];
  _54 = subgraph_idx_62 * 4;
  p_55 = _53 + _54;
  _56 = MEM[(const long unsigned int *)p_55];
  _57 = p_55 + _56;
  pretmp_130 = &MEM[(const struct Table *)_57].data_;
  pretmp_149 = MEM[(const long int *)_57];
  _151 = (sizetype) pretmp_149;
  _152 = -_151;
  _153 = pretmp_130 + _152;
  pretmp_154 = MEM[(const short unsigned int *)_153];
  _18 = subgraph_idx_62 * 8;

  <bb 6>:
  # i_2 = PHI <0(5), i_34(13)>
  # prephitmp_150 = PHI <pretmp_149(5), prephitmp_138(13)>
  # prephitmp_155 = PHI <pretmp_154(5), prephitmp_146(13)>
  _43 = (int) prephitmp_155;
  if (_43 > 10)
    goto <bb 7>;
  else
    goto <bb 16>;

  <bb 7>:
  _39 = (sizetype) prephitmp_150;
  _40 = -_39;
  _41 = pretmp_130 + _40;
  _44 = MEM[(const short unsigned int *)_41 + 10B];
  _46 = (sizetype) _44;
  p_47 = pretmp_130 + _46;
  if (_44 != 0)
    goto <bb 8>;
  else
    goto <bb 16>;

  <bb 8>:
  _48 = MEM[(const long unsigned int *)p_47];
  iftmp.5_49 = p_47 + _48;
  _12 = iftmp.5_49->length_;
  if (i_2 < _12)
    goto <bb 9>;
  else
    goto <bb 14>;

  <bb 9>:
  _17 = this_9(D)->subgraph_allocations_;
  _19 = _17 + _18;
  _20 = _19->node_and_registrations;
  _21 = i_2 * 44;
  _22 = _20 + _21;
  registration_23 = _22->registration;
  _24 = registration_23->builtin_code;
  init_data_28 = MEM[(struct TfLiteNode *)_22].builtin_data;
  if (_24 == 32)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  init_data_25 = MEM[(struct TfLiteNode *)_22].custom_initial_data;
  _26 = MEM[(struct TfLiteNode *)_22].custom_initial_data_size;
  init_data_size_27 = (size_t) _26;

  <bb 11>:
  # init_data_size_3 = PHI <init_data_size_27(10), 0(9)>
  # init_data_4 = PHI <init_data_25(10), init_data_28(9)>
  _29 = registration_23->init;
  if (_29 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _30 = this_9(D)->context_;
  _32 = _29 (_30, init_data_4, init_data_size_3);
  MEM[(struct TfLiteNode *)_22].user_data = _32;
  pretmp_137 = MEM[(const long int *)_57];
  _139 = (sizetype) pretmp_137;
  _141 = -_139;
  _143 = pretmp_130 + _141;
  pretmp_145 = MEM[(const short unsigned int *)_143];

  <bb 13>:
  # prephitmp_138 = PHI <prephitmp_150(11), pretmp_137(12)>
  # prephitmp_146 = PHI <prephitmp_155(11), pretmp_145(12)>
  i_34 = i_2 + 1;
  goto <bb 6>;

  <bb 14>:
  subgraph_idx_35 = subgraph_idx_62 + 1;
  _11 = this_9(D)->subgraphs_;
  _16 = _11->length_;
  if (_16 > subgraph_idx_35)
    goto <bb 15>;
  else
    goto <bb 3>;

  <bb 15>:
  goto <bb 5>;

  <bb 16>:
  _52 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}



;; Function virtual TfLiteStatus tflite::MicroGraph::PrepareSubgraphs() (_ZN6tflite10MicroGraph16PrepareSubgraphsEv, funcdef_no=6525, decl_uid=178266, cgraph_uid=3741, symbol_order=3776)


Analyzing loop at ../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:94
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:94:43: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:94:43: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:94:43: note: not vectorized: control flow in loop.
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:94:43: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/base.h:392
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/base.h:392:22: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/base.h:392:22: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/base.h:392:22: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/base.h:392:22: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:89:14: note: vectorized 0 loops in function.
virtual TfLiteStatus tflite::MicroGraph::PrepareSubgraphs() (struct MicroGraph * const this)
{
  const uint8_t * p;
  const struct SubGraph * D.231453;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  const struct TfLiteRegistration * registration;
  struct TfLiteNode * node;
  size_t i;
  size_t subgraph_idx;
  int previous_subgraph_idx;
  TfLiteStatus _3;
  const struct Vector * _11;
  long unsigned int _12;
  int subgraph_idx.7_13;
  long unsigned int _16;
  struct SubgraphAllocations * _18;
  unsigned int _19;
  struct SubgraphAllocations * _20;
  struct NodeAndRegistration * _21;
  unsigned int _22;
  struct NodeAndRegistration * _23;
  TfLiteStatus (*<T1332>) (struct TfLiteContext *, struct TfLiteNode *) _26;
  struct MicroAllocator * _27;
  int i.9_28;
  struct TfLiteContext * _31;
  TfLiteStatus _33;
  long int _36;
  sizetype _37;
  sizetype _38;
  const uint8_t * _39;
  short unsigned int _40;
  int _41;
  short unsigned int _42;
  sizetype _44;
  long unsigned int _46;
  const struct Vector * iftmp.5_47;
  const uint8_t * _51;
  long unsigned int _52;
  long unsigned int _54;
  const struct SubGraph * _55;
  const struct Vector * _58;
  long unsigned int _60;
  const struct Vector * _62;
  long unsigned int _63;
  const uint8_t[1] * pretmp_121;

  <bb 2>:
  previous_subgraph_idx_10 = this_9(D)->current_subgraph_index_;
  _62 = this_9(D)->subgraphs_;
  _63 = _62->length_;
  if (_63 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  this_9(D)->current_subgraph_index_ = previous_subgraph_idx_10;
  goto <bb 14>;

  <bb 4>:

  <bb 5>:
  # subgraph_idx_49 = PHI <0(4), subgraph_idx_17(13)>
  # _58 = PHI <_62(4), _11(13)>
  subgraph_idx.7_13 = (int) subgraph_idx_49;
  this_9(D)->current_subgraph_index_ = subgraph_idx.7_13;
  _51 = &MEM[(void *)_58 + 4B];
  _52 = subgraph_idx_49 * 4;
  p_53 = _51 + _52;
  _54 = MEM[(const long unsigned int *)p_53];
  _55 = p_53 + _54;
  pretmp_121 = &MEM[(const struct Table *)_55].data_;
  _19 = subgraph_idx_49 * 8;

  <bb 6>:
  # i_2 = PHI <0(5), i_30(10)>
  _36 = MEM[(const long int *)_55];
  _37 = (sizetype) _36;
  _38 = -_37;
  _39 = pretmp_121 + _38;
  _40 = MEM[(const short unsigned int *)_39];
  _41 = (int) _40;
  if (_41 > 10)
    goto <bb 7>;
  else
    goto <bb 15>;

  <bb 7>:
  _42 = MEM[(const short unsigned int *)_39 + 10B];
  _44 = (sizetype) _42;
  p_45 = pretmp_121 + _44;
  if (_42 != 0)
    goto <bb 8>;
  else
    goto <bb 15>;

  <bb 8>:
  _46 = MEM[(const long unsigned int *)p_45];
  iftmp.5_47 = p_45 + _46;
  _12 = iftmp.5_47->length_;
  if (i_2 < _12)
    goto <bb 9>;
  else
    goto <bb 12>;

  <bb 9>:
  _18 = this_9(D)->subgraph_allocations_;
  _20 = _18 + _19;
  _21 = _20->node_and_registrations;
  _22 = i_2 * 44;
  _23 = _21 + _22;
  node_24 = &_23->node;
  registration_25 = _23->registration;
  _26 = registration_25->prepare;
  if (_26 != 0B)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  _27 = this_9(D)->allocator_;
  i.9_28 = (int) i_2;
  tflite::MicroAllocator::FinishPrepareNodeAllocations (_27, i.9_28);
  i_30 = i_2 + 1;
  goto <bb 6>;

  <bb 11>:
  _31 = this_9(D)->context_;
  _33 = _26 (_31, node_24);
  if (_33 != 0)
    goto <bb 14>;
  else
    goto <bb 10>;

  <bb 12>:
  subgraph_idx_17 = subgraph_idx_49 + 1;
  _11 = this_9(D)->subgraphs_;
  _16 = _11->length_;
  if (_16 > subgraph_idx_17)
    goto <bb 13>;
  else
    goto <bb 3>;

  <bb 13>:
  goto <bb 5>;

  <bb 14>:
  # _3 = PHI <1(11), 0(3)>
  return _3;

  <bb 15>:
  _60 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}



;; Function virtual TfLiteStatus tflite::MicroGraph::ResetVariableTensors() (_ZN6tflite10MicroGraph20ResetVariableTensorsEv, funcdef_no=6528, decl_uid=178273, cgraph_uid=3744, symbol_order=3779)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:340
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:340:58: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:340:58: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:340:58: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:340:58: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/micro/micro_graph.cc:194:14: note: vectorized 0 loops in function.
virtual TfLiteStatus tflite::MicroGraph::ResetVariableTensors() (struct MicroGraph * const this)
{
  const uint8_t * p;
  const struct Tensor * D.231470;
  static const char __PRETTY_FUNCTION__[246] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::Tensor>; flatbuffers::Vector<T>::return_type = const tflite::Tensor*; flatbuffers::uoffset_t = long unsigned int]";
  const uint8_t * p;
  const struct SubGraph * D.231466;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  static const char __PRETTY_FUNCTION__[216] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = long long int; flatbuffers::Vector<T>::return_type = long long int; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  int value;
  size_t buffer_size;
  size_t i;
  size_t subgraph_idx;
  TfLiteStatus _4;
  const struct Vector * _11;
  const uint8_t * _12;
  sizetype _13;
  sizetype _14;
  struct SubgraphAllocations * _21;
  unsigned int _22;
  struct SubgraphAllocations * _23;
  struct TfLiteEvalTensor * _24;
  unsigned int _25;
  struct TfLiteEvalTensor * _26;
  const TfLiteStatus _28;
  long unsigned int _29;
  long unsigned int _31;
  struct SubgraphAllocations * _33;
  struct SubgraphAllocations * _34;
  struct TfLiteEvalTensor * _35;
  struct TfLiteEvalTensor * _36;
  char * _37;
  unsigned int buffer_size.22_38;
  int _43;
  short unsigned int _44;
  sizetype _46;
  long unsigned int _48;
  const struct Vector * iftmp.23_49;
  const uint8_t[1] * _51;
  long int _52;
  sizetype _53;
  sizetype _54;
  const uint8_t * _55;
  short unsigned int _56;
  int _57;
  short unsigned int _58;
  sizetype _60;
  const void * _61;
  unsigned char _62;
  long int _71;
  sizetype _72;
  sizetype _73;
  const uint8_t * _74;
  short unsigned int _75;
  int _76;
  short unsigned int _77;
  sizetype _79;
  const void * _80;
  signed char _81;
  long unsigned int _83;
  long long int _84;
  long int _86;
  short unsigned int _92;
  long unsigned int _93;
  sizetype _94;
  long unsigned int _96;
  const struct Vector * iftmp.27_97;
  short unsigned int _99;
  sizetype _101;
  long unsigned int _103;
  const struct QuantizationParameters * iftmp.26_104;
  const uint8_t * _109;
  long unsigned int _110;
  long unsigned int _112;
  const struct SubGraph * _113;
  const uint8_t * _115;
  long unsigned int _116;
  long unsigned int _118;
  const struct Tensor * _119;
  const struct Vector * _122;
  long unsigned int _146;
  long unsigned int _150;
  const struct Vector * _151;
  const uint8_t[1] * _158;
  long int _159;
  sizetype _160;
  sizetype _161;
  const uint8_t * _162;
  short unsigned int _163;
  int _164;
  long int _166;
  const uint8_t[1] * pretmp_172;
  TfLiteStatus _188;
  long int pretmp_192;
  long int prephitmp_193;
  sizetype _194;
  sizetype _196;
  const uint8_t[1] * _198;
  short unsigned int pretmp_200;
  short unsigned int prephitmp_201;
  long int pretmp_204;
  long int prephitmp_205;
  sizetype _206;
  sizetype _207;
  const uint8_t[1] * _208;
  short unsigned int pretmp_209;
  short unsigned int prephitmp_210;

  <bb 2>:
  _122 = this_10(D)->subgraphs_;
  _93 = _122->length_;
  if (_93 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 29>;

  <bb 4>:

  <bb 5>:
  # subgraph_idx_100 = PHI <0(4), subgraph_idx_15(28)>
  # _151 = PHI <_122(4), _11(28)>
  _109 = &MEM[(void *)_151 + 4B];
  _110 = subgraph_idx_100 * 4;
  p_111 = _109 + _110;
  _112 = MEM[(const long unsigned int *)p_111];
  _113 = p_111 + _112;
  pretmp_172 = &MEM[(const struct Table *)_113].data_;
  pretmp_204 = MEM[(const long int *)_113];
  _206 = (sizetype) pretmp_204;
  _207 = -_206;
  _208 = pretmp_172 + _207;
  pretmp_209 = MEM[(const short unsigned int *)_208];
  _22 = subgraph_idx_100 * 8;

  <bb 6>:
  # i_2 = PHI <0(5), i_20(26)>
  # prephitmp_205 = PHI <pretmp_204(5), prephitmp_193(26)>
  # prephitmp_210 = PHI <pretmp_209(5), prephitmp_201(26)>
  _43 = (int) prephitmp_210;
  if (_43 > 4)
    goto <bb 7>;
  else
    goto <bb 30>;

  <bb 7>:
  _14 = (sizetype) prephitmp_205;
  _13 = -_14;
  _12 = pretmp_172 + _13;
  _44 = MEM[(const short unsigned int *)_12 + 4B];
  _46 = (sizetype) _44;
  p_47 = pretmp_172 + _46;
  if (_44 != 0)
    goto <bb 8>;
  else
    goto <bb 30>;

  <bb 8>:
  _48 = MEM[(const long unsigned int *)p_47];
  iftmp.23_49 = p_47 + _48;
  _29 = iftmp.23_49->length_;
  if (i_2 < _29)
    goto <bb 9>;
  else
    goto <bb 27>;

  <bb 9>:
  _115 = &MEM[(void *)iftmp.23_49 + 4B];
  _116 = i_2 * 4;
  p_117 = _115 + _116;
  _118 = MEM[(const long unsigned int *)p_117];
  _119 = p_117 + _118;
  _51 = &MEM[(const struct Table *)_119].data_;
  _52 = MEM[(const long int *)_119];
  _53 = (sizetype) _52;
  _54 = -_53;
  _55 = _51 + _54;
  _56 = MEM[(const short unsigned int *)_55];
  _57 = (int) _56;
  if (_57 > 14)
    goto <bb 10>;
  else
    goto <bb 26>;

  <bb 10>:
  _58 = MEM[(const short unsigned int *)_55 + 14B];
  if (_58 != 0)
    goto <bb 11>;
  else
    goto <bb 26>;

  <bb 11>:
  _60 = (sizetype) _58;
  _61 = _51 + _60;
  _62 = MEM[(const unsigned char *)_61];
  if (_62 != 0)
    goto <bb 12>;
  else
    goto <bb 26>;

  <bb 12>:
  _21 = this_10(D)->subgraph_allocations_;
  _23 = _21 + _22;
  _24 = _23->tensors;
  _25 = i_2 * 12;
  _26 = _24 + _25;
  _28 = tflite::TfLiteEvalTensorByteLength (_26, &buffer_size);
  if (_28 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # _188 = PHI <_28(12)>
  buffer_size ={v} {CLOBBER};
  goto <bb 29>;

  <bb 14>:
  _71 = MEM[(const long int *)_119];
  _72 = (sizetype) _71;
  _73 = -_72;
  _74 = _51 + _73;
  _75 = MEM[(const short unsigned int *)_74];
  _76 = (int) _75;
  if (_76 > 6)
    goto <bb 15>;
  else
    goto <bb 25>;

  <bb 15>:
  _77 = MEM[(const short unsigned int *)_74 + 6B];
  if (_77 != 0)
    goto <bb 16>;
  else
    goto <bb 25>;

  <bb 16>:
  _79 = (sizetype) _77;
  _80 = _51 + _79;
  _81 = MEM[(const signed char *)_80];
  if (_81 == 9)
    goto <bb 17>;
  else
    goto <bb 25>;

  <bb 17>:
  if (_76 > 12)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:
  _99 = MEM[(const short unsigned int *)_74 + 12B];
  _101 = (sizetype) _99;
  p_102 = _51 + _101;
  if (_99 != 0)
    goto <bb 19>;
  else
    goto <bb 32>;

  <bb 19>:
  _103 = MEM[(const long unsigned int *)p_102];
  iftmp.26_104 = p_102 + _103;
  _158 = &MEM[(const struct Table *)iftmp.26_104].data_;
  _159 = MEM[(const long int *)iftmp.26_104];
  _160 = (sizetype) _159;
  _161 = -_160;
  _162 = _158 + _161;
  _163 = MEM[(const short unsigned int *)_162];
  _164 = (int) _163;
  if (_164 > 10)
    goto <bb 21>;
  else
    goto <bb 31>;

  <bb 20>:
  _86 ={v} MEM[(const long int *)0B];
  __builtin_trap ();

  <bb 21>:
  _92 = MEM[(const short unsigned int *)_162 + 10B];
  _94 = (sizetype) _92;
  p_95 = _158 + _94;
  if (_92 != 0)
    goto <bb 22>;
  else
    goto <bb 31>;

  <bb 22>:
  _96 = MEM[(const long unsigned int *)p_95];
  iftmp.27_97 = p_95 + _96;
  _83 = iftmp.27_97->length_;
  if (_83 != 0)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 24>:
  _84 = MEM[(const long long int *)iftmp.27_97 + 4B];
  value_32 = (int) _84;

  <bb 25>:
  # value_3 = PHI <0(15), value_32(24), 0(14), 0(16)>
  _33 = this_10(D)->subgraph_allocations_;
  _34 = _33 + _22;
  _35 = _34->tensors;
  _36 = _35 + _25;
  _37 = _36->data.raw;
  buffer_size.22_38 = buffer_size;
  memset (_37, value_3, buffer_size.22_38);
  buffer_size ={v} {CLOBBER};
  pretmp_192 = MEM[(const long int *)_113];
  _194 = (sizetype) pretmp_192;
  _196 = -_194;
  _198 = pretmp_172 + _196;
  pretmp_200 = MEM[(const short unsigned int *)_198];

  <bb 26>:
  # prephitmp_193 = PHI <prephitmp_205(11), pretmp_192(25), prephitmp_205(10), prephitmp_205(9)>
  # prephitmp_201 = PHI <prephitmp_210(11), pretmp_200(25), prephitmp_210(10), prephitmp_210(9)>
  i_20 = i_2 + 1;
  goto <bb 6>;

  <bb 27>:
  subgraph_idx_15 = subgraph_idx_100 + 1;
  _11 = this_10(D)->subgraphs_;
  _31 = _11->length_;
  if (subgraph_idx_15 < _31)
    goto <bb 28>;
  else
    goto <bb 3>;

  <bb 28>:
  goto <bb 5>;

  <bb 29>:
  # _4 = PHI <_188(13), 0(3)>
  return _4;

  <bb 30>:
  _150 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 31>:
  _146 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 32>:
  _166 ={v} MEM[(const long int *)0B];
  __builtin_trap ();

}


