
;; Function virtual TfLiteStatus tflite::RecordingMicroAllocator::AllocateNodeAndRegistrations(const tflite::Model*, tflite::SubgraphAllocations*) (_ZN6tflite23RecordingMicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE, funcdef_no=6516, decl_uid=178344, cgraph_uid=3732, symbol_order=3767)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/micro/recording_micro_allocator.cc:132:14: note: vectorized 0 loops in function.
virtual TfLiteStatus tflite::RecordingMicroAllocator::AllocateNodeAndRegistrations(const tflite::Model*, tflite::SubgraphAllocations*) (struct RecordingMicroAllocator * const this, const struct Model * model, struct SubgraphAllocations * subgraph_allocations)
{
  const uint8_t * p;
  const struct SubGraph * D.231006;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  size_t subgraph_idx;
  struct RecordedAllocation allocations;
  struct MicroAllocator * _6;
  TfLiteStatus _10;
  sizetype _11;
  sizetype _12;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _22;
  const uint8_t * _26;
  int _28;
  short unsigned int _29;
  unsigned int _30;
  sizetype _31;
  long unsigned int _33;
  const struct Vector * iftmp.2_34;
  unsigned int _35;
  long int _36;
  sizetype _37;
  sizetype _38;
  const uint8_t * _39;
  short unsigned int _40;
  int _41;
  short unsigned int _42;
  long unsigned int _43;
  sizetype _44;
  long unsigned int _46;
  const struct Vector * iftmp.2_47;
  long unsigned int _49;
  const uint8_t[1] * _50;
  long int _51;
  sizetype _52;
  sizetype _53;
  const uint8_t * _54;
  short unsigned int _55;
  int _56;
  short unsigned int _57;
  unsigned int _58;
  sizetype _59;
  long unsigned int _61;
  const struct Vector * iftmp.4_62;
  const struct RecordingSimpleMemoryAllocator * _64;
  unsigned int _65;
  const struct RecordingSimpleMemoryAllocator * _66;
  unsigned int _67;
  const struct RecordingSimpleMemoryAllocator * _68;
  unsigned int _69;
  const struct RecordingSimpleMemoryAllocator * _70;
  unsigned int _71;
  unsigned int _74;
  unsigned int _75;
  const struct RecordingSimpleMemoryAllocator * _76;
  unsigned int _77;
  unsigned int _80;
  unsigned int _81;
  const struct RecordingSimpleMemoryAllocator * _82;
  unsigned int _83;
  long int pretmp_85;
  unsigned int _86;
  unsigned int _87;
  long unsigned int _88;
  const uint8_t * _89;
  long unsigned int _90;
  long unsigned int _92;
  const struct SubGraph * _93;
  sizetype _95;
  const uint8_t[1] * pretmp_99;
  short unsigned int prephitmp_109;
  long unsigned int _111;
  long int prephitmp_112;
  long unsigned int _114;
  const uint8_t[1] * _115;
  short unsigned int pretmp_116;
  sizetype _119;

  <bb 2>:
  _64 = MEM[(const struct RecordingMicroAllocator *)this_4(D)].recording_memory_allocator_;
  _65 = tflite::RecordingSimpleMemoryAllocator::GetRequestedBytes (_64);
  _66 = MEM[(const struct RecordingMicroAllocator *)this_4(D)].recording_memory_allocator_;
  _67 = tflite::RecordingSimpleMemoryAllocator::GetUsedBytes (_66);
  _68 = MEM[(const struct RecordingMicroAllocator *)this_4(D)].recording_memory_allocator_;
  _69 = tflite::RecordingSimpleMemoryAllocator::GetAllocatedCount (_68);
  _6 = &this_4(D)->D.178415;
  _10 = tflite::MicroAllocator::AllocateNodeAndRegistrations (_6, model_7(D), subgraph_allocations_8(D));
  pretmp_85 = MEM[(const long int *)model_7(D)];
  pretmp_99 = &MEM[(const struct Table *)model_7(D)].data_;
  _95 = (sizetype) pretmp_85;
  _119 = -_95;
  _115 = pretmp_99 + _119;
  pretmp_116 = MEM[(const short unsigned int *)_115];

  <bb 3>:
  # subgraph_idx_1 = PHI <0(2), subgraph_idx_24(12)>
  # prephitmp_112 = PHI <pretmp_85(2), _36(12)>
  # prephitmp_109 = PHI <pretmp_116(2), _40(12)>
  _28 = (int) prephitmp_109;
  if (_28 > 8)
    goto <bb 4>;
  else
    goto <bb 14>;

  <bb 4>:
  _12 = (sizetype) prephitmp_112;
  _11 = -_12;
  _26 = pretmp_99 + _11;
  _29 = MEM[(const short unsigned int *)_26 + 8B];
  _31 = (sizetype) _29;
  p_32 = pretmp_99 + _31;
  if (_29 != 0)
    goto <bb 5>;
  else
    goto <bb 14>;

  <bb 5>:
  _33 = MEM[(const long unsigned int *)p_32];
  iftmp.2_34 = p_32 + _33;
  _19 = iftmp.2_34->length_;
  if (subgraph_idx_1 < _19)
    goto <bb 6>;
  else
    goto <bb 13>;

  <bb 6>:
  _70 = this_4(D)->recording_memory_allocator_;
  _71 = tflite::RecordingSimpleMemoryAllocator::GetRequestedBytes (_70);
  _74 = MEM[(struct RecordedAllocation &)this_4(D) + 92].requested_bytes;
  _58 = _74 - _65;
  _75 = _58 + _71;
  MEM[(struct RecordedAllocation &)this_4(D) + 92].requested_bytes = _75;
  _76 = this_4(D)->recording_memory_allocator_;
  _77 = tflite::RecordingSimpleMemoryAllocator::GetUsedBytes (_76);
  _80 = MEM[(struct RecordedAllocation &)this_4(D) + 92].used_bytes;
  _35 = _80 - _67;
  _81 = _35 + _77;
  MEM[(struct RecordedAllocation &)this_4(D) + 92].used_bytes = _81;
  _82 = this_4(D)->recording_memory_allocator_;
  _83 = tflite::RecordingSimpleMemoryAllocator::GetAllocatedCount (_82);
  _86 = MEM[(struct RecordedAllocation &)this_4(D) + 92].count;
  _30 = _86 - _69;
  _87 = _30 + _83;
  MEM[(struct RecordedAllocation &)this_4(D) + 92].count = _87;
  _36 = MEM[(const long int *)model_7(D)];
  _37 = (sizetype) _36;
  _38 = -_37;
  _39 = pretmp_99 + _38;
  _40 = MEM[(const short unsigned int *)_39];
  _41 = (int) _40;
  if (_41 > 8)
    goto <bb 7>;
  else
    goto <bb 15>;

  <bb 7>:
  _42 = MEM[(const short unsigned int *)_39 + 8B];
  _44 = (sizetype) _42;
  p_45 = pretmp_99 + _44;
  if (_42 != 0)
    goto <bb 8>;
  else
    goto <bb 15>;

  <bb 8>:
  _46 = MEM[(const long unsigned int *)p_45];
  iftmp.2_47 = p_45 + _46;
  _88 = iftmp.2_47->length_;
  if (subgraph_idx_1 < _88)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 10>:
  _89 = &MEM[(void *)iftmp.2_47 + 4B];
  _90 = subgraph_idx_1 * 4;
  p_91 = _89 + _90;
  _92 = MEM[(const long unsigned int *)p_91];
  _93 = p_91 + _92;
  _50 = &MEM[(const struct Table *)_93].data_;
  _51 = MEM[(const long int *)_93];
  _52 = (sizetype) _51;
  _53 = -_52;
  _54 = _50 + _53;
  _55 = MEM[(const short unsigned int *)_54];
  _56 = (int) _55;
  if (_56 > 10)
    goto <bb 11>;
  else
    goto <bb 16>;

  <bb 11>:
  _57 = MEM[(const short unsigned int *)_54 + 10B];
  _59 = (sizetype) _57;
  p_60 = _50 + _59;
  if (_57 != 0)
    goto <bb 12>;
  else
    goto <bb 16>;

  <bb 12>:
  _61 = MEM[(const long unsigned int *)p_60];
  iftmp.4_62 = p_60 + _61;
  _49 = iftmp.4_62->length_;
  _20 = _49 + 4294967295;
  _22 = _20 + _87;
  this_4(D)->recorded_node_and_registration_array_data_.count = _22;
  subgraph_idx_24 = subgraph_idx_1 + 1;
  goto <bb 3>;

  <bb 13>:
  allocations ={v} {CLOBBER};
  return _10;

  <bb 14>:
  _43 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 15>:
  _114 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 16>:
  _111 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}



;; Function virtual TfLiteStatus tflite::RecordingMicroAllocator::AllocateTfLiteEvalTensors(const tflite::Model*, tflite::SubgraphAllocations*) (_ZN6tflite23RecordingMicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE, funcdef_no=6517, decl_uid=178348, cgraph_uid=3733, symbol_order=3768)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h:2449:18: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/micro/recording_micro_allocator.cc:157:14: note: vectorized 0 loops in function.
virtual TfLiteStatus tflite::RecordingMicroAllocator::AllocateTfLiteEvalTensors(const tflite::Model*, tflite::SubgraphAllocations*) (struct RecordingMicroAllocator * const this, const struct Model * model, struct SubgraphAllocations * subgraph_allocations)
{
  const uint8_t * p;
  const struct SubGraph * D.231025;
  static const char __PRETTY_FUNCTION__[250] = "flatbuffers::Vector<T>::return_type flatbuffers::Vector<T>::Get(flatbuffers::uoffset_t) const [with T = flatbuffers::Offset<tflite::SubGraph>; flatbuffers::Vector<T>::return_type = const tflite::SubGraph*; flatbuffers::uoffset_t = long unsigned int]";
  unsigned char * p;
  unsigned char * p;
  unsigned char * p;
  size_t subgraph_idx;
  struct RecordedAllocation allocations;
  struct MicroAllocator * _6;
  TfLiteStatus _10;
  sizetype _11;
  sizetype _12;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _22;
  const uint8_t * _26;
  int _28;
  short unsigned int _29;
  unsigned int _30;
  sizetype _31;
  long unsigned int _33;
  const struct Vector * iftmp.2_34;
  unsigned int _35;
  long int _36;
  sizetype _37;
  sizetype _38;
  const uint8_t * _39;
  short unsigned int _40;
  int _41;
  short unsigned int _42;
  long unsigned int _43;
  sizetype _44;
  long unsigned int _46;
  const struct Vector * iftmp.2_47;
  long unsigned int _49;
  const uint8_t[1] * _50;
  long int _51;
  sizetype _52;
  sizetype _53;
  const uint8_t * _54;
  short unsigned int _55;
  int _56;
  short unsigned int _57;
  unsigned int _58;
  sizetype _59;
  long unsigned int _61;
  const struct Vector * iftmp.6_62;
  const struct RecordingSimpleMemoryAllocator * _64;
  unsigned int _65;
  const struct RecordingSimpleMemoryAllocator * _66;
  unsigned int _67;
  const struct RecordingSimpleMemoryAllocator * _68;
  unsigned int _69;
  const struct RecordingSimpleMemoryAllocator * _70;
  unsigned int _71;
  unsigned int _74;
  unsigned int _75;
  const struct RecordingSimpleMemoryAllocator * _76;
  unsigned int _77;
  unsigned int _80;
  unsigned int _81;
  const struct RecordingSimpleMemoryAllocator * _82;
  unsigned int _83;
  long int pretmp_85;
  unsigned int _86;
  unsigned int _87;
  long unsigned int _88;
  const uint8_t * _89;
  long unsigned int _90;
  long unsigned int _92;
  const struct SubGraph * _93;
  sizetype _95;
  const uint8_t[1] * pretmp_99;
  short unsigned int prephitmp_109;
  long unsigned int _111;
  long int prephitmp_112;
  long unsigned int _114;
  const uint8_t[1] * _115;
  short unsigned int pretmp_116;
  sizetype _119;

  <bb 2>:
  _64 = MEM[(const struct RecordingMicroAllocator *)this_4(D)].recording_memory_allocator_;
  _65 = tflite::RecordingSimpleMemoryAllocator::GetRequestedBytes (_64);
  _66 = MEM[(const struct RecordingMicroAllocator *)this_4(D)].recording_memory_allocator_;
  _67 = tflite::RecordingSimpleMemoryAllocator::GetUsedBytes (_66);
  _68 = MEM[(const struct RecordingMicroAllocator *)this_4(D)].recording_memory_allocator_;
  _69 = tflite::RecordingSimpleMemoryAllocator::GetAllocatedCount (_68);
  _6 = &this_4(D)->D.178415;
  _10 = tflite::MicroAllocator::AllocateTfLiteEvalTensors (_6, model_7(D), subgraph_allocations_8(D));
  pretmp_85 = MEM[(const long int *)model_7(D)];
  pretmp_99 = &MEM[(const struct Table *)model_7(D)].data_;
  _95 = (sizetype) pretmp_85;
  _119 = -_95;
  _115 = pretmp_99 + _119;
  pretmp_116 = MEM[(const short unsigned int *)_115];

  <bb 3>:
  # subgraph_idx_1 = PHI <0(2), subgraph_idx_24(12)>
  # prephitmp_112 = PHI <pretmp_85(2), _36(12)>
  # prephitmp_109 = PHI <pretmp_116(2), _40(12)>
  _28 = (int) prephitmp_109;
  if (_28 > 8)
    goto <bb 4>;
  else
    goto <bb 14>;

  <bb 4>:
  _12 = (sizetype) prephitmp_112;
  _11 = -_12;
  _26 = pretmp_99 + _11;
  _29 = MEM[(const short unsigned int *)_26 + 8B];
  _31 = (sizetype) _29;
  p_32 = pretmp_99 + _31;
  if (_29 != 0)
    goto <bb 5>;
  else
    goto <bb 14>;

  <bb 5>:
  _33 = MEM[(const long unsigned int *)p_32];
  iftmp.2_34 = p_32 + _33;
  _19 = iftmp.2_34->length_;
  if (subgraph_idx_1 < _19)
    goto <bb 6>;
  else
    goto <bb 13>;

  <bb 6>:
  _70 = this_4(D)->recording_memory_allocator_;
  _71 = tflite::RecordingSimpleMemoryAllocator::GetRequestedBytes (_70);
  _74 = MEM[(struct RecordedAllocation &)this_4(D) + 32].requested_bytes;
  _58 = _74 - _65;
  _75 = _58 + _71;
  MEM[(struct RecordedAllocation &)this_4(D) + 32].requested_bytes = _75;
  _76 = this_4(D)->recording_memory_allocator_;
  _77 = tflite::RecordingSimpleMemoryAllocator::GetUsedBytes (_76);
  _80 = MEM[(struct RecordedAllocation &)this_4(D) + 32].used_bytes;
  _35 = _80 - _67;
  _81 = _35 + _77;
  MEM[(struct RecordedAllocation &)this_4(D) + 32].used_bytes = _81;
  _82 = this_4(D)->recording_memory_allocator_;
  _83 = tflite::RecordingSimpleMemoryAllocator::GetAllocatedCount (_82);
  _86 = MEM[(struct RecordedAllocation &)this_4(D) + 32].count;
  _30 = _86 - _69;
  _87 = _30 + _83;
  MEM[(struct RecordedAllocation &)this_4(D) + 32].count = _87;
  _36 = MEM[(const long int *)model_7(D)];
  _37 = (sizetype) _36;
  _38 = -_37;
  _39 = pretmp_99 + _38;
  _40 = MEM[(const short unsigned int *)_39];
  _41 = (int) _40;
  if (_41 > 8)
    goto <bb 7>;
  else
    goto <bb 15>;

  <bb 7>:
  _42 = MEM[(const short unsigned int *)_39 + 8B];
  _44 = (sizetype) _42;
  p_45 = pretmp_99 + _44;
  if (_42 != 0)
    goto <bb 8>;
  else
    goto <bb 15>;

  <bb 8>:
  _46 = MEM[(const long unsigned int *)p_45];
  iftmp.2_47 = p_45 + _46;
  _88 = iftmp.2_47->length_;
  if (subgraph_idx_1 < _88)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  __assert_func ("C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h", 262, &__PRETTY_FUNCTION__, "i < size()");

  <bb 10>:
  _89 = &MEM[(void *)iftmp.2_47 + 4B];
  _90 = subgraph_idx_1 * 4;
  p_91 = _89 + _90;
  _92 = MEM[(const long unsigned int *)p_91];
  _93 = p_91 + _92;
  _50 = &MEM[(const struct Table *)_93].data_;
  _51 = MEM[(const long int *)_93];
  _52 = (sizetype) _51;
  _53 = -_52;
  _54 = _50 + _53;
  _55 = MEM[(const short unsigned int *)_54];
  _56 = (int) _55;
  if (_56 > 4)
    goto <bb 11>;
  else
    goto <bb 16>;

  <bb 11>:
  _57 = MEM[(const short unsigned int *)_54 + 4B];
  _59 = (sizetype) _57;
  p_60 = _50 + _59;
  if (_57 != 0)
    goto <bb 12>;
  else
    goto <bb 16>;

  <bb 12>:
  _61 = MEM[(const long unsigned int *)p_60];
  iftmp.6_62 = p_60 + _61;
  _49 = iftmp.6_62->length_;
  _20 = _49 + 4294967295;
  _22 = _20 + _87;
  this_4(D)->recorded_tflite_eval_tensor_data_.count = _22;
  subgraph_idx_24 = subgraph_idx_1 + 1;
  goto <bb 3>;

  <bb 13>:
  allocations ={v} {CLOBBER};
  return _10;

  <bb 14>:
  _43 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 15>:
  _114 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

  <bb 16>:
  _111 ={v} MEM[(const struct Vector *)0B].length_;
  __builtin_trap ();

}


