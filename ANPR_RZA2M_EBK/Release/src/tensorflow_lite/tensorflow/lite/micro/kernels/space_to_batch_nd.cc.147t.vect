
;; Function TfLiteStatus tflite::{anonymous}::Eval(TfLiteContext*, TfLiteNode*) (_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode, funcdef_no=4179, decl_uid=64445, cgraph_uid=2690, symbol_order=2702)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: not vectorized: multiple nested loops.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:410
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:410:15: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:410:15: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:410:15: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:410:15: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: not vectorized: multiple nested loops.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:80:31: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h:84:33: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:410
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:410:15: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:410:15: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:410:15: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:410:15: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:224:16: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/kernels/internal/types.h:170:5: note: bad loop form.
../src/tensorflow_lite/tensorflow/lite/micro/kernels/space_to_batch_nd.cc:63:14: note: vectorized 0 loops in function.
TfLiteStatus tflite::{anonymous}::Eval(TfLiteContext*, TfLiteNode*) (struct TfLiteContext * context, struct TfLiteNode * node)
{
  int D.68386;
  int D.68380;
  int32_t D.68374;
  int32_t D.68371;
  int32_t D.68368;
  int32_t D.68365;
  int32_t D.68362;
  int32_t D.68359;
  int32_t D.68356;
  struct RuntimeShape * D.68353;
  int32_t D.68347;
  int32_t D.68341;
  int32_t D.68335;
  int i;
  struct RuntimeShape * D.68325;
  struct RuntimeShape * D.68320;
  struct RuntimeShape new_shape;
  struct RuntimeShape * D.68314;
  int32_t D.68308;
  int32_t D.68302;
  int32_t D.68296;
  int i;
  struct RuntimeShape * D.68286;
  struct RuntimeShape * D.68281;
  struct RuntimeShape new_shape;
  const struct RuntimeShape input1_shape;
  const struct RuntimeShape output_shape;
  const int block_shape_height;
  const int padding_top;
  const int32_t pad_value;
  int out_b;
  int input_batch;
  int shift_w;
  int shift_h;
  int out_h;
  int out_w;
  signed char * out;
  const signed char * in;
  int D.68250;
  int D.68244;
  int32_t D.68238;
  int32_t D.68235;
  int32_t D.68232;
  int32_t D.68229;
  int32_t D.68226;
  int32_t D.68223;
  int32_t D.68220;
  struct RuntimeShape * D.68217;
  int32_t D.68211;
  int32_t D.68205;
  int32_t D.68199;
  int i;
  struct RuntimeShape * D.68189;
  struct RuntimeShape * D.68184;
  struct RuntimeShape new_shape;
  struct RuntimeShape * D.68178;
  int32_t D.68172;
  int32_t D.68166;
  int32_t D.68160;
  int i;
  struct RuntimeShape * D.68150;
  struct RuntimeShape * D.68145;
  struct RuntimeShape new_shape;
  const struct RuntimeShape input1_shape;
  const struct RuntimeShape output_shape;
  const int block_shape_height;
  const int padding_top;
  const int32_t pad_value;
  int out_b;
  int input_batch;
  int shift_w;
  int shift_h;
  int out_h;
  int out_w;
  float * out;
  const float * in;
  struct TfLiteEvalTensor * D.68114;
  struct TfLiteEvalTensor * D.68110;
  struct TfLiteEvalTensor * D.68106;
  struct TfLiteEvalTensor * D.68102;
  const struct RuntimeShape D.64479;
  const struct RuntimeShape D.64478;
  const struct RuntimeShape D.64477;
  const struct RuntimeShape D.64474;
  const struct RuntimeShape D.64460;
  const struct RuntimeShape D.64459;
  const struct RuntimeShape D.64456;
  const struct RuntimeShape D.64453;
  TfLiteStatus _1;
  void * _11;
  TfLiteType _15;
  int _45;
  const float * _46;
  const long int * _47;
  const long int * _48;
  float * iftmp.0_49;
  float * iftmp.0_50;
  long int _51;
  int32_t * _52;
  long int _53;
  int32_t * _54;
  long int _55;
  int32_t * _56;
  long int _57;
  int32_t * _58;
  const signed char * _59;
  const long int * _60;
  const long int * _61;
  signed char * iftmp.13_62;
  signed char * iftmp.13_63;
  long int _64;
  int32_t * _65;
  long int _66;
  int32_t * _67;
  long int _68;
  int32_t * _69;
  long int _70;
  int32_t * _71;
  long int _72;
  int32_t * _73;
  long int _74;
  int32_t * _75;
  long int _76;
  int32_t * _77;
  long int _78;
  int32_t * _79;
  long int _80;
  int32_t * _81;
  long int _82;
  int32_t * _83;
  long int _84;
  int32_t * _85;
  long int _86;
  int32_t * _87;
  struct TfLiteEvalTensor * (*<Ta65d>) (const struct TfLiteContext *, int) _129;
  struct TfLiteIntArray * _130;
  int _131;
  struct TfLiteEvalTensor * _132;
  struct TfLiteEvalTensor * (*<Ta65d>) (const struct TfLiteContext *, int) _133;
  struct TfLiteIntArray * _134;
  int _135;
  struct TfLiteEvalTensor * _136;
  struct TfLiteEvalTensor * (*<Ta65d>) (const struct TfLiteContext *, int) _137;
  struct TfLiteIntArray * _138;
  int _139;
  struct TfLiteEvalTensor * _140;
  struct TfLiteEvalTensor * (*<Ta65d>) (const struct TfLiteContext *, int) _141;
  struct TfLiteIntArray * _142;
  int _143;
  struct TfLiteEvalTensor * _144;
  long int _145;
  long int _146;
  long int pretmp_150;
  int _152;
  long int _155;
  int iftmp.1_156;
  int iftmp.2_158;
  int _162;
  unsigned int _169;
  unsigned int _170;
  int _174;
  int _175;
  int _176;
  int iftmp.2_177;
  int _178;
  unsigned int depth.3_179;
  unsigned int _180;
  int _181;
  int _182;
  unsigned int _184;
  unsigned int _185;
  unsigned int depth.3_187;
  unsigned int _188;
  int32_t * _193;
  long int _194;
  int32_t * _195;
  long int _196;
  int32_t * _197;
  long int _198;
  int32_t * _199;
  long int _205;
  int32_t * _206;
  long int _207;
  int32_t * _208;
  long int _232;
  int32_t * _233;
  unsigned int i.7_234;
  unsigned int _235;
  int32_t * _236;
  long int _237;
  int32_t * _238;
  long int iftmp.11_242;
  long int iftmp.11_243;
  long int iftmp.11_244;
  long int _245;
  int32_t * _246;
  int _247;
  int _248;
  int32_t * _251;
  long int prephitmp_252;
  long int pretmp_253;
  long int pretmp_254;
  long int iftmp.11_255;
  long int iftmp.11_256;
  long int iftmp.11_257;
  long int _258;
  int32_t * _259;
  long int pretmp_262;
  int32_t * _264;
  long int prephitmp_267;
  long int iftmp.11_268;
  long int iftmp.11_269;
  long int iftmp.11_270;
  int32_t * _272;
  sizetype _277;
  unsigned int iftmp.8_278;
  void * _279;
  long int _280;
  const int32_t * iftmp.10_284;
  long unsigned int _286;
  long unsigned int _287;
  int32_t * iftmp.9_288;
  const int32_t * iftmp.10_289;
  long int prephitmp_291;
  long int _294;
  int32_t * _295;
  long int _296;
  int32_t * _297;
  long int prephitmp_304;
  long int prephitmp_312;
  long int _321;
  int32_t * _322;
  unsigned int i.7_323;
  unsigned int _324;
  int32_t * _325;
  long int _326;
  int32_t * _327;
  long int pretmp_329;
  long int prephitmp_330;
  long int iftmp.11_331;
  long int iftmp.11_332;
  long int iftmp.11_333;
  long int _334;
  int32_t * _335;
  long int pretmp_336;
  long int pretmp_337;
  long int pretmp_338;
  int32_t * _340;
  long int prephitmp_343;
  long int iftmp.11_344;
  long int iftmp.11_345;
  long int iftmp.11_346;
  long int _347;
  int32_t * _348;
  long int prephitmp_349;
  int32_t * _353;
  long int iftmp.11_357;
  long int iftmp.11_358;
  long int iftmp.11_359;
  int32_t * _361;
  long int pretmp_362;
  long int prephitmp_363;
  long int pretmp_365;
  sizetype _366;
  unsigned int iftmp.8_367;
  void * _368;
  long int _369;
  long int pretmp_371;
  const int32_t * iftmp.10_373;
  long int prephitmp_374;
  long unsigned int _375;
  long unsigned int _376;
  int32_t * iftmp.9_377;
  const int32_t * iftmp.10_378;
  long int _379;
  int32_t * _380;
  long int prephitmp_381;
  int _382;
  long int iftmp.11_384;
  long int iftmp.11_385;
  long int iftmp.11_392;
  long int iftmp.11_393;
  long int iftmp.11_400;
  long int iftmp.11_401;
  long int prephitmp_407;
  long int iftmp.11_408;
  long int iftmp.11_409;
  long int iftmp.11_410;
  long int _411;
  int32_t * _412;
  int _413;
  long int prephitmp_414;
  long int iftmp.11_416;
  long int iftmp.11_417;
  long int iftmp.11_424;
  long int iftmp.11_425;
  int _431;
  long int iftmp.11_432;
  long int iftmp.11_433;
  long int iftmp.11_434;
  long int _435;
  int _436;
  int _437;
  int _438;
  int _439;
  int _440;
  int _441;
  int _442;
  int _443;
  int _444;
  long int _446;
  int _447;
  int _448;
  int _449;
  int _450;
  int _451;
  int _452;
  int _453;
  int _454;
  int _455;
  long int _457;
  long int _458;
  long int _467;
  int iftmp.14_468;
  int iftmp.15_470;
  int _474;
  sizetype _481;
  int _485;
  int _486;
  int _487;
  int iftmp.15_488;
  int _489;
  unsigned int depth.16_490;
  int _491;
  int _492;
  sizetype _494;
  unsigned int depth.16_496;
  int32_t * _501;
  long int _502;
  int32_t * _503;
  long int _504;
  int32_t * _505;
  long int _506;
  int32_t * _507;
  long int _513;
  int32_t * _514;
  long int _515;
  int32_t * _516;
  long int iftmp.11_534;
  int _535;
  long int _540;
  int32_t * _541;
  unsigned int i.7_542;
  unsigned int _543;
  int32_t * _544;
  long int _545;
  int32_t * _546;
  long int iftmp.11_550;
  long int iftmp.11_551;
  long int iftmp.11_552;
  long int _553;
  int32_t * _554;
  int32_t * _559;
  long int iftmp.11_563;
  long int iftmp.11_564;
  long int iftmp.11_565;
  long int _566;
  int32_t * _567;
  long int iftmp.11_571;
  int32_t * _572;
  long int iftmp.11_576;
  long int iftmp.11_577;
  long int iftmp.11_578;
  long int iftmp.11_579;
  int32_t * _580;
  long int iftmp.11_584;
  sizetype _585;
  unsigned int iftmp.8_586;
  void * _587;
  long int _588;
  const int32_t * iftmp.10_592;
  long unsigned int _594;
  long unsigned int _595;
  int32_t * iftmp.9_596;
  const int32_t * iftmp.10_597;
  long int _602;
  int32_t * _603;
  long int _604;
  int32_t * _605;
  long int iftmp.11_606;
  long int iftmp.11_607;
  long int iftmp.11_608;
  long int iftmp.11_609;
  int _624;
  long int _629;
  int32_t * _630;
  unsigned int i.7_631;
  unsigned int _632;
  int32_t * _633;
  long int _634;
  int32_t * _635;
  long int iftmp.11_639;
  long int iftmp.11_640;
  long int iftmp.11_641;
  long int _642;
  int32_t * _643;
  int32_t * _648;
  long int iftmp.11_652;
  long int iftmp.11_653;
  long int iftmp.11_654;
  long int _655;
  int32_t * _656;
  int32_t * _661;
  long int iftmp.11_665;
  long int iftmp.11_666;
  long int iftmp.11_667;
  int32_t * _669;
  sizetype _674;
  unsigned int iftmp.8_675;
  void * _676;
  long int _677;
  const int32_t * iftmp.10_681;
  long unsigned int _683;
  long unsigned int _684;
  int32_t * iftmp.9_685;
  const int32_t * iftmp.10_686;
  long int _687;
  int32_t * _688;
  long int pretmp_691;
  long int iftmp.11_692;
  long int iftmp.11_693;
  long int prephitmp_699;
  long int iftmp.11_700;
  long int iftmp.11_701;
  long int pretmp_705;
  long int prephitmp_706;
  long int pretmp_707;
  long int iftmp.11_708;
  long int iftmp.11_709;
  long int iftmp.11_716;
  long int iftmp.11_717;
  long int iftmp.11_718;
  long int _719;
  int32_t * _720;
  long int prephitmp_722;
  long int iftmp.11_724;
  long int iftmp.11_725;
  long int iftmp.11_732;
  long int iftmp.11_733;
  long int pretmp_738;
  long int iftmp.11_740;
  long int iftmp.11_741;
  long int iftmp.11_742;
  long int _743;
  int _744;
  int _745;
  int _746;
  int _747;
  int _748;
  int _749;
  int _750;
  int _751;
  int _752;
  long int _754;
  int _755;
  int _756;
  int _757;
  int _758;
  int _759;
  int _760;
  int _761;
  int _762;
  int _763;
  int _766;
  int _776;
  long int iftmp.11_877;
  long int _878;
  long int _879;
  long int prephitmp_974;
  int _981;
  int _995;
  int _996;
  long int _998;
  long int _999;
  long int iftmp.11_1000;
  long int pretmp_1011;
  long int pretmp_1014;
  unsigned int _1037;
  unsigned int _1038;
  long int prephitmp_1039;
  long int pretmp_1040;
  unsigned int _1062;
  unsigned int _1063;
  unsigned int _1065;
  unsigned int _1066;
  unsigned int _1067;
  unsigned int _1080;
  long int prephitmp_1081;
  long int prephitmp_1082;
  unsigned int _1083;
  unsigned int _1085;
  unsigned int _1088;
  unsigned int _1090;
  long int prephitmp_1092;
  long int prephitmp_1093;
  int _1094;
  int _1095;
  int _1097;
  int _1099;
  int iftmp.1_1101;
  int iftmp.14_1105;
  long int prephitmp_1106;
  long int prephitmp_1108;

  <bb 2>:
  _11 = node_10(D)->user_data;
  if (_11 != 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  abort ();

  <bb 4>:
  if (context_12(D) != 0B)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 5>:
  _141 = MEM[(const struct TfLiteContext *)context_12(D)].GetEvalTensor;
  _142 = MEM[(const struct TfLiteNode *)node_10(D)].inputs;
  _143 = _142->data[0];
  _144 = _141 (context_12(D), _143);
  _137 = MEM[(const struct TfLiteContext *)context_12(D)].GetEvalTensor;
  _138 = MEM[(const struct TfLiteNode *)node_10(D)].inputs;
  _139 = _138->data[1];
  _140 = _137 (context_12(D), _139);
  _133 = MEM[(const struct TfLiteContext *)context_12(D)].GetEvalTensor;
  _134 = MEM[(const struct TfLiteNode *)node_10(D)].inputs;
  _135 = _134->data[2];
  _136 = _133 (context_12(D), _135);
  _129 = MEM[(const struct TfLiteContext *)context_12(D)].GetEvalTensor;
  _130 = MEM[(const struct TfLiteNode *)node_10(D)].outputs;
  _131 = _130->data[0];
  _132 = _129 (context_12(D), _131);
  _15 = MEM[(const struct TfLiteEvalTensor *)_144].type;
  switch (_15) <default: <L16>, case 1: <L3>, case 9: <L4>>

<L3>:
  D.64453 = tflite::micro::GetTensorShape (_144); [return slot optimization]
  _46 = MEM[(const struct TfLiteEvalTensor *)_144].data.raw;
  D.64456 = tflite::micro::GetTensorShape (_140); [return slot optimization]

  <bb 7>:
  if (_140 != 0B)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  abort ();

  <bb 9>:
  _47 = MEM[(const struct TfLiteEvalTensor *)_140].data.raw;
  D.64459 = tflite::micro::GetTensorShape (_136); [return slot optimization]
  goto <bb 11>;

<L30>:
  goto <bb 517> (<L10>);

  <bb 11>:
  if (_136 != 0B)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  abort ();

  <bb 13>:
  _48 = MEM[(const struct TfLiteEvalTensor *)_136].data.raw;
  D.64460 = tflite::micro::GetTensorShape (_132); [return slot optimization]
  goto <bb 15>;

<L32>:
  goto <bb 511> (<L9>);

  <bb 15>:
  if (_132 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  iftmp.0_49 = _132->data.raw;

  <bb 17>:
  # iftmp.0_50 = PHI <0B(15), iftmp.0_49(16)>
  _145 = MEM[(long int *)&D.64453];
  if (_145 > 2)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  abort ();

  <bb 19>:
  if (_145 <= 4)
    goto <bb 22>;
  else
    goto <bb 20>;

  <bb 20>:
  abort ();

<L34>:
  goto <bb 242> (<L19>);

  <bb 22>:
  _146 = MEM[(long int *)&D.64460];
  if (_145 == _146)
    goto <bb 25>;
  else
    goto <bb 23>;

  <bb 23>:
  abort ();

<L35>:
  goto <bb 242> (<L19>);

  <bb 25>:
  if (_145 == 4)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  input1_shape.size_ = 4;
  memcpy (&input1_shape.D.61194.dims_, &D.64453.D.61194.dims_, 16);
  goto <bb 551>;

  <bb 27>:
  MEM[(struct  &)&new_shape] ={v} {CLOBBER};
  MEM[(int32_t *)&new_shape] = 4;
  goto <bb 34>;

  <bb 28>:
  _232 = new_shape.size_;
  if (i_225 < _232)
    goto <bb 31>;
  else
    goto <bb 29>;

  <bb 29>:
  abort ();

<L36>:
  goto <bb 242> (<L19>);

  <bb 31>:
  if (_232 > 5)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  _233 = new_shape.D.61194.dims_pointer_;
  i.7_234 = (unsigned int) i_225;
  _235 = i.7_234 * 4;
  _236 = _233 + _235;
  *_236 = 1;
  goto <bb 35>;

  <bb 33>:
  # i_1109 = PHI <i_225(31)>

  <bb 34>:
  # i_383 = PHI <i_1109(33), 0(27)>
  new_shape.D.61194.dims_[i_383] = 1;

  <bb 35>:
  # i_364 = PHI <i_383(34), i_225(32)>
  i_225 = i_364 + 1;
  if (i_225 == 4)
    goto <bb 36>;
  else
    goto <bb 28>;

  <bb 36>:
  _237 = D.64453.size_;
  if (_237 > 0)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 37>:
  abort ();

  <bb 38>:
  if (_237 > 5)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  _238 = D.64453.D.61194.dims_pointer_;
  iftmp.11_242 = MEM[(const int32_t &)_238];
  goto <bb 41>;

  <bb 40>:
  iftmp.11_243 = D.64453.D.61194.dims_[0];

  <bb 41>:
  # iftmp.11_244 = PHI <iftmp.11_242(39), iftmp.11_243(40)>
  _245 = new_shape.size_;
  if (_245 > 0)
    goto <bb 44>;
  else
    goto <bb 42>;

  <bb 42>:
  abort ();

<L38>:
  goto <bb 84> (<L20>);

  <bb 44>:
  if (_245 > 5)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  _246 = new_shape.D.61194.dims_pointer_;
  *_246 = iftmp.11_244;
  pretmp_365 = D.64453.size_;
  goto <bb 47>;

  <bb 46>:
  new_shape.D.61194.dims_[0] = iftmp.11_244;

  <bb 47>:
  # prephitmp_267 = PHI <_237(46), pretmp_365(45)>
  if (prephitmp_267 > 1)
    goto <bb 50>;
  else
    goto <bb 48>;

  <bb 48>:
  abort ();

<L39>:
  goto <bb 84> (<L20>);

  <bb 50>:
  if (prephitmp_267 > 5)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  _251 = D.64453.D.61194.dims_pointer_;
  iftmp.11_255 = MEM[(const int32_t &)_251 + 4];
  goto <bb 53>;

  <bb 52>:
  iftmp.11_256 = D.64453.D.61194.dims_[1];

  <bb 53>:
  # iftmp.11_257 = PHI <iftmp.11_255(51), iftmp.11_256(52)>
  _258 = new_shape.size_;
  if (_258 > 1)
    goto <bb 56>;
  else
    goto <bb 54>;

  <bb 54>:
  abort ();

<L40>:
  goto <bb 84> (<L20>);

  <bb 56>:
  if (_258 > 5)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  _259 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_259 + 4B] = iftmp.11_257;
  goto <bb 59>;

  <bb 58>:
  new_shape.D.61194.dims_[1] = iftmp.11_257;

  <bb 59>:
  if (prephitmp_267 != 2)
    goto <bb 62>;
  else
    goto <bb 60>;

  <bb 60>:
  abort ();

<L41>:
  goto <bb 84> (<L20>);

  <bb 62>:
  if (prephitmp_267 > 5)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  _264 = D.64453.D.61194.dims_pointer_;
  iftmp.11_268 = MEM[(const int32_t &)_264 + 8];
  goto <bb 65>;

  <bb 64>:
  iftmp.11_269 = D.64453.D.61194.dims_[2];

  <bb 65>:
  # iftmp.11_270 = PHI <iftmp.11_268(63), iftmp.11_269(64)>
  if (_258 > 3)
    goto <bb 68>;
  else
    goto <bb 66>;

  <bb 66>:
  abort ();

<L42>:
  goto <bb 84> (<L20>);

  <bb 68>:
  if (_258 > 5)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  _272 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_272 + 12B] = iftmp.11_270;
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  input1_shape.size_ = _258;
  _277 = (sizetype) _258;
  if (_258 <= 536870910)
    goto <bb 71>;
  else
    goto <bb 75>;

  <bb 70>:
  new_shape.D.61194.dims_[3] = iftmp.11_270;
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  input1_shape.size_ = _258;
  goto <bb 78>;

  <bb 71>:
  iftmp.8_278 = _277 * 4;
  _279 = operator new [] (iftmp.8_278);
  goto <bb 73>;

<L43>:
  goto <bb 84> (<L20>);

  <bb 73>:
  input1_shape.D.61194.dims_pointer_ = _279;
  _280 = input1_shape.size_;
  if (_280 > 5)
    goto <bb 77>;
  else
    goto <bb 74>;

  <bb 74>:
  pretmp_262 = new_shape.size_;
  goto <bb 78>;

  <bb 75>:
  __cxa_throw_bad_array_new_length ();

<L44>:
  goto <bb 84> (<L20>);

  <bb 77>:
  pretmp_254 = new_shape.size_;

  <bb 78>:
  # iftmp.9_288 = PHI <_279(77), &input1_shape.D.61194.dims_(74), &input1_shape.D.61194.dims_(70)>
  # _998 = PHI <_280(77), _280(74), _258(70)>
  # prephitmp_343 = PHI <pretmp_254(77), pretmp_262(74), _258(70)>
  if (prephitmp_343 > 5)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  iftmp.10_284 = new_shape.D.61194.dims_pointer_;

  <bb 80>:
  # iftmp.10_289 = PHI <iftmp.10_284(79), &new_shape.D.61194.dims_(78)>
  _286 = (long unsigned int) _998;
  _287 = _286 * 4;
  memcpy (iftmp.9_288, iftmp.10_289, _287);
  _205 = new_shape.size_;
  if (_205 > 5)
    goto <bb 81>;
  else
    goto <bb 550>;

  <bb 81>:
  _206 = new_shape.D.61194.dims_pointer_;
  if (_206 != 0B)
    goto <bb 82>;
  else
    goto <bb 550>;

  <bb 82>:
  operator delete [] (_206);
  pretmp_1011 = MEM[(long int *)&D.64460];
  goto <bb 551>;

<L37>:

<L20>:
  _207 = new_shape.size_;
  if (_207 > 5)
    goto <bb 85>;
  else
    goto <bb 87>;

  <bb 85>:
  _208 = new_shape.D.61194.dims_pointer_;
  if (_208 != 0B)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  operator delete [] (_208);

  <bb 87>:
  resx 20

<L45>:
  goto <bb 242> (<L19>);

  <bb 89>:
  MEM[(struct  &)&new_shape] ={v} {CLOBBER};
  MEM[(int32_t *)&new_shape] = 4;
  goto <bb 95>;

  <bb 90>:
  _321 = new_shape.size_;
  if (i_314 < _321)
    goto <bb 92>;
  else
    goto <bb 91>;

  <bb 91>:
  abort ();

  <bb 92>:
  if (_321 > 5)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  _322 = new_shape.D.61194.dims_pointer_;
  i.7_323 = (unsigned int) i_314;
  _324 = i.7_323 * 4;
  _325 = _322 + _324;
  *_325 = 1;
  goto <bb 96>;

  <bb 94>:
  # i_1107 = PHI <i_314(92)>

  <bb 95>:
  # i_356 = PHI <i_1107(94), 0(89)>
  new_shape.D.61194.dims_[i_356] = 1;

  <bb 96>:
  # i_970 = PHI <i_356(95), i_314(93)>
  i_314 = i_970 + 1;
  if (i_314 == 4)
    goto <bb 97>;
  else
    goto <bb 90>;

  <bb 97>:
  _326 = D.64460.size_;
  if (_326 > 0)
    goto <bb 99>;
  else
    goto <bb 98>;

  <bb 98>:
  abort ();

  <bb 99>:
  if (_326 > 5)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  _327 = D.64460.D.61194.dims_pointer_;
  iftmp.11_331 = MEM[(const int32_t &)_327];
  goto <bb 102>;

  <bb 101>:
  iftmp.11_332 = D.64460.D.61194.dims_[0];

  <bb 102>:
  # iftmp.11_333 = PHI <iftmp.11_331(100), iftmp.11_332(101)>
  _334 = new_shape.size_;
  if (_334 > 0)
    goto <bb 105>;
  else
    goto <bb 103>;

  <bb 103>:
  abort ();

<L48>:
  goto <bb 146> (<L21>);

  <bb 105>:
  if (_334 > 5)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  _335 = new_shape.D.61194.dims_pointer_;
  *_335 = iftmp.11_333;
  pretmp_691 = D.64460.size_;
  goto <bb 108>;

  <bb 107>:
  new_shape.D.61194.dims_[0] = iftmp.11_333;

  <bb 108>:
  # prephitmp_706 = PHI <_326(107), pretmp_691(106)>
  if (prephitmp_706 > 1)
    goto <bb 111>;
  else
    goto <bb 109>;

  <bb 109>:
  abort ();

<L49>:
  goto <bb 146> (<L21>);

  <bb 111>:
  if (prephitmp_706 > 5)
    goto <bb 112>;
  else
    goto <bb 113>;

  <bb 112>:
  _340 = D.64460.D.61194.dims_pointer_;
  iftmp.11_344 = MEM[(const int32_t &)_340 + 4];
  goto <bb 114>;

  <bb 113>:
  iftmp.11_345 = D.64460.D.61194.dims_[1];

  <bb 114>:
  # iftmp.11_346 = PHI <iftmp.11_344(112), iftmp.11_345(113)>
  _347 = new_shape.size_;
  if (_347 > 1)
    goto <bb 117>;
  else
    goto <bb 115>;

  <bb 115>:
  abort ();

<L50>:
  goto <bb 146> (<L21>);

  <bb 117>:
  if (_347 > 5)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  _348 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_348 + 4B] = iftmp.11_346;
  goto <bb 120>;

  <bb 119>:
  new_shape.D.61194.dims_[1] = iftmp.11_346;

  <bb 120>:
  if (prephitmp_706 != 2)
    goto <bb 123>;
  else
    goto <bb 121>;

  <bb 121>:
  abort ();

<L51>:
  goto <bb 146> (<L21>);

  <bb 123>:
  if (prephitmp_706 > 5)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  _353 = D.64460.D.61194.dims_pointer_;
  iftmp.11_357 = MEM[(const int32_t &)_353 + 8];
  goto <bb 126>;

  <bb 125>:
  iftmp.11_358 = D.64460.D.61194.dims_[2];

  <bb 126>:
  # iftmp.11_359 = PHI <iftmp.11_357(124), iftmp.11_358(125)>
  if (_347 > 3)
    goto <bb 129>;
  else
    goto <bb 127>;

  <bb 127>:
  abort ();

<L52>:
  goto <bb 146> (<L21>);

  <bb 129>:
  if (_347 > 5)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  _361 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_361 + 12B] = iftmp.11_359;
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  output_shape.size_ = _347;
  _366 = (sizetype) _347;
  if (_347 <= 536870910)
    goto <bb 132>;
  else
    goto <bb 136>;

  <bb 131>:
  new_shape.D.61194.dims_[3] = iftmp.11_359;
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  output_shape.size_ = _347;
  goto <bb 139>;

  <bb 132>:
  iftmp.8_367 = _366 * 4;
  _368 = operator new [] (iftmp.8_367);
  goto <bb 134>;

<L53>:
  goto <bb 146> (<L21>);

  <bb 134>:
  output_shape.D.61194.dims_pointer_ = _368;
  _369 = output_shape.size_;
  if (_369 > 5)
    goto <bb 138>;
  else
    goto <bb 135>;

  <bb 135>:
  pretmp_707 = new_shape.size_;
  goto <bb 139>;

  <bb 136>:
  __cxa_throw_bad_array_new_length ();

<L54>:
  goto <bb 146> (<L21>);

  <bb 138>:
  pretmp_705 = new_shape.size_;

  <bb 139>:
  # iftmp.9_377 = PHI <_368(138), &output_shape.D.61194.dims_(135), &output_shape.D.61194.dims_(131)>
  # _999 = PHI <_369(138), _369(135), _347(131)>
  # prephitmp_699 = PHI <pretmp_705(138), pretmp_707(135), _347(131)>
  if (prephitmp_699 > 5)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  iftmp.10_373 = new_shape.D.61194.dims_pointer_;

  <bb 141>:
  # iftmp.10_378 = PHI <iftmp.10_373(140), &new_shape.D.61194.dims_(139)>
  _375 = (long unsigned int) _999;
  _376 = _375 * 4;
  memcpy (iftmp.9_377, iftmp.10_378, _376);
  _294 = new_shape.size_;
  if (_294 > 5)
    goto <bb 142>;
  else
    goto <bb 144>;

  <bb 142>:
  _295 = new_shape.D.61194.dims_pointer_;
  if (_295 != 0B)
    goto <bb 143>;
  else
    goto <bb 144>;

  <bb 143>:
  operator delete [] (_295);

  <bb 144>:
  new_shape ={v} {CLOBBER};
  _379 = input1_shape.size_;
  if (_379 > 3)
    goto <bb 152>;
  else
    goto <bb 151>;

<L47>:

<L21>:
  _296 = new_shape.size_;
  if (_296 > 5)
    goto <bb 147>;
  else
    goto <bb 149>;

  <bb 147>:
  _297 = new_shape.D.61194.dims_pointer_;
  if (_297 != 0B)
    goto <bb 148>;
  else
    goto <bb 149>;

  <bb 148>:
  operator delete [] (_297);

  <bb 149>:
  resx 21

<L55>:
  goto <bb 236> (<L18>);

  <bb 151>:
  abort ();

  <bb 152>:
  if (_379 > 5)
    goto <bb 153>;
  else
    goto <bb 154>;

  <bb 153>:
  _380 = input1_shape.D.61194.dims_pointer_;
  iftmp.11_384 = MEM[(const int32_t &)_380 + 12];
  iftmp.11_392 = MEM[(const int32_t &)_380 + 8];
  iftmp.11_400 = MEM[(const int32_t &)_380 + 4];
  iftmp.11_408 = MEM[(const int32_t &)_380];
  goto <bb 155>;

  <bb 154>:
  iftmp.11_385 = input1_shape.D.61194.dims_[3];
  iftmp.11_393 = input1_shape.D.61194.dims_[2];
  iftmp.11_401 = input1_shape.D.61194.dims_[1];
  iftmp.11_409 = input1_shape.D.61194.dims_[0];

  <bb 155>:
  # iftmp.11_410 = PHI <iftmp.11_408(153), iftmp.11_409(154)>
  # iftmp.11_1000 = PHI <iftmp.11_384(153), iftmp.11_385(154)>
  # iftmp.11_607 = PHI <iftmp.11_392(153), iftmp.11_393(154)>
  # iftmp.11_608 = PHI <iftmp.11_400(153), iftmp.11_401(154)>
  _411 = output_shape.size_;
  if (_411 > 2)
    goto <bb 158>;
  else
    goto <bb 156>;

  <bb 156>:
  abort ();

<L57>:
  goto <bb 230> (<L17>);

  <bb 158>:
  if (_411 > 5)
    goto <bb 159>;
  else
    goto <bb 160>;

  <bb 159>:
  _412 = output_shape.D.61194.dims_pointer_;
  iftmp.11_416 = MEM[(const int32_t &)_412 + 8];
  iftmp.11_424 = MEM[(const int32_t &)_412 + 4];
  iftmp.11_432 = MEM[(const int32_t &)_412];
  goto <bb 161>;

  <bb 160>:
  iftmp.11_417 = output_shape.D.61194.dims_[2];
  iftmp.11_425 = output_shape.D.61194.dims_[1];
  iftmp.11_433 = output_shape.D.61194.dims_[0];

  <bb 161>:
  # iftmp.11_434 = PHI <iftmp.11_432(159), iftmp.11_433(160)>
  # iftmp.11_609 = PHI <iftmp.11_416(159), iftmp.11_417(160)>
  # iftmp.11_877 = PHI <iftmp.11_424(159), iftmp.11_425(160)>
  block_shape_height_154 = MEM[(const int32_t *)_47];
  _155 = MEM[(long int *)&D.64453];
  if (_155 == 4)
    goto <bb 162>;
  else
    goto <bb 552>;

  <bb 162>:
  iftmp.1_156 = MEM[(const int32_t *)_47 + 4B];
  padding_top_626 = MEM[(const int32_t *)_48];
  iftmp.2_158 = MEM[(const int32_t *)_48 + 8B];

  <bb 163>:
  # iftmp.2_177 = PHI <0(552), iftmp.2_158(162)>
  # padding_top_1100 = PHI <padding_top_536(552), padding_top_626(162)>
  # iftmp.1_1101 = PHI <1(552), iftmp.1_156(162)>
  pad_value_159 = MEM[(const struct SpaceToBatchParams &)_11].output_offset;
  if (iftmp.11_434 <= 0)
    goto <bb 222>;
  else
    goto <bb 164>;

  <bb 164>:
  depth.3_187 = (unsigned int) iftmp.11_1000;
  _188 = depth.3_187 * 4;
  depth.3_179 = (unsigned int) iftmp.11_1000;
  _180 = depth.3_179 * 4;

  <bb 165>:
  # out_b_807 = PHI <0(164), out_b_191(221)>
  # prephitmp_304 = PHI <_411(164), prephitmp_1081(221)>
  input_batch_161 = out_b_807 % iftmp.11_410;
  _162 = out_b_807 / iftmp.11_410;
  shift_w_164 = _162 % iftmp.1_1101;
  shift_h_165 = _162 / iftmp.1_1101;
  if (iftmp.11_877 <= 0)
    goto <bb 219>;
  else
    goto <bb 166>;

  <bb 166>:

  <bb 167>:
  # out_h_797 = PHI <0(166), out_h_190(218)>
  # prephitmp_974 = PHI <prephitmp_304(166), prephitmp_252(218)>
  if (iftmp.11_609 <= 0)
    goto <bb 216>;
  else
    goto <bb 168>;

  <bb 168>:
  if (prephitmp_974 == 4)
    goto <bb 170>;
  else
    goto <bb 169>;

  <bb 169>:
  abort ();

  <bb 170>:
  _1094 = MEM[(const int *)&output_shape + 4B];
  if (out_b_807 < _1094)
    goto <bb 172>;
  else
    goto <bb 171>;

  <bb 171>:
  abort ();

  <bb 172>:
  _1099 = MEM[(const int *)&output_shape + 8B];
  if (out_h_797 < _1099)
    goto <bb 174>;
  else
    goto <bb 173>;

  <bb 173>:
  abort ();

  <bb 174>:
  _1097 = MEM[(const int *)&output_shape + 12B];
  if (_1097 > 0)
    goto <bb 176>;
  else
    goto <bb 175>;

  <bb 175>:
  abort ();

  <bb 176>:
  _1095 = MEM[(const int *)&output_shape + 16B];
  if (_1095 > 0)
    goto <bb 189>;
  else
    goto <bb 177>;

  <bb 177>:
  abort ();

  <bb 178>:
  _435 = MEM[(long int *)&output_shape];
  if (_435 == 4)
    goto <bb 180>;
  else
    goto <bb 169>;

<L58>:
  goto <bb 230> (<L17>);

  <bb 180>:
  _436 = MEM[(const int *)&output_shape + 4B];
  if (_436 > out_b_807)
    goto <bb 182>;
  else
    goto <bb 171>;

<L59>:
  goto <bb 230> (<L17>);

  <bb 182>:
  _437 = MEM[(const int *)&output_shape + 8B];
  if (_437 > out_h_797)
    goto <bb 184>;
  else
    goto <bb 173>;

<L60>:
  goto <bb 230> (<L17>);

  <bb 184>:
  _438 = MEM[(const int *)&output_shape + 12B];
  if (out_w_189 < _438)
    goto <bb 186>;
  else
    goto <bb 175>;

<L61>:
  goto <bb 230> (<L17>);

  <bb 186>:
  _439 = MEM[(const int *)&output_shape + 16B];
  if (_439 > 0)
    goto <bb 187>;
  else
    goto <bb 177>;

  <bb 187>:
  goto <bb 190>;

<L62>:
  goto <bb 230> (<L17>);

  <bb 189>:
  _247 = block_shape_height_154 * out_h_797;
  _248 = shift_h_165 + _247;
  _1066 = (unsigned int) iftmp.11_608;
  _1065 = (unsigned int) padding_top_1100;
  _1063 = _1066 + _1065;
  _174 = (int) _1063;
  _1062 = (unsigned int) _248;
  _1038 = (unsigned int) padding_top_1100;
  _1037 = _1062 - _1038;
  _181 = (int) _1037;

  <bb 190>:
  # out_w_20 = PHI <0(189), out_w_189(187)>
  # _45 = PHI <_1099(189), _437(187)>
  # _776 = PHI <_1097(189), _438(187)>
  # _766 = PHI <_1095(189), _439(187)>
  _440 = _45 * out_b_807;
  _441 = _440 + out_h_797;
  _442 = _441 * _776;
  _443 = out_w_20 + _442;
  _444 = _443 * _766;
  _169 = (unsigned int) _444;
  _170 = _169 * 4;
  out_171 = iftmp.0_50 + _170;
  if (_248 < padding_top_1100)
    goto <bb 194>;
  else
    goto <bb 191>;

  <bb 191>:
  if (_174 <= _248)
    goto <bb 194>;
  else
    goto <bb 192>;

  <bb 192>:
  _175 = out_w_20 * iftmp.1_1101;
  _176 = shift_w_164 + _175;
  if (_176 < iftmp.2_177)
    goto <bb 194>;
  else
    goto <bb 193>;

  <bb 193>:
  _178 = iftmp.2_177 + iftmp.11_607;
  if (_176 >= _178)
    goto <bb 194>;
  else
    goto <bb 195>;

  <bb 194>:
  memset (out_171, pad_value_159, _180);
  goto <bb 214>;

  <bb 195>:
  _182 = _176 - iftmp.2_177;
  _446 = MEM[(long int *)&input1_shape];
  if (_446 == 4)
    goto <bb 198>;
  else
    goto <bb 196>;

  <bb 196>:
  abort ();

<L63>:
  goto <bb 230> (<L17>);

  <bb 198>:
  if (input_batch_161 >= 0)
    goto <bb 199>;
  else
    goto <bb 200>;

  <bb 199>:
  _447 = MEM[(const int *)&input1_shape + 4B];
  if (input_batch_161 < _447)
    goto <bb 202>;
  else
    goto <bb 200>;

  <bb 200>:
  abort ();

<L64>:
  goto <bb 230> (<L17>);

  <bb 202>:
  if (_181 >= 0)
    goto <bb 203>;
  else
    goto <bb 204>;

  <bb 203>:
  _448 = MEM[(const int *)&input1_shape + 8B];
  if (_181 < _448)
    goto <bb 206>;
  else
    goto <bb 204>;

  <bb 204>:
  abort ();

<L65>:
  goto <bb 230> (<L17>);

  <bb 206>:
  if (_182 >= 0)
    goto <bb 207>;
  else
    goto <bb 208>;

  <bb 207>:
  _449 = MEM[(const int *)&input1_shape + 12B];
  if (_182 < _449)
    goto <bb 210>;
  else
    goto <bb 208>;

  <bb 208>:
  abort ();

<L66>:
  goto <bb 230> (<L17>);

  <bb 210>:
  _450 = MEM[(const int *)&input1_shape + 16B];
  if (_450 > 0)
    goto <bb 213>;
  else
    goto <bb 211>;

  <bb 211>:
  abort ();

<L67>:
  goto <bb 230> (<L17>);

  <bb 213>:
  _451 = input_batch_161 * _448;
  _452 = _181 + _451;
  _453 = _449 * _452;
  _454 = _182 + _453;
  _455 = _450 * _454;
  _184 = (unsigned int) _455;
  _185 = _184 * 4;
  in_186 = _46 + _185;
  memcpy (out_171, in_186, _188);

  <bb 214>:
  out_w_189 = out_w_20 + 1;
  if (out_w_189 >= iftmp.11_609)
    goto <bb 215>;
  else
    goto <bb 178>;

  <bb 215>:
  pretmp_253 = MEM[(long int *)&output_shape];

  <bb 216>:
  # prephitmp_252 = PHI <pretmp_253(215), prephitmp_974(167)>
  out_h_190 = out_h_797 + 1;
  if (out_h_190 >= iftmp.11_877)
    goto <bb 217>;
  else
    goto <bb 218>;

  <bb 217>:
  # prephitmp_1108 = PHI <prephitmp_252(216)>
  goto <bb 219>;

  <bb 218>:
  goto <bb 167>;

  <bb 219>:
  # prephitmp_1081 = PHI <prephitmp_1108(217), prephitmp_304(165)>
  out_b_191 = out_b_807 + 1;
  if (out_b_191 >= iftmp.11_434)
    goto <bb 220>;
  else
    goto <bb 221>;

  <bb 220>:
  # prephitmp_1092 = PHI <prephitmp_1081(219)>
  goto <bb 222>;

  <bb 221>:
  goto <bb 165>;

  <bb 222>:
  # prephitmp_1082 = PHI <prephitmp_1092(220), _411(163)>
  if (prephitmp_1082 > 5)
    goto <bb 223>;
  else
    goto <bb 225>;

  <bb 223>:
  _193 = output_shape.D.61194.dims_pointer_;
  if (_193 != 0B)
    goto <bb 224>;
  else
    goto <bb 225>;

  <bb 224>:
  operator delete [] (_193);

  <bb 225>:
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  _194 = input1_shape.size_;
  if (_194 > 5)
    goto <bb 226>;
  else
    goto <bb 228>;

  <bb 226>:
  _195 = input1_shape.D.61194.dims_pointer_;
  if (_195 != 0B)
    goto <bb 227>;
  else
    goto <bb 228>;

  <bb 227>:
  operator delete [] (_195);

  <bb 228>:
  input1_shape ={v} {CLOBBER};
  output_shape ={v} {CLOBBER};
  _57 = D.64460.size_;
  if (_57 > 5)
    goto <bb 243>;
  else
    goto <bb 245>;

<L56>:

<L17>:
  _196 = output_shape.size_;
  if (_196 > 5)
    goto <bb 231>;
  else
    goto <bb 233>;

  <bb 231>:
  _197 = output_shape.D.61194.dims_pointer_;
  if (_197 != 0B)
    goto <bb 232>;
  else
    goto <bb 233>;

  <bb 232>:
  operator delete [] (_197);

  <bb 233>:
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  resx 19

<L68>:
  goto <bb 236> (<L18>);

<L46>:

<L18>:
  _198 = input1_shape.size_;
  if (_198 > 5)
    goto <bb 237>;
  else
    goto <bb 239>;

  <bb 237>:
  _199 = input1_shape.D.61194.dims_pointer_;
  if (_199 != 0B)
    goto <bb 238>;
  else
    goto <bb 239>;

  <bb 238>:
  operator delete [] (_199);

  <bb 239>:
  resx 18

<L69>:
  goto <bb 242> (<L19>);

<L33>:

<L19>:
  resx 17

  <bb 243>:
  _58 = D.64460.D.61194.dims_pointer_;
  if (_58 != 0B)
    goto <bb 244>;
  else
    goto <bb 245>;

  <bb 244>:
  operator delete [] (_58);

  <bb 245>:
  D.64460 ={v} {CLOBBER};
  _55 = D.64459.size_;
  if (_55 > 5)
    goto <bb 246>;
  else
    goto <bb 248>;

  <bb 246>:
  _56 = D.64459.D.61194.dims_pointer_;
  if (_56 != 0B)
    goto <bb 247>;
  else
    goto <bb 248>;

  <bb 247>:
  operator delete [] (_56);

  <bb 248>:
  D.64459 ={v} {CLOBBER};
  _53 = D.64456.size_;
  if (_53 > 5)
    goto <bb 249>;
  else
    goto <bb 251>;

  <bb 249>:
  _54 = D.64456.D.61194.dims_pointer_;
  if (_54 != 0B)
    goto <bb 250>;
  else
    goto <bb 251>;

  <bb 250>:
  operator delete [] (_54);

  <bb 251>:
  D.64456 ={v} {CLOBBER};
  _51 = D.64453.size_;
  if (_51 > 5)
    goto <bb 252>;
  else
    goto <bb 254>;

  <bb 252>:
  _52 = D.64453.D.61194.dims_pointer_;
  if (_52 != 0B)
    goto <bb 253>;
  else
    goto <bb 254>;

  <bb 253>:
  operator delete [] (_52);

  <bb 254>:
  D.64453 ={v} {CLOBBER};
  goto <bb 504> (<L16>);

<L4>:
  D.64474 = tflite::micro::GetTensorShape (_144); [return slot optimization]
  _59 = MEM[(const struct TfLiteEvalTensor *)_144].data.raw;
  D.64477 = tflite::micro::GetTensorShape (_140); [return slot optimization]

  <bb 256>:
  if (_140 != 0B)
    goto <bb 258>;
  else
    goto <bb 257>;

  <bb 257>:
  abort ();

  <bb 258>:
  _60 = MEM[(const struct TfLiteEvalTensor *)_140].data.raw;
  D.64478 = tflite::micro::GetTensorShape (_136); [return slot optimization]
  goto <bb 260>;

<L72>:
  goto <bb 539> (<L14>);

  <bb 260>:
  if (_136 != 0B)
    goto <bb 262>;
  else
    goto <bb 261>;

  <bb 261>:
  abort ();

  <bb 262>:
  _61 = MEM[(const struct TfLiteEvalTensor *)_136].data.raw;
  D.64479 = tflite::micro::GetTensorShape (_132); [return slot optimization]
  goto <bb 264>;

<L74>:
  goto <bb 533> (<L13>);

  <bb 264>:
  if (_132 != 0B)
    goto <bb 265>;
  else
    goto <bb 266>;

  <bb 265>:
  iftmp.13_62 = _132->data.raw;

  <bb 266>:
  # iftmp.13_63 = PHI <0B(264), iftmp.13_62(265)>
  _457 = MEM[(long int *)&D.64474];
  if (_457 > 2)
    goto <bb 268>;
  else
    goto <bb 267>;

  <bb 267>:
  abort ();

  <bb 268>:
  if (_457 <= 4)
    goto <bb 271>;
  else
    goto <bb 269>;

  <bb 269>:
  abort ();

<L76>:
  goto <bb 491> (<L24>);

  <bb 271>:
  _458 = MEM[(long int *)&D.64479];
  if (_457 == _458)
    goto <bb 274>;
  else
    goto <bb 272>;

  <bb 272>:
  abort ();

<L77>:
  goto <bb 491> (<L24>);

  <bb 274>:
  if (_457 == 4)
    goto <bb 275>;
  else
    goto <bb 276>;

  <bb 275>:
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  input1_shape.size_ = 4;
  memcpy (&input1_shape.D.61194.dims_, &D.64474.D.61194.dims_, 16);
  goto <bb 555>;

  <bb 276>:
  MEM[(struct  &)&new_shape] ={v} {CLOBBER};
  MEM[(int32_t *)&new_shape] = 4;
  goto <bb 283>;

  <bb 277>:
  _540 = new_shape.size_;
  if (i_533 < _540)
    goto <bb 280>;
  else
    goto <bb 278>;

  <bb 278>:
  abort ();

<L78>:
  goto <bb 491> (<L24>);

  <bb 280>:
  if (_540 > 5)
    goto <bb 281>;
  else
    goto <bb 282>;

  <bb 281>:
  _541 = new_shape.D.61194.dims_pointer_;
  i.7_542 = (unsigned int) i_533;
  _543 = i.7_542 * 4;
  _544 = _541 + _543;
  *_544 = 1;
  goto <bb 284>;

  <bb 282>:
  # i_1103 = PHI <i_533(280)>

  <bb 283>:
  # i_223 = PHI <i_1103(282), 0(276)>
  new_shape.D.61194.dims_[i_223] = 1;

  <bb 284>:
  # i_962 = PHI <i_223(283), i_533(281)>
  i_533 = i_962 + 1;
  if (i_533 == 4)
    goto <bb 285>;
  else
    goto <bb 277>;

  <bb 285>:
  _545 = D.64474.size_;
  if (_545 > 0)
    goto <bb 287>;
  else
    goto <bb 286>;

  <bb 286>:
  abort ();

  <bb 287>:
  if (_545 > 5)
    goto <bb 288>;
  else
    goto <bb 289>;

  <bb 288>:
  _546 = D.64474.D.61194.dims_pointer_;
  iftmp.11_550 = MEM[(const int32_t &)_546];
  goto <bb 290>;

  <bb 289>:
  iftmp.11_551 = D.64474.D.61194.dims_[0];

  <bb 290>:
  # iftmp.11_552 = PHI <iftmp.11_550(288), iftmp.11_551(289)>
  _553 = new_shape.size_;
  if (_553 > 0)
    goto <bb 293>;
  else
    goto <bb 291>;

  <bb 291>:
  abort ();

<L80>:
  goto <bb 333> (<L25>);

  <bb 293>:
  if (_553 > 5)
    goto <bb 294>;
  else
    goto <bb 295>;

  <bb 294>:
  _554 = new_shape.D.61194.dims_pointer_;
  *_554 = iftmp.11_552;
  pretmp_338 = D.64474.size_;
  goto <bb 296>;

  <bb 295>:
  new_shape.D.61194.dims_[0] = iftmp.11_552;

  <bb 296>:
  # prephitmp_291 = PHI <_545(295), pretmp_338(294)>
  if (prephitmp_291 > 1)
    goto <bb 299>;
  else
    goto <bb 297>;

  <bb 297>:
  abort ();

<L81>:
  goto <bb 333> (<L25>);

  <bb 299>:
  if (prephitmp_291 > 5)
    goto <bb 300>;
  else
    goto <bb 301>;

  <bb 300>:
  _559 = D.64474.D.61194.dims_pointer_;
  iftmp.11_563 = MEM[(const int32_t &)_559 + 4];
  goto <bb 302>;

  <bb 301>:
  iftmp.11_564 = D.64474.D.61194.dims_[1];

  <bb 302>:
  # iftmp.11_565 = PHI <iftmp.11_563(300), iftmp.11_564(301)>
  _566 = new_shape.size_;
  if (_566 > 1)
    goto <bb 305>;
  else
    goto <bb 303>;

  <bb 303>:
  abort ();

<L82>:
  goto <bb 333> (<L25>);

  <bb 305>:
  if (_566 > 5)
    goto <bb 306>;
  else
    goto <bb 307>;

  <bb 306>:
  _567 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_567 + 4B] = iftmp.11_565;
  goto <bb 308>;

  <bb 307>:
  new_shape.D.61194.dims_[1] = iftmp.11_565;

  <bb 308>:
  if (prephitmp_291 != 2)
    goto <bb 311>;
  else
    goto <bb 309>;

  <bb 309>:
  abort ();

<L83>:
  goto <bb 333> (<L25>);

  <bb 311>:
  if (prephitmp_291 > 5)
    goto <bb 312>;
  else
    goto <bb 313>;

  <bb 312>:
  _572 = D.64474.D.61194.dims_pointer_;
  iftmp.11_576 = MEM[(const int32_t &)_572 + 8];
  goto <bb 314>;

  <bb 313>:
  iftmp.11_577 = D.64474.D.61194.dims_[2];

  <bb 314>:
  # iftmp.11_578 = PHI <iftmp.11_576(312), iftmp.11_577(313)>
  if (_566 > 3)
    goto <bb 317>;
  else
    goto <bb 315>;

  <bb 315>:
  abort ();

<L84>:
  goto <bb 333> (<L25>);

  <bb 317>:
  if (_566 > 5)
    goto <bb 318>;
  else
    goto <bb 319>;

  <bb 318>:
  _580 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_580 + 12B] = iftmp.11_578;
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  input1_shape.size_ = _566;
  _585 = (sizetype) _566;
  if (_566 <= 536870910)
    goto <bb 320>;
  else
    goto <bb 324>;

  <bb 319>:
  new_shape.D.61194.dims_[3] = iftmp.11_578;
  MEM[(struct  &)&input1_shape] ={v} {CLOBBER};
  input1_shape.size_ = _566;
  goto <bb 327>;

  <bb 320>:
  iftmp.8_586 = _585 * 4;
  _587 = operator new [] (iftmp.8_586);
  goto <bb 322>;

<L85>:
  goto <bb 333> (<L25>);

  <bb 322>:
  input1_shape.D.61194.dims_pointer_ = _587;
  _588 = input1_shape.size_;
  if (_588 > 5)
    goto <bb 326>;
  else
    goto <bb 323>;

  <bb 323>:
  pretmp_337 = new_shape.size_;
  goto <bb 327>;

  <bb 324>:
  __cxa_throw_bad_array_new_length ();

<L86>:
  goto <bb 333> (<L25>);

  <bb 326>:
  pretmp_336 = new_shape.size_;

  <bb 327>:
  # iftmp.9_596 = PHI <_587(326), &input1_shape.D.61194.dims_(323), &input1_shape.D.61194.dims_(319)>
  # _878 = PHI <_588(326), _588(323), _566(319)>
  # prephitmp_330 = PHI <pretmp_336(326), pretmp_337(323), _566(319)>
  if (prephitmp_330 > 5)
    goto <bb 328>;
  else
    goto <bb 329>;

  <bb 328>:
  iftmp.10_592 = new_shape.D.61194.dims_pointer_;

  <bb 329>:
  # iftmp.10_597 = PHI <iftmp.10_592(328), &new_shape.D.61194.dims_(327)>
  _594 = (long unsigned int) _878;
  _595 = _594 * 4;
  memcpy (iftmp.9_596, iftmp.10_597, _595);
  _513 = new_shape.size_;
  if (_513 > 5)
    goto <bb 330>;
  else
    goto <bb 554>;

  <bb 330>:
  _514 = new_shape.D.61194.dims_pointer_;
  if (_514 != 0B)
    goto <bb 331>;
  else
    goto <bb 554>;

  <bb 331>:
  operator delete [] (_514);
  pretmp_1040 = MEM[(long int *)&D.64479];
  goto <bb 555>;

<L79>:

<L25>:
  _515 = new_shape.size_;
  if (_515 > 5)
    goto <bb 334>;
  else
    goto <bb 336>;

  <bb 334>:
  _516 = new_shape.D.61194.dims_pointer_;
  if (_516 != 0B)
    goto <bb 335>;
  else
    goto <bb 336>;

  <bb 335>:
  operator delete [] (_516);

  <bb 336>:
  resx 25

<L87>:
  goto <bb 491> (<L24>);

  <bb 338>:
  MEM[(struct  &)&new_shape] ={v} {CLOBBER};
  MEM[(int32_t *)&new_shape] = 4;
  goto <bb 344>;

  <bb 339>:
  _629 = new_shape.size_;
  if (i_622 < _629)
    goto <bb 341>;
  else
    goto <bb 340>;

  <bb 340>:
  abort ();

  <bb 341>:
  if (_629 > 5)
    goto <bb 342>;
  else
    goto <bb 343>;

  <bb 342>:
  _630 = new_shape.D.61194.dims_pointer_;
  i.7_631 = (unsigned int) i_622;
  _632 = i.7_631 * 4;
  _633 = _630 + _632;
  *_633 = 1;
  goto <bb 345>;

  <bb 343>:
  # i_1102 = PHI <i_622(341)>

  <bb 344>:
  # i_218 = PHI <i_1102(343), 0(338)>
  new_shape.D.61194.dims_[i_218] = 1;

  <bb 345>:
  # i_1041 = PHI <i_218(344), i_622(342)>
  i_622 = i_1041 + 1;
  if (i_622 == 4)
    goto <bb 346>;
  else
    goto <bb 339>;

  <bb 346>:
  _634 = D.64479.size_;
  if (_634 > 0)
    goto <bb 348>;
  else
    goto <bb 347>;

  <bb 347>:
  abort ();

  <bb 348>:
  if (_634 > 5)
    goto <bb 349>;
  else
    goto <bb 350>;

  <bb 349>:
  _635 = D.64479.D.61194.dims_pointer_;
  iftmp.11_639 = MEM[(const int32_t &)_635];
  goto <bb 351>;

  <bb 350>:
  iftmp.11_640 = D.64479.D.61194.dims_[0];

  <bb 351>:
  # iftmp.11_641 = PHI <iftmp.11_639(349), iftmp.11_640(350)>
  _642 = new_shape.size_;
  if (_642 > 0)
    goto <bb 354>;
  else
    goto <bb 352>;

  <bb 352>:
  abort ();

<L90>:
  goto <bb 395> (<L26>);

  <bb 354>:
  if (_642 > 5)
    goto <bb 355>;
  else
    goto <bb 356>;

  <bb 355>:
  _643 = new_shape.D.61194.dims_pointer_;
  *_643 = iftmp.11_641;
  pretmp_1014 = D.64479.size_;
  goto <bb 357>;

  <bb 356>:
  new_shape.D.61194.dims_[0] = iftmp.11_641;

  <bb 357>:
  # prephitmp_363 = PHI <_634(356), pretmp_1014(355)>
  if (prephitmp_363 > 1)
    goto <bb 360>;
  else
    goto <bb 358>;

  <bb 358>:
  abort ();

<L91>:
  goto <bb 395> (<L26>);

  <bb 360>:
  if (prephitmp_363 > 5)
    goto <bb 361>;
  else
    goto <bb 362>;

  <bb 361>:
  _648 = D.64479.D.61194.dims_pointer_;
  iftmp.11_652 = MEM[(const int32_t &)_648 + 4];
  goto <bb 363>;

  <bb 362>:
  iftmp.11_653 = D.64479.D.61194.dims_[1];

  <bb 363>:
  # iftmp.11_654 = PHI <iftmp.11_652(361), iftmp.11_653(362)>
  _655 = new_shape.size_;
  if (_655 > 1)
    goto <bb 366>;
  else
    goto <bb 364>;

  <bb 364>:
  abort ();

<L92>:
  goto <bb 395> (<L26>);

  <bb 366>:
  if (_655 > 5)
    goto <bb 367>;
  else
    goto <bb 368>;

  <bb 367>:
  _656 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_656 + 4B] = iftmp.11_654;
  goto <bb 369>;

  <bb 368>:
  new_shape.D.61194.dims_[1] = iftmp.11_654;

  <bb 369>:
  if (prephitmp_363 != 2)
    goto <bb 372>;
  else
    goto <bb 370>;

  <bb 370>:
  abort ();

<L93>:
  goto <bb 395> (<L26>);

  <bb 372>:
  if (prephitmp_363 > 5)
    goto <bb 373>;
  else
    goto <bb 374>;

  <bb 373>:
  _661 = D.64479.D.61194.dims_pointer_;
  iftmp.11_665 = MEM[(const int32_t &)_661 + 8];
  goto <bb 375>;

  <bb 374>:
  iftmp.11_666 = D.64479.D.61194.dims_[2];

  <bb 375>:
  # iftmp.11_667 = PHI <iftmp.11_665(373), iftmp.11_666(374)>
  if (_655 > 3)
    goto <bb 378>;
  else
    goto <bb 376>;

  <bb 376>:
  abort ();

<L94>:
  goto <bb 395> (<L26>);

  <bb 378>:
  if (_655 > 5)
    goto <bb 379>;
  else
    goto <bb 380>;

  <bb 379>:
  _669 = new_shape.D.61194.dims_pointer_;
  MEM[(int32_t *)_669 + 12B] = iftmp.11_667;
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  output_shape.size_ = _655;
  _674 = (sizetype) _655;
  if (_655 <= 536870910)
    goto <bb 381>;
  else
    goto <bb 385>;

  <bb 380>:
  new_shape.D.61194.dims_[3] = iftmp.11_667;
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  output_shape.size_ = _655;
  goto <bb 388>;

  <bb 381>:
  iftmp.8_675 = _674 * 4;
  _676 = operator new [] (iftmp.8_675);
  goto <bb 383>;

<L95>:
  goto <bb 395> (<L26>);

  <bb 383>:
  output_shape.D.61194.dims_pointer_ = _676;
  _677 = output_shape.size_;
  if (_677 > 5)
    goto <bb 387>;
  else
    goto <bb 384>;

  <bb 384>:
  pretmp_371 = new_shape.size_;
  goto <bb 388>;

  <bb 385>:
  __cxa_throw_bad_array_new_length ();

<L96>:
  goto <bb 395> (<L26>);

  <bb 387>:
  pretmp_362 = new_shape.size_;

  <bb 388>:
  # iftmp.9_685 = PHI <_676(387), &output_shape.D.61194.dims_(384), &output_shape.D.61194.dims_(380)>
  # _879 = PHI <_677(387), _677(384), _655(380)>
  # prephitmp_349 = PHI <pretmp_362(387), pretmp_371(384), _655(380)>
  if (prephitmp_349 > 5)
    goto <bb 389>;
  else
    goto <bb 390>;

  <bb 389>:
  iftmp.10_681 = new_shape.D.61194.dims_pointer_;

  <bb 390>:
  # iftmp.10_686 = PHI <iftmp.10_681(389), &new_shape.D.61194.dims_(388)>
  _683 = (long unsigned int) _879;
  _684 = _683 * 4;
  memcpy (iftmp.9_685, iftmp.10_686, _684);
  _602 = new_shape.size_;
  if (_602 > 5)
    goto <bb 391>;
  else
    goto <bb 393>;

  <bb 391>:
  _603 = new_shape.D.61194.dims_pointer_;
  if (_603 != 0B)
    goto <bb 392>;
  else
    goto <bb 393>;

  <bb 392>:
  operator delete [] (_603);

  <bb 393>:
  new_shape ={v} {CLOBBER};
  _687 = input1_shape.size_;
  if (_687 > 3)
    goto <bb 401>;
  else
    goto <bb 400>;

<L89>:

<L26>:
  _604 = new_shape.size_;
  if (_604 > 5)
    goto <bb 396>;
  else
    goto <bb 398>;

  <bb 396>:
  _605 = new_shape.D.61194.dims_pointer_;
  if (_605 != 0B)
    goto <bb 397>;
  else
    goto <bb 398>;

  <bb 397>:
  operator delete [] (_605);

  <bb 398>:
  resx 26

<L97>:
  goto <bb 485> (<L23>);

  <bb 400>:
  abort ();

  <bb 401>:
  if (_687 > 5)
    goto <bb 402>;
  else
    goto <bb 403>;

  <bb 402>:
  _688 = input1_shape.D.61194.dims_pointer_;
  iftmp.11_692 = MEM[(const int32_t &)_688 + 12];
  iftmp.11_700 = MEM[(const int32_t &)_688 + 8];
  iftmp.11_708 = MEM[(const int32_t &)_688 + 4];
  iftmp.11_716 = MEM[(const int32_t &)_688];
  goto <bb 404>;

  <bb 403>:
  iftmp.11_693 = input1_shape.D.61194.dims_[3];
  iftmp.11_701 = input1_shape.D.61194.dims_[2];
  iftmp.11_709 = input1_shape.D.61194.dims_[1];
  iftmp.11_717 = input1_shape.D.61194.dims_[0];

  <bb 404>:
  # iftmp.11_718 = PHI <iftmp.11_716(402), iftmp.11_717(403)>
  # iftmp.11_606 = PHI <iftmp.11_692(402), iftmp.11_693(403)>
  # iftmp.11_584 = PHI <iftmp.11_700(402), iftmp.11_701(403)>
  # iftmp.11_579 = PHI <iftmp.11_708(402), iftmp.11_709(403)>
  _719 = output_shape.size_;
  if (_719 > 2)
    goto <bb 407>;
  else
    goto <bb 405>;

  <bb 405>:
  abort ();

<L99>:
  goto <bb 479> (<L22>);

  <bb 407>:
  if (_719 > 5)
    goto <bb 408>;
  else
    goto <bb 409>;

  <bb 408>:
  _720 = output_shape.D.61194.dims_pointer_;
  iftmp.11_724 = MEM[(const int32_t &)_720 + 8];
  iftmp.11_732 = MEM[(const int32_t &)_720 + 4];
  iftmp.11_740 = MEM[(const int32_t &)_720];
  goto <bb 410>;

  <bb 409>:
  iftmp.11_725 = output_shape.D.61194.dims_[2];
  iftmp.11_733 = output_shape.D.61194.dims_[1];
  iftmp.11_741 = output_shape.D.61194.dims_[0];

  <bb 410>:
  # iftmp.11_742 = PHI <iftmp.11_740(408), iftmp.11_741(409)>
  # iftmp.11_571 = PHI <iftmp.11_724(408), iftmp.11_725(409)>
  # iftmp.11_534 = PHI <iftmp.11_732(408), iftmp.11_733(409)>
  block_shape_height_466 = MEM[(const int32_t *)_60];
  _467 = MEM[(long int *)&D.64474];
  if (_467 == 4)
    goto <bb 411>;
  else
    goto <bb 556>;

  <bb 411>:
  iftmp.14_468 = MEM[(const int32_t *)_60 + 4B];
  padding_top_1089 = MEM[(const int32_t *)_61];
  iftmp.15_470 = MEM[(const int32_t *)_61 + 8B];

  <bb 412>:
  # iftmp.15_488 = PHI <0(556), iftmp.15_470(411)>
  # padding_top_1104 = PHI <padding_top_1091(556), padding_top_1089(411)>
  # iftmp.14_1105 = PHI <1(556), iftmp.14_468(411)>
  pad_value_471 = MEM[(const struct SpaceToBatchParams &)_11].output_offset;
  if (iftmp.11_742 <= 0)
    goto <bb 471>;
  else
    goto <bb 413>;

  <bb 413>:

  <bb 414>:
  # out_b_1021 = PHI <0(413), out_b_499(470)>
  # prephitmp_722 = PHI <_719(413), prephitmp_381(470)>
  input_batch_473 = out_b_1021 % iftmp.11_718;
  _474 = out_b_1021 / iftmp.11_718;
  shift_w_476 = _474 % iftmp.14_1105;
  shift_h_477 = _474 / iftmp.14_1105;
  if (iftmp.11_534 <= 0)
    goto <bb 468>;
  else
    goto <bb 415>;

  <bb 415>:

  <bb 416>:
  # out_h_1020 = PHI <0(415), out_h_498(467)>
  # prephitmp_407 = PHI <prephitmp_722(415), prephitmp_1039(467)>
  if (iftmp.11_571 <= 0)
    goto <bb 465>;
  else
    goto <bb 417>;

  <bb 417>:
  if (prephitmp_407 == 4)
    goto <bb 419>;
  else
    goto <bb 418>;

  <bb 418>:
  abort ();

  <bb 419>:
  _431 = MEM[(const int *)&output_shape + 4B];
  if (_431 > out_b_1021)
    goto <bb 421>;
  else
    goto <bb 420>;

  <bb 420>:
  abort ();

  <bb 421>:
  _152 = MEM[(const int *)&output_shape + 8B];
  if (_152 > out_h_1020)
    goto <bb 423>;
  else
    goto <bb 422>;

  <bb 422>:
  abort ();

  <bb 423>:
  _535 = MEM[(const int *)&output_shape + 12B];
  if (_535 > 0)
    goto <bb 425>;
  else
    goto <bb 424>;

  <bb 424>:
  abort ();

  <bb 425>:
  _624 = MEM[(const int *)&output_shape + 16B];
  if (_624 > 0)
    goto <bb 438>;
  else
    goto <bb 426>;

  <bb 426>:
  abort ();

  <bb 427>:
  _743 = MEM[(long int *)&output_shape];
  if (_743 == 4)
    goto <bb 429>;
  else
    goto <bb 418>;

<L100>:
  goto <bb 479> (<L22>);

  <bb 429>:
  _744 = MEM[(const int *)&output_shape + 4B];
  if (_744 > out_b_1021)
    goto <bb 431>;
  else
    goto <bb 420>;

<L101>:
  goto <bb 479> (<L22>);

  <bb 431>:
  _745 = MEM[(const int *)&output_shape + 8B];
  if (_745 > out_h_1020)
    goto <bb 433>;
  else
    goto <bb 422>;

<L102>:
  goto <bb 479> (<L22>);

  <bb 433>:
  _746 = MEM[(const int *)&output_shape + 12B];
  if (out_w_497 < _746)
    goto <bb 435>;
  else
    goto <bb 424>;

<L103>:
  goto <bb 479> (<L22>);

  <bb 435>:
  _747 = MEM[(const int *)&output_shape + 16B];
  if (_747 > 0)
    goto <bb 436>;
  else
    goto <bb 426>;

  <bb 436>:
  goto <bb 439>;

<L104>:
  goto <bb 479> (<L22>);

  <bb 438>:
  _413 = block_shape_height_466 * out_h_1020;
  _382 = _413 + shift_h_477;
  _1090 = (unsigned int) iftmp.11_579;
  _1088 = (unsigned int) padding_top_1104;
  _1085 = _1090 + _1088;
  _485 = (int) _1085;
  _1083 = (unsigned int) _382;
  _1080 = (unsigned int) padding_top_1104;
  _1067 = _1083 - _1080;
  _491 = (int) _1067;

  <bb 439>:
  # out_w_997 = PHI <0(438), out_w_497(436)>
  # _996 = PHI <_152(438), _745(436)>
  # _995 = PHI <_535(438), _746(436)>
  # _981 = PHI <_624(438), _747(436)>
  _748 = _996 * out_b_1021;
  _749 = _748 + out_h_1020;
  _750 = _749 * _995;
  _751 = _750 + out_w_997;
  _752 = _751 * _981;
  _481 = (sizetype) _752;
  out_482 = iftmp.13_63 + _481;
  if (_382 < padding_top_1104)
    goto <bb 443>;
  else
    goto <bb 440>;

  <bb 440>:
  if (_382 >= _485)
    goto <bb 443>;
  else
    goto <bb 441>;

  <bb 441>:
  _486 = out_w_997 * iftmp.14_1105;
  _487 = shift_w_476 + _486;
  if (_487 < iftmp.15_488)
    goto <bb 443>;
  else
    goto <bb 442>;

  <bb 442>:
  _489 = iftmp.15_488 + iftmp.11_584;
  if (_487 >= _489)
    goto <bb 443>;
  else
    goto <bb 444>;

  <bb 443>:
  depth.16_490 = (unsigned int) iftmp.11_606;
  memset (out_482, pad_value_471, depth.16_490);
  goto <bb 463>;

  <bb 444>:
  _492 = _487 - iftmp.15_488;
  _754 = MEM[(long int *)&input1_shape];
  if (_754 == 4)
    goto <bb 447>;
  else
    goto <bb 445>;

  <bb 445>:
  abort ();

<L105>:
  goto <bb 479> (<L22>);

  <bb 447>:
  if (input_batch_473 >= 0)
    goto <bb 448>;
  else
    goto <bb 449>;

  <bb 448>:
  _755 = MEM[(const int *)&input1_shape + 4B];
  if (input_batch_473 < _755)
    goto <bb 451>;
  else
    goto <bb 449>;

  <bb 449>:
  abort ();

<L106>:
  goto <bb 479> (<L22>);

  <bb 451>:
  if (_491 >= 0)
    goto <bb 452>;
  else
    goto <bb 453>;

  <bb 452>:
  _756 = MEM[(const int *)&input1_shape + 8B];
  if (_491 < _756)
    goto <bb 455>;
  else
    goto <bb 453>;

  <bb 453>:
  abort ();

<L107>:
  goto <bb 479> (<L22>);

  <bb 455>:
  if (_492 >= 0)
    goto <bb 456>;
  else
    goto <bb 457>;

  <bb 456>:
  _757 = MEM[(const int *)&input1_shape + 12B];
  if (_492 < _757)
    goto <bb 459>;
  else
    goto <bb 457>;

  <bb 457>:
  abort ();

<L108>:
  goto <bb 479> (<L22>);

  <bb 459>:
  _758 = MEM[(const int *)&input1_shape + 16B];
  if (_758 > 0)
    goto <bb 462>;
  else
    goto <bb 460>;

  <bb 460>:
  abort ();

<L109>:
  goto <bb 479> (<L22>);

  <bb 462>:
  _759 = input_batch_473 * _756;
  _760 = _491 + _759;
  _761 = _757 * _760;
  _762 = _492 + _761;
  _763 = _758 * _762;
  _494 = (sizetype) _763;
  in_495 = _59 + _494;
  depth.16_496 = (unsigned int) iftmp.11_606;
  memcpy (out_482, in_495, depth.16_496);

  <bb 463>:
  out_w_497 = out_w_997 + 1;
  if (out_w_497 >= iftmp.11_571)
    goto <bb 464>;
  else
    goto <bb 427>;

  <bb 464>:
  pretmp_150 = MEM[(long int *)&output_shape];

  <bb 465>:
  # prephitmp_1039 = PHI <pretmp_150(464), prephitmp_407(416)>
  out_h_498 = out_h_1020 + 1;
  if (out_h_498 >= iftmp.11_534)
    goto <bb 466>;
  else
    goto <bb 467>;

  <bb 466>:
  # prephitmp_1093 = PHI <prephitmp_1039(465)>
  goto <bb 468>;

  <bb 467>:
  goto <bb 416>;

  <bb 468>:
  # prephitmp_381 = PHI <prephitmp_1093(466), prephitmp_722(414)>
  out_b_499 = out_b_1021 + 1;
  if (out_b_499 >= iftmp.11_742)
    goto <bb 469>;
  else
    goto <bb 470>;

  <bb 469>:
  # prephitmp_1106 = PHI <prephitmp_381(468)>
  goto <bb 471>;

  <bb 470>:
  goto <bb 414>;

  <bb 471>:
  # prephitmp_374 = PHI <prephitmp_1106(469), _719(412)>
  if (prephitmp_374 > 5)
    goto <bb 472>;
  else
    goto <bb 474>;

  <bb 472>:
  _501 = output_shape.D.61194.dims_pointer_;
  if (_501 != 0B)
    goto <bb 473>;
  else
    goto <bb 474>;

  <bb 473>:
  operator delete [] (_501);

  <bb 474>:
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  _502 = input1_shape.size_;
  if (_502 > 5)
    goto <bb 475>;
  else
    goto <bb 477>;

  <bb 475>:
  _503 = input1_shape.D.61194.dims_pointer_;
  if (_503 != 0B)
    goto <bb 476>;
  else
    goto <bb 477>;

  <bb 476>:
  operator delete [] (_503);

  <bb 477>:
  input1_shape ={v} {CLOBBER};
  output_shape ={v} {CLOBBER};
  _70 = D.64479.size_;
  if (_70 > 5)
    goto <bb 492>;
  else
    goto <bb 494>;

<L98>:

<L22>:
  _504 = output_shape.size_;
  if (_504 > 5)
    goto <bb 480>;
  else
    goto <bb 482>;

  <bb 480>:
  _505 = output_shape.D.61194.dims_pointer_;
  if (_505 != 0B)
    goto <bb 481>;
  else
    goto <bb 482>;

  <bb 481>:
  operator delete [] (_505);

  <bb 482>:
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  resx 24

<L110>:
  goto <bb 485> (<L23>);

<L88>:

<L23>:
  _506 = input1_shape.size_;
  if (_506 > 5)
    goto <bb 486>;
  else
    goto <bb 488>;

  <bb 486>:
  _507 = input1_shape.D.61194.dims_pointer_;
  if (_507 != 0B)
    goto <bb 487>;
  else
    goto <bb 488>;

  <bb 487>:
  operator delete [] (_507);

  <bb 488>:
  resx 23

<L111>:
  goto <bb 491> (<L24>);

<L75>:

<L24>:
  resx 22

  <bb 492>:
  _71 = D.64479.D.61194.dims_pointer_;
  if (_71 != 0B)
    goto <bb 493>;
  else
    goto <bb 494>;

  <bb 493>:
  operator delete [] (_71);

  <bb 494>:
  D.64479 ={v} {CLOBBER};
  _68 = D.64478.size_;
  if (_68 > 5)
    goto <bb 495>;
  else
    goto <bb 497>;

  <bb 495>:
  _69 = D.64478.D.61194.dims_pointer_;
  if (_69 != 0B)
    goto <bb 496>;
  else
    goto <bb 497>;

  <bb 496>:
  operator delete [] (_69);

  <bb 497>:
  D.64478 ={v} {CLOBBER};
  _66 = D.64477.size_;
  if (_66 > 5)
    goto <bb 498>;
  else
    goto <bb 500>;

  <bb 498>:
  _67 = D.64477.D.61194.dims_pointer_;
  if (_67 != 0B)
    goto <bb 499>;
  else
    goto <bb 500>;

  <bb 499>:
  operator delete [] (_67);

  <bb 500>:
  D.64477 ={v} {CLOBBER};
  _64 = D.64474.size_;
  if (_64 > 5)
    goto <bb 501>;
  else
    goto <bb 503>;

  <bb 501>:
  _65 = D.64474.D.61194.dims_pointer_;
  if (_65 != 0B)
    goto <bb 502>;
  else
    goto <bb 503>;

  <bb 502>:
  operator delete [] (_65);

  <bb 503>:
  D.64474 ={v} {CLOBBER};

  # _1 = PHI <1(5), 0(503), 0(254)>
<L16>:
  return _1;

<L8>:
  input1_shape ={v} {CLOBBER};
  output_shape ={v} {CLOBBER};
  _72 = D.64460.size_;
  if (_72 > 5)
    goto <bb 506>;
  else
    goto <bb 508>;

  <bb 506>:
  _73 = D.64460.D.61194.dims_pointer_;
  if (_73 != 0B)
    goto <bb 507>;
  else
    goto <bb 508>;

  <bb 507>:
  operator delete [] (_73);

  <bb 508>:
  D.64460 ={v} {CLOBBER};
  resx 4

<L112>:
  goto <bb 511> (<L9>);

<L31>:

<L9>:
  _74 = D.64459.size_;
  if (_74 > 5)
    goto <bb 512>;
  else
    goto <bb 514>;

  <bb 512>:
  _75 = D.64459.D.61194.dims_pointer_;
  if (_75 != 0B)
    goto <bb 513>;
  else
    goto <bb 514>;

  <bb 513>:
  operator delete [] (_75);

  <bb 514>:
  D.64459 ={v} {CLOBBER};
  resx 3

<L113>:
  goto <bb 517> (<L10>);

<L29>:

<L10>:
  _76 = D.64456.size_;
  if (_76 > 5)
    goto <bb 518>;
  else
    goto <bb 520>;

  <bb 518>:
  _77 = D.64456.D.61194.dims_pointer_;
  if (_77 != 0B)
    goto <bb 519>;
  else
    goto <bb 520>;

  <bb 519>:
  operator delete [] (_77);

  <bb 520>:
  D.64456 ={v} {CLOBBER};
  resx 2

<L114>:
  goto <bb 523> (<L11>);

<L28>:

<L11>:
  _78 = D.64453.size_;
  if (_78 > 5)
    goto <bb 524>;
  else
    goto <bb 526>;

  <bb 524>:
  _79 = D.64453.D.61194.dims_pointer_;
  if (_79 != 0B)
    goto <bb 525>;
  else
    goto <bb 526>;

  <bb 525>:
  operator delete [] (_79);

  <bb 526>:
  D.64453 ={v} {CLOBBER};
  resx 1

<L12>:
  input1_shape ={v} {CLOBBER};
  output_shape ={v} {CLOBBER};
  _80 = D.64479.size_;
  if (_80 > 5)
    goto <bb 528>;
  else
    goto <bb 530>;

  <bb 528>:
  _81 = D.64479.D.61194.dims_pointer_;
  if (_81 != 0B)
    goto <bb 529>;
  else
    goto <bb 530>;

  <bb 529>:
  operator delete [] (_81);

  <bb 530>:
  D.64479 ={v} {CLOBBER};
  resx 12

<L115>:
  goto <bb 533> (<L13>);

<L73>:

<L13>:
  _82 = D.64478.size_;
  if (_82 > 5)
    goto <bb 534>;
  else
    goto <bb 536>;

  <bb 534>:
  _83 = D.64478.D.61194.dims_pointer_;
  if (_83 != 0B)
    goto <bb 535>;
  else
    goto <bb 536>;

  <bb 535>:
  operator delete [] (_83);

  <bb 536>:
  D.64478 ={v} {CLOBBER};
  resx 11

<L116>:
  goto <bb 539> (<L14>);

<L71>:

<L14>:
  _84 = D.64477.size_;
  if (_84 > 5)
    goto <bb 540>;
  else
    goto <bb 542>;

  <bb 540>:
  _85 = D.64477.D.61194.dims_pointer_;
  if (_85 != 0B)
    goto <bb 541>;
  else
    goto <bb 542>;

  <bb 541>:
  operator delete [] (_85);

  <bb 542>:
  D.64477 ={v} {CLOBBER};
  resx 10

<L117>:
  goto <bb 545> (<L15>);

<L70>:

<L15>:
  _86 = D.64474.size_;
  if (_86 > 5)
    goto <bb 546>;
  else
    goto <bb 548>;

  <bb 546>:
  _87 = D.64474.D.61194.dims_pointer_;
  if (_87 != 0B)
    goto <bb 547>;
  else
    goto <bb 548>;

  <bb 547>:
  operator delete [] (_87);

  <bb 548>:
  D.64474 ={v} {CLOBBER};
  resx 9

  <bb 549>:
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  output_shape.size_ = 4;
  memcpy (&output_shape.D.61194.dims_, &D.64460.D.61194.dims_, 16);
  goto <bb 144>;

  <bb 550>:
  pretmp_329 = MEM[(long int *)&D.64460];

  <bb 551>:
  # prephitmp_312 = PHI <pretmp_1011(82), pretmp_329(550), _146(26)>
  new_shape ={v} {CLOBBER};
  if (prephitmp_312 == 4)
    goto <bb 549>;
  else
    goto <bb 89>;

  <bb 552>:
  padding_top_536 = MEM[(const int32_t *)_48];
  goto <bb 163>;

  <bb 553>:
  MEM[(struct  &)&output_shape] ={v} {CLOBBER};
  output_shape.size_ = 4;
  memcpy (&output_shape.D.61194.dims_, &D.64479.D.61194.dims_, 16);
  goto <bb 393>;

  <bb 554>:
  pretmp_738 = MEM[(long int *)&D.64479];

  <bb 555>:
  # prephitmp_414 = PHI <pretmp_1040(331), pretmp_738(554), _458(275)>
  new_shape ={v} {CLOBBER};
  if (prephitmp_414 == 4)
    goto <bb 553>;
  else
    goto <bb 338>;

  <bb 556>:
  padding_top_1091 = MEM[(const int32_t *)_61];
  goto <bb 412>;

}


