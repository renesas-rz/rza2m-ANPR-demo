
;; Function arm_concatenation_s8_x (arm_concatenation_s8_x, funcdef_no=87, decl_uid=7309, cgraph_uid=87, symbol_order=87)


Analyzing loop at ../src/tensorflow_lite/third_party/cmsis/CMSIS/NN/Source/ConcatenationFunctions/arm_concatenation_s8_x.c:64
../src/tensorflow_lite/third_party/cmsis/CMSIS/NN/Source/ConcatenationFunctions/arm_concatenation_s8_x.c:64:5: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/third_party/cmsis/CMSIS/NN/Source/ConcatenationFunctions/arm_concatenation_s8_x.c:64:5: note: === vect_analyze_loop_form ===
split exit edge.
../src/tensorflow_lite/third_party/cmsis/CMSIS/NN/Source/ConcatenationFunctions/arm_concatenation_s8_x.c:64:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [1, + , 1] < (const uint32_t) _12
  bounds on difference of bases: 0 ... 4294967294
Applying pattern match.pd:695, generic-match.c:64
Applying pattern match.pd:732, generic-match.c:10709
  result:
    # of iterations (const uint32_t) _12 + 4294967295, bounded by 4294967294
Applying pattern match.pd:1047, generic-match.c:4821
Applying pattern match.pd:83, generic-match.c:9008
../src/tensorflow_lite/third_party/cmsis/CMSIS/NN/Source/ConcatenationFunctions/arm_concatenation_s8_x.c:64:5: note: Symbolic number of iterations is (const uint32_t) _12
../src/tensorflow_lite/third_party/cmsis/CMSIS/NN/Source/ConcatenationFunctions/arm_concatenation_s8_x.c:64:5: note: not vectorized: loop contains function calls or data references that cannot be analyzed
../src/tensorflow_lite/third_party/cmsis/CMSIS/NN/Source/ConcatenationFunctions/arm_concatenation_s8_x.c:48:6: note: vectorized 0 loops in function.
arm_concatenation_s8_x (const int8_t * input, const uint16_t input_x, const uint16_t input_y, const uint16_t input_z, const uint16_t input_w, int8_t * output, const uint16_t output_x, const uint32_t offset_x)
{
  uint32_t i;
  const uint32_t num_iterations;
  unsigned int _1;
  sizetype _2;
  int _6;
  int _8;
  int _9;
  int _11;
  int _12;

  <bb 2>:
  _6 = (int) input_y_5(D);
  _8 = (int) input_z_7(D);
  _9 = _6 * _8;
  _11 = (int) input_w_10(D);
  _12 = _9 * _11;
  num_iterations_13 = (const uint32_t) _12;
  output_16 = output_14(D) + offset_x_15(D);
  if (num_iterations_13 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  return;

  <bb 4>:
  _1 = (unsigned int) input_x_19(D);
  _2 = (sizetype) output_x_23(D);

  <bb 5>:
  # input_31 = PHI <input_17(D)(4), input_22(6)>
  # output_32 = PHI <output_16(4), output_25(6)>
  # i_33 = PHI <0(4), i_26(6)>
  memcpy (output_32, input_31, _1);
  input_22 = input_31 + _1;
  output_25 = output_32 + _2;
  i_26 = i_33 + 1;
  if (num_iterations_13 > i_26)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 3>;

  <bb 6>:
  goto <bb 5>;

}


