
;; Function const TfLiteRegistration* tflite::MicroMutableOpResolver<tOpCount>::FindOp(tflite::BuiltinOperator) const [with unsigned int tOpCount = 5u] (_ZNK6tflite22MicroMutableOpResolverILj5EE6FindOpENS_15BuiltinOperatorE, funcdef_no=10155, decl_uid=186251, cgraph_uid=7104, symbol_order=7175)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:45:29: note: vectorized 0 loops in function.
const TfLiteRegistration* tflite::MicroMutableOpResolver<tOpCount>::FindOp(tflite::BuiltinOperator) const [with unsigned int tOpCount = 5u] (const struct MicroMutableOpResolver * const this, BuiltinOperator op)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * _2;
  sizetype _7;
  long int _9;
  sizetype _10;
  unsigned int _14;
  long int _15;
  long int _16;

  <bb 2>:
  if (op_3(D) == 32)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:
  _14 = this_6(D)->registrations_len_;
  if (_14 == 0)
    goto <bb 11>;
  else
    goto <bb 4>;

  <bb 4>:
  _15 = MEM[(const struct TfLiteRegistration &)this_6(D)].registrations_[0].builtin_code;
  _16 = (long int) op_3(D);
  if (_15 == _16)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  goto <bb 10>;

  <bb 6>:
  registration_13 = &this_6(D)->registrations_[0];
  goto <bb 11>;

  <bb 7>:
  _9 = MEM[(const struct TfLiteRegistration &)this_6(D)].registrations_[i_11].builtin_code;
  if (_9 == _16)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # i_4 = PHI <i_11(7)>
  _7 = i_4 * 32;
  _10 = _7 + 4;
  registration_8 = this_6(D) + _10;
  goto <bb 11>;

  <bb 9>:

  <bb 10>:
  # i_17 = PHI <0(5), i_11(9)>
  i_11 = i_17 + 1;
  if (i_11 >= _14)
    goto <bb 11>;
  else
    goto <bb 7>;

  <bb 11>:
  # _2 = PHI <0B(3), registration_8(8), registration_13(6), 0B(2), 0B(10)>
  return _2;

}



;; Function TfLiteStatus (* tflite::MicroMutableOpResolver<tOpCount>::GetOpDataParser(tflite::BuiltinOperator) const)(const tflite::Operator*, tflite::ErrorReporter*, tflite::BuiltinDataAllocator*, void**) [with unsigned int tOpCount = 5u] (_ZNK6tflite22MicroMutableOpResolverILj5EE15GetOpDataParserENS_15BuiltinOperatorE, funcdef_no=11537, decl_uid=186257, cgraph_uid=8486, symbol_order=9353)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:71
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:71:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:71:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:71:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:71:5: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:68:41: note: vectorized 0 loops in function.
TfLiteStatus (* tflite::MicroMutableOpResolver<tOpCount>::GetOpDataParser(tflite::BuiltinOperator) const)(const tflite::Operator*, tflite::ErrorReporter*, tflite::BuiltinDataAllocator*, void**) [with unsigned int tOpCount = 5u] (const struct MicroMutableOpResolver * const this, BuiltinOperator op)
{
  unsigned int i;
  TfLiteStatus (*BuiltinParseFunction) (const struct Operator *, struct ErrorReporter *, struct BuiltinDataAllocator *, void * *) _2;
  unsigned int _5;
  BuiltinOperator _7;
  TfLiteStatus (*BuiltinParseFunction) (const struct Operator *, struct ErrorReporter *, struct BuiltinDataAllocator *, void * *) _10;
  BuiltinOperator _13;

  <bb 2>:
  _5 = this_4(D)->num_buitin_ops_;
  if (_5 <= 5)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  if (_5 == 0)
    goto <bb 12>;
  else
    goto <bb 5>;

  <bb 4>:
  abort ();

  <bb 5>:
  _13 = this_4(D)->builtin_codes_[0];
  if (op_8(D) == _13)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 6>:
  _7 = this_4(D)->builtin_codes_[i_9];
  if (_7 == op_8(D))
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 11>;

  <bb 8>:
  # i_1 = PHI <i_9(6)>

  <bb 9>:
  # i_15 = PHI <i_1(8), 0(5)>
  _10 = this_4(D)->builtin_parsers_[i_15];
  goto <bb 12>;

  <bb 10>:

  <bb 11>:
  # i_14 = PHI <0(10), i_9(7)>
  i_9 = i_14 + 1;
  if (_5 <= i_9)
    goto <bb 12>;
  else
    goto <bb 6>;

  <bb 12>:
  # _2 = PHI <_10(9), 0B(11), 0B(3)>
  return _2;

}



;; Function const TfLiteRegistration* tflite::MicroMutableOpResolver<tOpCount>::FindOp(const char*) const [with unsigned int tOpCount = 5u] (_ZNK6tflite22MicroMutableOpResolverILj5EE6FindOpEPKc, funcdef_no=11536, decl_uid=186254, cgraph_uid=8485, symbol_order=9352)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:57:29: note: vectorized 0 loops in function.
const TfLiteRegistration* tflite::MicroMutableOpResolver<tOpCount>::FindOp(const char*) const [with unsigned int tOpCount = 5u] (const struct MicroMutableOpResolver * const this, const char * op)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  sizetype _1;
  const struct TfLiteRegistration * _2;
  sizetype _5;
  long int _7;
  const char * _9;
  int _11;
  unsigned int _13;

  <bb 2>:
  _13 = this_4(D)->registrations_len_;
  if (_13 == 0)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # i_14 = PHI <0(3), i_8(8)>
  _7 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_14].builtin_code;
  if (_7 == 32)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  _9 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_14].custom_name;
  _11 = strcmp (_9, op_10(D));
  if (_11 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # i_21 = PHI <i_14(5)>
  _5 = i_21 * 32;
  _1 = _5 + 4;
  registration_6 = this_4(D) + _1;
  goto <bb 9>;

  <bb 7>:
  i_8 = i_14 + 1;
  if (i_8 >= _13)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 4>;

  <bb 9>:
  # _2 = PHI <registration_6(6), 0B(7), 0B(2)>
  return _2;

}



;; Function virtual const TfLiteRegistration* tflite::MicroOpResolver::FindOp(tflite::BuiltinOperator, int) const (_ZNK6tflite15MicroOpResolver6FindOpENS_15BuiltinOperatorEi, funcdef_no=6917, decl_uid=184858, cgraph_uid=3957, symbol_order=3997)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_op_resolver.h:53:29: note: vectorized 0 loops in function.
virtual const TfLiteRegistration* tflite::MicroOpResolver::FindOp(tflite::BuiltinOperator, int) const (const struct MicroOpResolver * const this, BuiltinOperator op, int version)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244156;
  int (*__vtbl_ptr_type) () * _3;
  int (*__vtbl_ptr_type) () _4;
  long int _6;
  const struct TfLiteRegistration * _7;
  void * PROF_8;
  const struct TfLiteRegistration * _10;
  long int _11;
  sizetype _12;
  long int _15;
  sizetype _16;
  unsigned int _19;

  <bb 2>:
  _3 = this_2(D)->D.184879._vptr.OpResolver;
  _4 = MEM[(int (*__vtbl_ptr_type) () *)_3 + 24B];
  PROF_8 = [obj_type_ref] OBJ_TYPE_REF(_4;(const struct MicroOpResolver)this_2(D)->6);
  if (PROF_8 == FindOp)
    goto <bb 3>;
  else
    goto <bb 12>;

  <bb 3>:
  if (op_5(D) == 32)
    goto <bb 13>;
  else
    goto <bb 4>;

  <bb 4>:
  _19 = MEM[(const struct MicroMutableOpResolver *)this_2(D)].registrations_len_;
  if (_19 == 0)
    goto <bb 13>;
  else
    goto <bb 5>;

  <bb 5>:
  _11 = MEM[(const struct TfLiteRegistration &)this_2(D)].registrations_[0].builtin_code;
  _6 = (long int) op_5(D);
  if (_6 == _11)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 11>;

  <bb 7>:
  registration_9 = &MEM[(const struct MicroMutableOpResolver *)this_2(D)].registrations_[0];
  goto <bb 13>;

  <bb 8>:
  _15 = MEM[(const struct TfLiteRegistration &)this_2(D)].registrations_[i_17].builtin_code;
  if (_6 == _15)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # i_18 = PHI <i_17(8)>
  _12 = i_18 * 32;
  _16 = _12 + 4;
  registration_14 = this_2(D) + _16;
  goto <bb 13>;

  <bb 10>:

  <bb 11>:
  # i_23 = PHI <0(6), i_17(10)>
  i_17 = i_23 + 1;
  if (i_17 >= _19)
    goto <bb 13>;
  else
    goto <bb 8>;

  <bb 12>:
  _10 = OBJ_TYPE_REF(_4;(const struct MicroOpResolver)this_2(D)->6) (this_2(D), op_5(D));

  <bb 13>:
  # _7 = PHI <_10(12), registration_9(7), 0B(4), registration_14(9), 0B(3), 0B(11)>
  return _7;

}



;; Function virtual const TfLiteRegistration* tflite::MicroOpResolver::FindOp(const char*, int) const (_ZNK6tflite15MicroOpResolver6FindOpEPKci, funcdef_no=6918, decl_uid=184862, cgraph_uid=3958, symbol_order=3998)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_op_resolver.h:60:29: note: vectorized 0 loops in function.
virtual const TfLiteRegistration* tflite::MicroOpResolver::FindOp(const char*, int) const (const struct MicroOpResolver * const this, const char * op, int version)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244163;
  int (*__vtbl_ptr_type) () * _3;
  int (*__vtbl_ptr_type) () _4;
  const struct TfLiteRegistration * _7;
  void * PROF_8;
  unsigned int _9;
  const struct TfLiteRegistration * _10;
  sizetype _12;
  sizetype _13;
  long int _15;
  const char * _16;
  int _17;

  <bb 2>:
  _3 = this_2(D)->D.184879._vptr.OpResolver;
  _4 = MEM[(int (*__vtbl_ptr_type) () *)_3 + 28B];
  PROF_8 = [obj_type_ref] OBJ_TYPE_REF(_4;(const struct MicroOpResolver)this_2(D)->7);
  if (PROF_8 == FindOp)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 3>:
  _9 = MEM[(const struct MicroMutableOpResolver *)this_2(D)].registrations_len_;
  if (_9 == 0)
    goto <bb 11>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # i_11 = PHI <0(4), i_18(9)>
  _15 = MEM[(const struct TfLiteRegistration &)this_2(D)].registrations_[i_11].builtin_code;
  if (_15 == 32)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  _16 = MEM[(const struct TfLiteRegistration &)this_2(D)].registrations_[i_11].custom_name;
  _17 = strcmp (_16, op_5(D));
  if (_17 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # i_27 = PHI <i_11(6)>
  _12 = i_27 * 32;
  _13 = _12 + 4;
  registration_14 = this_2(D) + _13;
  goto <bb 11>;

  <bb 8>:
  i_18 = i_11 + 1;
  if (_9 <= i_18)
    goto <bb 11>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 5>;

  <bb 10>:
  _10 = OBJ_TYPE_REF(_4;(const struct MicroOpResolver)this_2(D)->7) (this_2(D), op_5(D));

  <bb 11>:
  # _7 = PHI <_10(10), registration_14(7), 0B(8), 0B(3)>
  return _7;

}



;; Function void tfl_QAT_dnn_setupPre() (tfl_QAT_dnn_setupPre, funcdef_no=7042, decl_uid=8198, cgraph_uid=4000, symbol_order=4056)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_EBK/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.
../src/neural_networks/tensorflow_lite/TF_lite_quantization_aware_training/tensorflowlite_QAT_dnn_compute.cc:62:6: note: vectorized 0 loops in function.
void tfl_QAT_dnn_setupPre() ()
{
  TfLiteStatus D.244251;
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244246;
  TfLiteStatus D.244241;
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244236;
  TfLiteStatus D.244231;
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244226;
  TfLiteStatus D.244221;
  TfLiteStatus D.244216;
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244211;
  TfLiteStatus D.244206;
  TfLiteStatus D.244201;
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244196;
  TfLiteStatus D.244191;
  struct TfLiteRegistration D.244186;
  TfLiteStatus D.244185;
  struct TfLiteRegistration D.244183;
  TfLiteStatus D.244182;
  struct TfLiteRegistration D.244180;
  TfLiteStatus D.244179;
  TfLiteStatus D.244177;
  TfLiteStatus D.244172;
  static struct MicroInterpreter static_interpreter_QAT;
  static struct MicroMutableOpResolver micro_op_resolver_QAT;
  static struct MicroProfiler micro_profiler_QAT;
  static struct MicroErrorReporter micro_error_reporter_QAT = {.D.9059={._vptr.ErrorReporter=&MEM[(void *)&_ZTVN6tflite18MicroErrorReporterE + 8B]}};
  struct TfLiteRegistration D.186522;
  struct TfLiteRegistration D.186520;
  unsigned char _9;
  int _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _18;
  int _20;
  unsigned char _21;
  long int _25;
  const uint8_t[1] * _27;
  unsigned char _29;
  int _31;
  struct ErrorReporter * error_reporter_QAT.8_32;
  unsigned char _43;
  int _45;
  const struct Model * model_QAT.5_46;
  struct ErrorReporter * error_reporter_QAT.8_47;
  struct MicroProfiler * profiler_QAT.11_48;
  struct ErrorReporter * error_reporter_QAT.8_54;
  struct MicroInterpreter * interpreter_QAT.12_56;
  TfLiteStatus _58;
  struct MicroInterpreter * interpreter_QAT.12_59;
  struct TfLiteTensor * _61;
  struct ErrorReporter * error_reporter_QAT.8_63;
  struct TfLiteIntArray * _64;
  int _65;
  struct ErrorReporter * error_reporter_QAT.8_67;
  struct TfLiteTensor * input_QAT.13_68;
  struct TfLiteIntArray * _69;
  int _70;
  int _71;
  int _72;
  int _73;
  struct TfLiteTensor * input_QAT.13_75;
  TfLiteType _76;
  struct ErrorReporter * error_reporter_QAT.8_77;
  struct ErrorReporter * error_reporter_QAT.8_79;
  struct MicroInterpreter * interpreter_QAT.12_81;
  struct TfLiteTensor * _83;
  struct ErrorReporter * error_reporter_QAT.8_84;
  struct TfLiteIntArray * _85;
  int _86;
  struct ErrorReporter * error_reporter_QAT.8_88;
  struct TfLiteIntArray * _89;
  int _90;
  int _91;
  TfLiteType _93;
  struct ErrorReporter * error_reporter_QAT.8_94;
  struct ErrorReporter * error_reporter_QAT.8_96;
  sizetype _98;
  sizetype _99;
  const uint8_t * _100;
  short unsigned int _101;
  int _102;
  short unsigned int _103;
  long int _104;
  sizetype _105;
  const void * _106;
  long unsigned int _107;
  long unsigned int _109;
  struct Model * _110;
  unsigned char _113;
  unsigned int _121;
  unsigned int prephitmp_122;
  long int _123;
  long int _124;
  unsigned int _126;
  unsigned int prephitmp_127;
  unsigned int _134;
  unsigned int _135;
  unsigned int _138;
  long int _142;
  unsigned int _143;
  unsigned int _150;
  unsigned int _151;
  unsigned int _153;
  unsigned int _157;
  long int _161;
  long int _162;
  unsigned int _167;
  unsigned int _169;
  unsigned int _170;
  unsigned int prephitmp_171;
  long int _180;
  unsigned int _183;
  unsigned int _186;
  unsigned int _188;
  unsigned int _189;
  long int _194;
  unsigned int _202;
  unsigned int _203;
  unsigned int _207;
  long int _208;
  unsigned int prephitmp_211;
  unsigned int _213;
  unsigned int _216;
  unsigned int _217;
  unsigned int _219;
  unsigned int prephitmp_223;
  unsigned int _272;
  long int _274;

  <bb 2>:
  _9 = __atomic_load_1 (&_ZGVZ20tfl_QAT_dnn_setupPreE24micro_error_reporter_QAT, 2);
  _12 = _9 & 1;
  if (_12 == 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 6>;

  <bb 4>:
  _11 = __cxa_guard_acquire (&_ZGVZ20tfl_QAT_dnn_setupPreE24micro_error_reporter_QAT);
  if (_11 != 0)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 5>:
  __cxa_guard_release (&_ZGVZ20tfl_QAT_dnn_setupPreE24micro_error_reporter_QAT);
  __aeabi_atexit (&micro_error_reporter_QAT, __comp_dtor , &__dso_handle);

  <bb 6>:
  error_reporter_QAT = &micro_error_reporter_QAT.D.9059;
  _18 = __atomic_load_1 (&_ZGVZ20tfl_QAT_dnn_setupPreE18micro_profiler_QAT, 2);
  _13 = _18 & 1;
  if (_13 == 0)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 10>;

  <bb 8>:
  _20 = __cxa_guard_acquire (&_ZGVZ20tfl_QAT_dnn_setupPreE18micro_profiler_QAT);
  if (_20 != 0)
    goto <bb 9>;
  else
    goto <bb 7>;

  <bb 9>:
  micro_profiler_QAT._vptr.MicroProfiler = &MEM[(void *)&_ZTVN6tflite13MicroProfilerE + 8B];
  micro_profiler_QAT.num_events_ = 0;
  __cxa_guard_release (&_ZGVZ20tfl_QAT_dnn_setupPreE18micro_profiler_QAT);
  __aeabi_atexit (&micro_profiler_QAT, __comp_dtor , &__dso_handle);

  <bb 10>:
  profiler_QAT = &micro_profiler_QAT;
  _109 = MEM[(uoffset_t *)&g_CNN_FE_Schrift_QAT_data];
  _110 = &g_CNN_FE_Schrift_QAT_data + _109;
  model_QAT = _110;
  _27 = &MEM[(const struct Table *)_110].data_;
  _25 = MEM[(const long int *)_110];
  _98 = (sizetype) _25;
  _99 = -_98;
  _100 = _27 + _99;
  _101 = MEM[(const short unsigned int *)_100];
  _102 = (int) _101;
  if (_102 > 4)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 65>;

  <bb 12>:
  _103 = MEM[(const short unsigned int *)_100 + 4B];
  if (_103 != 0)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 13>:
  _105 = (sizetype) _103;
  _106 = _27 + _105;
  _107 = MEM[(const long unsigned int *)_106];
  if (_107 != 3)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 14>:
  _29 = __atomic_load_1 (&_ZGVZ20tfl_QAT_dnn_setupPreE21micro_op_resolver_QAT, 2);
  _21 = _29 & 1;
  if (_21 == 0)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 18>;

  <bb 16>:
  _31 = __cxa_guard_acquire (&_ZGVZ20tfl_QAT_dnn_setupPreE21micro_op_resolver_QAT);
  if (_31 != 0)
    goto <bb 17>;
  else
    goto <bb 15>;

  <bb 17>:
  error_reporter_QAT.8_32 = error_reporter_QAT;
  MEM[(struct  &)&micro_op_resolver_QAT] ={v} {CLOBBER};
  micro_op_resolver_QAT.D.186459.D.184879._vptr.OpResolver = &MEM[(void *)&_ZTVN6tflite22MicroMutableOpResolverILj5EEE + 8B];
  micro_op_resolver_QAT.registrations_len_ = 0;
  micro_op_resolver_QAT.num_buitin_ops_ = 0;
  micro_op_resolver_QAT.error_reporter_ = error_reporter_QAT.8_32;
  __cxa_guard_release (&_ZGVZ20tfl_QAT_dnn_setupPreE21micro_op_resolver_QAT);
  __aeabi_atexit (&micro_op_resolver_QAT, __comp_dtor , &__dso_handle);

  <bb 18>:
  D.244186 = tflite::Register_CONV_2D (); [return slot optimization]
  _213 = micro_op_resolver_QAT.registrations_len_;
  if (_213 == 0)
    goto <bb 24>;
  else
    goto <bb 19>;

  <bb 19>:
  _274 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver_QAT].registrations_[0].builtin_code;
  if (_274 == 3)
    goto <bb 25>;
  else
    goto <bb 22>;

  <bb 20>:
  _142 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver_QAT].registrations_[i_144].builtin_code;
  if (_142 == 3)
    goto <bb 25>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 23>;

  <bb 22>:

  <bb 23>:
  # i_129 = PHI <0(22), i_144(21)>
  i_144 = i_129 + 1;
  if (i_144 >= _213)
    goto <bb 67>;
  else
    goto <bb 20>;

  <bb 24>:
  # _153 = PHI <_213(68), 0(18)>
  # prephitmp_171 = PHI <_183(68), 1(18)>
  micro_op_resolver_QAT.registrations_[_153] = D.244186;
  micro_op_resolver_QAT.registrations_[_153].builtin_code = 3;
  micro_op_resolver_QAT.registrations_len_ = prephitmp_171;
  _150 = micro_op_resolver_QAT.num_buitin_ops_;
  micro_op_resolver_QAT.builtin_codes_[_150] = 3;
  micro_op_resolver_QAT.builtin_parsers_[_150] = ParseConv2D;
  _151 = _150 + 1;
  micro_op_resolver_QAT.num_buitin_ops_ = _151;

  <bb 25>:
  D.244186 ={v} {CLOBBER};
  D.244183 = tflite::ops::micro::Register_MAX_POOL_2D (); [return slot optimization]
  _143 = micro_op_resolver_QAT.registrations_len_;
  if (_143 == 0)
    goto <bb 31>;
  else
    goto <bb 26>;

  <bb 26>:
  _124 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver_QAT].registrations_[0].builtin_code;
  if (_124 == 17)
    goto <bb 32>;
  else
    goto <bb 29>;

  <bb 27>:
  _161 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver_QAT].registrations_[i_163].builtin_code;
  if (_161 == 17)
    goto <bb 32>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 30>;

  <bb 29>:

  <bb 30>:
  # i_128 = PHI <0(29), i_163(28)>
  i_163 = i_128 + 1;
  if (_143 <= i_163)
    goto <bb 69>;
  else
    goto <bb 27>;

  <bb 31>:
  # _138 = PHI <_143(70), 0(25)>
  # prephitmp_211 = PHI <_219(70), 1(25)>
  micro_op_resolver_QAT.registrations_[_138] = D.244183;
  micro_op_resolver_QAT.registrations_[_138].builtin_code = 17;
  micro_op_resolver_QAT.registrations_len_ = prephitmp_211;
  _169 = micro_op_resolver_QAT.num_buitin_ops_;
  micro_op_resolver_QAT.builtin_codes_[_169] = 17;
  micro_op_resolver_QAT.builtin_parsers_[_169] = ParsePool;
  _170 = _169 + 1;
  micro_op_resolver_QAT.num_buitin_ops_ = _170;

  <bb 32>:
  D.244183 ={v} {CLOBBER};
  D.244180 = tflite::ops::micro::Register_RESHAPE (); [return slot optimization]
  _167 = micro_op_resolver_QAT.registrations_len_;
  if (_167 == 0)
    goto <bb 38>;
  else
    goto <bb 33>;

  <bb 33>:
  _162 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver_QAT].registrations_[0].builtin_code;
  if (_162 == 22)
    goto <bb 39>;
  else
    goto <bb 36>;

  <bb 34>:
  _180 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver_QAT].registrations_[i_182].builtin_code;
  if (_180 == 22)
    goto <bb 39>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 37>;

  <bb 36>:

  <bb 37>:
  # i_131 = PHI <0(36), i_182(35)>
  i_182 = i_131 + 1;
  if (_167 <= i_182)
    goto <bb 71>;
  else
    goto <bb 34>;

  <bb 38>:
  # _135 = PHI <_167(72), 0(32)>
  # prephitmp_223 = PHI <_207(72), 1(32)>
  micro_op_resolver_QAT.registrations_[_135] = D.244180;
  micro_op_resolver_QAT.registrations_[_135].builtin_code = 22;
  micro_op_resolver_QAT.registrations_len_ = prephitmp_223;
  _188 = micro_op_resolver_QAT.num_buitin_ops_;
  micro_op_resolver_QAT.builtin_codes_[_188] = 22;
  micro_op_resolver_QAT.builtin_parsers_[_188] = ParseReshape;
  _189 = _188 + 1;
  micro_op_resolver_QAT.num_buitin_ops_ = _189;

  <bb 39>:
  D.244180 ={v} {CLOBBER};
  D.186520 = tflite::Register_FULLY_CONNECTED (); [return slot optimization]
  _186 = micro_op_resolver_QAT.registrations_len_;
  if (_186 == 0)
    goto <bb 45>;
  else
    goto <bb 40>;

  <bb 40>:
  _104 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver_QAT].registrations_[0].builtin_code;
  if (_104 == 9)
    goto <bb 46>;
  else
    goto <bb 43>;

  <bb 41>:
  _194 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver_QAT].registrations_[i_196].builtin_code;
  if (_194 == 9)
    goto <bb 46>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 44>;

  <bb 43>:

  <bb 44>:
  # i_175 = PHI <0(43), i_196(42)>
  i_196 = i_175 + 1;
  if (_186 <= i_196)
    goto <bb 73>;
  else
    goto <bb 41>;

  <bb 45>:
  # _134 = PHI <_186(74), 0(39)>
  # prephitmp_122 = PHI <_121(74), 1(39)>
  micro_op_resolver_QAT.registrations_[_134] = D.186520;
  micro_op_resolver_QAT.registrations_[_134].builtin_code = 9;
  micro_op_resolver_QAT.registrations_len_ = prephitmp_122;
  _202 = micro_op_resolver_QAT.num_buitin_ops_;
  micro_op_resolver_QAT.builtin_codes_[_202] = 9;
  micro_op_resolver_QAT.builtin_parsers_[_202] = ParseFullyConnected;
  _203 = _202 + 1;
  micro_op_resolver_QAT.num_buitin_ops_ = _203;

  <bb 46>:
  D.186520 ={v} {CLOBBER};
  D.186522 = tflite::Register_SOFTMAX (); [return slot optimization]
  _272 = micro_op_resolver_QAT.registrations_len_;
  if (_272 == 0)
    goto <bb 52>;
  else
    goto <bb 47>;

  <bb 47>:
  _123 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver_QAT].registrations_[0].builtin_code;
  if (_123 == 25)
    goto <bb 53>;
  else
    goto <bb 50>;

  <bb 48>:
  _208 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver_QAT].registrations_[i_210].builtin_code;
  if (_208 == 25)
    goto <bb 53>;
  else
    goto <bb 49>;

  <bb 49>:
  goto <bb 51>;

  <bb 50>:

  <bb 51>:
  # i_130 = PHI <0(50), i_210(49)>
  i_210 = i_130 + 1;
  if (i_210 >= _272)
    goto <bb 75>;
  else
    goto <bb 48>;

  <bb 52>:
  # _157 = PHI <_272(76), 0(46)>
  # prephitmp_127 = PHI <_126(76), 1(46)>
  micro_op_resolver_QAT.registrations_[_157] = D.186522;
  micro_op_resolver_QAT.registrations_[_157].builtin_code = 25;
  micro_op_resolver_QAT.registrations_len_ = prephitmp_127;
  _216 = micro_op_resolver_QAT.num_buitin_ops_;
  micro_op_resolver_QAT.builtin_codes_[_216] = 25;
  micro_op_resolver_QAT.builtin_parsers_[_216] = ParseSoftmax;
  _217 = _216 + 1;
  micro_op_resolver_QAT.num_buitin_ops_ = _217;

  <bb 53>:
  D.186522 ={v} {CLOBBER};
  _43 = __atomic_load_1 (&_ZGVZ20tfl_QAT_dnn_setupPreE22static_interpreter_QAT, 2);
  _113 = _43 & 1;
  if (_113 == 0)
    goto <bb 55>;
  else
    goto <bb 54>;

  <bb 54>:
  goto <bb 58>;

  <bb 55>:
  _45 = __cxa_guard_acquire (&_ZGVZ20tfl_QAT_dnn_setupPreE22static_interpreter_QAT);
  if (_45 != 0)
    goto <bb 56>;
  else
    goto <bb 54>;

  <bb 56>:
  model_QAT.5_46 = model_QAT;
  error_reporter_QAT.8_47 = error_reporter_QAT;
  profiler_QAT.11_48 = profiler_QAT;
  tflite::MicroInterpreter::MicroInterpreter (&static_interpreter_QAT, model_QAT.5_46, &micro_op_resolver_QAT.D.186459, &tensor_arena_QAT, 10240, error_reporter_QAT.8_47, profiler_QAT.11_48);

  <bb 57>:
  __cxa_guard_release (&_ZGVZ20tfl_QAT_dnn_setupPreE22static_interpreter_QAT);
  __aeabi_atexit (&static_interpreter_QAT, __comp_dtor , &__dso_handle);

  <bb 58>:
  interpreter_QAT = &static_interpreter_QAT;
  error_reporter_QAT.8_54 = error_reporter_QAT;
  tflite::ErrorReporter::Report (error_reporter_QAT.8_54, "   start allocating tensors");
  interpreter_QAT.12_56 = interpreter_QAT;
  _58 = tflite::MicroInterpreter::AllocateTensors (interpreter_QAT.12_56);
  if (_58 != 0)
    goto <bb 11>;
  else
    goto <bb 59>;

  <bb 59>:
  interpreter_QAT.12_59 = interpreter_QAT;
  _61 = tflite::MicroInterpreter::input (interpreter_QAT.12_59, 0);
  input_QAT = _61;
  error_reporter_QAT.8_63 = error_reporter_QAT;
  _64 = _61->dims;
  _65 = _64->size;
  tflite::ErrorReporter::Report (error_reporter_QAT.8_63, "   input  dimensions : %d", _65);
  error_reporter_QAT.8_67 = error_reporter_QAT;
  input_QAT.13_68 = input_QAT;
  _69 = input_QAT.13_68->dims;
  _70 = _69->data[0];
  _71 = _69->data[1];
  _72 = _69->data[2];
  _73 = _69->data[3];
  tflite::ErrorReporter::Report (error_reporter_QAT.8_67, "   input  shape      : %d, %d, %d, %d", _70, _71, _72, _73);
  input_QAT.13_75 = input_QAT;
  _76 = input_QAT.13_75->type;
  if (_76 == 9)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 60>:
  error_reporter_QAT.8_77 = error_reporter_QAT;
  tflite::ErrorReporter::Report (error_reporter_QAT.8_77, "   input  type       : %s", "kTfLiteInt8");
  goto <bb 62>;

  <bb 61>:
  error_reporter_QAT.8_79 = error_reporter_QAT;
  tflite::ErrorReporter::Report (error_reporter_QAT.8_79, "   ATTENTION: input type is not %s", "kTfLiteInt8");

  <bb 62>:
  interpreter_QAT.12_81 = interpreter_QAT;
  _83 = tflite::MicroInterpreter::output (interpreter_QAT.12_81, 0);
  error_reporter_QAT.8_84 = error_reporter_QAT;
  _85 = _83->dims;
  _86 = _85->size;
  tflite::ErrorReporter::Report (error_reporter_QAT.8_84, "   output dimensions : %d", _86);
  error_reporter_QAT.8_88 = error_reporter_QAT;
  _89 = _83->dims;
  _90 = _89->data[0];
  _91 = _89->data[1];
  tflite::ErrorReporter::Report (error_reporter_QAT.8_88, "   output shape      : %d, %d", _90, _91);
  _93 = _83->type;
  if (_93 == 9)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  error_reporter_QAT.8_94 = error_reporter_QAT;
  tflite::ErrorReporter::Report (error_reporter_QAT.8_94, "   output type       : %s", "kTfLiteInt8");
  goto <bb 65>;

  <bb 64>:
  error_reporter_QAT.8_96 = error_reporter_QAT;
  tflite::ErrorReporter::Report (error_reporter_QAT.8_96, "   ATTENTION: output type is not %s", "kTfLiteInt8");

  <bb 65>:
  return;

<L37>:
  __cxa_guard_abort (&_ZGVZ20tfl_QAT_dnn_setupPreE22static_interpreter_QAT);
  resx 8

  <bb 67>:
  if (_213 > 4)
    goto <bb 25>;
  else
    goto <bb 68>;

  <bb 68>:
  _183 = _213 + 1;
  goto <bb 24>;

  <bb 69>:
  if (_143 > 4)
    goto <bb 32>;
  else
    goto <bb 70>;

  <bb 70>:
  _219 = _143 + 1;
  goto <bb 31>;

  <bb 71>:
  if (_167 > 4)
    goto <bb 39>;
  else
    goto <bb 72>;

  <bb 72>:
  _207 = _167 + 1;
  goto <bb 38>;

  <bb 73>:
  if (_186 > 4)
    goto <bb 46>;
  else
    goto <bb 74>;

  <bb 74>:
  _121 = _186 + 1;
  goto <bb 45>;

  <bb 75>:
  if (_272 > 4)
    goto <bb 53>;
  else
    goto <bb 76>;

  <bb 76>:
  _126 = _272 + 1;
  goto <bb 52>;

}


