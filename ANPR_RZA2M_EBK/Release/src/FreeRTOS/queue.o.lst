   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"queue.c"
  13              		.section	.text.xQueueGenericReset,"ax",%progbits
  14              		.align	2
  15              		.global	xQueueGenericReset
  16              		.syntax unified
  17              		.arm
  18              		.fpu neon
  20              	xQueueGenericReset:
  21              		@ args = 0, pretend = 0, frame = 0
  22              		@ frame_needed = 0, uses_anonymous_args = 0
  23 0000 70402DE9 		push	{r4, r5, r6, lr}
  24 0004 004050E2 		subs	r4, r0, #0
  25 0008 0150A0E1 		mov	r5, r1
  26 000c 2200000A 		beq	.L12
  27              	.L2:
  28 0010 FEFFFFEB 		bl	vPortEnterCritical
  29 0014 401094E5 		ldr	r1, [r4, #64]
  30 0018 000055E3 		cmp	r5, #0
  31 001c 3C3094E5 		ldr	r3, [r4, #60]
  32 0020 0000E0E3 		mvn	r0, #0
  33 0024 002094E5 		ldr	r2, [r4]
  34 0028 00C0A0E3 		mov	ip, #0
  35 002c 38C084E5 		str	ip, [r4, #56]
  36 0030 4400C4E5 		strb	r0, [r4, #68]
  37 0034 930103E0 		mul	r3, r3, r1
  38 0038 082084E5 		str	r2, [r4, #8]
  39 003c 4500C4E5 		strb	r0, [r4, #69]
  40 0040 011043E0 		sub	r1, r3, r1
  41 0044 033082E0 		add	r3, r2, r3
  42 0048 012082E0 		add	r2, r2, r1
  43 004c 043084E5 		str	r3, [r4, #4]
  44 0050 0C2084E5 		str	r2, [r4, #12]
  45 0054 0B00001A 		bne	.L3
  46 0058 103094E5 		ldr	r3, [r4, #16]
  47 005c 0C0053E1 		cmp	r3, ip
  48 0060 0200001A 		bne	.L13
  49              	.L5:
  50 0064 FEFFFFEB 		bl	vPortExitCritical
  51 0068 0100A0E3 		mov	r0, #1
  52 006c 7080BDE8 		pop	{r4, r5, r6, pc}
  53              	.L13:
  54 0070 100084E2 		add	r0, r4, #16
  55 0074 FEFFFFEB 		bl	xTaskRemoveFromEventList
  56 0078 000050E3 		cmp	r0, #0
  57 007c F8FFFF0A 		beq	.L5
  58              		.syntax divided
  59              	@ 273 "../src/FreeRTOS/queue.c" 1
  60 0080 000000EF 		SWI 0
  61              	@ 0 "" 2
  62              		.arm
  63              		.syntax unified
  64 0084 F6FFFFEA 		b	.L5
  65              	.L3:
  66 0088 100084E2 		add	r0, r4, #16
  67 008c FEFFFFEB 		bl	vListInitialise
  68 0090 240084E2 		add	r0, r4, #36
  69 0094 FEFFFFEB 		bl	vListInitialise
  70 0098 F1FFFFEA 		b	.L5
  71              	.L12:
  72 009c 000000E3 		movw	r0, #:lower16:.LC0
  73 00a0 FB10A0E3 		mov	r1, #251
  74 00a4 000040E3 		movt	r0, #:upper16:.LC0
  75 00a8 FEFFFFEB 		bl	R_OS_AssertCalled
  76 00ac D7FFFFEA 		b	.L2
  78              		.section	.text.xQueueGenericCreate,"ax",%progbits
  79              		.align	2
  80              		.global	xQueueGenericCreate
  81              		.syntax unified
  82              		.arm
  83              		.fpu neon
  85              	xQueueGenericCreate:
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
  89 0004 007050E2 		subs	r7, r0, #0
  90 0008 0160A0E1 		mov	r6, r1
  91 000c 0250A0E1 		mov	r5, r2
  92 0010 2200000A 		beq	.L23
  93              	.L15:
  94 0014 960700E0 		mul	r0, r6, r7
  95 0018 500080E2 		add	r0, r0, #80
  96 001c FEFFFFEB 		bl	pvPortMalloc
  97 0020 004050E2 		subs	r4, r0, #0
  98 0024 1B00000A 		beq	.L16
  99 0028 000056E3 		cmp	r6, #0
 100 002c 3C7084E5 		str	r7, [r4, #60]
 101 0030 50308412 		addne	r3, r4, #80
 102 0034 0430A001 		moveq	r3, r4
 103 0038 003084E5 		str	r3, [r4]
 104 003c 406084E5 		str	r6, [r4, #64]
 105 0040 FEFFFFEB 		bl	vPortEnterCritical
 106 0044 401094E5 		ldr	r1, [r4, #64]
 107 0048 00C0E0E3 		mvn	ip, #0
 108 004c 3C3094E5 		ldr	r3, [r4, #60]
 109 0050 00E0A0E3 		mov	lr, #0
 110 0054 002094E5 		ldr	r2, [r4]
 111 0058 100084E2 		add	r0, r4, #16
 112 005c 38E084E5 		str	lr, [r4, #56]
 113 0060 44C0C4E5 		strb	ip, [r4, #68]
 114 0064 930103E0 		mul	r3, r3, r1
 115 0068 082084E5 		str	r2, [r4, #8]
 116 006c 45C0C4E5 		strb	ip, [r4, #69]
 117 0070 011043E0 		sub	r1, r3, r1
 118 0074 033082E0 		add	r3, r2, r3
 119 0078 012082E0 		add	r2, r2, r1
 120 007c 043084E5 		str	r3, [r4, #4]
 121 0080 0C2084E5 		str	r2, [r4, #12]
 122 0084 FEFFFFEB 		bl	vListInitialise
 123 0088 240084E2 		add	r0, r4, #36
 124 008c FEFFFFEB 		bl	vListInitialise
 125 0090 FEFFFFEB 		bl	vPortExitCritical
 126 0094 4C50C4E5 		strb	r5, [r4, #76]
 127              	.L16:
 128 0098 0400A0E1 		mov	r0, r4
 129 009c F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 130              	.L23:
 131 00a0 000000E3 		movw	r0, #:lower16:.LC0
 132 00a4 5B1FA0E3 		mov	r1, #364
 133 00a8 000040E3 		movt	r0, #:upper16:.LC0
 134 00ac FEFFFFEB 		bl	R_OS_AssertCalled
 135 00b0 D7FFFFEA 		b	.L15
 137              		.section	.text.xQueueGetMutexHolder,"ax",%progbits
 138              		.align	2
 139              		.global	xQueueGetMutexHolder
 140              		.syntax unified
 141              		.arm
 142              		.fpu neon
 144              	xQueueGetMutexHolder:
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 10402DE9 		push	{r4, lr}
 148 0004 0040A0E1 		mov	r4, r0
 149 0008 FEFFFFEB 		bl	vPortEnterCritical
 150 000c 003094E5 		ldr	r3, [r4]
 151 0010 000053E3 		cmp	r3, #0
 152 0014 04409405 		ldreq	r4, [r4, #4]
 153 0018 0040A013 		movne	r4, #0
 154 001c FEFFFFEB 		bl	vPortExitCritical
 155 0020 0400A0E1 		mov	r0, r4
 156 0024 1080BDE8 		pop	{r4, pc}
 158              		.section	.text.xQueueGetMutexHolderFromISR,"ax",%progbits
 159              		.align	2
 160              		.global	xQueueGetMutexHolderFromISR
 161              		.syntax unified
 162              		.arm
 163              		.fpu neon
 165              	xQueueGetMutexHolderFromISR:
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 10402DE9 		push	{r4, lr}
 169 0004 004050E2 		subs	r4, r0, #0
 170 0008 0400000A 		beq	.L33
 171              	.L29:
 172 000c 003094E5 		ldr	r3, [r4]
 173 0010 000053E3 		cmp	r3, #0
 174 0014 04009405 		ldreq	r0, [r4, #4]
 175 0018 0000A013 		movne	r0, #0
 176 001c 1080BDE8 		pop	{r4, pc}
 177              	.L33:
 178 0020 000000E3 		movw	r0, #:lower16:.LC0
 179 0024 8A1FA0E3 		mov	r1, #552
 180 0028 000040E3 		movt	r0, #:upper16:.LC0
 181 002c FEFFFFEB 		bl	R_OS_AssertCalled
 182 0030 F5FFFFEA 		b	.L29
 184              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 185              		.align	2
 186              		.global	xQueueCreateCountingSemaphore
 187              		.syntax unified
 188              		.arm
 189              		.fpu neon
 191              	xQueueCreateCountingSemaphore:
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 195 0004 007050E2 		subs	r7, r0, #0
 196 0008 0150A0E1 		mov	r5, r1
 197 000c 2200000A 		beq	.L48
 198 0010 010057E1 		cmp	r7, r1
 199 0014 2F00003A 		bcc	.L49
 200              	.L37:
 201 0018 5000A0E3 		mov	r0, #80
 202 001c FEFFFFEB 		bl	pvPortMalloc
 203 0020 004050E2 		subs	r4, r0, #0
 204 0024 1A00000A 		beq	.L43
 205 0028 0060A0E3 		mov	r6, #0
 206 002c 004084E5 		str	r4, [r4]
 207 0030 3C7084E5 		str	r7, [r4, #60]
 208 0034 406084E5 		str	r6, [r4, #64]
 209 0038 FEFFFFEB 		bl	vPortEnterCritical
 210 003c 401094E5 		ldr	r1, [r4, #64]
 211 0040 00C0E0E3 		mvn	ip, #0
 212 0044 3C3094E5 		ldr	r3, [r4, #60]
 213 0048 100084E2 		add	r0, r4, #16
 214 004c 002094E5 		ldr	r2, [r4]
 215 0050 386084E5 		str	r6, [r4, #56]
 216 0054 44C0C4E5 		strb	ip, [r4, #68]
 217 0058 930103E0 		mul	r3, r3, r1
 218 005c 082084E5 		str	r2, [r4, #8]
 219 0060 45C0C4E5 		strb	ip, [r4, #69]
 220 0064 011043E0 		sub	r1, r3, r1
 221 0068 033082E0 		add	r3, r2, r3
 222 006c 012082E0 		add	r2, r2, r1
 223 0070 043084E5 		str	r3, [r4, #4]
 224 0074 0C2084E5 		str	r2, [r4, #12]
 225 0078 FEFFFFEB 		bl	vListInitialise
 226 007c 240084E2 		add	r0, r4, #36
 227 0080 FEFFFFEB 		bl	vListInitialise
 228 0084 FEFFFFEB 		bl	vPortExitCritical
 229 0088 0230A0E3 		mov	r3, #2
 230 008c 385084E5 		str	r5, [r4, #56]
 231 0090 4C30C4E5 		strb	r3, [r4, #76]
 232              	.L43:
 233 0094 0400A0E1 		mov	r0, r4
 234 0098 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 235              	.L48:
 236 009c 000000E3 		movw	r0, #:lower16:.LC0
 237 00a0 BF1200E3 		movw	r1, #703
 238 00a4 000040E3 		movt	r0, #:upper16:.LC0
 239 00a8 FEFFFFEB 		bl	R_OS_AssertCalled
 240 00ac 000055E3 		cmp	r5, #0
 241 00b0 0300000A 		beq	.L41
 242 00b4 000000E3 		movw	r0, #:lower16:.LC0
 243 00b8 0B1DA0E3 		mov	r1, #704
 244 00bc 000040E3 		movt	r0, #:upper16:.LC0
 245 00c0 FEFFFFEB 		bl	R_OS_AssertCalled
 246              	.L41:
 247 00c4 000000E3 		movw	r0, #:lower16:.LC0
 248 00c8 5B1FA0E3 		mov	r1, #364
 249 00cc 000040E3 		movt	r0, #:upper16:.LC0
 250 00d0 FEFFFFEB 		bl	R_OS_AssertCalled
 251 00d4 CFFFFFEA 		b	.L37
 252              	.L49:
 253 00d8 000000E3 		movw	r0, #:lower16:.LC0
 254 00dc 0B1DA0E3 		mov	r1, #704
 255 00e0 000040E3 		movt	r0, #:upper16:.LC0
 256 00e4 FEFFFFEB 		bl	R_OS_AssertCalled
 257 00e8 CAFFFFEA 		b	.L37
 259              		.section	.text.xQueueGenericSend,"ax",%progbits
 260              		.align	2
 261              		.global	xQueueGenericSend
 262              		.syntax unified
 263              		.arm
 264              		.fpu neon
 266              	xQueueGenericSend:
 267              		@ args = 0, pretend = 0, frame = 16
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 270 0004 005050E2 		subs	r5, r0, #0
 271 0008 14D04DE2 		sub	sp, sp, #20
 272 000c 01A0A0E1 		mov	r10, r1
 273 0010 0390A0E1 		mov	r9, r3
 274 0014 04208DE5 		str	r2, [sp, #4]
 275 0018 3101000A 		beq	.L171
 276              	.L51:
 277 001c 00005AE3 		cmp	r10, #0
 278 0020 2701000A 		beq	.L172
 279              	.L52:
 280 0024 020059E3 		cmp	r9, #2
 281 0028 CE00000A 		beq	.L173
 282              	.L54:
 283 002c FEFFFFEB 		bl	xTaskGetSchedulerState
 284 0030 000050E3 		cmp	r0, #0
 285 0034 0200001A 		bne	.L56
 286 0038 04309DE5 		ldr	r3, [sp, #4]
 287 003c 000053E3 		cmp	r3, #0
 288 0040 C300001A 		bne	.L174
 289              	.L56:
 290 0044 027049E2 		sub	r7, r9, #2
 291 0048 0060A0E3 		mov	r6, #0
 292 004c 177F6FE1 		clz	r7, r7
 293 0050 0680A0E1 		mov	r8, r6
 294 0054 A772A0E1 		lsr	r7, r7, #5
 295              	.L110:
 296 0058 FEFFFFEB 		bl	vPortEnterCritical
 297 005c 383095E5 		ldr	r3, [r5, #56]
 298 0060 3C2095E5 		ldr	r2, [r5, #60]
 299 0064 020053E1 		cmp	r3, r2
 300 0068 0730A021 		movcs	r3, r7
 301 006c 01308733 		orrcc	r3, r7, #1
 302 0070 000053E3 		cmp	r3, #0
 303 0074 9100001A 		bne	.L175
 304 0078 04409DE5 		ldr	r4, [sp, #4]
 305 007c 000054E3 		cmp	r4, #0
 306 0080 FA00000A 		beq	.L176
 307 0084 000056E3 		cmp	r6, #0
 308 0088 8900000A 		beq	.L177
 309              	.L73:
 310 008c FEFFFFEB 		bl	vPortExitCritical
 311 0090 FEFFFFEB 		bl	vTaskSuspendAll
 312 0094 FEFFFFEB 		bl	vPortEnterCritical
 313 0098 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 314 009c FF0053E3 		cmp	r3, #255
 315 00a0 4480C505 		strbeq	r8, [r5, #68]
 316 00a4 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 317 00a8 FF0053E3 		cmp	r3, #255
 318 00ac 4580C505 		strbeq	r8, [r5, #69]
 319 00b0 FEFFFFEB 		bl	vPortExitCritical
 320 00b4 04108DE2 		add	r1, sp, #4
 321 00b8 08008DE2 		add	r0, sp, #8
 322 00bc FEFFFFEB 		bl	xTaskCheckForTimeOut
 323 00c0 000050E3 		cmp	r0, #0
 324 00c4 AF00001A 		bne	.L76
 325 00c8 FEFFFFEB 		bl	vPortEnterCritical
 326 00cc 382095E5 		ldr	r2, [r5, #56]
 327 00d0 3C3095E5 		ldr	r3, [r5, #60]
 328 00d4 030052E1 		cmp	r2, r3
 329 00d8 3900000A 		beq	.L178
 330 00dc FEFFFFEB 		bl	vPortExitCritical
 331 00e0 FEFFFFEB 		bl	vPortEnterCritical
 332 00e4 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 333 00e8 7340AFE6 		sxtb	r4, r3
 334 00ec 000054E3 		cmp	r4, #0
 335 00f0 120000DA 		ble	.L96
 336 00f4 243095E5 		ldr	r3, [r5, #36]
 337 00f8 000053E3 		cmp	r3, #0
 338 00fc 0F00000A 		beq	.L96
 339 0100 246085E2 		add	r6, r5, #36
 340 0104 070000EA 		b	.L91
 341              	.L94:
 342 0108 013044E2 		sub	r3, r4, #1
 343 010c 7330EFE6 		uxtb	r3, r3
 344 0110 000053E3 		cmp	r3, #0
 345 0114 7340AFE6 		sxtb	r4, r3
 346 0118 0800000A 		beq	.L96
 347 011c 243095E5 		ldr	r3, [r5, #36]
 348 0120 000053E3 		cmp	r3, #0
 349 0124 0500000A 		beq	.L96
 350              	.L91:
 351 0128 0600A0E1 		mov	r0, r6
 352 012c FEFFFFEB 		bl	xTaskRemoveFromEventList
 353 0130 000050E3 		cmp	r0, #0
 354 0134 F3FFFF0A 		beq	.L94
 355 0138 FEFFFFEB 		bl	vTaskMissedYield
 356 013c F1FFFFEA 		b	.L94
 357              	.L96:
 358 0140 0030E0E3 		mvn	r3, #0
 359 0144 4530C5E5 		strb	r3, [r5, #69]
 360 0148 FEFFFFEB 		bl	vPortExitCritical
 361 014c FEFFFFEB 		bl	vPortEnterCritical
 362 0150 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 363 0154 7340AFE6 		sxtb	r4, r3
 364 0158 000054E3 		cmp	r4, #0
 365 015c 120000DA 		ble	.L93
 366 0160 103095E5 		ldr	r3, [r5, #16]
 367 0164 000053E3 		cmp	r3, #0
 368 0168 0F00000A 		beq	.L93
 369 016c 106085E2 		add	r6, r5, #16
 370 0170 070000EA 		b	.L97
 371              	.L98:
 372 0174 013044E2 		sub	r3, r4, #1
 373 0178 7330EFE6 		uxtb	r3, r3
 374 017c 000053E3 		cmp	r3, #0
 375 0180 7340AFE6 		sxtb	r4, r3
 376 0184 0800000A 		beq	.L93
 377 0188 103095E5 		ldr	r3, [r5, #16]
 378 018c 000053E3 		cmp	r3, #0
 379 0190 0500000A 		beq	.L93
 380              	.L97:
 381 0194 0600A0E1 		mov	r0, r6
 382 0198 FEFFFFEB 		bl	xTaskRemoveFromEventList
 383 019c 000050E3 		cmp	r0, #0
 384 01a0 F3FFFF0A 		beq	.L98
 385 01a4 FEFFFFEB 		bl	vTaskMissedYield
 386 01a8 F1FFFFEA 		b	.L98
 387              	.L93:
 388 01ac 0030E0E3 		mvn	r3, #0
 389 01b0 4430C5E5 		strb	r3, [r5, #68]
 390 01b4 FEFFFFEB 		bl	vPortExitCritical
 391 01b8 FEFFFFEB 		bl	xTaskResumeAll
 392              	.L86:
 393 01bc 0160A0E3 		mov	r6, #1
 394 01c0 A4FFFFEA 		b	.L110
 395              	.L178:
 396 01c4 106085E2 		add	r6, r5, #16
 397 01c8 FEFFFFEB 		bl	vPortExitCritical
 398 01cc 0600A0E1 		mov	r0, r6
 399 01d0 04109DE5 		ldr	r1, [sp, #4]
 400 01d4 FEFFFFEB 		bl	vTaskPlaceOnEventList
 401 01d8 FEFFFFEB 		bl	vPortEnterCritical
 402 01dc 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 403 01e0 73B0AFE6 		sxtb	fp, r3
 404 01e4 00005BE3 		cmp	fp, #0
 405 01e8 120000DA 		ble	.L84
 406 01ec 243095E5 		ldr	r3, [r5, #36]
 407 01f0 000053E3 		cmp	r3, #0
 408 01f4 0F00000A 		beq	.L84
 409 01f8 244085E2 		add	r4, r5, #36
 410 01fc 070000EA 		b	.L79
 411              	.L82:
 412 0200 01304BE2 		sub	r3, fp, #1
 413 0204 7330EFE6 		uxtb	r3, r3
 414 0208 000053E3 		cmp	r3, #0
 415 020c 73B0AFE6 		sxtb	fp, r3
 416 0210 0800000A 		beq	.L84
 417 0214 243095E5 		ldr	r3, [r5, #36]
 418 0218 000053E3 		cmp	r3, #0
 419 021c 0500000A 		beq	.L84
 420              	.L79:
 421 0220 0400A0E1 		mov	r0, r4
 422 0224 FEFFFFEB 		bl	xTaskRemoveFromEventList
 423 0228 000050E3 		cmp	r0, #0
 424 022c F3FFFF0A 		beq	.L82
 425 0230 FEFFFFEB 		bl	vTaskMissedYield
 426 0234 F1FFFFEA 		b	.L82
 427              	.L84:
 428 0238 0030E0E3 		mvn	r3, #0
 429 023c 4530C5E5 		strb	r3, [r5, #69]
 430 0240 FEFFFFEB 		bl	vPortExitCritical
 431 0244 FEFFFFEB 		bl	vPortEnterCritical
 432 0248 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 433 024c 7340AFE6 		sxtb	r4, r3
 434 0250 000054E3 		cmp	r4, #0
 435 0254 050000CA 		bgt	.L90
 436 0258 0D0000EA 		b	.L81
 437              	.L89:
 438 025c 013044E2 		sub	r3, r4, #1
 439 0260 7330EFE6 		uxtb	r3, r3
 440 0264 000053E3 		cmp	r3, #0
 441 0268 7340AFE6 		sxtb	r4, r3
 442 026c 0800000A 		beq	.L81
 443              	.L90:
 444 0270 103095E5 		ldr	r3, [r5, #16]
 445 0274 000053E3 		cmp	r3, #0
 446 0278 0500000A 		beq	.L81
 447 027c 0600A0E1 		mov	r0, r6
 448 0280 FEFFFFEB 		bl	xTaskRemoveFromEventList
 449 0284 000050E3 		cmp	r0, #0
 450 0288 F3FFFF0A 		beq	.L89
 451 028c FEFFFFEB 		bl	vTaskMissedYield
 452 0290 F1FFFFEA 		b	.L89
 453              	.L81:
 454 0294 0030E0E3 		mvn	r3, #0
 455 0298 4430C5E5 		strb	r3, [r5, #68]
 456 029c FEFFFFEB 		bl	vPortExitCritical
 457 02a0 FEFFFFEB 		bl	xTaskResumeAll
 458 02a4 000050E3 		cmp	r0, #0
 459 02a8 C3FFFF1A 		bne	.L86
 460              		.syntax divided
 461              	@ 900 "../src/FreeRTOS/queue.c" 1
 462 02ac 000000EF 		SWI 0
 463              	@ 0 "" 2
 464              		.arm
 465              		.syntax unified
 466 02b0 C1FFFFEA 		b	.L86
 467              	.L177:
 468 02b4 08008DE2 		add	r0, sp, #8
 469 02b8 FEFFFFEB 		bl	vTaskInternalSetTimeOutState
 470 02bc 72FFFFEA 		b	.L73
 471              	.L175:
 472 02c0 402095E5 		ldr	r2, [r5, #64]
 473 02c4 384095E5 		ldr	r4, [r5, #56]
 474 02c8 000052E3 		cmp	r2, #0
 475 02cc 1000001A 		bne	.L59
 476 02d0 006095E5 		ldr	r6, [r5]
 477 02d4 000056E3 		cmp	r6, #0
 478 02d8 8600000A 		beq	.L179
 479              	.L60:
 480 02dc 014084E2 		add	r4, r4, #1
 481              	.L65:
 482 02e0 384085E5 		str	r4, [r5, #56]
 483 02e4 243095E5 		ldr	r3, [r5, #36]
 484 02e8 000053E3 		cmp	r3, #0
 485 02ec 0400000A 		beq	.L69
 486              	.L61:
 487 02f0 240085E2 		add	r0, r5, #36
 488 02f4 FEFFFFEB 		bl	xTaskRemoveFromEventList
 489 02f8 000050E3 		cmp	r0, #0
 490 02fc 0000000A 		beq	.L69
 491              	.L167:
 492              		.syntax divided
 493              	@ 831 "../src/FreeRTOS/queue.c" 1
 494 0300 000000EF 		SWI 0
 495              	@ 0 "" 2
 496              		.arm
 497              		.syntax unified
 498              	.L69:
 499 0304 FEFFFFEB 		bl	vPortExitCritical
 500 0308 0100A0E3 		mov	r0, #1
 501 030c 14D08DE2 		add	sp, sp, #20
 502              		@ sp needed
 503 0310 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 504              	.L59:
 505 0314 000059E3 		cmp	r9, #0
 506 0318 0A10A0E1 		mov	r1, r10
 507 031c 5700001A 		bne	.L63
 508 0320 080095E5 		ldr	r0, [r5, #8]
 509 0324 FEFFFFEB 		bl	memcpy
 510 0328 083095E5 		ldr	r3, [r5, #8]
 511 032c 401095E5 		ldr	r1, [r5, #64]
 512 0330 042095E5 		ldr	r2, [r5, #4]
 513 0334 013083E0 		add	r3, r3, r1
 514 0338 020053E1 		cmp	r3, r2
 515 033c 083085E5 		str	r3, [r5, #8]
 516 0340 E5FFFF3A 		bcc	.L60
 517 0344 003095E5 		ldr	r3, [r5]
 518 0348 014084E2 		add	r4, r4, #1
 519 034c 083085E5 		str	r3, [r5, #8]
 520 0350 E2FFFFEA 		b	.L65
 521              	.L174:
 522 0354 000000E3 		movw	r0, #:lower16:.LC0
 523 0358 2E1EA0E3 		mov	r1, #736
 524 035c 000040E3 		movt	r0, #:upper16:.LC0
 525 0360 FEFFFFEB 		bl	R_OS_AssertCalled
 526 0364 36FFFFEA 		b	.L56
 527              	.L173:
 528 0368 3C3095E5 		ldr	r3, [r5, #60]
 529 036c 010053E3 		cmp	r3, #1
 530 0370 2DFFFF0A 		beq	.L54
 531 0374 000000E3 		movw	r0, #:lower16:.LC0
 532 0378 DD1200E3 		movw	r1, #733
 533 037c 000040E3 		movt	r0, #:upper16:.LC0
 534 0380 FEFFFFEB 		bl	R_OS_AssertCalled
 535 0384 28FFFFEA 		b	.L54
 536              	.L76:
 537 0388 FEFFFFEB 		bl	vPortEnterCritical
 538 038c 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 539 0390 7340AFE6 		sxtb	r4, r3
 540 0394 000054E3 		cmp	r4, #0
 541 0398 120000DA 		ble	.L103
 542 039c 243095E5 		ldr	r3, [r5, #36]
 543 03a0 000053E3 		cmp	r3, #0
 544 03a4 0F00000A 		beq	.L103
 545 03a8 246085E2 		add	r6, r5, #36
 546 03ac 070000EA 		b	.L104
 547              	.L105:
 548 03b0 013044E2 		sub	r3, r4, #1
 549 03b4 7330EFE6 		uxtb	r3, r3
 550 03b8 000053E3 		cmp	r3, #0
 551 03bc 7340AFE6 		sxtb	r4, r3
 552 03c0 0800000A 		beq	.L103
 553 03c4 243095E5 		ldr	r3, [r5, #36]
 554 03c8 000053E3 		cmp	r3, #0
 555 03cc 0500000A 		beq	.L103
 556              	.L104:
 557 03d0 0600A0E1 		mov	r0, r6
 558 03d4 FEFFFFEB 		bl	xTaskRemoveFromEventList
 559 03d8 000050E3 		cmp	r0, #0
 560 03dc F3FFFF0A 		beq	.L105
 561 03e0 FEFFFFEB 		bl	vTaskMissedYield
 562 03e4 F1FFFFEA 		b	.L105
 563              	.L103:
 564 03e8 0030E0E3 		mvn	r3, #0
 565 03ec 4530C5E5 		strb	r3, [r5, #69]
 566 03f0 FEFFFFEB 		bl	vPortExitCritical
 567 03f4 FEFFFFEB 		bl	vPortEnterCritical
 568 03f8 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 569 03fc 7340AFE6 		sxtb	r4, r3
 570 0400 000054E3 		cmp	r4, #0
 571 0404 120000DA 		ble	.L102
 572 0408 103095E5 		ldr	r3, [r5, #16]
 573 040c 000053E3 		cmp	r3, #0
 574 0410 0F00000A 		beq	.L102
 575 0414 106085E2 		add	r6, r5, #16
 576 0418 070000EA 		b	.L107
 577              	.L108:
 578 041c 013044E2 		sub	r3, r4, #1
 579 0420 7330EFE6 		uxtb	r3, r3
 580 0424 000053E3 		cmp	r3, #0
 581 0428 7340AFE6 		sxtb	r4, r3
 582 042c 0800000A 		beq	.L102
 583 0430 103095E5 		ldr	r3, [r5, #16]
 584 0434 000053E3 		cmp	r3, #0
 585 0438 0500000A 		beq	.L102
 586              	.L107:
 587 043c 0600A0E1 		mov	r0, r6
 588 0440 FEFFFFEB 		bl	xTaskRemoveFromEventList
 589 0444 000050E3 		cmp	r0, #0
 590 0448 F3FFFF0A 		beq	.L108
 591 044c FEFFFFEB 		bl	vTaskMissedYield
 592 0450 F1FFFFEA 		b	.L108
 593              	.L102:
 594 0454 0030E0E3 		mvn	r3, #0
 595 0458 4430C5E5 		strb	r3, [r5, #68]
 596 045c FEFFFFEB 		bl	vPortExitCritical
 597 0460 FEFFFFEB 		bl	xTaskResumeAll
 598 0464 0000A0E3 		mov	r0, #0
 599 0468 14D08DE2 		add	sp, sp, #20
 600              		@ sp needed
 601 046c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 602              	.L176:
 603 0470 FEFFFFEB 		bl	vPortExitCritical
 604 0474 0400A0E1 		mov	r0, r4
 605 0478 14D08DE2 		add	sp, sp, #20
 606              		@ sp needed
 607 047c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 608              	.L63:
 609 0480 0C0095E5 		ldr	r0, [r5, #12]
 610 0484 FEFFFFEB 		bl	memcpy
 611 0488 402095E5 		ldr	r2, [r5, #64]
 612 048c 0C3095E5 		ldr	r3, [r5, #12]
 613 0490 001095E5 		ldr	r1, [r5]
 614 0494 002062E2 		rsb	r2, r2, #0
 615 0498 023083E0 		add	r3, r3, r2
 616 049c 010053E1 		cmp	r3, r1
 617 04a0 0C3085E5 		str	r3, [r5, #12]
 618 04a4 04309535 		ldrcc	r3, [r5, #4]
 619 04a8 02208330 		addcc	r2, r3, r2
 620 04ac 0C208535 		strcc	r2, [r5, #12]
 621 04b0 020059E3 		cmp	r9, #2
 622 04b4 88FFFF1A 		bne	.L60
 623 04b8 000054E3 		cmp	r4, #0
 624 04bc 0140A003 		moveq	r4, #1
 625 04c0 86FFFFEA 		b	.L65
 626              	.L172:
 627 04c4 403095E5 		ldr	r3, [r5, #64]
 628 04c8 000053E3 		cmp	r3, #0
 629 04cc D4FEFF0A 		beq	.L52
 630 04d0 000000E3 		movw	r0, #:lower16:.LC0
 631 04d4 B71FA0E3 		mov	r1, #732
 632 04d8 000040E3 		movt	r0, #:upper16:.LC0
 633 04dc FEFFFFEB 		bl	R_OS_AssertCalled
 634 04e0 CFFEFFEA 		b	.L52
 635              	.L171:
 636 04e4 000000E3 		movw	r0, #:lower16:.LC0
 637 04e8 DB1200E3 		movw	r1, #731
 638 04ec 000040E3 		movt	r0, #:upper16:.LC0
 639 04f0 FEFFFFEB 		bl	R_OS_AssertCalled
 640 04f4 C8FEFFEA 		b	.L51
 641              	.L179:
 642 04f8 040095E5 		ldr	r0, [r5, #4]
 643 04fc 014084E2 		add	r4, r4, #1
 644 0500 FEFFFFEB 		bl	xTaskPriorityDisinherit
 645 0504 384085E5 		str	r4, [r5, #56]
 646 0508 243095E5 		ldr	r3, [r5, #36]
 647 050c 046085E5 		str	r6, [r5, #4]
 648 0510 000053E3 		cmp	r3, #0
 649 0514 75FFFF1A 		bne	.L61
 650 0518 000050E3 		cmp	r0, #0
 651 051c 77FFFF1A 		bne	.L167
 652 0520 77FFFFEA 		b	.L69
 654              		.section	.text.xQueueCreateMutex,"ax",%progbits
 655              		.align	2
 656              		.global	xQueueCreateMutex
 657              		.syntax unified
 658              		.arm
 659              		.fpu neon
 661              	xQueueCreateMutex:
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664 0000 70402DE9 		push	{r4, r5, r6, lr}
 665 0004 0060A0E1 		mov	r6, r0
 666 0008 5000A0E3 		mov	r0, #80
 667 000c FEFFFFEB 		bl	pvPortMalloc
 668 0010 004050E2 		subs	r4, r0, #0
 669 0014 2100000A 		beq	.L181
 670 0018 0050A0E3 		mov	r5, #0
 671 001c 0130A0E3 		mov	r3, #1
 672 0020 3C3084E5 		str	r3, [r4, #60]
 673 0024 004084E5 		str	r4, [r4]
 674 0028 405084E5 		str	r5, [r4, #64]
 675 002c FEFFFFEB 		bl	vPortEnterCritical
 676 0030 403094E5 		ldr	r3, [r4, #64]
 677 0034 00C0E0E3 		mvn	ip, #0
 678 0038 3C2094E5 		ldr	r2, [r4, #60]
 679 003c 100084E2 		add	r0, r4, #16
 680 0040 001094E5 		ldr	r1, [r4]
 681 0044 385084E5 		str	r5, [r4, #56]
 682 0048 44C0C4E5 		strb	ip, [r4, #68]
 683 004c 920302E0 		mul	r2, r2, r3
 684 0050 081084E5 		str	r1, [r4, #8]
 685 0054 45C0C4E5 		strb	ip, [r4, #69]
 686 0058 033042E0 		sub	r3, r2, r3
 687 005c 022081E0 		add	r2, r1, r2
 688 0060 031081E0 		add	r1, r1, r3
 689 0064 042084E5 		str	r2, [r4, #4]
 690 0068 0C1084E5 		str	r1, [r4, #12]
 691 006c FEFFFFEB 		bl	vListInitialise
 692 0070 240084E2 		add	r0, r4, #36
 693 0074 FEFFFFEB 		bl	vListInitialise
 694 0078 FEFFFFEB 		bl	vPortExitCritical
 695 007c 045084E5 		str	r5, [r4, #4]
 696 0080 0530A0E1 		mov	r3, r5
 697 0084 005084E5 		str	r5, [r4]
 698 0088 0520A0E1 		mov	r2, r5
 699 008c 0C5084E5 		str	r5, [r4, #12]
 700 0090 0510A0E1 		mov	r1, r5
 701 0094 4C60C4E5 		strb	r6, [r4, #76]
 702 0098 0400A0E1 		mov	r0, r4
 703 009c FEFFFFEB 		bl	xQueueGenericSend
 704              	.L181:
 705 00a0 0400A0E1 		mov	r0, r4
 706 00a4 7080BDE8 		pop	{r4, r5, r6, pc}
 708              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 709              		.align	2
 710              		.global	xQueueGiveMutexRecursive
 711              		.syntax unified
 712              		.arm
 713              		.fpu neon
 715              	xQueueGiveMutexRecursive:
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718 0000 70402DE9 		push	{r4, r5, r6, lr}
 719 0004 004050E2 		subs	r4, r0, #0
 720 0008 1200000A 		beq	.L192
 721              	.L187:
 722 000c 045094E5 		ldr	r5, [r4, #4]
 723 0010 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 724 0014 000055E1 		cmp	r5, r0
 725 0018 0100000A 		beq	.L193
 726 001c 0000A0E3 		mov	r0, #0
 727 0020 7080BDE8 		pop	{r4, r5, r6, pc}
 728              	.L193:
 729 0024 0C3094E5 		ldr	r3, [r4, #12]
 730 0028 013043E2 		sub	r3, r3, #1
 731 002c 000053E3 		cmp	r3, #0
 732 0030 0C3084E5 		str	r3, [r4, #12]
 733 0034 0100000A 		beq	.L194
 734 0038 0100A0E3 		mov	r0, #1
 735 003c 7080BDE8 		pop	{r4, r5, r6, pc}
 736              	.L194:
 737 0040 0400A0E1 		mov	r0, r4
 738 0044 0320A0E1 		mov	r2, r3
 739 0048 0310A0E1 		mov	r1, r3
 740 004c FEFFFFEB 		bl	xQueueGenericSend
 741 0050 0100A0E3 		mov	r0, #1
 742 0054 7080BDE8 		pop	{r4, r5, r6, pc}
 743              	.L192:
 744 0058 000000E3 		movw	r0, #:lower16:.LC0
 745 005c 431200E3 		movw	r1, #579
 746 0060 000040E3 		movt	r0, #:upper16:.LC0
 747 0064 FEFFFFEB 		bl	R_OS_AssertCalled
 748 0068 E7FFFFEA 		b	.L187
 750              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 751              		.align	2
 752              		.global	xQueueGenericSendFromISR
 753              		.syntax unified
 754              		.arm
 755              		.fpu neon
 757              	xQueueGenericSendFromISR:
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 760 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 761 0004 004050E2 		subs	r4, r0, #0
 762 0008 0170A0E1 		mov	r7, r1
 763 000c 0290A0E1 		mov	r9, r2
 764 0010 0360A0E1 		mov	r6, r3
 765 0014 6900000A 		beq	.L228
 766              	.L196:
 767 0018 000057E3 		cmp	r7, #0
 768 001c 4C00000A 		beq	.L229
 769              	.L197:
 770 0020 020056E3 		cmp	r6, #2
 771 0024 0B00000A 		beq	.L230
 772 0028 FEFFFFEB 		bl	vPortValidateInterruptPriority
 773 002c FEFFFFEB 		bl	ulPortSetInterruptMask
 774 0030 382094E5 		ldr	r2, [r4, #56]
 775 0034 0080A0E1 		mov	r8, r0
 776 0038 3C3094E5 		ldr	r3, [r4, #60]
 777 003c 030052E1 		cmp	r2, r3
 778 0040 0060A023 		movcs	r6, #0
 779 0044 2100003A 		bcc	.L231
 780              	.L202:
 781 0048 0800A0E1 		mov	r0, r8
 782 004c FEFFFFEB 		bl	vPortClearInterruptMask
 783 0050 0600A0E1 		mov	r0, r6
 784 0054 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 785              	.L230:
 786 0058 3C3094E5 		ldr	r3, [r4, #60]
 787 005c 010053E3 		cmp	r3, #1
 788 0060 0300000A 		beq	.L200
 789 0064 000000E3 		movw	r0, #:lower16:.LC0
 790 0068 A31300E3 		movw	r1, #931
 791 006c 000040E3 		movt	r0, #:upper16:.LC0
 792 0070 FEFFFFEB 		bl	R_OS_AssertCalled
 793              	.L200:
 794 0074 FEFFFFEB 		bl	vPortValidateInterruptPriority
 795 0078 FEFFFFEB 		bl	ulPortSetInterruptMask
 796 007c 402094E5 		ldr	r2, [r4, #64]
 797 0080 0080A0E1 		mov	r8, r0
 798 0084 383094E5 		ldr	r3, [r4, #56]
 799 0088 4550D4E5 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 800 008c 000052E3 		cmp	r2, #0
 801 0090 38A094E5 		ldr	r10, [r4, #56]
 802 0094 0160A013 		movne	r6, #1
 803 0098 7550AFE6 		sxtb	r5, r5
 804 009c 3500001A 		bne	.L206
 805              	.L211:
 806 00a0 006094E5 		ldr	r6, [r4]
 807 00a4 000056E3 		cmp	r6, #0
 808 00a8 4900000A 		beq	.L232
 809              	.L227:
 810 00ac 01A08AE2 		add	r10, r10, #1
 811              	.L205:
 812 00b0 010075E3 		cmn	r5, #1
 813 00b4 38A084E5 		str	r10, [r4, #56]
 814 00b8 1A00000A 		beq	.L233
 815 00bc 015085E2 		add	r5, r5, #1
 816 00c0 0160A0E3 		mov	r6, #1
 817 00c4 7550AFE6 		sxtb	r5, r5
 818 00c8 4550C4E5 		strb	r5, [r4, #69]
 819 00cc DDFFFFEA 		b	.L202
 820              	.L231:
 821 00d0 402094E5 		ldr	r2, [r4, #64]
 822 00d4 4550D4E5 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 823 00d8 38A094E5 		ldr	r10, [r4, #56]
 824 00dc 000052E3 		cmp	r2, #0
 825 00e0 7550AFE6 		sxtb	r5, r5
 826 00e4 EDFFFF0A 		beq	.L211
 827 00e8 000056E3 		cmp	r6, #0
 828 00ec 2000001A 		bne	.L213
 829 00f0 0710A0E1 		mov	r1, r7
 830 00f4 080094E5 		ldr	r0, [r4, #8]
 831 00f8 FEFFFFEB 		bl	memcpy
 832 00fc 083094E5 		ldr	r3, [r4, #8]
 833 0100 401094E5 		ldr	r1, [r4, #64]
 834 0104 042094E5 		ldr	r2, [r4, #4]
 835 0108 013083E0 		add	r3, r3, r1
 836 010c 020053E1 		cmp	r3, r2
 837 0110 083084E5 		str	r3, [r4, #8]
 838 0114 E4FFFF3A 		bcc	.L227
 839 0118 003094E5 		ldr	r3, [r4]
 840 011c 01A08AE2 		add	r10, r10, #1
 841 0120 083084E5 		str	r3, [r4, #8]
 842 0124 E1FFFFEA 		b	.L205
 843              	.L233:
 844 0128 243094E5 		ldr	r3, [r4, #36]
 845 012c 000053E3 		cmp	r3, #0
 846 0130 0160A003 		moveq	r6, #1
 847 0134 C3FFFF0A 		beq	.L202
 848 0138 240084E2 		add	r0, r4, #36
 849 013c 0160A0E3 		mov	r6, #1
 850 0140 FEFFFFEB 		bl	xTaskRemoveFromEventList
 851 0144 000050E3 		cmp	r0, #0
 852 0148 00005913 		cmpne	r9, #0
 853 014c 00608915 		strne	r6, [r9]
 854 0150 BCFFFFEA 		b	.L202
 855              	.L229:
 856 0154 403094E5 		ldr	r3, [r4, #64]
 857 0158 000053E3 		cmp	r3, #0
 858 015c AFFFFF0A 		beq	.L197
 859 0160 000000E3 		movw	r0, #:lower16:.LC0
 860 0164 A21300E3 		movw	r1, #930
 861 0168 000040E3 		movt	r0, #:upper16:.LC0
 862 016c FEFFFFEB 		bl	R_OS_AssertCalled
 863 0170 AAFFFFEA 		b	.L197
 864              	.L213:
 865 0174 0060A0E3 		mov	r6, #0
 866              	.L206:
 867 0178 0710A0E1 		mov	r1, r7
 868 017c 0C0094E5 		ldr	r0, [r4, #12]
 869 0180 FEFFFFEB 		bl	memcpy
 870 0184 402094E5 		ldr	r2, [r4, #64]
 871 0188 0C3094E5 		ldr	r3, [r4, #12]
 872 018c 001094E5 		ldr	r1, [r4]
 873 0190 002062E2 		rsb	r2, r2, #0
 874 0194 023083E0 		add	r3, r3, r2
 875 0198 010053E1 		cmp	r3, r1
 876 019c 0C3084E5 		str	r3, [r4, #12]
 877 01a0 04309435 		ldrcc	r3, [r4, #4]
 878 01a4 02208330 		addcc	r2, r3, r2
 879 01a8 0C208435 		strcc	r2, [r4, #12]
 880 01ac 000056E3 		cmp	r6, #0
 881 01b0 BDFFFF0A 		beq	.L227
 882 01b4 00005AE3 		cmp	r10, #0
 883 01b8 01A0A003 		moveq	r10, #1
 884 01bc BBFFFFEA 		b	.L205
 885              	.L228:
 886 01c0 000000E3 		movw	r0, #:lower16:.LC0
 887 01c4 A11300E3 		movw	r1, #929
 888 01c8 000040E3 		movt	r0, #:upper16:.LC0
 889 01cc FEFFFFEB 		bl	R_OS_AssertCalled
 890 01d0 90FFFFEA 		b	.L196
 891              	.L232:
 892 01d4 040094E5 		ldr	r0, [r4, #4]
 893 01d8 01A08AE2 		add	r10, r10, #1
 894 01dc FEFFFFEB 		bl	xTaskPriorityDisinherit
 895 01e0 046084E5 		str	r6, [r4, #4]
 896 01e4 B1FFFFEA 		b	.L205
 898              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 899              		.align	2
 900              		.global	xQueueGiveFromISR
 901              		.syntax unified
 902              		.arm
 903              		.fpu neon
 905              	xQueueGiveFromISR:
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 909 0004 004050E2 		subs	r4, r0, #0
 910 0008 0170A0E1 		mov	r7, r1
 911 000c 3400000A 		beq	.L252
 912              	.L235:
 913 0010 403094E5 		ldr	r3, [r4, #64]
 914 0014 000053E3 		cmp	r3, #0
 915 0018 1800001A 		bne	.L253
 916 001c 003094E5 		ldr	r3, [r4]
 917 0020 000053E3 		cmp	r3, #0
 918 0024 1C00000A 		beq	.L254
 919              	.L237:
 920 0028 FEFFFFEB 		bl	vPortValidateInterruptPriority
 921 002c FEFFFFEB 		bl	ulPortSetInterruptMask
 922 0030 382094E5 		ldr	r2, [r4, #56]
 923 0034 0060A0E1 		mov	r6, r0
 924 0038 3C3094E5 		ldr	r3, [r4, #60]
 925 003c 030052E1 		cmp	r2, r3
 926 0040 0050A023 		movcs	r5, #0
 927 0044 0900002A 		bcs	.L239
 928 0048 4530D4E5 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 929 004c 012082E2 		add	r2, r2, #1
 930 0050 382084E5 		str	r2, [r4, #56]
 931 0054 7330AFE6 		sxtb	r3, r3
 932 0058 010073E3 		cmn	r3, #1
 933 005c 1600000A 		beq	.L255
 934 0060 013083E2 		add	r3, r3, #1
 935 0064 0150A0E3 		mov	r5, #1
 936 0068 7330AFE6 		sxtb	r3, r3
 937 006c 4530C4E5 		strb	r3, [r4, #69]
 938              	.L239:
 939 0070 0600A0E1 		mov	r0, r6
 940 0074 FEFFFFEB 		bl	vPortClearInterruptMask
 941 0078 0500A0E1 		mov	r0, r5
 942 007c F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 943              	.L253:
 944 0080 000000E3 		movw	r0, #:lower16:.LC0
 945 0084 421400E3 		movw	r1, #1090
 946 0088 000040E3 		movt	r0, #:upper16:.LC0
 947 008c FEFFFFEB 		bl	R_OS_AssertCalled
 948 0090 003094E5 		ldr	r3, [r4]
 949 0094 000053E3 		cmp	r3, #0
 950 0098 E2FFFF1A 		bne	.L237
 951              	.L254:
 952 009c 043094E5 		ldr	r3, [r4, #4]
 953 00a0 000053E3 		cmp	r3, #0
 954 00a4 DFFFFF0A 		beq	.L237
 955 00a8 000000E3 		movw	r0, #:lower16:.LC0
 956 00ac 471400E3 		movw	r1, #1095
 957 00b0 000040E3 		movt	r0, #:upper16:.LC0
 958 00b4 FEFFFFEB 		bl	R_OS_AssertCalled
 959 00b8 DAFFFFEA 		b	.L237
 960              	.L255:
 961 00bc 243094E5 		ldr	r3, [r4, #36]
 962 00c0 0150A0E3 		mov	r5, #1
 963 00c4 000053E3 		cmp	r3, #0
 964 00c8 E8FFFF0A 		beq	.L239
 965 00cc 240084E2 		add	r0, r4, #36
 966 00d0 FEFFFFEB 		bl	xTaskRemoveFromEventList
 967 00d4 000050E3 		cmp	r0, #0
 968 00d8 00005713 		cmpne	r7, #0
 969 00dc 00508715 		strne	r5, [r7]
 970 00e0 E2FFFFEA 		b	.L239
 971              	.L252:
 972 00e4 000000E3 		movw	r0, #:lower16:.LC0
 973 00e8 3E1400E3 		movw	r1, #1086
 974 00ec 000040E3 		movt	r0, #:upper16:.LC0
 975 00f0 FEFFFFEB 		bl	R_OS_AssertCalled
 976 00f4 C5FFFFEA 		b	.L235
 978              		.section	.text.xQueueReceive,"ax",%progbits
 979              		.align	2
 980              		.global	xQueueReceive
 981              		.syntax unified
 982              		.arm
 983              		.fpu neon
 985              	xQueueReceive:
 986              		@ args = 0, pretend = 0, frame = 16
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 989 0004 005050E2 		subs	r5, r0, #0
 990 0008 10D04DE2 		sub	sp, sp, #16
 991 000c 0170A0E1 		mov	r7, r1
 992 0010 04208DE5 		str	r2, [sp, #4]
 993 0014 0A01000A 		beq	.L377
 994              	.L257:
 995 0018 000057E3 		cmp	r7, #0
 996 001c 0001000A 		beq	.L378
 997              	.L258:
 998 0020 FEFFFFEB 		bl	xTaskGetSchedulerState
 999 0024 000050E3 		cmp	r0, #0
 1000 0028 0200001A 		bne	.L260
 1001 002c 04309DE5 		ldr	r3, [sp, #4]
 1002 0030 000053E3 		cmp	r3, #0
 1003 0034 EF00001A 		bne	.L379
 1004              	.L260:
 1005 0038 FEFFFFEB 		bl	vPortEnterCritical
 1006 003c 384095E5 		ldr	r4, [r5, #56]
 1007 0040 0080A0E3 		mov	r8, #0
 1008 0044 0860A0E1 		mov	r6, r8
 1009 0048 000054E3 		cmp	r4, #0
 1010 004c 7100001A 		bne	.L380
 1011              	.L262:
 1012 0050 04309DE5 		ldr	r3, [sp, #4]
 1013 0054 000053E3 		cmp	r3, #0
 1014 0058 E200000A 		beq	.L303
 1015 005c 000058E3 		cmp	r8, #0
 1016 0060 8100000A 		beq	.L381
 1017              	.L270:
 1018 0064 FEFFFFEB 		bl	vPortExitCritical
 1019 0068 FEFFFFEB 		bl	vTaskSuspendAll
 1020 006c FEFFFFEB 		bl	vPortEnterCritical
 1021 0070 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1022 0074 FF0053E3 		cmp	r3, #255
 1023 0078 4460C505 		strbeq	r6, [r5, #68]
 1024 007c 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1025 0080 FF0053E3 		cmp	r3, #255
 1026 0084 4560C505 		strbeq	r6, [r5, #69]
 1027 0088 FEFFFFEB 		bl	vPortExitCritical
 1028 008c 04108DE2 		add	r1, sp, #4
 1029 0090 08008DE2 		add	r0, sp, #8
 1030 0094 FEFFFFEB 		bl	xTaskCheckForTimeOut
 1031 0098 000050E3 		cmp	r0, #0
 1032 009c 1C00001A 		bne	.L273
 1033 00a0 FEFFFFEB 		bl	vPortEnterCritical
 1034 00a4 383095E5 		ldr	r3, [r5, #56]
 1035 00a8 000053E3 		cmp	r3, #0
 1036 00ac 9400001A 		bne	.L382
 1037 00b0 248085E2 		add	r8, r5, #36
 1038 00b4 FEFFFFEB 		bl	vPortExitCritical
 1039 00b8 0800A0E1 		mov	r0, r8
 1040 00bc 04109DE5 		ldr	r1, [sp, #4]
 1041 00c0 FEFFFFEB 		bl	vTaskPlaceOnEventList
 1042 00c4 FEFFFFEB 		bl	vPortEnterCritical
 1043 00c8 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1044 00cc 7340AFE6 		sxtb	r4, r3
 1045 00d0 000054E3 		cmp	r4, #0
 1046 00d4 050000CA 		bgt	.L280
 1047 00d8 660000EA 		b	.L281
 1048              	.L279:
 1049 00dc 013044E2 		sub	r3, r4, #1
 1050 00e0 7330EFE6 		uxtb	r3, r3
 1051 00e4 000053E3 		cmp	r3, #0
 1052 00e8 7340AFE6 		sxtb	r4, r3
 1053 00ec 6100000A 		beq	.L281
 1054              	.L280:
 1055 00f0 243095E5 		ldr	r3, [r5, #36]
 1056 00f4 000053E3 		cmp	r3, #0
 1057 00f8 5E00000A 		beq	.L281
 1058 00fc 0800A0E1 		mov	r0, r8
 1059 0100 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1060 0104 000050E3 		cmp	r0, #0
 1061 0108 F3FFFF0A 		beq	.L279
 1062 010c FEFFFFEB 		bl	vTaskMissedYield
 1063 0110 F1FFFFEA 		b	.L279
 1064              	.L273:
 1065 0114 FEFFFFEB 		bl	vPortEnterCritical
 1066 0118 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1067 011c 7340AFE6 		sxtb	r4, r3
 1068 0120 000054E3 		cmp	r4, #0
 1069 0124 120000DA 		ble	.L299
 1070 0128 243095E5 		ldr	r3, [r5, #36]
 1071 012c 000053E3 		cmp	r3, #0
 1072 0130 0F00000A 		beq	.L299
 1073 0134 248085E2 		add	r8, r5, #36
 1074 0138 070000EA 		b	.L300
 1075              	.L301:
 1076 013c 013044E2 		sub	r3, r4, #1
 1077 0140 7330EFE6 		uxtb	r3, r3
 1078 0144 000053E3 		cmp	r3, #0
 1079 0148 7340AFE6 		sxtb	r4, r3
 1080 014c 0800000A 		beq	.L299
 1081 0150 243095E5 		ldr	r3, [r5, #36]
 1082 0154 000053E3 		cmp	r3, #0
 1083 0158 0500000A 		beq	.L299
 1084              	.L300:
 1085 015c 0800A0E1 		mov	r0, r8
 1086 0160 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1087 0164 000050E3 		cmp	r0, #0
 1088 0168 F3FFFF0A 		beq	.L301
 1089 016c FEFFFFEB 		bl	vTaskMissedYield
 1090 0170 F1FFFFEA 		b	.L301
 1091              	.L299:
 1092 0174 0030E0E3 		mvn	r3, #0
 1093 0178 4530C5E5 		strb	r3, [r5, #69]
 1094 017c FEFFFFEB 		bl	vPortExitCritical
 1095 0180 FEFFFFEB 		bl	vPortEnterCritical
 1096 0184 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1097 0188 7340AFE6 		sxtb	r4, r3
 1098 018c 000054E3 		cmp	r4, #0
 1099 0190 120000DA 		ble	.L298
 1100 0194 103095E5 		ldr	r3, [r5, #16]
 1101 0198 000053E3 		cmp	r3, #0
 1102 019c 0F00000A 		beq	.L298
 1103 01a0 108085E2 		add	r8, r5, #16
 1104 01a4 070000EA 		b	.L305
 1105              	.L306:
 1106 01a8 013044E2 		sub	r3, r4, #1
 1107 01ac 7330EFE6 		uxtb	r3, r3
 1108 01b0 000053E3 		cmp	r3, #0
 1109 01b4 7340AFE6 		sxtb	r4, r3
 1110 01b8 0800000A 		beq	.L298
 1111 01bc 103095E5 		ldr	r3, [r5, #16]
 1112 01c0 000053E3 		cmp	r3, #0
 1113 01c4 0500000A 		beq	.L298
 1114              	.L305:
 1115 01c8 0800A0E1 		mov	r0, r8
 1116 01cc FEFFFFEB 		bl	xTaskRemoveFromEventList
 1117 01d0 000050E3 		cmp	r0, #0
 1118 01d4 F3FFFF0A 		beq	.L306
 1119 01d8 FEFFFFEB 		bl	vTaskMissedYield
 1120 01dc F1FFFFEA 		b	.L306
 1121              	.L298:
 1122 01e0 0030E0E3 		mvn	r3, #0
 1123 01e4 4430C5E5 		strb	r3, [r5, #68]
 1124 01e8 FEFFFFEB 		bl	vPortExitCritical
 1125 01ec FEFFFFEB 		bl	xTaskResumeAll
 1126 01f0 FEFFFFEB 		bl	vPortEnterCritical
 1127 01f4 383095E5 		ldr	r3, [r5, #56]
 1128 01f8 000053E3 		cmp	r3, #0
 1129 01fc 7900000A 		beq	.L303
 1130 0200 FEFFFFEB 		bl	vPortExitCritical
 1131              	.L283:
 1132 0204 FEFFFFEB 		bl	vPortEnterCritical
 1133 0208 384095E5 		ldr	r4, [r5, #56]
 1134 020c 0180A0E3 		mov	r8, #1
 1135 0210 000054E3 		cmp	r4, #0
 1136 0214 8DFFFF0A 		beq	.L262
 1137              	.L380:
 1138 0218 402095E5 		ldr	r2, [r5, #64]
 1139 021c 000052E3 		cmp	r2, #0
 1140 0220 0800000A 		beq	.L263
 1141 0224 0C1095E5 		ldr	r1, [r5, #12]
 1142 0228 0700A0E1 		mov	r0, r7
 1143 022c 043095E5 		ldr	r3, [r5, #4]
 1144 0230 021081E0 		add	r1, r1, r2
 1145 0234 030051E1 		cmp	r1, r3
 1146 0238 0C1085E5 		str	r1, [r5, #12]
 1147 023c 00109525 		ldrcs	r1, [r5]
 1148 0240 0C108525 		strcs	r1, [r5, #12]
 1149 0244 FEFFFFEB 		bl	memcpy
 1150              	.L263:
 1151 0248 014044E2 		sub	r4, r4, #1
 1152 024c 384085E5 		str	r4, [r5, #56]
 1153 0250 103095E5 		ldr	r3, [r5, #16]
 1154 0254 000053E3 		cmp	r3, #0
 1155 0258 6B00001A 		bne	.L383
 1156              	.L266:
 1157 025c FEFFFFEB 		bl	vPortExitCritical
 1158 0260 0100A0E3 		mov	r0, #1
 1159 0264 10D08DE2 		add	sp, sp, #16
 1160              		@ sp needed
 1161 0268 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1162              	.L381:
 1163 026c 08008DE2 		add	r0, sp, #8
 1164 0270 FEFFFFEB 		bl	vTaskInternalSetTimeOutState
 1165 0274 7AFFFFEA 		b	.L270
 1166              	.L281:
 1167 0278 0030E0E3 		mvn	r3, #0
 1168 027c 4530C5E5 		strb	r3, [r5, #69]
 1169 0280 FEFFFFEB 		bl	vPortExitCritical
 1170 0284 FEFFFFEB 		bl	vPortEnterCritical
 1171 0288 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1172 028c 7340AFE6 		sxtb	r4, r3
 1173 0290 000054E3 		cmp	r4, #0
 1174 0294 120000DA 		ble	.L278
 1175 0298 103095E5 		ldr	r3, [r5, #16]
 1176 029c 000053E3 		cmp	r3, #0
 1177 02a0 0F00000A 		beq	.L278
 1178 02a4 108085E2 		add	r8, r5, #16
 1179 02a8 070000EA 		b	.L284
 1180              	.L285:
 1181 02ac 013044E2 		sub	r3, r4, #1
 1182 02b0 7330EFE6 		uxtb	r3, r3
 1183 02b4 000053E3 		cmp	r3, #0
 1184 02b8 7340AFE6 		sxtb	r4, r3
 1185 02bc 0800000A 		beq	.L278
 1186 02c0 103095E5 		ldr	r3, [r5, #16]
 1187 02c4 000053E3 		cmp	r3, #0
 1188 02c8 0500000A 		beq	.L278
 1189              	.L284:
 1190 02cc 0800A0E1 		mov	r0, r8
 1191 02d0 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1192 02d4 000050E3 		cmp	r0, #0
 1193 02d8 F3FFFF0A 		beq	.L285
 1194 02dc FEFFFFEB 		bl	vTaskMissedYield
 1195 02e0 F1FFFFEA 		b	.L285
 1196              	.L278:
 1197 02e4 0030E0E3 		mvn	r3, #0
 1198 02e8 4430C5E5 		strb	r3, [r5, #68]
 1199 02ec FEFFFFEB 		bl	vPortExitCritical
 1200 02f0 FEFFFFEB 		bl	xTaskResumeAll
 1201 02f4 000050E3 		cmp	r0, #0
 1202 02f8 C1FFFF1A 		bne	.L283
 1203              		.syntax divided
 1204              	@ 1345 "../src/FreeRTOS/queue.c" 1
 1205 02fc 000000EF 		SWI 0
 1206              	@ 0 "" 2
 1207              		.arm
 1208              		.syntax unified
 1209 0300 BFFFFFEA 		b	.L283
 1210              	.L382:
 1211 0304 FEFFFFEB 		bl	vPortExitCritical
 1212 0308 FEFFFFEB 		bl	vPortEnterCritical
 1213 030c 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1214 0310 7340AFE6 		sxtb	r4, r3
 1215 0314 000054E3 		cmp	r4, #0
 1216 0318 120000DA 		ble	.L292
 1217 031c 243095E5 		ldr	r3, [r5, #36]
 1218 0320 000053E3 		cmp	r3, #0
 1219 0324 0F00000A 		beq	.L292
 1220 0328 248085E2 		add	r8, r5, #36
 1221 032c 070000EA 		b	.L287
 1222              	.L290:
 1223 0330 013044E2 		sub	r3, r4, #1
 1224 0334 7330EFE6 		uxtb	r3, r3
 1225 0338 000053E3 		cmp	r3, #0
 1226 033c 7340AFE6 		sxtb	r4, r3
 1227 0340 0800000A 		beq	.L292
 1228 0344 243095E5 		ldr	r3, [r5, #36]
 1229 0348 000053E3 		cmp	r3, #0
 1230 034c 0500000A 		beq	.L292
 1231              	.L287:
 1232 0350 0800A0E1 		mov	r0, r8
 1233 0354 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1234 0358 000050E3 		cmp	r0, #0
 1235 035c F3FFFF0A 		beq	.L290
 1236 0360 FEFFFFEB 		bl	vTaskMissedYield
 1237 0364 F1FFFFEA 		b	.L290
 1238              	.L292:
 1239 0368 0030E0E3 		mvn	r3, #0
 1240 036c 4530C5E5 		strb	r3, [r5, #69]
 1241 0370 FEFFFFEB 		bl	vPortExitCritical
 1242 0374 FEFFFFEB 		bl	vPortEnterCritical
 1243 0378 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1244 037c 7340AFE6 		sxtb	r4, r3
 1245 0380 000054E3 		cmp	r4, #0
 1246 0384 120000DA 		ble	.L289
 1247 0388 103095E5 		ldr	r3, [r5, #16]
 1248 038c 000053E3 		cmp	r3, #0
 1249 0390 0F00000A 		beq	.L289
 1250 0394 108085E2 		add	r8, r5, #16
 1251 0398 070000EA 		b	.L293
 1252              	.L294:
 1253 039c 013044E2 		sub	r3, r4, #1
 1254 03a0 7330EFE6 		uxtb	r3, r3
 1255 03a4 000053E3 		cmp	r3, #0
 1256 03a8 7340AFE6 		sxtb	r4, r3
 1257 03ac 0800000A 		beq	.L289
 1258 03b0 103095E5 		ldr	r3, [r5, #16]
 1259 03b4 000053E3 		cmp	r3, #0
 1260 03b8 0500000A 		beq	.L289
 1261              	.L293:
 1262 03bc 0800A0E1 		mov	r0, r8
 1263 03c0 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1264 03c4 000050E3 		cmp	r0, #0
 1265 03c8 F3FFFF0A 		beq	.L294
 1266 03cc FEFFFFEB 		bl	vTaskMissedYield
 1267 03d0 F1FFFFEA 		b	.L294
 1268              	.L289:
 1269 03d4 0030E0E3 		mvn	r3, #0
 1270 03d8 4430C5E5 		strb	r3, [r5, #68]
 1271 03dc FEFFFFEB 		bl	vPortExitCritical
 1272 03e0 FEFFFFEB 		bl	xTaskResumeAll
 1273 03e4 86FFFFEA 		b	.L283
 1274              	.L303:
 1275 03e8 FEFFFFEB 		bl	vPortExitCritical
 1276 03ec 0000A0E3 		mov	r0, #0
 1277 03f0 10D08DE2 		add	sp, sp, #16
 1278              		@ sp needed
 1279 03f4 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1280              	.L379:
 1281 03f8 000000E3 		movw	r0, #:lower16:.LC0
 1282 03fc E71400E3 		movw	r1, #1255
 1283 0400 000040E3 		movt	r0, #:upper16:.LC0
 1284 0404 FEFFFFEB 		bl	R_OS_AssertCalled
 1285 0408 0AFFFFEA 		b	.L260
 1286              	.L383:
 1287 040c 100085E2 		add	r0, r5, #16
 1288 0410 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1289 0414 000050E3 		cmp	r0, #0
 1290 0418 8FFFFF0A 		beq	.L266
 1291              		.syntax divided
 1292              	@ 1286 "../src/FreeRTOS/queue.c" 1
 1293 041c 000000EF 		SWI 0
 1294              	@ 0 "" 2
 1295              		.arm
 1296              		.syntax unified
 1297 0420 8DFFFFEA 		b	.L266
 1298              	.L378:
 1299 0424 403095E5 		ldr	r3, [r5, #64]
 1300 0428 000053E3 		cmp	r3, #0
 1301 042c FBFEFF0A 		beq	.L258
 1302 0430 000000E3 		movw	r0, #:lower16:.LC0
 1303 0434 E21400E3 		movw	r1, #1250
 1304 0438 000040E3 		movt	r0, #:upper16:.LC0
 1305 043c FEFFFFEB 		bl	R_OS_AssertCalled
 1306 0440 F6FEFFEA 		b	.L258
 1307              	.L377:
 1308 0444 000000E3 		movw	r0, #:lower16:.LC0
 1309 0448 DE1400E3 		movw	r1, #1246
 1310 044c 000040E3 		movt	r0, #:upper16:.LC0
 1311 0450 FEFFFFEB 		bl	R_OS_AssertCalled
 1312 0454 EFFEFFEA 		b	.L257
 1314              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 1315              		.align	2
 1316              		.global	xQueueSemaphoreTake
 1317              		.syntax unified
 1318              		.arm
 1319              		.fpu neon
 1321              	xQueueSemaphoreTake:
 1322              		@ args = 0, pretend = 0, frame = 16
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 1325 0004 005050E2 		subs	r5, r0, #0
 1326 0008 10D04DE2 		sub	sp, sp, #16
 1327 000c 04108DE5 		str	r1, [sp, #4]
 1328 0010 1F01000A 		beq	.L513
 1329              	.L385:
 1330 0014 403095E5 		ldr	r3, [r5, #64]
 1331 0018 000053E3 		cmp	r3, #0
 1332 001c 1101001A 		bne	.L514
 1333              	.L386:
 1334 0020 FEFFFFEB 		bl	xTaskGetSchedulerState
 1335 0024 000050E3 		cmp	r0, #0
 1336 0028 0200001A 		bne	.L387
 1337 002c 04309DE5 		ldr	r3, [sp, #4]
 1338 0030 000053E3 		cmp	r3, #0
 1339 0034 F500001A 		bne	.L515
 1340              	.L387:
 1341 0038 FEFFFFEB 		bl	vPortEnterCritical
 1342 003c 383095E5 		ldr	r3, [r5, #56]
 1343 0040 0070A0E3 		mov	r7, #0
 1344 0044 0740A0E1 		mov	r4, r7
 1345 0048 0760A0E1 		mov	r6, r7
 1346 004c 000053E3 		cmp	r3, #0
 1347 0050 7100001A 		bne	.L516
 1348              	.L389:
 1349 0054 04309DE5 		ldr	r3, [sp, #4]
 1350 0058 000053E3 		cmp	r3, #0
 1351 005c F000000A 		beq	.L517
 1352 0060 000054E3 		cmp	r4, #0
 1353 0064 B800000A 		beq	.L518
 1354              	.L397:
 1355 0068 FEFFFFEB 		bl	vPortExitCritical
 1356 006c FEFFFFEB 		bl	vTaskSuspendAll
 1357 0070 FEFFFFEB 		bl	vPortEnterCritical
 1358 0074 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1359 0078 FF0053E3 		cmp	r3, #255
 1360 007c 4460C505 		strbeq	r6, [r5, #68]
 1361 0080 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1362 0084 FF0053E3 		cmp	r3, #255
 1363 0088 4560C505 		strbeq	r6, [r5, #69]
 1364 008c FEFFFFEB 		bl	vPortExitCritical
 1365 0090 04108DE2 		add	r1, sp, #4
 1366 0094 08008DE2 		add	r0, sp, #8
 1367 0098 FEFFFFEB 		bl	xTaskCheckForTimeOut
 1368 009c 000050E3 		cmp	r0, #0
 1369 00a0 1C00001A 		bne	.L400
 1370 00a4 FEFFFFEB 		bl	vPortEnterCritical
 1371 00a8 383095E5 		ldr	r3, [r5, #56]
 1372 00ac 000053E3 		cmp	r3, #0
 1373 00b0 6600000A 		beq	.L401
 1374 00b4 FEFFFFEB 		bl	vPortExitCritical
 1375 00b8 FEFFFFEB 		bl	vPortEnterCritical
 1376 00bc 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1377 00c0 7340AFE6 		sxtb	r4, r3
 1378 00c4 000054E3 		cmp	r4, #0
 1379 00c8 A20000DA 		ble	.L421
 1380 00cc 243095E5 		ldr	r3, [r5, #36]
 1381 00d0 000053E3 		cmp	r3, #0
 1382 00d4 9F00000A 		beq	.L421
 1383 00d8 248085E2 		add	r8, r5, #36
 1384 00dc 070000EA 		b	.L416
 1385              	.L419:
 1386 00e0 013044E2 		sub	r3, r4, #1
 1387 00e4 7330EFE6 		uxtb	r3, r3
 1388 00e8 000053E3 		cmp	r3, #0
 1389 00ec 7340AFE6 		sxtb	r4, r3
 1390 00f0 9800000A 		beq	.L421
 1391 00f4 243095E5 		ldr	r3, [r5, #36]
 1392 00f8 000053E3 		cmp	r3, #0
 1393 00fc 9500000A 		beq	.L421
 1394              	.L416:
 1395 0100 0800A0E1 		mov	r0, r8
 1396 0104 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1397 0108 000050E3 		cmp	r0, #0
 1398 010c F3FFFF0A 		beq	.L419
 1399 0110 FEFFFFEB 		bl	vTaskMissedYield
 1400 0114 F1FFFFEA 		b	.L419
 1401              	.L400:
 1402 0118 FEFFFFEB 		bl	vPortEnterCritical
 1403 011c 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1404 0120 7340AFE6 		sxtb	r4, r3
 1405 0124 000054E3 		cmp	r4, #0
 1406 0128 120000DA 		ble	.L428
 1407 012c 243095E5 		ldr	r3, [r5, #36]
 1408 0130 000053E3 		cmp	r3, #0
 1409 0134 0F00000A 		beq	.L428
 1410 0138 248085E2 		add	r8, r5, #36
 1411 013c 070000EA 		b	.L429
 1412              	.L430:
 1413 0140 013044E2 		sub	r3, r4, #1
 1414 0144 7330EFE6 		uxtb	r3, r3
 1415 0148 000053E3 		cmp	r3, #0
 1416 014c 7340AFE6 		sxtb	r4, r3
 1417 0150 0800000A 		beq	.L428
 1418 0154 243095E5 		ldr	r3, [r5, #36]
 1419 0158 000053E3 		cmp	r3, #0
 1420 015c 0500000A 		beq	.L428
 1421              	.L429:
 1422 0160 0800A0E1 		mov	r0, r8
 1423 0164 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1424 0168 000050E3 		cmp	r0, #0
 1425 016c F3FFFF0A 		beq	.L430
 1426 0170 FEFFFFEB 		bl	vTaskMissedYield
 1427 0174 F1FFFFEA 		b	.L430
 1428              	.L428:
 1429 0178 0030E0E3 		mvn	r3, #0
 1430 017c 4530C5E5 		strb	r3, [r5, #69]
 1431 0180 FEFFFFEB 		bl	vPortExitCritical
 1432 0184 FEFFFFEB 		bl	vPortEnterCritical
 1433 0188 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1434 018c 7340AFE6 		sxtb	r4, r3
 1435 0190 000054E3 		cmp	r4, #0
 1436 0194 120000DA 		ble	.L427
 1437 0198 103095E5 		ldr	r3, [r5, #16]
 1438 019c 000053E3 		cmp	r3, #0
 1439 01a0 0F00000A 		beq	.L427
 1440 01a4 108085E2 		add	r8, r5, #16
 1441 01a8 070000EA 		b	.L434
 1442              	.L435:
 1443 01ac 013044E2 		sub	r3, r4, #1
 1444 01b0 7330EFE6 		uxtb	r3, r3
 1445 01b4 000053E3 		cmp	r3, #0
 1446 01b8 7340AFE6 		sxtb	r4, r3
 1447 01bc 0800000A 		beq	.L427
 1448 01c0 103095E5 		ldr	r3, [r5, #16]
 1449 01c4 000053E3 		cmp	r3, #0
 1450 01c8 0500000A 		beq	.L427
 1451              	.L434:
 1452 01cc 0800A0E1 		mov	r0, r8
 1453 01d0 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1454 01d4 000050E3 		cmp	r0, #0
 1455 01d8 F3FFFF0A 		beq	.L435
 1456 01dc FEFFFFEB 		bl	vTaskMissedYield
 1457 01e0 F1FFFFEA 		b	.L435
 1458              	.L427:
 1459 01e4 0030E0E3 		mvn	r3, #0
 1460 01e8 4430C5E5 		strb	r3, [r5, #68]
 1461 01ec FEFFFFEB 		bl	vPortExitCritical
 1462 01f0 FEFFFFEB 		bl	xTaskResumeAll
 1463 01f4 FEFFFFEB 		bl	vPortEnterCritical
 1464 01f8 383095E5 		ldr	r3, [r5, #56]
 1465 01fc 000053E3 		cmp	r3, #0
 1466 0200 7400000A 		beq	.L519
 1467 0204 FEFFFFEB 		bl	vPortExitCritical
 1468              	.L412:
 1469 0208 FEFFFFEB 		bl	vPortEnterCritical
 1470 020c 383095E5 		ldr	r3, [r5, #56]
 1471 0210 0140A0E3 		mov	r4, #1
 1472 0214 000053E3 		cmp	r3, #0
 1473 0218 8DFFFF0A 		beq	.L389
 1474              	.L516:
 1475 021c 002095E5 		ldr	r2, [r5]
 1476 0220 013043E2 		sub	r3, r3, #1
 1477 0224 383085E5 		str	r3, [r5, #56]
 1478 0228 000052E3 		cmp	r2, #0
 1479 022c 9D00000A 		beq	.L520
 1480              	.L390:
 1481 0230 103095E5 		ldr	r3, [r5, #16]
 1482 0234 000053E3 		cmp	r3, #0
 1483 0238 8F00001A 		bne	.L521
 1484              	.L392:
 1485 023c 0170A0E3 		mov	r7, #1
 1486 0240 FEFFFFEB 		bl	vPortExitCritical
 1487              	.L384:
 1488 0244 0700A0E1 		mov	r0, r7
 1489 0248 10D08DE2 		add	sp, sp, #16
 1490              		@ sp needed
 1491 024c F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1492              	.L401:
 1493 0250 FEFFFFEB 		bl	vPortExitCritical
 1494 0254 003095E5 		ldr	r3, [r5]
 1495 0258 000053E3 		cmp	r3, #0
 1496 025c 7B00000A 		beq	.L522
 1497              	.L440:
 1498 0260 248085E2 		add	r8, r5, #36
 1499 0264 04109DE5 		ldr	r1, [sp, #4]
 1500 0268 0800A0E1 		mov	r0, r8
 1501 026c FEFFFFEB 		bl	vTaskPlaceOnEventList
 1502 0270 FEFFFFEB 		bl	vPortEnterCritical
 1503 0274 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1504 0278 7340AFE6 		sxtb	r4, r3
 1505 027c 000054E3 		cmp	r4, #0
 1506 0280 050000CA 		bgt	.L410
 1507 0284 0D0000EA 		b	.L407
 1508              	.L409:
 1509 0288 013044E2 		sub	r3, r4, #1
 1510 028c 7330EFE6 		uxtb	r3, r3
 1511 0290 000053E3 		cmp	r3, #0
 1512 0294 7340AFE6 		sxtb	r4, r3
 1513 0298 0800000A 		beq	.L407
 1514              	.L410:
 1515 029c 243095E5 		ldr	r3, [r5, #36]
 1516 02a0 000053E3 		cmp	r3, #0
 1517 02a4 0500000A 		beq	.L407
 1518 02a8 0800A0E1 		mov	r0, r8
 1519 02ac FEFFFFEB 		bl	xTaskRemoveFromEventList
 1520 02b0 000050E3 		cmp	r0, #0
 1521 02b4 F3FFFF0A 		beq	.L409
 1522 02b8 FEFFFFEB 		bl	vTaskMissedYield
 1523 02bc F1FFFFEA 		b	.L409
 1524              	.L407:
 1525 02c0 0030E0E3 		mvn	r3, #0
 1526 02c4 4530C5E5 		strb	r3, [r5, #69]
 1527 02c8 FEFFFFEB 		bl	vPortExitCritical
 1528 02cc FEFFFFEB 		bl	vPortEnterCritical
 1529 02d0 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1530 02d4 7340AFE6 		sxtb	r4, r3
 1531 02d8 000054E3 		cmp	r4, #0
 1532 02dc 120000DA 		ble	.L405
 1533 02e0 103095E5 		ldr	r3, [r5, #16]
 1534 02e4 000053E3 		cmp	r3, #0
 1535 02e8 0F00000A 		beq	.L405
 1536 02ec 108085E2 		add	r8, r5, #16
 1537 02f0 070000EA 		b	.L413
 1538              	.L414:
 1539 02f4 013044E2 		sub	r3, r4, #1
 1540 02f8 7330EFE6 		uxtb	r3, r3
 1541 02fc 000053E3 		cmp	r3, #0
 1542 0300 7340AFE6 		sxtb	r4, r3
 1543 0304 0800000A 		beq	.L405
 1544 0308 103095E5 		ldr	r3, [r5, #16]
 1545 030c 000053E3 		cmp	r3, #0
 1546 0310 0500000A 		beq	.L405
 1547              	.L413:
 1548 0314 0800A0E1 		mov	r0, r8
 1549 0318 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1550 031c 000050E3 		cmp	r0, #0
 1551 0320 F3FFFF0A 		beq	.L414
 1552 0324 FEFFFFEB 		bl	vTaskMissedYield
 1553 0328 F1FFFFEA 		b	.L414
 1554              	.L405:
 1555 032c 0030E0E3 		mvn	r3, #0
 1556 0330 4430C5E5 		strb	r3, [r5, #68]
 1557 0334 FEFFFFEB 		bl	vPortExitCritical
 1558 0338 FEFFFFEB 		bl	xTaskResumeAll
 1559 033c 000050E3 		cmp	r0, #0
 1560 0340 B0FFFF1A 		bne	.L412
 1561              		.syntax divided
 1562              	@ 1537 "../src/FreeRTOS/queue.c" 1
 1563 0344 000000EF 		SWI 0
 1564              	@ 0 "" 2
 1565              		.arm
 1566              		.syntax unified
 1567 0348 AEFFFFEA 		b	.L412
 1568              	.L518:
 1569 034c 08008DE2 		add	r0, sp, #8
 1570 0350 FEFFFFEB 		bl	vTaskInternalSetTimeOutState
 1571 0354 43FFFFEA 		b	.L397
 1572              	.L421:
 1573 0358 0030E0E3 		mvn	r3, #0
 1574 035c 4530C5E5 		strb	r3, [r5, #69]
 1575 0360 FEFFFFEB 		bl	vPortExitCritical
 1576 0364 FEFFFFEB 		bl	vPortEnterCritical
 1577 0368 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1578 036c 7340AFE6 		sxtb	r4, r3
 1579 0370 000054E3 		cmp	r4, #0
 1580 0374 120000DA 		ble	.L418
 1581 0378 103095E5 		ldr	r3, [r5, #16]
 1582 037c 000053E3 		cmp	r3, #0
 1583 0380 0F00000A 		beq	.L418
 1584 0384 108085E2 		add	r8, r5, #16
 1585 0388 070000EA 		b	.L422
 1586              	.L423:
 1587 038c 013044E2 		sub	r3, r4, #1
 1588 0390 7330EFE6 		uxtb	r3, r3
 1589 0394 000053E3 		cmp	r3, #0
 1590 0398 7340AFE6 		sxtb	r4, r3
 1591 039c 0800000A 		beq	.L418
 1592 03a0 103095E5 		ldr	r3, [r5, #16]
 1593 03a4 000053E3 		cmp	r3, #0
 1594 03a8 0500000A 		beq	.L418
 1595              	.L422:
 1596 03ac 0800A0E1 		mov	r0, r8
 1597 03b0 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1598 03b4 000050E3 		cmp	r0, #0
 1599 03b8 F3FFFF0A 		beq	.L423
 1600 03bc FEFFFFEB 		bl	vTaskMissedYield
 1601 03c0 F1FFFFEA 		b	.L423
 1602              	.L418:
 1603 03c4 0030E0E3 		mvn	r3, #0
 1604 03c8 4430C5E5 		strb	r3, [r5, #68]
 1605 03cc FEFFFFEB 		bl	vPortExitCritical
 1606 03d0 FEFFFFEB 		bl	xTaskResumeAll
 1607 03d4 8BFFFFEA 		b	.L412
 1608              	.L519:
 1609 03d8 FEFFFFEB 		bl	vPortExitCritical
 1610 03dc 000057E3 		cmp	r7, #0
 1611 03e0 97FFFF0A 		beq	.L384
 1612 03e4 FEFFFFEB 		bl	vPortEnterCritical
 1613 03e8 241095E5 		ldr	r1, [r5, #36]
 1614 03ec 0070A0E3 		mov	r7, #0
 1615 03f0 040095E5 		ldr	r0, [r5, #4]
 1616 03f4 000051E3 		cmp	r1, #0
 1617 03f8 30309515 		ldrne	r3, [r5, #48]
 1618 03fc 00109315 		ldrne	r1, [r3]
 1619 0400 14106112 		rsbne	r1, r1, #20
 1620 0404 FEFFFFEB 		bl	vTaskPriorityDisinheritAfterTimeout
 1621 0408 FEFFFFEB 		bl	vPortExitCritical
 1622 040c 8CFFFFEA 		b	.L384
 1623              	.L515:
 1624 0410 000000E3 		movw	r0, #:lower16:.LC0
 1625 0414 791500E3 		movw	r1, #1401
 1626 0418 000040E3 		movt	r0, #:upper16:.LC0
 1627 041c FEFFFFEB 		bl	R_OS_AssertCalled
 1628 0420 04FFFFEA 		b	.L387
 1629              	.L517:
 1630 0424 000057E3 		cmp	r7, #0
 1631 0428 0300000A 		beq	.L396
 1632 042c 000000E3 		movw	r0, #:lower16:.LC0
 1633 0430 C11500E3 		movw	r1, #1473
 1634 0434 000040E3 		movt	r0, #:upper16:.LC0
 1635 0438 FEFFFFEB 		bl	R_OS_AssertCalled
 1636              	.L396:
 1637 043c 0070A0E3 		mov	r7, #0
 1638 0440 FEFFFFEB 		bl	vPortExitCritical
 1639 0444 0700A0E1 		mov	r0, r7
 1640 0448 10D08DE2 		add	sp, sp, #16
 1641              		@ sp needed
 1642 044c F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1643              	.L522:
 1644 0450 FEFFFFEB 		bl	vPortEnterCritical
 1645 0454 040095E5 		ldr	r0, [r5, #4]
 1646 0458 FEFFFFEB 		bl	xTaskPriorityInherit
 1647 045c 0070A0E1 		mov	r7, r0
 1648 0460 FEFFFFEB 		bl	vPortExitCritical
 1649 0464 7DFFFFEA 		b	.L440
 1650              	.L514:
 1651 0468 000000E3 		movw	r0, #:lower16:.LC0
 1652 046c 741500E3 		movw	r1, #1396
 1653 0470 000040E3 		movt	r0, #:upper16:.LC0
 1654 0474 FEFFFFEB 		bl	R_OS_AssertCalled
 1655 0478 E8FEFFEA 		b	.L386
 1656              	.L521:
 1657 047c 100085E2 		add	r0, r5, #16
 1658 0480 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1659 0484 000050E3 		cmp	r0, #0
 1660 0488 6BFFFF0A 		beq	.L392
 1661              		.syntax divided
 1662              	@ 1449 "../src/FreeRTOS/queue.c" 1
 1663 048c 000000EF 		SWI 0
 1664              	@ 0 "" 2
 1665              		.arm
 1666              		.syntax unified
 1667 0490 69FFFFEA 		b	.L392
 1668              	.L513:
 1669 0494 000000E3 		movw	r0, #:lower16:.LC0
 1670 0498 571EA0E3 		mov	r1, #1392
 1671 049c 000040E3 		movt	r0, #:upper16:.LC0
 1672 04a0 FEFFFFEB 		bl	R_OS_AssertCalled
 1673 04a4 DAFEFFEA 		b	.L385
 1674              	.L520:
 1675 04a8 FEFFFFEB 		bl	pvTaskIncrementMutexHeldCount
 1676 04ac 040085E5 		str	r0, [r5, #4]
 1677 04b0 5EFFFFEA 		b	.L390
 1679              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 1680              		.align	2
 1681              		.global	xQueueTakeMutexRecursive
 1682              		.syntax unified
 1683              		.arm
 1684              		.fpu neon
 1686              	xQueueTakeMutexRecursive:
 1687              		@ args = 0, pretend = 0, frame = 0
 1688              		@ frame_needed = 0, uses_anonymous_args = 0
 1689 0000 70402DE9 		push	{r4, r5, r6, lr}
 1690 0004 004050E2 		subs	r4, r0, #0
 1691 0008 0160A0E1 		mov	r6, r1
 1692 000c 1000000A 		beq	.L531
 1693              	.L524:
 1694 0010 045094E5 		ldr	r5, [r4, #4]
 1695 0014 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 1696 0018 000055E1 		cmp	r5, r0
 1697 001c 0700000A 		beq	.L532
 1698 0020 0610A0E1 		mov	r1, r6
 1699 0024 0400A0E1 		mov	r0, r4
 1700 0028 FEFFFFEB 		bl	xQueueSemaphoreTake
 1701 002c 000050E3 		cmp	r0, #0
 1702 0030 0C309415 		ldrne	r3, [r4, #12]
 1703 0034 01308312 		addne	r3, r3, #1
 1704 0038 0C308415 		strne	r3, [r4, #12]
 1705 003c 7080BDE8 		pop	{r4, r5, r6, pc}
 1706              	.L532:
 1707 0040 0C3094E5 		ldr	r3, [r4, #12]
 1708 0044 0100A0E3 		mov	r0, #1
 1709 0048 003083E0 		add	r3, r3, r0
 1710 004c 0C3084E5 		str	r3, [r4, #12]
 1711 0050 7080BDE8 		pop	{r4, r5, r6, pc}
 1712              	.L531:
 1713 0054 000000E3 		movw	r0, #:lower16:.LC0
 1714 0058 7A1200E3 		movw	r1, #634
 1715 005c 000040E3 		movt	r0, #:upper16:.LC0
 1716 0060 FEFFFFEB 		bl	R_OS_AssertCalled
 1717 0064 E9FFFFEA 		b	.L524
 1719              		.section	.text.xQueuePeek,"ax",%progbits
 1720              		.align	2
 1721              		.global	xQueuePeek
 1722              		.syntax unified
 1723              		.arm
 1724              		.fpu neon
 1726              	xQueuePeek:
 1727              		@ args = 0, pretend = 0, frame = 16
 1728              		@ frame_needed = 0, uses_anonymous_args = 0
 1729 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 1730 0004 005050E2 		subs	r5, r0, #0
 1731 0008 10D04DE2 		sub	sp, sp, #16
 1732 000c 0170A0E1 		mov	r7, r1
 1733 0010 04208DE5 		str	r2, [sp, #4]
 1734 0014 0901000A 		beq	.L654
 1735              	.L534:
 1736 0018 000057E3 		cmp	r7, #0
 1737 001c FF00000A 		beq	.L655
 1738              	.L535:
 1739 0020 FEFFFFEB 		bl	xTaskGetSchedulerState
 1740 0024 000050E3 		cmp	r0, #0
 1741 0028 0200001A 		bne	.L537
 1742 002c 04309DE5 		ldr	r3, [sp, #4]
 1743 0030 000053E3 		cmp	r3, #0
 1744 0034 EE00001A 		bne	.L656
 1745              	.L537:
 1746 0038 FEFFFFEB 		bl	vPortEnterCritical
 1747 003c 383095E5 		ldr	r3, [r5, #56]
 1748 0040 0040A0E3 		mov	r4, #0
 1749 0044 0460A0E1 		mov	r6, r4
 1750 0048 000053E3 		cmp	r3, #0
 1751 004c 7100001A 		bne	.L657
 1752              	.L539:
 1753 0050 04309DE5 		ldr	r3, [sp, #4]
 1754 0054 000053E3 		cmp	r3, #0
 1755 0058 E100000A 		beq	.L580
 1756 005c 000054E3 		cmp	r4, #0
 1757 0060 8000000A 		beq	.L658
 1758              	.L547:
 1759 0064 FEFFFFEB 		bl	vPortExitCritical
 1760 0068 FEFFFFEB 		bl	vTaskSuspendAll
 1761 006c FEFFFFEB 		bl	vPortEnterCritical
 1762 0070 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1763 0074 FF0053E3 		cmp	r3, #255
 1764 0078 4460C505 		strbeq	r6, [r5, #68]
 1765 007c 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1766 0080 FF0053E3 		cmp	r3, #255
 1767 0084 4560C505 		strbeq	r6, [r5, #69]
 1768 0088 FEFFFFEB 		bl	vPortExitCritical
 1769 008c 04108DE2 		add	r1, sp, #4
 1770 0090 08008DE2 		add	r0, sp, #8
 1771 0094 FEFFFFEB 		bl	xTaskCheckForTimeOut
 1772 0098 000050E3 		cmp	r0, #0
 1773 009c 1C00001A 		bne	.L550
 1774 00a0 FEFFFFEB 		bl	vPortEnterCritical
 1775 00a4 383095E5 		ldr	r3, [r5, #56]
 1776 00a8 000053E3 		cmp	r3, #0
 1777 00ac 9300001A 		bne	.L659
 1778 00b0 248085E2 		add	r8, r5, #36
 1779 00b4 FEFFFFEB 		bl	vPortExitCritical
 1780 00b8 0800A0E1 		mov	r0, r8
 1781 00bc 04109DE5 		ldr	r1, [sp, #4]
 1782 00c0 FEFFFFEB 		bl	vTaskPlaceOnEventList
 1783 00c4 FEFFFFEB 		bl	vPortEnterCritical
 1784 00c8 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1785 00cc 7340AFE6 		sxtb	r4, r3
 1786 00d0 000054E3 		cmp	r4, #0
 1787 00d4 050000CA 		bgt	.L557
 1788 00d8 650000EA 		b	.L558
 1789              	.L556:
 1790 00dc 013044E2 		sub	r3, r4, #1
 1791 00e0 7330EFE6 		uxtb	r3, r3
 1792 00e4 000053E3 		cmp	r3, #0
 1793 00e8 7340AFE6 		sxtb	r4, r3
 1794 00ec 6000000A 		beq	.L558
 1795              	.L557:
 1796 00f0 243095E5 		ldr	r3, [r5, #36]
 1797 00f4 000053E3 		cmp	r3, #0
 1798 00f8 5D00000A 		beq	.L558
 1799 00fc 0800A0E1 		mov	r0, r8
 1800 0100 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1801 0104 000050E3 		cmp	r0, #0
 1802 0108 F3FFFF0A 		beq	.L556
 1803 010c FEFFFFEB 		bl	vTaskMissedYield
 1804 0110 F1FFFFEA 		b	.L556
 1805              	.L550:
 1806 0114 FEFFFFEB 		bl	vPortEnterCritical
 1807 0118 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1808 011c 7340AFE6 		sxtb	r4, r3
 1809 0120 000054E3 		cmp	r4, #0
 1810 0124 120000DA 		ble	.L576
 1811 0128 243095E5 		ldr	r3, [r5, #36]
 1812 012c 000053E3 		cmp	r3, #0
 1813 0130 0F00000A 		beq	.L576
 1814 0134 248085E2 		add	r8, r5, #36
 1815 0138 070000EA 		b	.L577
 1816              	.L578:
 1817 013c 013044E2 		sub	r3, r4, #1
 1818 0140 7330EFE6 		uxtb	r3, r3
 1819 0144 000053E3 		cmp	r3, #0
 1820 0148 7340AFE6 		sxtb	r4, r3
 1821 014c 0800000A 		beq	.L576
 1822 0150 243095E5 		ldr	r3, [r5, #36]
 1823 0154 000053E3 		cmp	r3, #0
 1824 0158 0500000A 		beq	.L576
 1825              	.L577:
 1826 015c 0800A0E1 		mov	r0, r8
 1827 0160 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1828 0164 000050E3 		cmp	r0, #0
 1829 0168 F3FFFF0A 		beq	.L578
 1830 016c FEFFFFEB 		bl	vTaskMissedYield
 1831 0170 F1FFFFEA 		b	.L578
 1832              	.L576:
 1833 0174 0030E0E3 		mvn	r3, #0
 1834 0178 4530C5E5 		strb	r3, [r5, #69]
 1835 017c FEFFFFEB 		bl	vPortExitCritical
 1836 0180 FEFFFFEB 		bl	vPortEnterCritical
 1837 0184 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1838 0188 7340AFE6 		sxtb	r4, r3
 1839 018c 000054E3 		cmp	r4, #0
 1840 0190 120000DA 		ble	.L575
 1841 0194 103095E5 		ldr	r3, [r5, #16]
 1842 0198 000053E3 		cmp	r3, #0
 1843 019c 0F00000A 		beq	.L575
 1844 01a0 108085E2 		add	r8, r5, #16
 1845 01a4 070000EA 		b	.L582
 1846              	.L583:
 1847 01a8 013044E2 		sub	r3, r4, #1
 1848 01ac 7330EFE6 		uxtb	r3, r3
 1849 01b0 000053E3 		cmp	r3, #0
 1850 01b4 7340AFE6 		sxtb	r4, r3
 1851 01b8 0800000A 		beq	.L575
 1852 01bc 103095E5 		ldr	r3, [r5, #16]
 1853 01c0 000053E3 		cmp	r3, #0
 1854 01c4 0500000A 		beq	.L575
 1855              	.L582:
 1856 01c8 0800A0E1 		mov	r0, r8
 1857 01cc FEFFFFEB 		bl	xTaskRemoveFromEventList
 1858 01d0 000050E3 		cmp	r0, #0
 1859 01d4 F3FFFF0A 		beq	.L583
 1860 01d8 FEFFFFEB 		bl	vTaskMissedYield
 1861 01dc F1FFFFEA 		b	.L583
 1862              	.L575:
 1863 01e0 0030E0E3 		mvn	r3, #0
 1864 01e4 4430C5E5 		strb	r3, [r5, #68]
 1865 01e8 FEFFFFEB 		bl	vPortExitCritical
 1866 01ec FEFFFFEB 		bl	xTaskResumeAll
 1867 01f0 FEFFFFEB 		bl	vPortEnterCritical
 1868 01f4 383095E5 		ldr	r3, [r5, #56]
 1869 01f8 000053E3 		cmp	r3, #0
 1870 01fc 7800000A 		beq	.L580
 1871 0200 FEFFFFEB 		bl	vPortExitCritical
 1872              	.L560:
 1873 0204 FEFFFFEB 		bl	vPortEnterCritical
 1874 0208 383095E5 		ldr	r3, [r5, #56]
 1875 020c 0140A0E3 		mov	r4, #1
 1876 0210 000053E3 		cmp	r3, #0
 1877 0214 8DFFFF0A 		beq	.L539
 1878              	.L657:
 1879 0218 402095E5 		ldr	r2, [r5, #64]
 1880 021c 0C4095E5 		ldr	r4, [r5, #12]
 1881 0220 000052E3 		cmp	r2, #0
 1882 0224 0700000A 		beq	.L540
 1883 0228 043095E5 		ldr	r3, [r5, #4]
 1884 022c 021084E0 		add	r1, r4, r2
 1885 0230 0C1085E5 		str	r1, [r5, #12]
 1886 0234 0700A0E1 		mov	r0, r7
 1887 0238 030051E1 		cmp	r1, r3
 1888 023c 00109525 		ldrcs	r1, [r5]
 1889 0240 0C108525 		strcs	r1, [r5, #12]
 1890 0244 FEFFFFEB 		bl	memcpy
 1891              	.L540:
 1892 0248 243095E5 		ldr	r3, [r5, #36]
 1893 024c 0C4085E5 		str	r4, [r5, #12]
 1894 0250 000053E3 		cmp	r3, #0
 1895 0254 6B00001A 		bne	.L660
 1896              	.L543:
 1897 0258 FEFFFFEB 		bl	vPortExitCritical
 1898 025c 0100A0E3 		mov	r0, #1
 1899 0260 10D08DE2 		add	sp, sp, #16
 1900              		@ sp needed
 1901 0264 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1902              	.L658:
 1903 0268 08008DE2 		add	r0, sp, #8
 1904 026c FEFFFFEB 		bl	vTaskInternalSetTimeOutState
 1905 0270 7BFFFFEA 		b	.L547
 1906              	.L558:
 1907 0274 0030E0E3 		mvn	r3, #0
 1908 0278 4530C5E5 		strb	r3, [r5, #69]
 1909 027c FEFFFFEB 		bl	vPortExitCritical
 1910 0280 FEFFFFEB 		bl	vPortEnterCritical
 1911 0284 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1912 0288 7340AFE6 		sxtb	r4, r3
 1913 028c 000054E3 		cmp	r4, #0
 1914 0290 120000DA 		ble	.L555
 1915 0294 103095E5 		ldr	r3, [r5, #16]
 1916 0298 000053E3 		cmp	r3, #0
 1917 029c 0F00000A 		beq	.L555
 1918 02a0 108085E2 		add	r8, r5, #16
 1919 02a4 070000EA 		b	.L561
 1920              	.L562:
 1921 02a8 013044E2 		sub	r3, r4, #1
 1922 02ac 7330EFE6 		uxtb	r3, r3
 1923 02b0 000053E3 		cmp	r3, #0
 1924 02b4 7340AFE6 		sxtb	r4, r3
 1925 02b8 0800000A 		beq	.L555
 1926 02bc 103095E5 		ldr	r3, [r5, #16]
 1927 02c0 000053E3 		cmp	r3, #0
 1928 02c4 0500000A 		beq	.L555
 1929              	.L561:
 1930 02c8 0800A0E1 		mov	r0, r8
 1931 02cc FEFFFFEB 		bl	xTaskRemoveFromEventList
 1932 02d0 000050E3 		cmp	r0, #0
 1933 02d4 F3FFFF0A 		beq	.L562
 1934 02d8 FEFFFFEB 		bl	vTaskMissedYield
 1935 02dc F1FFFFEA 		b	.L562
 1936              	.L555:
 1937 02e0 0030E0E3 		mvn	r3, #0
 1938 02e4 4430C5E5 		strb	r3, [r5, #68]
 1939 02e8 FEFFFFEB 		bl	vPortExitCritical
 1940 02ec FEFFFFEB 		bl	xTaskResumeAll
 1941 02f0 000050E3 		cmp	r0, #0
 1942 02f4 C2FFFF1A 		bne	.L560
 1943              		.syntax divided
 1944              	@ 1714 "../src/FreeRTOS/queue.c" 1
 1945 02f8 000000EF 		SWI 0
 1946              	@ 0 "" 2
 1947              		.arm
 1948              		.syntax unified
 1949 02fc C0FFFFEA 		b	.L560
 1950              	.L659:
 1951 0300 FEFFFFEB 		bl	vPortExitCritical
 1952 0304 FEFFFFEB 		bl	vPortEnterCritical
 1953 0308 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1954 030c 7340AFE6 		sxtb	r4, r3
 1955 0310 000054E3 		cmp	r4, #0
 1956 0314 120000DA 		ble	.L569
 1957 0318 243095E5 		ldr	r3, [r5, #36]
 1958 031c 000053E3 		cmp	r3, #0
 1959 0320 0F00000A 		beq	.L569
 1960 0324 248085E2 		add	r8, r5, #36
 1961 0328 070000EA 		b	.L564
 1962              	.L567:
 1963 032c 013044E2 		sub	r3, r4, #1
 1964 0330 7330EFE6 		uxtb	r3, r3
 1965 0334 000053E3 		cmp	r3, #0
 1966 0338 7340AFE6 		sxtb	r4, r3
 1967 033c 0800000A 		beq	.L569
 1968 0340 243095E5 		ldr	r3, [r5, #36]
 1969 0344 000053E3 		cmp	r3, #0
 1970 0348 0500000A 		beq	.L569
 1971              	.L564:
 1972 034c 0800A0E1 		mov	r0, r8
 1973 0350 FEFFFFEB 		bl	xTaskRemoveFromEventList
 1974 0354 000050E3 		cmp	r0, #0
 1975 0358 F3FFFF0A 		beq	.L567
 1976 035c FEFFFFEB 		bl	vTaskMissedYield
 1977 0360 F1FFFFEA 		b	.L567
 1978              	.L569:
 1979 0364 0030E0E3 		mvn	r3, #0
 1980 0368 4530C5E5 		strb	r3, [r5, #69]
 1981 036c FEFFFFEB 		bl	vPortExitCritical
 1982 0370 FEFFFFEB 		bl	vPortEnterCritical
 1983 0374 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 1984 0378 7340AFE6 		sxtb	r4, r3
 1985 037c 000054E3 		cmp	r4, #0
 1986 0380 120000DA 		ble	.L566
 1987 0384 103095E5 		ldr	r3, [r5, #16]
 1988 0388 000053E3 		cmp	r3, #0
 1989 038c 0F00000A 		beq	.L566
 1990 0390 108085E2 		add	r8, r5, #16
 1991 0394 070000EA 		b	.L570
 1992              	.L571:
 1993 0398 013044E2 		sub	r3, r4, #1
 1994 039c 7330EFE6 		uxtb	r3, r3
 1995 03a0 000053E3 		cmp	r3, #0
 1996 03a4 7340AFE6 		sxtb	r4, r3
 1997 03a8 0800000A 		beq	.L566
 1998 03ac 103095E5 		ldr	r3, [r5, #16]
 1999 03b0 000053E3 		cmp	r3, #0
 2000 03b4 0500000A 		beq	.L566
 2001              	.L570:
 2002 03b8 0800A0E1 		mov	r0, r8
 2003 03bc FEFFFFEB 		bl	xTaskRemoveFromEventList
 2004 03c0 000050E3 		cmp	r0, #0
 2005 03c4 F3FFFF0A 		beq	.L571
 2006 03c8 FEFFFFEB 		bl	vTaskMissedYield
 2007 03cc F1FFFFEA 		b	.L571
 2008              	.L566:
 2009 03d0 0030E0E3 		mvn	r3, #0
 2010 03d4 4430C5E5 		strb	r3, [r5, #68]
 2011 03d8 FEFFFFEB 		bl	vPortExitCritical
 2012 03dc FEFFFFEB 		bl	xTaskResumeAll
 2013 03e0 87FFFFEA 		b	.L560
 2014              	.L580:
 2015 03e4 FEFFFFEB 		bl	vPortExitCritical
 2016 03e8 0000A0E3 		mov	r0, #0
 2017 03ec 10D08DE2 		add	sp, sp, #16
 2018              		@ sp needed
 2019 03f0 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 2020              	.L656:
 2021 03f4 000000E3 		movw	r0, #:lower16:.LC0
 2022 03f8 511600E3 		movw	r1, #1617
 2023 03fc 000040E3 		movt	r0, #:upper16:.LC0
 2024 0400 FEFFFFEB 		bl	R_OS_AssertCalled
 2025 0404 0BFFFFEA 		b	.L537
 2026              	.L660:
 2027 0408 240085E2 		add	r0, r5, #36
 2028 040c FEFFFFEB 		bl	xTaskRemoveFromEventList
 2029 0410 000050E3 		cmp	r0, #0
 2030 0414 8FFFFF0A 		beq	.L543
 2031              		.syntax divided
 2032              	@ 1654 "../src/FreeRTOS/queue.c" 1
 2033 0418 000000EF 		SWI 0
 2034              	@ 0 "" 2
 2035              		.arm
 2036              		.syntax unified
 2037 041c 8DFFFFEA 		b	.L543
 2038              	.L655:
 2039 0420 403095E5 		ldr	r3, [r5, #64]
 2040 0424 000053E3 		cmp	r3, #0
 2041 0428 FCFEFF0A 		beq	.L535
 2042 042c 000000E3 		movw	r0, #:lower16:.LC0
 2043 0430 4C1600E3 		movw	r1, #1612
 2044 0434 000040E3 		movt	r0, #:upper16:.LC0
 2045 0438 FEFFFFEB 		bl	R_OS_AssertCalled
 2046 043c F7FEFFEA 		b	.L535
 2047              	.L654:
 2048 0440 000000E3 		movw	r0, #:lower16:.LC0
 2049 0444 481600E3 		movw	r1, #1608
 2050 0448 000040E3 		movt	r0, #:upper16:.LC0
 2051 044c FEFFFFEB 		bl	R_OS_AssertCalled
 2052 0450 F0FEFFEA 		b	.L534
 2054              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2055              		.align	2
 2056              		.global	xQueueReceiveFromISR
 2057              		.syntax unified
 2058              		.arm
 2059              		.fpu neon
 2061              	xQueueReceiveFromISR:
 2062              		@ args = 0, pretend = 0, frame = 0
 2063              		@ frame_needed = 0, uses_anonymous_args = 0
 2064 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2065 0004 005050E2 		subs	r5, r0, #0
 2066 0008 0170A0E1 		mov	r7, r1
 2067 000c 0290A0E1 		mov	r9, r2
 2068 0010 3400000A 		beq	.L680
 2069              	.L662:
 2070 0014 000057E3 		cmp	r7, #0
 2071 0018 2000000A 		beq	.L681
 2072              	.L663:
 2073 001c FEFFFFEB 		bl	vPortValidateInterruptPriority
 2074 0020 FEFFFFEB 		bl	ulPortSetInterruptMask
 2075 0024 384095E5 		ldr	r4, [r5, #56]
 2076 0028 0080A0E1 		mov	r8, r0
 2077 002c 000054E3 		cmp	r4, #0
 2078 0030 0300001A 		bne	.L682
 2079              	.L665:
 2080 0034 0800A0E1 		mov	r0, r8
 2081 0038 FEFFFFEB 		bl	vPortClearInterruptMask
 2082 003c 0400A0E1 		mov	r0, r4
 2083 0040 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2084              	.L682:
 2085 0044 402095E5 		ldr	r2, [r5, #64]
 2086 0048 4460D5E5 		ldrb	r6, [r5, #68]	@ zero_extendqisi2
 2087 004c 000052E3 		cmp	r2, #0
 2088 0050 7660AFE6 		sxtb	r6, r6
 2089 0054 0800000A 		beq	.L666
 2090 0058 0C1095E5 		ldr	r1, [r5, #12]
 2091 005c 0700A0E1 		mov	r0, r7
 2092 0060 043095E5 		ldr	r3, [r5, #4]
 2093 0064 021081E0 		add	r1, r1, r2
 2094 0068 030051E1 		cmp	r1, r3
 2095 006c 0C1085E5 		str	r1, [r5, #12]
 2096 0070 00109525 		ldrcs	r1, [r5]
 2097 0074 0C108525 		strcs	r1, [r5, #12]
 2098 0078 FEFFFFEB 		bl	memcpy
 2099              	.L666:
 2100 007c 010076E3 		cmn	r6, #1
 2101 0080 014044E2 		sub	r4, r4, #1
 2102 0084 384085E5 		str	r4, [r5, #56]
 2103 0088 0C00000A 		beq	.L683
 2104 008c 016086E2 		add	r6, r6, #1
 2105 0090 0140A0E3 		mov	r4, #1
 2106 0094 7660AFE6 		sxtb	r6, r6
 2107 0098 4460C5E5 		strb	r6, [r5, #68]
 2108 009c E4FFFFEA 		b	.L665
 2109              	.L681:
 2110 00a0 403095E5 		ldr	r3, [r5, #64]
 2111 00a4 000053E3 		cmp	r3, #0
 2112 00a8 DBFFFF0A 		beq	.L663
 2113 00ac 000000E3 		movw	r0, #:lower16:.LC0
 2114 00b0 DD1600E3 		movw	r1, #1757
 2115 00b4 000040E3 		movt	r0, #:upper16:.LC0
 2116 00b8 FEFFFFEB 		bl	R_OS_AssertCalled
 2117 00bc D6FFFFEA 		b	.L663
 2118              	.L683:
 2119 00c0 103095E5 		ldr	r3, [r5, #16]
 2120 00c4 0140A0E3 		mov	r4, #1
 2121 00c8 000053E3 		cmp	r3, #0
 2122 00cc D8FFFF0A 		beq	.L665
 2123 00d0 100085E2 		add	r0, r5, #16
 2124 00d4 FEFFFFEB 		bl	xTaskRemoveFromEventList
 2125 00d8 000050E3 		cmp	r0, #0
 2126 00dc 00005913 		cmpne	r9, #0
 2127 00e0 00408915 		strne	r4, [r9]
 2128 00e4 D2FFFFEA 		b	.L665
 2129              	.L680:
 2130 00e8 000000E3 		movw	r0, #:lower16:.LC0
 2131 00ec DC1600E3 		movw	r1, #1756
 2132 00f0 000040E3 		movt	r0, #:upper16:.LC0
 2133 00f4 FEFFFFEB 		bl	R_OS_AssertCalled
 2134 00f8 C5FFFFEA 		b	.L662
 2136              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2137              		.align	2
 2138              		.global	xQueuePeekFromISR
 2139              		.syntax unified
 2140              		.arm
 2141              		.fpu neon
 2143              	xQueuePeekFromISR:
 2144              		@ args = 0, pretend = 0, frame = 0
 2145              		@ frame_needed = 0, uses_anonymous_args = 0
 2146 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 2147 0004 004050E2 		subs	r4, r0, #0
 2148 0008 0150A0E1 		mov	r5, r1
 2149 000c 2B00000A 		beq	.L702
 2150              	.L685:
 2151 0010 000055E3 		cmp	r5, #0
 2152 0014 2100000A 		beq	.L703
 2153              	.L686:
 2154 0018 403094E5 		ldr	r3, [r4, #64]
 2155 001c 000053E3 		cmp	r3, #0
 2156 0020 1900000A 		beq	.L689
 2157              	.L688:
 2158 0024 FEFFFFEB 		bl	vPortValidateInterruptPriority
 2159 0028 FEFFFFEB 		bl	ulPortSetInterruptMask
 2160 002c 0060A0E1 		mov	r6, r0
 2161 0030 380094E5 		ldr	r0, [r4, #56]
 2162 0034 000050E3 		cmp	r0, #0
 2163 0038 0040A001 		moveq	r4, r0
 2164 003c 0300001A 		bne	.L704
 2165              	.L690:
 2166 0040 0600A0E1 		mov	r0, r6
 2167 0044 FEFFFFEB 		bl	vPortClearInterruptMask
 2168 0048 0400A0E1 		mov	r0, r4
 2169 004c F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 2170              	.L704:
 2171 0050 402094E5 		ldr	r2, [r4, #64]
 2172 0054 0C7094E5 		ldr	r7, [r4, #12]
 2173 0058 000052E3 		cmp	r2, #0
 2174 005c 0700000A 		beq	.L691
 2175 0060 043094E5 		ldr	r3, [r4, #4]
 2176 0064 021087E0 		add	r1, r7, r2
 2177 0068 0C1084E5 		str	r1, [r4, #12]
 2178 006c 0500A0E1 		mov	r0, r5
 2179 0070 030051E1 		cmp	r1, r3
 2180 0074 00109425 		ldrcs	r1, [r4]
 2181 0078 0C108425 		strcs	r1, [r4, #12]
 2182 007c FEFFFFEB 		bl	memcpy
 2183              	.L691:
 2184 0080 0C7084E5 		str	r7, [r4, #12]
 2185 0084 0140A0E3 		mov	r4, #1
 2186 0088 ECFFFFEA 		b	.L690
 2187              	.L689:
 2188 008c 000000E3 		movw	r0, #:lower16:.LC0
 2189 0090 3A1700E3 		movw	r1, #1850
 2190 0094 000040E3 		movt	r0, #:upper16:.LC0
 2191 0098 FEFFFFEB 		bl	R_OS_AssertCalled
 2192 009c E0FFFFEA 		b	.L688
 2193              	.L703:
 2194 00a0 403094E5 		ldr	r3, [r4, #64]
 2195 00a4 000053E3 		cmp	r3, #0
 2196 00a8 F7FFFF0A 		beq	.L689
 2197 00ac 000000E3 		movw	r0, #:lower16:.LC0
 2198 00b0 391700E3 		movw	r1, #1849
 2199 00b4 000040E3 		movt	r0, #:upper16:.LC0
 2200 00b8 FEFFFFEB 		bl	R_OS_AssertCalled
 2201 00bc D5FFFFEA 		b	.L686
 2202              	.L702:
 2203 00c0 000000E3 		movw	r0, #:lower16:.LC0
 2204 00c4 381700E3 		movw	r1, #1848
 2205 00c8 000040E3 		movt	r0, #:upper16:.LC0
 2206 00cc FEFFFFEB 		bl	R_OS_AssertCalled
 2207 00d0 CEFFFFEA 		b	.L685
 2209              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2210              		.align	2
 2211              		.global	uxQueueMessagesWaiting
 2212              		.syntax unified
 2213              		.arm
 2214              		.fpu neon
 2216              	uxQueueMessagesWaiting:
 2217              		@ args = 0, pretend = 0, frame = 0
 2218              		@ frame_needed = 0, uses_anonymous_args = 0
 2219 0000 10402DE9 		push	{r4, lr}
 2220 0004 004050E2 		subs	r4, r0, #0
 2221 0008 0400000A 		beq	.L708
 2222              	.L706:
 2223 000c FEFFFFEB 		bl	vPortEnterCritical
 2224 0010 384094E5 		ldr	r4, [r4, #56]
 2225 0014 FEFFFFEB 		bl	vPortExitCritical
 2226 0018 0400A0E1 		mov	r0, r4
 2227 001c 1080BDE8 		pop	{r4, pc}
 2228              	.L708:
 2229 0020 000000E3 		movw	r0, #:lower16:.LC0
 2230 0024 6B1700E3 		movw	r1, #1899
 2231 0028 000040E3 		movt	r0, #:upper16:.LC0
 2232 002c FEFFFFEB 		bl	R_OS_AssertCalled
 2233 0030 F5FFFFEA 		b	.L706
 2235              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2236              		.align	2
 2237              		.global	uxQueueSpacesAvailable
 2238              		.syntax unified
 2239              		.arm
 2240              		.fpu neon
 2242              	uxQueueSpacesAvailable:
 2243              		@ args = 0, pretend = 0, frame = 0
 2244              		@ frame_needed = 0, uses_anonymous_args = 0
 2245 0000 70402DE9 		push	{r4, r5, r6, lr}
 2246 0004 005050E2 		subs	r5, r0, #0
 2247 0008 0600000A 		beq	.L712
 2248              	.L710:
 2249 000c FEFFFFEB 		bl	vPortEnterCritical
 2250 0010 380095E5 		ldr	r0, [r5, #56]
 2251 0014 3C4095E5 		ldr	r4, [r5, #60]
 2252 0018 004044E0 		sub	r4, r4, r0
 2253 001c FEFFFFEB 		bl	vPortExitCritical
 2254 0020 0400A0E1 		mov	r0, r4
 2255 0024 7080BDE8 		pop	{r4, r5, r6, pc}
 2256              	.L712:
 2257 0028 000000E3 		movw	r0, #:lower16:.LC0
 2258 002c 7D1700E3 		movw	r1, #1917
 2259 0030 000040E3 		movt	r0, #:upper16:.LC0
 2260 0034 FEFFFFEB 		bl	R_OS_AssertCalled
 2261 0038 F3FFFFEA 		b	.L710
 2263              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2264              		.align	2
 2265              		.global	uxQueueMessagesWaitingFromISR
 2266              		.syntax unified
 2267              		.arm
 2268              		.fpu neon
 2270              	uxQueueMessagesWaitingFromISR:
 2271              		@ args = 0, pretend = 0, frame = 0
 2272              		@ frame_needed = 0, uses_anonymous_args = 0
 2273 0000 10402DE9 		push	{r4, lr}
 2274 0004 004050E2 		subs	r4, r0, #0
 2275 0008 0100000A 		beq	.L716
 2276 000c 380094E5 		ldr	r0, [r4, #56]
 2277 0010 1080BDE8 		pop	{r4, pc}
 2278              	.L716:
 2279 0014 000000E3 		movw	r0, #:lower16:.LC0
 2280 0018 8D1700E3 		movw	r1, #1933
 2281 001c 000040E3 		movt	r0, #:upper16:.LC0
 2282 0020 FEFFFFEB 		bl	R_OS_AssertCalled
 2283 0024 380094E5 		ldr	r0, [r4, #56]
 2284 0028 1080BDE8 		pop	{r4, pc}
 2286              		.section	.text.vQueueDelete,"ax",%progbits
 2287              		.align	2
 2288              		.global	vQueueDelete
 2289              		.syntax unified
 2290              		.arm
 2291              		.fpu neon
 2293              	vQueueDelete:
 2294              		@ args = 0, pretend = 0, frame = 0
 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 2296 0000 10402DE9 		push	{r4, lr}
 2297 0004 004050E2 		subs	r4, r0, #0
 2298 0008 2500000A 		beq	.L729
 2299              	.L718:
 2300 000c 003000E3 		movw	r3, #:lower16:xQueueRegistry
 2301 0010 003040E3 		movt	r3, #:upper16:xQueueRegistry
 2302 0014 042093E5 		ldr	r2, [r3, #4]
 2303 0018 020054E1 		cmp	r4, r2
 2304 001c 2500000A 		beq	.L721
 2305 0020 0C2093E5 		ldr	r2, [r3, #12]
 2306 0024 020054E1 		cmp	r4, r2
 2307 0028 2400000A 		beq	.L722
 2308 002c 142093E5 		ldr	r2, [r3, #20]
 2309 0030 020054E1 		cmp	r4, r2
 2310 0034 2300000A 		beq	.L723
 2311 0038 1C2093E5 		ldr	r2, [r3, #28]
 2312 003c 020054E1 		cmp	r4, r2
 2313 0040 2200000A 		beq	.L724
 2314 0044 242093E5 		ldr	r2, [r3, #36]
 2315 0048 020054E1 		cmp	r4, r2
 2316 004c 2100000A 		beq	.L725
 2317 0050 2C2093E5 		ldr	r2, [r3, #44]
 2318 0054 020054E1 		cmp	r4, r2
 2319 0058 2000000A 		beq	.L726
 2320 005c 342093E5 		ldr	r2, [r3, #52]
 2321 0060 020054E1 		cmp	r4, r2
 2322 0064 0600000A 		beq	.L727
 2323 0068 3C2093E5 		ldr	r2, [r3, #60]
 2324 006c 020054E1 		cmp	r4, r2
 2325 0070 0720A003 		moveq	r2, #7
 2326 0074 0300000A 		beq	.L719
 2327 0078 0400A0E1 		mov	r0, r4
 2328 007c 1040BDE8 		pop	{r4, lr}
 2329 0080 FEFFFFEA 		b	vPortFree
 2330              	.L727:
 2331 0084 0620A0E3 		mov	r2, #6
 2332              	.L719:
 2333 0088 820183E0 		add	r0, r3, r2, lsl #3
 2334 008c 0010A0E3 		mov	r1, #0
 2335 0090 821183E7 		str	r1, [r3, r2, lsl #3]
 2336 0094 041080E5 		str	r1, [r0, #4]
 2337 0098 0400A0E1 		mov	r0, r4
 2338 009c 1040BDE8 		pop	{r4, lr}
 2339 00a0 FEFFFFEA 		b	vPortFree
 2340              	.L729:
 2341 00a4 000000E3 		movw	r0, #:lower16:.LC0
 2342 00a8 991700E3 		movw	r1, #1945
 2343 00ac 000040E3 		movt	r0, #:upper16:.LC0
 2344 00b0 FEFFFFEB 		bl	R_OS_AssertCalled
 2345 00b4 D4FFFFEA 		b	.L718
 2346              	.L721:
 2347 00b8 0020A0E3 		mov	r2, #0
 2348 00bc F1FFFFEA 		b	.L719
 2349              	.L722:
 2350 00c0 0120A0E3 		mov	r2, #1
 2351 00c4 EFFFFFEA 		b	.L719
 2352              	.L723:
 2353 00c8 0220A0E3 		mov	r2, #2
 2354 00cc EDFFFFEA 		b	.L719
 2355              	.L724:
 2356 00d0 0320A0E3 		mov	r2, #3
 2357 00d4 EBFFFFEA 		b	.L719
 2358              	.L725:
 2359 00d8 0420A0E3 		mov	r2, #4
 2360 00dc E9FFFFEA 		b	.L719
 2361              	.L726:
 2362 00e0 0520A0E3 		mov	r2, #5
 2363 00e4 E7FFFFEA 		b	.L719
 2365              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 2366              		.align	2
 2367              		.global	uxQueueGetQueueNumber
 2368              		.syntax unified
 2369              		.arm
 2370              		.fpu neon
 2372              	uxQueueGetQueueNumber:
 2373              		@ args = 0, pretend = 0, frame = 0
 2374              		@ frame_needed = 0, uses_anonymous_args = 0
 2375              		@ link register save eliminated.
 2376 0000 480090E5 		ldr	r0, [r0, #72]
 2377 0004 1EFF2FE1 		bx	lr
 2379              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 2380              		.align	2
 2381              		.global	vQueueSetQueueNumber
 2382              		.syntax unified
 2383              		.arm
 2384              		.fpu neon
 2386              	vQueueSetQueueNumber:
 2387              		@ args = 0, pretend = 0, frame = 0
 2388              		@ frame_needed = 0, uses_anonymous_args = 0
 2389              		@ link register save eliminated.
 2390 0000 481080E5 		str	r1, [r0, #72]
 2391 0004 1EFF2FE1 		bx	lr
 2393              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 2394              		.align	2
 2395              		.global	ucQueueGetQueueType
 2396              		.syntax unified
 2397              		.arm
 2398              		.fpu neon
 2400              	ucQueueGetQueueType:
 2401              		@ args = 0, pretend = 0, frame = 0
 2402              		@ frame_needed = 0, uses_anonymous_args = 0
 2403              		@ link register save eliminated.
 2404 0000 4C00D0E5 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 2405 0004 1EFF2FE1 		bx	lr
 2407              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2408              		.align	2
 2409              		.global	xQueueIsQueueEmptyFromISR
 2410              		.syntax unified
 2411              		.arm
 2412              		.fpu neon
 2414              	xQueueIsQueueEmptyFromISR:
 2415              		@ args = 0, pretend = 0, frame = 0
 2416              		@ frame_needed = 0, uses_anonymous_args = 0
 2417 0000 10402DE9 		push	{r4, lr}
 2418 0004 004050E2 		subs	r4, r0, #0
 2419 0008 0300000A 		beq	.L736
 2420              	.L734:
 2421 000c 380094E5 		ldr	r0, [r4, #56]
 2422 0010 100F6FE1 		clz	r0, r0
 2423 0014 A002A0E1 		lsr	r0, r0, #5
 2424 0018 1080BDE8 		pop	{r4, pc}
 2425              	.L736:
 2426 001c 000000E3 		movw	r0, #:lower16:.LC0
 2427 0020 EA1800E3 		movw	r1, #2282
 2428 0024 000040E3 		movt	r0, #:upper16:.LC0
 2429 0028 FEFFFFEB 		bl	R_OS_AssertCalled
 2430 002c F6FFFFEA 		b	.L734
 2432              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2433              		.align	2
 2434              		.global	xQueueIsQueueFullFromISR
 2435              		.syntax unified
 2436              		.arm
 2437              		.fpu neon
 2439              	xQueueIsQueueFullFromISR:
 2440              		@ args = 0, pretend = 0, frame = 0
 2441              		@ frame_needed = 0, uses_anonymous_args = 0
 2442 0000 10402DE9 		push	{r4, lr}
 2443 0004 004050E2 		subs	r4, r0, #0
 2444 0008 0500000A 		beq	.L740
 2445              	.L738:
 2446 000c 383094E5 		ldr	r3, [r4, #56]
 2447 0010 3C0094E5 		ldr	r0, [r4, #60]
 2448 0014 030040E0 		sub	r0, r0, r3
 2449 0018 100F6FE1 		clz	r0, r0
 2450 001c A002A0E1 		lsr	r0, r0, #5
 2451 0020 1080BDE8 		pop	{r4, pc}
 2452              	.L740:
 2453 0024 000000E3 		movw	r0, #:lower16:.LC0
 2454 0028 111900E3 		movw	r1, #2321
 2455 002c 000040E3 		movt	r0, #:upper16:.LC0
 2456 0030 FEFFFFEB 		bl	R_OS_AssertCalled
 2457 0034 F4FFFFEA 		b	.L738
 2459              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2460              		.align	2
 2461              		.global	vQueueAddToRegistry
 2462              		.syntax unified
 2463              		.arm
 2464              		.fpu neon
 2466              	vQueueAddToRegistry:
 2467              		@ args = 0, pretend = 0, frame = 0
 2468              		@ frame_needed = 0, uses_anonymous_args = 0
 2469              		@ link register save eliminated.
 2470 0000 003000E3 		movw	r3, #:lower16:xQueueRegistry
 2471 0004 003040E3 		movt	r3, #:upper16:xQueueRegistry
 2472 0008 002093E5 		ldr	r2, [r3]
 2473 000c 000052E3 		cmp	r2, #0
 2474 0010 1700000A 		beq	.L742
 2475 0014 082093E5 		ldr	r2, [r3, #8]
 2476 0018 000052E3 		cmp	r2, #0
 2477 001c 1800000A 		beq	.L745
 2478 0020 102093E5 		ldr	r2, [r3, #16]
 2479 0024 000052E3 		cmp	r2, #0
 2480 0028 1700000A 		beq	.L746
 2481 002c 182093E5 		ldr	r2, [r3, #24]
 2482 0030 000052E3 		cmp	r2, #0
 2483 0034 1600000A 		beq	.L747
 2484 0038 202093E5 		ldr	r2, [r3, #32]
 2485 003c 000052E3 		cmp	r2, #0
 2486 0040 1500000A 		beq	.L748
 2487 0044 282093E5 		ldr	r2, [r3, #40]
 2488 0048 000052E3 		cmp	r2, #0
 2489 004c 1400000A 		beq	.L749
 2490 0050 302093E5 		ldr	r2, [r3, #48]
 2491 0054 000052E3 		cmp	r2, #0
 2492 0058 0400000A 		beq	.L750
 2493 005c 382093E5 		ldr	r2, [r3, #56]
 2494 0060 000052E3 		cmp	r2, #0
 2495 0064 0720A003 		moveq	r2, #7
 2496 0068 0100000A 		beq	.L742
 2497 006c 1EFF2FE1 		bx	lr
 2498              	.L750:
 2499 0070 0620A0E3 		mov	r2, #6
 2500              	.L742:
 2501 0074 82C183E0 		add	ip, r3, r2, lsl #3
 2502 0078 821183E7 		str	r1, [r3, r2, lsl #3]
 2503 007c 04008CE5 		str	r0, [ip, #4]
 2504 0080 1EFF2FE1 		bx	lr
 2505              	.L745:
 2506 0084 0120A0E3 		mov	r2, #1
 2507 0088 F9FFFFEA 		b	.L742
 2508              	.L746:
 2509 008c 0220A0E3 		mov	r2, #2
 2510 0090 F7FFFFEA 		b	.L742
 2511              	.L747:
 2512 0094 0320A0E3 		mov	r2, #3
 2513 0098 F5FFFFEA 		b	.L742
 2514              	.L748:
 2515 009c 0420A0E3 		mov	r2, #4
 2516 00a0 F3FFFFEA 		b	.L742
 2517              	.L749:
 2518 00a4 0520A0E3 		mov	r2, #5
 2519 00a8 F1FFFFEA 		b	.L742
 2521              		.section	.text.pcQueueGetName,"ax",%progbits
 2522              		.align	2
 2523              		.global	pcQueueGetName
 2524              		.syntax unified
 2525              		.arm
 2526              		.fpu neon
 2528              	pcQueueGetName:
 2529              		@ args = 0, pretend = 0, frame = 0
 2530              		@ frame_needed = 0, uses_anonymous_args = 0
 2531              		@ link register save eliminated.
 2532 0000 003000E3 		movw	r3, #:lower16:xQueueRegistry
 2533 0004 003040E3 		movt	r3, #:upper16:xQueueRegistry
 2534 0008 042093E5 		ldr	r2, [r3, #4]
 2535 000c 020050E1 		cmp	r0, r2
 2536 0010 1A00000A 		beq	.L754
 2537 0014 0C2093E5 		ldr	r2, [r3, #12]
 2538 0018 020050E1 		cmp	r0, r2
 2539 001c 1900000A 		beq	.L755
 2540 0020 142093E5 		ldr	r2, [r3, #20]
 2541 0024 020050E1 		cmp	r0, r2
 2542 0028 1800000A 		beq	.L756
 2543 002c 1C2093E5 		ldr	r2, [r3, #28]
 2544 0030 020050E1 		cmp	r0, r2
 2545 0034 1700000A 		beq	.L757
 2546 0038 242093E5 		ldr	r2, [r3, #36]
 2547 003c 020050E1 		cmp	r0, r2
 2548 0040 1600000A 		beq	.L758
 2549 0044 2C2093E5 		ldr	r2, [r3, #44]
 2550 0048 020050E1 		cmp	r0, r2
 2551 004c 1500000A 		beq	.L759
 2552 0050 342093E5 		ldr	r2, [r3, #52]
 2553 0054 020050E1 		cmp	r0, r2
 2554 0058 0500000A 		beq	.L760
 2555 005c 3C2093E5 		ldr	r2, [r3, #60]
 2556 0060 000052E1 		cmp	r2, r0
 2557 0064 0720A003 		moveq	r2, #7
 2558 0068 0200000A 		beq	.L752
 2559 006c 0000A0E3 		mov	r0, #0
 2560 0070 1EFF2FE1 		bx	lr
 2561              	.L760:
 2562 0074 0620A0E3 		mov	r2, #6
 2563              	.L752:
 2564 0078 820193E7 		ldr	r0, [r3, r2, lsl #3]
 2565 007c 1EFF2FE1 		bx	lr
 2566              	.L754:
 2567 0080 0020A0E3 		mov	r2, #0
 2568 0084 FBFFFFEA 		b	.L752
 2569              	.L755:
 2570 0088 0120A0E3 		mov	r2, #1
 2571 008c F9FFFFEA 		b	.L752
 2572              	.L756:
 2573 0090 0220A0E3 		mov	r2, #2
 2574 0094 F7FFFFEA 		b	.L752
 2575              	.L757:
 2576 0098 0320A0E3 		mov	r2, #3
 2577 009c F5FFFFEA 		b	.L752
 2578              	.L758:
 2579 00a0 0420A0E3 		mov	r2, #4
 2580 00a4 F3FFFFEA 		b	.L752
 2581              	.L759:
 2582 00a8 0520A0E3 		mov	r2, #5
 2583 00ac F1FFFFEA 		b	.L752
 2585              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2586              		.align	2
 2587              		.global	vQueueUnregisterQueue
 2588              		.syntax unified
 2589              		.arm
 2590              		.fpu neon
 2592              	vQueueUnregisterQueue:
 2593              		@ args = 0, pretend = 0, frame = 0
 2594              		@ frame_needed = 0, uses_anonymous_args = 0
 2595              		@ link register save eliminated.
 2596 0000 003000E3 		movw	r3, #:lower16:xQueueRegistry
 2597 0004 003040E3 		movt	r3, #:upper16:xQueueRegistry
 2598 0008 042093E5 		ldr	r2, [r3, #4]
 2599 000c 020050E1 		cmp	r0, r2
 2600 0010 1C00000A 		beq	.L765
 2601 0014 0C2093E5 		ldr	r2, [r3, #12]
 2602 0018 020050E1 		cmp	r0, r2
 2603 001c 1B00000A 		beq	.L766
 2604 0020 142093E5 		ldr	r2, [r3, #20]
 2605 0024 020050E1 		cmp	r0, r2
 2606 0028 1A00000A 		beq	.L767
 2607 002c 1C2093E5 		ldr	r2, [r3, #28]
 2608 0030 020050E1 		cmp	r0, r2
 2609 0034 1900000A 		beq	.L768
 2610 0038 242093E5 		ldr	r2, [r3, #36]
 2611 003c 020050E1 		cmp	r0, r2
 2612 0040 1800000A 		beq	.L769
 2613 0044 2C2093E5 		ldr	r2, [r3, #44]
 2614 0048 020050E1 		cmp	r0, r2
 2615 004c 1700000A 		beq	.L770
 2616 0050 342093E5 		ldr	r2, [r3, #52]
 2617 0054 020050E1 		cmp	r0, r2
 2618 0058 0400000A 		beq	.L771
 2619 005c 3C2093E5 		ldr	r2, [r3, #60]
 2620 0060 000052E1 		cmp	r2, r0
 2621 0064 0720A003 		moveq	r2, #7
 2622 0068 0100000A 		beq	.L763
 2623 006c 1EFF2FE1 		bx	lr
 2624              	.L771:
 2625 0070 0620A0E3 		mov	r2, #6
 2626              	.L763:
 2627 0074 820183E0 		add	r0, r3, r2, lsl #3
 2628 0078 0010A0E3 		mov	r1, #0
 2629 007c 821183E7 		str	r1, [r3, r2, lsl #3]
 2630 0080 041080E5 		str	r1, [r0, #4]
 2631 0084 1EFF2FE1 		bx	lr
 2632              	.L765:
 2633 0088 0020A0E3 		mov	r2, #0
 2634 008c F8FFFFEA 		b	.L763
 2635              	.L766:
 2636 0090 0120A0E3 		mov	r2, #1
 2637 0094 F6FFFFEA 		b	.L763
 2638              	.L767:
 2639 0098 0220A0E3 		mov	r2, #2
 2640 009c F4FFFFEA 		b	.L763
 2641              	.L768:
 2642 00a0 0320A0E3 		mov	r2, #3
 2643 00a4 F2FFFFEA 		b	.L763
 2644              	.L769:
 2645 00a8 0420A0E3 		mov	r2, #4
 2646 00ac F0FFFFEA 		b	.L763
 2647              	.L770:
 2648 00b0 0520A0E3 		mov	r2, #5
 2649 00b4 EEFFFFEA 		b	.L763
 2651              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 2652              		.align	2
 2653              		.global	vQueueWaitForMessageRestricted
 2654              		.syntax unified
 2655              		.arm
 2656              		.fpu neon
 2658              	vQueueWaitForMessageRestricted:
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 0, uses_anonymous_args = 0
 2661 0000 70402DE9 		push	{r4, r5, r6, lr}
 2662 0004 0050A0E1 		mov	r5, r0
 2663 0008 0140A0E1 		mov	r4, r1
 2664 000c 0260A0E1 		mov	r6, r2
 2665 0010 FEFFFFEB 		bl	vPortEnterCritical
 2666 0014 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 2667 0018 FF0053E3 		cmp	r3, #255
 2668 001c 0030A003 		moveq	r3, #0
 2669 0020 4430C505 		strbeq	r3, [r5, #68]
 2670 0024 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 2671 0028 FF0053E3 		cmp	r3, #255
 2672 002c 0030A003 		moveq	r3, #0
 2673 0030 4530C505 		strbeq	r3, [r5, #69]
 2674 0034 FEFFFFEB 		bl	vPortExitCritical
 2675 0038 383095E5 		ldr	r3, [r5, #56]
 2676 003c 000053E3 		cmp	r3, #0
 2677 0040 0300001A 		bne	.L775
 2678 0044 0620A0E1 		mov	r2, r6
 2679 0048 0410A0E1 		mov	r1, r4
 2680 004c 240085E2 		add	r0, r5, #36
 2681 0050 FEFFFFEB 		bl	vTaskPlaceOnEventListRestricted
 2682              	.L775:
 2683 0054 FEFFFFEB 		bl	vPortEnterCritical
 2684 0058 4530D5E5 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 2685 005c 7340AFE6 		sxtb	r4, r3
 2686 0060 000054E3 		cmp	r4, #0
 2687 0064 120000DA 		ble	.L779
 2688 0068 243095E5 		ldr	r3, [r5, #36]
 2689 006c 000053E3 		cmp	r3, #0
 2690 0070 0F00000A 		beq	.L779
 2691 0074 246085E2 		add	r6, r5, #36
 2692 0078 070000EA 		b	.L780
 2693              	.L781:
 2694 007c 013044E2 		sub	r3, r4, #1
 2695 0080 7330EFE6 		uxtb	r3, r3
 2696 0084 000053E3 		cmp	r3, #0
 2697 0088 7340AFE6 		sxtb	r4, r3
 2698 008c 0800000A 		beq	.L779
 2699 0090 243095E5 		ldr	r3, [r5, #36]
 2700 0094 000053E3 		cmp	r3, #0
 2701 0098 0500000A 		beq	.L779
 2702              	.L780:
 2703 009c 0600A0E1 		mov	r0, r6
 2704 00a0 FEFFFFEB 		bl	xTaskRemoveFromEventList
 2705 00a4 000050E3 		cmp	r0, #0
 2706 00a8 F3FFFF0A 		beq	.L781
 2707 00ac FEFFFFEB 		bl	vTaskMissedYield
 2708 00b0 F1FFFFEA 		b	.L781
 2709              	.L779:
 2710 00b4 0030E0E3 		mvn	r3, #0
 2711 00b8 4530C5E5 		strb	r3, [r5, #69]
 2712 00bc FEFFFFEB 		bl	vPortExitCritical
 2713 00c0 FEFFFFEB 		bl	vPortEnterCritical
 2714 00c4 4430D5E5 		ldrb	r3, [r5, #68]	@ zero_extendqisi2
 2715 00c8 7340AFE6 		sxtb	r4, r3
 2716 00cc 000054E3 		cmp	r4, #0
 2717 00d0 120000DA 		ble	.L778
 2718 00d4 103095E5 		ldr	r3, [r5, #16]
 2719 00d8 000053E3 		cmp	r3, #0
 2720 00dc 0F00000A 		beq	.L778
 2721 00e0 106085E2 		add	r6, r5, #16
 2722 00e4 070000EA 		b	.L783
 2723              	.L784:
 2724 00e8 013044E2 		sub	r3, r4, #1
 2725 00ec 7330EFE6 		uxtb	r3, r3
 2726 00f0 000053E3 		cmp	r3, #0
 2727 00f4 7340AFE6 		sxtb	r4, r3
 2728 00f8 0800000A 		beq	.L778
 2729 00fc 103095E5 		ldr	r3, [r5, #16]
 2730 0100 000053E3 		cmp	r3, #0
 2731 0104 0500000A 		beq	.L778
 2732              	.L783:
 2733 0108 0600A0E1 		mov	r0, r6
 2734 010c FEFFFFEB 		bl	xTaskRemoveFromEventList
 2735 0110 000050E3 		cmp	r0, #0
 2736 0114 F3FFFF0A 		beq	.L784
 2737 0118 FEFFFFEB 		bl	vTaskMissedYield
 2738 011c F1FFFFEA 		b	.L784
 2739              	.L778:
 2740 0120 0030E0E3 		mvn	r3, #0
 2741 0124 4430C5E5 		strb	r3, [r5, #68]
 2742 0128 7040BDE8 		pop	{r4, r5, r6, lr}
 2743 012c FEFFFFEA 		b	vPortExitCritical
 2745              		.comm	xQueueRegistry,64,4
 2746              		.section	.rodata.xQueueGenericReset.str1.4,"aMS",%progbits,1
 2747              		.align	2
 2748              	.LC0:
 2749 0000 2E2E2F73 		.ascii	"../src/FreeRTOS/queue.c\000"
 2749      72632F46 
 2749      72656552 
 2749      544F532F 
 2749      71756575 
 2750              		.ident	"GCC: (GNU Tools for ARM Embedded Processors 6-2017-q2-update) 6.3.1 20170620 (release) [AR
DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:14     .text.xQueueGenericReset:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:20     .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2748   .rodata.xQueueGenericReset.str1.4:00000000 .LC0
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:79     .text.xQueueGenericCreate:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:85     .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:138    .text.xQueueGetMutexHolder:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:144    .text.xQueueGetMutexHolder:00000000 xQueueGetMutexHolder
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:159    .text.xQueueGetMutexHolderFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:165    .text.xQueueGetMutexHolderFromISR:00000000 xQueueGetMutexHolderFromISR
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:185    .text.xQueueCreateCountingSemaphore:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:191    .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:260    .text.xQueueGenericSend:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:266    .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:655    .text.xQueueCreateMutex:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:661    .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:709    .text.xQueueGiveMutexRecursive:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:715    .text.xQueueGiveMutexRecursive:00000000 xQueueGiveMutexRecursive
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:751    .text.xQueueGenericSendFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:757    .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:899    .text.xQueueGiveFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:905    .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:979    .text.xQueueReceive:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:985    .text.xQueueReceive:00000000 xQueueReceive
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:1315   .text.xQueueSemaphoreTake:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:1321   .text.xQueueSemaphoreTake:00000000 xQueueSemaphoreTake
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:1680   .text.xQueueTakeMutexRecursive:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:1686   .text.xQueueTakeMutexRecursive:00000000 xQueueTakeMutexRecursive
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:1720   .text.xQueuePeek:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:1726   .text.xQueuePeek:00000000 xQueuePeek
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2055   .text.xQueueReceiveFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2061   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2137   .text.xQueuePeekFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2143   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2210   .text.uxQueueMessagesWaiting:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2216   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2236   .text.uxQueueSpacesAvailable:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2242   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2264   .text.uxQueueMessagesWaitingFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2270   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2287   .text.vQueueDelete:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2293   .text.vQueueDelete:00000000 vQueueDelete
                            *COM*:00000040 xQueueRegistry
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2366   .text.uxQueueGetQueueNumber:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2372   .text.uxQueueGetQueueNumber:00000000 uxQueueGetQueueNumber
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2380   .text.vQueueSetQueueNumber:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2386   .text.vQueueSetQueueNumber:00000000 vQueueSetQueueNumber
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2394   .text.ucQueueGetQueueType:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2400   .text.ucQueueGetQueueType:00000000 ucQueueGetQueueType
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2408   .text.xQueueIsQueueEmptyFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2414   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2433   .text.xQueueIsQueueFullFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2439   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2460   .text.vQueueAddToRegistry:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2466   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2522   .text.pcQueueGetName:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2528   .text.pcQueueGetName:00000000 pcQueueGetName
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2586   .text.vQueueUnregisterQueue:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2592   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2652   .text.vQueueWaitForMessageRestricted:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2658   .text.vQueueWaitForMessageRestricted:00000000 vQueueWaitForMessageRestricted
C:\Users\a5050395\AppData\Local\Temp\cc4iX0Jp.s:2747   .rodata.xQueueGenericReset.str1.4:00000000 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskRemoveFromEventList
vListInitialise
R_OS_AssertCalled
pvPortMalloc
xTaskGetSchedulerState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskMissedYield
xTaskResumeAll
vTaskPlaceOnEventList
vTaskInternalSetTimeOutState
memcpy
xTaskPriorityDisinherit
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
ulPortSetInterruptMask
vPortClearInterruptMask
vTaskPriorityDisinheritAfterTimeout
xTaskPriorityInherit
pvTaskIncrementMutexHeldCount
vPortFree
vTaskPlaceOnEventListRestricted
