
;; Function const TfLiteRegistration* tflite::MicroMutableOpResolver<tOpCount>::FindOp(tflite::BuiltinOperator) const [with unsigned int tOpCount = 5u] (_ZNK6tflite22MicroMutableOpResolverILj5EE6FindOpENS_15BuiltinOperatorE, funcdef_no=10155, decl_uid=186251, cgraph_uid=7104, symbol_order=7175)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:45:29: note: vectorized 0 loops in function.
const TfLiteRegistration* tflite::MicroMutableOpResolver<tOpCount>::FindOp(tflite::BuiltinOperator) const [with unsigned int tOpCount = 5u] (const struct MicroMutableOpResolver * const this, BuiltinOperator op)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * _2;
  sizetype _7;
  long int _9;
  sizetype _10;
  unsigned int _14;
  long int _15;
  long int _16;

  <bb 2>:
  if (op_3(D) == 32)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:
  _14 = this_6(D)->registrations_len_;
  if (_14 == 0)
    goto <bb 11>;
  else
    goto <bb 4>;

  <bb 4>:
  _15 = MEM[(const struct TfLiteRegistration &)this_6(D)].registrations_[0].builtin_code;
  _16 = (long int) op_3(D);
  if (_15 == _16)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  goto <bb 10>;

  <bb 6>:
  registration_13 = &this_6(D)->registrations_[0];
  goto <bb 11>;

  <bb 7>:
  _9 = MEM[(const struct TfLiteRegistration &)this_6(D)].registrations_[i_11].builtin_code;
  if (_9 == _16)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # i_4 = PHI <i_11(7)>
  _7 = i_4 * 32;
  _10 = _7 + 4;
  registration_8 = this_6(D) + _10;
  goto <bb 11>;

  <bb 9>:

  <bb 10>:
  # i_17 = PHI <0(5), i_11(9)>
  i_11 = i_17 + 1;
  if (i_11 >= _14)
    goto <bb 11>;
  else
    goto <bb 7>;

  <bb 11>:
  # _2 = PHI <0B(3), registration_8(8), registration_13(6), 0B(2), 0B(10)>
  return _2;

}



;; Function TfLiteStatus (* tflite::MicroMutableOpResolver<tOpCount>::GetOpDataParser(tflite::BuiltinOperator) const)(const tflite::Operator*, tflite::ErrorReporter*, tflite::BuiltinDataAllocator*, void**) [with unsigned int tOpCount = 5u] (_ZNK6tflite22MicroMutableOpResolverILj5EE15GetOpDataParserENS_15BuiltinOperatorE, funcdef_no=11537, decl_uid=186257, cgraph_uid=8486, symbol_order=9353)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:71
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:71:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:71:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:71:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:71:5: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:68:41: note: vectorized 0 loops in function.
TfLiteStatus (* tflite::MicroMutableOpResolver<tOpCount>::GetOpDataParser(tflite::BuiltinOperator) const)(const tflite::Operator*, tflite::ErrorReporter*, tflite::BuiltinDataAllocator*, void**) [with unsigned int tOpCount = 5u] (const struct MicroMutableOpResolver * const this, BuiltinOperator op)
{
  unsigned int i;
  TfLiteStatus (*BuiltinParseFunction) (const struct Operator *, struct ErrorReporter *, struct BuiltinDataAllocator *, void * *) _2;
  unsigned int _5;
  BuiltinOperator _7;
  TfLiteStatus (*BuiltinParseFunction) (const struct Operator *, struct ErrorReporter *, struct BuiltinDataAllocator *, void * *) _10;
  BuiltinOperator _13;

  <bb 2>:
  _5 = this_4(D)->num_buitin_ops_;
  if (_5 <= 5)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  if (_5 == 0)
    goto <bb 12>;
  else
    goto <bb 5>;

  <bb 4>:
  abort ();

  <bb 5>:
  _13 = this_4(D)->builtin_codes_[0];
  if (op_8(D) == _13)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 6>:
  _7 = this_4(D)->builtin_codes_[i_9];
  if (_7 == op_8(D))
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 11>;

  <bb 8>:
  # i_1 = PHI <i_9(6)>

  <bb 9>:
  # i_15 = PHI <i_1(8), 0(5)>
  _10 = this_4(D)->builtin_parsers_[i_15];
  goto <bb 12>;

  <bb 10>:

  <bb 11>:
  # i_14 = PHI <0(10), i_9(7)>
  i_9 = i_14 + 1;
  if (_5 <= i_9)
    goto <bb 12>;
  else
    goto <bb 6>;

  <bb 12>:
  # _2 = PHI <_10(9), 0B(11), 0B(3)>
  return _2;

}



;; Function const TfLiteRegistration* tflite::MicroMutableOpResolver<tOpCount>::FindOp(const char*) const [with unsigned int tOpCount = 5u] (_ZNK6tflite22MicroMutableOpResolverILj5EE6FindOpEPKc, funcdef_no=11536, decl_uid=186254, cgraph_uid=8485, symbol_order=9352)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:57:29: note: vectorized 0 loops in function.
const TfLiteRegistration* tflite::MicroMutableOpResolver<tOpCount>::FindOp(const char*) const [with unsigned int tOpCount = 5u] (const struct MicroMutableOpResolver * const this, const char * op)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  sizetype _1;
  const struct TfLiteRegistration * _2;
  sizetype _5;
  long int _7;
  const char * _9;
  int _11;
  unsigned int _13;

  <bb 2>:
  _13 = this_4(D)->registrations_len_;
  if (_13 == 0)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # i_14 = PHI <0(3), i_8(8)>
  _7 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_14].builtin_code;
  if (_7 == 32)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  _9 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_14].custom_name;
  _11 = strcmp (_9, op_10(D));
  if (_11 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # i_21 = PHI <i_14(5)>
  _5 = i_21 * 32;
  _1 = _5 + 4;
  registration_6 = this_4(D) + _1;
  goto <bb 9>;

  <bb 7>:
  i_8 = i_14 + 1;
  if (i_8 >= _13)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 4>;

  <bb 9>:
  # _2 = PHI <registration_6(6), 0B(7), 0B(2)>
  return _2;

}



;; Function virtual const TfLiteRegistration* tflite::MicroOpResolver::FindOp(tflite::BuiltinOperator, int) const (_ZNK6tflite15MicroOpResolver6FindOpENS_15BuiltinOperatorEi, funcdef_no=6917, decl_uid=184858, cgraph_uid=3957, symbol_order=3997)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_op_resolver.h:53:29: note: vectorized 0 loops in function.
virtual const TfLiteRegistration* tflite::MicroOpResolver::FindOp(tflite::BuiltinOperator, int) const (const struct MicroOpResolver * const this, BuiltinOperator op, int version)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244157;
  int (*__vtbl_ptr_type) () * _3;
  int (*__vtbl_ptr_type) () _4;
  long int _6;
  const struct TfLiteRegistration * _7;
  void * PROF_8;
  const struct TfLiteRegistration * _10;
  long int _11;
  sizetype _12;
  long int _15;
  sizetype _16;
  unsigned int _19;

  <bb 2>:
  _3 = this_2(D)->D.184879._vptr.OpResolver;
  _4 = MEM[(int (*__vtbl_ptr_type) () *)_3 + 24B];
  PROF_8 = [obj_type_ref] OBJ_TYPE_REF(_4;(const struct MicroOpResolver)this_2(D)->6);
  if (PROF_8 == FindOp)
    goto <bb 3>;
  else
    goto <bb 12>;

  <bb 3>:
  if (op_5(D) == 32)
    goto <bb 13>;
  else
    goto <bb 4>;

  <bb 4>:
  _19 = MEM[(const struct MicroMutableOpResolver *)this_2(D)].registrations_len_;
  if (_19 == 0)
    goto <bb 13>;
  else
    goto <bb 5>;

  <bb 5>:
  _11 = MEM[(const struct TfLiteRegistration &)this_2(D)].registrations_[0].builtin_code;
  _6 = (long int) op_5(D);
  if (_6 == _11)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 11>;

  <bb 7>:
  registration_9 = &MEM[(const struct MicroMutableOpResolver *)this_2(D)].registrations_[0];
  goto <bb 13>;

  <bb 8>:
  _15 = MEM[(const struct TfLiteRegistration &)this_2(D)].registrations_[i_17].builtin_code;
  if (_6 == _15)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # i_18 = PHI <i_17(8)>
  _12 = i_18 * 32;
  _16 = _12 + 4;
  registration_14 = this_2(D) + _16;
  goto <bb 13>;

  <bb 10>:

  <bb 11>:
  # i_23 = PHI <0(6), i_17(10)>
  i_17 = i_23 + 1;
  if (i_17 >= _19)
    goto <bb 13>;
  else
    goto <bb 8>;

  <bb 12>:
  _10 = OBJ_TYPE_REF(_4;(const struct MicroOpResolver)this_2(D)->6) (this_2(D), op_5(D));

  <bb 13>:
  # _7 = PHI <_10(12), registration_9(7), 0B(4), registration_14(9), 0B(3), 0B(11)>
  return _7;

}



;; Function virtual const TfLiteRegistration* tflite::MicroOpResolver::FindOp(const char*, int) const (_ZNK6tflite15MicroOpResolver6FindOpEPKci, funcdef_no=6918, decl_uid=184862, cgraph_uid=3958, symbol_order=3998)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:60:25: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_op_resolver.h:60:29: note: vectorized 0 loops in function.
virtual const TfLiteRegistration* tflite::MicroOpResolver::FindOp(const char*, int) const (const struct MicroOpResolver * const this, const char * op, int version)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244164;
  int (*__vtbl_ptr_type) () * _3;
  int (*__vtbl_ptr_type) () _4;
  const struct TfLiteRegistration * _7;
  void * PROF_8;
  unsigned int _9;
  const struct TfLiteRegistration * _10;
  sizetype _12;
  sizetype _13;
  long int _15;
  const char * _16;
  int _17;

  <bb 2>:
  _3 = this_2(D)->D.184879._vptr.OpResolver;
  _4 = MEM[(int (*__vtbl_ptr_type) () *)_3 + 28B];
  PROF_8 = [obj_type_ref] OBJ_TYPE_REF(_4;(const struct MicroOpResolver)this_2(D)->7);
  if (PROF_8 == FindOp)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 3>:
  _9 = MEM[(const struct MicroMutableOpResolver *)this_2(D)].registrations_len_;
  if (_9 == 0)
    goto <bb 11>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # i_11 = PHI <0(4), i_18(9)>
  _15 = MEM[(const struct TfLiteRegistration &)this_2(D)].registrations_[i_11].builtin_code;
  if (_15 == 32)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  _16 = MEM[(const struct TfLiteRegistration &)this_2(D)].registrations_[i_11].custom_name;
  _17 = strcmp (_16, op_5(D));
  if (_17 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # i_27 = PHI <i_11(6)>
  _12 = i_27 * 32;
  _13 = _12 + 4;
  registration_14 = this_2(D) + _13;
  goto <bb 11>;

  <bb 8>:
  i_18 = i_11 + 1;
  if (_9 <= i_18)
    goto <bb 11>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 5>;

  <bb 10>:
  _10 = OBJ_TYPE_REF(_4;(const struct MicroOpResolver)this_2(D)->7) (this_2(D), op_5(D));

  <bb 11>:
  # _7 = PHI <_10(10), registration_14(7), 0B(8), 0B(3)>
  return _7;

}



;; Function void tfl_float_dnn_setupPre() (tfl_float_dnn_setupPre, funcdef_no=7042, decl_uid=8180, cgraph_uid=4000, symbol_order=4056)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/micro/micro_mutable_op_resolver.h:48:5: note: bad loop form.
../src/neural_networks/tensorflow_lite/TF_lite_float/tensorflowlite_float_dnn_compute.cc:55:6: note: vectorized 0 loops in function.
void tfl_float_dnn_setupPre() ()
{
  TfLiteStatus D.244252;
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244247;
  TfLiteStatus D.244242;
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244237;
  TfLiteStatus D.244232;
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244227;
  TfLiteStatus D.244222;
  TfLiteStatus D.244217;
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244212;
  TfLiteStatus D.244207;
  TfLiteStatus D.244202;
  const struct TfLiteRegistration & registration;
  unsigned int i;
  const struct TfLiteRegistration * D.244197;
  TfLiteStatus D.244192;
  struct TfLiteRegistration D.244187;
  TfLiteStatus D.244186;
  struct TfLiteRegistration D.244184;
  TfLiteStatus D.244183;
  struct TfLiteRegistration D.244181;
  TfLiteStatus D.244180;
  TfLiteStatus D.244178;
  TfLiteStatus D.244173;
  static struct MicroInterpreter static_interpreter;
  static struct MicroMutableOpResolver micro_op_resolver;
  static struct MicroProfiler micro_profiler;
  static struct MicroErrorReporter micro_error_reporter = {.D.9059={._vptr.ErrorReporter=&MEM[(void *)&_ZTVN6tflite18MicroErrorReporterE + 8B]}};
  struct TfLiteRegistration D.186522;
  struct TfLiteRegistration D.186520;
  unsigned char _9;
  int _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _18;
  int _20;
  unsigned char _21;
  long int _25;
  const uint8_t[1] * _27;
  unsigned char _29;
  int _31;
  struct ErrorReporter * error_reporter.8_32;
  unsigned char _43;
  int _45;
  const struct Model * model.5_46;
  struct ErrorReporter * error_reporter.8_47;
  struct MicroProfiler * profiler.11_48;
  struct ErrorReporter * error_reporter.8_54;
  struct MicroInterpreter * interpreter.12_56;
  TfLiteStatus _58;
  struct MicroInterpreter * interpreter.12_59;
  struct TfLiteTensor * _61;
  struct ErrorReporter * error_reporter.8_63;
  struct TfLiteIntArray * _64;
  int _65;
  struct ErrorReporter * error_reporter.8_67;
  struct TfLiteTensor * input.13_68;
  struct TfLiteIntArray * _69;
  int _70;
  int _71;
  int _72;
  int _73;
  struct TfLiteTensor * input.13_75;
  TfLiteType _76;
  struct ErrorReporter * error_reporter.8_77;
  struct ErrorReporter * error_reporter.8_79;
  struct MicroInterpreter * interpreter.12_81;
  struct TfLiteTensor * _83;
  struct ErrorReporter * error_reporter.8_85;
  struct TfLiteIntArray * _86;
  int _87;
  struct ErrorReporter * error_reporter.8_89;
  struct TfLiteTensor * output.14_90;
  struct TfLiteIntArray * _91;
  int _92;
  int _93;
  struct TfLiteTensor * output.14_95;
  TfLiteType _96;
  struct ErrorReporter * error_reporter.8_97;
  struct ErrorReporter * error_reporter.8_99;
  sizetype _101;
  sizetype _102;
  const uint8_t * _103;
  short unsigned int _104;
  int _105;
  short unsigned int _106;
  long int _107;
  sizetype _108;
  const void * _109;
  long unsigned int _110;
  long unsigned int _112;
  struct Model * _113;
  unsigned char _116;
  unsigned int _124;
  unsigned int prephitmp_125;
  unsigned int _126;
  unsigned int _129;
  unsigned int prephitmp_130;
  unsigned int _137;
  unsigned int _138;
  unsigned int _141;
  long int _145;
  long int _151;
  unsigned int _153;
  unsigned int _154;
  unsigned int _156;
  unsigned int _160;
  long int _164;
  unsigned int _165;
  unsigned int _172;
  unsigned int _173;
  unsigned int prephitmp_174;
  long int _183;
  unsigned int _184;
  unsigned int _186;
  unsigned int _191;
  unsigned int _192;
  long int _197;
  unsigned int _202;
  unsigned int _205;
  unsigned int _206;
  unsigned int _210;
  long int _211;
  unsigned int prephitmp_214;
  unsigned int _219;
  unsigned int _220;
  unsigned int _222;
  unsigned int prephitmp_226;
  long int _276;
  long int _277;
  long int _284;
  unsigned int _285;

  <bb 2>:
  _9 = __atomic_load_1 (&_ZGVZ22tfl_float_dnn_setupPreE20micro_error_reporter, 2);
  _12 = _9 & 1;
  if (_12 == 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 6>;

  <bb 4>:
  _11 = __cxa_guard_acquire (&_ZGVZ22tfl_float_dnn_setupPreE20micro_error_reporter);
  if (_11 != 0)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 5>:
  __cxa_guard_release (&_ZGVZ22tfl_float_dnn_setupPreE20micro_error_reporter);
  __aeabi_atexit (&micro_error_reporter, __comp_dtor , &__dso_handle);

  <bb 6>:
  error_reporter = &micro_error_reporter.D.9059;
  _18 = __atomic_load_1 (&_ZGVZ22tfl_float_dnn_setupPreE14micro_profiler, 2);
  _13 = _18 & 1;
  if (_13 == 0)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 10>;

  <bb 8>:
  _20 = __cxa_guard_acquire (&_ZGVZ22tfl_float_dnn_setupPreE14micro_profiler);
  if (_20 != 0)
    goto <bb 9>;
  else
    goto <bb 7>;

  <bb 9>:
  micro_profiler._vptr.MicroProfiler = &MEM[(void *)&_ZTVN6tflite13MicroProfilerE + 8B];
  micro_profiler.num_events_ = 0;
  __cxa_guard_release (&_ZGVZ22tfl_float_dnn_setupPreE14micro_profiler);
  __aeabi_atexit (&micro_profiler, __comp_dtor , &__dso_handle);

  <bb 10>:
  profiler = &micro_profiler;
  _112 = MEM[(uoffset_t *)&g_CNN_FE_Schrift_float_data];
  _113 = &g_CNN_FE_Schrift_float_data + _112;
  model = _113;
  _27 = &MEM[(const struct Table *)_113].data_;
  _25 = MEM[(const long int *)_113];
  _101 = (sizetype) _25;
  _102 = -_101;
  _103 = _27 + _102;
  _104 = MEM[(const short unsigned int *)_103];
  _105 = (int) _104;
  if (_105 > 4)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 65>;

  <bb 12>:
  _106 = MEM[(const short unsigned int *)_103 + 4B];
  if (_106 != 0)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 13>:
  _108 = (sizetype) _106;
  _109 = _27 + _108;
  _110 = MEM[(const long unsigned int *)_109];
  if (_110 != 3)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 14>:
  _29 = __atomic_load_1 (&_ZGVZ22tfl_float_dnn_setupPreE17micro_op_resolver, 2);
  _21 = _29 & 1;
  if (_21 == 0)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 18>;

  <bb 16>:
  _31 = __cxa_guard_acquire (&_ZGVZ22tfl_float_dnn_setupPreE17micro_op_resolver);
  if (_31 != 0)
    goto <bb 17>;
  else
    goto <bb 15>;

  <bb 17>:
  error_reporter.8_32 = error_reporter;
  MEM[(struct  &)&micro_op_resolver] ={v} {CLOBBER};
  micro_op_resolver.D.186459.D.184879._vptr.OpResolver = &MEM[(void *)&_ZTVN6tflite22MicroMutableOpResolverILj5EEE + 8B];
  micro_op_resolver.registrations_len_ = 0;
  micro_op_resolver.num_buitin_ops_ = 0;
  micro_op_resolver.error_reporter_ = error_reporter.8_32;
  __cxa_guard_release (&_ZGVZ22tfl_float_dnn_setupPreE17micro_op_resolver);
  __aeabi_atexit (&micro_op_resolver, __comp_dtor , &__dso_handle);

  <bb 18>:
  D.244187 = tflite::Register_CONV_2D (); [return slot optimization]
  _126 = micro_op_resolver.registrations_len_;
  if (_126 == 0)
    goto <bb 24>;
  else
    goto <bb 19>;

  <bb 19>:
  _276 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver].registrations_[0].builtin_code;
  if (_276 == 3)
    goto <bb 25>;
  else
    goto <bb 22>;

  <bb 20>:
  _145 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver].registrations_[i_147].builtin_code;
  if (_145 == 3)
    goto <bb 25>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 23>;

  <bb 22>:

  <bb 23>:
  # i_275 = PHI <0(22), i_147(21)>
  i_147 = i_275 + 1;
  if (_126 <= i_147)
    goto <bb 67>;
  else
    goto <bb 20>;

  <bb 24>:
  # _137 = PHI <_126(68), 0(18)>
  # prephitmp_174 = PHI <_186(68), 1(18)>
  micro_op_resolver.registrations_[_137] = D.244187;
  micro_op_resolver.registrations_[_137].builtin_code = 3;
  micro_op_resolver.registrations_len_ = prephitmp_174;
  _153 = micro_op_resolver.num_buitin_ops_;
  micro_op_resolver.builtin_codes_[_153] = 3;
  micro_op_resolver.builtin_parsers_[_153] = ParseConv2D;
  _154 = _153 + 1;
  micro_op_resolver.num_buitin_ops_ = _154;

  <bb 25>:
  D.244187 ={v} {CLOBBER};
  D.244184 = tflite::ops::micro::Register_MAX_POOL_2D (); [return slot optimization]
  _285 = micro_op_resolver.registrations_len_;
  if (_285 == 0)
    goto <bb 31>;
  else
    goto <bb 26>;

  <bb 26>:
  _284 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver].registrations_[0].builtin_code;
  if (_284 == 17)
    goto <bb 32>;
  else
    goto <bb 29>;

  <bb 27>:
  _164 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver].registrations_[i_166].builtin_code;
  if (_164 == 17)
    goto <bb 32>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 30>;

  <bb 29>:

  <bb 30>:
  # i_268 = PHI <0(29), i_166(28)>
  i_166 = i_268 + 1;
  if (i_166 >= _285)
    goto <bb 69>;
  else
    goto <bb 27>;

  <bb 31>:
  # _141 = PHI <_285(70), 0(25)>
  # prephitmp_214 = PHI <_222(70), 1(25)>
  micro_op_resolver.registrations_[_141] = D.244184;
  micro_op_resolver.registrations_[_141].builtin_code = 17;
  micro_op_resolver.registrations_len_ = prephitmp_214;
  _172 = micro_op_resolver.num_buitin_ops_;
  micro_op_resolver.builtin_codes_[_172] = 17;
  micro_op_resolver.builtin_parsers_[_172] = ParsePool;
  _173 = _172 + 1;
  micro_op_resolver.num_buitin_ops_ = _173;

  <bb 32>:
  D.244184 ={v} {CLOBBER};
  D.244181 = tflite::ops::micro::Register_RESHAPE (); [return slot optimization]
  _165 = micro_op_resolver.registrations_len_;
  if (_165 == 0)
    goto <bb 38>;
  else
    goto <bb 33>;

  <bb 33>:
  _151 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver].registrations_[0].builtin_code;
  if (_151 == 22)
    goto <bb 39>;
  else
    goto <bb 36>;

  <bb 34>:
  _183 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver].registrations_[i_185].builtin_code;
  if (_183 == 22)
    goto <bb 39>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 37>;

  <bb 36>:

  <bb 37>:
  # i_265 = PHI <0(36), i_185(35)>
  i_185 = i_265 + 1;
  if (_165 <= i_185)
    goto <bb 71>;
  else
    goto <bb 34>;

  <bb 38>:
  # _156 = PHI <_165(72), 0(32)>
  # prephitmp_226 = PHI <_210(72), 1(32)>
  micro_op_resolver.registrations_[_156] = D.244181;
  micro_op_resolver.registrations_[_156].builtin_code = 22;
  micro_op_resolver.registrations_len_ = prephitmp_226;
  _191 = micro_op_resolver.num_buitin_ops_;
  micro_op_resolver.builtin_codes_[_191] = 22;
  micro_op_resolver.builtin_parsers_[_191] = ParseReshape;
  _192 = _191 + 1;
  micro_op_resolver.num_buitin_ops_ = _192;

  <bb 39>:
  D.244181 ={v} {CLOBBER};
  D.186520 = tflite::Register_FULLY_CONNECTED (); [return slot optimization]
  _184 = micro_op_resolver.registrations_len_;
  if (_184 == 0)
    goto <bb 45>;
  else
    goto <bb 40>;

  <bb 40>:
  _107 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver].registrations_[0].builtin_code;
  if (_107 == 9)
    goto <bb 46>;
  else
    goto <bb 43>;

  <bb 41>:
  _197 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver].registrations_[i_199].builtin_code;
  if (_197 == 9)
    goto <bb 46>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 44>;

  <bb 43>:

  <bb 44>:
  # i_264 = PHI <0(43), i_199(42)>
  i_199 = i_264 + 1;
  if (_184 <= i_199)
    goto <bb 73>;
  else
    goto <bb 41>;

  <bb 45>:
  # _138 = PHI <_184(74), 0(39)>
  # prephitmp_125 = PHI <_124(74), 1(39)>
  micro_op_resolver.registrations_[_138] = D.186520;
  micro_op_resolver.registrations_[_138].builtin_code = 9;
  micro_op_resolver.registrations_len_ = prephitmp_125;
  _205 = micro_op_resolver.num_buitin_ops_;
  micro_op_resolver.builtin_codes_[_205] = 9;
  micro_op_resolver.builtin_parsers_[_205] = ParseFullyConnected;
  _206 = _205 + 1;
  micro_op_resolver.num_buitin_ops_ = _206;

  <bb 46>:
  D.186520 ={v} {CLOBBER};
  D.186522 = tflite::Register_SOFTMAX (); [return slot optimization]
  _202 = micro_op_resolver.registrations_len_;
  if (_202 == 0)
    goto <bb 52>;
  else
    goto <bb 47>;

  <bb 47>:
  _277 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver].registrations_[0].builtin_code;
  if (_277 == 25)
    goto <bb 53>;
  else
    goto <bb 50>;

  <bb 48>:
  _211 = MEM[(const struct TfLiteRegistration &)&micro_op_resolver].registrations_[i_213].builtin_code;
  if (_211 == 25)
    goto <bb 53>;
  else
    goto <bb 49>;

  <bb 49>:
  goto <bb 51>;

  <bb 50>:

  <bb 51>:
  # i_133 = PHI <0(50), i_213(49)>
  i_213 = i_133 + 1;
  if (_202 <= i_213)
    goto <bb 75>;
  else
    goto <bb 48>;

  <bb 52>:
  # _160 = PHI <_202(76), 0(46)>
  # prephitmp_130 = PHI <_129(76), 1(46)>
  micro_op_resolver.registrations_[_160] = D.186522;
  micro_op_resolver.registrations_[_160].builtin_code = 25;
  micro_op_resolver.registrations_len_ = prephitmp_130;
  _219 = micro_op_resolver.num_buitin_ops_;
  micro_op_resolver.builtin_codes_[_219] = 25;
  micro_op_resolver.builtin_parsers_[_219] = ParseSoftmax;
  _220 = _219 + 1;
  micro_op_resolver.num_buitin_ops_ = _220;

  <bb 53>:
  D.186522 ={v} {CLOBBER};
  _43 = __atomic_load_1 (&_ZGVZ22tfl_float_dnn_setupPreE18static_interpreter, 2);
  _116 = _43 & 1;
  if (_116 == 0)
    goto <bb 55>;
  else
    goto <bb 54>;

  <bb 54>:
  goto <bb 58>;

  <bb 55>:
  _45 = __cxa_guard_acquire (&_ZGVZ22tfl_float_dnn_setupPreE18static_interpreter);
  if (_45 != 0)
    goto <bb 56>;
  else
    goto <bb 54>;

  <bb 56>:
  model.5_46 = model;
  error_reporter.8_47 = error_reporter;
  profiler.11_48 = profiler;
  tflite::MicroInterpreter::MicroInterpreter (&static_interpreter, model.5_46, &micro_op_resolver.D.186459, &tensor_arena, 30720, error_reporter.8_47, profiler.11_48);

  <bb 57>:
  __cxa_guard_release (&_ZGVZ22tfl_float_dnn_setupPreE18static_interpreter);
  __aeabi_atexit (&static_interpreter, __comp_dtor , &__dso_handle);

  <bb 58>:
  interpreter = &static_interpreter;
  error_reporter.8_54 = error_reporter;
  tflite::ErrorReporter::Report (error_reporter.8_54, "   start allocating tensors");
  interpreter.12_56 = interpreter;
  _58 = tflite::MicroInterpreter::AllocateTensors (interpreter.12_56);
  if (_58 != 0)
    goto <bb 11>;
  else
    goto <bb 59>;

  <bb 59>:
  interpreter.12_59 = interpreter;
  _61 = tflite::MicroInterpreter::input (interpreter.12_59, 0);
  input = _61;
  error_reporter.8_63 = error_reporter;
  _64 = _61->dims;
  _65 = _64->size;
  tflite::ErrorReporter::Report (error_reporter.8_63, "   input  dimensions : %d", _65);
  error_reporter.8_67 = error_reporter;
  input.13_68 = input;
  _69 = input.13_68->dims;
  _70 = _69->data[0];
  _71 = _69->data[1];
  _72 = _69->data[2];
  _73 = _69->data[3];
  tflite::ErrorReporter::Report (error_reporter.8_67, "   input  shape      : %d, %d, %d, %d", _70, _71, _72, _73);
  input.13_75 = input;
  _76 = input.13_75->type;
  if (_76 == 1)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 60>:
  error_reporter.8_77 = error_reporter;
  tflite::ErrorReporter::Report (error_reporter.8_77, "   input  type       : %s", "tTfLiteFloat32");
  goto <bb 62>;

  <bb 61>:
  error_reporter.8_79 = error_reporter;
  tflite::ErrorReporter::Report (error_reporter.8_79, "   ATTENTION: input type is not %s", "tTfLiteFloat32");

  <bb 62>:
  interpreter.12_81 = interpreter;
  _83 = tflite::MicroInterpreter::output (interpreter.12_81, 0);
  output = _83;
  error_reporter.8_85 = error_reporter;
  _86 = _83->dims;
  _87 = _86->size;
  tflite::ErrorReporter::Report (error_reporter.8_85, "   output dimensions : %d", _87);
  error_reporter.8_89 = error_reporter;
  output.14_90 = output;
  _91 = output.14_90->dims;
  _92 = _91->data[0];
  _93 = _91->data[1];
  tflite::ErrorReporter::Report (error_reporter.8_89, "   output shape      : %d, %d", _92, _93);
  output.14_95 = output;
  _96 = output.14_95->type;
  if (_96 == 1)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  error_reporter.8_97 = error_reporter;
  tflite::ErrorReporter::Report (error_reporter.8_97, "   output type       : %s", "tTfLiteFloat32");
  goto <bb 65>;

  <bb 64>:
  error_reporter.8_99 = error_reporter;
  tflite::ErrorReporter::Report (error_reporter.8_99, "   ATTENTION: output type is not %s", "tTfLiteFloat32");

  <bb 65>:
  return;

<L37>:
  __cxa_guard_abort (&_ZGVZ22tfl_float_dnn_setupPreE18static_interpreter);
  resx 8

  <bb 67>:
  if (_126 > 4)
    goto <bb 25>;
  else
    goto <bb 68>;

  <bb 68>:
  _186 = _126 + 1;
  goto <bb 24>;

  <bb 69>:
  if (_285 > 4)
    goto <bb 32>;
  else
    goto <bb 70>;

  <bb 70>:
  _222 = _285 + 1;
  goto <bb 31>;

  <bb 71>:
  if (_165 > 4)
    goto <bb 39>;
  else
    goto <bb 72>;

  <bb 72>:
  _210 = _165 + 1;
  goto <bb 38>;

  <bb 73>:
  if (_184 > 4)
    goto <bb 46>;
  else
    goto <bb 74>;

  <bb 74>:
  _124 = _184 + 1;
  goto <bb 45>;

  <bb 75>:
  if (_202 > 4)
    goto <bb 53>;
  else
    goto <bb 76>;

  <bb 76>:
  _129 = _202 + 1;
  goto <bb 52>;

}


