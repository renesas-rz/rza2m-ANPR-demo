   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"stream_buffer.c"
  13              		.section	.text.xStreamBufferGenericCreate,"ax",%progbits
  14              		.align	2
  15              		.global	xStreamBufferGenericCreate
  16              		.syntax unified
  17              		.arm
  18              		.fpu neon
  20              	xStreamBufferGenericCreate:
  21              		@ args = 0, pretend = 0, frame = 0
  22              		@ frame_needed = 0, uses_anonymous_args = 0
  23 0000 040050E3 		cmp	r0, #4
  24 0004 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
  25 0008 0040A0E1 		mov	r4, r0
  26 000c 0160A0E1 		mov	r6, r1
  27 0010 0280A0E1 		mov	r8, r2
  28 0014 2000009A 		bls	.L14
  29 0018 060054E1 		cmp	r4, r6
  30 001c 2400003A 		bcc	.L15
  31              	.L3:
  32 0020 000056E3 		cmp	r6, #0
  33 0024 250084E2 		add	r0, r4, #37
  34 0028 0160A003 		moveq	r6, #1
  35 002c 014084E2 		add	r4, r4, #1
  36 0030 FEFFFFEB 		bl	pvPortMalloc
  37 0034 005050E2 		subs	r5, r0, #0
  38 0038 1500000A 		beq	.L6
  39 003c 247085E2 		add	r7, r5, #36
  40 0040 0420A0E1 		mov	r2, r4
  41 0044 0700A0E1 		mov	r0, r7
  42 0048 5510A0E3 		mov	r1, #85
  43 004c FEFFFFEB 		bl	memset
  44 0050 000057E1 		cmp	r7, r0
  45 0054 0300000A 		beq	.L7
  46 0058 000000E3 		movw	r0, #:lower16:.LC0
  47 005c 841400E3 		movw	r1, #1156
  48 0060 000040E3 		movt	r0, #:upper16:.LC0
  49 0064 FEFFFFEB 		bl	R_OS_AssertCalled
  50              	.L7:
  51 0068 2420A0E3 		mov	r2, #36
  52 006c 0010A0E3 		mov	r1, #0
  53 0070 0500A0E1 		mov	r0, r5
  54 0074 FEFFFFEB 		bl	memset
  55 0078 000058E3 		cmp	r8, #0
  56 007c 187085E5 		str	r7, [r5, #24]
  57 0080 1C30D515 		ldrbne	r3, [r5, #28]	@ zero_extendqisi2
  58 0084 084085E5 		str	r4, [r5, #8]
  59 0088 0C6085E5 		str	r6, [r5, #12]
  60 008c 01308313 		orrne	r3, r3, #1
  61 0090 1C30C515 		strbne	r3, [r5, #28]
  62              	.L6:
  63 0094 0500A0E1 		mov	r0, r5
  64 0098 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
  65              	.L14:
  66 009c 000000E3 		movw	r0, #:lower16:.LC0
  67 00a0 E310A0E3 		mov	r1, #227
  68 00a4 000040E3 		movt	r0, #:upper16:.LC0
  69 00a8 FEFFFFEB 		bl	R_OS_AssertCalled
  70 00ac 060054E1 		cmp	r4, r6
  71 00b0 DAFFFF2A 		bcs	.L3
  72              	.L15:
  73 00b4 000000E3 		movw	r0, #:lower16:.LC0
  74 00b8 E410A0E3 		mov	r1, #228
  75 00bc 000040E3 		movt	r0, #:upper16:.LC0
  76 00c0 FEFFFFEB 		bl	R_OS_AssertCalled
  77 00c4 D5FFFFEA 		b	.L3
  79              		.section	.text.vStreamBufferDelete,"ax",%progbits
  80              		.align	2
  81              		.global	vStreamBufferDelete
  82              		.syntax unified
  83              		.arm
  84              		.fpu neon
  86              	vStreamBufferDelete:
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89 0000 10402DE9 		push	{r4, lr}
  90 0004 004050E2 		subs	r4, r0, #0
  91 0008 0900000A 		beq	.L20
  92              	.L17:
  93 000c 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
  94 0010 0400A0E1 		mov	r0, r4
  95 0014 020013E3 		tst	r3, #2
  96 0018 0300000A 		beq	.L21
  97 001c 2420A0E3 		mov	r2, #36
  98 0020 0010A0E3 		mov	r1, #0
  99 0024 1040BDE8 		pop	{r4, lr}
 100 0028 FEFFFFEA 		b	memset
 101              	.L21:
 102 002c 1040BDE8 		pop	{r4, lr}
 103 0030 FEFFFFEA 		b	vPortFree
 104              	.L20:
 105 0034 000000E3 		movw	r0, #:lower16:.LC0
 106 0038 531100E3 		movw	r1, #339
 107 003c 000040E3 		movt	r0, #:upper16:.LC0
 108 0040 FEFFFFEB 		bl	R_OS_AssertCalled
 109 0044 F0FFFFEA 		b	.L17
 111              		.section	.text.xStreamBufferReset,"ax",%progbits
 112              		.align	2
 113              		.global	xStreamBufferReset
 114              		.syntax unified
 115              		.arm
 116              		.fpu neon
 118              	xStreamBufferReset:
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 122 0004 004050E2 		subs	r4, r0, #0
 123 0008 2500000A 		beq	.L33
 124              	.L23:
 125 000c 100094E5 		ldr	r0, [r4, #16]
 126 0010 000050E3 		cmp	r0, #0
 127 0014 0100000A 		beq	.L34
 128 0018 0000A0E3 		mov	r0, #0
 129 001c F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 130              	.L34:
 131 0020 143094E5 		ldr	r3, [r4, #20]
 132 0024 000053E3 		cmp	r3, #0
 133 0028 F087BD18 		popne	{r4, r5, r6, r7, r8, r9, r10, pc}
 134 002c 185094E5 		ldr	r5, [r4, #24]
 135 0030 5510A0E3 		mov	r1, #85
 136 0034 087094E5 		ldr	r7, [r4, #8]
 137 0038 1C60D4E5 		ldrb	r6, [r4, #28]	@ zero_extendqisi2
 138 003c 0500A0E1 		mov	r0, r5
 139 0040 208094E5 		ldr	r8, [r4, #32]
 140 0044 0720A0E1 		mov	r2, r7
 141 0048 0C9094E5 		ldr	r9, [r4, #12]
 142 004c FEFFFFEB 		bl	memset
 143 0050 000055E1 		cmp	r5, r0
 144 0054 016006E2 		and	r6, r6, #1
 145 0058 0300000A 		beq	.L25
 146 005c 000000E3 		movw	r0, #:lower16:.LC0
 147 0060 841400E3 		movw	r1, #1156
 148 0064 000040E3 		movt	r0, #:upper16:.LC0
 149 0068 FEFFFFEB 		bl	R_OS_AssertCalled
 150              	.L25:
 151 006c 2420A0E3 		mov	r2, #36
 152 0070 0010A0E3 		mov	r1, #0
 153 0074 0400A0E1 		mov	r0, r4
 154 0078 FEFFFFEB 		bl	memset
 155 007c 000056E3 		cmp	r6, #0
 156 0080 185084E5 		str	r5, [r4, #24]
 157 0084 1C30D415 		ldrbne	r3, [r4, #28]	@ zero_extendqisi2
 158 0088 0100A0E3 		mov	r0, #1
 159 008c 087084E5 		str	r7, [r4, #8]
 160 0090 0C9084E5 		str	r9, [r4, #12]
 161 0094 01308313 		orrne	r3, r3, #1
 162 0098 208084E5 		str	r8, [r4, #32]
 163 009c 1C30C415 		strbne	r3, [r4, #28]
 164 00a0 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 165              	.L33:
 166 00a4 000000E3 		movw	r0, #:lower16:.LC0
 167 00a8 791100E3 		movw	r1, #377
 168 00ac 000040E3 		movt	r0, #:upper16:.LC0
 169 00b0 FEFFFFEB 		bl	R_OS_AssertCalled
 170 00b4 D4FFFFEA 		b	.L23
 172              		.section	.text.xStreamBufferSetTriggerLevel,"ax",%progbits
 173              		.align	2
 174              		.global	xStreamBufferSetTriggerLevel
 175              		.syntax unified
 176              		.arm
 177              		.fpu neon
 179              	xStreamBufferSetTriggerLevel:
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 70402DE9 		push	{r4, r5, r6, lr}
 183 0004 005050E2 		subs	r5, r0, #0
 184 0008 0140A0E1 		mov	r4, r1
 185 000c 0700000A 		beq	.L41
 186              	.L36:
 187 0010 083095E5 		ldr	r3, [r5, #8]
 188 0014 000054E3 		cmp	r4, #0
 189 0018 0140A003 		moveq	r4, #1
 190 001c 030054E1 		cmp	r4, r3
 191 0020 0100A093 		movls	r0, #1
 192 0024 0C408595 		strls	r4, [r5, #12]
 193 0028 0000A083 		movhi	r0, #0
 194 002c 7080BDE8 		pop	{r4, r5, r6, pc}
 195              	.L41:
 196 0030 000000E3 		movw	r0, #:lower16:.LC0
 197 0034 AB1100E3 		movw	r1, #427
 198 0038 000040E3 		movt	r0, #:upper16:.LC0
 199 003c FEFFFFEB 		bl	R_OS_AssertCalled
 200 0040 F2FFFFEA 		b	.L36
 202              		.section	.text.xStreamBufferSpacesAvailable,"ax",%progbits
 203              		.align	2
 204              		.global	xStreamBufferSpacesAvailable
 205              		.syntax unified
 206              		.arm
 207              		.fpu neon
 209              	xStreamBufferSpacesAvailable:
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 10402DE9 		push	{r4, lr}
 213 0004 004050E2 		subs	r4, r0, #0
 214 0008 0800000A 		beq	.L46
 215              	.L43:
 216 000c 083094E5 		ldr	r3, [r4, #8]
 217 0010 000094E5 		ldr	r0, [r4]
 218 0014 042094E5 		ldr	r2, [r4, #4]
 219 0018 000083E0 		add	r0, r3, r0
 220 001c 010040E2 		sub	r0, r0, #1
 221 0020 020040E0 		sub	r0, r0, r2
 222 0024 000053E1 		cmp	r3, r0
 223 0028 03004090 		subls	r0, r0, r3
 224 002c 1080BDE8 		pop	{r4, pc}
 225              	.L46:
 226 0030 000000E3 		movw	r0, #:lower16:.LC0
 227 0034 721FA0E3 		mov	r1, #456
 228 0038 000040E3 		movt	r0, #:upper16:.LC0
 229 003c FEFFFFEB 		bl	R_OS_AssertCalled
 230 0040 F1FFFFEA 		b	.L43
 232              		.section	.text.xStreamBufferBytesAvailable,"ax",%progbits
 233              		.align	2
 234              		.global	xStreamBufferBytesAvailable
 235              		.syntax unified
 236              		.arm
 237              		.fpu neon
 239              	xStreamBufferBytesAvailable:
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 0000 10402DE9 		push	{r4, lr}
 243 0004 004050E2 		subs	r4, r0, #0
 244 0008 0700000A 		beq	.L51
 245              	.L48:
 246 000c 083094E5 		ldr	r3, [r4, #8]
 247 0010 040094E5 		ldr	r0, [r4, #4]
 248 0014 002094E5 		ldr	r2, [r4]
 249 0018 000083E0 		add	r0, r3, r0
 250 001c 020040E0 		sub	r0, r0, r2
 251 0020 000053E1 		cmp	r3, r0
 252 0024 03004090 		subls	r0, r0, r3
 253 0028 1080BDE8 		pop	{r4, pc}
 254              	.L51:
 255 002c 000000E3 		movw	r0, #:lower16:.LC0
 256 0030 1E1EA0E3 		mov	r1, #480
 257 0034 000040E3 		movt	r0, #:upper16:.LC0
 258 0038 FEFFFFEB 		bl	R_OS_AssertCalled
 259 003c F2FFFFEA 		b	.L48
 261              		.section	.text.xStreamBufferSend,"ax",%progbits
 262              		.align	2
 263              		.global	xStreamBufferSend
 264              		.syntax unified
 265              		.arm
 266              		.fpu neon
 268              	xStreamBufferSend:
 269              		@ args = 0, pretend = 0, frame = 24
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 272 0004 00A051E2 		subs	r10, r1, #0
 273 0008 1CD04DE2 		sub	sp, sp, #28
 274 000c 0050A0E1 		mov	r5, r0
 275 0010 0280A0E1 		mov	r8, r2
 276 0014 04308DE5 		str	r3, [sp, #4]
 277 0018 B400000A 		beq	.L116
 278              	.L53:
 279 001c 000055E3 		cmp	r5, #0
 280 0020 B700000A 		beq	.L117
 281              	.L54:
 282 0024 1C30D5E5 		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 283 0028 010013E3 		tst	r3, #1
 284 002c 04309DE5 		ldr	r3, [sp, #4]
 285 0030 04608812 		addne	r6, r8, #4
 286 0034 0860A001 		moveq	r6, r8
 287 0038 000053E3 		cmp	r3, #0
 288 003c 0E00001A 		bne	.L118
 289              	.L56:
 290 0040 083095E5 		ldr	r3, [r5, #8]
 291 0044 004095E5 		ldr	r4, [r5]
 292 0048 042095E5 		ldr	r2, [r5, #4]
 293 004c 0C808DE5 		str	r8, [sp, #12]
 294 0050 044083E0 		add	r4, r3, r4
 295 0054 014044E2 		sub	r4, r4, #1
 296 0058 024044E0 		sub	r4, r4, r2
 297 005c 040053E1 		cmp	r3, r4
 298 0060 03404490 		subls	r4, r4, r3
 299 0064 000054E3 		cmp	r4, #0
 300 0068 2F00001A 		bne	.L79
 301              	.L63:
 302 006c 0040A0E3 		mov	r4, #0
 303              	.L52:
 304 0070 0400A0E1 		mov	r0, r4
 305 0074 1CD08DE2 		add	sp, sp, #28
 306              		@ sp needed
 307 0078 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 308              	.L118:
 309 007c 007000E3 		movw	r7, #:lower16:.LC0
 310 0080 10008DE2 		add	r0, sp, #16
 311 0084 007040E3 		movt	r7, #:upper16:.LC0
 312 0088 0090A0E3 		mov	r9, #0
 313 008c FEFFFFEB 		bl	vTaskSetTimeOutState
 314 0090 150000EA 		b	.L60
 315              	.L119:
 316 0094 FEFFFFEB 		bl	xTaskNotifyStateClear
 317 0098 143095E5 		ldr	r3, [r5, #20]
 318 009c 131200E3 		movw	r1, #531
 319 00a0 0700A0E1 		mov	r0, r7
 320 00a4 000053E3 		cmp	r3, #0
 321 00a8 0000000A 		beq	.L59
 322 00ac FEFFFFEB 		bl	R_OS_AssertCalled
 323              	.L59:
 324 00b0 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 325 00b4 18B08DE2 		add	fp, sp, #24
 326 00b8 140085E5 		str	r0, [r5, #20]
 327 00bc FEFFFFEB 		bl	vPortExitCritical
 328 00c0 14303BE5 		ldr	r3, [fp, #-20]!
 329 00c4 0020A0E3 		mov	r2, #0
 330 00c8 0200A0E1 		mov	r0, r2
 331 00cc 0010E0E3 		mvn	r1, #0
 332 00d0 FEFFFFEB 		bl	xTaskNotifyWait
 333 00d4 0B10A0E1 		mov	r1, fp
 334 00d8 149085E5 		str	r9, [r5, #20]
 335 00dc 10008DE2 		add	r0, sp, #16
 336 00e0 FEFFFFEB 		bl	xTaskCheckForTimeOut
 337 00e4 000050E3 		cmp	r0, #0
 338 00e8 0C00001A 		bne	.L61
 339              	.L60:
 340 00ec FEFFFFEB 		bl	vPortEnterCritical
 341 00f0 083095E5 		ldr	r3, [r5, #8]
 342 00f4 0000A0E3 		mov	r0, #0
 343 00f8 004095E5 		ldr	r4, [r5]
 344 00fc 042095E5 		ldr	r2, [r5, #4]
 345 0100 044083E0 		add	r4, r3, r4
 346 0104 014044E2 		sub	r4, r4, #1
 347 0108 024044E0 		sub	r4, r4, r2
 348 010c 040053E1 		cmp	r3, r4
 349 0110 03404490 		subls	r4, r4, r3
 350 0114 040056E1 		cmp	r6, r4
 351 0118 DDFFFF8A 		bhi	.L119
 352 011c FEFFFFEB 		bl	vPortExitCritical
 353              	.L61:
 354 0120 000054E3 		cmp	r4, #0
 355 0124 C5FFFF0A 		beq	.L56
 356 0128 0C808DE5 		str	r8, [sp, #12]
 357              	.L79:
 358 012c 1C30D5E5 		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 359 0130 010013E3 		tst	r3, #1
 360 0134 3B00001A 		bne	.L64
 361 0138 040058E1 		cmp	r8, r4
 362 013c 0840A031 		movcc	r4, r8
 363 0140 0C408DE5 		str	r4, [sp, #12]
 364              	.L65:
 365 0144 000054E3 		cmp	r4, #0
 366 0148 5D00000A 		beq	.L120
 367 014c 046095E5 		ldr	r6, [r5, #4]
 368 0150 083095E5 		ldr	r3, [r5, #8]
 369 0154 067043E0 		sub	r7, r3, r6
 370 0158 040057E1 		cmp	r7, r4
 371 015c 0470A021 		movcs	r7, r4
 372 0160 072086E0 		add	r2, r6, r7
 373 0164 020053E1 		cmp	r3, r2
 374 0168 5000003A 		bcc	.L70
 375              	.L72:
 376 016c 180095E5 		ldr	r0, [r5, #24]
 377 0170 0720A0E1 		mov	r2, r7
 378 0174 0A10A0E1 		mov	r1, r10
 379 0178 060080E0 		add	r0, r0, r6
 380 017c FEFFFFEB 		bl	memcpy
 381 0180 040057E1 		cmp	r7, r4
 382 0184 0700002A 		bcs	.L73
 383 0188 083095E5 		ldr	r3, [r5, #8]
 384 018c 078044E0 		sub	r8, r4, r7
 385 0190 030058E1 		cmp	r8, r3
 386 0194 5F00008A 		bhi	.L121
 387              	.L74:
 388 0198 0820A0E1 		mov	r2, r8
 389 019c 07108AE0 		add	r1, r10, r7
 390 01a0 180095E5 		ldr	r0, [r5, #24]
 391 01a4 FEFFFFEB 		bl	memcpy
 392              	.L73:
 393 01a8 082095E5 		ldr	r2, [r5, #8]
 394 01ac 046086E0 		add	r6, r6, r4
 395 01b0 020056E1 		cmp	r6, r2
 396 01b4 0000003A 		bcc	.L75
 397              	.L82:
 398 01b8 026046E0 		sub	r6, r6, r2
 399              	.L75:
 400 01bc 000054E3 		cmp	r4, #0
 401 01c0 046085E5 		str	r6, [r5, #4]
 402 01c4 A9FFFF0A 		beq	.L52
 403 01c8 043095E5 		ldr	r3, [r5, #4]
 404 01cc 001095E5 		ldr	r1, [r5]
 405 01d0 033082E0 		add	r3, r2, r3
 406 01d4 013043E0 		sub	r3, r3, r1
 407 01d8 030052E1 		cmp	r2, r3
 408 01dc 02304390 		subls	r3, r3, r2
 409 01e0 0C2095E5 		ldr	r2, [r5, #12]
 410 01e4 030052E1 		cmp	r2, r3
 411 01e8 A0FFFF8A 		bhi	.L52
 412 01ec FEFFFFEB 		bl	vTaskSuspendAll
 413 01f0 103095E5 		ldr	r3, [r5, #16]
 414 01f4 000053E3 		cmp	r3, #0
 415 01f8 0600000A 		beq	.L78
 416 01fc 0030A0E3 		mov	r3, #0
 417 0200 100095E5 		ldr	r0, [r5, #16]
 418 0204 0320A0E1 		mov	r2, r3
 419 0208 0310A0E1 		mov	r1, r3
 420 020c FEFFFFEB 		bl	xTaskGenericNotify
 421 0210 0030A0E3 		mov	r3, #0
 422 0214 103085E5 		str	r3, [r5, #16]
 423              	.L78:
 424 0218 FEFFFFEB 		bl	xTaskResumeAll
 425 021c 0400A0E1 		mov	r0, r4
 426 0220 1CD08DE2 		add	sp, sp, #28
 427              		@ sp needed
 428 0224 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 429              	.L64:
 430 0228 040056E1 		cmp	r6, r4
 431 022c 8EFFFF8A 		bhi	.L63
 432 0230 044095E5 		ldr	r4, [r5, #4]
 433 0234 083095E5 		ldr	r3, [r5, #8]
 434 0238 046043E0 		sub	r6, r3, r4
 435 023c 040056E3 		cmp	r6, #4
 436 0240 0460A023 		movcs	r6, #4
 437 0244 062084E0 		add	r2, r4, r6
 438 0248 020053E1 		cmp	r3, r2
 439 024c 3600003A 		bcc	.L122
 440              	.L66:
 441 0250 180095E5 		ldr	r0, [r5, #24]
 442 0254 0C108DE2 		add	r1, sp, #12
 443 0258 0620A0E1 		mov	r2, r6
 444 025c 040080E0 		add	r0, r0, r4
 445 0260 FEFFFFEB 		bl	memcpy
 446 0264 040056E3 		cmp	r6, #4
 447 0268 0800000A 		beq	.L67
 448 026c 083095E5 		ldr	r3, [r5, #8]
 449 0270 047066E2 		rsb	r7, r6, #4
 450 0274 030057E1 		cmp	r7, r3
 451 0278 3000008A 		bhi	.L123
 452              	.L68:
 453 027c 0C308DE2 		add	r3, sp, #12
 454 0280 0720A0E1 		mov	r2, r7
 455 0284 061083E0 		add	r1, r3, r6
 456 0288 180095E5 		ldr	r0, [r5, #24]
 457 028c FEFFFFEB 		bl	memcpy
 458              	.L67:
 459 0290 083095E5 		ldr	r3, [r5, #8]
 460 0294 044084E2 		add	r4, r4, #4
 461 0298 030054E1 		cmp	r4, r3
 462 029c 03404420 		subcs	r4, r4, r3
 463 02a0 044085E5 		str	r4, [r5, #4]
 464 02a4 0C409DE5 		ldr	r4, [sp, #12]
 465 02a8 A5FFFFEA 		b	.L65
 466              	.L124:
 467 02ac 0470A0E1 		mov	r7, r4
 468              	.L70:
 469 02b0 000000E3 		movw	r0, #:lower16:.LC0
 470 02b4 0A1400E3 		movw	r1, #1034
 471 02b8 000040E3 		movt	r0, #:upper16:.LC0
 472 02bc FEFFFFEB 		bl	R_OS_AssertCalled
 473 02c0 A9FFFFEA 		b	.L72
 474              	.L120:
 475 02c4 000000E3 		movw	r0, #:lower16:.LC0
 476 02c8 011BA0E3 		mov	r1, #1024
 477 02cc 000040E3 		movt	r0, #:upper16:.LC0
 478 02d0 FEFFFFEB 		bl	R_OS_AssertCalled
 479 02d4 046095E5 		ldr	r6, [r5, #4]
 480 02d8 082095E5 		ldr	r2, [r5, #8]
 481 02dc 060052E1 		cmp	r2, r6
 482 02e0 F1FFFF3A 		bcc	.L124
 483 02e4 B3FFFF9A 		bls	.L82
 484 02e8 046085E5 		str	r6, [r5, #4]
 485 02ec 5FFFFFEA 		b	.L52
 486              	.L116:
 487 02f0 000000E3 		movw	r0, #:lower16:.LC0
 488 02f4 F11100E3 		movw	r1, #497
 489 02f8 000040E3 		movt	r0, #:upper16:.LC0
 490 02fc FEFFFFEB 		bl	R_OS_AssertCalled
 491 0300 45FFFFEA 		b	.L53
 492              	.L117:
 493 0304 000000E3 		movw	r0, #:lower16:.LC0
 494 0308 F21100E3 		movw	r1, #498
 495 030c 000040E3 		movt	r0, #:upper16:.LC0
 496 0310 FEFFFFEB 		bl	R_OS_AssertCalled
 497 0314 42FFFFEA 		b	.L54
 498              	.L121:
 499 0318 000000E3 		movw	r0, #:lower16:.LC0
 500 031c 121400E3 		movw	r1, #1042
 501 0320 000040E3 		movt	r0, #:upper16:.LC0
 502 0324 FEFFFFEB 		bl	R_OS_AssertCalled
 503 0328 9AFFFFEA 		b	.L74
 504              	.L122:
 505 032c 000000E3 		movw	r0, #:lower16:.LC0
 506 0330 0A1400E3 		movw	r1, #1034
 507 0334 000040E3 		movt	r0, #:upper16:.LC0
 508 0338 FEFFFFEB 		bl	R_OS_AssertCalled
 509 033c C3FFFFEA 		b	.L66
 510              	.L123:
 511 0340 000000E3 		movw	r0, #:lower16:.LC0
 512 0344 121400E3 		movw	r1, #1042
 513 0348 000040E3 		movt	r0, #:upper16:.LC0
 514 034c FEFFFFEB 		bl	R_OS_AssertCalled
 515 0350 C9FFFFEA 		b	.L68
 517              		.section	.text.xStreamBufferSendFromISR,"ax",%progbits
 518              		.align	2
 519              		.global	xStreamBufferSendFromISR
 520              		.syntax unified
 521              		.arm
 522              		.fpu neon
 524              	xStreamBufferSendFromISR:
 525              		@ args = 0, pretend = 0, frame = 8
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 528 0004 008051E2 		subs	r8, r1, #0
 529 0008 10D04DE2 		sub	sp, sp, #16
 530 000c 0050A0E1 		mov	r5, r0
 531 0010 0270A0E1 		mov	r7, r2
 532 0014 0360A0E1 		mov	r6, r3
 533 0018 8300000A 		beq	.L168
 534              	.L126:
 535 001c 000055E3 		cmp	r5, #0
 536 0020 8600000A 		beq	.L169
 537              	.L127:
 538 0024 1C30D5E5 		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 539 0028 013013E2 		ands	r3, r3, #1
 540 002c 0700A001 		moveq	r0, r7
 541 0030 04008712 		addne	r0, r7, #4
 542              	.L145:
 543 0034 081095E5 		ldr	r1, [r5, #8]
 544 0038 004095E5 		ldr	r4, [r5]
 545 003c 042095E5 		ldr	r2, [r5, #4]
 546 0040 0C708DE5 		str	r7, [sp, #12]
 547 0044 044081E0 		add	r4, r1, r4
 548 0048 014044E2 		sub	r4, r4, #1
 549 004c 024044E0 		sub	r4, r4, r2
 550 0050 040051E1 		cmp	r1, r4
 551 0054 01404490 		subls	r4, r4, r1
 552 0058 000054E3 		cmp	r4, #0
 553 005c 3C00000A 		beq	.L125
 554 0060 000053E3 		cmp	r3, #0
 555 0064 3D00001A 		bne	.L130
 556 0068 070054E1 		cmp	r4, r7
 557 006c 0740A021 		movcs	r4, r7
 558 0070 0C408DE5 		str	r4, [sp, #12]
 559              	.L131:
 560 0074 000054E3 		cmp	r4, #0
 561 0078 5F00000A 		beq	.L170
 562 007c 047095E5 		ldr	r7, [r5, #4]
 563 0080 079041E0 		sub	r9, r1, r7
 564 0084 040059E1 		cmp	r9, r4
 565 0088 0490A021 		movcs	r9, r4
 566 008c 093087E0 		add	r3, r7, r9
 567 0090 030051E1 		cmp	r1, r3
 568 0094 5300003A 		bcc	.L136
 569              	.L138:
 570 0098 180095E5 		ldr	r0, [r5, #24]
 571 009c 0920A0E1 		mov	r2, r9
 572 00a0 0810A0E1 		mov	r1, r8
 573 00a4 070080E0 		add	r0, r0, r7
 574 00a8 FEFFFFEB 		bl	memcpy
 575 00ac 090054E1 		cmp	r4, r9
 576 00b0 0700009A 		bls	.L139
 577 00b4 083095E5 		ldr	r3, [r5, #8]
 578 00b8 09A044E0 		sub	r10, r4, r9
 579 00bc 03005AE1 		cmp	r10, r3
 580 00c0 6300008A 		bhi	.L171
 581              	.L140:
 582 00c4 0A20A0E1 		mov	r2, r10
 583 00c8 091088E0 		add	r1, r8, r9
 584 00cc 180095E5 		ldr	r0, [r5, #24]
 585 00d0 FEFFFFEB 		bl	memcpy
 586              	.L139:
 587 00d4 082095E5 		ldr	r2, [r5, #8]
 588 00d8 047087E0 		add	r7, r7, r4
 589 00dc 020057E1 		cmp	r7, r2
 590 00e0 0000003A 		bcc	.L141
 591              	.L148:
 592 00e4 027047E0 		sub	r7, r7, r2
 593              	.L141:
 594 00e8 000054E3 		cmp	r4, #0
 595 00ec 047085E5 		str	r7, [r5, #4]
 596 00f0 1700000A 		beq	.L125
 597 00f4 043095E5 		ldr	r3, [r5, #4]
 598 00f8 001095E5 		ldr	r1, [r5]
 599 00fc 033082E0 		add	r3, r2, r3
 600 0100 013043E0 		sub	r3, r3, r1
 601 0104 030052E1 		cmp	r2, r3
 602 0108 02304390 		subls	r3, r3, r2
 603 010c 0C2095E5 		ldr	r2, [r5, #12]
 604 0110 030052E1 		cmp	r2, r3
 605 0114 0E00008A 		bhi	.L125
 606 0118 FEFFFFEB 		bl	ulPortSetInterruptMask
 607 011c 103095E5 		ldr	r3, [r5, #16]
 608 0120 0070A0E1 		mov	r7, r0
 609 0124 000053E3 		cmp	r3, #0
 610 0128 0700000A 		beq	.L143
 611 012c 0030A0E3 		mov	r3, #0
 612 0130 100095E5 		ldr	r0, [r5, #16]
 613 0134 0320A0E1 		mov	r2, r3
 614 0138 0310A0E1 		mov	r1, r3
 615 013c 00608DE5 		str	r6, [sp]
 616 0140 FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 617 0144 0030A0E3 		mov	r3, #0
 618 0148 103085E5 		str	r3, [r5, #16]
 619              	.L143:
 620 014c 0700A0E1 		mov	r0, r7
 621 0150 FEFFFFEB 		bl	vPortClearInterruptMask
 622              	.L125:
 623 0154 0400A0E1 		mov	r0, r4
 624 0158 10D08DE2 		add	sp, sp, #16
 625              		@ sp needed
 626 015c F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 627              	.L130:
 628 0160 000054E1 		cmp	r4, r0
 629 0164 0040A033 		movcc	r4, #0
 630 0168 F9FFFF3A 		bcc	.L125
 631 016c 044095E5 		ldr	r4, [r5, #4]
 632 0170 049041E0 		sub	r9, r1, r4
 633 0174 040059E3 		cmp	r9, #4
 634 0178 0490A023 		movcs	r9, #4
 635 017c 093084E0 		add	r3, r4, r9
 636 0180 030051E1 		cmp	r1, r3
 637 0184 3700003A 		bcc	.L172
 638              	.L132:
 639 0188 180095E5 		ldr	r0, [r5, #24]
 640 018c 0C108DE2 		add	r1, sp, #12
 641 0190 0920A0E1 		mov	r2, r9
 642 0194 040080E0 		add	r0, r0, r4
 643 0198 FEFFFFEB 		bl	memcpy
 644 019c 040059E3 		cmp	r9, #4
 645 01a0 0800000A 		beq	.L133
 646 01a4 083095E5 		ldr	r3, [r5, #8]
 647 01a8 04A069E2 		rsb	r10, r9, #4
 648 01ac 03005AE1 		cmp	r10, r3
 649 01b0 3100008A 		bhi	.L173
 650              	.L134:
 651 01b4 0C308DE2 		add	r3, sp, #12
 652 01b8 0A20A0E1 		mov	r2, r10
 653 01bc 091083E0 		add	r1, r3, r9
 654 01c0 180095E5 		ldr	r0, [r5, #24]
 655 01c4 FEFFFFEB 		bl	memcpy
 656              	.L133:
 657 01c8 081095E5 		ldr	r1, [r5, #8]
 658 01cc 044084E2 		add	r4, r4, #4
 659 01d0 010054E1 		cmp	r4, r1
 660 01d4 01404420 		subcs	r4, r4, r1
 661 01d8 044085E5 		str	r4, [r5, #4]
 662 01dc 0740A0E1 		mov	r4, r7
 663 01e0 A3FFFFEA 		b	.L131
 664              	.L174:
 665 01e4 0490A0E1 		mov	r9, r4
 666              	.L136:
 667 01e8 000000E3 		movw	r0, #:lower16:.LC0
 668 01ec 0A1400E3 		movw	r1, #1034
 669 01f0 000040E3 		movt	r0, #:upper16:.LC0
 670 01f4 FEFFFFEB 		bl	R_OS_AssertCalled
 671 01f8 A6FFFFEA 		b	.L138
 672              	.L170:
 673 01fc 000000E3 		movw	r0, #:lower16:.LC0
 674 0200 011BA0E3 		mov	r1, #1024
 675 0204 000040E3 		movt	r0, #:upper16:.LC0
 676 0208 FEFFFFEB 		bl	R_OS_AssertCalled
 677 020c 047095E5 		ldr	r7, [r5, #4]
 678 0210 082095E5 		ldr	r2, [r5, #8]
 679 0214 020057E1 		cmp	r7, r2
 680 0218 F1FFFF8A 		bhi	.L174
 681 021c 070052E1 		cmp	r2, r7
 682 0220 AFFFFF9A 		bls	.L148
 683 0224 047085E5 		str	r7, [r5, #4]
 684 0228 C9FFFFEA 		b	.L125
 685              	.L168:
 686 022c 000000E3 		movw	r0, #:lower16:.LC0
 687 0230 551200E3 		movw	r1, #597
 688 0234 000040E3 		movt	r0, #:upper16:.LC0
 689 0238 FEFFFFEB 		bl	R_OS_AssertCalled
 690 023c 76FFFFEA 		b	.L126
 691              	.L169:
 692 0240 000000E3 		movw	r0, #:lower16:.LC0
 693 0244 561200E3 		movw	r1, #598
 694 0248 000040E3 		movt	r0, #:upper16:.LC0
 695 024c FEFFFFEB 		bl	R_OS_AssertCalled
 696 0250 73FFFFEA 		b	.L127
 697              	.L171:
 698 0254 000000E3 		movw	r0, #:lower16:.LC0
 699 0258 121400E3 		movw	r1, #1042
 700 025c 000040E3 		movt	r0, #:upper16:.LC0
 701 0260 FEFFFFEB 		bl	R_OS_AssertCalled
 702 0264 96FFFFEA 		b	.L140
 703              	.L172:
 704 0268 000000E3 		movw	r0, #:lower16:.LC0
 705 026c 0A1400E3 		movw	r1, #1034
 706 0270 000040E3 		movt	r0, #:upper16:.LC0
 707 0274 FEFFFFEB 		bl	R_OS_AssertCalled
 708 0278 C2FFFFEA 		b	.L132
 709              	.L173:
 710 027c 000000E3 		movw	r0, #:lower16:.LC0
 711 0280 121400E3 		movw	r1, #1042
 712 0284 000040E3 		movt	r0, #:upper16:.LC0
 713 0288 FEFFFFEB 		bl	R_OS_AssertCalled
 714 028c C8FFFFEA 		b	.L134
 716              		.section	.text.xStreamBufferReceive,"ax",%progbits
 717              		.align	2
 718              		.global	xStreamBufferReceive
 719              		.syntax unified
 720              		.arm
 721              		.fpu neon
 723              	xStreamBufferReceive:
 724              		@ args = 0, pretend = 0, frame = 16
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 727 0004 008051E2 		subs	r8, r1, #0
 728 0008 14D04DE2 		sub	sp, sp, #20
 729 000c 0050A0E1 		mov	r5, r0
 730 0010 0270A0E1 		mov	r7, r2
 731 0014 0390A0E1 		mov	r9, r3
 732 0018 9D00000A 		beq	.L216
 733              	.L176:
 734 001c 000055E3 		cmp	r5, #0
 735 0020 A000000A 		beq	.L217
 736              	.L177:
 737 0024 1C30D5E5 		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 738 0028 010013E3 		tst	r3, #1
 739 002c 0060A003 		moveq	r6, #0
 740 0030 0460A013 		movne	r6, #4
 741 0034 000059E3 		cmp	r9, #0
 742 0038 08309505 		ldreq	r3, [r5, #8]
 743 003c 0B00001A 		bne	.L218
 744              	.L215:
 745 0040 044095E5 		ldr	r4, [r5, #4]
 746 0044 002095E5 		ldr	r2, [r5]
 747 0048 044083E0 		add	r4, r3, r4
 748 004c 024044E0 		sub	r4, r4, r2
 749 0050 040053E1 		cmp	r3, r4
 750 0054 03404490 		subls	r4, r4, r3
 751 0058 060054E1 		cmp	r4, r6
 752 005c 0E00008A 		bhi	.L185
 753              	.L195:
 754 0060 0040A0E3 		mov	r4, #0
 755 0064 0400A0E1 		mov	r0, r4
 756 0068 14D08DE2 		add	sp, sp, #20
 757              		@ sp needed
 758 006c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 759              	.L218:
 760 0070 FEFFFFEB 		bl	vPortEnterCritical
 761 0074 083095E5 		ldr	r3, [r5, #8]
 762 0078 044095E5 		ldr	r4, [r5, #4]
 763 007c 002095E5 		ldr	r2, [r5]
 764 0080 044083E0 		add	r4, r3, r4
 765 0084 024044E0 		sub	r4, r4, r2
 766 0088 040053E1 		cmp	r3, r4
 767 008c 03404490 		subls	r4, r4, r3
 768 0090 040056E1 		cmp	r6, r4
 769 0094 6900002A 		bcs	.L219
 770 0098 FEFFFFEB 		bl	vPortExitCritical
 771              	.L185:
 772 009c 000056E3 		cmp	r6, #0
 773 00a0 0C708D05 		streq	r7, [sp, #12]
 774 00a4 3900001A 		bne	.L220
 775              	.L194:
 776 00a8 070054E1 		cmp	r4, r7
 777 00ac 0740A021 		movcs	r4, r7
 778 00b0 000054E3 		cmp	r4, #0
 779 00b4 E9FFFF0A 		beq	.L195
 780 00b8 006095E5 		ldr	r6, [r5]
 781 00bc 083095E5 		ldr	r3, [r5, #8]
 782 00c0 069043E0 		sub	r9, r3, r6
 783 00c4 040059E1 		cmp	r9, r4
 784 00c8 0490A021 		movcs	r9, r4
 785 00cc 070059E1 		cmp	r9, r7
 786 00d0 2800008A 		bhi	.L221
 787              	.L196:
 788 00d4 092086E0 		add	r2, r6, r9
 789 00d8 030052E1 		cmp	r2, r3
 790 00dc 2000008A 		bhi	.L222
 791              	.L197:
 792 00e0 181095E5 		ldr	r1, [r5, #24]
 793 00e4 0920A0E1 		mov	r2, r9
 794 00e8 0800A0E1 		mov	r0, r8
 795 00ec 061081E0 		add	r1, r1, r6
 796 00f0 FEFFFFEB 		bl	memcpy
 797 00f4 090054E1 		cmp	r4, r9
 798 00f8 0500009A 		bls	.L198
 799 00fc 070054E1 		cmp	r4, r7
 800 0100 7200008A 		bhi	.L223
 801              	.L199:
 802 0104 090088E0 		add	r0, r8, r9
 803 0108 092044E0 		sub	r2, r4, r9
 804 010c 181095E5 		ldr	r1, [r5, #24]
 805 0110 FEFFFFEB 		bl	memcpy
 806              	.L198:
 807 0114 083095E5 		ldr	r3, [r5, #8]
 808 0118 066084E0 		add	r6, r4, r6
 809 011c 030056E1 		cmp	r6, r3
 810 0120 03604620 		subcs	r6, r6, r3
 811 0124 006085E5 		str	r6, [r5]
 812 0128 FEFFFFEB 		bl	vTaskSuspendAll
 813 012c 143095E5 		ldr	r3, [r5, #20]
 814 0130 000053E3 		cmp	r3, #0
 815 0134 0600000A 		beq	.L201
 816 0138 0030A0E3 		mov	r3, #0
 817 013c 140095E5 		ldr	r0, [r5, #20]
 818 0140 0320A0E1 		mov	r2, r3
 819 0144 0310A0E1 		mov	r1, r3
 820 0148 FEFFFFEB 		bl	xTaskGenericNotify
 821 014c 0030A0E3 		mov	r3, #0
 822 0150 143085E5 		str	r3, [r5, #20]
 823              	.L201:
 824 0154 FEFFFFEB 		bl	xTaskResumeAll
 825 0158 0400A0E1 		mov	r0, r4
 826 015c 14D08DE2 		add	sp, sp, #20
 827              		@ sp needed
 828 0160 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 829              	.L222:
 830 0164 000000E3 		movw	r0, #:lower16:.LC0
 831 0168 3D1400E3 		movw	r1, #1085
 832 016c 000040E3 		movt	r0, #:upper16:.LC0
 833 0170 FEFFFFEB 		bl	R_OS_AssertCalled
 834 0174 D9FFFFEA 		b	.L197
 835              	.L221:
 836 0178 000000E3 		movw	r0, #:lower16:.LC0
 837 017c 3C1400E3 		movw	r1, #1084
 838 0180 000040E3 		movt	r0, #:upper16:.LC0
 839 0184 FEFFFFEB 		bl	R_OS_AssertCalled
 840 0188 083095E5 		ldr	r3, [r5, #8]
 841 018c D0FFFFEA 		b	.L196
 842              	.L220:
 843 0190 003095E5 		ldr	r3, [r5]
 844 0194 040056E1 		cmp	r6, r4
 845 0198 00B095E5 		ldr	fp, [r5]
 846 019c 0490A021 		movcs	r9, r4
 847 01a0 0690A031 		movcc	r9, r6
 848 01a4 00308DE5 		str	r3, [sp]
 849 01a8 083095E5 		ldr	r3, [r5, #8]
 850 01ac 0BA043E0 		sub	r10, r3, fp
 851 01b0 09005AE1 		cmp	r10, r9
 852 01b4 09A0A021 		movcs	r10, r9
 853 01b8 0A0056E1 		cmp	r6, r10
 854 01bc 4800003A 		bcc	.L224
 855              	.L188:
 856 01c0 0A208BE0 		add	r2, fp, r10
 857 01c4 030052E1 		cmp	r2, r3
 858 01c8 3B00008A 		bhi	.L225
 859              	.L189:
 860 01cc 183095E5 		ldr	r3, [r5, #24]
 861 01d0 0C008DE2 		add	r0, sp, #12
 862 01d4 0A20A0E1 		mov	r2, r10
 863 01d8 0B1083E0 		add	r1, r3, fp
 864 01dc 04308DE5 		str	r3, [sp, #4]
 865 01e0 FEFFFFEB 		bl	memcpy
 866 01e4 0A0059E1 		cmp	r9, r10
 867 01e8 0700009A 		bls	.L190
 868 01ec 090056E1 		cmp	r6, r9
 869 01f0 04309DE5 		ldr	r3, [sp, #4]
 870 01f4 4000003A 		bcc	.L226
 871              	.L191:
 872 01f8 0310A0E1 		mov	r1, r3
 873 01fc 0C308DE2 		add	r3, sp, #12
 874 0200 0A0083E0 		add	r0, r3, r10
 875 0204 0A2049E0 		sub	r2, r9, r10
 876 0208 FEFFFFEB 		bl	memcpy
 877              	.L190:
 878 020c 083095E5 		ldr	r3, [r5, #8]
 879 0210 0B9089E0 		add	r9, r9, fp
 880 0214 030059E1 		cmp	r9, r3
 881 0218 03904920 		subcs	r9, r9, r3
 882 021c 0C309DE5 		ldr	r3, [sp, #12]
 883 0220 009085E5 		str	r9, [r5]
 884 0224 030057E1 		cmp	r7, r3
 885 0228 06404420 		subcs	r4, r4, r6
 886 022c 0370A021 		movcs	r7, r3
 887 0230 9CFFFF2A 		bcs	.L194
 888 0234 00309DE5 		ldr	r3, [sp]
 889 0238 003085E5 		str	r3, [r5]
 890 023c 87FFFFEA 		b	.L195
 891              	.L219:
 892 0240 0000A0E3 		mov	r0, #0
 893 0244 FEFFFFEB 		bl	xTaskNotifyStateClear
 894 0248 103095E5 		ldr	r3, [r5, #16]
 895 024c 000053E3 		cmp	r3, #0
 896 0250 0300000A 		beq	.L182
 897 0254 000000E3 		movw	r0, #:lower16:.LC0
 898 0258 DF1200E3 		movw	r1, #735
 899 025c 000040E3 		movt	r0, #:upper16:.LC0
 900 0260 FEFFFFEB 		bl	R_OS_AssertCalled
 901              	.L182:
 902 0264 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 903 0268 100085E5 		str	r0, [r5, #16]
 904 026c FEFFFFEB 		bl	vPortExitCritical
 905 0270 0020A0E3 		mov	r2, #0
 906 0274 0930A0E1 		mov	r3, r9
 907 0278 0200A0E1 		mov	r0, r2
 908 027c 0010E0E3 		mvn	r1, #0
 909 0280 FEFFFFEB 		bl	xTaskNotifyWait
 910 0284 0020A0E3 		mov	r2, #0
 911 0288 083095E5 		ldr	r3, [r5, #8]
 912 028c 102085E5 		str	r2, [r5, #16]
 913 0290 6AFFFFEA 		b	.L215
 914              	.L216:
 915 0294 000000E3 		movw	r0, #:lower16:.LC0
 916 0298 BB1200E3 		movw	r1, #699
 917 029c 000040E3 		movt	r0, #:upper16:.LC0
 918 02a0 FEFFFFEB 		bl	R_OS_AssertCalled
 919 02a4 5CFFFFEA 		b	.L176
 920              	.L217:
 921 02a8 000000E3 		movw	r0, #:lower16:.LC0
 922 02ac AF1FA0E3 		mov	r1, #700
 923 02b0 000040E3 		movt	r0, #:upper16:.LC0
 924 02b4 FEFFFFEB 		bl	R_OS_AssertCalled
 925 02b8 59FFFFEA 		b	.L177
 926              	.L225:
 927 02bc 000000E3 		movw	r0, #:lower16:.LC0
 928 02c0 3D1400E3 		movw	r1, #1085
 929 02c4 000040E3 		movt	r0, #:upper16:.LC0
 930 02c8 FEFFFFEB 		bl	R_OS_AssertCalled
 931 02cc BEFFFFEA 		b	.L189
 932              	.L223:
 933 02d0 000000E3 		movw	r0, #:lower16:.LC0
 934 02d4 451400E3 		movw	r1, #1093
 935 02d8 000040E3 		movt	r0, #:upper16:.LC0
 936 02dc FEFFFFEB 		bl	R_OS_AssertCalled
 937 02e0 87FFFFEA 		b	.L199
 938              	.L224:
 939 02e4 000000E3 		movw	r0, #:lower16:.LC0
 940 02e8 3C1400E3 		movw	r1, #1084
 941 02ec 000040E3 		movt	r0, #:upper16:.LC0
 942 02f0 FEFFFFEB 		bl	R_OS_AssertCalled
 943 02f4 083095E5 		ldr	r3, [r5, #8]
 944 02f8 B0FFFFEA 		b	.L188
 945              	.L226:
 946 02fc 000000E3 		movw	r0, #:lower16:.LC0
 947 0300 451400E3 		movw	r1, #1093
 948 0304 000040E3 		movt	r0, #:upper16:.LC0
 949 0308 FEFFFFEB 		bl	R_OS_AssertCalled
 950 030c 183095E5 		ldr	r3, [r5, #24]
 951 0310 B8FFFFEA 		b	.L191
 953              		.section	.text.xStreamBufferReceiveFromISR,"ax",%progbits
 954              		.align	2
 955              		.global	xStreamBufferReceiveFromISR
 956              		.syntax unified
 957              		.arm
 958              		.fpu neon
 960              	xStreamBufferReceiveFromISR:
 961              		@ args = 0, pretend = 0, frame = 24
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 964 0004 008051E2 		subs	r8, r1, #0
 965 0008 24D04DE2 		sub	sp, sp, #36
 966 000c 0050A0E1 		mov	r5, r0
 967 0010 0270A0E1 		mov	r7, r2
 968 0014 0390A0E1 		mov	r9, r3
 969 0018 8400000A 		beq	.L257
 970              	.L228:
 971 001c 000055E3 		cmp	r5, #0
 972 0020 7D00000A 		beq	.L258
 973              	.L229:
 974 0024 083095E5 		ldr	r3, [r5, #8]
 975 0028 044095E5 		ldr	r4, [r5, #4]
 976 002c 1C20D5E5 		ldrb	r2, [r5, #28]	@ zero_extendqisi2
 977 0030 001095E5 		ldr	r1, [r5]
 978 0034 044083E0 		add	r4, r3, r4
 979 0038 010012E3 		tst	r2, #1
 980 003c 014044E0 		sub	r4, r4, r1
 981 0040 0060A003 		moveq	r6, #0
 982 0044 0460A013 		movne	r6, #4
 983 0048 040053E1 		cmp	r3, r4
 984 004c 03404490 		subls	r4, r4, r3
 985 0050 040056E1 		cmp	r6, r4
 986 0054 0300003A 		bcc	.L259
 987              	.L241:
 988 0058 0040A0E3 		mov	r4, #0
 989 005c 0400A0E1 		mov	r0, r4
 990 0060 24D08DE2 		add	sp, sp, #36
 991              		@ sp needed
 992 0064 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 993              	.L259:
 994 0068 000056E3 		cmp	r6, #0
 995 006c 1C708D05 		streq	r7, [sp, #28]
 996 0070 3B00001A 		bne	.L260
 997              	.L240:
 998 0074 070054E1 		cmp	r4, r7
 999 0078 0740A021 		movcs	r4, r7
 1000 007c 000054E3 		cmp	r4, #0
 1001 0080 F4FFFF0A 		beq	.L241
 1002 0084 006095E5 		ldr	r6, [r5]
 1003 0088 06A043E0 		sub	r10, r3, r6
 1004 008c 04005AE1 		cmp	r10, r4
 1005 0090 04A0A021 		movcs	r10, r4
 1006 0094 07005AE1 		cmp	r10, r7
 1007 0098 2B00008A 		bhi	.L261
 1008              	.L242:
 1009 009c 0A2086E0 		add	r2, r6, r10
 1010 00a0 030052E1 		cmp	r2, r3
 1011 00a4 2300008A 		bhi	.L262
 1012              	.L243:
 1013 00a8 181095E5 		ldr	r1, [r5, #24]
 1014 00ac 0A20A0E1 		mov	r2, r10
 1015 00b0 0800A0E1 		mov	r0, r8
 1016 00b4 061081E0 		add	r1, r1, r6
 1017 00b8 FEFFFFEB 		bl	memcpy
 1018 00bc 0A0054E1 		cmp	r4, r10
 1019 00c0 0500009A 		bls	.L244
 1020 00c4 070054E1 		cmp	r4, r7
 1021 00c8 6200008A 		bhi	.L263
 1022              	.L245:
 1023 00cc 0A0088E0 		add	r0, r8, r10
 1024 00d0 0A2044E0 		sub	r2, r4, r10
 1025 00d4 181095E5 		ldr	r1, [r5, #24]
 1026 00d8 FEFFFFEB 		bl	memcpy
 1027              	.L244:
 1028 00dc 083095E5 		ldr	r3, [r5, #8]
 1029 00e0 066084E0 		add	r6, r4, r6
 1030 00e4 030056E1 		cmp	r6, r3
 1031 00e8 03604620 		subcs	r6, r6, r3
 1032 00ec 006085E5 		str	r6, [r5]
 1033 00f0 FEFFFFEB 		bl	ulPortSetInterruptMask
 1034 00f4 143095E5 		ldr	r3, [r5, #20]
 1035 00f8 0060A0E1 		mov	r6, r0
 1036 00fc 000053E3 		cmp	r3, #0
 1037 0100 0700000A 		beq	.L247
 1038 0104 0030A0E3 		mov	r3, #0
 1039 0108 140095E5 		ldr	r0, [r5, #20]
 1040 010c 0320A0E1 		mov	r2, r3
 1041 0110 0310A0E1 		mov	r1, r3
 1042 0114 00908DE5 		str	r9, [sp]
 1043 0118 FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 1044 011c 0030A0E3 		mov	r3, #0
 1045 0120 143085E5 		str	r3, [r5, #20]
 1046              	.L247:
 1047 0124 0600A0E1 		mov	r0, r6
 1048 0128 FEFFFFEB 		bl	vPortClearInterruptMask
 1049 012c 0400A0E1 		mov	r0, r4
 1050 0130 24D08DE2 		add	sp, sp, #36
 1051              		@ sp needed
 1052 0134 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1053              	.L262:
 1054 0138 000000E3 		movw	r0, #:lower16:.LC0
 1055 013c 3D1400E3 		movw	r1, #1085
 1056 0140 000040E3 		movt	r0, #:upper16:.LC0
 1057 0144 FEFFFFEB 		bl	R_OS_AssertCalled
 1058 0148 D6FFFFEA 		b	.L243
 1059              	.L261:
 1060 014c 000000E3 		movw	r0, #:lower16:.LC0
 1061 0150 3C1400E3 		movw	r1, #1084
 1062 0154 000040E3 		movt	r0, #:upper16:.LC0
 1063 0158 FEFFFFEB 		bl	R_OS_AssertCalled
 1064 015c 083095E5 		ldr	r3, [r5, #8]
 1065 0160 CDFFFFEA 		b	.L242
 1066              	.L260:
 1067 0164 002095E5 		ldr	r2, [r5]
 1068 0168 040056E1 		cmp	r6, r4
 1069 016c 04A0A021 		movcs	r10, r4
 1070 0170 06A0A031 		movcc	r10, r6
 1071 0174 10208DE5 		str	r2, [sp, #16]
 1072 0178 002095E5 		ldr	r2, [r5]
 1073 017c 02B043E0 		sub	fp, r3, r2
 1074 0180 0C208DE5 		str	r2, [sp, #12]
 1075 0184 0A005BE1 		cmp	fp, r10
 1076 0188 0AB0A021 		movcs	fp, r10
 1077 018c 0B0056E1 		cmp	r6, fp
 1078 0190 3500003A 		bcc	.L264
 1079              	.L234:
 1080 0194 0B2082E0 		add	r2, r2, fp
 1081 0198 030052E1 		cmp	r2, r3
 1082 019c 2800008A 		bhi	.L265
 1083              	.L235:
 1084 01a0 183095E5 		ldr	r3, [r5, #24]
 1085 01a4 1C008DE2 		add	r0, sp, #28
 1086 01a8 0C109DE5 		ldr	r1, [sp, #12]
 1087 01ac 0B20A0E1 		mov	r2, fp
 1088 01b0 14308DE5 		str	r3, [sp, #20]
 1089 01b4 011083E0 		add	r1, r3, r1
 1090 01b8 FEFFFFEB 		bl	memcpy
 1091 01bc 0B005AE1 		cmp	r10, fp
 1092 01c0 0700009A 		bls	.L236
 1093 01c4 0A0056E1 		cmp	r6, r10
 1094 01c8 14309DE5 		ldr	r3, [sp, #20]
 1095 01cc 2D00003A 		bcc	.L266
 1096              	.L237:
 1097 01d0 0310A0E1 		mov	r1, r3
 1098 01d4 1C308DE2 		add	r3, sp, #28
 1099 01d8 0B0083E0 		add	r0, r3, fp
 1100 01dc 0B204AE0 		sub	r2, r10, fp
 1101 01e0 FEFFFFEB 		bl	memcpy
 1102              	.L236:
 1103 01e4 0C209DE5 		ldr	r2, [sp, #12]
 1104 01e8 083095E5 		ldr	r3, [r5, #8]
 1105 01ec 02A08AE0 		add	r10, r10, r2
 1106 01f0 1C209DE5 		ldr	r2, [sp, #28]
 1107 01f4 03005AE1 		cmp	r10, r3
 1108 01f8 03A04A20 		subcs	r10, r10, r3
 1109 01fc 020057E1 		cmp	r7, r2
 1110 0200 00A085E5 		str	r10, [r5]
 1111 0204 06404420 		subcs	r4, r4, r6
 1112 0208 0270A021 		movcs	r7, r2
 1113 020c 98FFFF2A 		bcs	.L240
 1114 0210 10309DE5 		ldr	r3, [sp, #16]
 1115 0214 003085E5 		str	r3, [r5]
 1116 0218 8EFFFFEA 		b	.L241
 1117              	.L258:
 1118 021c 000000E3 		movw	r0, #:lower16:.LC0
 1119 0220 C91FA0E3 		mov	r1, #804
 1120 0224 000040E3 		movt	r0, #:upper16:.LC0
 1121 0228 FEFFFFEB 		bl	R_OS_AssertCalled
 1122 022c 7CFFFFEA 		b	.L229
 1123              	.L257:
 1124 0230 000000E3 		movw	r0, #:lower16:.LC0
 1125 0234 231300E3 		movw	r1, #803
 1126 0238 000040E3 		movt	r0, #:upper16:.LC0
 1127 023c FEFFFFEB 		bl	R_OS_AssertCalled
 1128 0240 75FFFFEA 		b	.L228
 1129              	.L265:
 1130 0244 000000E3 		movw	r0, #:lower16:.LC0
 1131 0248 3D1400E3 		movw	r1, #1085
 1132 024c 000040E3 		movt	r0, #:upper16:.LC0
 1133 0250 FEFFFFEB 		bl	R_OS_AssertCalled
 1134 0254 D1FFFFEA 		b	.L235
 1135              	.L263:
 1136 0258 000000E3 		movw	r0, #:lower16:.LC0
 1137 025c 451400E3 		movw	r1, #1093
 1138 0260 000040E3 		movt	r0, #:upper16:.LC0
 1139 0264 FEFFFFEB 		bl	R_OS_AssertCalled
 1140 0268 97FFFFEA 		b	.L245
 1141              	.L264:
 1142 026c 000000E3 		movw	r0, #:lower16:.LC0
 1143 0270 3C1400E3 		movw	r1, #1084
 1144 0274 000040E3 		movt	r0, #:upper16:.LC0
 1145 0278 FEFFFFEB 		bl	R_OS_AssertCalled
 1146 027c 083095E5 		ldr	r3, [r5, #8]
 1147 0280 0C209DE5 		ldr	r2, [sp, #12]
 1148 0284 C2FFFFEA 		b	.L234
 1149              	.L266:
 1150 0288 000000E3 		movw	r0, #:lower16:.LC0
 1151 028c 451400E3 		movw	r1, #1093
 1152 0290 000040E3 		movt	r0, #:upper16:.LC0
 1153 0294 FEFFFFEB 		bl	R_OS_AssertCalled
 1154 0298 183095E5 		ldr	r3, [r5, #24]
 1155 029c CBFFFFEA 		b	.L237
 1157              		.section	.text.xStreamBufferIsEmpty,"ax",%progbits
 1158              		.align	2
 1159              		.global	xStreamBufferIsEmpty
 1160              		.syntax unified
 1161              		.arm
 1162              		.fpu neon
 1164              	xStreamBufferIsEmpty:
 1165              		@ args = 0, pretend = 0, frame = 0
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167 0000 10402DE9 		push	{r4, lr}
 1168 0004 004050E2 		subs	r4, r0, #0
 1169 0008 0500000A 		beq	.L270
 1170              	.L268:
 1171 000c 000094E5 		ldr	r0, [r4]
 1172 0010 043094E5 		ldr	r3, [r4, #4]
 1173 0014 030040E0 		sub	r0, r0, r3
 1174 0018 100F6FE1 		clz	r0, r0
 1175 001c A002A0E1 		lsr	r0, r0, #5
 1176 0020 1080BDE8 		pop	{r4, pc}
 1177              	.L270:
 1178 0024 000000E3 		movw	r0, #:lower16:.LC0
 1179 0028 E31FA0E3 		mov	r1, #908
 1180 002c 000040E3 		movt	r0, #:upper16:.LC0
 1181 0030 FEFFFFEB 		bl	R_OS_AssertCalled
 1182 0034 F4FFFFEA 		b	.L268
 1184              		.section	.text.xStreamBufferIsFull,"ax",%progbits
 1185              		.align	2
 1186              		.global	xStreamBufferIsFull
 1187              		.syntax unified
 1188              		.arm
 1189              		.fpu neon
 1191              	xStreamBufferIsFull:
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194 0000 10402DE9 		push	{r4, lr}
 1195 0004 004050E2 		subs	r4, r0, #0
 1196 0008 0F00000A 		beq	.L280
 1197 000c 082094E5 		ldr	r2, [r4, #8]
 1198 0010 000094E5 		ldr	r0, [r4]
 1199 0014 1C10D4E5 		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 1200 0018 043094E5 		ldr	r3, [r4, #4]
 1201 001c 000082E0 		add	r0, r2, r0
 1202 0020 010040E2 		sub	r0, r0, #1
 1203 0024 010011E3 		tst	r1, #1
 1204 0028 030040E0 		sub	r0, r0, r3
 1205 002c 0430A013 		movne	r3, #4
 1206 0030 0030A003 		moveq	r3, #0
 1207 0034 000052E1 		cmp	r2, r0
 1208 0038 02004090 		subls	r0, r0, r2
 1209 003c 030050E1 		cmp	r0, r3
 1210 0040 0000A083 		movhi	r0, #0
 1211 0044 0100A093 		movls	r0, #1
 1212 0048 1080BDE8 		pop	{r4, pc}
 1213              	.L280:
 1214 004c 000000E3 		movw	r0, #:lower16:.LC0
 1215 0050 A31300E3 		movw	r1, #931
 1216 0054 000040E3 		movt	r0, #:upper16:.LC0
 1217 0058 FEFFFFEB 		bl	R_OS_AssertCalled
 1218 005c 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 1219 0060 F000F0E7 		.inst	0xe7f000f0
 1221              		.section	.text.xStreamBufferSendCompletedFromISR,"ax",%progbits
 1222              		.align	2
 1223              		.global	xStreamBufferSendCompletedFromISR
 1224              		.syntax unified
 1225              		.arm
 1226              		.fpu neon
 1228              	xStreamBufferSendCompletedFromISR:
 1229              		@ args = 0, pretend = 0, frame = 0
 1230              		@ frame_needed = 0, uses_anonymous_args = 0
 1231 0000 70402DE9 		push	{r4, r5, r6, lr}
 1232 0004 005050E2 		subs	r5, r0, #0
 1233 0008 08D04DE2 		sub	sp, sp, #8
 1234 000c 0140A0E1 		mov	r4, r1
 1235 0010 1300000A 		beq	.L286
 1236              	.L282:
 1237 0014 FEFFFFEB 		bl	ulPortSetInterruptMask
 1238 0018 0060A0E1 		mov	r6, r0
 1239 001c 100095E5 		ldr	r0, [r5, #16]
 1240 0020 000050E3 		cmp	r0, #0
 1241 0024 0040A001 		moveq	r4, r0
 1242 0028 0800000A 		beq	.L283
 1243 002c 0030A0E3 		mov	r3, #0
 1244 0030 100095E5 		ldr	r0, [r5, #16]
 1245 0034 0320A0E1 		mov	r2, r3
 1246 0038 00408DE5 		str	r4, [sp]
 1247 003c 0310A0E1 		mov	r1, r3
 1248 0040 0140A0E3 		mov	r4, #1
 1249 0044 FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 1250 0048 0030A0E3 		mov	r3, #0
 1251 004c 103085E5 		str	r3, [r5, #16]
 1252              	.L283:
 1253 0050 0600A0E1 		mov	r0, r6
 1254 0054 FEFFFFEB 		bl	vPortClearInterruptMask
 1255 0058 0400A0E1 		mov	r0, r4
 1256 005c 08D08DE2 		add	sp, sp, #8
 1257              		@ sp needed
 1258 0060 7080BDE8 		pop	{r4, r5, r6, pc}
 1259              	.L286:
 1260 0064 000000E3 		movw	r0, #:lower16:.LC0
 1261 0068 C61300E3 		movw	r1, #966
 1262 006c 000040E3 		movt	r0, #:upper16:.LC0
 1263 0070 FEFFFFEB 		bl	R_OS_AssertCalled
 1264 0074 E6FFFFEA 		b	.L282
 1266              		.section	.text.xStreamBufferReceiveCompletedFromISR,"ax",%progbits
 1267              		.align	2
 1268              		.global	xStreamBufferReceiveCompletedFromISR
 1269              		.syntax unified
 1270              		.arm
 1271              		.fpu neon
 1273              	xStreamBufferReceiveCompletedFromISR:
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 1276 0000 70402DE9 		push	{r4, r5, r6, lr}
 1277 0004 005050E2 		subs	r5, r0, #0
 1278 0008 08D04DE2 		sub	sp, sp, #8
 1279 000c 0140A0E1 		mov	r4, r1
 1280 0010 1300000A 		beq	.L292
 1281              	.L288:
 1282 0014 FEFFFFEB 		bl	ulPortSetInterruptMask
 1283 0018 0060A0E1 		mov	r6, r0
 1284 001c 140095E5 		ldr	r0, [r5, #20]
 1285 0020 000050E3 		cmp	r0, #0
 1286 0024 0040A001 		moveq	r4, r0
 1287 0028 0800000A 		beq	.L289
 1288 002c 0030A0E3 		mov	r3, #0
 1289 0030 140095E5 		ldr	r0, [r5, #20]
 1290 0034 0320A0E1 		mov	r2, r3
 1291 0038 00408DE5 		str	r4, [sp]
 1292 003c 0310A0E1 		mov	r1, r3
 1293 0040 0140A0E3 		mov	r4, #1
 1294 0044 FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 1295 0048 0030A0E3 		mov	r3, #0
 1296 004c 143085E5 		str	r3, [r5, #20]
 1297              	.L289:
 1298 0050 0600A0E1 		mov	r0, r6
 1299 0054 FEFFFFEB 		bl	vPortClearInterruptMask
 1300 0058 0400A0E1 		mov	r0, r4
 1301 005c 08D08DE2 		add	sp, sp, #8
 1302              		@ sp needed
 1303 0060 7080BDE8 		pop	{r4, r5, r6, pc}
 1304              	.L292:
 1305 0064 000000E3 		movw	r0, #:lower16:.LC0
 1306 0068 F91FA0E3 		mov	r1, #996
 1307 006c 000040E3 		movt	r0, #:upper16:.LC0
 1308 0070 FEFFFFEB 		bl	R_OS_AssertCalled
 1309 0074 E6FFFFEA 		b	.L288
 1311              		.section	.text.uxStreamBufferGetStreamBufferNumber,"ax",%progbits
 1312              		.align	2
 1313              		.global	uxStreamBufferGetStreamBufferNumber
 1314              		.syntax unified
 1315              		.arm
 1316              		.fpu neon
 1318              	uxStreamBufferGetStreamBufferNumber:
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321              		@ link register save eliminated.
 1322 0000 200090E5 		ldr	r0, [r0, #32]
 1323 0004 1EFF2FE1 		bx	lr
 1325              		.section	.text.vStreamBufferSetStreamBufferNumber,"ax",%progbits
 1326              		.align	2
 1327              		.global	vStreamBufferSetStreamBufferNumber
 1328              		.syntax unified
 1329              		.arm
 1330              		.fpu neon
 1332              	vStreamBufferSetStreamBufferNumber:
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335              		@ link register save eliminated.
 1336 0000 201080E5 		str	r1, [r0, #32]
 1337 0004 1EFF2FE1 		bx	lr
 1339              		.section	.text.ucStreamBufferGetStreamBufferType,"ax",%progbits
 1340              		.align	2
 1341              		.global	ucStreamBufferGetStreamBufferType
 1342              		.syntax unified
 1343              		.arm
 1344              		.fpu neon
 1346              	ucStreamBufferGetStreamBufferType:
 1347              		@ args = 0, pretend = 0, frame = 0
 1348              		@ frame_needed = 0, uses_anonymous_args = 0
 1349              		@ link register save eliminated.
 1350 0000 1C00D0E5 		ldrb	r0, [r0, #28]	@ zero_extendqisi2
 1351 0004 010080E3 		orr	r0, r0, #1
 1352 0008 1EFF2FE1 		bx	lr
 1354              		.section	.rodata.xStreamBufferGenericCreate.str1.4,"aMS",%progbits,1
 1355              		.align	2
 1356              	.LC0:
 1357 0000 2E2E2F73 		.ascii	"../src/FreeRTOS/stream_buffer.c\000"
 1357      72632F46 
 1357      72656552 
 1357      544F532F 
 1357      73747265 
 1358              		.ident	"GCC: (GNU Tools for ARM Embedded Processors 6-2017-q2-update) 6.3.1 20170620 (release) [AR
DEFINED SYMBOLS
                            *ABS*:00000000 stream_buffer.c
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:14     .text.xStreamBufferGenericCreate:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:20     .text.xStreamBufferGenericCreate:00000000 xStreamBufferGenericCreate
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1356   .rodata.xStreamBufferGenericCreate.str1.4:00000000 .LC0
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:80     .text.vStreamBufferDelete:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:86     .text.vStreamBufferDelete:00000000 vStreamBufferDelete
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:112    .text.xStreamBufferReset:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:118    .text.xStreamBufferReset:00000000 xStreamBufferReset
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:173    .text.xStreamBufferSetTriggerLevel:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:179    .text.xStreamBufferSetTriggerLevel:00000000 xStreamBufferSetTriggerLevel
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:203    .text.xStreamBufferSpacesAvailable:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:209    .text.xStreamBufferSpacesAvailable:00000000 xStreamBufferSpacesAvailable
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:233    .text.xStreamBufferBytesAvailable:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:239    .text.xStreamBufferBytesAvailable:00000000 xStreamBufferBytesAvailable
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:262    .text.xStreamBufferSend:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:268    .text.xStreamBufferSend:00000000 xStreamBufferSend
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:518    .text.xStreamBufferSendFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:524    .text.xStreamBufferSendFromISR:00000000 xStreamBufferSendFromISR
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:717    .text.xStreamBufferReceive:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:723    .text.xStreamBufferReceive:00000000 xStreamBufferReceive
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:954    .text.xStreamBufferReceiveFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:960    .text.xStreamBufferReceiveFromISR:00000000 xStreamBufferReceiveFromISR
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1158   .text.xStreamBufferIsEmpty:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1164   .text.xStreamBufferIsEmpty:00000000 xStreamBufferIsEmpty
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1185   .text.xStreamBufferIsFull:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1191   .text.xStreamBufferIsFull:00000000 xStreamBufferIsFull
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1222   .text.xStreamBufferSendCompletedFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1228   .text.xStreamBufferSendCompletedFromISR:00000000 xStreamBufferSendCompletedFromISR
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1267   .text.xStreamBufferReceiveCompletedFromISR:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1273   .text.xStreamBufferReceiveCompletedFromISR:00000000 xStreamBufferReceiveCompletedFromISR
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1312   .text.uxStreamBufferGetStreamBufferNumber:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1318   .text.uxStreamBufferGetStreamBufferNumber:00000000 uxStreamBufferGetStreamBufferNumber
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1326   .text.vStreamBufferSetStreamBufferNumber:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1332   .text.vStreamBufferSetStreamBufferNumber:00000000 vStreamBufferSetStreamBufferNumber
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1340   .text.ucStreamBufferGetStreamBufferType:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1346   .text.ucStreamBufferGetStreamBufferType:00000000 ucStreamBufferGetStreamBufferType
C:\Users\a5050395\AppData\Local\Temp\cctYbQQk.s:1355   .rodata.xStreamBufferGenericCreate.str1.4:00000000 $d

UNDEFINED SYMBOLS
pvPortMalloc
memset
R_OS_AssertCalled
vPortFree
vTaskSetTimeOutState
xTaskNotifyStateClear
xTaskGetCurrentTaskHandle
vPortExitCritical
xTaskNotifyWait
xTaskCheckForTimeOut
vPortEnterCritical
memcpy
vTaskSuspendAll
xTaskGenericNotify
xTaskResumeAll
ulPortSetInterruptMask
xTaskGenericNotifyFromISR
vPortClearInterruptMask
