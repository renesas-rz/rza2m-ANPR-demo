
;; Function xEventGroupSetBits (xEventGroupSetBits, funcdef_no=6, decl_uid=6848, cgraph_uid=6, symbol_order=6)


Analyzing loop at ../src/FreeRTOS/event_groups.c:530
../src/FreeRTOS/event_groups.c:530:8: note: ===== analyze_loop_nest =====
../src/FreeRTOS/event_groups.c:530:8: note: === vect_analyze_loop_form ===
../src/FreeRTOS/event_groups.c:530:8: note: not vectorized: control flow in loop.
../src/FreeRTOS/event_groups.c:530:8: note: bad loop form.
../src/FreeRTOS/event_groups.c:504:13: note: vectorized 0 loops in function.
xEventGroupSetBits (void * xEventGroup, const EventBits_t uxBitsToSet)
{
  BaseType_t xMatchFound;
  EventBits_t uxBitsWaitedFor;
  EventBits_t uxBitsToClear;
  const struct ListItem_t * pxListEnd;
  struct ListItem_t * pxNext;
  struct ListItem_t * pxListItem;
  long unsigned int _14;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _26;
  long unsigned int _28;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _34;
  long unsigned int _38;
  EventBits_t _41;
  long unsigned int pretmp_44;
  long unsigned int prephitmp_45;
  long unsigned int _48;
  long unsigned int prephitmp_49;
  long unsigned int prephitmp_50;
  long unsigned int prephitmp_52;
  long unsigned int prephitmp_53;

  <bb 2>:
  if (xEventGroup_10(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  R_OS_AssertCalled ("../src/FreeRTOS/event_groups.c", 515);

  <bb 4>:
  _14 = uxBitsToSet_13(D) & 4278190080;
  if (_14 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  R_OS_AssertCalled ("../src/FreeRTOS/event_groups.c", 516);

  <bb 6>:
  pxListEnd_17 = &MEM[(struct List_t *)xEventGroup_10(D) + 4B].xListEnd;
  vTaskSuspendAll ();
  pxListItem_19 = MEM[(struct List_t *)xEventGroup_10(D) + 4B].xListEnd.pxNext;
  _20 = MEM[(struct EventGroup_t *)xEventGroup_10(D)].uxEventBits;
  _21 = uxBitsToSet_13(D) | _20;
  MEM[(struct EventGroup_t *)xEventGroup_10(D)].uxEventBits = _21;
  if (pxListEnd_17 != pxListItem_19)
    goto <bb 7>;
  else
    goto <bb 16>;

  <bb 7>:

  <bb 8>:
  # pxListItem_5 = PHI <pxListItem_19(7), pxNext_23(14)>
  # uxBitsToClear_47 = PHI <0(7), uxBitsToClear_3(14)>
  # prephitmp_53 = PHI <_21(7), prephitmp_45(14)>
  pxNext_23 = pxListItem_5->pxNext;
  uxBitsWaitedFor_24 = pxListItem_5->xItemValue;
  uxBitsWaitedFor_25 = uxBitsWaitedFor_24 & 16777215;
  _26 = uxBitsWaitedFor_24 & 67108864;
  if (_26 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _28 = uxBitsWaitedFor_25 & prephitmp_53;
  if (_28 != 0)
    goto <bb 17>;
  else
    goto <bb 13>;

  <bb 10>:
  _30 = uxBitsWaitedFor_25 & prephitmp_53;
  if (uxBitsWaitedFor_25 == _30)
    goto <bb 17>;
  else
    goto <bb 13>;

  <bb 11>:
  uxBitsToClear_32 = uxBitsWaitedFor_25 | uxBitsToClear_47;

  <bb 12>:
  # uxBitsToClear_2 = PHI <uxBitsToClear_47(17), uxBitsToClear_32(11)>
  _34 = prephitmp_53 | 33554432;
  vTaskRemoveFromUnorderedEventList (pxListItem_5, _34);
  pretmp_44 = MEM[(struct EventGroup_t *)xEventGroup_10(D)].uxEventBits;

  <bb 13>:
  # uxBitsToClear_3 = PHI <uxBitsToClear_47(10), uxBitsToClear_47(9), uxBitsToClear_2(12)>
  # prephitmp_45 = PHI <prephitmp_53(10), prephitmp_53(9), pretmp_44(12)>
  if (pxListEnd_17 != pxNext_23)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  goto <bb 8>;

  <bb 15>:
  # uxBitsToClear_51 = PHI <uxBitsToClear_3(13)>
  # prephitmp_50 = PHI <prephitmp_45(13)>
  _48 = ~uxBitsToClear_51;

  <bb 16>:
  # prephitmp_52 = PHI <prephitmp_50(15), _21(6)>
  # prephitmp_49 = PHI <_48(15), 4294967295(6)>
  _38 = prephitmp_49 & prephitmp_52;
  MEM[(struct EventGroup_t *)xEventGroup_10(D)].uxEventBits = _38;
  xTaskResumeAll ();
  _41 = MEM[(struct EventGroup_t *)xEventGroup_10(D)].uxEventBits;
  return _41;

  <bb 17>:
  _31 = uxBitsWaitedFor_24 & 16777216;
  if (_31 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

}



;; Function vEventGroupDelete (vEventGroupDelete, funcdef_no=7, decl_uid=6861, cgraph_uid=7, symbol_order=7)


Analyzing loop at ../src/FreeRTOS/event_groups.c:607
../src/FreeRTOS/event_groups.c:607:8: note: ===== analyze_loop_nest =====
../src/FreeRTOS/event_groups.c:607:8: note: === vect_analyze_loop_form ===
../src/FreeRTOS/event_groups.c:607:8: note: not vectorized: control flow in loop.
../src/FreeRTOS/event_groups.c:607:8: note: bad loop form.
../src/FreeRTOS/event_groups.c:598:6: note: vectorized 0 loops in function.
vEventGroupDelete (void * xEventGroup)
{
  const struct MiniListItem_t * pretmp_2;
  long unsigned int _6;
  struct xLIST_ITEM * _7;
  long unsigned int _15;
  struct xLIST_ITEM * pretmp_18;
  struct xLIST_ITEM * prephitmp_19;

  <bb 2>:
  vTaskSuspendAll ();
  _15 ={v} MEM[(const struct List_t *)xEventGroup_3(D) + 4B].uxNumberOfItems;
  if (_15 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  vPortFree (xEventGroup_3(D));
  xTaskResumeAll ();
  return;

  <bb 4>:
  pretmp_2 = &MEM[(const struct List_t *)xEventGroup_3(D) + 4B].xListEnd;

  <bb 5>:
  _7 = MEM[(const struct List_t *)xEventGroup_3(D) + 4B].xListEnd.pxNext;
  if (pretmp_2 == _7)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  R_OS_AssertCalled ("../src/FreeRTOS/event_groups.c", 611);
  pretmp_18 = MEM[(const struct List_t *)xEventGroup_3(D) + 4B].xListEnd.pxNext;

  <bb 7>:
  # prephitmp_19 = PHI <_7(5), pretmp_18(6)>
  vTaskRemoveFromUnorderedEventList (prephitmp_19, 33554432);
  _6 ={v} MEM[(const struct List_t *)xEventGroup_3(D) + 4B].uxNumberOfItems;
  if (_6 != 0)
    goto <bb 8>;
  else
    goto <bb 3>;

  <bb 8>:
  goto <bb 5>;

}


