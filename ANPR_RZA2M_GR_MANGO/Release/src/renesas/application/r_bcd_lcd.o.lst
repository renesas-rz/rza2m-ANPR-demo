   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"r_bcd_lcd.c"
  13              		.section	.text.IntCallbackFunc,"ax",%progbits
  14              		.align	2
  15              		.syntax unified
  16              		.arm
  17              		.fpu neon
  19              	IntCallbackFunc:
  20              		@ args = 0, pretend = 0, frame = 0
  21              		@ frame_needed = 0, uses_anonymous_args = 0
  22 0000 030050E3 		cmp	r0, #3
  23 0004 0900000A 		beq	.L20
  24 0008 010050E3 		cmp	r0, #1
  25 000c 1EFF2F11 		bxne	lr
  26 0010 003000E3 		movw	r3, #:lower16:.LANCHOR6
  27 0014 003040E3 		movt	r3, #:upper16:.LANCHOR6
  28 0018 002093E5 		ldr	r2, [r3]
  29 001c 000052E3 		cmp	r2, #0
  30 0020 002093C5 		ldrgt	r2, [r3]
  31 0024 012042C2 		subgt	r2, r2, #1
  32 0028 002083C5 		strgt	r2, [r3]
  33 002c 1EFF2FE1 		bx	lr
  34              	.L20:
  35 0030 70402DE9 		push	{r4, r5, r6, lr}
  36 0034 005000E3 		movw	r5, #:lower16:.LANCHOR0
  37 0038 005040E3 		movt	r5, #:upper16:.LANCHOR0
  38 003c 003095E5 		ldr	r3, [r5]
  39 0040 000053E3 		cmp	r3, #0
  40 0044 0A00000A 		beq	.L3
  41 0048 004000E3 		movw	r4, #:lower16:.LANCHOR1
  42 004c 004040E3 		movt	r4, #:upper16:.LANCHOR1
  43 0050 000094E5 		ldr	r0, [r4]
  44 0054 000050E3 		cmp	r0, #0
  45 0058 2200001A 		bne	.L4
  46 005c 002000E3 		movw	r2, #:lower16:.LANCHOR2
  47 0060 0110A0E3 		mov	r1, #1
  48 0064 002040E3 		movt	r2, #:upper16:.LANCHOR2
  49 0068 FEFFFFEB 		bl	R_RVAPI_GraphChangeSurfaceVDC
  50 006c 0130A0E3 		mov	r3, #1
  51 0070 003084E5 		str	r3, [r4]
  52              	.L3:
  53 0074 004000E3 		movw	r4, #:lower16:.LANCHOR3
  54 0078 004040E3 		movt	r4, #:upper16:.LANCHOR3
  55 007c 003094E5 		ldr	r3, [r4]
  56 0080 000053E3 		cmp	r3, #0
  57 0084 0C00000A 		beq	.L5
  58 0088 006000E3 		movw	r6, #:lower16:.LANCHOR4
  59 008c 006040E3 		movt	r6, #:upper16:.LANCHOR4
  60 0090 000096E5 		ldr	r0, [r6]
  61 0094 000050E3 		cmp	r0, #0
  62 0098 0B00000A 		beq	.L21
  63 009c 60209FE5 		ldr	r2, .L22
  64 00a0 0210A0E3 		mov	r1, #2
  65 00a4 0000A0E3 		mov	r0, #0
  66 00a8 FEFFFFEB 		bl	R_RVAPI_GraphChangeSurfaceVDC
  67 00ac 0030A0E3 		mov	r3, #0
  68 00b0 003086E5 		str	r3, [r6]
  69              	.L7:
  70 00b4 0200A0E3 		mov	r0, #2
  71 00b8 FEFFFFEB 		bl	DrawSwapBuffer
  72              	.L5:
  73 00bc 0030A0E3 		mov	r3, #0
  74 00c0 003085E5 		str	r3, [r5]
  75 00c4 003084E5 		str	r3, [r4]
  76 00c8 7080BDE8 		pop	{r4, r5, r6, pc}
  77              	.L21:
  78 00cc 002000E3 		movw	r2, #:lower16:.LANCHOR5
  79 00d0 0210A0E3 		mov	r1, #2
  80 00d4 002040E3 		movt	r2, #:upper16:.LANCHOR5
  81 00d8 FEFFFFEB 		bl	R_RVAPI_GraphChangeSurfaceVDC
  82 00dc 0130A0E3 		mov	r3, #1
  83 00e0 003086E5 		str	r3, [r6]
  84 00e4 F2FFFFEA 		b	.L7
  85              	.L4:
  86 00e8 18209FE5 		ldr	r2, .L22+4
  87 00ec 0110A0E3 		mov	r1, #1
  88 00f0 0000A0E3 		mov	r0, #0
  89 00f4 FEFFFFEB 		bl	R_RVAPI_GraphChangeSurfaceVDC
  90 00f8 0030A0E3 		mov	r3, #0
  91 00fc 003084E5 		str	r3, [r4]
  92 0100 DBFFFFEA 		b	.L3
  93              	.L23:
  94              		.align	2
  95              	.L22:
  96 0104 000C0300 		.word	.LANCHOR5+199680
  97 0108 00C01200 		.word	.LANCHOR2+1228800
  99              		.section	.text.R_BCD_LcdGetVramAddress,"ax",%progbits
 100              		.align	2
 101              		.global	R_BCD_LcdGetVramAddress
 102              		.syntax unified
 103              		.arm
 104              		.fpu neon
 106              	R_BCD_LcdGetVramAddress:
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110 0000 003000E3 		movw	r3, #:lower16:.LANCHOR0
 111 0004 002000E3 		movw	r2, #:lower16:.LANCHOR1
 112 0008 003040E3 		movt	r3, #:upper16:.LANCHOR0
 113 000c 002040E3 		movt	r2, #:upper16:.LANCHOR1
 114 0010 003093E5 		ldr	r3, [r3]
 115 0014 000092E5 		ldr	r0, [r2]
 116 0018 4B29A0E3 		mov	r2, #1228800
 117 001c 000053E3 		cmp	r3, #0
 118 0020 003000E3 		movw	r3, #:lower16:.LANCHOR2
 119 0024 003040E3 		movt	r3, #:upper16:.LANCHOR2
 120 0028 01006012 		rsbne	r0, r0, #1
 121 002c 923020E0 		mla	r0, r2, r0, r3
 122 0030 1EFF2FE1 		bx	lr
 124              		.section	.text.R_BCD_LcdGetvisableVramAddress,"ax",%progbits
 125              		.align	2
 126              		.global	R_BCD_LcdGetvisableVramAddress
 127              		.syntax unified
 128              		.arm
 129              		.fpu neon
 131              	R_BCD_LcdGetvisableVramAddress:
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135 0000 003000E3 		movw	r3, #:lower16:.LANCHOR0
 136 0004 002000E3 		movw	r2, #:lower16:.LANCHOR1
 137 0008 003040E3 		movt	r3, #:upper16:.LANCHOR0
 138 000c 002040E3 		movt	r2, #:upper16:.LANCHOR1
 139 0010 003093E5 		ldr	r3, [r3]
 140 0014 000092E5 		ldr	r0, [r2]
 141 0018 4B29A0E3 		mov	r2, #1228800
 142 001c 000053E3 		cmp	r3, #0
 143 0020 003000E3 		movw	r3, #:lower16:.LANCHOR2
 144 0024 003040E3 		movt	r3, #:upper16:.LANCHOR2
 145 0028 01006002 		rsbeq	r0, r0, #1
 146 002c 923020E0 		mla	r0, r2, r0, r3
 147 0030 1EFF2FE1 		bx	lr
 149              		.section	.text.R_BCD_LcdGetOLVramAddress,"ax",%progbits
 150              		.align	2
 151              		.global	R_BCD_LcdGetOLVramAddress
 152              		.syntax unified
 153              		.arm
 154              		.fpu neon
 156              	R_BCD_LcdGetOLVramAddress:
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160 0000 003000E3 		movw	r3, #:lower16:.LANCHOR3
 161 0004 002000E3 		movw	r2, #:lower16:.LANCHOR4
 162 0008 003040E3 		movt	r3, #:upper16:.LANCHOR3
 163 000c 002040E3 		movt	r2, #:upper16:.LANCHOR4
 164 0010 003093E5 		ldr	r3, [r3]
 165 0014 000092E5 		ldr	r0, [r2]
 166 0018 C32BA0E3 		mov	r2, #199680
 167 001c 000053E3 		cmp	r3, #0
 168 0020 003000E3 		movw	r3, #:lower16:.LANCHOR5
 169 0024 003040E3 		movt	r3, #:upper16:.LANCHOR5
 170 0028 01006012 		rsbne	r0, r0, #1
 171 002c 923020E0 		mla	r0, r2, r0, r3
 172 0030 1EFF2FE1 		bx	lr
 174              		.section	.text.r_display_init,"ax",%progbits
 175              		.align	2
 176              		.global	r_display_init
 177              		.syntax unified
 178              		.arm
 179              		.fpu neon
 181              	r_display_init:
 182              		@ args = 0, pretend = 0, frame = 48
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 185 0004 30D04DE2 		sub	sp, sp, #48
 186 0008 0240A0E3 		mov	r4, #2
 187 000c 0730A0E3 		mov	r3, #7
 188 0010 00C0A0E3 		mov	ip, #0
 189 0014 2720A0E3 		mov	r2, #39
 190 0018 0350A0E3 		mov	r5, #3
 191 001c 0C708DE2 		add	r7, sp, #12
 192 0020 04108DE2 		add	r1, sp, #4
 193 0024 B431CDE1 		strh	r3, [sp, #20]	@ movhi
 194 0028 0060A0E1 		mov	r6, r0
 195 002c 1100CDE5 		strb	r0, [sp, #17]
 196 0030 0450CDE5 		strb	r5, [sp, #4]
 197 0034 05C0CDE5 		strb	ip, [sp, #5]
 198 0038 0C40CDE5 		strb	r4, [sp, #12]
 199 003c 0D40CDE5 		strb	r4, [sp, #13]
 200 0040 1040CDE5 		strb	r4, [sp, #16]
 201 0044 1640CDE5 		strb	r4, [sp, #22]
 202 0048 B221CDE1 		strh	r2, [sp, #18]	@ movhi
 203 004c 08708DE5 		str	r7, [sp, #8]
 204 0050 FEFFFFEB 		bl	R_RVAPI_InitializeVDC
 205 0054 003050E2 		subs	r3, r0, #0
 206 0058 2300001A 		bne	.L34
 207 005c 01C0A0E3 		mov	ip, #1
 208 0060 0720A0E1 		mov	r2, r7
 209 0064 0600A0E1 		mov	r0, r6
 210 0068 0C10A0E1 		mov	r1, ip
 211 006c BC30CDE1 		strh	r3, [sp, #12]	@ movhi
 212 0070 3BE300E3 		movw	lr, #827
 213 0074 BE50CDE1 		strh	r5, [sp, #14]	@ movhi
 214 0078 1880A0E3 		mov	r8, #24
 215 007c B431CDE1 		strh	r3, [sp, #20]	@ movhi
 216 0080 327EA0E3 		mov	r7, #800
 217 0084 2130CDE5 		strb	r3, [sp, #33]
 218 0088 8860A0E3 		mov	r6, #136
 219 008c 2240CDE5 		strb	r4, [sp, #34]
 220 0090 155EA0E3 		mov	r5, #336
 221 0094 2330CDE5 		strb	r3, [sp, #35]
 222 0098 054CA0E3 		mov	r4, #1280
 223 009c 2530CDE5 		strb	r3, [sp, #37]
 224 00a0 B832CDE1 		strh	r3, [sp, #40]	@ movhi
 225 00a4 2D30CDE5 		strb	r3, [sp, #45]
 226 00a8 693EA0E3 		mov	r3, #1680
 227 00ac 20C0CDE5 		strb	ip, [sp, #32]
 228 00b0 24C0CDE5 		strb	ip, [sp, #36]
 229 00b4 2AC0CDE5 		strb	ip, [sp, #42]
 230 00b8 2BC0CDE5 		strb	ip, [sp, #43]
 231 00bc 2CC0CDE5 		strb	ip, [sp, #44]
 232 00c0 8FC600E3 		movw	ip, #1679
 233 00c4 B632CDE1 		strh	r3, [sp, #38]	@ movhi
 234 00c8 B081CDE1 		strh	r8, [sp, #16]	@ movhi
 235 00cc B271CDE1 		strh	r7, [sp, #18]	@ movhi
 236 00d0 B661CDE1 		strh	r6, [sp, #22]	@ movhi
 237 00d4 B851CDE1 		strh	r5, [sp, #24]	@ movhi
 238 00d8 BA41CDE1 		strh	r4, [sp, #26]	@ movhi
 239 00dc BCE1CDE1 		strh	lr, [sp, #28]	@ movhi
 240 00e0 BEC1CDE1 		strh	ip, [sp, #30]	@ movhi
 241 00e4 FEFFFFEB 		bl	R_RVAPI_DispControlConfigVDC
 242 00e8 0030A0E1 		mov	r3, r0
 243              	.L34:
 244 00ec 0300A0E1 		mov	r0, r3
 245 00f0 30D08DE2 		add	sp, sp, #48
 246              		@ sp needed
 247 00f4 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 249              		.section	.text.R_BCD_LcdInit,"ax",%progbits
 250              		.align	2
 251              		.global	R_BCD_LcdInit
 252              		.syntax unified
 253              		.arm
 254              		.fpu neon
 256              	R_BCD_LcdInit:
 257              		@ args = 0, pretend = 0, frame = 1080
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 260 0004 11DD4DE2 		sub	sp, sp, #1088
 261 0008 0CD04DE2 		sub	sp, sp, #12
 262 000c 0000A0E3 		mov	r0, #0
 263 0010 FEFFFFEB 		bl	r_display_init
 264 0014 000050E3 		cmp	r0, #0
 265 0018 1A00000A 		beq	.L52
 266              	.L51:
 267 001c 28408DE2 		add	r4, sp, #40
 268              	.L37:
 269 0020 003000E3 		movw	r3, #:lower16:.LANCHOR5
 270 0024 0410A0E1 		mov	r1, r4
 271 0028 003040E3 		movt	r3, #:upper16:.LANCHOR5
 272 002c 322EA0E3 		mov	r2, #800
 273 0030 C3EB83E2 		add	lr, r3, #199680
 274 0034 1ACEA0E3 		mov	ip, #416
 275 0038 1E4EA0E3 		mov	r4, #480
 276 003c 0200A0E3 		mov	r0, #2
 277 0040 28308DE5 		str	r3, [sp, #40]
 278 0044 3C208DE5 		str	r2, [sp, #60]
 279 0048 2CE08DE5 		str	lr, [sp, #44]
 280 004c 34C08DE5 		str	ip, [sp, #52]
 281 0050 40408DE5 		str	r4, [sp, #64]
 282 0054 FEFFFFEB 		bl	DrawInit
 283 0058 0F30A0E3 		mov	r3, #15
 284 005c 0020A0E3 		mov	r2, #0
 285 0060 04308DE5 		str	r3, [sp, #4]
 286 0064 0210A0E1 		mov	r1, r2
 287 0068 00408DE5 		str	r4, [sp]
 288 006c 0A3DA0E3 		mov	r3, #640
 289 0070 0200A0E3 		mov	r0, #2
 290 0074 FEFFFFEB 		bl	DrawRectFill
 291              	.L44:
 292 0078 0000A0E3 		mov	r0, #0
 293 007c 11DD8DE2 		add	sp, sp, #1088
 294 0080 0CD08DE2 		add	sp, sp, #12
 295              		@ sp needed
 296 0084 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 297              	.L52:
 298 0088 003000E3 		movw	r3, #:lower16:IntCallbackFunc
 299 008c 7E2FA0E3 		mov	r2, #504
 300 0090 003040E3 		movt	r3, #:upper16:IntCallbackFunc
 301 0094 0310A0E3 		mov	r1, #3
 302 0098 FEFFFFEB 		bl	R_RVAPI_InterruptEnableVDC
 303 009c 002050E2 		subs	r2, r0, #0
 304 00a0 DDFFFF1A 		bne	.L51
 305 00a4 003000E3 		movw	r3, #:lower16:IntCallbackFunc
 306 00a8 0110A0E3 		mov	r1, #1
 307 00ac 003040E3 		movt	r3, #:upper16:IntCallbackFunc
 308 00b0 FEFFFFEB 		bl	R_RVAPI_InterruptEnableVDC
 309 00b4 000050E3 		cmp	r0, #0
 310 00b8 D7FFFF1A 		bne	.L51
 311 00bc 48508DE2 		add	r5, sp, #72
 312 00c0 5480C0F2 		vmov.i32	q12, #4  @ v4si
 313 00c4 0530A0E1 		mov	r3, r5
 314 00c8 A22BDFED 		vldr	d18, .L55
 315 00cc A33BDFED 		vldr	d19, .L55+8
 316              	.L38:
 317 00d0 F20162F2 		vmov	q8, q9  @ v4si
 318 00d4 112D8DE2 		add	r2, sp, #1088
 319 00d8 7265F0F2 		vshl.i32	q11, q9, #16
 320 00dc 103083E2 		add	r3, r3, #16
 321 00e0 5F07C7F3 		vorr.i32	q8, #4278190080
 322 00e4 082082E2 		add	r2, r2, #8
 323 00e8 7245E8F2 		vshl.i32	q10, q9, #8
 324 00ec F60160F2 		vorr	q8, q8, q11
 325 00f0 E82862F2 		vadd.i32	q9, q9, q12
 326 00f4 F40160F2 		vorr	q8, q8, q10
 327 00f8 040B43ED 		vstr	d16, [r3, #-16]
 328 00fc 021B43ED 		vstr	d17, [r3, #-8]
 329 0100 020053E1 		cmp	r3, r2
 330 0104 F1FFFF1A 		bne	.L38
 331 0108 28408DE2 		add	r4, sp, #40
 332 010c 00E0A0E3 		mov	lr, #0
 333 0110 00C000E3 		movw	ip, #:lower16:.LANCHOR2
 334 0114 A030A0E3 		mov	r3, #160
 335 0118 F020A0E3 		mov	r2, #240
 336 011c 00C040E3 		movt	ip, #:upper16:.LANCHOR2
 337 0120 0410A0E1 		mov	r1, r4
 338 0124 0170A0E3 		mov	r7, #1
 339 0128 0AADA0E3 		mov	r10, #640
 340 012c 1E8EA0E3 		mov	r8, #480
 341 0130 0E00A0E1 		mov	r0, lr
 342 0134 0A9CA0E3 		mov	r9, #2560
 343 0138 07B0A0E3 		mov	fp, #7
 344 013c 0260A0E3 		mov	r6, #2
 345 0140 B230C4E1 		strh	r3, [r4, #2]	@ movhi
 346 0144 10308DE5 		str	r3, [sp, #16]
 347 0148 40508DE5 		str	r5, [sp, #64]
 348 014c 34C08DE5 		str	ip, [sp, #52]
 349 0150 B620C4E1 		strh	r2, [r4, #6]	@ movhi
 350 0154 14208DE5 		str	r2, [sp, #20]
 351 0158 B8A0C4E1 		strh	r10, [r4, #8]	@ movhi
 352 015c B480C4E1 		strh	r8, [r4, #4]	@ movhi
 353 0160 44E0CDE5 		strb	lr, [sp, #68]
 354 0164 2870CDE5 		strb	r7, [sp, #40]
 355 0168 3C70CDE5 		strb	r7, [sp, #60]
 356 016c 38908DE5 		str	r9, [sp, #56]
 357 0170 45B0CDE5 		strb	fp, [sp, #69]
 358 0174 4660CDE5 		strb	r6, [sp, #70]
 359 0178 FEFFFFEB 		bl	R_RVAPI_GraphCreateSurfaceVDC
 360 017c 003050E2 		subs	r3, r0, #0
 361 0180 0310A0E1 		mov	r1, r3
 362 0184 A5FFFF1A 		bne	.L37
 363 0188 10309DE5 		ldr	r3, [sp, #16]
 364 018c 009000E3 		movw	r9, #:lower16:.LANCHOR5
 365 0190 14209DE5 		ldr	r2, [sp, #20]
 366 0194 009040E3 		movt	r9, #:upper16:.LANCHOR5
 367 0198 726BDFED 		vldr	d22, .L55+16
 368 019c 737BDFED 		vldr	d23, .L55+24
 369 01a0 1ACEA0E3 		mov	ip, #416
 370 01a4 B230C4E1 		strh	r3, [r4, #2]	@ movhi
 371 01a8 0630A0E3 		mov	r3, #6
 372 01ac 714BDFED 		vldr	d20, .L55+32
 373 01b0 725BDFED 		vldr	d21, .L55+40
 374 01b4 B620C4E1 		strh	r2, [r4, #6]	@ movhi
 375 01b8 322EA0E3 		mov	r2, #800
 376 01bc 712BDFED 		vldr	d18, .L55+48
 377 01c0 723BDFED 		vldr	d19, .L55+56
 378 01c4 10108DE5 		str	r1, [sp, #16]
 379 01c8 720BDFED 		vldr	d16, .L55+64
 380 01cc 731BDFED 		vldr	d17, .L55+72
 381 01d0 4410CDE5 		strb	r1, [sp, #68]
 382 01d4 0410A0E1 		mov	r1, r4
 383 01d8 DF6A45F4 		vst1.64	{d22-d23}, [r5:64]
 384 01dc 3C30CDE5 		strb	r3, [sp, #60]
 385 01e0 0330A0E3 		mov	r3, #3
 386 01e4 044BC5ED 		vstr	d20, [r5, #16]
 387 01e8 065BC5ED 		vstr	d21, [r5, #24]
 388 01ec 40508DE5 		str	r5, [sp, #64]
 389 01f0 082BC5ED 		vstr	d18, [r5, #32]
 390 01f4 0A3BC5ED 		vstr	d19, [r5, #40]
 391 01f8 38C08DE5 		str	ip, [sp, #56]
 392 01fc 0C0BC5ED 		vstr	d16, [r5, #48]
 393 0200 0E1BC5ED 		vstr	d17, [r5, #56]
 394 0204 B820C4E1 		strh	r2, [r4, #8]	@ movhi
 395 0208 14208DE5 		str	r2, [sp, #20]
 396 020c 4630CDE5 		strb	r3, [sp, #70]
 397 0210 2860CDE5 		strb	r6, [sp, #40]
 398 0214 B480C4E1 		strh	r8, [r4, #4]	@ movhi
 399 0218 45B0CDE5 		strb	fp, [sp, #69]
 400 021c 34908DE5 		str	r9, [sp, #52]
 401 0220 FEFFFFEB 		bl	R_RVAPI_GraphCreateSurfaceVDC
 402 0224 14209DE5 		ldr	r2, [sp, #20]
 403 0228 C33B89E2 		add	r3, r9, #199680
 404 022c 1ACEA0E3 		mov	ip, #416
 405 0230 0050A0E1 		mov	r5, r0
 406 0234 0410A0E1 		mov	r1, r4
 407 0238 0600A0E1 		mov	r0, r6
 408 023c 34C08DE5 		str	ip, [sp, #52]
 409 0240 2C308DE5 		str	r3, [sp, #44]
 410 0244 3C208DE5 		str	r2, [sp, #60]
 411 0248 28908DE5 		str	r9, [sp, #40]
 412 024c 40808DE5 		str	r8, [sp, #64]
 413 0250 FEFFFFEB 		bl	DrawInit
 414 0254 0F20A0E3 		mov	r2, #15
 415 0258 00808DE5 		str	r8, [sp]
 416 025c 04208DE5 		str	r2, [sp, #4]
 417 0260 0A30A0E1 		mov	r3, r10
 418 0264 10209DE5 		ldr	r2, [sp, #16]
 419 0268 0600A0E1 		mov	r0, r6
 420 026c 0210A0E1 		mov	r1, r2
 421 0270 FEFFFFEB 		bl	DrawRectFill
 422 0274 000055E3 		cmp	r5, #0
 423 0278 7EFFFF1A 		bne	.L44
 424 027c 02ECA0E3 		mov	lr, #512
 425 0280 083044E2 		sub	r3, r4, #8
 426 0284 0320A0E3 		mov	r2, #3
 427 0288 00308DE5 		str	r3, [sp]
 428 028c 7FC0E0E3 		mvn	ip, #127
 429 0290 2120CDE5 		strb	r2, [sp, #33]
 430 0294 0C3044E2 		sub	r3, r4, #12
 431 0298 0420A0E1 		mov	r2, r4
 432 029c 0510A0E1 		mov	r1, r5
 433 02a0 0500A0E1 		mov	r0, r5
 434 02a4 B0E0C4E1 		strh	lr, [r4]	@ movhi
 435 02a8 B2E0C4E1 		strh	lr, [r4, #2]	@ movhi
 436 02ac B4E0C4E1 		strh	lr, [r4, #4]	@ movhi
 437 02b0 2050CDE5 		strb	r5, [sp, #32]
 438 02b4 2250CDE5 		strb	r5, [sp, #34]
 439 02b8 2360CDE5 		strb	r6, [sp, #35]
 440 02bc 2470CDE5 		strb	r7, [sp, #36]
 441 02c0 1CC0CDE5 		strb	ip, [sp, #28]
 442 02c4 1DC0CDE5 		strb	ip, [sp, #29]
 443 02c8 1EC0CDE5 		strb	ip, [sp, #30]
 444 02cc FEFFFFEB 		bl	R_RVAPI_DispCalibrationVDC
 445 02d0 000050E3 		cmp	r0, #0
 446 02d4 0700000A 		beq	.L53
 447 02d8 001000E3 		movw	r1, #:lower16:VDC_LcdPortSetting
 448 02dc 0000A0E3 		mov	r0, #0
 449 02e0 001040E3 		movt	r1, #:upper16:VDC_LcdPortSetting
 450 02e4 FEFFFFEB 		bl	R_RVAPI_DispPortSettingVDC
 451              	.L54:
 452 02e8 0000A0E3 		mov	r0, #0
 453 02ec 11DD8DE2 		add	sp, sp, #1088
 454 02f0 0CD08DE2 		add	sp, sp, #12
 455              		@ sp needed
 456 02f4 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 457              	.L53:
 458 02f8 005000E3 		movw	r5, #:lower16:.LANCHOR9
 459 02fc 004000E3 		movw	r4, #:lower16:.LANCHOR10
 460 0300 00E000E3 		movw	lr, #:lower16:.LANCHOR11
 461 0304 00C000E3 		movw	ip, #:lower16:.LANCHOR12
 462 0308 00E040E3 		movt	lr, #:upper16:.LANCHOR11
 463 030c 00C040E3 		movt	ip, #:upper16:.LANCHOR12
 464 0310 005040E3 		movt	r5, #:upper16:.LANCHOR9
 465 0314 004040E3 		movt	r4, #:upper16:.LANCHOR10
 466 0318 003000E3 		movw	r3, #:lower16:.LANCHOR7
 467 031c 002000E3 		movw	r2, #:lower16:.LANCHOR8
 468 0320 0710A0E1 		mov	r1, r7
 469 0324 0C508DE5 		str	r5, [sp, #12]
 470 0328 08408DE5 		str	r4, [sp, #8]
 471 032c 003040E3 		movt	r3, #:upper16:.LANCHOR7
 472 0330 04E08DE5 		str	lr, [sp, #4]
 473 0334 002040E3 		movt	r2, #:upper16:.LANCHOR8
 474 0338 00C08DE5 		str	ip, [sp]
 475 033c FEFFFFEB 		bl	R_RVAPI_DispGammaVDC
 476 0340 001000E3 		movw	r1, #:lower16:VDC_LcdPortSetting
 477 0344 0000A0E3 		mov	r0, #0
 478 0348 001040E3 		movt	r1, #:upper16:VDC_LcdPortSetting
 479 034c FEFFFFEB 		bl	R_RVAPI_DispPortSettingVDC
 480 0350 E4FFFFEA 		b	.L54
 481              	.L56:
 482 0354 00F020E3 		.align	3
 483              	.L55:
 484 0358 00000000 		.word	0
 485 035c 01000000 		.word	1
 486 0360 02000000 		.word	2
 487 0364 03000000 		.word	3
 488 0368 000000FF 		.word	-16777216
 489 036c FF0000FF 		.word	-16776961
 490 0370 00FF00FF 		.word	-16711936
 491 0374 0000FFFF 		.word	-65536
 492 0378 FFFFFFFF 		.word	-1
 493 037c FFFF00FF 		.word	-16711681
 494 0380 00FFFFFF 		.word	-256
 495 0384 FF00FFFF 		.word	-65281
 496 0388 800000FF 		.word	-16777088
 497 038c 006400FF 		.word	-16751616
 498 0390 FFBF00FF 		.word	-16728065
 499 0394 800080FF 		.word	-8388480
 500 0398 808080FF 		.word	-8355712
 501 039c 2A2AA5FF 		.word	-5952982
 502 03a0 80D7FFFF 		.word	-10368
 503 03a4 FFFFFF00 		.word	16777215
 505              		.section	.text.r_image_quality_adjustment,"ax",%progbits
 506              		.align	2
 507              		.global	r_image_quality_adjustment
 508              		.syntax unified
 509              		.arm
 510              		.fpu neon
 512              	r_image_quality_adjustment:
 513              		@ args = 0, pretend = 0, frame = 24
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515 0000 F0402DE9 		push	{r4, r5, r6, r7, lr}
 516 0004 2CD04DE2 		sub	sp, sp, #44
 517 0008 0030A0E3 		mov	r3, #0
 518 000c 18208DE2 		add	r2, sp, #24
 519 0010 02ECA0E3 		mov	lr, #512
 520 0014 7FC0E0E3 		mvn	ip, #127
 521 0018 0310A0E1 		mov	r1, r3
 522 001c 00208DE5 		str	r2, [sp]
 523 0020 1830CDE5 		strb	r3, [sp, #24]
 524 0024 0360A0E3 		mov	r6, #3
 525 0028 1A30CDE5 		strb	r3, [sp, #26]
 526 002c 0250A0E3 		mov	r5, #2
 527 0030 0140A0E3 		mov	r4, #1
 528 0034 14308DE2 		add	r3, sp, #20
 529 0038 20208DE2 		add	r2, sp, #32
 530 003c B0E2CDE1 		strh	lr, [sp, #32]	@ movhi
 531 0040 B2E2CDE1 		strh	lr, [sp, #34]	@ movhi
 532 0044 0070A0E1 		mov	r7, r0
 533 0048 B4E2CDE1 		strh	lr, [sp, #36]	@ movhi
 534 004c 14C0CDE5 		strb	ip, [sp, #20]
 535 0050 15C0CDE5 		strb	ip, [sp, #21]
 536 0054 16C0CDE5 		strb	ip, [sp, #22]
 537 0058 1960CDE5 		strb	r6, [sp, #25]
 538 005c 1B50CDE5 		strb	r5, [sp, #27]
 539 0060 1C40CDE5 		strb	r4, [sp, #28]
 540 0064 FEFFFFEB 		bl	R_RVAPI_DispCalibrationVDC
 541 0068 000050E3 		cmp	r0, #0
 542 006c 1100001A 		bne	.L58
 543 0070 006000E3 		movw	r6, #:lower16:.LANCHOR9
 544 0074 005000E3 		movw	r5, #:lower16:.LANCHOR10
 545 0078 00E000E3 		movw	lr, #:lower16:.LANCHOR11
 546 007c 00C000E3 		movw	ip, #:lower16:.LANCHOR12
 547 0080 006040E3 		movt	r6, #:upper16:.LANCHOR9
 548 0084 005040E3 		movt	r5, #:upper16:.LANCHOR10
 549 0088 00E040E3 		movt	lr, #:upper16:.LANCHOR11
 550 008c 00C040E3 		movt	ip, #:upper16:.LANCHOR12
 551 0090 003000E3 		movw	r3, #:lower16:.LANCHOR7
 552 0094 002000E3 		movw	r2, #:lower16:.LANCHOR8
 553 0098 0410A0E1 		mov	r1, r4
 554 009c 0700A0E1 		mov	r0, r7
 555 00a0 0C608DE5 		str	r6, [sp, #12]
 556 00a4 003040E3 		movt	r3, #:upper16:.LANCHOR7
 557 00a8 08508DE5 		str	r5, [sp, #8]
 558 00ac 002040E3 		movt	r2, #:upper16:.LANCHOR8
 559 00b0 00508DE8 		stm	sp, {ip, lr}
 560 00b4 FEFFFFEB 		bl	R_RVAPI_DispGammaVDC
 561              	.L58:
 562 00b8 2CD08DE2 		add	sp, sp, #44
 563              		@ sp needed
 564 00bc F080BDE8 		pop	{r4, r5, r6, r7, pc}
 566              		.section	.text.r_video_quality_adjustment,"ax",%progbits
 567              		.align	2
 568              		.global	r_video_quality_adjustment
 569              		.syntax unified
 570              		.arm
 571              		.fpu neon
 573              	r_video_quality_adjustment:
 574              		@ args = 0, pretend = 0, frame = 48
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576 0000 70402DE9 		push	{r4, r5, r6, lr}
 577 0004 40D04DE2 		sub	sp, sp, #64
 578 0008 0030A0E3 		mov	r3, #0
 579 000c 012CA0E3 		mov	r2, #256
 580 0010 80C0A0E3 		mov	ip, #128
 581 0014 03E0A0E3 		mov	lr, #3
 582 0018 20108DE2 		add	r1, sp, #32
 583 001c B822CDE1 		strh	r2, [sp, #40]	@ movhi
 584 0020 B023CDE1 		strh	r2, [sp, #48]	@ movhi
 585 0024 0040A0E1 		mov	r4, r0
 586 0028 B823CDE1 		strh	r2, [sp, #56]	@ movhi
 587 002c 2030CDE5 		strb	r3, [sp, #32]
 588 0030 BA32CDE1 		strh	r3, [sp, #42]	@ movhi
 589 0034 BC32CDE1 		strh	r3, [sp, #44]	@ movhi
 590 0038 BE32CDE1 		strh	r3, [sp, #46]	@ movhi
 591 003c B233CDE1 		strh	r3, [sp, #50]	@ movhi
 592 0040 B433CDE1 		strh	r3, [sp, #52]	@ movhi
 593 0044 B633CDE1 		strh	r3, [sp, #54]	@ movhi
 594 0048 21E0CDE5 		strb	lr, [sp, #33]
 595 004c B2C2CDE1 		strh	ip, [sp, #34]	@ movhi
 596 0050 B4C2CDE1 		strh	ip, [sp, #36]	@ movhi
 597 0054 B6C2CDE1 		strh	ip, [sp, #38]	@ movhi
 598 0058 FEFFFFEB 		bl	R_RVAPI_VideoCalibrationVDC
 599 005c 002050E2 		subs	r2, r0, #0
 600 0060 1D00001A 		bne	.L61
 601 0064 5000C0F2 		vmov.i32	q8, #0  @ v16qi
 602 0068 18C08DE2 		add	ip, sp, #24
 603 006c 10108DE2 		add	r1, sp, #16
 604 0070 00208DE5 		str	r2, [sp]
 605 0074 0400A0E1 		mov	r0, r4
 606 0078 08C08DE5 		str	ip, [sp, #8]
 607 007c 04108DE5 		str	r1, [sp, #4]
 608 0080 0AC0A0E3 		mov	ip, #10
 609 0084 32EEA0E3 		mov	lr, #800
 610 0088 0210A0E1 		mov	r1, r2
 611 008c 20308DE2 		add	r3, sp, #32
 612 0090 156EA0E3 		mov	r6, #336
 613 0094 055CA0E3 		mov	r5, #1280
 614 0098 1840A0E3 		mov	r4, #24
 615 009c 1020CDE5 		strb	r2, [sp, #16]
 616 00a0 1320CDE5 		strb	r2, [sp, #19]
 617 00a4 1420CDE5 		strb	r2, [sp, #20]
 618 00a8 1120CDE5 		strb	r2, [sp, #17]
 619 00ac 1620CDE5 		strb	r2, [sp, #22]
 620 00b0 1720CDE5 		strb	r2, [sp, #23]
 621 00b4 080BCDED 		vstr	d16, [sp, #32]
 622 00b8 0A1BCDED 		vstr	d17, [sp, #40]
 623 00bc 12C0CDE5 		strb	ip, [sp, #18]
 624 00c0 15C0CDE5 		strb	ip, [sp, #21]
 625 00c4 BC61CDE1 		strh	r6, [sp, #28]	@ movhi
 626 00c8 BE51CDE1 		strh	r5, [sp, #30]	@ movhi
 627 00cc B841CDE1 		strh	r4, [sp, #24]	@ movhi
 628 00d0 BAE1CDE1 		strh	lr, [sp, #26]	@ movhi
 629 00d4 FEFFFFEB 		bl	R_RVAPI_VideoSharpnessLtiVDC
 630 00d8 0020A0E1 		mov	r2, r0
 631              	.L61:
 632 00dc 0200A0E1 		mov	r0, r2
 633 00e0 40D08DE2 		add	sp, sp, #64
 634              		@ sp needed
 635 00e4 7080BDE8 		pop	{r4, r5, r6, pc}
 637              		.section	.text.R_BCD_LcdSwapVideoBuffer,"ax",%progbits
 638              		.align	2
 639              		.global	R_BCD_LcdSwapVideoBuffer
 640              		.syntax unified
 641              		.arm
 642              		.fpu neon
 644              	R_BCD_LcdSwapVideoBuffer:
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648 0000 003000E3 		movw	r3, #:lower16:.LANCHOR0
 649 0004 0120A0E3 		mov	r2, #1
 650 0008 003040E3 		movt	r3, #:upper16:.LANCHOR0
 651 000c 002083E5 		str	r2, [r3]
 652 0010 1EFF2FE1 		bx	lr
 654              		.section	.text.R_BCD_LcdSwapGraphicsBuffer,"ax",%progbits
 655              		.align	2
 656              		.global	R_BCD_LcdSwapGraphicsBuffer
 657              		.syntax unified
 658              		.arm
 659              		.fpu neon
 661              	R_BCD_LcdSwapGraphicsBuffer:
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 003000E3 		movw	r3, #:lower16:.LANCHOR3
 666 0004 0120A0E3 		mov	r2, #1
 667 0008 003040E3 		movt	r3, #:upper16:.LANCHOR3
 668 000c 002083E5 		str	r2, [r3]
 669 0010 1EFF2FE1 		bx	lr
 671              		.section	.text.R_BCD_LcdVSync,"ax",%progbits
 672              		.align	2
 673              		.global	R_BCD_LcdVSync
 674              		.syntax unified
 675              		.arm
 676              		.fpu neon
 678              	R_BCD_LcdVSync:
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681 0000 70402DE9 		push	{r4, r5, r6, lr}
 682 0004 005000E3 		movw	r5, #:lower16:.LANCHOR0
 683 0008 005040E3 		movt	r5, #:upper16:.LANCHOR0
 684 000c 003095E5 		ldr	r3, [r5]
 685 0010 000053E3 		cmp	r3, #0
 686 0014 0A00000A 		beq	.L66
 687 0018 004000E3 		movw	r4, #:lower16:.LANCHOR1
 688 001c 004040E3 		movt	r4, #:upper16:.LANCHOR1
 689 0020 000094E5 		ldr	r0, [r4]
 690 0024 000050E3 		cmp	r0, #0
 691 0028 2200001A 		bne	.L67
 692 002c 002000E3 		movw	r2, #:lower16:.LANCHOR2
 693 0030 0110A0E3 		mov	r1, #1
 694 0034 002040E3 		movt	r2, #:upper16:.LANCHOR2
 695 0038 FEFFFFEB 		bl	R_RVAPI_GraphChangeSurfaceVDC
 696 003c 0130A0E3 		mov	r3, #1
 697 0040 003084E5 		str	r3, [r4]
 698              	.L66:
 699 0044 004000E3 		movw	r4, #:lower16:.LANCHOR3
 700 0048 004040E3 		movt	r4, #:upper16:.LANCHOR3
 701 004c 003094E5 		ldr	r3, [r4]
 702 0050 000053E3 		cmp	r3, #0
 703 0054 0C00000A 		beq	.L68
 704 0058 006000E3 		movw	r6, #:lower16:.LANCHOR4
 705 005c 006040E3 		movt	r6, #:upper16:.LANCHOR4
 706 0060 000096E5 		ldr	r0, [r6]
 707 0064 000050E3 		cmp	r0, #0
 708 0068 0B00000A 		beq	.L78
 709 006c 60209FE5 		ldr	r2, .L79
 710 0070 0210A0E3 		mov	r1, #2
 711 0074 0000A0E3 		mov	r0, #0
 712 0078 FEFFFFEB 		bl	R_RVAPI_GraphChangeSurfaceVDC
 713 007c 0030A0E3 		mov	r3, #0
 714 0080 003086E5 		str	r3, [r6]
 715              	.L70:
 716 0084 0200A0E3 		mov	r0, #2
 717 0088 FEFFFFEB 		bl	DrawSwapBuffer
 718              	.L68:
 719 008c 0030A0E3 		mov	r3, #0
 720 0090 003085E5 		str	r3, [r5]
 721 0094 003084E5 		str	r3, [r4]
 722 0098 7080BDE8 		pop	{r4, r5, r6, pc}
 723              	.L78:
 724 009c 002000E3 		movw	r2, #:lower16:.LANCHOR5
 725 00a0 0210A0E3 		mov	r1, #2
 726 00a4 002040E3 		movt	r2, #:upper16:.LANCHOR5
 727 00a8 FEFFFFEB 		bl	R_RVAPI_GraphChangeSurfaceVDC
 728 00ac 0130A0E3 		mov	r3, #1
 729 00b0 003086E5 		str	r3, [r6]
 730 00b4 F2FFFFEA 		b	.L70
 731              	.L67:
 732 00b8 18209FE5 		ldr	r2, .L79+4
 733 00bc 0110A0E3 		mov	r1, #1
 734 00c0 0000A0E3 		mov	r0, #0
 735 00c4 FEFFFFEB 		bl	R_RVAPI_GraphChangeSurfaceVDC
 736 00c8 0030A0E3 		mov	r3, #0
 737 00cc 003084E5 		str	r3, [r4]
 738 00d0 DBFFFFEA 		b	.L66
 739              	.L80:
 740              		.align	2
 741              	.L79:
 742 00d4 000C0300 		.word	.LANCHOR5+199680
 743 00d8 00C01200 		.word	.LANCHOR2+1228800
 745              		.section	.text.R_BCD_LcdWriteLine,"ax",%progbits
 746              		.align	2
 747              		.global	R_BCD_LcdWriteLine
 748              		.syntax unified
 749              		.arm
 750              		.fpu neon
 752              	R_BCD_LcdWriteLine:
 753              		@ args = 4, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755 0000 04E02DE5 		str	lr, [sp, #-4]!
 756 0004 0CD04DE2 		sub	sp, sp, #12
 757 0008 10C0DDE5 		ldrb	ip, [sp, #16]	@ zero_extendqisi2
 758 000c 00308DE5 		str	r3, [sp]
 759 0010 0230A0E1 		mov	r3, r2
 760 0014 04C08DE5 		str	ip, [sp, #4]
 761 0018 0120A0E1 		mov	r2, r1
 762 001c 0010A0E1 		mov	r1, r0
 763 0020 0200A0E3 		mov	r0, #2
 764 0024 FEFFFFEB 		bl	DrawLine
 765 0028 0CD08DE2 		add	sp, sp, #12
 766              		@ sp needed
 767 002c 04F09DE4 		ldr	pc, [sp], #4
 769              		.section	.text.R_BCD_LcdWriteChar,"ax",%progbits
 770              		.align	2
 771              		.global	R_BCD_LcdWriteChar
 772              		.syntax unified
 773              		.arm
 774              		.fpu neon
 776              	R_BCD_LcdWriteChar:
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779 0000 F84F2DE9 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 780 0004 200040E2 		sub	r0, r0, #32
 781 0008 F8619FE5 		ldr	r6, .L147
 782 000c 800080E0 		add	r0, r0, r0, lsl #1
 783 0010 0180A0E1 		mov	r8, r1
 784 0014 0370A0E1 		mov	r7, r3
 785 0018 189082E2 		add	r9, r2, #24
 786 001c 0250A0E1 		mov	r5, r2
 787 0020 01B081E2 		add	fp, r1, #1
 788 0024 006286E0 		add	r6, r6, r0, lsl #4
 789 0028 02A081E2 		add	r10, r1, #2
 790 002c 1A0000EA 		b	.L96
 791              	.L84:
 792 0030 400014E3 		tst	r4, #64
 793 0034 2200001A 		bne	.L135
 794              	.L85:
 795 0038 200014E3 		tst	r4, #32
 796 003c 2700001A 		bne	.L136
 797              	.L86:
 798 0040 100014E3 		tst	r4, #16
 799 0044 2C00001A 		bne	.L137
 800              	.L87:
 801 0048 080014E3 		tst	r4, #8
 802 004c 3100001A 		bne	.L138
 803              	.L88:
 804 0050 040014E3 		tst	r4, #4
 805 0054 3600001A 		bne	.L139
 806              	.L89:
 807 0058 020014E3 		tst	r4, #2
 808 005c 3B00001A 		bne	.L140
 809              	.L90:
 810 0060 010014E3 		tst	r4, #1
 811 0064 4000001A 		bne	.L141
 812              	.L91:
 813 0068 0040D6E5 		ldrb	r4, [r6]	@ zero_extendqisi2
 814 006c A433B0E1 		lsrs	r3, r4, #7
 815 0070 4500001A 		bne	.L142
 816              	.L92:
 817 0074 400014E3 		tst	r4, #64
 818 0078 4A00001A 		bne	.L143
 819              	.L93:
 820 007c 200014E3 		tst	r4, #32
 821 0080 4F00001A 		bne	.L144
 822              	.L94:
 823 0084 100014E3 		tst	r4, #16
 824 0088 5400001A 		bne	.L145
 825              	.L95:
 826 008c 015085E2 		add	r5, r5, #1
 827 0090 026086E2 		add	r6, r6, #2
 828 0094 090055E1 		cmp	r5, r9
 829 0098 5900000A 		beq	.L146
 830              	.L96:
 831 009c 014056E5 		ldrb	r4, [r6, #-1]	@ zero_extendqisi2
 832 00a0 A433B0E1 		lsrs	r3, r4, #7
 833 00a4 E1FFFF0A 		beq	.L84
 834 00a8 0730A0E1 		mov	r3, r7
 835 00ac 0520A0E1 		mov	r2, r5
 836 00b0 0810A0E1 		mov	r1, r8
 837 00b4 0200A0E3 		mov	r0, #2
 838 00b8 FEFFFFEB 		bl	DrawPoint
 839 00bc 400014E3 		tst	r4, #64
 840 00c0 DCFFFF0A 		beq	.L85
 841              	.L135:
 842 00c4 0730A0E1 		mov	r3, r7
 843 00c8 0520A0E1 		mov	r2, r5
 844 00cc 0B10A0E1 		mov	r1, fp
 845 00d0 0200A0E3 		mov	r0, #2
 846 00d4 FEFFFFEB 		bl	DrawPoint
 847 00d8 200014E3 		tst	r4, #32
 848 00dc D7FFFF0A 		beq	.L86
 849              	.L136:
 850 00e0 0730A0E1 		mov	r3, r7
 851 00e4 0520A0E1 		mov	r2, r5
 852 00e8 0A10A0E1 		mov	r1, r10
 853 00ec 0200A0E3 		mov	r0, #2
 854 00f0 FEFFFFEB 		bl	DrawPoint
 855 00f4 100014E3 		tst	r4, #16
 856 00f8 D2FFFF0A 		beq	.L87
 857              	.L137:
 858 00fc 0730A0E1 		mov	r3, r7
 859 0100 0520A0E1 		mov	r2, r5
 860 0104 031088E2 		add	r1, r8, #3
 861 0108 0200A0E3 		mov	r0, #2
 862 010c FEFFFFEB 		bl	DrawPoint
 863 0110 080014E3 		tst	r4, #8
 864 0114 CDFFFF0A 		beq	.L88
 865              	.L138:
 866 0118 0730A0E1 		mov	r3, r7
 867 011c 0520A0E1 		mov	r2, r5
 868 0120 041088E2 		add	r1, r8, #4
 869 0124 0200A0E3 		mov	r0, #2
 870 0128 FEFFFFEB 		bl	DrawPoint
 871 012c 040014E3 		tst	r4, #4
 872 0130 C8FFFF0A 		beq	.L89
 873              	.L139:
 874 0134 0730A0E1 		mov	r3, r7
 875 0138 0520A0E1 		mov	r2, r5
 876 013c 051088E2 		add	r1, r8, #5
 877 0140 0200A0E3 		mov	r0, #2
 878 0144 FEFFFFEB 		bl	DrawPoint
 879 0148 020014E3 		tst	r4, #2
 880 014c C3FFFF0A 		beq	.L90
 881              	.L140:
 882 0150 0730A0E1 		mov	r3, r7
 883 0154 0520A0E1 		mov	r2, r5
 884 0158 061088E2 		add	r1, r8, #6
 885 015c 0200A0E3 		mov	r0, #2
 886 0160 FEFFFFEB 		bl	DrawPoint
 887 0164 010014E3 		tst	r4, #1
 888 0168 BEFFFF0A 		beq	.L91
 889              	.L141:
 890 016c 0730A0E1 		mov	r3, r7
 891 0170 0520A0E1 		mov	r2, r5
 892 0174 071088E2 		add	r1, r8, #7
 893 0178 0200A0E3 		mov	r0, #2
 894 017c FEFFFFEB 		bl	DrawPoint
 895 0180 0040D6E5 		ldrb	r4, [r6]	@ zero_extendqisi2
 896 0184 A433B0E1 		lsrs	r3, r4, #7
 897 0188 B9FFFF0A 		beq	.L92
 898              	.L142:
 899 018c 0730A0E1 		mov	r3, r7
 900 0190 0520A0E1 		mov	r2, r5
 901 0194 081088E2 		add	r1, r8, #8
 902 0198 0200A0E3 		mov	r0, #2
 903 019c FEFFFFEB 		bl	DrawPoint
 904 01a0 400014E3 		tst	r4, #64
 905 01a4 B4FFFF0A 		beq	.L93
 906              	.L143:
 907 01a8 0730A0E1 		mov	r3, r7
 908 01ac 0520A0E1 		mov	r2, r5
 909 01b0 091088E2 		add	r1, r8, #9
 910 01b4 0200A0E3 		mov	r0, #2
 911 01b8 FEFFFFEB 		bl	DrawPoint
 912 01bc 200014E3 		tst	r4, #32
 913 01c0 AFFFFF0A 		beq	.L94
 914              	.L144:
 915 01c4 0730A0E1 		mov	r3, r7
 916 01c8 0520A0E1 		mov	r2, r5
 917 01cc 0A1088E2 		add	r1, r8, #10
 918 01d0 0200A0E3 		mov	r0, #2
 919 01d4 FEFFFFEB 		bl	DrawPoint
 920 01d8 100014E3 		tst	r4, #16
 921 01dc AAFFFF0A 		beq	.L95
 922              	.L145:
 923 01e0 0520A0E1 		mov	r2, r5
 924 01e4 0730A0E1 		mov	r3, r7
 925 01e8 0B1088E2 		add	r1, r8, #11
 926 01ec 0200A0E3 		mov	r0, #2
 927 01f0 015085E2 		add	r5, r5, #1
 928 01f4 026086E2 		add	r6, r6, #2
 929 01f8 FEFFFFEB 		bl	DrawPoint
 930 01fc 090055E1 		cmp	r5, r9
 931 0200 A5FFFF1A 		bne	.L96
 932              	.L146:
 933 0204 F88FBDE8 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 934              	.L148:
 935              		.align	2
 936              	.L147:
 937 0208 01000000 		.word	g_font_array+1
 939              		.section	.text.R_BCD_LcdWriteString,"ax",%progbits
 940              		.align	2
 941              		.global	R_BCD_LcdWriteString
 942              		.syntax unified
 943              		.arm
 944              		.fpu neon
 946              	R_BCD_LcdWriteString:
 947              		@ args = 0, pretend = 0, frame = 16
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 950 0004 14D04DE2 		sub	sp, sp, #20
 951 0008 0180A0E1 		mov	r8, r1
 952 000c 0250A0E1 		mov	r5, r2
 953 0010 0370A0E1 		mov	r7, r3
 954 0014 0040A0E1 		mov	r4, r0
 955 0018 08208DE5 		str	r2, [sp, #8]
 956 001c 00008DE5 		str	r0, [sp]
 957 0020 FEFFFFEB 		bl	strlen
 958 0024 000050E3 		cmp	r0, #0
 959 0028 8C0000DA 		ble	.L149
 960 002c 003000E3 		movw	r3, #:lower16:g_font_array
 961 0030 0B8088E2 		add	r8, r8, #11
 962 0034 189085E2 		add	r9, r5, #24
 963 0038 002084E0 		add	r2, r4, r0
 964 003c 003040E3 		movt	r3, #:upper16:g_font_array
 965 0040 04208DE5 		str	r2, [sp, #4]
 966 0044 0C308DE5 		str	r3, [sp, #12]
 967              	.L164:
 968 0048 00209DE5 		ldr	r2, [sp]
 969 004c 0BB048E2 		sub	fp, r8, #11
 970 0050 08509DE5 		ldr	r5, [sp, #8]
 971 0054 0AA048E2 		sub	r10, r8, #10
 972 0058 0130D2E4 		ldrb	r3, [r2], #1	@ zero_extendqisi2
 973 005c 00208DE5 		str	r2, [sp]
 974 0060 203043E2 		sub	r3, r3, #32
 975 0064 0C209DE5 		ldr	r2, [sp, #12]
 976 0068 833083E0 		add	r3, r3, r3, lsl #1
 977 006c 036282E0 		add	r6, r2, r3, lsl #4
 978 0070 016086E2 		add	r6, r6, #1
 979 0074 1A0000EA 		b	.L163
 980              	.L151:
 981 0078 400014E3 		tst	r4, #64
 982 007c 2200001A 		bne	.L205
 983              	.L152:
 984 0080 200014E3 		tst	r4, #32
 985 0084 2700001A 		bne	.L206
 986              	.L153:
 987 0088 100014E3 		tst	r4, #16
 988 008c 2C00001A 		bne	.L207
 989              	.L154:
 990 0090 080014E3 		tst	r4, #8
 991 0094 3100001A 		bne	.L208
 992              	.L155:
 993 0098 040014E3 		tst	r4, #4
 994 009c 3600001A 		bne	.L209
 995              	.L156:
 996 00a0 020014E3 		tst	r4, #2
 997 00a4 3B00001A 		bne	.L210
 998              	.L157:
 999 00a8 010014E3 		tst	r4, #1
 1000 00ac 4000001A 		bne	.L211
 1001              	.L158:
 1002 00b0 0040D6E5 		ldrb	r4, [r6]	@ zero_extendqisi2
 1003 00b4 A433B0E1 		lsrs	r3, r4, #7
 1004 00b8 4500001A 		bne	.L212
 1005              	.L159:
 1006 00bc 400014E3 		tst	r4, #64
 1007 00c0 4A00001A 		bne	.L213
 1008              	.L160:
 1009 00c4 200014E3 		tst	r4, #32
 1010 00c8 4F00001A 		bne	.L214
 1011              	.L161:
 1012 00cc 100014E3 		tst	r4, #16
 1013 00d0 5400001A 		bne	.L215
 1014              	.L162:
 1015 00d4 015085E2 		add	r5, r5, #1
 1016 00d8 026086E2 		add	r6, r6, #2
 1017 00dc 090055E1 		cmp	r5, r9
 1018 00e0 5900000A 		beq	.L216
 1019              	.L163:
 1020 00e4 014056E5 		ldrb	r4, [r6, #-1]	@ zero_extendqisi2
 1021 00e8 A433B0E1 		lsrs	r3, r4, #7
 1022 00ec E1FFFF0A 		beq	.L151
 1023 00f0 0730A0E1 		mov	r3, r7
 1024 00f4 0520A0E1 		mov	r2, r5
 1025 00f8 0B10A0E1 		mov	r1, fp
 1026 00fc 0200A0E3 		mov	r0, #2
 1027 0100 FEFFFFEB 		bl	DrawPoint
 1028 0104 400014E3 		tst	r4, #64
 1029 0108 DCFFFF0A 		beq	.L152
 1030              	.L205:
 1031 010c 0730A0E1 		mov	r3, r7
 1032 0110 0520A0E1 		mov	r2, r5
 1033 0114 0A10A0E1 		mov	r1, r10
 1034 0118 0200A0E3 		mov	r0, #2
 1035 011c FEFFFFEB 		bl	DrawPoint
 1036 0120 200014E3 		tst	r4, #32
 1037 0124 D7FFFF0A 		beq	.L153
 1038              	.L206:
 1039 0128 0730A0E1 		mov	r3, r7
 1040 012c 0520A0E1 		mov	r2, r5
 1041 0130 091048E2 		sub	r1, r8, #9
 1042 0134 0200A0E3 		mov	r0, #2
 1043 0138 FEFFFFEB 		bl	DrawPoint
 1044 013c 100014E3 		tst	r4, #16
 1045 0140 D2FFFF0A 		beq	.L154
 1046              	.L207:
 1047 0144 0730A0E1 		mov	r3, r7
 1048 0148 0520A0E1 		mov	r2, r5
 1049 014c 081048E2 		sub	r1, r8, #8
 1050 0150 0200A0E3 		mov	r0, #2
 1051 0154 FEFFFFEB 		bl	DrawPoint
 1052 0158 080014E3 		tst	r4, #8
 1053 015c CDFFFF0A 		beq	.L155
 1054              	.L208:
 1055 0160 0730A0E1 		mov	r3, r7
 1056 0164 0520A0E1 		mov	r2, r5
 1057 0168 071048E2 		sub	r1, r8, #7
 1058 016c 0200A0E3 		mov	r0, #2
 1059 0170 FEFFFFEB 		bl	DrawPoint
 1060 0174 040014E3 		tst	r4, #4
 1061 0178 C8FFFF0A 		beq	.L156
 1062              	.L209:
 1063 017c 0730A0E1 		mov	r3, r7
 1064 0180 0520A0E1 		mov	r2, r5
 1065 0184 061048E2 		sub	r1, r8, #6
 1066 0188 0200A0E3 		mov	r0, #2
 1067 018c FEFFFFEB 		bl	DrawPoint
 1068 0190 020014E3 		tst	r4, #2
 1069 0194 C3FFFF0A 		beq	.L157
 1070              	.L210:
 1071 0198 0730A0E1 		mov	r3, r7
 1072 019c 0520A0E1 		mov	r2, r5
 1073 01a0 051048E2 		sub	r1, r8, #5
 1074 01a4 0200A0E3 		mov	r0, #2
 1075 01a8 FEFFFFEB 		bl	DrawPoint
 1076 01ac 010014E3 		tst	r4, #1
 1077 01b0 BEFFFF0A 		beq	.L158
 1078              	.L211:
 1079 01b4 0730A0E1 		mov	r3, r7
 1080 01b8 0520A0E1 		mov	r2, r5
 1081 01bc 041048E2 		sub	r1, r8, #4
 1082 01c0 0200A0E3 		mov	r0, #2
 1083 01c4 FEFFFFEB 		bl	DrawPoint
 1084 01c8 0040D6E5 		ldrb	r4, [r6]	@ zero_extendqisi2
 1085 01cc A433B0E1 		lsrs	r3, r4, #7
 1086 01d0 B9FFFF0A 		beq	.L159
 1087              	.L212:
 1088 01d4 0730A0E1 		mov	r3, r7
 1089 01d8 0520A0E1 		mov	r2, r5
 1090 01dc 031048E2 		sub	r1, r8, #3
 1091 01e0 0200A0E3 		mov	r0, #2
 1092 01e4 FEFFFFEB 		bl	DrawPoint
 1093 01e8 400014E3 		tst	r4, #64
 1094 01ec B4FFFF0A 		beq	.L160
 1095              	.L213:
 1096 01f0 0730A0E1 		mov	r3, r7
 1097 01f4 0520A0E1 		mov	r2, r5
 1098 01f8 021048E2 		sub	r1, r8, #2
 1099 01fc 0200A0E3 		mov	r0, #2
 1100 0200 FEFFFFEB 		bl	DrawPoint
 1101 0204 200014E3 		tst	r4, #32
 1102 0208 AFFFFF0A 		beq	.L161
 1103              	.L214:
 1104 020c 0730A0E1 		mov	r3, r7
 1105 0210 0520A0E1 		mov	r2, r5
 1106 0214 011048E2 		sub	r1, r8, #1
 1107 0218 0200A0E3 		mov	r0, #2
 1108 021c FEFFFFEB 		bl	DrawPoint
 1109 0220 100014E3 		tst	r4, #16
 1110 0224 AAFFFF0A 		beq	.L162
 1111              	.L215:
 1112 0228 0520A0E1 		mov	r2, r5
 1113 022c 0730A0E1 		mov	r3, r7
 1114 0230 0810A0E1 		mov	r1, r8
 1115 0234 0200A0E3 		mov	r0, #2
 1116 0238 015085E2 		add	r5, r5, #1
 1117 023c 026086E2 		add	r6, r6, #2
 1118 0240 FEFFFFEB 		bl	DrawPoint
 1119 0244 090055E1 		cmp	r5, r9
 1120 0248 A5FFFF1A 		bne	.L163
 1121              	.L216:
 1122 024c 00309DE5 		ldr	r3, [sp]
 1123 0250 0C8088E2 		add	r8, r8, #12
 1124 0254 04209DE5 		ldr	r2, [sp, #4]
 1125 0258 020053E1 		cmp	r3, r2
 1126 025c 79FFFF1A 		bne	.L164
 1127              	.L149:
 1128 0260 14D08DE2 		add	sp, sp, #20
 1129              		@ sp needed
 1130 0264 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1132              		.section	.text.R_BCD_LcdClearGraphicsBuffer,"ax",%progbits
 1133              		.align	2
 1134              		.global	R_BCD_LcdClearGraphicsBuffer
 1135              		.syntax unified
 1136              		.arm
 1137              		.fpu neon
 1139              	R_BCD_LcdClearGraphicsBuffer:
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142              		@ link register save eliminated.
 1143 0000 003000E3 		movw	r3, #:lower16:.LANCHOR3
 1144 0004 002000E3 		movw	r2, #:lower16:.LANCHOR4
 1145 0008 003040E3 		movt	r3, #:upper16:.LANCHOR3
 1146 000c 002040E3 		movt	r2, #:upper16:.LANCHOR4
 1147 0010 003093E5 		ldr	r3, [r3]
 1148 0014 0010E0E3 		mvn	r1, #0
 1149 0018 000092E5 		ldr	r0, [r2]
 1150 001c C32BA0E3 		mov	r2, #199680
 1151 0020 000053E3 		cmp	r3, #0
 1152 0024 003000E3 		movw	r3, #:lower16:.LANCHOR5
 1153 0028 003040E3 		movt	r3, #:upper16:.LANCHOR5
 1154 002c 01006012 		rsbne	r0, r0, #1
 1155 0030 923020E0 		mla	r0, r2, r0, r3
 1156 0034 C32BA0E3 		mov	r2, #199680
 1157 0038 FEFFFFEA 		b	memset
 1159              		.section	.bss.Layer1_buffer_id,"aw",%nobits
 1160              		.align	2
 1161              		.set	.LANCHOR1,. + 0
 1164              	Layer1_buffer_id:
 1165 0000 00000000 		.space	4
 1166              		.section	.bss.Req_Layer1_Swap,"aw",%nobits
 1167              		.align	2
 1168              		.set	.LANCHOR0,. + 0
 1171              	Req_Layer1_Swap:
 1172 0000 00000000 		.space	4
 1173              		.section	.bss.Req_Layer2_Swap,"aw",%nobits
 1174              		.align	2
 1175              		.set	.LANCHOR3,. + 0
 1178              	Req_Layer2_Swap:
 1179 0000 00000000 		.space	4
 1180              		.section	.bss.layer2_buffer_id,"aw",%nobits
 1181              		.align	2
 1182              		.set	.LANCHOR4,. + 0
 1185              	layer2_buffer_id:
 1186 0000 00000000 		.space	4
 1187              		.section	.bss.vsync_count,"aw",%nobits
 1188              		.align	2
 1189              		.set	.LANCHOR6,. + 0
 1192              	vsync_count:
 1193 0000 00000000 		.space	4
 1194              		.section	.rodata.gam_b_gain.71111,"a",%progbits
 1195              		.align	3
 1196              		.set	.LANCHOR10,. + 0
 1199              	gam_b_gain.71111:
 1200 0000 0004     		.short	1024
 1201 0002 0004     		.short	1024
 1202 0004 0004     		.short	1024
 1203 0006 0004     		.short	1024
 1204 0008 0004     		.short	1024
 1205 000a 0004     		.short	1024
 1206 000c 0004     		.short	1024
 1207 000e 0004     		.short	1024
 1208 0010 0004     		.short	1024
 1209 0012 0004     		.short	1024
 1210 0014 0004     		.short	1024
 1211 0016 0004     		.short	1024
 1212 0018 0004     		.short	1024
 1213 001a 0004     		.short	1024
 1214 001c 0004     		.short	1024
 1215 001e 0004     		.short	1024
 1216 0020 0004     		.short	1024
 1217 0022 0004     		.short	1024
 1218 0024 0004     		.short	1024
 1219 0026 0004     		.short	1024
 1220 0028 0004     		.short	1024
 1221 002a 0004     		.short	1024
 1222 002c 0004     		.short	1024
 1223 002e 0004     		.short	1024
 1224 0030 0004     		.short	1024
 1225 0032 0004     		.short	1024
 1226 0034 0004     		.short	1024
 1227 0036 0004     		.short	1024
 1228 0038 0004     		.short	1024
 1229 003a 0004     		.short	1024
 1230 003c 0004     		.short	1024
 1231 003e 0004     		.short	1024
 1232              		.section	.rodata.gam_b_th.71112,"a",%progbits
 1233              		.align	3
 1234              		.set	.LANCHOR9,. + 0
 1237              	gam_b_th.71112:
 1238 0000 08       		.byte	8
 1239 0001 10       		.byte	16
 1240 0002 18       		.byte	24
 1241 0003 20       		.byte	32
 1242 0004 28       		.byte	40
 1243 0005 30       		.byte	48
 1244 0006 38       		.byte	56
 1245 0007 40       		.byte	64
 1246 0008 48       		.byte	72
 1247 0009 50       		.byte	80
 1248 000a 58       		.byte	88
 1249 000b 60       		.byte	96
 1250 000c 68       		.byte	104
 1251 000d 70       		.byte	112
 1252 000e 78       		.byte	120
 1253 000f 80       		.byte	-128
 1254 0010 88       		.byte	-120
 1255 0011 90       		.byte	-112
 1256 0012 98       		.byte	-104
 1257 0013 A0       		.byte	-96
 1258 0014 A8       		.byte	-88
 1259 0015 B0       		.byte	-80
 1260 0016 B8       		.byte	-72
 1261 0017 C0       		.byte	-64
 1262 0018 C8       		.byte	-56
 1263 0019 D0       		.byte	-48
 1264 001a D8       		.byte	-40
 1265 001b E0       		.byte	-32
 1266 001c E8       		.byte	-24
 1267 001d F0       		.byte	-16
 1268 001e F8       		.byte	-8
 1269              		.section	.rodata.gam_g_gain.71109,"a",%progbits
 1270              		.align	3
 1271              		.set	.LANCHOR12,. + 0
 1274              	gam_g_gain.71109:
 1275 0000 0004     		.short	1024
 1276 0002 0004     		.short	1024
 1277 0004 0004     		.short	1024
 1278 0006 0004     		.short	1024
 1279 0008 0004     		.short	1024
 1280 000a 0004     		.short	1024
 1281 000c 0004     		.short	1024
 1282 000e 0004     		.short	1024
 1283 0010 0004     		.short	1024
 1284 0012 0004     		.short	1024
 1285 0014 0004     		.short	1024
 1286 0016 0004     		.short	1024
 1287 0018 0004     		.short	1024
 1288 001a 0004     		.short	1024
 1289 001c 0004     		.short	1024
 1290 001e 0004     		.short	1024
 1291 0020 0004     		.short	1024
 1292 0022 0004     		.short	1024
 1293 0024 0004     		.short	1024
 1294 0026 0004     		.short	1024
 1295 0028 0004     		.short	1024
 1296 002a 0004     		.short	1024
 1297 002c 0004     		.short	1024
 1298 002e 0004     		.short	1024
 1299 0030 0004     		.short	1024
 1300 0032 0004     		.short	1024
 1301 0034 0004     		.short	1024
 1302 0036 0004     		.short	1024
 1303 0038 0004     		.short	1024
 1304 003a 0004     		.short	1024
 1305 003c 0004     		.short	1024
 1306 003e 0004     		.short	1024
 1307              		.section	.rodata.gam_g_th.71110,"a",%progbits
 1308              		.align	3
 1309              		.set	.LANCHOR11,. + 0
 1312              	gam_g_th.71110:
 1313 0000 08       		.byte	8
 1314 0001 10       		.byte	16
 1315 0002 18       		.byte	24
 1316 0003 20       		.byte	32
 1317 0004 28       		.byte	40
 1318 0005 30       		.byte	48
 1319 0006 38       		.byte	56
 1320 0007 40       		.byte	64
 1321 0008 48       		.byte	72
 1322 0009 50       		.byte	80
 1323 000a 58       		.byte	88
 1324 000b 60       		.byte	96
 1325 000c 68       		.byte	104
 1326 000d 70       		.byte	112
 1327 000e 78       		.byte	120
 1328 000f 80       		.byte	-128
 1329 0010 88       		.byte	-120
 1330 0011 90       		.byte	-112
 1331 0012 98       		.byte	-104
 1332 0013 A0       		.byte	-96
 1333 0014 A8       		.byte	-88
 1334 0015 B0       		.byte	-80
 1335 0016 B8       		.byte	-72
 1336 0017 C0       		.byte	-64
 1337 0018 C8       		.byte	-56
 1338 0019 D0       		.byte	-48
 1339 001a D8       		.byte	-40
 1340 001b E0       		.byte	-32
 1341 001c E8       		.byte	-24
 1342 001d F0       		.byte	-16
 1343 001e F8       		.byte	-8
 1344              		.section	.rodata.gam_r_gain.71113,"a",%progbits
 1345              		.align	3
 1346              		.set	.LANCHOR8,. + 0
 1349              	gam_r_gain.71113:
 1350 0000 0004     		.short	1024
 1351 0002 0004     		.short	1024
 1352 0004 0004     		.short	1024
 1353 0006 0004     		.short	1024
 1354 0008 0004     		.short	1024
 1355 000a 0004     		.short	1024
 1356 000c 0004     		.short	1024
 1357 000e 0004     		.short	1024
 1358 0010 0004     		.short	1024
 1359 0012 0004     		.short	1024
 1360 0014 0004     		.short	1024
 1361 0016 0004     		.short	1024
 1362 0018 0004     		.short	1024
 1363 001a 0004     		.short	1024
 1364 001c 0004     		.short	1024
 1365 001e 0004     		.short	1024
 1366 0020 0004     		.short	1024
 1367 0022 0004     		.short	1024
 1368 0024 0004     		.short	1024
 1369 0026 0004     		.short	1024
 1370 0028 0004     		.short	1024
 1371 002a 0004     		.short	1024
 1372 002c 0004     		.short	1024
 1373 002e 0004     		.short	1024
 1374 0030 0004     		.short	1024
 1375 0032 0004     		.short	1024
 1376 0034 0004     		.short	1024
 1377 0036 0004     		.short	1024
 1378 0038 0004     		.short	1024
 1379 003a 0004     		.short	1024
 1380 003c 0004     		.short	1024
 1381 003e 0004     		.short	1024
 1382              		.section	.rodata.gam_r_th.71114,"a",%progbits
 1383              		.align	3
 1384              		.set	.LANCHOR7,. + 0
 1387              	gam_r_th.71114:
 1388 0000 08       		.byte	8
 1389 0001 10       		.byte	16
 1390 0002 18       		.byte	24
 1391 0003 20       		.byte	32
 1392 0004 28       		.byte	40
 1393 0005 30       		.byte	48
 1394 0006 38       		.byte	56
 1395 0007 40       		.byte	64
 1396 0008 48       		.byte	72
 1397 0009 50       		.byte	80
 1398 000a 58       		.byte	88
 1399 000b 60       		.byte	96
 1400 000c 68       		.byte	104
 1401 000d 70       		.byte	112
 1402 000e 78       		.byte	120
 1403 000f 80       		.byte	-128
 1404 0010 88       		.byte	-120
 1405 0011 90       		.byte	-112
 1406 0012 98       		.byte	-104
 1407 0013 A0       		.byte	-96
 1408 0014 A8       		.byte	-88
 1409 0015 B0       		.byte	-80
 1410 0016 B8       		.byte	-72
 1411 0017 C0       		.byte	-64
 1412 0018 C8       		.byte	-56
 1413 0019 D0       		.byte	-48
 1414 001a D8       		.byte	-40
 1415 001b E0       		.byte	-32
 1416 001c E8       		.byte	-24
 1417 001d F0       		.byte	-16
 1418 001e F8       		.byte	-8
 1419              		.section	Uncache_IRAM,"aw",%progbits
 1420              		.align	2
 1421              		.set	.LANCHOR5,. + 0
 1424              	graphics2_buffer:
 1425 0000 00000000 		.space	399360
 1425      00000000 
 1425      00000000 
 1425      00000000 
 1425      00000000 
 1426              		.section	Video_RAM,"aw",%progbits
 1427              		.align	2
 1428              		.set	.LANCHOR2,. + 0
 1431              	video_buffer:
 1432 0000 00000000 		.space	2457600
 1432      00000000 
 1432      00000000 
 1432      00000000 
 1432      00000000 
 1433              		.ident	"GCC: (GNU Tools for ARM Embedded Processors 6-2017-q2-update) 6.3.1 20170620 (release) [AR
DEFINED SYMBOLS
                            *ABS*:00000000 r_bcd_lcd.c
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:14     .text.IntCallbackFunc:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:19     .text.IntCallbackFunc:00000000 IntCallbackFunc
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1189   .bss.vsync_count:00000000 .LANCHOR6
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1168   .bss.Req_Layer1_Swap:00000000 .LANCHOR0
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1161   .bss.Layer1_buffer_id:00000000 .LANCHOR1
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1428   Video_RAM:00000000 .LANCHOR2
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1175   .bss.Req_Layer2_Swap:00000000 .LANCHOR3
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1182   .bss.layer2_buffer_id:00000000 .LANCHOR4
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1421   Uncache_IRAM:00000000 .LANCHOR5
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:96     .text.IntCallbackFunc:00000104 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:100    .text.R_BCD_LcdGetVramAddress:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:106    .text.R_BCD_LcdGetVramAddress:00000000 R_BCD_LcdGetVramAddress
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:125    .text.R_BCD_LcdGetvisableVramAddress:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:131    .text.R_BCD_LcdGetvisableVramAddress:00000000 R_BCD_LcdGetvisableVramAddress
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:150    .text.R_BCD_LcdGetOLVramAddress:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:156    .text.R_BCD_LcdGetOLVramAddress:00000000 R_BCD_LcdGetOLVramAddress
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:175    .text.r_display_init:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:181    .text.r_display_init:00000000 r_display_init
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:250    .text.R_BCD_LcdInit:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:256    .text.R_BCD_LcdInit:00000000 R_BCD_LcdInit
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1234   .rodata.gam_b_th.71112:00000000 .LANCHOR9
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1196   .rodata.gam_b_gain.71111:00000000 .LANCHOR10
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1309   .rodata.gam_g_th.71110:00000000 .LANCHOR11
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1271   .rodata.gam_g_gain.71109:00000000 .LANCHOR12
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1384   .rodata.gam_r_th.71114:00000000 .LANCHOR7
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1346   .rodata.gam_r_gain.71113:00000000 .LANCHOR8
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:484    .text.R_BCD_LcdInit:00000358 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:506    .text.r_image_quality_adjustment:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:512    .text.r_image_quality_adjustment:00000000 r_image_quality_adjustment
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:567    .text.r_video_quality_adjustment:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:573    .text.r_video_quality_adjustment:00000000 r_video_quality_adjustment
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:638    .text.R_BCD_LcdSwapVideoBuffer:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:644    .text.R_BCD_LcdSwapVideoBuffer:00000000 R_BCD_LcdSwapVideoBuffer
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:655    .text.R_BCD_LcdSwapGraphicsBuffer:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:661    .text.R_BCD_LcdSwapGraphicsBuffer:00000000 R_BCD_LcdSwapGraphicsBuffer
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:672    .text.R_BCD_LcdVSync:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:678    .text.R_BCD_LcdVSync:00000000 R_BCD_LcdVSync
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:742    .text.R_BCD_LcdVSync:000000d4 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:746    .text.R_BCD_LcdWriteLine:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:752    .text.R_BCD_LcdWriteLine:00000000 R_BCD_LcdWriteLine
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:770    .text.R_BCD_LcdWriteChar:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:776    .text.R_BCD_LcdWriteChar:00000000 R_BCD_LcdWriteChar
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:937    .text.R_BCD_LcdWriteChar:00000208 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:940    .text.R_BCD_LcdWriteString:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:946    .text.R_BCD_LcdWriteString:00000000 R_BCD_LcdWriteString
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1133   .text.R_BCD_LcdClearGraphicsBuffer:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1139   .text.R_BCD_LcdClearGraphicsBuffer:00000000 R_BCD_LcdClearGraphicsBuffer
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1160   .bss.Layer1_buffer_id:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1164   .bss.Layer1_buffer_id:00000000 Layer1_buffer_id
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1167   .bss.Req_Layer1_Swap:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1171   .bss.Req_Layer1_Swap:00000000 Req_Layer1_Swap
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1174   .bss.Req_Layer2_Swap:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1178   .bss.Req_Layer2_Swap:00000000 Req_Layer2_Swap
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1181   .bss.layer2_buffer_id:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1185   .bss.layer2_buffer_id:00000000 layer2_buffer_id
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1188   .bss.vsync_count:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1192   .bss.vsync_count:00000000 vsync_count
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1195   .rodata.gam_b_gain.71111:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1199   .rodata.gam_b_gain.71111:00000000 gam_b_gain.71111
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1233   .rodata.gam_b_th.71112:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1237   .rodata.gam_b_th.71112:00000000 gam_b_th.71112
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1270   .rodata.gam_g_gain.71109:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1274   .rodata.gam_g_gain.71109:00000000 gam_g_gain.71109
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1308   .rodata.gam_g_th.71110:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1312   .rodata.gam_g_th.71110:00000000 gam_g_th.71110
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1345   .rodata.gam_r_gain.71113:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1349   .rodata.gam_r_gain.71113:00000000 gam_r_gain.71113
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1383   .rodata.gam_r_th.71114:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1387   .rodata.gam_r_th.71114:00000000 gam_r_th.71114
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1420   Uncache_IRAM:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1424   Uncache_IRAM:00000000 graphics2_buffer
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1427   Video_RAM:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccfMS8MS.s:1431   Video_RAM:00000000 video_buffer

UNDEFINED SYMBOLS
R_RVAPI_GraphChangeSurfaceVDC
DrawSwapBuffer
R_RVAPI_InitializeVDC
R_RVAPI_DispControlConfigVDC
DrawInit
DrawRectFill
R_RVAPI_InterruptEnableVDC
R_RVAPI_GraphCreateSurfaceVDC
R_RVAPI_DispCalibrationVDC
VDC_LcdPortSetting
R_RVAPI_DispPortSettingVDC
R_RVAPI_DispGammaVDC
R_RVAPI_VideoCalibrationVDC
R_RVAPI_VideoSharpnessLtiVDC
DrawLine
DrawPoint
g_font_array
strlen
memset
