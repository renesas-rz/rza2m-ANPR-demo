
;; Function VDC_Initialize (VDC_Initialize, funcdef_no=0, decl_uid=69553, cgraph_uid=0, symbol_order=3)


Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4061
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4061:5: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4061:5: note: === vect_analyze_loop_form ===
split exit edge.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4061:5: note: === get_loop_niters ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4061:5: note: not vectorized: number of iterations cannot be computed.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4061:5: note: bad loop form.

Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:474
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:474:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:474:9: note: === vect_analyze_loop_form ===
split exit edge.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:474:9: note: === get_loop_niters ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:474:9: note: not vectorized: number of iterations cannot be computed.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:474:9: note: bad loop form.

Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:445
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:445:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:445:9: note: === vect_analyze_loop_form ===
split exit edge.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:445:9: note: === get_loop_niters ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:445:9: note: not vectorized: number of iterations cannot be computed.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:445:9: note: bad loop form.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:385:6: note: vectorized 0 loops in function.
VDC_Initialize (const struct vdc_init_t * const param)
{
  volatile uint32_t counter;
  static const uint16_t panel_icksel_tbl[5] = {0, 4096, 12288, 1024, 2048};
  static const uint16_t panel_dcdr_tbl[13] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 16, 24, 32};
  volatile uint32_t * inp_sel_cnt_reg;
  volatile uint16_t * syscnt_panel_clk_reg;
  uint16_t syscnt_panel_clk_tmp;
  volatile uint32_t counter;
  const struct vdc_lvds_t * lvds_tmp;
  short unsigned int _7;
  volatile uint32_t * _12;
  long unsigned int _13;
  long unsigned int _14;
  volatile uint32_t * _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int counter.2_21;
  long unsigned int counter.0_22;
  long unsigned int counter.1_23;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _28;
  <unnamed type> _29;
  int _30;
  int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _35;
  <unnamed type> _36;
  int _37;
  int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _45;
  short unsigned int _46;
  int _47;
  int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _52;
  short unsigned int _53;
  int _54;
  int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int counter.5_63;
  long unsigned int counter.3_64;
  long unsigned int counter.4_65;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _70;
  long unsigned int _71;
  <unnamed type> _74;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _78;
  long unsigned int _79;
  <unnamed type> _81;
  int _82;
  int _84;
  short unsigned int _85;
  long unsigned int counter.6_90;
  long unsigned int counter.7_91;
  long unsigned int counter.8_92;
  long unsigned int counter.2_99;
  long unsigned int counter.5_103;
  long unsigned int counter.8_104;

  <bb 2>:
  syscnt_panel_clk_reg_6 = vdc_regaddr_system_ctrl.syscnt_panel_clk;
  _7 ={v} *syscnt_panel_clk_reg_6;
  syscnt_panel_clk_tmp_8 = _7 & 65279;
  *syscnt_panel_clk_reg_6 ={v} syscnt_panel_clk_tmp_8;
  lvds_tmp_11 = param_10(D)->lvds;
  if (lvds_tmp_11 != 0B)
    goto <bb 3>;
  else
    goto <bb 16>;

  <bb 3>:
  _12 = vdc_regaddr_lvds.lclkselr;
  _13 ={v} *_12;
  _14 = _13 & 4294967279;
  *_12 ={v} _14;
  _16 = vdc_regaddr_lvds.lpllsetr;
  _17 ={v} *_16;
  _18 = _17 | 1;
  *_16 ={v} _18;
  counter ={v} 0;
  counter.2_99 ={v} counter;
  if (counter.2_99 <= 37)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  _25 ={v} *_12;
  _26 = _25 & 4244570367;
  *_12 ={v} _26;
  _28 ={v} *_12;
  _29 = lvds_tmp_11->lvds_in_clk_sel;
  _30 = (int) _29;
  _31 = _30 << 24;
  _32 = (long unsigned int) _31;
  _33 = _28 | _32;
  *_12 ={v} _33;
  _35 ={v} *_12;
  _36 = lvds_tmp_11->lvds_odiv_set;
  _37 = (int) _36;
  _38 = _37 << 8;
  _39 = (long unsigned int) _38;
  _40 = _35 | _39;
  *_12 ={v} _40;
  _42 ={v} *_16;
  _43 = _42 & 4290836687;
  *_16 ={v} _43;
  _45 ={v} *_16;
  _46 = lvds_tmp_11->lvdspll_fd;
  _47 = (int) _46;
  _48 = _47 << 16;
  _49 = (long unsigned int) _48;
  _50 = _45 | _49;
  *_16 ={v} _50;
  _52 ={v} *_16;
  _53 = lvds_tmp_11->lvdspll_rd;
  _54 = (int) _53;
  _55 = _54 << 8;
  _56 = (long unsigned int) _55;
  _57 = _52 | _56;
  *_16 ={v} _57;
  _59 ={v} *_16;
  _60 = _59 | 16;
  *_16 ={v} _60;
  counter ={v} 0;
  counter.5_103 ={v} counter;
  if (counter.5_103 <= 37)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 5>:

  <bb 6>:
  counter.0_22 ={v} counter;
  counter.1_23 = counter.0_22 + 1;
  counter ={v} counter.1_23;
  counter.2_21 ={v} counter;
  if (counter.2_21 <= 37)
    goto <bb 7>;
  else
    goto <bb 22>;

  <bb 22>:
  goto <bb 4>;

  <bb 7>:
  goto <bb 6>;

  <bb 21>:

  <bb 8>:
  _67 ={v} *_16;
  _68 = _67 & 4294967294;
  *_16 ={v} _68;
  counter ={v} 0;
  counter.8_104 ={v} counter;
  if (counter.8_104 <= 13399)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 9>:

  <bb 10>:
  counter.3_64 ={v} counter;
  counter.4_65 = counter.3_64 + 1;
  counter ={v} counter.4_65;
  counter.5_63 ={v} counter;
  if (counter.5_63 <= 37)
    goto <bb 11>;
  else
    goto <bb 21>;

  <bb 11>:
  goto <bb 10>;

  <bb 20>:

  <bb 12>:
  _70 ={v} *_12;
  _71 = _70 | 16;
  *_12 ={v} _71;
  goto <bb 16>;

  <bb 13>:

  <bb 14>:
  counter.6_90 ={v} counter;
  counter.7_91 = counter.6_90 + 1;
  counter ={v} counter.7_91;
  counter.8_92 ={v} counter;
  if (counter.8_92 <= 13399)
    goto <bb 15>;
  else
    goto <bb 20>;

  <bb 15>:
  goto <bb 14>;

  <bb 16>:
  inp_sel_cnt_reg_73 = vdc_regaddr_input_ctrl.inp_sel_cnt;
  _74 = param_10(D)->panel_icksel;
  if (_74 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _75 ={v} *inp_sel_cnt_reg_73;
  _76 = _75 | 1048576;
  *inp_sel_cnt_reg_73 ={v} _76;
  goto <bb 19>;

  <bb 18>:
  _78 ={v} *inp_sel_cnt_reg_73;
  _79 = _78 & 4293918719;
  *inp_sel_cnt_reg_73 ={v} _79;

  <bb 19>:
  _81 = param_10(D)->panel_dcdr;
  _82 = (int) _81;
  syscnt_panel_clk_tmp_83 = panel_dcdr_tbl[_82];
  _84 = (int) _74;
  _85 = panel_icksel_tbl[_84];
  syscnt_panel_clk_tmp_86 = syscnt_panel_clk_tmp_83 | _85;
  *syscnt_panel_clk_reg_6 ={v} syscnt_panel_clk_tmp_86;
  syscnt_panel_clk_tmp_88 = syscnt_panel_clk_tmp_86 | 256;
  *syscnt_panel_clk_reg_6 ={v} syscnt_panel_clk_tmp_88;
  return;

}



;; Function VDC_Terminate (VDC_Terminate, funcdef_no=1, decl_uid=69555, cgraph_uid=1, symbol_order=4)


Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:554
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:554:13: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:554:13: note: === vect_analyze_loop_form ===
split exit edge.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:554:13: note: === get_loop_niters ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:554:13: note: not vectorized: number of iterations cannot be computed.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:554:13: note: bad loop form.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:524:6: note: vectorized 0 loops in function.
VDC_Terminate ()
{
  volatile uint32_t counter;
  vdc_onoff_t lvds_ref;
  vdc_resource_state_t rsrc_state;
  uint16_t syscnt_panel_clk_tmp;
  volatile uint16_t * syscnt_panel_clk_reg;
  short unsigned int _5;
  volatile uint32_t * _12;
  long unsigned int _13;
  long unsigned int _14;
  volatile uint32_t * _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int counter.11_21;
  long unsigned int counter.9_22;
  long unsigned int counter.10_23;
  long unsigned int counter.11_26;

  <bb 2>:
  syscnt_panel_clk_reg_4 = vdc_regaddr_system_ctrl.syscnt_panel_clk;
  _5 ={v} *syscnt_panel_clk_reg_4;
  syscnt_panel_clk_tmp_6 = _5 & 65279;
  *syscnt_panel_clk_reg_4 ={v} syscnt_panel_clk_tmp_6;
  rsrc_state_9 = VDC_ShrdPrmGetResource (4);
  if (rsrc_state_9 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  return;

  <bb 4>:
  lvds_ref_11 = VDC_ShrdPrmGetLvdsClkRef ();
  if (lvds_ref_11 == 0)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 5>:
  _12 = vdc_regaddr_lvds.lclkselr;
  _13 ={v} *_12;
  _14 = _13 & 4294967279;
  *_12 ={v} _14;
  _16 = vdc_regaddr_lvds.lpllsetr;
  _17 ={v} *_16;
  _18 = _17 | 1;
  *_16 ={v} _18;
  counter ={v} 0;
  counter.11_26 ={v} counter;
  if (counter.11_26 <= 37)
    goto <bb 6>;
  else
    goto <bb 3>;

  <bb 6>:

  <bb 7>:
  counter.9_22 ={v} counter;
  counter.10_23 = counter.9_22 + 1;
  counter ={v} counter.10_23;
  counter.11_21 ={v} counter;
  if (counter.11_21 <= 37)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 3>;

  <bb 8>:
  goto <bb 7>;

}



;; Function VDC_DisplayOutput (VDC_DisplayOutput, funcdef_no=4, decl_uid=69561, cgraph_uid=4, symbol_order=7)


Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3426
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3426:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3426:9: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3426:9: note: not vectorized: control flow in loop.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3426:9: note: bad loop form.

Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:795
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:795:5: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:795:5: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:795:5: note: not vectorized: control flow in loop.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:795:5: note: bad loop form.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:734:6: note: vectorized 0 loops in function.
VDC_DisplayOutput (const struct vdc_output_t * const param)
{
  uint32_t bg_color_tmp;
  uint32_t bg_color_conv;
  volatile uint32_t * bg_color_reg;
  volatile uint32_t * update_reg;
  uint32_t color_dat;
  uint32_t color_bgr;
  uint32_t graphics_id;
  const uint32_t dither_format[4];
  const vdc_gr_disp_sel_t gr_disp_sel_tbl[3];
  vdc_lcd_tcon_pin_t tcon_pin_tmp;
  const uint32_t output_pin_edge[7];
  static void (*<T5193>) (const struct vdc_lcd_tcon_timing_t * const, const struct vdc_regaddr_output_ctrl_t * const) tcon_function_tbl[8] = {SetLcdTcon_STVA_VS, SetLcdTcon_STVB_VE, SetLcdTcon_STH_HS, SetLcdTcon_STB_HE, SetLcdTcon_CPV_GCK, SetLcdTcon_POLA, SetLcdTcon_POLB, SetLcdTcon_DE};
  const struct vdc_lcd_tcon_timing_t * const * lcd_tcon_timing;
  uint32_t tcon_sig_index;
  volatile uint32_t * output_pin_regaddr[7];
  volatile uint32_t * _13;
  short unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _19;
  short unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  volatile uint32_t * _24;
  volatile uint32_t * _26;
  volatile uint32_t * _28;
  volatile uint32_t * _30;
  volatile uint32_t * _32;
  volatile uint32_t * _34;
  volatile uint32_t * _36;
  volatile uint32_t * _38;
  long unsigned int _39;
  long unsigned int _40;
  const struct vdc_lcd_tcon_timing_t * _43;
  void (*<T518c>) (const struct vdc_lcd_tcon_timing_t * const, const struct vdc_regaddr_output_ctrl_t * const) _44;
  const struct vdc_lcd_tcon_timing_t * _46;
  int _48;
  volatile uint32_t * _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _53;
  long unsigned int _54;
  <unnamed type> _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  volatile uint32_t * _63;
  long unsigned int _64;
  long unsigned int _65;
  <unnamed type> _67;
  long unsigned int _68;
  long unsigned int _69;
  <unnamed type> _71;
  long unsigned int _72;
  long unsigned int _73;
  long unsigned int _75;
  <unnamed type> _76;
  int _77;
  int _78;
  long unsigned int _79;
  long unsigned int _80;
  volatile uint32_t * _82;
  long unsigned int _83;
  long unsigned int _84;
  long unsigned int _86;
  long unsigned int _87;
  long unsigned int _88;
  long unsigned int _90;
  <unnamed type> _91;
  int _92;
  int _93;
  long unsigned int _94;
  long unsigned int _95;
  <unnamed type> _97;
  long unsigned int _98;
  long unsigned int _99;
  long unsigned int _101;
  <unnamed type> _102;
  long unsigned int _103;
  long unsigned int _104;
  long unsigned int _106;
  <unnamed type> _108;
  long unsigned int _110;
  long unsigned int _111;
  long unsigned int _114;
  long unsigned int _115;
  volatile uint32_t * _118;
  long unsigned int _119;
  long unsigned int _120;
  volatile uint32_t * _122;
  long unsigned int _123;
  long unsigned int _124;
  long unsigned int _134;
  const vdc_gr_disp_sel_t * _135;
  <unnamed type> _136;
  volatile uint32_t * _137;
  long unsigned int _138;
  long unsigned int _139;
  long unsigned int _140;
  long unsigned int _141;
  long unsigned int _142;
  volatile uint32_t * _143;
  long unsigned int _144;
  long unsigned int _145;
  long unsigned int _153;
  long unsigned int _159;
  long unsigned int _160;
  long unsigned int _163;
  long unsigned int _164;
  long unsigned int ivtmp_182;
  long unsigned int ivtmp_183;
  long unsigned int ivtmp_195;
  long unsigned int ivtmp_196;

  <bb 2>:
  output_pin_edge = *.LC0;
  MEM[(vdc_gr_disp_sel_t[3] *)&gr_disp_sel_tbl] = 0;
  MEM[(vdc_gr_disp_sel_t[3] *)&gr_disp_sel_tbl + 1B] = 1;
  MEM[(vdc_gr_disp_sel_t[3] *)&gr_disp_sel_tbl + 2B] = 1;
  dither_format = *.LC2;
  _13 = vdc_regaddr_output_ctrl.tcon_tim;
  _15 = param_14(D)->tcon_half;
  _16 = (long unsigned int) _15;
  _17 = _16 << 16;
  *_13 ={v} _17;
  _19 ={v} *_13;
  _20 = param_14(D)->tcon_offset;
  _21 = (long unsigned int) _20;
  _22 = _19 | _21;
  *_13 ={v} _22;
  _24 = vdc_regaddr_output_ctrl.tcon_tim_stva2;
  output_pin_regaddr[0] = _24;
  _26 = vdc_regaddr_output_ctrl.tcon_tim_stvb2;
  output_pin_regaddr[1] = _26;
  _28 = vdc_regaddr_output_ctrl.tcon_tim_sth2;
  output_pin_regaddr[2] = _28;
  _30 = vdc_regaddr_output_ctrl.tcon_tim_stb2;
  output_pin_regaddr[3] = _30;
  _32 = vdc_regaddr_output_ctrl.tcon_tim_cpv2;
  output_pin_regaddr[4] = _32;
  _34 = vdc_regaddr_output_ctrl.tcon_tim_pola2;
  output_pin_regaddr[5] = _34;
  _36 = vdc_regaddr_output_ctrl.tcon_tim_polb2;
  output_pin_regaddr[6] = _36;
  _38 = vdc_regaddr_output_ctrl.out_clk_phase;
  _39 ={v} *_38;
  _40 = _39 & 4294967168;
  *_38 ={v} _40;
  lcd_tcon_timing_42 = &param_14(D)->outctrl;

  <bb 3>:
  # tcon_sig_index_202 = PHI <tcon_sig_index_62(9), 0(2)>
  # lcd_tcon_timing_203 = PHI <lcd_tcon_timing_61(9), lcd_tcon_timing_42(2)>
  # ivtmp_182 = PHI <ivtmp_183(9), 8(2)>
  _43 = *lcd_tcon_timing_203;
  if (_43 != 0B)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 8>;

  <bb 5>:
  _44 = tcon_function_tbl[tcon_sig_index_202];
  _44 (_43, &vdc_regaddr_output_ctrl);
  _46 = *lcd_tcon_timing_203;
  tcon_pin_tmp_47 = _46->tcon_pin;
  if (tcon_pin_tmp_47 != -1)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 6>:
  _48 = (int) tcon_pin_tmp_47;
  _49 = output_pin_regaddr[_48];
  _50 ={v} *_49;
  _51 = _50 & 4294967288;
  *_49 ={v} _51;
  _53 ={v} *_49;
  _54 = _53 | tcon_sig_index_202;
  *_49 ={v} _54;
  _56 = _46->outcnt_edge;
  if (_56 != 0)
    goto <bb 7>;
  else
    goto <bb 4>;

  <bb 7>:
  _57 ={v} *_38;
  _58 = output_pin_edge[_48];
  _59 = _57 | _58;
  *_38 ={v} _59;

  <bb 8>:
  lcd_tcon_timing_61 = lcd_tcon_timing_203 + 4;
  tcon_sig_index_62 = tcon_sig_index_202 + 1;
  ivtmp_183 = ivtmp_182 - 1;
  if (ivtmp_183 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  goto <bb 3>;

  <bb 10>:
  _63 = vdc_regaddr_output_ctrl.out_set;
  _64 ={v} *_63;
  _65 = _64 & 4009741548;
  *_63 ={v} _65;
  _67 = param_14(D)->out_endian_on;
  if (_67 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _68 ={v} *_63;
  _69 = _68 | 268435456;
  *_63 ={v} _69;

  <bb 12>:
  _71 = param_14(D)->out_swap_on;
  if (_71 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _72 ={v} *_63;
  _73 = _72 | 16777216;
  *_63 ={v} _73;

  <bb 14>:
  _75 ={v} *_63;
  _76 = param_14(D)->out_format;
  _77 = (int) _76;
  _78 = _77 << 12;
  _79 = (long unsigned int) _78;
  _80 = _75 | _79;
  *_63 ={v} _80;
  _82 = vdc_regaddr_output_ctrl.out_pdtha;
  _83 ={v} *_82;
  _84 = _83 & 4294770687;
  *_82 ={v} _84;
  _86 ={v} *_82;
  _87 = dither_format[_77];
  _88 = _86 | _87;
  *_82 ={v} _88;
  if (_76 == 3)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  _90 ={v} *_63;
  _91 = param_14(D)->out_frq_sel;
  _92 = (int) _91;
  _93 = _92 << 8;
  _94 = (long unsigned int) _93;
  _95 = _90 | _94;
  *_63 ={v} _95;
  _97 = param_14(D)->out_dir_sel;
  if (_97 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _98 ={v} *_63;
  _99 = _98 | 16;
  *_63 ={v} _99;

  <bb 17>:
  _101 ={v} *_63;
  _102 = param_14(D)->out_phase;
  _103 = (long unsigned int) _102;
  _104 = _101 | _103;
  *_63 ={v} _104;
  goto <bb 19>;

  <bb 18>:
  _106 ={v} *_63;
  *_63 ={v} _106;

  <bb 19>:
  _108 = param_14(D)->outcnt_lcd_edge;
  if (_108 == 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _110 ={v} *_38;
  _111 = _110 & 4294967039;
  *_38 ={v} _111;
  goto <bb 22>;

  <bb 21>:
  _114 ={v} *_38;
  _115 = _114 | 256;
  *_38 ={v} _115;

  <bb 22>:
  bg_color_tmp_148 = VDC_ShrdPrmGetBgColor (0);
  color_bgr_149 = bg_color_tmp_148 << 8;
  color_bgr_150 = color_bgr_149 & 16776960;
  color_dat_151 = bg_color_tmp_148 & 4278190080;
  _153 = bg_color_tmp_148 >> 16;
  color_dat_154 = _153 & 255;
  _134 = color_bgr_150 | color_dat_154;
  color_bgr_155 = _134 | color_dat_151;
  bg_color_conv_156 = color_bgr_155 & 16777215;
  bg_color_reg_157 = vdc_regaddr_img_synthesizer[1].gr_base;
  *bg_color_reg_157 ={v} bg_color_conv_156;
  update_reg_158 = vdc_regaddr_img_synthesizer[1].gr_update;
  _159 ={v} *update_reg_158;
  _160 = _159 | 16;
  *update_reg_158 ={v} _160;
  bg_color_reg_161 = vdc_regaddr_img_synthesizer[2].gr_base;
  *bg_color_reg_161 ={v} bg_color_conv_156;
  update_reg_162 = vdc_regaddr_img_synthesizer[2].gr_update;
  _163 ={v} *update_reg_162;
  _164 = _163 | 16;
  *update_reg_162 ={v} _164;

  <bb 23>:
  # graphics_id_205 = PHI <graphics_id_146(26), 0(22)>
  # ivtmp_196 = PHI <ivtmp_195(26), 3(22)>
  _135 = &gr_disp_sel_tbl + graphics_id_205;
  _136 = *_135;
  if (_136 != -1)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _137 = MEM[(const struct vdc_regaddr_img_synthesizer_t *)&vdc_regaddr_img_synthesizer][graphics_id_205].gr_ab1;
  _138 ={v} *_137;
  _139 = _138 & 4294967292;
  *_137 ={v} _139;
  _140 ={v} *_137;
  _141 = (long unsigned int) _136;
  _142 = _140 | _141;
  *_137 ={v} _142;
  _143 = MEM[(const struct vdc_regaddr_img_synthesizer_t *)&vdc_regaddr_img_synthesizer][graphics_id_205].gr_update;
  _144 ={v} *_143;
  _145 = _144 | 16;
  *_143 ={v} _145;

  <bb 25>:
  graphics_id_146 = graphics_id_205 + 1;
  ivtmp_195 = ivtmp_196 - 1;
  if (ivtmp_195 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  goto <bb 23>;

  <bb 27>:
  _118 = vdc_regaddr_output_ctrl.tcon_update;
  _119 ={v} *_118;
  _120 = _119 | 1;
  *_118 ={v} _120;
  _122 = vdc_regaddr_output_ctrl.out_update;
  _123 ={v} *_122;
  _124 = _123 | 1;
  *_122 ={v} _124;
  output_pin_regaddr ={v} {CLOBBER};
  output_pin_edge ={v} {CLOBBER};
  gr_disp_sel_tbl ={v} {CLOBBER};
  dither_format ={v} {CLOBBER};
  return;

}



;; Function VDC_StartProcess (VDC_StartProcess, funcdef_no=9, decl_uid=69574, cgraph_uid=9, symbol_order=12)


Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1487
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1487:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1487:9: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1487:9: note: not vectorized: control flow in loop.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1487:9: note: bad loop form.

Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3426
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3426:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3426:9: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3426:9: note: not vectorized: control flow in loop.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3426:9: note: bad loop form.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1467:6: note: vectorized 0 loops in function.
VDC_StartProcess (const vdc_layer_id_t layer_id, const struct vdc_start_t * const param)
{
  volatile uint32_t * gr_update_reg;
  volatile uint32_t * scl1_update_reg;
  volatile uint32_t * scl1_update_reg;
  volatile uint32_t * gr_update_reg;
  uint32_t graphics_id;
  uint32_t graphics_id;
  vdc_resource_state_t resource_state;
  uint32_t layer_id_num;
  long unsigned int ivtmp_1;
  const vdc_gr_disp_sel_t * _8;
  void (*<T514c>) (const vdc_onoff_t) _13;
  <unnamed type> _15;
  void (*<T514c>) (const vdc_onoff_t) _18;
  long unsigned int ivtmp_21;
  unsigned char layer_id.12_22;
  unsigned char _23;
  <unnamed type> _24;
  int _25;
  int _26;
  volatile uint32_t * _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  volatile uint32_t * _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int ivtmp_38;
  const vdc_gr_disp_sel_t * _39;
  <unnamed type> _40;
  volatile uint32_t * _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  volatile uint32_t * _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _68;
  long unsigned int _69;
  long unsigned int _71;
  long unsigned int _72;
  long unsigned int _74;
  long unsigned int _75;
  int prephitmp_116;
  int _118;
  long unsigned int ivtmp_120;

  <bb 2>:
  _8 = param_7(D)->gr_disp_sel;
  if (_8 != 0B)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 3>:
  if (layer_id_10(D) == -1)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 4>:

  <bb 5>:
  # graphics_id_124 = PHI <0(4), graphics_id_50(8)>
  # ivtmp_38 = PHI <3(4), ivtmp_120(8)>
  _39 = _8 + graphics_id_124;
  _40 = *_39;
  if (_40 != -1)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _41 = MEM[(const struct vdc_regaddr_img_synthesizer_t *)&vdc_regaddr_img_synthesizer][graphics_id_124].gr_ab1;
  _42 ={v} *_41;
  _43 = _42 & 4294967292;
  *_41 ={v} _43;
  _44 ={v} *_41;
  _45 = (long unsigned int) _40;
  _46 = _44 | _45;
  *_41 ={v} _46;
  _47 = MEM[(const struct vdc_regaddr_img_synthesizer_t *)&vdc_regaddr_img_synthesizer][graphics_id_124].gr_update;
  _48 ={v} *_47;
  _49 = _48 | 16;
  *_47 ={v} _49;

  <bb 7>:
  graphics_id_50 = graphics_id_124 + 1;
  ivtmp_120 = ivtmp_38 - 1;
  if (ivtmp_120 != 0)
    goto <bb 8>;
  else
    goto <bb 15>;

  <bb 8>:
  goto <bb 5>;

  <bb 9>:
  layer_id.12_22 = (unsigned char) layer_id_10(D);
  _23 = layer_id.12_22 + 255;
  if (_23 <= 2)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  _118 = (int) layer_id_10(D);
  goto <bb 14>;

  <bb 11>:
  _24 = *_8;
  if (_24 != -1)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 12>:
  _25 = (int) layer_id_10(D);
  _26 = _25 + -1;
  graphics_id_27 = (uint32_t) _26;
  _28 = MEM[(const struct vdc_regaddr_img_synthesizer_t *)&vdc_regaddr_img_synthesizer][graphics_id_27].gr_ab1;
  _29 ={v} *_28;
  _30 = _29 & 4294967292;
  *_28 ={v} _30;
  _31 ={v} *_28;
  _32 = (long unsigned int) _24;
  _33 = _31 | _32;
  *_28 ={v} _33;
  _34 = MEM[(const struct vdc_regaddr_img_synthesizer_t *)&vdc_regaddr_img_synthesizer][graphics_id_27].gr_update;
  _35 ={v} *_34;
  _36 = _35 | 16;
  *_34 ={v} _36;
  goto <bb 14>;

  <bb 13>:
  if (layer_id_10(D) != -1)
    goto <bb 10>;
  else
    goto <bb 16>;

  <bb 14>:
  # prephitmp_116 = PHI <_118(10), _25(12)>
  _13 = rw_proc_function_tbl[prephitmp_116];
  _13 (1);
  goto <bb 22>;

  <bb 15>:

  <bb 16>:

  <bb 17>:
  # layer_id_num_121 = PHI <0(16), layer_id_num_20(20)>
  # ivtmp_21 = PHI <4(16), ivtmp_1(20)>
  _15 = (<unnamed type>) layer_id_num_121;
  resource_state_17 = VDC_ShrdPrmGetRwProcReady (_15);
  if (resource_state_17 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _18 = rw_proc_function_tbl[layer_id_num_121];
  _18 (1);

  <bb 19>:
  layer_id_num_20 = layer_id_num_121 + 1;
  ivtmp_1 = ivtmp_21 - 1;
  if (ivtmp_1 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  goto <bb 17>;

  <bb 21>:

  <bb 22>:
  switch (layer_id_10(D)) <default: <L19>, case -1: <L16>, case 0: <L10>, case 1: <L11>, case 2: <L12>, case 3: <L13>>

<L10>:
  scl1_update_reg_52 = vdc_regaddr_scaler.scl1_update;
  _53 ={v} *scl1_update_reg_52;
  _54 = _53 | 1048593;
  *scl1_update_reg_52 ={v} _54;
  goto <bb 28> (<L19>);

<L11>:
  gr_update_reg_55 = vdc_regaddr_img_synthesizer[0].gr_update;
  _56 ={v} *gr_update_reg_55;
  _57 = _56 | 17;
  *gr_update_reg_55 ={v} _57;
  goto <bb 28> (<L19>);

<L12>:
  gr_update_reg_58 = vdc_regaddr_img_synthesizer[1].gr_update;
  _59 ={v} *gr_update_reg_58;
  _60 = _59 | 17;
  *gr_update_reg_58 ={v} _60;
  goto <bb 28> (<L19>);

<L13>:
  gr_update_reg_61 = vdc_regaddr_img_synthesizer[2].gr_update;
  _62 ={v} *gr_update_reg_61;
  _63 = _62 | 17;
  *gr_update_reg_61 ={v} _63;
  goto <bb 28> (<L19>);

<L16>:
  scl1_update_reg_64 = vdc_regaddr_scaler.scl1_update;
  _65 ={v} *scl1_update_reg_64;
  _66 = _65 | 1048593;
  *scl1_update_reg_64 ={v} _66;
  gr_update_reg_67 = vdc_regaddr_img_synthesizer[0].gr_update;
  _68 ={v} *gr_update_reg_67;
  _69 = _68 | 17;
  *gr_update_reg_67 ={v} _69;
  gr_update_reg_70 = vdc_regaddr_img_synthesizer[1].gr_update;
  _71 ={v} *gr_update_reg_70;
  _72 = _71 | 17;
  *gr_update_reg_70 ={v} _72;
  gr_update_reg_73 = vdc_regaddr_img_synthesizer[2].gr_update;
  _74 ={v} *gr_update_reg_73;
  _75 = _74 | 17;
  *gr_update_reg_73 ={v} _75;

<L19>:
  return;

}



;; Function VDC_StopProcess (VDC_StopProcess, funcdef_no=10, decl_uid=69576, cgraph_uid=10, symbol_order=13)


Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1518
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1518:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1518:9: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1518:9: note: not vectorized: control flow in loop.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1518:9: note: bad loop form.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1506:6: note: vectorized 0 loops in function.
VDC_StopProcess (const vdc_layer_id_t layer_id)
{
  volatile uint32_t * gr_update_reg;
  volatile uint32_t * scl1_update_reg;
  volatile uint32_t * scl1_update_reg;
  volatile uint32_t * gr_update_reg;
  vdc_resource_state_t resource_state;
  uint32_t layer_id_num;
  long unsigned int ivtmp_4;
  int _6;
  void (*<T514c>) (const vdc_onoff_t) _8;
  <unnamed type> _11;
  void (*<T514c>) (const vdc_onoff_t) _14;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int ivtmp_63;

  <bb 2>:
  if (layer_id_5(D) != -1)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = (int) layer_id_5(D);
  _8 = rw_proc_function_tbl[_6];
  _8 (0);
  switch (layer_id_5(D)) <default: <L17>, case -1: <L14>, case 0: <L8>, case 1: <L9>, case 2: <L10>, case 3: <L11>>

  <bb 4>:

  <bb 5>:
  # layer_id_num_64 = PHI <0(4), layer_id_num_16(8)>
  # ivtmp_63 = PHI <4(4), ivtmp_4(8)>
  _11 = (<unnamed type>) layer_id_num_64;
  resource_state_13 = VDC_ShrdPrmGetRwProcEnabled (_11);
  if (resource_state_13 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _14 = rw_proc_function_tbl[layer_id_num_64];
  _14 (0);

  <bb 7>:
  layer_id_num_16 = layer_id_num_64 + 1;
  ivtmp_4 = ivtmp_63 - 1;
  if (ivtmp_4 != 0)
    goto <bb 8>;
  else
    goto <bb 13> (<L14>);

  <bb 8>:
  goto <bb 5>;

<L8>:
  scl1_update_reg_18 = vdc_regaddr_scaler.scl1_update;
  _19 ={v} *scl1_update_reg_18;
  _20 = _19 | 1048593;
  *scl1_update_reg_18 ={v} _20;
  goto <bb 14> (<L17>);

<L9>:
  gr_update_reg_21 = vdc_regaddr_img_synthesizer[0].gr_update;
  _22 ={v} *gr_update_reg_21;
  _23 = _22 | 17;
  *gr_update_reg_21 ={v} _23;
  goto <bb 14> (<L17>);

<L10>:
  gr_update_reg_24 = vdc_regaddr_img_synthesizer[1].gr_update;
  _25 ={v} *gr_update_reg_24;
  _26 = _25 | 17;
  *gr_update_reg_24 ={v} _26;
  goto <bb 14> (<L17>);

<L11>:
  gr_update_reg_27 = vdc_regaddr_img_synthesizer[2].gr_update;
  _28 ={v} *gr_update_reg_27;
  _29 = _28 | 17;
  *gr_update_reg_27 ={v} _29;
  goto <bb 14> (<L17>);

<L14>:
  scl1_update_reg_30 = vdc_regaddr_scaler.scl1_update;
  _31 ={v} *scl1_update_reg_30;
  _32 = _31 | 1048593;
  *scl1_update_reg_30 ={v} _32;
  gr_update_reg_33 = vdc_regaddr_img_synthesizer[0].gr_update;
  _34 ={v} *gr_update_reg_33;
  _35 = _34 | 17;
  *gr_update_reg_33 ={v} _35;
  gr_update_reg_36 = vdc_regaddr_img_synthesizer[1].gr_update;
  _37 ={v} *gr_update_reg_36;
  _38 = _37 | 17;
  *gr_update_reg_36 ={v} _38;
  gr_update_reg_39 = vdc_regaddr_img_synthesizer[2].gr_update;
  _40 ={v} *gr_update_reg_39;
  _41 = _40 | 17;
  *gr_update_reg_39 ={v} _41;

<L17>:
  return;

}



;; Function VDC_CLUT (VDC_CLUT, funcdef_no=18, decl_uid=69604, cgraph_uid=18, symbol_order=21)


Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3966
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3966:5: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3966:5: note: === vect_analyze_loop_form ===
split exit edge.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3966:5: note: === get_loop_niters ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3966:5: note: not vectorized: number of iterations cannot be computed.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:3966:5: note: bad loop form.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:1929:6: note: vectorized 0 loops in function.
VDC_CLUT (const vdc_graphics_type_t graphics_id, const struct vdc_clut_t * const param)
{
  uint32_t data_len;
  const uint32_t * clut_tmp;
  volatile uint32_t * regaddr_clut;
  uint32_t color_bgr;
  uint32_t color_dat;
  uint32_t color_bgr;
  uint32_t color_dat;
  uint32_t color_bgr;
  uint32_t color_dat;
  volatile uint32_t wk;
  vdc_gr_format_t gr_format_tmp;
  int _3;
  long unsigned int _8;
  volatile uint32_t * _9;
  const uint32_t * _10;
  long unsigned int _11;
  volatile uint32_t * _14;
  long unsigned int _15;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _21;
  long unsigned int _22;
  volatile uint32_t * _24;
  const uint32_t * _25;
  long unsigned int _26;
  long unsigned int _29;
  long unsigned int _30;
  uint32_t * _32;
  long unsigned int wk.13_33;
  volatile uint32_t * _35;
  long unsigned int _36;
  long unsigned int _37;
  volatile uint32_t * _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _44;
  long unsigned int _51;
  long unsigned int _58;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  long unsigned int _67;
  long unsigned int _69;
  long unsigned int _86;

  <bb 2>:
  _3 = (int) graphics_id_2(D);
  gr_format_tmp_6 = VDC_ShrdPrmGetGraphicsFormat (graphics_id_2(D));
  if (gr_format_tmp_6 == 7)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _8 = param_7(D)->color_num;
  if (_8 == 1)
    goto <bb 4>;
  else
    goto <bb 7>;

  <bb 4>:
  _24 = MEM[(const struct vdc_regaddr_img_synthesizer_t *)&vdc_regaddr_img_synthesizer][_3].gr_ab10;
  _25 = param_7(D)->clut;
  _26 = *_25;
  color_bgr_16 = _26 << 8;
  color_bgr_12 = color_bgr_16 & 16776960;
  color_dat_27 = _26 & 4278190080;
  _44 = _26 >> 16;
  color_dat_45 = _44 & 255;
  _62 = color_bgr_12 | color_dat_45;
  color_bgr_46 = color_dat_27 | _62;
  *_24 ={v} color_bgr_46;
  if (graphics_id_2(D) == 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  goto <bb 14>;

  <bb 6>:
  _29 ={v} *_24;
  _30 = _29 | 4278190080;
  *_24 ={v} _30;
  goto <bb 14>;

  <bb 7>:
  _9 = MEM[(const struct vdc_regaddr_img_synthesizer_t *)&vdc_regaddr_img_synthesizer][_3].gr_ab10;
  _10 = param_7(D)->clut;
  _11 = *_10;
  color_bgr_54 = _11 << 8;
  color_bgr_55 = color_bgr_54 & 16776960;
  color_dat_56 = _11 & 4278190080;
  _58 = _11 >> 16;
  color_dat_59 = _58 & 255;
  _67 = color_bgr_55 | color_dat_59;
  color_bgr_60 = color_dat_56 | _67;
  *_9 ={v} color_bgr_60;
  _14 = MEM[(const struct vdc_regaddr_img_synthesizer_t *)&vdc_regaddr_img_synthesizer][_3].gr_ab11;
  _15 = MEM[(const uint32_t *)_10 + 4B];
  color_bgr_47 = _15 << 8;
  color_bgr_48 = color_bgr_47 & 16776960;
  color_dat_49 = _15 & 4278190080;
  _51 = _15 >> 16;
  color_dat_52 = _51 & 255;
  _64 = color_bgr_48 | color_dat_52;
  color_bgr_53 = color_dat_49 | _64;
  *_14 ={v} color_bgr_53;
  if (graphics_id_2(D) == 0)
    goto <bb 8>;
  else
    goto <bb 5>;

  <bb 8>:
  _18 ={v} *_9;
  _19 = _18 | 4278190080;
  *_9 ={v} _19;
  _21 ={v} *_14;
  _22 = _21 | 4278190080;
  *_14 ={v} _22;
  goto <bb 14>;

  <bb 9>:
  _32 = vdc_regaddr_clut[_3];
  clut_tmp_61 = param_7(D)->clut;
  _86 = param_7(D)->color_num;
  if (_86 != 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  wk.13_33 = *_32;
  wk ={v} wk.13_33;
  _35 = MEM[(const struct vdc_regaddr_img_synthesizer_t *)&vdc_regaddr_img_synthesizer][_3].gr_clut;
  _36 ={v} *_35;
  _37 = _36 ^ 65536;
  *_35 ={v} _37;
  goto <bb 14>;

  <bb 11>:

  <bb 12>:
  # clut_tmp_77 = PHI <clut_tmp_61(11), clut_tmp_66(13)>
  # regaddr_clut_74 = PHI <_32(11), regaddr_clut_65(13)>
  # data_len_75 = PHI <0(11), data_len_68(13)>
  _63 = *clut_tmp_77;
  *regaddr_clut_74 ={v} _63;
  regaddr_clut_65 = regaddr_clut_74 + 4;
  clut_tmp_66 = clut_tmp_77 + 4;
  data_len_68 = data_len_75 + 1;
  _69 = param_7(D)->color_num;
  if (data_len_68 < _69)
    goto <bb 13>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 10>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  _39 = MEM[(const struct vdc_regaddr_img_synthesizer_t *)&vdc_regaddr_img_synthesizer][_3].gr_update;
  _40 ={v} *_39;
  _41 = _40 | 16;
  *_39 ={v} _41;
  return;

}



;; Function VDC_GammaCorrection (VDC_GammaCorrection, funcdef_no=20, decl_uid=69609, cgraph_uid=20, symbol_order=23)


Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
Creating dr for *_36
analyze_innermost: success.
	base_address: &vdc_regaddr_gamma
	offset from base address: 0
	constant offset from base address: 208
	step: 4
	aligned to: 64
	base_object: MEM[(volatile uint32_t * const *)&vdc_regaddr_gamma]
	Access function 0: {208B, +, 4}_1
Creating dr for *gam_gain_299
analyze_innermost: success.
	base_address: _29
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: *_29
	Access function 0: {0B, +, 4}_1
Creating dr for *_37
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_37
Creating dr for *_37
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_37
Creating dr for MEM[(const uint16_t *)gam_gain_299 + 2B]
analyze_innermost: success.
	base_address: _29
	offset from base address: 0
	constant offset from base address: 2
	step: 4
	aligned to: 64
	base_object: *_29
	Access function 0: {2B, +, 4}_1
Creating dr for *_37
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_37
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: === vect_analyze_data_refs ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: got vectype for stmt: _37 = *_36;
vector(4) unsigned int
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: got vectype for stmt: _39 = *gam_gain_299;
const vector(8) short unsigned int
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: not vectorized: data ref analysis failed *_37 ={v} _42;

../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: bad data references.

Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [6, + , 4294967295] != 0
  bounds on difference of bases: -6 ... -6
  result:
    # of iterations 6, bounded by 6
Creating dr for *_197
analyze_innermost: Applying pattern match.pd:1530, generic-match.c:7247
Applying pattern match.pd:83, generic-match.c:9904
success.
Applying pattern match.pd:1530, generic-match.c:7247
Applying pattern match.pd:83, generic-match.c:9904
	base_address: &vdc_regaddr_gamma
	offset from base address: 0
	constant offset from base address: 276
	step: 4
	aligned to: 64
	base_object: MEM[(volatile uint32_t * const *)&vdc_regaddr_gamma]
	Access function 0: {276B, +, 4}_6
Creating dr for *gam_th_312
analyze_innermost: success.
	base_address: &MEM[(void *)_27 + 3B]
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_27 + 3B]
	Access function 0: {0B, +, 4}_6
Creating dr for *_198
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_198
Creating dr for *_198
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_198
Creating dr for MEM[(const uint8_t *)gam_th_312 + 1B]
analyze_innermost: success.
	base_address: &MEM[(void *)_27 + 3B]
	offset from base address: 0
	constant offset from base address: 1
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_27 + 3B]
	Access function 0: {1B, +, 4}_6
Creating dr for *_198
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_198
Creating dr for *_198
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_198
Creating dr for MEM[(const uint8_t *)gam_th_312 + 2B]
analyze_innermost: success.
	base_address: &MEM[(void *)_27 + 3B]
	offset from base address: 0
	constant offset from base address: 2
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_27 + 3B]
	Access function 0: {2B, +, 4}_6
Creating dr for *_198
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_198
Creating dr for *_198
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_198
Creating dr for MEM[(const uint8_t *)gam_th_312 + 3B]
analyze_innermost: success.
	base_address: &MEM[(void *)_27 + 3B]
	offset from base address: 0
	constant offset from base address: 3
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_27 + 3B]
	Access function 0: {3B, +, 4}_6
Creating dr for *_198
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_198
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: === vect_analyze_data_refs ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: got vectype for stmt: _198 = *_197;
vector(4) unsigned int
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: got vectype for stmt: _200 = *gam_th_312;
const vector(16) unsigned char
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: not vectorized: data ref analysis failed *_198 ={v} _203;

../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: bad data references.

Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
Creating dr for *_51
analyze_innermost: success.
	base_address: &vdc_regaddr_gamma
	offset from base address: 0
	constant offset from base address: 108
	step: 4
	aligned to: 64
	base_object: MEM[(volatile uint32_t * const *)&vdc_regaddr_gamma]
	Access function 0: {108B, +, 4}_2
Creating dr for *gam_gain_301
analyze_innermost: success.
	base_address: _21
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: *_21
	Access function 0: {0B, +, 4}_2
Creating dr for *_52
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_52
Creating dr for *_52
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_52
Creating dr for MEM[(const uint16_t *)gam_gain_301 + 2B]
analyze_innermost: success.
	base_address: _21
	offset from base address: 0
	constant offset from base address: 2
	step: 4
	aligned to: 64
	base_object: *_21
	Access function 0: {2B, +, 4}_2
Creating dr for *_52
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_52
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: === vect_analyze_data_refs ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: got vectype for stmt: _52 = *_51;
vector(4) unsigned int
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: got vectype for stmt: _54 = *gam_gain_301;
const vector(8) short unsigned int
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: not vectorized: data ref analysis failed *_52 ={v} _57;

../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: bad data references.

Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [6, + , 4294967295] != 0
  bounds on difference of bases: -6 ... -6
  result:
    # of iterations 6, bounded by 6
Creating dr for *_154
analyze_innermost: Applying pattern match.pd:1530, generic-match.c:7247
Applying pattern match.pd:83, generic-match.c:9904
success.
Applying pattern match.pd:1530, generic-match.c:7247
Applying pattern match.pd:83, generic-match.c:9904
	base_address: &vdc_regaddr_gamma
	offset from base address: 0
	constant offset from base address: 176
	step: 4
	aligned to: 64
	base_object: MEM[(volatile uint32_t * const *)&vdc_regaddr_gamma]
	Access function 0: {176B, +, 4}_5
Creating dr for *gam_th_310
analyze_innermost: success.
	base_address: &MEM[(void *)_19 + 3B]
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_19 + 3B]
	Access function 0: {0B, +, 4}_5
Creating dr for *_155
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_155
Creating dr for *_155
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_155
Creating dr for MEM[(const uint8_t *)gam_th_310 + 1B]
analyze_innermost: success.
	base_address: &MEM[(void *)_19 + 3B]
	offset from base address: 0
	constant offset from base address: 1
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_19 + 3B]
	Access function 0: {1B, +, 4}_5
Creating dr for *_155
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_155
Creating dr for *_155
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_155
Creating dr for MEM[(const uint8_t *)gam_th_310 + 2B]
analyze_innermost: success.
	base_address: &MEM[(void *)_19 + 3B]
	offset from base address: 0
	constant offset from base address: 2
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_19 + 3B]
	Access function 0: {2B, +, 4}_5
Creating dr for *_155
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_155
Creating dr for *_155
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_155
Creating dr for MEM[(const uint8_t *)gam_th_310 + 3B]
analyze_innermost: success.
	base_address: &MEM[(void *)_19 + 3B]
	offset from base address: 0
	constant offset from base address: 3
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_19 + 3B]
	Access function 0: {3B, +, 4}_5
Creating dr for *_155
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_155
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: === vect_analyze_data_refs ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: got vectype for stmt: _155 = *_154;
vector(4) unsigned int
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: got vectype for stmt: _157 = *gam_th_310;
const vector(16) unsigned char
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: not vectorized: data ref analysis failed *_155 ={v} _160;

../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: bad data references.

Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
Creating dr for *_66
analyze_innermost: success.
	base_address: &vdc_regaddr_gamma
	offset from base address: 0
	constant offset from base address: 8
	step: 4
	aligned to: 64
	base_object: MEM[(volatile uint32_t * const *)&vdc_regaddr_gamma]
	Access function 0: {8B, +, 4}_3
Creating dr for *gam_gain_303
analyze_innermost: success.
	base_address: _13
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: *_13
	Access function 0: {0B, +, 4}_3
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for MEM[(const uint16_t *)gam_gain_303 + 2B]
analyze_innermost: success.
	base_address: _13
	offset from base address: 0
	constant offset from base address: 2
	step: 4
	aligned to: 64
	base_object: *_13
	Access function 0: {2B, +, 4}_3
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: === vect_analyze_data_refs ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: got vectype for stmt: _67 = *_66;
vector(4) unsigned int
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: got vectype for stmt: _69 = *gam_gain_303;
const vector(8) short unsigned int
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: not vectorized: data ref analysis failed *_67 ={v} _72;

../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4037:9: note: bad data references.

Analyzing loop at ../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: ===== analyze_loop_nest =====
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: === vect_analyze_loop_form ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [6, + , 4294967295] != 0
  bounds on difference of bases: -6 ... -6
  result:
    # of iterations 6, bounded by 6
Creating dr for *_111
analyze_innermost: Applying pattern match.pd:1530, generic-match.c:7247
Applying pattern match.pd:83, generic-match.c:9904
success.
Applying pattern match.pd:1530, generic-match.c:7247
Applying pattern match.pd:83, generic-match.c:9904
	base_address: &vdc_regaddr_gamma
	offset from base address: 0
	constant offset from base address: 76
	step: 4
	aligned to: 64
	base_object: MEM[(volatile uint32_t * const *)&vdc_regaddr_gamma]
	Access function 0: {76B, +, 4}_4
Creating dr for *gam_th_308
analyze_innermost: success.
	base_address: &MEM[(void *)_10 + 3B]
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_10 + 3B]
	Access function 0: {0B, +, 4}_4
Creating dr for *_112
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_112
Creating dr for *_112
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_112
Creating dr for MEM[(const uint8_t *)gam_th_308 + 1B]
analyze_innermost: success.
	base_address: &MEM[(void *)_10 + 3B]
	offset from base address: 0
	constant offset from base address: 1
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_10 + 3B]
	Access function 0: {1B, +, 4}_4
Creating dr for *_112
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_112
Creating dr for *_112
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_112
Creating dr for MEM[(const uint8_t *)gam_th_308 + 2B]
analyze_innermost: success.
	base_address: &MEM[(void *)_10 + 3B]
	offset from base address: 0
	constant offset from base address: 2
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_10 + 3B]
	Access function 0: {2B, +, 4}_4
Creating dr for *_112
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_112
Creating dr for *_112
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_112
Creating dr for MEM[(const uint8_t *)gam_th_308 + 3B]
analyze_innermost: success.
	base_address: &MEM[(void *)_10 + 3B]
	offset from base address: 0
	constant offset from base address: 3
	step: 4
	aligned to: 64
	base_object: MEM[(const uint8_t *)_10 + 3B]
	Access function 0: {3B, +, 4}_4
Creating dr for *_112
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_112
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: === vect_analyze_data_refs ===
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: got vectype for stmt: _112 = *_111;
vector(4) unsigned int
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: got vectype for stmt: _114 = *gam_th_308;
const vector(16) unsigned char
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: not vectorized: data ref analysis failed *_112 ={v} _117;

../generate/sc_drivers/r_vdc/src/r_vdc_register.c:4001:9: note: bad data references.
../generate/sc_drivers/r_vdc/src/r_vdc_register.c:2086:6: note: vectorized 0 loops in function.
VDC_GammaCorrection (const vdc_onoff_t gam_on, const struct vdc_gamma_correction_t * const param)
{
  uint32_t reg_index;
  const uint8_t * gam_th;
  uint32_t reg_index;
  const uint8_t * gam_th;
  uint32_t reg_index;
  const uint8_t * gam_th;
  uint32_t reg_index;
  const uint16_t * gam_gain;
  uint32_t reg_index;
  const uint16_t * gam_gain;
  uint32_t reg_index;
  const uint16_t * gam_gain;
  volatile uint32_t * _4;
  _Bool _6;
  long unsigned int _7;
  const uint8_t * _10;
  const uint16_t * _13;
  volatile uint32_t * _14;
  long unsigned int _16;
  long unsigned int _17;
  const uint8_t * _19;
  const uint16_t * _21;
  volatile uint32_t * _22;
  long unsigned int _24;
  long unsigned int _25;
  const uint8_t * _27;
  const uint16_t * _29;
  volatile uint32_t * _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _35;
  volatile uint32_t * const * _36;
  volatile uint32_t * _37;
  short unsigned int _39;
  int _40;
  int _41;
  long unsigned int _42;
  long unsigned int _43;
  short unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  long unsigned int _50;
  volatile uint32_t * const * _51;
  volatile uint32_t * _52;
  short unsigned int _54;
  int _55;
  int _56;
  long unsigned int _57;
  long unsigned int _58;
  short unsigned int _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _65;
  volatile uint32_t * const * _66;
  volatile uint32_t * _67;
  short unsigned int _69;
  int _70;
  int _71;
  long unsigned int _72;
  long unsigned int _73;
  short unsigned int _74;
  long unsigned int _75;
  long unsigned int _76;
  volatile uint32_t * _93;
  unsigned char _94;
  int _95;
  int _96;
  long unsigned int _97;
  long unsigned int _98;
  unsigned char _99;
  int _100;
  int _101;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _104;
  unsigned char _105;
  long unsigned int _106;
  long unsigned int _107;
  long unsigned int _110;
  volatile uint32_t * const * _111;
  volatile uint32_t * _112;
  unsigned char _114;
  int _115;
  int _116;
  long unsigned int _117;
  long unsigned int _118;
  unsigned char _119;
  int _120;
  int _121;
  long unsigned int _122;
  long unsigned int _123;
  long unsigned int _124;
  unsigned char _125;
  int _126;
  int _127;
  long unsigned int _128;
  long unsigned int _129;
  long unsigned int _130;
  unsigned char _131;
  long unsigned int _132;
  long unsigned int _133;
  volatile uint32_t * _136;
  unsigned char _137;
  int _138;
  int _139;
  long unsigned int _140;
  long unsigned int _141;
  unsigned char _142;
  int _143;
  int _144;
  long unsigned int _145;
  long unsigned int _146;
  long unsigned int _147;
  unsigned char _148;
  long unsigned int _149;
  long unsigned int _150;
  long unsigned int _153;
  volatile uint32_t * const * _154;
  volatile uint32_t * _155;
  unsigned char _157;
  int _158;
  int _159;
  long unsigned int _160;
  long unsigned int _161;
  unsigned char _162;
  int _163;
  int _164;
  long unsigned int _165;
  long unsigned int _166;
  long unsigned int _167;
  unsigned char _168;
  int _169;
  int _170;
  long unsigned int _171;
  long unsigned int _172;
  long unsigned int _173;
  unsigned char _174;
  long unsigned int _175;
  long unsigned int _176;
  volatile uint32_t * _179;
  unsigned char _180;
  int _181;
  int _182;
  long unsigned int _183;
  long unsigned int _184;
  unsigned char _185;
  int _186;
  int _187;
  long unsigned int _188;
  long unsigned int _189;
  long unsigned int _190;
  unsigned char _191;
  long unsigned int _192;
  long unsigned int _193;
  long unsigned int _196;
  volatile uint32_t * const * _197;
  volatile uint32_t * _198;
  unsigned char _200;
  int _201;
  int _202;
  long unsigned int _203;
  long unsigned int _204;
  unsigned char _205;
  int _206;
  int _207;
  long unsigned int _208;
  long unsigned int _209;
  long unsigned int _210;
  unsigned char _211;
  int _212;
  int _213;
  long unsigned int _214;
  long unsigned int _215;
  long unsigned int _216;
  unsigned char _217;
  long unsigned int _218;
  long unsigned int _219;
  long unsigned int ivtmp_289;
  long unsigned int ivtmp_290;
  long unsigned int ivtmp_291;
  long unsigned int ivtmp_292;
  long unsigned int ivtmp_293;
  long unsigned int ivtmp_294;
  long unsigned int ivtmp_295;
  long unsigned int ivtmp_296;
  long unsigned int ivtmp_297;
  long unsigned int ivtmp_316;
  long unsigned int ivtmp_319;
  long unsigned int ivtmp_320;

  <bb 2>:
  _4 = vdc_regaddr_gamma.gam_sw;
  _6 = gam_on_5(D) != 0;
  _7 = (long unsigned int) _6;
  *_4 ={v} _7;
  if (param_9(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 34>;

  <bb 3>:
  _10 = param_9(D)->gam_g_th;
  if (_10 != 0B)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  _13 = param_9(D)->gam_g_gain;
  if (_13 != 0B)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 5>:
  _93 = MEM[(volatile uint32_t * const *)&vdc_regaddr_gamma + 72B];
  _94 = *_10;
  _95 = (int) _94;
  _96 = _95 << 16;
  _97 = (long unsigned int) _96;
  *_93 ={v} _97;
  _98 ={v} *_93;
  _99 = MEM[(const uint8_t *)_10 + 1B];
  _100 = (int) _99;
  _101 = _100 << 8;
  _102 = (long unsigned int) _101;
  _103 = _98 | _102;
  *_93 ={v} _103;
  _104 ={v} *_93;
  _105 = MEM[(const uint8_t *)_10 + 2B];
  _106 = (long unsigned int) _105;
  _107 = _104 | _106;
  *_93 ={v} _107;
  gam_th_108 = &MEM[(void *)_10 + 3B];

  <bb 6>:
  # reg_index_307 = PHI <reg_index_135(8), 1(5)>
  # gam_th_308 = PHI <gam_th_134(8), gam_th_108(5)>
  # ivtmp_290 = PHI <ivtmp_289(8), 7(5)>
  _110 = reg_index_307 * 4;
  _111 = &MEM[(void *)&vdc_regaddr_gamma + 72B] + _110;
  _112 = *_111;
  _114 = *gam_th_308;
  _115 = (int) _114;
  _116 = _115 << 24;
  _117 = (long unsigned int) _116;
  *_112 ={v} _117;
  _118 ={v} *_112;
  _119 = MEM[(const uint8_t *)gam_th_308 + 1B];
  _120 = (int) _119;
  _121 = _120 << 16;
  _122 = (long unsigned int) _121;
  _123 = _118 | _122;
  *_112 ={v} _123;
  _124 ={v} *_112;
  _125 = MEM[(const uint8_t *)gam_th_308 + 2B];
  _126 = (int) _125;
  _127 = _126 << 8;
  _128 = (long unsigned int) _127;
  _129 = _124 | _128;
  *_112 ={v} _129;
  _130 ={v} *_112;
  _131 = MEM[(const uint8_t *)gam_th_308 + 3B];
  _132 = (long unsigned int) _131;
  _133 = _130 | _132;
  *_112 ={v} _133;
  gam_th_134 = &MEM[(void *)gam_th_308 + 4B];
  reg_index_135 = reg_index_307 + 1;
  ivtmp_289 = ivtmp_290 - 1;
  if (ivtmp_289 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:
  goto <bb 6>;

  <bb 9>:

  <bb 10>:
  _14 = vdc_regaddr_gamma.gam_g_update;
  _16 ={v} *_14;
  _17 = _16 | 1;
  *_14 ={v} _17;
  _19 = param_9(D)->gam_b_th;
  if (_19 != 0B)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 11>:

  <bb 12>:
  # reg_index_302 = PHI <0(11), reg_index_78(13)>
  # gam_gain_303 = PHI <_13(11), gam_gain_77(13)>
  # ivtmp_292 = PHI <16(11), ivtmp_291(13)>
  _65 = reg_index_302 * 4;
  _66 = &MEM[(void *)&vdc_regaddr_gamma + 8B] + _65;
  _67 = *_66;
  _69 = *gam_gain_303;
  _70 = (int) _69;
  _71 = _70 << 16;
  _72 = (long unsigned int) _71;
  *_67 ={v} _72;
  _73 ={v} *_67;
  _74 = MEM[(const uint16_t *)gam_gain_303 + 2B];
  _75 = (long unsigned int) _74;
  _76 = _73 | _75;
  *_67 ={v} _76;
  gam_gain_77 = &MEM[(void *)gam_gain_303 + 4B];
  reg_index_78 = reg_index_302 + 1;
  ivtmp_291 = ivtmp_292 - 1;
  if (ivtmp_291 != 0)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:

  <bb 15>:
  _21 = param_9(D)->gam_b_gain;
  if (_21 != 0B)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 16>:
  _136 = MEM[(volatile uint32_t * const *)&vdc_regaddr_gamma + 172B];
  _137 = *_19;
  _138 = (int) _137;
  _139 = _138 << 16;
  _140 = (long unsigned int) _139;
  *_136 ={v} _140;
  _141 ={v} *_136;
  _142 = MEM[(const uint8_t *)_19 + 1B];
  _143 = (int) _142;
  _144 = _143 << 8;
  _145 = (long unsigned int) _144;
  _146 = _141 | _145;
  *_136 ={v} _146;
  _147 ={v} *_136;
  _148 = MEM[(const uint8_t *)_19 + 2B];
  _149 = (long unsigned int) _148;
  _150 = _147 | _149;
  *_136 ={v} _150;
  gam_th_151 = &MEM[(void *)_19 + 3B];

  <bb 17>:
  # reg_index_309 = PHI <reg_index_178(18), 1(16)>
  # gam_th_310 = PHI <gam_th_177(18), gam_th_151(16)>
  # ivtmp_294 = PHI <ivtmp_293(18), 7(16)>
  _153 = reg_index_309 * 4;
  _154 = &MEM[(void *)&vdc_regaddr_gamma + 172B] + _153;
  _155 = *_154;
  _157 = *gam_th_310;
  _158 = (int) _157;
  _159 = _158 << 24;
  _160 = (long unsigned int) _159;
  *_155 ={v} _160;
  _161 ={v} *_155;
  _162 = MEM[(const uint8_t *)gam_th_310 + 1B];
  _163 = (int) _162;
  _164 = _163 << 16;
  _165 = (long unsigned int) _164;
  _166 = _161 | _165;
  *_155 ={v} _166;
  _167 ={v} *_155;
  _168 = MEM[(const uint8_t *)gam_th_310 + 2B];
  _169 = (int) _168;
  _170 = _169 << 8;
  _171 = (long unsigned int) _170;
  _172 = _167 | _171;
  *_155 ={v} _172;
  _173 ={v} *_155;
  _174 = MEM[(const uint8_t *)gam_th_310 + 3B];
  _175 = (long unsigned int) _174;
  _176 = _173 | _175;
  *_155 ={v} _176;
  gam_th_177 = &MEM[(void *)gam_th_310 + 4B];
  reg_index_178 = reg_index_309 + 1;
  ivtmp_293 = ivtmp_294 - 1;
  if (ivtmp_293 != 0)
    goto <bb 18>;
  else
    goto <bb 14>;

  <bb 18>:
  goto <bb 17>;

  <bb 19>:

  <bb 20>:
  _22 = vdc_regaddr_gamma.gam_b_update;
  _24 ={v} *_22;
  _25 = _24 | 1;
  *_22 ={v} _25;
  _27 = param_9(D)->gam_r_th;
  if (_27 != 0B)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 21>:

  <bb 22>:
  # reg_index_300 = PHI <0(21), reg_index_63(23)>
  # gam_gain_301 = PHI <_21(21), gam_gain_62(23)>
  # ivtmp_296 = PHI <16(21), ivtmp_295(23)>
  _50 = reg_index_300 * 4;
  _51 = &MEM[(void *)&vdc_regaddr_gamma + 108B] + _50;
  _52 = *_51;
  _54 = *gam_gain_301;
  _55 = (int) _54;
  _56 = _55 << 16;
  _57 = (long unsigned int) _56;
  *_52 ={v} _57;
  _58 ={v} *_52;
  _59 = MEM[(const uint16_t *)gam_gain_301 + 2B];
  _60 = (long unsigned int) _59;
  _61 = _58 | _60;
  *_52 ={v} _61;
  gam_gain_62 = &MEM[(void *)gam_gain_301 + 4B];
  reg_index_63 = reg_index_300 + 1;
  ivtmp_295 = ivtmp_296 - 1;
  if (ivtmp_295 != 0)
    goto <bb 23>;
  else
    goto <bb 19>;

  <bb 23>:
  goto <bb 22>;

  <bb 24>:

  <bb 25>:
  _29 = param_9(D)->gam_r_gain;
  if (_29 != 0B)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 26>:
  _179 = MEM[(volatile uint32_t * const *)&vdc_regaddr_gamma + 272B];
  _180 = *_27;
  _181 = (int) _180;
  _182 = _181 << 16;
  _183 = (long unsigned int) _182;
  *_179 ={v} _183;
  _184 ={v} *_179;
  _185 = MEM[(const uint8_t *)_27 + 1B];
  _186 = (int) _185;
  _187 = _186 << 8;
  _188 = (long unsigned int) _187;
  _189 = _184 | _188;
  *_179 ={v} _189;
  _190 ={v} *_179;
  _191 = MEM[(const uint8_t *)_27 + 2B];
  _192 = (long unsigned int) _191;
  _193 = _190 | _192;
  *_179 ={v} _193;
  gam_th_194 = &MEM[(void *)_27 + 3B];

  <bb 27>:
  # reg_index_311 = PHI <reg_index_221(28), 1(26)>
  # gam_th_312 = PHI <gam_th_220(28), gam_th_194(26)>
  # ivtmp_316 = PHI <ivtmp_297(28), 7(26)>
  _196 = reg_index_311 * 4;
  _197 = &MEM[(void *)&vdc_regaddr_gamma + 272B] + _196;
  _198 = *_197;
  _200 = *gam_th_312;
  _201 = (int) _200;
  _202 = _201 << 24;
  _203 = (long unsigned int) _202;
  *_198 ={v} _203;
  _204 ={v} *_198;
  _205 = MEM[(const uint8_t *)gam_th_312 + 1B];
  _206 = (int) _205;
  _207 = _206 << 16;
  _208 = (long unsigned int) _207;
  _209 = _204 | _208;
  *_198 ={v} _209;
  _210 ={v} *_198;
  _211 = MEM[(const uint8_t *)gam_th_312 + 2B];
  _212 = (int) _211;
  _213 = _212 << 8;
  _214 = (long unsigned int) _213;
  _215 = _210 | _214;
  *_198 ={v} _215;
  _216 ={v} *_198;
  _217 = MEM[(const uint8_t *)gam_th_312 + 3B];
  _218 = (long unsigned int) _217;
  _219 = _216 | _218;
  *_198 ={v} _219;
  gam_th_220 = &MEM[(void *)gam_th_312 + 4B];
  reg_index_221 = reg_index_311 + 1;
  ivtmp_297 = ivtmp_316 - 1;
  if (ivtmp_297 != 0)
    goto <bb 28>;
  else
    goto <bb 24>;

  <bb 28>:
  goto <bb 27>;

  <bb 29>:

  <bb 30>:
  _30 = vdc_regaddr_gamma.gam_r_update;
  _31 ={v} *_30;
  _32 = _31 | 1;
  *_30 ={v} _32;
  goto <bb 34>;

  <bb 31>:

  <bb 32>:
  # reg_index_298 = PHI <0(31), reg_index_48(33)>
  # gam_gain_299 = PHI <_29(31), gam_gain_47(33)>
  # ivtmp_320 = PHI <16(31), ivtmp_319(33)>
  _35 = reg_index_298 * 4;
  _36 = &MEM[(void *)&vdc_regaddr_gamma + 208B] + _35;
  _37 = *_36;
  _39 = *gam_gain_299;
  _40 = (int) _39;
  _41 = _40 << 16;
  _42 = (long unsigned int) _41;
  *_37 ={v} _42;
  _43 ={v} *_37;
  _44 = MEM[(const uint16_t *)gam_gain_299 + 2B];
  _45 = (long unsigned int) _44;
  _46 = _43 | _45;
  *_37 ={v} _46;
  gam_gain_47 = &MEM[(void *)gam_gain_299 + 4B];
  reg_index_48 = reg_index_298 + 1;
  ivtmp_319 = ivtmp_320 - 1;
  if (ivtmp_319 != 0)
    goto <bb 33>;
  else
    goto <bb 29>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  return;

}


