
;; Function R_CPG_InitialiseHwIf (R_CPG_InitialiseHwIf, funcdef_no=6, decl_uid=70414, cgraph_uid=6, symbol_order=21)


Analyzing loop at ../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:876
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:876:14: note: ===== analyze_loop_nest =====
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:876:14: note: === vect_analyze_loop_form ===
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:876:14: note: not vectorized: control flow in loop.
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:876:14: note: bad loop form.

Analyzing loop at ../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:581
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:581:14: note: ===== analyze_loop_nest =====
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:581:14: note: === vect_analyze_loop_form ===
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:581:14: note: not vectorized: control flow in loop.
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:581:14: note: bad loop form.
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:313:7: note: vectorized 0 loops in function.
R_CPG_InitialiseHwIf ()
{
  uint16_t frqcr;
  uint16_t reg_value;
  uint16_t reg_value;
  int_t D.71114;
  int_t D.71109;
  int_t ret;
  uint16_t ckiosel;
  uint16_t sclksel;
  uint16_t reg_value;
  uint16_t reg_value;
  uint16_t reg_value;
  uint16_t reg_value;
  int_t D.71105;
  uint32_t count;
  float64_t div_d;
  uint16_t fc;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  int_t D.71095;
  uint16_t frqcr;
  uint16_t check_frqcr;
  int_t ret;
  uint16_t reg_value;
  uint16_t reg_value;
  int_t D.71066;
  uint32_t count;
  int_t D.71056;
  bool_t result;
  uint32_t reg_value;
  uint32_t reg_value;
  int_t retval;
  unsigned int gs_drv_cpg_is_initialized.0_9;
  long unsigned int _21;
  long unsigned int gs_cpg_iclk_divisor.3_30;
  double _31;
  double _32;
  long unsigned int gs_cpg_bclk_divisor.4_33;
  double _34;
  double _35;
  long unsigned int gs_cpg_p1clk_divisor.5_36;
  double _37;
  double _38;
  long unsigned int _42;
  const struct st_r_drv_cpg_set_sub_t * _43;
  unsigned int _47;
  unsigned int _48;
  unsigned int _49;
  unsigned int _50;
  unsigned int _51;
  short unsigned int _52;
  double _65;
  <unnamed type> _69;
  short unsigned int _75;
  long unsigned int ivtmp_76;
  short unsigned int _78;
  short unsigned int prephitmp_82;
  short unsigned int _83;
  long unsigned int ivtmp_84;
  short unsigned int _86;
  short unsigned int _90;
  short unsigned int _92;
  long unsigned int _98;
  const struct st_r_drv_cpg_set_src_t * _99;
  <unnamed type> _106;
  <unnamed type> _107;
  short unsigned int _109;
  double prephitmp_110;
  short unsigned int _111;
  short unsigned int _112;
  <unnamed type> _113;
  short unsigned int _115;
  short unsigned int _117;
  short unsigned int _118;
  short unsigned int _120;
  short unsigned int _121;
  double prephitmp_122;
  short unsigned int _123;
  short unsigned int _124;
  <unnamed type> _125;
  short unsigned int _127;
  short unsigned int _129;
  short unsigned int _130;
  double prephitmp_131;
  short unsigned int _132;
  short unsigned int _133;
  short unsigned int _135;
  short unsigned int _136;
  <unnamed type> _137;
  short unsigned int _139;
  short unsigned int _141;
  short unsigned int _142;
  short unsigned int _144;
  short unsigned int _145;
  short unsigned int _147;
  short unsigned int _148;
  short unsigned int prephitmp_178;
  long unsigned int ivtmp_228;
  long unsigned int ivtmp_229;

  <bb 2>:
  gs_drv_cpg_is_initialized.0_9 = gs_drv_cpg_is_initialized;
  if (gs_drv_cpg_is_initialized.0_9 == 0)
    goto <bb 3>;
  else
    goto <bb 71> (<L35>);

  <bb 3>:
  reg_value_20 ={v} MEM[(volatile uint32_t *)520109952B];
  _21 = reg_value_20 & 4294967294;
  reg_value_22 = _21 | 1;
  MEM[(volatile uint32_t *)520109952B] ={v} reg_value_22;
  reg_value_13 ={v} MEM[(volatile uint32_t *)520109952B];
  gs_drv_cpg_is_initialized = 1;
  gs_cpg_pll_frequency_khz = 1.056e+6;
  gs_cpg_iclk_divisor.3_30 = gs_cpg_iclk_divisor;
  _31 = (double) gs_cpg_iclk_divisor.3_30;
  _32 = 1.056e+6 / _31;
  gs_cpg_iclk_frequency_khz = _32;
  gs_cpg_bclk_divisor.4_33 = gs_cpg_bclk_divisor;
  _34 = (double) gs_cpg_bclk_divisor.4_33;
  _35 = 1.056e+6 / _34;
  gs_cpg_bclk_frequency_khz = _35;
  gs_cpg_p1clk_divisor.5_36 = gs_cpg_p1clk_divisor;
  _37 = (double) gs_cpg_p1clk_divisor.5_36;
  _38 = 1.056e+6 / _37;
  gs_cpg_p1clk_frequency_khz = _38;
  gs_cpg_extal_frequency_khz = 2.4e+4;
  reg_value_39 ={v} MEM[(volatile uint16_t *)4244504592B];

  <bb 4>:
  # count_210 = PHI <count_41(80), 3(3)>
  # frqcr_206 = PHI <frqcr_116(80), reg_value_39(3)>
  # ivtmp_229 = PHI <ivtmp_228(80), 3(3)>
  count_41 = count_210 + 4294967295;
  _42 = count_41 * 16;
  _43 = &s_sc_cpg_sub_clock_div_config[0] + _42;
  _65 = _43->sub_clk_frequency_khz;
  if (_65 > -1.25e-1)
    goto <bb 5>;
  else
    goto <bb 72>;

  <bb 5>:
  if (_65 < 1.25e-1)
    goto <bb 6>;
  else
    goto <bb 72>;

  <bb 6>:
  goto <bb 71> (<L35>);

  <bb 7>:
  if (div_d_68 > 1.875e+0)
    goto <bb 8>;
  else
    goto <bb 73>;

  <bb 8>:
  if (div_d_68 < 2.125e+0)
    goto <bb 12>;
  else
    goto <bb 73>;

  <bb 9>:
  if (div_d_68 < 4.125e+0)
    goto <bb 12>;
  else
    goto <bb 74>;

  <bb 10>:
  if (div_d_68 < 8.125e+0)
    goto <bb 12>;
  else
    goto <bb 75>;

  <bb 11>:
  if (div_d_68 < 1.6125e+1)
    goto <bb 12>;
  else
    goto <bb 6>;

  <bb 12>:
  # prephitmp_178 = PHI <0(8), 256(9), 512(10), 768(11)>
  _75 = frqcr_206 & 64767;
  _78 = _75 | prephitmp_178;
  goto <bb 79>;

  <bb 13>:
  if (_69 == 1)
    goto <bb 14>;
  else
    goto <bb 19>;

  <bb 14>:
  if (div_d_68 > 7.875e+0)
    goto <bb 15>;
  else
    goto <bb 76>;

  <bb 15>:
  if (div_d_68 < 8.125e+0)
    goto <bb 18>;
  else
    goto <bb 76>;

  <bb 16>:
  if (div_d_68 < 1.6125e+1)
    goto <bb 18>;
  else
    goto <bb 77>;

  <bb 17>:
  if (div_d_68 < 3.2125e+1)
    goto <bb 18>;
  else
    goto <bb 6>;

  <bb 18>:
  # prephitmp_82 = PHI <16(15), 32(16), 48(17)>
  _83 = frqcr_206 & 65487;
  _86 = prephitmp_82 | _83;
  goto <bb 79>;

  <bb 19>:
  if (_69 == 2)
    goto <bb 20>;
  else
    goto <bb 6>;

  <bb 20>:
  if (div_d_68 > 1.5875e+1)
    goto <bb 21>;
  else
    goto <bb 78>;

  <bb 21>:
  if (div_d_68 < 1.6125e+1)
    goto <bb 23>;
  else
    goto <bb 78>;

  <bb 22>:
  if (div_d_68 < 3.2125e+1)
    goto <bb 23>;
  else
    goto <bb 6>;

  <bb 23>:
  # fc_91 = PHI <2(21), 3(22)>
  _90 = frqcr_206 & 65532;
  _92 = _90 | fc_91;
  goto <bb 79>;

  <bb 24>:
  # frqcr_234 = PHI <frqcr_116(79)>
  check_frqcr_46 = frqcr_234 & 819;
  switch (check_frqcr_46) <default: <L35>, case 18: <L11>, case 274: <L11>, case 530: <L11>, case 802: <L11>, case 819: <L11>>

<L11>:
  _47 = (unsigned int) frqcr_234;
  _48 = _47 >> 8;
  _49 = _48 & 3;
  switch (_49) <default: <L12>, case 1: <L13>, case 2: <L14>, case 3: <L15>>

<L12>:
  gs_cpg_iclk_divisor = 2;
  goto <bb 30> (<L16>);

<L13>:
  gs_cpg_iclk_divisor = 4;
  goto <bb 30> (<L16>);

<L14>:
  gs_cpg_iclk_divisor = 8;
  goto <bb 30> (<L16>);

<L15>:
  gs_cpg_iclk_divisor = 16;

  # prephitmp_131 = PHI <6.6e+4(29), 5.28e+5(26), 2.64e+5(27), 1.32e+5(28)>
<L16>:
  _50 = _47 >> 4;
  _51 = _50 & 3;
  switch (_51) <default: <L20>, case 1: <L17>, case 2: <L18>, case 3: <L19>>

<L17>:
  gs_cpg_bclk_divisor = 8;
  goto <bb 34> (<L20>);

<L18>:
  gs_cpg_bclk_divisor = 16;
  goto <bb 34> (<L20>);

<L19>:
  gs_cpg_bclk_divisor = 32;

  # prephitmp_122 = PHI <_35(30), 1.32e+5(31), 6.6e+4(32), 3.3e+4(33)>
<L20>:
  _52 = frqcr_234 & 3;
  switch (_52) <default: <L23>, case 2: <L21>, case 3: <L22>>

<L21>:
  gs_cpg_p1clk_divisor = 16;
  goto <bb 37> (<L23>);

<L22>:
  gs_cpg_p1clk_divisor = 32;

  # prephitmp_110 = PHI <_38(34), 6.6e+4(35), 3.3e+4(36)>
<L23>:
  gs_cpg_iclk_frequency_khz = prephitmp_131;
  gs_cpg_bclk_frequency_khz = prephitmp_122;
  gs_cpg_p1clk_frequency_khz = prephitmp_110;
  MEM[(volatile uint16_t *)4244504592B] ={v} frqcr_234;
  reg_value_63 ={v} MEM[(volatile uint16_t *)4244504592B];
  reg_value_94 ={v} MEM[(volatile uint16_t *)4244504832B];
  reg_value_95 ={v} MEM[(volatile uint16_t *)4244504836B];

  <bb 38>:
  # count_209 = PHI <count_97(82), 4(37)>
  # ckiosel_205 = PHI <ckiosel_146(82), reg_value_94(37)>
  # sclksel_204 = PHI <sclksel_215(82), reg_value_95(37)>
  # ivtmp_84 = PHI <ivtmp_76(82), 4(37)>
  count_97 = count_209 + 4294967295;
  _98 = count_97 * 2;
  _99 = &s_sc_cpg_sub_clock_src_config[0] + _98;
  _106 = _99->clk_sub_selection;
  if (_106 == 0)
    goto <bb 39>;
  else
    goto <bb 43>;

  <bb 39>:
  _107 = _99->clk_src_option;
  if (_107 == 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  _109 = ckiosel_205 & 65532;
  goto <bb 81>;

  <bb 41>:
  if (_107 == 1)
    goto <bb 42>;
  else
    goto <bb 6>;

  <bb 42>:
  _111 = ckiosel_205 & 65532;
  _112 = _111 | 1;
  goto <bb 81>;

  <bb 43>:
  if (_106 == 1)
    goto <bb 44>;
  else
    goto <bb 52>;

  <bb 44>:
  _113 = _99->clk_src_option;
  if (_113 == 3)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  _115 = sclksel_204 & 64767;
  goto <bb 81>;

  <bb 46>:
  if (_113 == 1)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  _117 = sclksel_204 & 64767;
  _118 = _117 | 256;
  goto <bb 81>;

  <bb 48>:
  if (_113 == 0)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  _120 = sclksel_204 & 64767;
  _121 = _120 | 512;
  goto <bb 81>;

  <bb 50>:
  if (_113 == 2)
    goto <bb 51>;
  else
    goto <bb 6>;

  <bb 51>:
  _123 = sclksel_204 & 64767;
  _124 = _123 | 768;
  goto <bb 81>;

  <bb 52>:
  if (_106 == 2)
    goto <bb 53>;
  else
    goto <bb 61>;

  <bb 53>:
  _125 = _99->clk_src_option;
  if (_125 == 3)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  _127 = sclksel_204 & 65487;
  goto <bb 81>;

  <bb 55>:
  if (_125 == 1)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  _129 = sclksel_204 & 65487;
  _130 = _129 | 16;
  goto <bb 81>;

  <bb 57>:
  if (_125 == 0)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  _132 = sclksel_204 & 65487;
  _133 = _132 | 32;
  goto <bb 81>;

  <bb 59>:
  if (_125 == 2)
    goto <bb 60>;
  else
    goto <bb 6>;

  <bb 60>:
  _135 = sclksel_204 & 65487;
  _136 = _135 | 48;
  goto <bb 81>;

  <bb 61>:
  if (_106 == 3)
    goto <bb 62>;
  else
    goto <bb 6>;

  <bb 62>:
  _137 = _99->clk_src_option;
  if (_137 == 3)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  _139 = sclksel_204 & 65532;
  goto <bb 81>;

  <bb 64>:
  if (_137 == 1)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  _141 = sclksel_204 & 65532;
  _142 = _141 | 1;
  goto <bb 81>;

  <bb 66>:
  if (_137 == 0)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  _144 = sclksel_204 & 65532;
  _145 = _144 | 2;
  goto <bb 81>;

  <bb 68>:
  if (_137 == 2)
    goto <bb 69>;
  else
    goto <bb 6>;

  <bb 69>:
  _147 = sclksel_204 & 65532;
  _148 = _147 | 3;
  goto <bb 81>;

  <bb 70>:
  # ckiosel_231 = PHI <ckiosel_146(81)>
  # sclksel_230 = PHI <sclksel_215(81)>
  MEM[(volatile uint16_t *)4244504832B] ={v} ckiosel_231;
  MEM[(volatile uint16_t *)4244504836B] ={v} sclksel_230;
  reg_value_103 ={v} MEM[(volatile uint16_t *)4244504832B];
  reg_value_104 ={v} MEM[(volatile uint16_t *)4244504836B];
  reg_value_150 ={v} MEM[(volatile uint16_t *)4244504592B];
  frqcr_151 = reg_value_150 & 36863;
  MEM[(volatile uint16_t *)4244504592B] ={v} frqcr_151;
  reg_value_161 ={v} MEM[(volatile uint16_t *)4244504592B];

  # retval_4 = PHI <0(2), -1(6), 0(70), -1(24)>
<L35>:
  return retval_4;

  <bb 72>:
  div_d_68 = 1.056e+6 / _65;
  _69 = _43->clk_sub_src;
  if (_69 == 0)
    goto <bb 7>;
  else
    goto <bb 13>;

  <bb 73>:
  if (div_d_68 > 3.875e+0)
    goto <bb 9>;
  else
    goto <bb 74>;

  <bb 74>:
  if (div_d_68 > 7.875e+0)
    goto <bb 10>;
  else
    goto <bb 75>;

  <bb 75>:
  if (div_d_68 > 1.5875e+1)
    goto <bb 11>;
  else
    goto <bb 6>;

  <bb 76>:
  if (div_d_68 > 1.5875e+1)
    goto <bb 16>;
  else
    goto <bb 77>;

  <bb 77>:
  if (div_d_68 > 3.1875e+1)
    goto <bb 17>;
  else
    goto <bb 6>;

  <bb 78>:
  if (div_d_68 > 3.1875e+1)
    goto <bb 22>;
  else
    goto <bb 6>;

  <bb 79>:
  # frqcr_116 = PHI <_92(23), _86(18), _78(12)>
  ivtmp_228 = ivtmp_229 - 1;
  if (ivtmp_228 != 0)
    goto <bb 80>;
  else
    goto <bb 24>;

  <bb 80>:
  goto <bb 4>;

  <bb 81>:
  # ckiosel_146 = PHI <ckiosel_205(69), ckiosel_205(67), ckiosel_205(65), ckiosel_205(63), ckiosel_205(60), ckiosel_205(58), ckiosel_205(56), ckiosel_205(54), ckiosel_205(51), ckiosel_205(49), ckiosel_205(47), ckiosel_205(45), _112(42), _109(40)>
  # sclksel_215 = PHI <_148(69), _145(67), _142(65), _139(63), _136(60), _133(58), _130(56), _127(54), _124(51), _121(49), _118(47), _115(45), sclksel_204(42), sclksel_204(40)>
  ivtmp_76 = ivtmp_84 - 1;
  if (ivtmp_76 != 0)
    goto <bb 82>;
  else
    goto <bb 70>;

  <bb 82>:
  goto <bb 38>;

}



;; Function R_CPG_SetSubClockDividers (R_CPG_SetSubClockDividers, funcdef_no=11, decl_uid=70425, cgraph_uid=11, symbol_order=26)


Analyzing loop at ../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:581
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:581:14: note: ===== analyze_loop_nest =====
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:581:14: note: === vect_analyze_loop_form ===
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:581:14: note: not vectorized: control flow in loop.
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:581:14: note: bad loop form.
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:569:7: note: vectorized 0 loops in function.
R_CPG_SetSubClockDividers (const struct st_r_drv_cpg_set_sub_t * p_sub_clk_settings, uint32_t count)
{
  float64_t div_d;
  uint16_t fc;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  bool_t result;
  int_t D.71158;
  uint16_t reg_value;
  uint16_t reg_value;
  int_t ret;
  uint16_t check_frqcr;
  uint16_t frqcr;
  int_t _2;
  long unsigned int _12;
  const struct st_r_drv_cpg_set_sub_t * _14;
  unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  unsigned int _26;
  unsigned int _27;
  double gs_cpg_pll_frequency_khz.9_33;
  double _36;
  double _40;
  double _44;
  long unsigned int pretmp_46;
  short unsigned int _49;
  double _51;
  double gs_cpg_pll_frequency_khz.13_53;
  <unnamed type> _55;
  short unsigned int _61;
  short unsigned int _64;
  double prephitmp_65;
  double _66;
  short unsigned int _69;
  short unsigned int _72;
  long unsigned int pretmp_73;
  double prephitmp_74;
  short unsigned int _76;
  short unsigned int _78;
  double _80;
  double prephitmp_83;
  short unsigned int prephitmp_93;
  short unsigned int prephitmp_95;

  <bb 2>:
  reg_value_47 ={v} MEM[(volatile uint16_t *)4244504592B];
  if (count_10(D) != 0)
    goto <bb 3>;
  else
    goto <bb 26>;

  <bb 3>:
  gs_cpg_pll_frequency_khz.13_53 = gs_cpg_pll_frequency_khz;

  <bb 4>:
  # count_90 = PHI <count_10(D)(3), count_11(25)>
  # frqcr_104 = PHI <reg_value_47(3), frqcr_79(25)>
  count_11 = count_90 + 4294967295;
  _12 = count_11 * 16;
  _14 = p_sub_clk_settings_13(D) + _12;
  _51 = _14->sub_clk_frequency_khz;
  if (_51 > -1.25e-1)
    goto <bb 5>;
  else
    goto <bb 43>;

  <bb 5>:
  if (_51 < 1.25e-1)
    goto <bb 42> (<L33>);
  else
    goto <bb 43>;

  <bb 6>:
  if (div_d_54 > 1.875e+0)
    goto <bb 7>;
  else
    goto <bb 44>;

  <bb 7>:
  if (div_d_54 < 2.125e+0)
    goto <bb 11>;
  else
    goto <bb 44>;

  <bb 8>:
  if (div_d_54 < 4.125e+0)
    goto <bb 11>;
  else
    goto <bb 45>;

  <bb 9>:
  if (div_d_54 < 8.125e+0)
    goto <bb 11>;
  else
    goto <bb 46>;

  <bb 10>:
  if (div_d_54 < 1.6125e+1)
    goto <bb 11>;
  else
    goto <bb 42> (<L33>);

  <bb 11>:
  # prephitmp_93 = PHI <0(7), 256(8), 512(9), 768(10)>
  _61 = frqcr_104 & 64767;
  _64 = _61 | prephitmp_93;
  goto <bb 23>;

  <bb 12>:
  if (_55 == 1)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 13>:
  if (div_d_54 > 7.875e+0)
    goto <bb 14>;
  else
    goto <bb 47>;

  <bb 14>:
  if (div_d_54 < 8.125e+0)
    goto <bb 17>;
  else
    goto <bb 47>;

  <bb 15>:
  if (div_d_54 < 1.6125e+1)
    goto <bb 17>;
  else
    goto <bb 48>;

  <bb 16>:
  if (div_d_54 < 3.2125e+1)
    goto <bb 17>;
  else
    goto <bb 42> (<L33>);

  <bb 17>:
  # prephitmp_95 = PHI <16(14), 32(15), 48(16)>
  _69 = frqcr_104 & 65487;
  _72 = _69 | prephitmp_95;
  goto <bb 23>;

  <bb 18>:
  if (_55 == 2)
    goto <bb 19>;
  else
    goto <bb 42> (<L33>);

  <bb 19>:
  if (div_d_54 > 1.5875e+1)
    goto <bb 20>;
  else
    goto <bb 49>;

  <bb 20>:
  if (div_d_54 < 1.6125e+1)
    goto <bb 22>;
  else
    goto <bb 49>;

  <bb 21>:
  if (div_d_54 < 3.2125e+1)
    goto <bb 22>;
  else
    goto <bb 42> (<L33>);

  <bb 22>:
  # fc_77 = PHI <2(20), 3(21)>
  _76 = frqcr_104 & 65532;
  _78 = _76 | fc_77;

  <bb 23>:
  # frqcr_79 = PHI <_72(17), _64(11), _78(22)>
  if (count_11 != 0)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:
  # frqcr_107 = PHI <frqcr_79(23)>
  goto <bb 26>;

  <bb 25>:
  goto <bb 4>;

  <bb 26>:
  # frqcr_103 = PHI <frqcr_107(24), reg_value_47(2)>
  check_frqcr_18 = frqcr_103 & 819;
  switch (check_frqcr_18) <default: <L33>, case 18: <L29>, case 274: <L29>, case 530: <L29>, case 802: <L29>, case 819: <L29>>

<L29>:
  _19 = (unsigned int) frqcr_103;
  _20 = _19 >> 8;
  _21 = _20 & 3;
  switch (_21) <default: <L12>, case 1: <L13>, case 2: <L14>, case 3: <L15>>

<L12>:
  gs_cpg_iclk_divisor = 2;
  goto <bb 32> (<L30>);

<L13>:
  gs_cpg_iclk_divisor = 4;
  goto <bb 32> (<L30>);

<L14>:
  gs_cpg_iclk_divisor = 8;
  goto <bb 32> (<L30>);

<L15>:
  gs_cpg_iclk_divisor = 16;

  # prephitmp_83 = PHI <2.0e+0(28), 4.0e+0(29), 8.0e+0(30), 1.6e+1(31)>
<L30>:
  _26 = _19 >> 4;
  _27 = _26 & 3;
  switch (_27) <default: <L35>, case 1: <L18>, case 2: <L19>, case 3: <L20>>

<L35>:
  pretmp_46 = gs_cpg_bclk_divisor;
  _80 = (double) pretmp_46;
  goto <bb 37> (<L31>);

<L18>:
  gs_cpg_bclk_divisor = 8;
  goto <bb 37> (<L31>);

<L19>:
  gs_cpg_bclk_divisor = 16;
  goto <bb 37> (<L31>);

<L20>:
  gs_cpg_bclk_divisor = 32;

  # prephitmp_74 = PHI <8.0e+0(34), 1.6e+1(35), 3.2e+1(36), _80(33)>
<L31>:
  _49 = frqcr_103 & 3;
  switch (_49) <default: <L36>, case 2: <L23>, case 3: <L24>>

<L36>:
  pretmp_73 = gs_cpg_p1clk_divisor;
  _66 = (double) pretmp_73;
  goto <bb 41> (<L32>);

<L23>:
  gs_cpg_p1clk_divisor = 16;
  goto <bb 41> (<L32>);

<L24>:
  gs_cpg_p1clk_divisor = 32;

  # prephitmp_65 = PHI <1.6e+1(39), 3.2e+1(40), _66(38)>
<L32>:
  gs_cpg_pll_frequency_khz.9_33 = gs_cpg_pll_frequency_khz;
  _36 = gs_cpg_pll_frequency_khz.9_33 / prephitmp_83;
  gs_cpg_iclk_frequency_khz = _36;
  _40 = gs_cpg_pll_frequency_khz.9_33 / prephitmp_74;
  gs_cpg_bclk_frequency_khz = _40;
  _44 = gs_cpg_pll_frequency_khz.9_33 / prephitmp_65;
  gs_cpg_p1clk_frequency_khz = _44;
  MEM[(volatile uint16_t *)4244504592B] ={v} frqcr_103;
  reg_value_48 ={v} MEM[(volatile uint16_t *)4244504592B];

  # _2 = PHI <-1(10), -1(26), 0(41), -1(5), -1(49), -1(48), -1(46), -1(21), -1(18), -1(16)>
<L33>:
  return _2;

  <bb 43>:
  div_d_54 = gs_cpg_pll_frequency_khz.13_53 / _51;
  _55 = _14->clk_sub_src;
  if (_55 == 0)
    goto <bb 6>;
  else
    goto <bb 12>;

  <bb 44>:
  if (div_d_54 > 3.875e+0)
    goto <bb 8>;
  else
    goto <bb 45>;

  <bb 45>:
  if (div_d_54 > 7.875e+0)
    goto <bb 9>;
  else
    goto <bb 46>;

  <bb 46>:
  if (div_d_54 > 1.5875e+1)
    goto <bb 10>;
  else
    goto <bb 42> (<L33>);

  <bb 47>:
  if (div_d_54 > 1.5875e+1)
    goto <bb 15>;
  else
    goto <bb 48>;

  <bb 48>:
  if (div_d_54 > 3.1875e+1)
    goto <bb 16>;
  else
    goto <bb 42> (<L33>);

  <bb 49>:
  if (div_d_54 > 3.1875e+1)
    goto <bb 21>;
  else
    goto <bb 42> (<L33>);

}



;; Function R_CPG_SetSubClockSource (R_CPG_SetSubClockSource, funcdef_no=13, decl_uid=70428, cgraph_uid=13, symbol_order=28)


Analyzing loop at ../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:876
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:876:14: note: ===== analyze_loop_nest =====
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:876:14: note: === vect_analyze_loop_form ===
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:876:14: note: not vectorized: control flow in loop.
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:876:14: note: bad loop form.
../generate/drivers/r_cpg/src/lld/r_cpg_lld_rza2m.c:863:7: note: vectorized 0 loops in function.
R_CPG_SetSubClockSource (const struct st_r_drv_cpg_set_src_t * p_sub_clk_settings, uint32_t count)
{
  int_t D.71181;
  uint16_t reg_value;
  uint16_t reg_value;
  uint16_t reg_value;
  uint16_t reg_value;
  uint16_t sclksel;
  uint16_t ckiosel;
  int_t ret;
  int_t _2;
  long unsigned int _10;
  const struct st_r_drv_cpg_set_src_t * _12;
  <unnamed type> _25;
  <unnamed type> _26;
  short unsigned int _28;
  short unsigned int _30;
  short unsigned int _31;
  <unnamed type> _32;
  short unsigned int _34;
  short unsigned int _36;
  short unsigned int _37;
  short unsigned int _39;
  short unsigned int _40;
  short unsigned int _42;
  short unsigned int _43;
  <unnamed type> _44;
  short unsigned int _46;
  short unsigned int _48;
  short unsigned int _49;
  short unsigned int _51;
  short unsigned int _52;
  short unsigned int _54;
  short unsigned int _55;
  <unnamed type> _56;
  short unsigned int _58;
  short unsigned int _60;
  short unsigned int _61;
  short unsigned int _63;
  short unsigned int _64;
  short unsigned int _66;
  short unsigned int _67;

  <bb 2>:
  reg_value_20 ={v} MEM[(volatile uint16_t *)4244504832B];
  reg_value_19 ={v} MEM[(volatile uint16_t *)4244504836B];
  if (count_8(D) != 0)
    goto <bb 3>;
  else
    goto <bb 39>;

  <bb 3>:

  <bb 4>:
  # count_35 = PHI <count_8(D)(3), count_9(37)>
  # ckiosel_85 = PHI <reg_value_20(3), ckiosel_91(37)>
  # sclksel_68 = PHI <reg_value_19(3), sclksel_92(37)>
  count_9 = count_35 + 4294967295;
  _10 = count_9 * 2;
  _12 = p_sub_clk_settings_11(D) + _10;
  _25 = _12->clk_sub_selection;
  if (_25 == 0)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 5>:
  _26 = _12->clk_src_option;
  if (_26 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _28 = ckiosel_85 & 65532;
  goto <bb 36>;

  <bb 7>:
  if (_26 == 1)
    goto <bb 8>;
  else
    goto <bb 40>;

  <bb 8>:
  _30 = ckiosel_85 & 65532;
  _31 = _30 | 1;
  goto <bb 36>;

  <bb 9>:
  if (_25 == 1)
    goto <bb 10>;
  else
    goto <bb 18>;

  <bb 10>:
  _32 = _12->clk_src_option;
  if (_32 == 3)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _34 = sclksel_68 & 64767;
  goto <bb 36>;

  <bb 12>:
  if (_32 == 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _36 = sclksel_68 & 64767;
  _37 = _36 | 256;
  goto <bb 36>;

  <bb 14>:
  if (_32 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _39 = sclksel_68 & 64767;
  _40 = _39 | 512;
  goto <bb 36>;

  <bb 16>:
  if (_32 == 2)
    goto <bb 17>;
  else
    goto <bb 40>;

  <bb 17>:
  _42 = sclksel_68 & 64767;
  _43 = _42 | 768;
  goto <bb 36>;

  <bb 18>:
  if (_25 == 2)
    goto <bb 19>;
  else
    goto <bb 27>;

  <bb 19>:
  _44 = _12->clk_src_option;
  if (_44 == 3)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _46 = sclksel_68 & 65487;
  goto <bb 36>;

  <bb 21>:
  if (_44 == 1)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _48 = sclksel_68 & 65487;
  _49 = _48 | 16;
  goto <bb 36>;

  <bb 23>:
  if (_44 == 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _51 = sclksel_68 & 65487;
  _52 = _51 | 32;
  goto <bb 36>;

  <bb 25>:
  if (_44 == 2)
    goto <bb 26>;
  else
    goto <bb 40>;

  <bb 26>:
  _54 = sclksel_68 & 65487;
  _55 = _54 | 48;
  goto <bb 36>;

  <bb 27>:
  if (_25 == 3)
    goto <bb 28>;
  else
    goto <bb 40>;

  <bb 28>:
  _56 = _12->clk_src_option;
  if (_56 == 3)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _58 = sclksel_68 & 65532;
  goto <bb 36>;

  <bb 30>:
  if (_56 == 1)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  _60 = sclksel_68 & 65532;
  _61 = _60 | 1;
  goto <bb 36>;

  <bb 32>:
  if (_56 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  _63 = sclksel_68 & 65532;
  _64 = _63 | 2;
  goto <bb 36>;

  <bb 34>:
  if (_56 == 2)
    goto <bb 35>;
  else
    goto <bb 40>;

  <bb 35>:
  _66 = sclksel_68 & 65532;
  _67 = _66 | 3;

  <bb 36>:
  # ckiosel_91 = PHI <ckiosel_85(31), ckiosel_85(33), ckiosel_85(35), _28(6), _31(8), ckiosel_85(11), ckiosel_85(13), ckiosel_85(15), ckiosel_85(17), ckiosel_85(20), ckiosel_85(22), ckiosel_85(24), ckiosel_85(26), ckiosel_85(29)>
  # sclksel_92 = PHI <_61(31), _64(33), _67(35), sclksel_68(6), sclksel_68(8), _34(11), _37(13), _40(15), _43(17), _46(20), _49(22), _52(24), _55(26), _58(29)>
  if (count_9 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  goto <bb 4>;

  <bb 38>:
  # ckiosel_88 = PHI <ckiosel_91(36)>
  # sclksel_86 = PHI <sclksel_92(36)>

  <bb 39>:
  # ckiosel_69 = PHI <ckiosel_88(38), reg_value_20(2)>
  # sclksel_29 = PHI <sclksel_86(38), reg_value_19(2)>
  MEM[(volatile uint16_t *)4244504832B] ={v} ckiosel_69;
  MEM[(volatile uint16_t *)4244504836B] ={v} sclksel_29;
  reg_value_22 ={v} MEM[(volatile uint16_t *)4244504832B];
  reg_value_21 ={v} MEM[(volatile uint16_t *)4244504836B];

  <bb 40>:
  # _2 = PHI <-1(16), 0(39), -1(7), -1(34), -1(27), -1(25)>
  return _2;

}


