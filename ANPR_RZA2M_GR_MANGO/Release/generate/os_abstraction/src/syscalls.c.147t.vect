
;; Function initialise_monitor_handles (initialise_monitor_handles, funcdef_no=19, decl_uid=8221, cgraph_uid=19, symbol_order=24)


Analyzing loop at ../generate/os_abstraction/src/syscalls.c:182
../generate/os_abstraction/src/syscalls.c:182:3: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/syscalls.c:182:3: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [19, + , 4294967295] != 0
  bounds on difference of bases: -19 ... -19
  result:
    # of iterations 19, bounded by 19
Creating dr for openfiles[i_24].handle
analyze_innermost: Applying pattern match.pd:83, generic-match.c:9008
success.
	base_address: &openfiles
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 64
	base_object: openfiles
	Access function 0: 0
	Access function 1: {0, +, 1}_1
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_data_refs ===
../generate/os_abstraction/src/syscalls.c:182:3: note: got vectype for stmt: openfiles[i_24].handle = -1;
vector(4) int
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_scalar_cycles ===
../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: i_24 = PHI <i_12(4), 0(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: Access function of PHI: {0, +, 1}_1
../generate/os_abstraction/src/syscalls.c:182:3: note: step: 1,  init: 0
../generate/os_abstraction/src/syscalls.c:182:3: note: Detected induction.
../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: .MEM_25 = PHI <.MEM_11(4), .MEM_10(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: ivtmp_1 = PHI <ivtmp_22(4), 20(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: Access function of PHI: {20, +, 4294967295}_1
../generate/os_abstraction/src/syscalls.c:182:3: note: step: 4294967295,  init: 20
../generate/os_abstraction/src/syscalls.c:182:3: note: Detected induction.
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_pattern_recog ===
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_data_ref_accesses ===
../generate/os_abstraction/src/syscalls.c:182:3: note: not consecutive access openfiles[i_24].handle = -1;
../generate/os_abstraction/src/syscalls.c:182:3: note: using strided accesses
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_mark_stmts_to_be_vectorized ===
../generate/os_abstraction/src/syscalls.c:182:3: note: init: phi relevant? i_24 = PHI <i_12(4), 0(2)>
../generate/os_abstraction/src/syscalls.c:182:3: note: init: phi relevant? .MEM_25 = PHI <.MEM_11(4), .MEM_10(2)>
../generate/os_abstraction/src/syscalls.c:182:3: note: init: phi relevant? ivtmp_1 = PHI <ivtmp_22(4), 20(2)>
../generate/os_abstraction/src/syscalls.c:182:3: note: init: stmt relevant? openfiles[i_24].handle = -1;
../generate/os_abstraction/src/syscalls.c:182:3: note: vec_stmt_relevant_p: stmt has vdefs.
../generate/os_abstraction/src/syscalls.c:182:3: note: mark relevant 4, live 0: openfiles[i_24].handle = -1;
../generate/os_abstraction/src/syscalls.c:182:3: note: init: stmt relevant? i_12 = i_24 + 1;
../generate/os_abstraction/src/syscalls.c:182:3: note: init: stmt relevant? ivtmp_22 = ivtmp_1 - 1;
../generate/os_abstraction/src/syscalls.c:182:3: note: init: stmt relevant? if (ivtmp_22 != 0)
../generate/os_abstraction/src/syscalls.c:182:3: note: worklist: examine stmt: openfiles[i_24].handle = -1;
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: openfiles[i_24].handle = -1;
  stmt_b: openfiles[i_24].handle = -1;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_determine_vectorization_factor ===
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining phi: i_24 = PHI <i_12(4), 0(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining phi: .MEM_25 = PHI <.MEM_11(4), .MEM_10(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining phi: ivtmp_1 = PHI <ivtmp_22(4), 20(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: openfiles[i_24].handle = -1;

../generate/os_abstraction/src/syscalls.c:182:3: note: get vectype for scalar type:  int
../generate/os_abstraction/src/syscalls.c:182:3: note: vectype: vector(4) int
../generate/os_abstraction/src/syscalls.c:182:3: note: nunits = 4
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: i_12 = i_24 + 1;

../generate/os_abstraction/src/syscalls.c:182:3: note: skip.
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: ivtmp_22 = ivtmp_1 - 1;

../generate/os_abstraction/src/syscalls.c:182:3: note: skip.
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: if (ivtmp_22 != 0)

../generate/os_abstraction/src/syscalls.c:182:3: note: skip.
../generate/os_abstraction/src/syscalls.c:182:3: note: vectorization factor = 4
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_slp ===
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_make_slp_decision ===
../generate/os_abstraction/src/syscalls.c:182:3: note: vectorization_factor = 4, niters = 20
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_data_refs_alignment ===
../generate/os_abstraction/src/syscalls.c:182:3: note: vect_compute_data_ref_alignment:
../generate/os_abstraction/src/syscalls.c:182:3: note: force alignment of openfiles[i_24].handle
../generate/os_abstraction/src/syscalls.c:182:3: note: misalign = 0 bytes of ref openfiles[i_24].handle
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_prune_runtime_alias_test_list ===
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_enhance_data_refs_alignment ===
../generate/os_abstraction/src/syscalls.c:182:3: note: vect_can_advance_ivs_p:
../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: i_24 = PHI <i_12(4), 0(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: .MEM_25 = PHI <.MEM_11(4), .MEM_10(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: virtual phi. skip.
../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: ivtmp_1 = PHI <ivtmp_22(4), 20(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_loop_operations ===
../generate/os_abstraction/src/syscalls.c:182:3: note: examining phi: i_24 = PHI <i_12(4), 0(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: examining phi: .MEM_25 = PHI <.MEM_11(4), .MEM_10(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: examining phi: ivtmp_1 = PHI <ivtmp_22(4), 20(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: openfiles[i_24].handle = -1;
../generate/os_abstraction/src/syscalls.c:182:3: note: vect_is_simple_use: operand -1
../generate/os_abstraction/src/syscalls.c:182:3: note: vect_model_store_cost: inside_cost = 8, prologue_cost = 1 .
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: i_12 = i_24 + 1;
../generate/os_abstraction/src/syscalls.c:182:3: note: irrelevant.
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: ivtmp_22 = ivtmp_1 - 1;
../generate/os_abstraction/src/syscalls.c:182:3: note: irrelevant.
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: if (ivtmp_22 != 0)
../generate/os_abstraction/src/syscalls.c:182:3: note: irrelevant.
../generate/os_abstraction/src/syscalls.c:182:3: note: Cost model analysis: 
  Vector inside of loop cost: 8
  Vector prologue cost: 1
  Vector epilogue cost: 0
  Scalar iteration cost: 1
  Scalar outside cost: 0
  Vector outside cost: 1
  prologue iterations: 0
  epilogue iterations: 0
../generate/os_abstraction/src/syscalls.c:182:3: note: cost model: the vector iteration cost = 8 divided by the scalar iteration cost = 1 is greater or equal to the vectorization factor = 4.
../generate/os_abstraction/src/syscalls.c:182:3: note: not vectorized: vectorization not profitable.
../generate/os_abstraction/src/syscalls.c:182:3: note: not vectorized: vector version will never be profitable.
../generate/os_abstraction/src/syscalls.c:182:3: note: ***** Re-trying analysis with vector size 8
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/syscalls.c:182:3: note: === get_loop_niters ===
Creating dr for openfiles[i_24].handle
analyze_innermost: Applying pattern match.pd:83, generic-match.c:9008
success.
	base_address: &openfiles
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 64
	base_object: openfiles
	Access function 0: 0
	Access function 1: {0, +, 1}_1
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_data_refs ===
../generate/os_abstraction/src/syscalls.c:182:3: note: got vectype for stmt: openfiles[i_24].handle = -1;
vector(2) int
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_scalar_cycles ===
../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: i_24 = PHI <i_12(4), 0(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: Access function of PHI: {0, +, 1}_1
../generate/os_abstraction/src/syscalls.c:182:3: note: step: 1,  init: 0
../generate/os_abstraction/src/syscalls.c:182:3: note: Detected induction.
../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: .MEM_25 = PHI <.MEM_11(4), .MEM_10(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: ivtmp_1 = PHI <ivtmp_22(4), 20(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: Access function of PHI: {20, +, 4294967295}_1
../generate/os_abstraction/src/syscalls.c:182:3: note: step: 4294967295,  init: 20
../generate/os_abstraction/src/syscalls.c:182:3: note: Detected induction.
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_pattern_recog ===
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_data_ref_accesses ===
../generate/os_abstraction/src/syscalls.c:182:3: note: not consecutive access openfiles[i_24].handle = -1;
../generate/os_abstraction/src/syscalls.c:182:3: note: using strided accesses
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_mark_stmts_to_be_vectorized ===
../generate/os_abstraction/src/syscalls.c:182:3: note: init: phi relevant? i_24 = PHI <i_12(4), 0(2)>
../generate/os_abstraction/src/syscalls.c:182:3: note: init: phi relevant? .MEM_25 = PHI <.MEM_11(4), .MEM_10(2)>
../generate/os_abstraction/src/syscalls.c:182:3: note: init: phi relevant? ivtmp_1 = PHI <ivtmp_22(4), 20(2)>
../generate/os_abstraction/src/syscalls.c:182:3: note: init: stmt relevant? openfiles[i_24].handle = -1;
../generate/os_abstraction/src/syscalls.c:182:3: note: vec_stmt_relevant_p: stmt has vdefs.
../generate/os_abstraction/src/syscalls.c:182:3: note: mark relevant 4, live 0: openfiles[i_24].handle = -1;
../generate/os_abstraction/src/syscalls.c:182:3: note: init: stmt relevant? i_12 = i_24 + 1;
../generate/os_abstraction/src/syscalls.c:182:3: note: init: stmt relevant? ivtmp_22 = ivtmp_1 - 1;
../generate/os_abstraction/src/syscalls.c:182:3: note: init: stmt relevant? if (ivtmp_22 != 0)
../generate/os_abstraction/src/syscalls.c:182:3: note: worklist: examine stmt: openfiles[i_24].handle = -1;
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: openfiles[i_24].handle = -1;
  stmt_b: openfiles[i_24].handle = -1;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_determine_vectorization_factor ===
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining phi: i_24 = PHI <i_12(4), 0(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining phi: .MEM_25 = PHI <.MEM_11(4), .MEM_10(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining phi: ivtmp_1 = PHI <ivtmp_22(4), 20(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: openfiles[i_24].handle = -1;

../generate/os_abstraction/src/syscalls.c:182:3: note: get vectype for scalar type:  int
../generate/os_abstraction/src/syscalls.c:182:3: note: vectype: vector(2) int
../generate/os_abstraction/src/syscalls.c:182:3: note: nunits = 2
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: i_12 = i_24 + 1;

../generate/os_abstraction/src/syscalls.c:182:3: note: skip.
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: ivtmp_22 = ivtmp_1 - 1;

../generate/os_abstraction/src/syscalls.c:182:3: note: skip.
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: if (ivtmp_22 != 0)

../generate/os_abstraction/src/syscalls.c:182:3: note: skip.
../generate/os_abstraction/src/syscalls.c:182:3: note: vectorization factor = 2
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_slp ===
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_make_slp_decision ===
../generate/os_abstraction/src/syscalls.c:182:3: note: vectorization_factor = 2, niters = 20
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_data_refs_alignment ===
../generate/os_abstraction/src/syscalls.c:182:3: note: vect_compute_data_ref_alignment:
../generate/os_abstraction/src/syscalls.c:182:3: note: force alignment of openfiles[i_24].handle
../generate/os_abstraction/src/syscalls.c:182:3: note: misalign = 0 bytes of ref openfiles[i_24].handle
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_prune_runtime_alias_test_list ===
../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_enhance_data_refs_alignment ===
../generate/os_abstraction/src/syscalls.c:182:3: note: vect_can_advance_ivs_p:
../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: i_24 = PHI <i_12(4), 0(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: .MEM_25 = PHI <.MEM_11(4), .MEM_10(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: virtual phi. skip.
../generate/os_abstraction/src/syscalls.c:182:3: note: Analyze phi: ivtmp_1 = PHI <ivtmp_22(4), 20(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: === vect_analyze_loop_operations ===
../generate/os_abstraction/src/syscalls.c:182:3: note: examining phi: i_24 = PHI <i_12(4), 0(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: examining phi: .MEM_25 = PHI <.MEM_11(4), .MEM_10(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: examining phi: ivtmp_1 = PHI <ivtmp_22(4), 20(2)>

../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: openfiles[i_24].handle = -1;
../generate/os_abstraction/src/syscalls.c:182:3: note: vect_is_simple_use: operand -1
../generate/os_abstraction/src/syscalls.c:182:3: note: vect_model_store_cost: inside_cost = 4, prologue_cost = 1 .
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: i_12 = i_24 + 1;
../generate/os_abstraction/src/syscalls.c:182:3: note: irrelevant.
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: ivtmp_22 = ivtmp_1 - 1;
../generate/os_abstraction/src/syscalls.c:182:3: note: irrelevant.
../generate/os_abstraction/src/syscalls.c:182:3: note: ==> examining statement: if (ivtmp_22 != 0)
../generate/os_abstraction/src/syscalls.c:182:3: note: irrelevant.
../generate/os_abstraction/src/syscalls.c:182:3: note: Cost model analysis: 
  Vector inside of loop cost: 4
  Vector prologue cost: 1
  Vector epilogue cost: 0
  Scalar iteration cost: 1
  Scalar outside cost: 0
  Vector outside cost: 1
  prologue iterations: 0
  epilogue iterations: 0
../generate/os_abstraction/src/syscalls.c:182:3: note: cost model: the vector iteration cost = 4 divided by the scalar iteration cost = 1 is greater or equal to the vectorization factor = 2.
../generate/os_abstraction/src/syscalls.c:182:3: note: not vectorized: vectorization not profitable.
../generate/os_abstraction/src/syscalls.c:182:3: note: not vectorized: vector version will never be profitable.
../generate/os_abstraction/src/syscalls.c:144:1: note: vectorized 0 loops in function.
initialise_monitor_handles ()
{
  int fh;
  int i;
  unsigned int ivtmp_1;
  int monitor_stdin.0_13;
  int monitor_stdout.1_16;
  unsigned int ivtmp_22;

  <bb 2>:
  fh_5 = low_open ("\\\\.\\stdin", 2);
  monitor_stdin = fh_5;
  fh_8 = low_open ("\\\\.\\stdout", 1);
  monitor_stdout = fh_8;
  low_open ("\\\\.\\stderr", 1);

  <bb 3>:
  # i_24 = PHI <i_12(4), 0(2)>
  # ivtmp_1 = PHI <ivtmp_22(4), 20(2)>
  openfiles[i_24].handle = -1;
  i_12 = i_24 + 1;
  ivtmp_22 = ivtmp_1 - 1;
  if (ivtmp_22 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 3>;

  <bb 5>:
  monitor_stdin.0_13 = monitor_stdin;
  openfiles[0].handle = monitor_stdin.0_13;
  openfiles[0].pos = 0;
  monitor_stdout.1_16 = monitor_stdout;
  openfiles[1].handle = monitor_stdout.1_16;
  openfiles[1].pos = 0;
  openfiles[2].handle = monitor_stdout.1_16;
  openfiles[2].pos = 0;
  return;

}



;; Function _swilseek (_swilseek, funcdef_no=25, decl_uid=8211, cgraph_uid=25, symbol_order=30)


Analyzing loop at ../generate/os_abstraction/src/syscalls.c:122
../generate/os_abstraction/src/syscalls.c:122:21: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/syscalls.c:122:21: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/syscalls.c:122:21: note: not vectorized: control flow in loop.
../generate/os_abstraction/src/syscalls.c:122:21: note: bad loop form.
../generate/os_abstraction/src/syscalls.c:266:1: note: vectorized 0 loops in function.
_swilseek (int file, int ptr, int dir)
{
  int D.8635;
  int i;
  int fh;
  int _2;
  int _11;
  int _14;
  struct _reent * _impure_ptr.4_16;
  int _17;
  int _18;
  int _19;
  int _21;
  unsigned int ivtmp_36;
  unsigned int ivtmp_39;

  <bb 2>:
  _impure_ptr.4_16 = _impure_ptr;
  if (_impure_ptr.4_16 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  _17 = _impure_ptr.4_16->__sdidinit;
  if (_17 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  __sinit (_impure_ptr.4_16);

  <bb 5>:
  if (file_5(D) == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _18 = monitor_stdin;
  goto <bb 11>;

  <bb 7>:
  if (file_5(D) == 1)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _19 = monitor_stdout;
  goto <bb 11>;

  <bb 9>:
  if (file_5(D) == 2)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:

  <bb 11>:
  # _21 = PHI <_18(6), _19(8), file_5(D)(9), 0(10)>

  <bb 12>:
  # i_38 = PHI <i_15(14), 0(11)>
  # ivtmp_36 = PHI <ivtmp_39(14), 20(11)>
  _14 = openfiles[i_38].handle;
  if (_14 == _21)
    goto <bb 19>;
  else
    goto <bb 13>;

  <bb 13>:
  i_15 = i_38 + 1;
  ivtmp_39 = ivtmp_36 - 1;
  if (ivtmp_39 != 0)
    goto <bb 14>;
  else
    goto <bb 20>;

  <bb 14>:
  goto <bb 12>;

  <bb 15>:
  _11 = openfiles[i_40].pos;
  ptr_12 = ptr_10(D) + _11;
  goto <bb 17>;

  <bb 16>:
  if (i_40 != 20)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # ptr_37 = PHI <ptr_10(D)(16), ptr_12(15)>
  openfiles[i_40].pos = ptr_37;

  <bb 18>:
  # _2 = PHI <-1(20), ptr_37(17), ptr_10(D)(16), ptr_10(D)(21)>
  return _2;

  <bb 19>:
  # i_40 = PHI <i_38(12)>
  if (dir_9(D) == 1)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 20>:
  if (dir_9(D) == 1)
    goto <bb 18>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 18>;

}



;; Function _lseek (_lseek, funcdef_no=26, decl_uid=8207, cgraph_uid=26, symbol_order=31)


Analyzing loop at ../generate/os_abstraction/src/syscalls.c:122
../generate/os_abstraction/src/syscalls.c:122:21: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/syscalls.c:122:21: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/syscalls.c:122:21: note: not vectorized: control flow in loop.
../generate/os_abstraction/src/syscalls.c:122:21: note: bad loop form.
../generate/os_abstraction/src/syscalls.c:306:1: note: vectorized 0 loops in function.
_lseek (int file, int ptr, int dir)
{
  int D.8652;
  int i;
  int fh;
  int D.8650;
  int ptr;
  int D.8548;
  int * _7;
  int _9;
  int _15;
  int _17;
  int _20;
  struct _reent * _impure_ptr.4_21;
  int _22;
  int _23;
  int _24;
  unsigned int ivtmp_25;
  int _26;
  unsigned int ivtmp_51;

  <bb 2>:
  _impure_ptr.4_21 = _impure_ptr;
  if (_impure_ptr.4_21 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  _22 = _impure_ptr.4_21->__sdidinit;
  if (_22 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  __sinit (_impure_ptr.4_21);

  <bb 5>:
  if (file_2(D) == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _23 = monitor_stdin;
  goto <bb 11>;

  <bb 7>:
  if (file_2(D) == 1)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _24 = monitor_stdout;
  goto <bb 11>;

  <bb 9>:
  if (file_2(D) == 2)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:

  <bb 11>:
  # _26 = PHI <_23(6), _24(8), file_2(D)(9), 0(10)>

  <bb 12>:
  # i_46 = PHI <i_16(14), 0(11)>
  # ivtmp_51 = PHI <ivtmp_25(14), 20(11)>
  _15 = openfiles[i_46].handle;
  if (_15 == _26)
    goto <bb 22>;
  else
    goto <bb 13>;

  <bb 13>:
  i_16 = i_46 + 1;
  ivtmp_25 = ivtmp_51 - 1;
  if (ivtmp_25 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  goto <bb 12>;

  <bb 15>:
  if (dir_4(D) == 1)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 16>:
  _7 = __errno ();
  *_7 = _8(D);
  goto <bb 21>;

  <bb 17>:
  _17 = openfiles[i_50].pos;
  ptr_18 = ptr_3(D) + _17;
  goto <bb 19>;

  <bb 18>:
  if (i_50 != 20)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # ptr_47 = PHI <ptr_3(D)(18), ptr_18(17)>
  openfiles[i_50].pos = ptr_47;

  <bb 20>:
  # _20 = PHI <ptr_47(19), ptr_3(D)(18), ptr_3(D)(15)>
  if (_20 == -1)
    goto <bb 16>;
  else
    goto <bb 21>;

  <bb 21>:
  # _9 = PHI <_20(20), -1(16)>
  return _9;

  <bb 22>:
  # i_50 = PHI <i_46(12)>
  if (dir_4(D) == 1)
    goto <bb 17>;
  else
    goto <bb 18>;

}



;; Function _swiopen (_swiopen, funcdef_no=29, decl_uid=8195, cgraph_uid=29, symbol_order=34)


Analyzing loop at ../generate/os_abstraction/src/syscalls.c:122
../generate/os_abstraction/src/syscalls.c:122:21: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/syscalls.c:122:21: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/syscalls.c:122:21: note: not vectorized: control flow in loop.
../generate/os_abstraction/src/syscalls.c:122:21: note: bad loop form.
../generate/os_abstraction/src/syscalls.c:375:1: note: vectorized 0 loops in function.
_swiopen (const char * path, int flags)
{
  int D.8560;
  int i;
  int fh;
  int _1;
  unsigned int ivtmp_5;
  int _12;
  int * _14;
  unsigned int ivtmp_30;

  <bb 2>:

  <bb 3>:
  # i_31 = PHI <i_13(5), 0(2)>
  # ivtmp_5 = PHI <ivtmp_30(5), 20(2)>
  _12 = openfiles[i_31].handle;
  if (_12 == -1)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:
  i_13 = i_31 + 1;
  ivtmp_30 = ivtmp_5 - 1;
  if (ivtmp_30 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  goto <bb 3>;

  <bb 6>:
  openfiles[i_26].handle = fh_9;
  openfiles[i_26].pos = 0;

  <bb 7>:
  # _1 = PHI <-1(4), fh_9(6), fh_9(9)>
  return _1;

  <bb 8>:
  # i_26 = PHI <i_31(3)>
  fh_9 = low_open (path_6(D), flags_7(D));
  if (fh_9 >= 0)
    goto <bb 6>;
  else
    goto <bb 9>;

  <bb 9>:
  _14 = __errno ();
  *_14 = _15(D);
  goto <bb 7>;

}



;; Function _open (_open, funcdef_no=30, decl_uid=8192, cgraph_uid=30, symbol_order=35)


Analyzing loop at ../generate/os_abstraction/src/syscalls.c:122
../generate/os_abstraction/src/syscalls.c:122:21: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/syscalls.c:122:21: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/syscalls.c:122:21: note: not vectorized: control flow in loop.
../generate/os_abstraction/src/syscalls.c:122:21: note: bad loop form.
../generate/os_abstraction/src/syscalls.c:398:1: note: vectorized 0 loops in function.
_open (const char * path, int flags)
{
  int D.8694;
  int i;
  int fh;
  int D.8693;
  int D.8564;
  int * _6;
  int _8;
  unsigned int ivtmp_12;
  int _13;
  int * _16;
  unsigned int ivtmp_20;

  <bb 2>:

  <bb 3>:
  # i_43 = PHI <i_14(5), 0(2)>
  # ivtmp_12 = PHI <ivtmp_20(5), 20(2)>
  _13 = openfiles[i_43].handle;
  if (_13 == -1)
    goto <bb 9>;
  else
    goto <bb 4>;

  <bb 4>:
  i_14 = i_43 + 1;
  ivtmp_20 = ivtmp_12 - 1;
  if (ivtmp_20 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  goto <bb 3>;

  <bb 6>:
  openfiles[i_38].handle = fh_15;
  openfiles[i_38].pos = 0;
  goto <bb 8>;

  <bb 7>:
  _6 = __errno ();
  *_6 = _7(D);

  <bb 8>:
  # _8 = PHI <fh_15(6), -1(7), fh_15(10)>
  return _8;

  <bb 9>:
  # i_38 = PHI <i_43(3)>
  fh_15 = low_open (path_2(D), flags_3(D));
  if (fh_15 >= 0)
    goto <bb 6>;
  else
    goto <bb 10>;

  <bb 10>:
  _16 = __errno ();
  *_16 = _17(D);
  if (fh_15 == -1)
    goto <bb 7>;
  else
    goto <bb 8>;

}



;; Function _swiclose (_swiclose, funcdef_no=31, decl_uid=8189, cgraph_uid=31, symbol_order=36)


Analyzing loop at ../generate/os_abstraction/src/syscalls.c:122
../generate/os_abstraction/src/syscalls.c:122:21: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/syscalls.c:122:21: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/syscalls.c:122:21: note: not vectorized: control flow in loop.
../generate/os_abstraction/src/syscalls.c:122:21: note: bad loop form.
../generate/os_abstraction/src/syscalls.c:406:1: note: vectorized 0 loops in function.
_swiclose (int file)
{
  int i;
  int res;
  unsigned int ivtmp_4;
  int _8;
  unsigned int ivtmp_17;

  <bb 2>:

  <bb 3>:
  # i_18 = PHI <i_9(5), 0(2)>
  # ivtmp_4 = PHI <ivtmp_17(5), 20(2)>
  _8 = openfiles[i_18].handle;
  if (file_3(D) == _8)
    goto <bb 7>;
  else
    goto <bb 4>;

  <bb 4>:
  i_9 = i_18 + 1;
  ivtmp_17 = ivtmp_4 - 1;
  if (ivtmp_17 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  goto <bb 3>;

  <bb 6>:
  res_7 = low_close (file_3(D));
  return res_7;

  <bb 7>:
  # i_15 = PHI <i_18(3)>
  openfiles[i_15].handle = -1;
  goto <bb 6>;

}



;; Function _close (_close, funcdef_no=32, decl_uid=8187, cgraph_uid=32, symbol_order=37)


Analyzing loop at ../generate/os_abstraction/src/syscalls.c:122
../generate/os_abstraction/src/syscalls.c:122:21: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/syscalls.c:122:21: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/syscalls.c:122:21: note: not vectorized: control flow in loop.
../generate/os_abstraction/src/syscalls.c:122:21: note: bad loop form.
../generate/os_abstraction/src/syscalls.c:430:1: note: vectorized 0 loops in function.
_close (int file)
{
  int i;
  int res;
  int D.8722;
  int D.8572;
  int * _5;
  unsigned int ivtmp_11;
  int _12;
  unsigned int ivtmp_23;

  <bb 2>:

  <bb 3>:
  # i_26 = PHI <i_13(5), 0(2)>
  # ivtmp_23 = PHI <ivtmp_11(5), 20(2)>
  _12 = openfiles[i_26].handle;
  if (file_2(D) == _12)
    goto <bb 9>;
  else
    goto <bb 4>;

  <bb 4>:
  i_13 = i_26 + 1;
  ivtmp_11 = ivtmp_23 - 1;
  if (ivtmp_11 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  goto <bb 3>;

  <bb 6>:
  res_14 = low_close (file_2(D));
  if (res_14 == -1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _5 = __errno ();
  *_5 = _6(D);

  <bb 8>:
  return res_14;

  <bb 9>:
  # i_7 = PHI <i_26(3)>
  openfiles[i_7].handle = -1;
  goto <bb 6>;

}



;; Function _stat (_stat, funcdef_no=38, decl_uid=8173, cgraph_uid=38, symbol_order=44)


Analyzing loop at ../generate/os_abstraction/src/syscalls.c:122
../generate/os_abstraction/src/syscalls.c:122:21: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/syscalls.c:122:21: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/syscalls.c:122:21: note: not vectorized: control flow in loop.
../generate/os_abstraction/src/syscalls.c:122:21: note: bad loop form.

Analyzing loop at ../generate/os_abstraction/src/syscalls.c:122
../generate/os_abstraction/src/syscalls.c:122:21: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/syscalls.c:122:21: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/syscalls.c:122:21: note: not vectorized: control flow in loop.
../generate/os_abstraction/src/syscalls.c:122:21: note: bad loop form.
../generate/os_abstraction/src/syscalls.c:513:5: note: vectorized 0 loops in function.
_stat (const char * fname, struct stat * st)
{
  int i;
  int res;
  int D.8755;
  int D.8751;
  int i;
  int fh;
  int D.8750;
  int D.8745;
  int D.8744;
  int file;
  int _1;
  int * _13;
  int _17;
  int * _20;
  unsigned int ivtmp_23;
  int _24;
  unsigned int ivtmp_57;
  unsigned int ivtmp_62;
  unsigned int ivtmp_66;

  <bb 2>:

  <bb 3>:
  # i_67 = PHI <i_18(5), 0(2)>
  # ivtmp_23 = PHI <ivtmp_57(5), 20(2)>
  _17 = openfiles[i_67].handle;
  if (_17 == -1)
    goto <bb 13>;
  else
    goto <bb 4>;

  <bb 4>:
  i_18 = i_67 + 1;
  ivtmp_57 = ivtmp_23 - 1;
  if (ivtmp_57 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  goto <bb 3>;

  <bb 6>:
  openfiles[i_63].handle = fh_19;
  openfiles[i_63].pos = 0;
  memset (st_7(D), 0, 60);
  st_7(D)->st_mode = 33024;
  st_7(D)->st_blksize = 1024;
  goto <bb 9>;

  <bb 7>:
  _13 = __errno ();
  *_13 = _14(D);
  goto <bb 12>;

  <bb 8>:

  <bb 9>:
  # i_68 = PHI <i_25(8), 0(6)>
  # ivtmp_62 = PHI <ivtmp_66(8), 20(6)>
  _24 = openfiles[i_68].handle;
  if (fh_19 == _24)
    goto <bb 15>;
  else
    goto <bb 10>;

  <bb 10>:
  i_25 = i_68 + 1;
  ivtmp_66 = ivtmp_62 - 1;
  if (ivtmp_66 != 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 11>:
  low_close (fh_19);

  <bb 12>:
  # _1 = PHI <-1(14), 0(11), -1(7)>
  return _1;

  <bb 13>:
  # i_63 = PHI <i_67(3)>
  fh_19 = low_open (fname_4(D), 0);
  if (fh_19 >= 0)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 14>:
  _20 = __errno ();
  *_20 = _21(D);
  if (fh_19 == -1)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 15>:
  # i_53 = PHI <i_68(9)>
  openfiles[i_53].handle = -1;
  goto <bb 11>;

}


