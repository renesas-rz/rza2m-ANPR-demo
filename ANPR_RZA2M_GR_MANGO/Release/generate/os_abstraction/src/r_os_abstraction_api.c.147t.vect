
;; Function main_task (main_task, funcdef_no=5, decl_uid=71381, cgraph_uid=5, symbol_order=17) (executed once)

../generate/os_abstraction/src/r_os_abstraction_api.c:289:13: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/r_os_abstraction_api.c:289:13: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/r_os_abstraction_api.c:289:13: note: not vectorized: empty loop.
../generate/os_abstraction/src/r_os_abstraction_api.c:289:13: note: bad loop form.
../generate/os_abstraction/src/r_os_abstraction_api.c:289:13: note: vectorized 0 loops in function.
main_task ()
{
  <bb 2>:
  s_os_running = 1;
  os_main_task_t ();

  <bb 3>:

  <bb 4>:
  goto <bb 3>;

}



;; Function R_OS_TaskGetState (R_OS_TaskGetState, funcdef_no=27, decl_uid=71275, cgraph_uid=27, symbol_order=39)


Analyzing loop at ../generate/os_abstraction/src/r_os_abstraction_api.c:916
../generate/os_abstraction/src/r_os_abstraction_api.c:916:53: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/r_os_abstraction_api.c:916:53: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/r_os_abstraction_api.c:916:53: note: not vectorized: control flow in loop.
../generate/os_abstraction/src/r_os_abstraction_api.c:916:53: note: bad loop form.
../generate/os_abstraction/src/r_os_abstraction_api.c:873:13: note: vectorized 0 loops in function.
R_OS_TaskGetState (const char * p_task)
{
  void * p_mem_to_alloc;
  void * D.72174;
  struct TaskStatus_t * p_xt;
  static const char * sp_status_name[6] = {"Running", "Ready", "Blocked", "Suspended", "Deleted", "Invalid"};
  bool_t exit_loop;
  eTaskState ret_state;
  uint16_t j;
  uint32_t ux_array_size;
  struct TaskStatus_t * p_task_status_array;
  int _1;
  const char * _6;
  long unsigned int _13;
  unsigned int _19;
  const char * _21;
  int _23;
  uint8_t * _32;
  unsigned int _33;
  long unsigned int _51;
  const char * prephitmp_59;
  const char * pretmp_60;
  long unsigned int _65;

  <bb 2>:
  ux_array_size_12 = uxTaskGetNumberOfTasks ();
  if (ux_array_size_12 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __builtin_puts (&"Cannot get memory for threads list\r"[0]);
  goto <bb 11>;

  <bb 4>:
  _13 = ux_array_size_12 * 36;
  vTaskSuspendAll ();
  _32 = xHeapRegions[0].pucStartAddress;
  _33 = (unsigned int) _32;
  pvPortsetDesiredBlockForMalloc (_33);
  p_mem_to_alloc_36 = pvPortMalloc (_13);
  xTaskResumeAll ();
  if (p_mem_to_alloc_36 == 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  uxTaskGetSystemState (p_mem_to_alloc_36, ux_array_size_12, 0B);

  <bb 6>:
  # j_62 = PHI <0(5), j_47(8)>
  # _65 = PHI <0(5), _51(8)>
  _19 = _65 * 36;
  p_xt_20 = p_mem_to_alloc_36 + _19;
  _21 = p_xt_20->pcTaskName;
  _23 = strcmp (_21, p_task_22(D));
  if (_23 == 0)
    goto <bb 9>;
  else
    goto <bb 7>;

  <bb 7>:
  j_47 = j_62 + 1;
  _51 = (long unsigned int) j_47;
  if (ux_array_size_12 > _51)
    goto <bb 8>;
  else
    goto <bb 10>;

  <bb 8>:
  goto <bb 6>;

  <bb 9>:
  # p_xt_64 = PHI <p_xt_20(6)>
  ret_state_24 = p_xt_64->eCurrentState;
  _1 = (int) ret_state_24;
  pretmp_60 = sp_status_name[_1];

  <bb 10>:
  # prephitmp_59 = PHI <"Invalid"(7), pretmp_60(9)>
  vPortFree (p_mem_to_alloc_36);

  <bb 11>:
  # _6 = PHI <0B(3), prephitmp_59(10)>
  return _6;

}



;; Function R_OS_AssertCalled (R_OS_AssertCalled, funcdef_no=32, decl_uid=7676, cgraph_uid=32, symbol_order=44)


Analyzing loop at ../generate/os_abstraction/src/r_os_abstraction_api.c:1118
../generate/os_abstraction/src/r_os_abstraction_api.c:1118:11: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/r_os_abstraction_api.c:1118:11: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/r_os_abstraction_api.c:1118:11: note: === get_loop_niters ===
../generate/os_abstraction/src/r_os_abstraction_api.c:1118:11: note: not vectorized: number of iterations cannot be computed.
../generate/os_abstraction/src/r_os_abstraction_api.c:1118:11: note: bad loop form.

Analyzing loop at ../generate/os_abstraction/src/r_os_abstraction_api.c:1101
../generate/os_abstraction/src/r_os_abstraction_api.c:1101:11: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/r_os_abstraction_api.c:1101:11: note: === vect_analyze_loop_form ===
split exit edge.
../generate/os_abstraction/src/r_os_abstraction_api.c:1101:11: note: === get_loop_niters ===
../generate/os_abstraction/src/r_os_abstraction_api.c:1101:11: note: not vectorized: number of iterations cannot be computed.
../generate/os_abstraction/src/r_os_abstraction_api.c:1101:11: note: bad loop form.
../generate/os_abstraction/src/r_os_abstraction_api.c:1071:6: note: vectorized 0 loops in function.
R_OS_AssertCalled (const char * p_file, uint32_t line)
{
  struct TaskStatus_t task_details;
  void * handle;
  const char * D.72193;
  char local_string_buffer[32];
  volatile uint32_t ul;
  long unsigned int s_line.16_10;
  int _11;
  long unsigned int ul.20_14;
  struct _reent * _impure_ptr.17_17;
  struct __FILE * _18;
  long unsigned int ul.20_20;
  long unsigned int _21;
  long unsigned int ul.18_22;
  long unsigned int ul.19_23;
  long unsigned int ul.21_27;
  const char * _31;

  <bb 2>:
  ul ={v} 0;
  memset (&local_string_buffer, 0, 32);
  strncpy (&s_file, p_file_5(D), 199);
  s_line = line_7(D);
  printf ("\r\nR_OS_Assert. File :%s", &s_file);
  s_line.16_10 = s_line;
  _21 = s_line.16_10 & 65535;
  _11 = (int) _21;
  printf ("\r\n Line %d\r\n:(\r\n", _11);
  handle_30 = xTaskGetCurrentTaskHandle ();
  vTaskGetInfo (handle_30, &task_details, 1, 5);
  _31 = task_details.pcTaskName;
  task_details ={v} {CLOBBER};
  strncpy (&local_string_buffer, _31, 31);
  printf ("Current task: %s\r\n", &local_string_buffer);
  _impure_ptr.17_17 = _impure_ptr;
  _18 = _impure_ptr.17_17->_stdout;
  fflush (_18);
  ul.20_14 ={v} ul;
  if (ul.20_14 <= 16777215)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  ul ={v} 0;
  vPortEnterCritical ();
  goto <bb 7>;

  <bb 4>:

  <bb 5>:
  ul.18_22 ={v} ul;
  ul.19_23 = ul.18_22 + 1;
  ul ={v} ul.19_23;
  ul.20_20 ={v} ul;
  if (ul.20_20 <= 16777215)
    goto <bb 6>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 3>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:
  ul.21_27 ={v} ul;
  if (ul.21_27 == 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  vPortExitCritical ();
  local_string_buffer ={v} {CLOBBER};
  return;

}



;; Function R_OS_KernelInit (R_OS_KernelInit, funcdef_no=8, decl_uid=71232, cgraph_uid=8, symbol_order=20) (executed once)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/generate/compiler/inc/r_compiler_abstraction_api.h:47
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/generate/compiler/inc/r_compiler_abstraction_api.h:47:9: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/generate/compiler/inc/r_compiler_abstraction_api.h:47:9: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/generate/compiler/inc/r_compiler_abstraction_api.h:47:9: note: not vectorized: multiple exits.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/generate/compiler/inc/r_compiler_abstraction_api.h:47:9: note: bad loop form.
../generate/os_abstraction/src/r_os_abstraction_api.c:358:6: note: vectorized 0 loops in function.
R_OS_KernelInit ()
{
  BaseType_t t;
  uint32_t default_heap;

  <bb 2>:
  default_heap = 98304;
  R_OS_InitMemManager ();
  R_DEVLINK_Init ();
  initialise_monitor_handles ();
  t_9 = xTaskCreate (main_task, &s_startup_task_name_str, 16384, &default_heap, 6, 0B);
  if (t_9 != 1)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  R_OS_AssertCalled ("../generate/os_abstraction/src/r_os_abstraction_api.c", 399);

  <bb 4>:
  vTaskStartScheduler ();

  <bb 5>:
  __asm__ __volatile__("nop");

  <bb 6>:
  goto <bb 5>;

}



;; Function R_OS_MessageQueueGet (R_OS_MessageQueueGet, funcdef_no=48, decl_uid=71329, cgraph_uid=48, symbol_order=60)


Analyzing loop at ../generate/os_abstraction/src/r_os_abstraction_api.c:1597
../generate/os_abstraction/src/r_os_abstraction_api.c:1597:19: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/r_os_abstraction_api.c:1597:19: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/r_os_abstraction_api.c:1597:19: note: not vectorized: latch block not empty.
../generate/os_abstraction/src/r_os_abstraction_api.c:1597:19: note: bad loop form.
../generate/os_abstraction/src/r_os_abstraction_api.c:1564:8: note: vectorized 0 loops in function.
R_OS_MessageQueueGet (void * p_queue, void * * pp_msg, uint32_t timeout, bool_t blocking)
{
  bool_t ret_value;
  uint32_t ticks_to_wait;
  _Bool _6;
  _Bool _8;
  _Bool _9;
  long int _14;
  long int _17;

  <bb 2>:
  _6 = p_queue_5(D) != 0B;
  _8 = pp_msg_7(D) != 0B;
  _9 = _6 & _8;
  if (_9 != 0)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 3>:
  if (blocking_12(D) == 0)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 9>;

  <bb 5>:
  _14 = xQueueReceive (p_queue_5(D), pp_msg_7(D), timeout_11(D));
  if (_14 == 1)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  goto <bb 10>;

  <bb 7>:
  *pp_msg_7(D) = 0B;
  goto <bb 10>;

  <bb 8>:
  __asm__ __volatile__("SWI 0" :  :  : "memory");

  <bb 9>:
  _17 = xQueueReceive (p_queue_5(D), pp_msg_7(D), timeout_11(D));
  if (_17 != 1)
    goto <bb 8>;
  else
    goto <bb 6>;

  <bb 10>:
  # ret_value_2 = PHI <0(2), 0(7), 1(6)>
  return ret_value_2;

}



;; Function R_OS_EventWait (R_OS_EventWait, funcdef_no=56, decl_uid=71346, cgraph_uid=56, symbol_order=68)


Analyzing loop at ../generate/os_abstraction/src/r_os_abstraction_api.c:1838
../generate/os_abstraction/src/r_os_abstraction_api.c:1838:11: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/r_os_abstraction_api.c:1838:11: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/r_os_abstraction_api.c:1838:11: note: not vectorized: control flow in loop.
../generate/os_abstraction/src/r_os_abstraction_api.c:1838:11: note: bad loop form.
../generate/os_abstraction/src/r_os_abstraction_api.c:1820:8: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/r_os_abstraction_api.c:1820:8: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/r_os_abstraction_api.c:1820:8: note: not vectorized: control flow in loop.
../generate/os_abstraction/src/r_os_abstraction_api.c:1820:8: note: bad loop form.
../generate/os_abstraction/src/r_os_abstraction_api.c:1820:8: note: vectorized 0 loops in function.
R_OS_EventWait (void * * pp_event, systime_t timeout)
{
  TickType_t ticks_to_wait;
  e_event_state_t event_state;
  volatile bool_t process;
  volatile bool_t ret_value;
  unsigned int process.35_1;
  void * _9;
  unsigned int process.35_11;
  void * _13;
  long int _15;
  _event_state_t event_state.34_16;
  bool_t _20;
  long int _24;
  _event_state_t event_state.34_25;

  <bb 2>:
  ret_value ={v} 0;
  process ={v} 1;
  event_state = 2;
  goto <bb 7>;

  <bb 3>:
  _13 = *pp_event_12(D);
  _15 = xQueueReceive (_13, &event_state, timeout_8(D));
  if (_15 == 1)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 4>:
  event_state.34_16 = event_state;
  if (event_state.34_16 == 1)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  ret_value ={v} 1;
  process ={v} 0;

  <bb 6>:
  process ={v} 0;

  <bb 7>:
  if (timeout_8(D) != 4294967295)
    goto <bb 14>;
  else
    goto <bb 8>;

  <bb 8>:

  <bb 9>:
  process.35_1 ={v} process;
  if (process.35_1 == 1)
    goto <bb 10>;
  else
    goto <bb 15>;

  <bb 10>:
  _9 = *pp_event_12(D);
  _24 = xQueueReceive (_9, &event_state, timeout_8(D));
  if (_24 == 1)
    goto <bb 11>;
  else
    goto <bb 13>;

  <bb 11>:
  event_state.34_25 = event_state;
  if (event_state.34_25 == 1)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  ret_value ={v} 1;
  process ={v} 0;

  <bb 13>:
  goto <bb 9>;

  <bb 14>:
  process.35_11 ={v} process;
  if (process.35_11 == 1)
    goto <bb 3>;
  else
    goto <bb 15>;

  <bb 15>:
  _20 ={v} ret_value;
  event_state ={v} {CLOBBER};
  return _20;

}



;; Function vApplicationStackOverflowHook (vApplicationStackOverflowHook, funcdef_no=60, decl_uid=71370, cgraph_uid=60, symbol_order=72)

../generate/os_abstraction/src/r_os_abstraction_api.c:1925:22: note: ===== analyze_loop_nest =====
../generate/os_abstraction/src/r_os_abstraction_api.c:1925:22: note: === vect_analyze_loop_form ===
../generate/os_abstraction/src/r_os_abstraction_api.c:1925:22: note: not vectorized: empty loop.
../generate/os_abstraction/src/r_os_abstraction_api.c:1925:22: note: bad loop form.
../generate/os_abstraction/src/r_os_abstraction_api.c:1925:22: note: vectorized 0 loops in function.
__attribute__((weak))
vApplicationStackOverflowHook (void * xTask, char * pcTaskName)
{
  struct _reent * _impure_ptr.36_4;
  struct __FILE * _5;

  <bb 2>:
  printf ("Stack overflow occured at in %s \n\r", pcTaskName_2(D));
  _impure_ptr.36_4 = _impure_ptr;
  _5 = _impure_ptr.36_4->_stdout;
  fflush (_5);
  ulPortSetInterruptMask ();

  <bb 3>:

  <bb 4>:
  goto <bb 3>;

}


