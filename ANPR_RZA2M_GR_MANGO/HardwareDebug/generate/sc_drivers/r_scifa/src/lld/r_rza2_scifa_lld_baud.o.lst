   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"r_rza2_scifa_lld_baud.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.calc_brr_only_actual_baud_rate,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	calc_brr_only_actual_baud_rate:
  23              	.LFB2:
  24              		.file 1 "../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c"
   1:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
   2:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * DISCLAIMER
   3:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * This software is supplied by Renesas Electronics Corporation and is only
   4:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * intended for use with Renesas products. No other uses are authorized. This
   5:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * software is owned by Renesas Electronics Corporation and is protected under
   6:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * all applicable laws, including copyright laws.
   7:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   8:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT
   9:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
  10:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.
  11:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS
  12:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE
  13:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR
  14:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE
  15:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  16:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * Renesas reserves the right, without notice, to make changes to this software
  17:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * and to discontinue the availability of this software. By using this software,
  18:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * you agree to the additional terms and conditions found by accessing the
  19:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * following link:
  20:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * http://www.renesas.com/disclaimer
  21:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
  22:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * Copyright (C) 2019 Renesas Electronics Corporation. All rights reserved.
  23:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
  24:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
  25:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * File Name    : r_rza2_scifa_lld_baud.c
  26:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * Description  : SCIFA Low Layer Driver baud rate setting
  27:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
  28:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
  29:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * History      : DD.MM.YYYY Version Description
  30:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *              : 15.05.2018 1.00    Release
  31:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *              : 10.05.2019 1.01    Fixed issue with channel 0 Baud rate setting
  32:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *              : 23.05.2019 1.02    Restructuring to ensure that other LLDs are only accessed from
  33:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
  34:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
  35:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
  36:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  Includes   <System Includes> , "Project Includes"
  37:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
  38:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
  39:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /* System Includes */
  40:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** #include "r_typedefs.h"
  41:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** #include "iodefine.h"
  42:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** #include "iobitmask.h"
  43:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** #include "rza_io_regrw.h"              /* Low level register read/write header */
  44:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
  45:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /* Driver Includes */
  46:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** #include "driver.h"                    /* Device driver header */
  47:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** #include "r_rza2_scifa_lld.h"          /* Low Layer Driver header */
  48:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** #include "r_rza2_scifa_lld_cfg.h"      /* Low Layer Driver configuration header */
  49:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
  50:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
  51:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  Private global variables and functions
  52:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
  53:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
  54:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
  55:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  Macro definitions
  56:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
  57:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** #define R_PRV_NUM_DIVISORS_ASYNC    (9)
  58:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** #define R_PRV_NUM_DIVISORS_SYNC     (4)
  59:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
  60:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
  61:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  Typedefs
  62:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
  63:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
  64:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**
  65:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @typedef st_baud_divisorb_t baud rate divisor struct
  66:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  */
  67:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** typedef struct
  68:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** {
  69:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     int16_t     divisor;    /*!< clock divisor */
  70:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     uint8_t     abcs;       /*!< ABCS value to get divisor */
  71:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     uint8_t     bgdm;       /*!< BGDM value to get divisor */
  72:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     uint8_t     cks;        /*!< CKS  value to get divisor (CKS = n) */
  73:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** } st_baud_divisorb_t;
  74:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
  75:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
  76:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  Private global variables and functions
  77:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
  78:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static volatile struct st_scifa *sp_scifa[SCIFA_CFG_LLD_NUM_CHANNELS] =
  79:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** {
  80:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* SCIFA Channels */
  81:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     &SCIFA0, &SCIFA1, &SCIFA2, &SCIFA3, &SCIFA4
  82:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** };
  83:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
  84:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static uint32_t gs_divisor_index;
  85:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static uint32_t gs_num_divisors;
  86:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static uint32_t gs_ratio;
  87:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static uint32_t gs_brr;
  88:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static uint32_t gs_divisor;
  89:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static uint32_t gs_int_mddr;
  90:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static st_baud_divisorb_t const *gsp_baud_info;
  91:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static float gs_float_mddr;
  92:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static float gs_error;
  93:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static float gs_abs_error;
  94:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static float gs_actual_baud_rate;
  95:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
  96:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /* Baud divisor info */
  97:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
  98:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**@section
  99:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****    BRR = (PCLK / (divisor x baud)) - 1
 100:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****    when ABCS = 1, divisor = 32 x 2^(2n - 1)
 101:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****    when ABCS = 0, divisor = 64 x 2^(2n - 1) */
 102:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 103:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**@section
 104:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****    when ABCS = 0 & BGDM = 0, divisor = 64 x 2^(2n - 1)
 105:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****    when ABCS = 1 & BGDM = 0 OR ABCS = 0 & BGDM = 1, divisor = 32 x 2^(2n - 1)
 106:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****    when ABCS = 1 & BGDM = 1, divisor = 16 x 2^(2n - 1) */
 107:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 108:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static const st_baud_divisorb_t gs_scifa_async_baud[R_PRV_NUM_DIVISORS_ASYNC] =
 109:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** {
 110:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {8,    1, 1, 0},    // divisor result, ABCS, BGDM, n
 111:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {16,   0, 1, 0},
 112:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {32,   0, 0, 0},
 113:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {64,   0, 1, 1},
 114:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {128,  0, 0, 1},
 115:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {256,  0, 1, 2},
 116:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {512,  0, 0, 2},
 117:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {1024, 0, 1, 3},
 118:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {2048, 0, 0, 3}
 119:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** };
 120:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 121:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static const st_baud_divisorb_t gs_scifa_sync_baud[R_PRV_NUM_DIVISORS_SYNC] =
 122:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** {
 123:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {4,    0, 0, 0},    // divisor result, ABCS, BGDM, n
 124:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {16,   0, 0, 1},
 125:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {64,   0, 0, 2},
 126:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {256,  0, 0, 3},
 127:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** };
 128:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 129:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
 130:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  Prototypes
 131:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
 132:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 133:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static void write_baud_rate(r_channel_t channel);
 134:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static void write_mddr(r_channel_t channel);
 135:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static void calc_brr_only_actual_baud_rate(uint32_t desired_baud_rate, uint32_t clock_freq);
 136:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static void calculate_baud_rate_with_mddr(uint32_t clock_freq);
 137:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static void find_divisor_value(r_channel_t channel, uint32_t desired_baud_rate, uint32_t clock_freq
 138:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 139:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
 140:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  Private function definitions
 141:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
 142:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 143:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**
 144:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @brief write_baud_rate writes the Baud rate 
 145:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * Baud rate written to the BRR, ABCS, BGDM, 
 146:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * and CKS registers / fields
 147:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 148:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in] channel  The SCIFA channel to update
 149:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 150:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @return None
 151:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  */
 152:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static void write_baud_rate(r_channel_t channel)
 153:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** {
 154:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* set BRR */
 155:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     RZA_IO_RegWrite_8((volatile uint8_t *) &sp_scifa[channel]->BRR_MDDR.BRR.BYTE, (uint8_t) gs_brr,
 156:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 157:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* set SEMR.ABCS0 bit */
 158:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     RZA_IO_RegWrite_8((volatile uint8_t *) &sp_scifa[channel]->SEMR.BYTE, gsp_baud_info[gs_divisor_
 159:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 160:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* set SEMR.BGDM bit */
 161:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     RZA_IO_RegWrite_8((volatile uint8_t *) &sp_scifa[channel]->SEMR.BYTE, gsp_baud_info[gs_divisor_
 162:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 163:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* set SMR.CKS[1:0] bits */
 164:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     RZA_IO_RegWrite_16((volatile uint16_t *) &sp_scifa[channel]->SMR.WORD, gsp_baud_info[gs_divisor
 165:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** }
 166:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
 167:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * End of Function write_baud_rate
 168:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
 169:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 170:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**
 171:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @brief write_mddr Writes to the MDDR register and enable MDDR
 172:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * 
 173:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in] channel The SCIFA channel to update.
 174:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 175:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @return None
 176:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  */
 177:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static void write_mddr(r_channel_t channel)
 178:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** {
 179:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* enable MDDR access */
 180:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     RZA_IO_RegWrite_8((volatile uint8_t *) &sp_scifa[channel]->SEMR.BYTE, (uint16_t) 1, SCIFA_SEMR_
 181:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 182:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* write MDDR */
 183:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     RZA_IO_RegWrite_8((volatile uint8_t *) &sp_scifa[channel]->BRR_MDDR.MDDR.BYTE, (uint8_t) gs_int
 184:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 185:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* enable MDDR */
 186:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     RZA_IO_RegWrite_8((volatile uint8_t *) &sp_scifa[channel]->SEMR.BYTE, (uint16_t) 1, SCIFA_SEMR_
 187:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** }
 188:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
 189:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * End of Function write_mddr
 190:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
 191:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 192:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**
 193:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @brief Calculate the actual Baud rate and error when only the BRR is being used
 194:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 195:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in] desired_baud_rate  The desired Baud rate
 196:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 197:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in] clock_freq  The peripheral clock frequency
 198:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 199:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @return None
 200:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  */
 201:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static void calc_brr_only_actual_baud_rate(uint32_t desired_baud_rate, uint32_t clock_freq)
 202:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** {
  25              		.loc 1 202 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 203:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /*                    Clock in Hz
 204:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****        Baud rate =   _____________________
 205:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****                      prescalar x (BRR + 1)    */
 206:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 207:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_actual_baud_rate = (float) clock_freq;
  31              		.loc 1 207 0
  32 0000 901A07EE 		vmov	s15, r1	@ int
  33 0004 676AF8EE 		vcvt.f32.u32	s13, s15
 208:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_actual_baud_rate = gs_actual_baud_rate / (float) (gs_brr + 1);
  34              		.loc 1 208 0
  35 0008 003000E3 		movw	r3, #:lower16:.LANCHOR0
  36 000c 003040E3 		movt	r3, #:upper16:.LANCHOR0
  37 0010 003093E5 		ldr	r3, [r3]
  38 0014 013083E2 		add	r3, r3, #1
  39 0018 903A07EE 		vmov	s15, r3	@ int
  40 001c 677AF8EE 		vcvt.f32.u32	s15, s15
  41 0020 A75AC6EE 		vdiv.f32	s11, s13, s15
 209:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_actual_baud_rate = gs_actual_baud_rate / (float) gs_divisor;
  42              		.loc 1 209 0
  43 0024 003000E3 		movw	r3, #:lower16:.LANCHOR1
  44 0028 003040E3 		movt	r3, #:upper16:.LANCHOR1
  45 002c 007A93ED 		vldr.32	s14, [r3]	@ int
  46 0030 477AB8EE 		vcvt.f32.u32	s14, s14
  47 0034 876A85EE 		vdiv.f32	s12, s11, s14
  48 0038 003000E3 		movw	r3, #:lower16:.LANCHOR2
  49 003c 003040E3 		movt	r3, #:upper16:.LANCHOR2
  50 0040 006A83ED 		vstr.32	s12, [r3]
 210:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 211:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* calculate the bit rate error rate */
 212:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_error = (((float) clock_freq / ((float) desired_baud_rate * (float) gs_divisor * (float) (gs
  51              		.loc 1 212 0
  52 0044 100A06EE 		vmov	s12, r0	@ int
  53 0048 466AB8EE 		vcvt.f32.u32	s12, s12
  54 004c 067A27EE 		vmul.f32	s14, s14, s12
  55 0050 877A67EE 		vmul.f32	s15, s15, s14
  56 0054 A77A86EE 		vdiv.f32	s14, s13, s15
  57 0058 007AF7EE 		vmov.f32	s15, #1.0e+0
  58 005c 677A77EE 		vsub.f32	s15, s14, s15
  59 0060 097A9FED 		vldr.32	s14, .L6
  60 0064 877A67EE 		vmul.f32	s15, s15, s14
 213:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_abs_error = (gs_error < 0) ? (-gs_error) : gs_error;
  61              		.loc 1 213 0
  62 0068 C07AF5EE 		vcmpe.f32	s15, #0
  63 006c 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
  64 0070 0300004A 		bmi	.L5
  65              	.L2:
  66              		.loc 1 213 0 is_stmt 0 discriminator 4
  67 0074 003000E3 		movw	r3, #:lower16:.LANCHOR3
  68 0078 003040E3 		movt	r3, #:upper16:.LANCHOR3
  69 007c 007AC3ED 		vstr.32	s15, [r3]
  70 0080 1EFF2FE1 		bx	lr
  71              	.L5:
  72              		.loc 1 213 0 discriminator 1
  73 0084 677AF1EE 		vneg.f32	s15, s15
  74 0088 F9FFFFEA 		b	.L2
  75              	.L7:
  76              		.align	2
  77              	.L6:
  78 008c 0000C842 		.word	1120403456
  79              		.cfi_endproc
  80              	.LFE2:
  82              		.section	.text.calculate_baud_rate_with_mddr,"ax",%progbits
  83              		.align	2
  84              		.syntax unified
  85              		.arm
  86              		.fpu neon
  88              	calculate_baud_rate_with_mddr:
  89              	.LFB3:
 214:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** }
 215:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
 216:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * End of Function calc_brr_only_actual_baud_rate
 217:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
 218:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 219:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**
 220:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @brief Calculate the actual Baud rate and error when the MDDR is being used
 221:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 222:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in] clock_freq  The peripheral clock frequency
 223:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 224:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @return None
 225:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  */
 226:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static void calculate_baud_rate_with_mddr(uint32_t clock_freq)
 227:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** {
  90              		.loc 1 227 0 is_stmt 1
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.LVL1:
 228:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /*                           Clock in Hz
 229:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****        Baud rate =   ____________________________________
 230:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****                      prescalar x (256 / MDDR) x (BRR + 1)    */
 231:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 232:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_actual_baud_rate = (float) clock_freq;
  96              		.loc 1 232 0
  97 0000 900A07EE 		vmov	s15, r0	@ int
  98 0004 676AF8EE 		vcvt.f32.u32	s13, s15
 233:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_actual_baud_rate = gs_actual_baud_rate / (float) (gs_brr + 1);
  99              		.loc 1 233 0
 100 0008 003000E3 		movw	r3, #:lower16:.LANCHOR0
 101 000c 003040E3 		movt	r3, #:upper16:.LANCHOR0
 102 0010 003093E5 		ldr	r3, [r3]
 103 0014 013083E2 		add	r3, r3, #1
 104 0018 903A07EE 		vmov	s15, r3	@ int
 105 001c 677AF8EE 		vcvt.f32.u32	s15, s15
 106 0020 A77A86EE 		vdiv.f32	s14, s13, s15
 234:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_actual_baud_rate = gs_actual_baud_rate / (float) gs_divisor;
 107              		.loc 1 234 0
 108 0024 003000E3 		movw	r3, #:lower16:.LANCHOR1
 109 0028 003040E3 		movt	r3, #:upper16:.LANCHOR1
 110 002c 007AD3ED 		vldr.32	s15, [r3]	@ int
 111 0030 677AF8EE 		vcvt.f32.u32	s15, s15
 112 0034 276AC7EE 		vdiv.f32	s13, s14, s15
 235:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_actual_baud_rate = gs_actual_baud_rate / (float) (256.0 / gs_int_mddr);
 113              		.loc 1 235 0
 114 0038 003000E3 		movw	r3, #:lower16:.LANCHOR4
 115 003c 003040E3 		movt	r3, #:upper16:.LANCHOR4
 116 0040 003093E5 		ldr	r3, [r3]
 117 0044 903A07EE 		vmov	s15, r3	@ int
 118 0048 671BF8EE 		vcvt.f64.u32	d17, s15
 119 004c 072BDFED 		vldr.64	d18, .L9
 120 0050 A10BC2EE 		vdiv.f64	d16, d18, d17
 121 0054 E07BF7EE 		vcvt.f32.f64	s15, d16
 122 0058 A77A86EE 		vdiv.f32	s14, s13, s15
 123 005c 003000E3 		movw	r3, #:lower16:.LANCHOR2
 124 0060 003040E3 		movt	r3, #:upper16:.LANCHOR2
 125 0064 007A83ED 		vstr.32	s14, [r3]
 126 0068 1EFF2FE1 		bx	lr
 127              	.L10:
 128 006c 00F020E3 		.align	3
 129              	.L9:
 130 0070 00000000 		.word	0
 131 0074 00007040 		.word	1081081856
 132              		.cfi_endproc
 133              	.LFE3:
 135              		.global	__aeabi_uidiv
 136              		.section	.text.find_divisor_value,"ax",%progbits
 137              		.align	2
 138              		.syntax unified
 139              		.arm
 140              		.fpu neon
 142              	find_divisor_value:
 143              	.LFB4:
 236:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** }
 237:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
 238:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * End of Function calculate_baud_rate_with_mddr
 239:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
 240:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 241:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**
 242:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @brief Determine the value of the prescalars needed to achieve the desired
 243:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *        Baud rate
 244:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 245:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in] desired_baud_rate  The desired Baud rate
 246:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 247:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in] clock_freq  The peripheral clock frequency
 248:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 249:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in] mode  asynchronous or synchronous
 250:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 251:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @return None
 252:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  */
 253:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** static void find_divisor_value(r_channel_t channel, uint32_t desired_baud_rate, uint32_t clock_freq
 254:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** {
 144              		.loc 1 254 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              	.LVL2:
 149 0000 10402DE9 		push	{r4, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 4, -8
 152              		.cfi_offset 14, -4
 153 0004 0040A0E1 		mov	r4, r0
 255:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* select divisor table depending on the selected mode */
 256:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     if (SCIFA_MODE_ASYNC == mode)
 154              		.loc 1 256 0
 155 0008 000053E3 		cmp	r3, #0
 156 000c 1400001A 		bne	.L12
 257:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {
 258:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         gsp_baud_info = gs_scifa_async_baud;
 157              		.loc 1 258 0
 158 0010 003000E3 		movw	r3, #:lower16:.LANCHOR5
 159              	.LVL3:
 160 0014 003040E3 		movt	r3, #:upper16:.LANCHOR5
 161 0018 000000E3 		movw	r0, #:lower16:.LANCHOR6
 162              	.LVL4:
 163 001c 000040E3 		movt	r0, #:upper16:.LANCHOR6
 164 0020 000083E5 		str	r0, [r3]
 259:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         gs_num_divisors = R_PRV_NUM_DIVISORS_ASYNC;
 165              		.loc 1 259 0
 166 0024 003000E3 		movw	r3, #:lower16:.LANCHOR7
 167 0028 003040E3 		movt	r3, #:upper16:.LANCHOR7
 168 002c 0900A0E3 		mov	r0, #9
 169 0030 000083E5 		str	r0, [r3]
 170              	.L13:
 260:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 261:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     else
 262:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {
 263:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         gsp_baud_info = gs_scifa_sync_baud;
 264:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         gs_num_divisors = R_PRV_NUM_DIVISORS_SYNC;
 265:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 266:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 267:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* find the divisor; table has associated ABCS, BGDM and CKS values */
 268:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* BRR must be 255 or less */
 269:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* the "- 1" is ignored in some steps for approximations */
 270:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* BRR = (PCLK / (divisor * desired_baud)) - 1 */
 271:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* BRR = (ratio / divisor) - 1 */
 272:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 273:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_ratio = clock_freq / desired_baud_rate;
 171              		.loc 1 273 0
 172 0034 0200A0E1 		mov	r0, r2
 173 0038 FEFFFFEB 		bl	__aeabi_uidiv
 174              	.LVL5:
 175 003c 003000E3 		movw	r3, #:lower16:.LANCHOR9
 176 0040 003040E3 		movt	r3, #:upper16:.LANCHOR9
 177 0044 000083E5 		str	r0, [r3]
 274:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_divisor_index = 0;
 178              		.loc 1 274 0
 179 0048 003000E3 		movw	r3, #:lower16:.LANCHOR10
 180 004c 003040E3 		movt	r3, #:upper16:.LANCHOR10
 181 0050 0020A0E3 		mov	r2, #0
 182 0054 002083E5 		str	r2, [r3]
 275:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 276:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     if (0 == channel)
 183              		.loc 1 276 0
 184 0058 020054E1 		cmp	r4, r2
 185 005c 0E00000A 		beq	.L14
 186 0060 260000EA 		b	.L15
 187              	.LVL6:
 188              	.L12:
 263:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         gs_num_divisors = R_PRV_NUM_DIVISORS_SYNC;
 189              		.loc 1 263 0
 190 0064 003000E3 		movw	r3, #:lower16:.LANCHOR5
 191              	.LVL7:
 192 0068 003040E3 		movt	r3, #:upper16:.LANCHOR5
 193 006c 000000E3 		movw	r0, #:lower16:.LANCHOR8
 194              	.LVL8:
 195 0070 000040E3 		movt	r0, #:upper16:.LANCHOR8
 196 0074 000083E5 		str	r0, [r3]
 264:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 197              		.loc 1 264 0
 198 0078 003000E3 		movw	r3, #:lower16:.LANCHOR7
 199 007c 003040E3 		movt	r3, #:upper16:.LANCHOR7
 200 0080 0400A0E3 		mov	r0, #4
 201 0084 000083E5 		str	r0, [r3]
 202 0088 E9FFFFEA 		b	.L13
 203              	.LVL9:
 204              	.L17:
 277:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {
 278:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         /* The hardware manual states that for channel 0, P1f/16 input is not provided */
 279:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         /* so the setting CKS [1:0] 1 0 cannot be used */
 280:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         /* this restriction may be lifted in future releases */
 281:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         while ((gs_divisor_index < gs_num_divisors) &&
 282:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****             ((gs_ratio >= (uint32_t) (gsp_baud_info[gs_divisor_index].divisor * 256)) || (2 == gsp_
 283:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         {
 284:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****             gs_divisor_index++;
 205              		.loc 1 284 0
 206 008c 002000E3 		movw	r2, #:lower16:.LANCHOR10
 207 0090 002040E3 		movt	r2, #:upper16:.LANCHOR10
 208 0094 013083E2 		add	r3, r3, #1
 209 0098 003082E5 		str	r3, [r2]
 210              	.L14:
 281:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****             ((gs_ratio >= (uint32_t) (gsp_baud_info[gs_divisor_index].divisor * 256)) || (2 == gsp_
 211              		.loc 1 281 0
 212 009c 003000E3 		movw	r3, #:lower16:.LANCHOR10
 213 00a0 003040E3 		movt	r3, #:upper16:.LANCHOR10
 214 00a4 003093E5 		ldr	r3, [r3]
 215 00a8 002000E3 		movw	r2, #:lower16:.LANCHOR7
 216 00ac 002040E3 		movt	r2, #:upper16:.LANCHOR7
 217 00b0 002092E5 		ldr	r2, [r2]
 218 00b4 020053E1 		cmp	r3, r2
 219 00b8 1080BD28 		popcs	{r4, pc}
 282:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         {
 220              		.loc 1 282 0 discriminator 1
 221 00bc 001000E3 		movw	r1, #:lower16:.LANCHOR5
 222 00c0 001040E3 		movt	r1, #:upper16:.LANCHOR5
 223 00c4 83C083E0 		add	ip, r3, r3, lsl #1
 224 00c8 8C20A0E1 		lsl	r2, ip, #1
 225 00cc 001091E5 		ldr	r1, [r1]
 226 00d0 02C081E0 		add	ip, r1, r2
 227 00d4 F22091E1 		ldrsh	r2, [r1, r2]
 281:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****             ((gs_ratio >= (uint32_t) (gsp_baud_info[gs_divisor_index].divisor * 256)) || (2 == gsp_
 228              		.loc 1 281 0 discriminator 1
 229 00d8 020450E1 		cmp	r0, r2, lsl #8
 230 00dc EAFFFF2A 		bcs	.L17
 282:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         {
 231              		.loc 1 282 0
 232 00e0 0420DCE5 		ldrb	r2, [ip, #4]	@ zero_extendqisi2
 233 00e4 020052E3 		cmp	r2, #2
 234 00e8 E7FFFF0A 		beq	.L17
 235 00ec 1080BDE8 		pop	{r4, pc}
 236              	.L18:
 285:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         }
 286:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 287:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     else
 288:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {
 289:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         /* cast to uint32_t for comparison with ratio */
 290:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         while ((gs_divisor_index < gs_num_divisors) && (gs_ratio >= (uint32_t) (gsp_baud_info[gs_di
 291:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         {
 292:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****             gs_divisor_index++;
 237              		.loc 1 292 0
 238 00f0 002000E3 		movw	r2, #:lower16:.LANCHOR10
 239 00f4 002040E3 		movt	r2, #:upper16:.LANCHOR10
 240 00f8 013083E2 		add	r3, r3, #1
 241 00fc 003082E5 		str	r3, [r2]
 242              	.L15:
 290:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         {
 243              		.loc 1 290 0
 244 0100 003000E3 		movw	r3, #:lower16:.LANCHOR10
 245 0104 003040E3 		movt	r3, #:upper16:.LANCHOR10
 246 0108 003093E5 		ldr	r3, [r3]
 247 010c 002000E3 		movw	r2, #:lower16:.LANCHOR7
 248 0110 002040E3 		movt	r2, #:upper16:.LANCHOR7
 249 0114 002092E5 		ldr	r2, [r2]
 250 0118 020053E1 		cmp	r3, r2
 251 011c 1080BD28 		popcs	{r4, pc}
 290:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         {
 252              		.loc 1 290 0 is_stmt 0 discriminator 1
 253 0120 002000E3 		movw	r2, #:lower16:.LANCHOR5
 254 0124 002040E3 		movt	r2, #:upper16:.LANCHOR5
 255 0128 83C083E0 		add	ip, r3, r3, lsl #1
 256 012c 8C10A0E1 		lsl	r1, ip, #1
 257 0130 002092E5 		ldr	r2, [r2]
 258 0134 F12092E1 		ldrsh	r2, [r2, r1]
 259 0138 020450E1 		cmp	r0, r2, lsl #8
 260 013c EBFFFF2A 		bcs	.L18
 261 0140 1080BDE8 		pop	{r4, pc}
 262              		.cfi_endproc
 263              	.LFE4:
 265              		.section	.text.write_mddr,"ax",%progbits
 266              		.align	2
 267              		.syntax unified
 268              		.arm
 269              		.fpu neon
 271              	write_mddr:
 272              	.LFB1:
 178:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* enable MDDR access */
 273              		.loc 1 178 0 is_stmt 1
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL10:
 278 0000 70402DE9 		push	{r4, r5, r6, lr}
 279              		.cfi_def_cfa_offset 16
 280              		.cfi_offset 4, -16
 281              		.cfi_offset 5, -12
 282              		.cfi_offset 6, -8
 283              		.cfi_offset 14, -4
 180:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 284              		.loc 1 180 0
 285 0004 003000E3 		movw	r3, #:lower16:.LANCHOR11
 286 0008 003040E3 		movt	r3, #:upper16:.LANCHOR11
 287 000c 005193E7 		ldr	r5, [r3, r0, lsl #2]
 288 0010 144085E2 		add	r4, r5, #20
 289 0014 1030A0E3 		mov	r3, #16
 290 0018 0420A0E3 		mov	r2, #4
 291 001c 0110A0E3 		mov	r1, #1
 292 0020 0400A0E1 		mov	r0, r4
 293              	.LVL11:
 294 0024 FEFFFFEB 		bl	RZA_IO_RegWrite_8
 295              	.LVL12:
 183:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 296              		.loc 1 183 0
 297 0028 001000E3 		movw	r1, #:lower16:.LANCHOR4
 298 002c 001040E3 		movt	r1, #:upper16:.LANCHOR4
 299 0030 0030E0E3 		mvn	r3, #0
 300 0034 0020A0E3 		mov	r2, #0
 301 0038 0010D1E5 		ldrb	r1, [r1]	@ zero_extendqisi2
 302 003c 020085E2 		add	r0, r5, #2
 303 0040 FEFFFFEB 		bl	RZA_IO_RegWrite_8
 304              	.LVL13:
 186:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** }
 305              		.loc 1 186 0
 306 0044 2030A0E3 		mov	r3, #32
 307 0048 0520A0E3 		mov	r2, #5
 308 004c 0110A0E3 		mov	r1, #1
 309 0050 0400A0E1 		mov	r0, r4
 310 0054 FEFFFFEB 		bl	RZA_IO_RegWrite_8
 311              	.LVL14:
 312 0058 7080BDE8 		pop	{r4, r5, r6, pc}
 313              		.cfi_endproc
 314              	.LFE1:
 316              		.section	.text.write_baud_rate,"ax",%progbits
 317              		.align	2
 318              		.syntax unified
 319              		.arm
 320              		.fpu neon
 322              	write_baud_rate:
 323              	.LFB0:
 153:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* set BRR */
 324              		.loc 1 153 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              	.LVL15:
 329 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 330              		.cfi_def_cfa_offset 24
 331              		.cfi_offset 4, -24
 332              		.cfi_offset 5, -20
 333              		.cfi_offset 6, -16
 334              		.cfi_offset 7, -12
 335              		.cfi_offset 8, -8
 336              		.cfi_offset 14, -4
 155:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 337              		.loc 1 155 0
 338 0004 003000E3 		movw	r3, #:lower16:.LANCHOR11
 339 0008 003040E3 		movt	r3, #:upper16:.LANCHOR11
 340 000c 006193E7 		ldr	r6, [r3, r0, lsl #2]
 341 0010 001000E3 		movw	r1, #:lower16:.LANCHOR0
 342 0014 001040E3 		movt	r1, #:upper16:.LANCHOR0
 343 0018 0030E0E3 		mvn	r3, #0
 344 001c 0020A0E3 		mov	r2, #0
 345 0020 0010D1E5 		ldrb	r1, [r1]	@ zero_extendqisi2
 346 0024 020086E2 		add	r0, r6, #2
 347              	.LVL16:
 348 0028 FEFFFFEB 		bl	RZA_IO_RegWrite_8
 349              	.LVL17:
 158:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 350              		.loc 1 158 0
 351 002c 147086E2 		add	r7, r6, #20
 352 0030 004000E3 		movw	r4, #:lower16:.LANCHOR5
 353 0034 004040E3 		movt	r4, #:upper16:.LANCHOR5
 354 0038 005000E3 		movw	r5, #:lower16:.LANCHOR10
 355 003c 005040E3 		movt	r5, #:upper16:.LANCHOR10
 356 0040 003095E5 		ldr	r3, [r5]
 357 0044 833083E0 		add	r3, r3, r3, lsl #1
 358 0048 8320A0E1 		lsl	r2, r3, #1
 359 004c 001094E5 		ldr	r1, [r4]
 360 0050 021081E0 		add	r1, r1, r2
 361 0054 0130A0E3 		mov	r3, #1
 362 0058 0020A0E3 		mov	r2, #0
 363 005c 0210D1E5 		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 364 0060 0700A0E1 		mov	r0, r7
 365 0064 FEFFFFEB 		bl	RZA_IO_RegWrite_8
 366              	.LVL18:
 161:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 367              		.loc 1 161 0
 368 0068 003095E5 		ldr	r3, [r5]
 369 006c 833083E0 		add	r3, r3, r3, lsl #1
 370 0070 8320A0E1 		lsl	r2, r3, #1
 371 0074 001094E5 		ldr	r1, [r4]
 372 0078 021081E0 		add	r1, r1, r2
 373 007c 8030A0E3 		mov	r3, #128
 374 0080 0720A0E3 		mov	r2, #7
 375 0084 0310D1E5 		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 376 0088 0700A0E1 		mov	r0, r7
 377 008c FEFFFFEB 		bl	RZA_IO_RegWrite_8
 378              	.LVL19:
 164:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** }
 379              		.loc 1 164 0
 380 0090 003095E5 		ldr	r3, [r5]
 381 0094 833083E0 		add	r3, r3, r3, lsl #1
 382 0098 8320A0E1 		lsl	r2, r3, #1
 383 009c 001094E5 		ldr	r1, [r4]
 384 00a0 021081E0 		add	r1, r1, r2
 385 00a4 0330A0E3 		mov	r3, #3
 386 00a8 0020A0E3 		mov	r2, #0
 387 00ac 0410D1E5 		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 388 00b0 0600A0E1 		mov	r0, r6
 389 00b4 FEFFFFEB 		bl	RZA_IO_RegWrite_16
 390              	.LVL20:
 391 00b8 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 392              		.cfi_endproc
 393              	.LFE0:
 395              		.section	.text.R_SCIFA_SetBaud,"ax",%progbits
 396              		.align	2
 397              		.global	R_SCIFA_SetBaud
 398              		.syntax unified
 399              		.arm
 400              		.fpu neon
 402              	R_SCIFA_SetBaud:
 403              	.LFB5:
 293:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         }
 294:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 295:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** }
 296:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
 297:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * End of Function find_divisor_value
 298:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
 299:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 300:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**************************************************************************************************
 301:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  Public function definitions
 302:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  **************************************************************************************************
 303:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 304:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** /**
 305:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @brief Sets the device baud rate within 1% of value desired.
 306:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 307:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * This function determines the best possible settings for the
 308:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * baud rate registers for the specified peripheral clock speed
 309:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * and baud rate. Note that this does not guarantee a low bit
 310:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * error rate, just the best possible one. The bit rate error is
 311:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * returned in .1% increments. If the hardware cannot support
 312:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * the specified combination, DEV_ERROR is returned.
 313:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 314:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * NOTE: The transmitter and receiver (TE and RE bits in SCR) must be disabled
 315:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *       prior to calling this function.
 316:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 317:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *       The application must pause for 1 bit time after the BRR register
 318:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *       is loaded before transmitting/receiving to allow time for the clock
 319:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *       to settle.
 320:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in]  channel: Channel number of SCIFA(0-4)
 321:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in]  desired_baud_rate: Baud rate; 19200, 57600, 115200, etc.
 322:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in]  clock_freq: Peripheral clock speed; e.g. 24000000 for 24MHz
 323:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[in]  mode: asynchronous or synchronous
 324:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @param[out] p_achieved_baud_rate - Pointer to achieved Baud rate
 325:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *
 326:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @retval  0 DRV_SUCCESS - If a Baud rate within 1% of the desired value was
 327:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  *                          achieved.
 328:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  * @retval -1 DRV_ERROR 
 329:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****  */
 330:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** int_t R_SCIFA_SetBaud (r_channel_t channel, uint32_t desired_baud_rate, uint32_t clock_freq, scifa_
 331:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** {
 404              		.loc 1 331 0
 405              		.cfi_startproc
 406              		@ args = 4, pretend = 0, frame = 8
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              	.LVL21:
 332:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* check arguments */
 333:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     if ((channel >= R_PRV_CFG_SCIF_LAST_CHANNEL) || (channel < 0))
 409              		.loc 1 333 0
 410 0000 70C0EFE6 		uxtb	ip, r0
 411 0004 04005CE3 		cmp	ip, #4
 412 0008 9400008A 		bhi	.L34
 331:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* check arguments */
 413              		.loc 1 331 0
 414 000c 30402DE9 		push	{r4, r5, lr}
 415              		.cfi_def_cfa_offset 12
 416              		.cfi_offset 4, -12
 417              		.cfi_offset 5, -8
 418              		.cfi_offset 14, -4
 419 0010 0CD04DE2 		sub	sp, sp, #12
 420              		.cfi_def_cfa_offset 24
 421 0014 0250A0E1 		mov	r5, r2
 422 0018 04108DE5 		str	r1, [sp, #4]
 423 001c 0040A0E1 		mov	r4, r0
 334:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {
 335:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         return (DRV_ERROR);
 336:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 337:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 338:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     find_divisor_value(channel, desired_baud_rate, clock_freq, mode);
 424              		.loc 1 338 0
 425 0020 FEFFFFEB 		bl	find_divisor_value
 426              	.LVL22:
 339:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 340:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* return if BRR will be > 255 or < 0 */
 341:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     if (gs_divisor_index >= gs_num_divisors)
 427              		.loc 1 341 0
 428 0024 003000E3 		movw	r3, #:lower16:.LANCHOR10
 429 0028 003040E3 		movt	r3, #:upper16:.LANCHOR10
 430 002c 003093E5 		ldr	r3, [r3]
 431 0030 002000E3 		movw	r2, #:lower16:.LANCHOR7
 432 0034 002040E3 		movt	r2, #:upper16:.LANCHOR7
 433 0038 002092E5 		ldr	r2, [r2]
 434 003c 020053E1 		cmp	r3, r2
 435 0040 8800002A 		bcs	.L35
 342:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {
 343:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         return (DRV_ERROR);                /* impossible desired_baud_rate requested; return error 
 344:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 345:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 346:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* cast to uint32_t for divisor */
 347:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_divisor = (uint32_t) gsp_baud_info[gs_divisor_index].divisor;
 436              		.loc 1 347 0
 437 0044 002000E3 		movw	r2, #:lower16:.LANCHOR5
 438 0048 002040E3 		movt	r2, #:upper16:.LANCHOR5
 439 004c 833083E0 		add	r3, r3, r3, lsl #1
 440 0050 8310A0E1 		lsl	r1, r3, #1
 441 0054 003092E5 		ldr	r3, [r2]
 442 0058 F11093E1 		ldrsh	r1, [r3, r1]
 443 005c 003000E3 		movw	r3, #:lower16:.LANCHOR1
 444 0060 003040E3 		movt	r3, #:upper16:.LANCHOR1
 445 0064 001083E5 		str	r1, [r3]
 348:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_brr = gs_ratio / gs_divisor;
 446              		.loc 1 348 0
 447 0068 003000E3 		movw	r3, #:lower16:.LANCHOR9
 448 006c 003040E3 		movt	r3, #:upper16:.LANCHOR9
 449 0070 000093E5 		ldr	r0, [r3]
 450 0074 FEFFFFEB 		bl	__aeabi_uidiv
 451              	.LVL23:
 452 0078 003000E3 		movw	r3, #:lower16:.LANCHOR0
 453 007c 003040E3 		movt	r3, #:upper16:.LANCHOR0
 454 0080 000083E5 		str	r0, [r3]
 349:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 350:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     if (0 == gs_brr)
 455              		.loc 1 350 0
 456 0084 000050E3 		cmp	r0, #0
 457 0088 7800000A 		beq	.L36
 351:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {
 352:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         return (DRV_ERROR);                /* illegal value; return error */
 353:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 354:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 355:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* enable BRR access */
 356:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     RZA_IO_RegWrite_8((volatile uint8_t *) &sp_scifa[channel]->SEMR.BYTE, (uint16_t) 0, SCIFA_SEMR_
 458              		.loc 1 356 0
 459 008c 003000E3 		movw	r3, #:lower16:.LANCHOR11
 460 0090 003040E3 		movt	r3, #:upper16:.LANCHOR11
 461 0094 040193E7 		ldr	r0, [r3, r4, lsl #2]
 462 0098 1030A0E3 		mov	r3, #16
 463 009c 0420A0E3 		mov	r2, #4
 464 00a0 0010A0E3 		mov	r1, #0
 465 00a4 140080E2 		add	r0, r0, #20
 466 00a8 FEFFFFEB 		bl	RZA_IO_RegWrite_8
 467              	.LVL24:
 357:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_brr = gs_ratio / (gs_divisor / 2);                                // divide by half the divi
 468              		.loc 1 357 0
 469 00ac 003000E3 		movw	r3, #:lower16:.LANCHOR1
 470 00b0 003040E3 		movt	r3, #:upper16:.LANCHOR1
 471 00b4 001093E5 		ldr	r1, [r3]
 472 00b8 003000E3 		movw	r3, #:lower16:.LANCHOR9
 473 00bc 003040E3 		movt	r3, #:upper16:.LANCHOR9
 474 00c0 A110A0E1 		lsr	r1, r1, #1
 475 00c4 000093E5 		ldr	r0, [r3]
 476 00c8 FEFFFFEB 		bl	__aeabi_uidiv
 477              	.LVL25:
 358:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 359:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* if odd, "round up" by ignoring -1; divide by 2 again for rest of divisor */
 360:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_brr = ((gs_brr & 0x01) ? (gs_brr / 2) : ((gs_brr / 2) - 1));
 478              		.loc 1 360 0
 479 00cc 010010E3 		tst	r0, #1
 480 00d0 4D00000A 		beq	.L26
 481              		.loc 1 360 0 is_stmt 0 discriminator 1
 482 00d4 A000A0E1 		lsr	r0, r0, #1
 483              	.L27:
 484              		.loc 1 360 0 discriminator 4
 485 00d8 003000E3 		movw	r3, #:lower16:.LANCHOR0
 486 00dc 003040E3 		movt	r3, #:upper16:.LANCHOR0
 487 00e0 000083E5 		str	r0, [r3]
 361:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 362:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     write_baud_rate(channel);            /* write BRR, ABCS0, BGDM and CKS */
 488              		.loc 1 362 0 is_stmt 1 discriminator 4
 489 00e4 0400A0E1 		mov	r0, r4
 490 00e8 FEFFFFEB 		bl	write_baud_rate
 491              	.LVL26:
 363:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 364:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     calc_brr_only_actual_baud_rate(desired_baud_rate, clock_freq);    /* calculate achieved Baud ra
 492              		.loc 1 364 0 discriminator 4
 493 00ec 0510A0E1 		mov	r1, r5
 494 00f0 04009DE5 		ldr	r0, [sp, #4]
 495 00f4 FEFFFFEB 		bl	calc_brr_only_actual_baud_rate
 496              	.LVL27:
 365:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 366:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* if error is less than 1.0 then use BRR without MDDR */
 367:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     if ((gs_abs_error <= 1.0) || (1 == gs_brr))
 497              		.loc 1 367 0 discriminator 4
 498 00f8 003000E3 		movw	r3, #:lower16:.LANCHOR3
 499 00fc 003040E3 		movt	r3, #:upper16:.LANCHOR3
 500 0100 007A93ED 		vldr.32	s14, [r3]
 501 0104 007AF7EE 		vmov.f32	s15, #1.0e+0
 502 0108 E77AB4EE 		vcmpe.f32	s14, s15
 503 010c 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 504 0110 4000009A 		bls	.L28
 505              		.loc 1 367 0 is_stmt 0 discriminator 1
 506 0114 003000E3 		movw	r3, #:lower16:.LANCHOR0
 507 0118 003040E3 		movt	r3, #:upper16:.LANCHOR0
 508 011c 003093E5 		ldr	r3, [r3]
 509 0120 010053E3 		cmp	r3, #1
 510 0124 3B00000A 		beq	.L28
 368:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {
 369:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         /* disable MDDR access */
 370:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         RZA_IO_RegWrite_8((volatile uint8_t *) &sp_scifa[channel]->SEMR.BYTE, (uint16_t) 0, SCIFA_S
 371:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 372:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         /* set the achieved Baud rate */
 373:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         *p_achieved_baud_rate = (uint32_t) gs_actual_baud_rate;
 374:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         return (DRV_SUCCESS);
 375:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 376:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 377:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* The MDDR can only reduce the Baud rate, so if the current BRR setting results in a Baud rate
 378:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****        then we need to reduce the BRR by one in order to increase the Baud rate so that it is great
 379:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     if (gs_actual_baud_rate < desired_baud_rate)
 511              		.loc 1 379 0 is_stmt 1
 512 0128 017ADDED 		vldr.32	s15, [sp, #4]	@ int
 513 012c 677AF8EE 		vcvt.f32.u32	s15, s15
 514 0130 002000E3 		movw	r2, #:lower16:.LANCHOR2
 515 0134 002040E3 		movt	r2, #:upper16:.LANCHOR2
 516 0138 007A92ED 		vldr.32	s14, [r2]
 517 013c C77AF4EE 		vcmpe.f32	s15, s14
 518 0140 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 519 0144 080000DA 		ble	.L30
 380:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     {
 381:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         /* if BRR is already 1, then it can't go any lower */
 382:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         if (1 == gs_brr)
 383:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         {
 384:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****             /* disable MDDR */
 385:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****             RZA_IO_RegWrite_8((volatile uint8_t *) &sp_scifa[channel]->SEMR.BYTE, (uint16_t) 0, SCI
 386:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****             return (DRV_ERROR);
 387:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         }
 388:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 389:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         /* reduce the BRR value by one */
 390:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         gs_brr--;
 520              		.loc 1 390 0
 521 0148 013043E2 		sub	r3, r3, #1
 522 014c 002000E3 		movw	r2, #:lower16:.LANCHOR0
 523 0150 002040E3 		movt	r2, #:upper16:.LANCHOR0
 524 0154 003082E5 		str	r3, [r2]
 391:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         sp_scifa[channel]->BRR_MDDR.BRR.BYTE = (uint8_t) gs_brr;
 525              		.loc 1 391 0
 526 0158 002000E3 		movw	r2, #:lower16:.LANCHOR11
 527 015c 002040E3 		movt	r2, #:upper16:.LANCHOR11
 528 0160 042192E7 		ldr	r2, [r2, r4, lsl #2]
 529 0164 7330EFE6 		uxtb	r3, r3
 530 0168 0230C2E5 		strb	r3, [r2, #2]
 531              	.L30:
 392:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 393:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 394:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* calculate MDDR value */
 395:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_float_mddr = ((float) desired_baud_rate * (float) gs_divisor * 256.0f * (float) (gs_brr + 1)
 532              		.loc 1 395 0
 533 016c 003000E3 		movw	r3, #:lower16:.LANCHOR1
 534 0170 003040E3 		movt	r3, #:upper16:.LANCHOR1
 535 0174 007A93ED 		vldr.32	s14, [r3]	@ int
 536 0178 477AB8EE 		vcvt.f32.u32	s14, s14
 537 017c 877A67EE 		vmul.f32	s15, s15, s14
 538 0180 3C7A9FED 		vldr.32	s14, .L42
 539 0184 877A27EE 		vmul.f32	s14, s15, s14
 540 0188 003000E3 		movw	r3, #:lower16:.LANCHOR0
 541 018c 003040E3 		movt	r3, #:upper16:.LANCHOR0
 542 0190 003093E5 		ldr	r3, [r3]
 543 0194 013083E2 		add	r3, r3, #1
 544 0198 903A07EE 		vmov	s15, r3	@ int
 545 019c 677AF8EE 		vcvt.f32.u32	s15, s15
 546 01a0 277A67EE 		vmul.f32	s15, s14, s15
 547 01a4 105A07EE 		vmov	s14, r5	@ int
 548 01a8 476AF8EE 		vcvt.f32.u32	s13, s14
 549 01ac A67A87EE 		vdiv.f32	s14, s15, s13
 396:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_float_mddr *= 2;
 550              		.loc 1 396 0
 551 01b0 077A37EE 		vadd.f32	s14, s14, s14
 397:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 398:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* cast float to uint32_t */
 399:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_int_mddr = (uint32_t) gs_float_mddr;
 552              		.loc 1 399 0
 553 01b4 C77AFCEE 		vcvt.u32.f32	s15, s14
 554 01b8 903A17EE 		vmov	r3, s15	@ int
 400:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     gs_int_mddr = (gs_int_mddr & 0x01) ? ((gs_int_mddr / 2) + 1) : (gs_int_mddr / 2);
 555              		.loc 1 400 0
 556 01bc 010013E3 		tst	r3, #1
 557 01c0 2400000A 		beq	.L32
 558              		.loc 1 400 0 is_stmt 0 discriminator 1
 559 01c4 A330A0E1 		lsr	r3, r3, #1
 560 01c8 013083E2 		add	r3, r3, #1
 561              	.L33:
 562              		.loc 1 400 0 discriminator 4
 563 01cc 002000E3 		movw	r2, #:lower16:.LANCHOR4
 564 01d0 002040E3 		movt	r2, #:upper16:.LANCHOR4
 565 01d4 003082E5 		str	r3, [r2]
 401:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 402:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     calculate_baud_rate_with_mddr(clock_freq);
 566              		.loc 1 402 0 is_stmt 1 discriminator 4
 567 01d8 0500A0E1 		mov	r0, r5
 568 01dc FEFFFFEB 		bl	calculate_baud_rate_with_mddr
 569              	.LVL28:
 403:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 404:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     write_mddr(channel);
 570              		.loc 1 404 0 discriminator 4
 571 01e0 0400A0E1 		mov	r0, r4
 572 01e4 FEFFFFEB 		bl	write_mddr
 573              	.LVL29:
 405:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 406:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     /* set the achieved Baud rate */
 407:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     *p_achieved_baud_rate = (uint32_t) gs_actual_baud_rate;
 574              		.loc 1 407 0 discriminator 4
 575 01e8 003000E3 		movw	r3, #:lower16:.LANCHOR2
 576 01ec 003040E3 		movt	r3, #:upper16:.LANCHOR2
 577 01f0 007AD3ED 		vldr.32	s15, [r3]
 578 01f4 E77AFCEE 		vcvt.u32.f32	s15, s15
 579 01f8 18309DE5 		ldr	r3, [sp, #24]
 580 01fc 007AC3ED 		vstr.32	s15, [r3]	@ int
 408:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 409:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     return (DRV_SUCCESS);
 581              		.loc 1 409 0 discriminator 4
 582 0200 0000A0E3 		mov	r0, #0
 583              	.L24:
 410:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** }
 584              		.loc 1 410 0
 585 0204 0CD08DE2 		add	sp, sp, #12
 586              		.cfi_remember_state
 587              		.cfi_def_cfa_offset 12
 588              		@ sp needed
 589 0208 3080BDE8 		pop	{r4, r5, pc}
 590              	.LVL30:
 591              	.L26:
 592              		.cfi_restore_state
 360:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 593              		.loc 1 360 0 discriminator 2
 594 020c A000A0E1 		lsr	r0, r0, #1
 595 0210 010040E2 		sub	r0, r0, #1
 596 0214 AFFFFFEA 		b	.L27
 597              	.L28:
 370:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 598              		.loc 1 370 0
 599 0218 003000E3 		movw	r3, #:lower16:.LANCHOR11
 600 021c 003040E3 		movt	r3, #:upper16:.LANCHOR11
 601 0220 040193E7 		ldr	r0, [r3, r4, lsl #2]
 602 0224 2030A0E3 		mov	r3, #32
 603 0228 0520A0E3 		mov	r2, #5
 604 022c 0010A0E3 		mov	r1, #0
 605 0230 140080E2 		add	r0, r0, #20
 606 0234 FEFFFFEB 		bl	RZA_IO_RegWrite_8
 607              	.LVL31:
 373:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****         return (DRV_SUCCESS);
 608              		.loc 1 373 0
 609 0238 003000E3 		movw	r3, #:lower16:.LANCHOR2
 610 023c 003040E3 		movt	r3, #:upper16:.LANCHOR2
 611 0240 007AD3ED 		vldr.32	s15, [r3]
 612 0244 E77AFCEE 		vcvt.u32.f32	s15, s15
 613 0248 18309DE5 		ldr	r3, [sp, #24]
 614 024c 007AC3ED 		vstr.32	s15, [r3]	@ int
 374:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 615              		.loc 1 374 0
 616 0250 0000A0E3 		mov	r0, #0
 617 0254 EAFFFFEA 		b	.L24
 618              	.L32:
 400:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c **** 
 619              		.loc 1 400 0 discriminator 2
 620 0258 A330A0E1 		lsr	r3, r3, #1
 621 025c DAFFFFEA 		b	.L33
 622              	.LVL32:
 623              	.L34:
 624              		.cfi_def_cfa_offset 0
 625              		.cfi_restore 4
 626              		.cfi_restore 5
 627              		.cfi_restore 14
 335:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 628              		.loc 1 335 0
 629 0260 0000E0E3 		mvn	r0, #0
 630              	.LVL33:
 631 0264 1EFF2FE1 		bx	lr
 632              	.LVL34:
 633              	.L35:
 634              		.cfi_def_cfa_offset 24
 635              		.cfi_offset 4, -12
 636              		.cfi_offset 5, -8
 637              		.cfi_offset 14, -4
 343:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 638              		.loc 1 343 0
 639 0268 0000E0E3 		mvn	r0, #0
 640 026c E4FFFFEA 		b	.L24
 641              	.L36:
 352:../generate/sc_drivers/r_scifa/src/lld/r_rza2_scifa_lld_baud.c ****     }
 642              		.loc 1 352 0
 643 0270 0000E0E3 		mvn	r0, #0
 644 0274 E2FFFFEA 		b	.L24
 645              	.L43:
 646              		.align	2
 647              	.L42:
 648 0278 00008043 		.word	1132462080
 649              		.cfi_endproc
 650              	.LFE5:
 652              		.section	.bss.gs_abs_error,"aw",%nobits
 653              		.align	2
 654              		.set	.LANCHOR3,. + 0
 657              	gs_abs_error:
 658 0000 00000000 		.space	4
 659              		.section	.bss.gs_actual_baud_rate,"aw",%nobits
 660              		.align	2
 661              		.set	.LANCHOR2,. + 0
 664              	gs_actual_baud_rate:
 665 0000 00000000 		.space	4
 666              		.section	.bss.gs_brr,"aw",%nobits
 667              		.align	2
 668              		.set	.LANCHOR0,. + 0
 671              	gs_brr:
 672 0000 00000000 		.space	4
 673              		.section	.bss.gs_divisor,"aw",%nobits
 674              		.align	2
 675              		.set	.LANCHOR1,. + 0
 678              	gs_divisor:
 679 0000 00000000 		.space	4
 680              		.section	.bss.gs_divisor_index,"aw",%nobits
 681              		.align	2
 682              		.set	.LANCHOR10,. + 0
 685              	gs_divisor_index:
 686 0000 00000000 		.space	4
 687              		.section	.bss.gs_int_mddr,"aw",%nobits
 688              		.align	2
 689              		.set	.LANCHOR4,. + 0
 692              	gs_int_mddr:
 693 0000 00000000 		.space	4
 694              		.section	.bss.gs_num_divisors,"aw",%nobits
 695              		.align	2
 696              		.set	.LANCHOR7,. + 0
 699              	gs_num_divisors:
 700 0000 00000000 		.space	4
 701              		.section	.bss.gs_ratio,"aw",%nobits
 702              		.align	2
 703              		.set	.LANCHOR9,. + 0
 706              	gs_ratio:
 707 0000 00000000 		.space	4
 708              		.section	.bss.gsp_baud_info,"aw",%nobits
 709              		.align	2
 710              		.set	.LANCHOR5,. + 0
 713              	gsp_baud_info:
 714 0000 00000000 		.space	4
 715              		.section	.rodata.gs_scifa_async_baud,"a",%progbits
 716              		.align	2
 717              		.set	.LANCHOR6,. + 0
 720              	gs_scifa_async_baud:
 721 0000 0800     		.short	8
 722 0002 01       		.byte	1
 723 0003 01       		.byte	1
 724 0004 00       		.byte	0
 725 0005 00       		.space	1
 726 0006 1000     		.short	16
 727 0008 00       		.byte	0
 728 0009 01       		.byte	1
 729 000a 00       		.byte	0
 730 000b 00       		.space	1
 731 000c 2000     		.short	32
 732 000e 00       		.byte	0
 733 000f 00       		.byte	0
 734 0010 00       		.byte	0
 735 0011 00       		.space	1
 736 0012 4000     		.short	64
 737 0014 00       		.byte	0
 738 0015 01       		.byte	1
 739 0016 01       		.byte	1
 740 0017 00       		.space	1
 741 0018 8000     		.short	128
 742 001a 00       		.byte	0
 743 001b 00       		.byte	0
 744 001c 01       		.byte	1
 745 001d 00       		.space	1
 746 001e 0001     		.short	256
 747 0020 00       		.byte	0
 748 0021 01       		.byte	1
 749 0022 02       		.byte	2
 750 0023 00       		.space	1
 751 0024 0002     		.short	512
 752 0026 00       		.byte	0
 753 0027 00       		.byte	0
 754 0028 02       		.byte	2
 755 0029 00       		.space	1
 756 002a 0004     		.short	1024
 757 002c 00       		.byte	0
 758 002d 01       		.byte	1
 759 002e 03       		.byte	3
 760 002f 00       		.space	1
 761 0030 0008     		.short	2048
 762 0032 00       		.byte	0
 763 0033 00       		.byte	0
 764 0034 03       		.byte	3
 765 0035 00       		.space	1
 766              		.section	.rodata.gs_scifa_sync_baud,"a",%progbits
 767              		.align	2
 768              		.set	.LANCHOR8,. + 0
 771              	gs_scifa_sync_baud:
 772 0000 0400     		.short	4
 773 0002 00       		.byte	0
 774 0003 00       		.byte	0
 775 0004 00       		.byte	0
 776 0005 00       		.space	1
 777 0006 1000     		.short	16
 778 0008 00       		.byte	0
 779 0009 00       		.byte	0
 780 000a 01       		.byte	1
 781 000b 00       		.space	1
 782 000c 4000     		.short	64
 783 000e 00       		.byte	0
 784 000f 00       		.byte	0
 785 0010 02       		.byte	2
 786 0011 00       		.space	1
 787 0012 0001     		.short	256
 788 0014 00       		.byte	0
 789 0015 00       		.byte	0
 790 0016 03       		.byte	3
 791 0017 00       		.space	1
 792              		.section	.rodata.sp_scifa,"a",%progbits
 793              		.align	2
 794              		.set	.LANCHOR11,. + 0
 797              	sp_scifa:
 798 0000 007000E8 		.word	-402624512
 799 0004 007800E8 		.word	-402622464
 800 0008 008000E8 		.word	-402620416
 801 000c 008800E8 		.word	-402618368
 802 0010 009000E8 		.word	-402616320
 803              		.text
 804              	.Letext0:
 805              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 806              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 807              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 808              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 809              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 810              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 811              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 812              		.file 9 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/generate/system/inc/
 813              		.file 10 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/generate/system/iod
 814              		.file 11 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/generate/sc_drivers
 815              		.file 12 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/generate/drivers/r_
 816              		.file 13 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/generate/system/inc
 817              		.file 14 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/generate/system/inc
DEFINED SYMBOLS
                            *ABS*:00000000 r_rza2_scifa_lld_baud.c
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:17     .text.calc_brr_only_actual_baud_rate:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:22     .text.calc_brr_only_actual_baud_rate:00000000 calc_brr_only_actual_baud_rate
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:668    .bss.gs_brr:00000000 .LANCHOR0
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:675    .bss.gs_divisor:00000000 .LANCHOR1
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:661    .bss.gs_actual_baud_rate:00000000 .LANCHOR2
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:654    .bss.gs_abs_error:00000000 .LANCHOR3
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:78     .text.calc_brr_only_actual_baud_rate:0000008c $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:83     .text.calculate_baud_rate_with_mddr:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:88     .text.calculate_baud_rate_with_mddr:00000000 calculate_baud_rate_with_mddr
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:689    .bss.gs_int_mddr:00000000 .LANCHOR4
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:130    .text.calculate_baud_rate_with_mddr:00000070 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:137    .text.find_divisor_value:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:142    .text.find_divisor_value:00000000 find_divisor_value
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:710    .bss.gsp_baud_info:00000000 .LANCHOR5
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:717    .rodata.gs_scifa_async_baud:00000000 .LANCHOR6
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:696    .bss.gs_num_divisors:00000000 .LANCHOR7
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:703    .bss.gs_ratio:00000000 .LANCHOR9
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:682    .bss.gs_divisor_index:00000000 .LANCHOR10
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:768    .rodata.gs_scifa_sync_baud:00000000 .LANCHOR8
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:266    .text.write_mddr:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:271    .text.write_mddr:00000000 write_mddr
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:794    .rodata.sp_scifa:00000000 .LANCHOR11
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:317    .text.write_baud_rate:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:322    .text.write_baud_rate:00000000 write_baud_rate
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:396    .text.R_SCIFA_SetBaud:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:402    .text.R_SCIFA_SetBaud:00000000 R_SCIFA_SetBaud
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:648    .text.R_SCIFA_SetBaud:00000278 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:653    .bss.gs_abs_error:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:657    .bss.gs_abs_error:00000000 gs_abs_error
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:660    .bss.gs_actual_baud_rate:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:664    .bss.gs_actual_baud_rate:00000000 gs_actual_baud_rate
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:667    .bss.gs_brr:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:671    .bss.gs_brr:00000000 gs_brr
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:674    .bss.gs_divisor:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:678    .bss.gs_divisor:00000000 gs_divisor
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:681    .bss.gs_divisor_index:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:685    .bss.gs_divisor_index:00000000 gs_divisor_index
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:688    .bss.gs_int_mddr:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:692    .bss.gs_int_mddr:00000000 gs_int_mddr
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:695    .bss.gs_num_divisors:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:699    .bss.gs_num_divisors:00000000 gs_num_divisors
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:702    .bss.gs_ratio:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:706    .bss.gs_ratio:00000000 gs_ratio
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:709    .bss.gsp_baud_info:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:713    .bss.gsp_baud_info:00000000 gsp_baud_info
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:716    .rodata.gs_scifa_async_baud:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:720    .rodata.gs_scifa_async_baud:00000000 gs_scifa_async_baud
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:767    .rodata.gs_scifa_sync_baud:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:771    .rodata.gs_scifa_sync_baud:00000000 gs_scifa_sync_baud
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:793    .rodata.sp_scifa:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\cczfRVsf.s:797    .rodata.sp_scifa:00000000 sp_scifa
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.14fc17be114e5a2cba0959c511ea2aaf
                           .group:00000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.newlib.h.8.5f2124c7e712be65f83b91ff86a0b1c1
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.cdefs.h.47.e658329a094974ebad41b40c60502de7
                           .group:00000000 wm4.math.h.13.adb102f7bd7860b1f241e149d6914a1e
                           .group:00000000 wm4.r_typedefs.h.38.e90d9de5300d9ae020e5db8c5af88b3e
                           .group:00000000 wm4.adc_iodefine.h.29.14c6f50dce37432a7d004e4b1ce33da7
                           .group:00000000 wm4.bsc_iodefine.h.29.9281d1f3639266933964d6d0c2d42c4f
                           .group:00000000 wm4.ceu_iodefine.h.29.2a669d0b46fdde030a50db9e3c307fbf
                           .group:00000000 wm4.cpg_iodefine.h.29.d6fdc9cb4798723afd88b251d64c2ce2
                           .group:00000000 wm4.csi2link_iodefine.h.29.221c4531636a409f24d307b16341ada8
                           .group:00000000 wm4.dmac_iodefine.h.29.578fccc2cc1da886ec95a029bf874f01
                           .group:00000000 wm4.drpk_iodefine.h.29.580eb8588a2b2d43d2726fbe791e513f
                           .group:00000000 wm4.drw_iodefine.h.29.df30f4a4a34a79f6a86c4df91353dffe
                           .group:00000000 wm4.edmac_iodefine.h.29.33e8759349004a722f42f5429c1353f6
                           .group:00000000 wm4.eptpc_iodefine.h.29.74d8f9fab0f5549b56097fb9e937dde8
                           .group:00000000 wm4.etherc_iodefine.h.29.14602750383a574f1c21f994ad33a366
                           .group:00000000 wm4.gpio_iodefine.h.29.3d0b021c56839cee4ae5149903684e4b
                           .group:00000000 wm4.gpt_iodefine.h.29.557ead75d7b0585b898d3898b64c7f87
                           .group:00000000 wm4.hyper_iodefine.h.29.000caadbb74d881e97db55b39b432154
                           .group:00000000 wm4.imr_iodefine.h.29.77c022f017e711c4d51cc0145db1dad3
                           .group:00000000 wm4.intc_iodefine.h.29.b68f5799a35a7495d63b4cd458e1ba57
                           .group:00000000 wm4.irda_iodefine.h.29.37e67bd2005173d68a74d1cc937d8444
                           .group:00000000 wm4.jcu_iodefine.h.29.3aca452908962e7a7ccf26164751feda
                           .group:00000000 wm4.lvds_iodefine.h.29.c11cbe1900e5209c8dcc76c2336c16bc
                           .group:00000000 wm4.mtu_iodefine.h.29.5498fb974bb53caf05aa143c2deec781
                           .group:00000000 wm4.nandc_iodefine.h.29.e0b343306750f017ee86e169ad98efe9
                           .group:00000000 wm4.octa_iodefine.h.29.4cb0d62e4b9633e173858000dc1c626c
                           .group:00000000 wm4.ostm_iodefine.h.29.6914f7e330a1cf0008b34219adcdfed4
                           .group:00000000 wm4.pl_iodefine.h.29.abbb6d725aed990aa8343242bfe31416
                           .group:00000000 wm4.pmg_iodefine.h.29.8bcfbc4771a6f9b7dd4d6f504427219e
                           .group:00000000 wm4.poeg_iodefine.h.29.0d8e258d10986260cbc70cfb8c0ef273
                           .group:00000000 wm4.poe_iodefine.h.29.fe74e55e7b6b4afbe3596c74ba035e98
                           .group:00000000 wm4.prr_iodefine.h.29.c1f15576f7a27b9c83aa3b40f5b2f988
                           .group:00000000 wm4.ptpedmac_iodefine.h.29.cd24a93374ce35cebc41e26889d619ef
                           .group:00000000 wm4.rcanfd_iodefine.h.29.532dd48b82fcb61d63538aba4b6f1289
                           .group:00000000 wm4.rcan_iodefine.h.29.a47a89db1b35c12b54af48fa1956acba
                           .group:00000000 wm4.riic_iodefine.h.29.f96943d49800d297612c4af3bba5c943
                           .group:00000000 wm4.rspi_iodefine.h.29.7efa041fe34a7d27db66a7b337879dfe
                           .group:00000000 wm4.rtc_iodefine.h.29.6dc76be5ca3df69cecb5a81d06cc46b5
                           .group:00000000 wm4.scifa_iodefine.h.29.b04ccd664d71baaf31c75761c45b9c4d
                           .group:00000000 wm4.scim_iodefine.h.29.87d0760abf94446b00d826c797bf0ff2
                           .group:00000000 wm4.sdmmc_iodefine.h.29.e67e9815445e8057a3262d1566bea0db
                           .group:00000000 wm4.spdif_iodefine.h.29.59f5d70150fa200a4d8ee50be1ee34c8
                           .group:00000000 wm4.spibsc_iodefine.h.29.f4930f8b8da1140200204513a363c76f
                           .group:00000000 wm4.sprite_iodefine.h.29.55796d1fa083a2457fea4ece974a192e
                           .group:00000000 wm4.ssif_iodefine.h.29.054ec6d95f487f631f16aee39c85c47a
                           .group:00000000 wm4.usb_iodefine.h.29.6dc44ea388ba227e8fdcfb33c315887b
                           .group:00000000 wm4.vdc_iodefine.h.29.db282ded1f052d8567fbbd3b61ce8f7a
                           .group:00000000 wm4.vin_iodefine.h.29.9b392e5601347d53e64be3272934e170
                           .group:00000000 wm4.wdt_iodefine.h.29.ed07bb44b797072f8c28b41c64fdca30
                           .group:00000000 wm4.iobitmask.h.29.773e8f8428b0c21e1206a8c47a6d3927
                           .group:00000000 wm4.adc_iobitmask.h.29.48ba2821c8a4fc20022447ad9316d399
                           .group:00000000 wm4.bsc_iobitmask.h.29.115d15c4ad4b48e00598dcd62d33c637
                           .group:00000000 wm4.ceu_iobitmask.h.29.413b5b68bb3c2148786493166a57173e
                           .group:00000000 wm4.cpg_iobitmask.h.29.128911f0454a5339c74031b8d73e8fed
                           .group:00000000 wm4.csi2link_iobitmask.h.29.701c130cb17627664fe7c147084057cf
                           .group:00000000 wm4.dmac_iobitmask.h.29.98850e876107975c53dc0bb8ebb53eb5
                           .group:00000000 wm4.drpk_iobitmask.h.29.167e7cf6b1feb4d38b8903a46d8c35ac
                           .group:00000000 wm4.drw_iobitmask.h.29.71d46f2244f6e7ae6117fe6c41c5567d
                           .group:00000000 wm4.edmac_iobitmask.h.29.4e406d859155ba914663e1cf61cad89a
                           .group:00000000 wm4.eptpc_iobitmask.h.29.64bcd0a67db3a886572992ae6da8898c
                           .group:00000000 wm4.etherc_iobitmask.h.29.07b13cb10c426023658e5c51f952b6de
                           .group:00000000 wm4.gpio_iobitmask.h.29.ea8c1464682eb61f2d0763b97ed530f9
                           .group:00000000 wm4.gpt_iobitmask.h.29.94173800a704c5ba32e348ba97cd23cf
                           .group:00000000 wm4.hyper_iobitmask.h.29.f09febbc7b835674abe34ae75f3c700d
                           .group:00000000 wm4.imr2_iobitmask.h.29.fff702c4c9409266054e806327fa236b
                           .group:00000000 wm4.intc_iobitmask.h.29.6d3be2e47bf3d7eb7e91eeddcab863af
                           .group:00000000 wm4.irda_iobitmask.h.29.6f43dde454e599a1d4a8be2978ac9459
                           .group:00000000 wm4.jcu_iobitmask.h.29.9fd48851a81ff31733aa19b29e4846ad
                           .group:00000000 wm4.lvds_iobitmask.h.29.4a6f69c8911426fa05f0b05eab5f5e15
                           .group:00000000 wm4.mtu_iobitmask.h.29.0dfead439d92d73e6bac91e937399f90
                           .group:00000000 wm4.nandc_iobitmask.h.29.26dc88335e3fd43a64a25f5ba82d9db4
                           .group:00000000 wm4.octa_iobitmask.h.29.75dc3e3c70ac86c7551744de3991f583
                           .group:00000000 wm4.ostm_iobitmask.h.29.38ee9f4e1711e17bd3f38545ba631cde
                           .group:00000000 wm4.pl310_iobitmask.h.29.c1ef5625c0a9d67f24e89fe2fd7e4886
                           .group:00000000 wm4.pmg_iobitmask.h.29.d20cb8352080a58cf6cbf526935d968e
                           .group:00000000 wm4.poe3_iobitmask.h.29.3a3444cc2dbf606e2370573e16d57254
                           .group:00000000 wm4.poeg_iobitmask.h.29.5601eb8cf1161926d683c0720340f85d
                           .group:00000000 wm4.prr_iobitmask.h.29.52f8479a52e2236c122b5956e4bdbfce
                           .group:00000000 wm4.ptpedmac_iobitmask.h.29.494dcb2240ebba7fa20d0c2ab02007f7
                           .group:00000000 wm4.rcanfd_iobitmask.h.29.d172f89cbc4f253e32a4e10346bdc9f6
                           .group:00000000 wm4.rcan_iobitmask.h.29.c6f8b9b62e8fdc007f8b5f40c1f7e95d
                           .group:00000000 wm4.riic_iobitmask.h.29.faa52a36e584704b50a2c22ab62c84de
                           .group:00000000 wm4.rspi_iobitmask.h.29.2e257f44186c83ca40dbb0db2548623b
                           .group:00000000 wm4.rtc_iobitmask.h.29.2c82d3237997f1de7d2ac9d93855f3da
                           .group:00000000 wm4.scifa_iobitmask.h.29.c7af830569e0d6a26f3d66e3adc293d7
                           .group:00000000 wm4.scim_iobitmask.h.29.3b5e9d8b03a11c94acd93de96d2037f6
                           .group:00000000 wm4.sdmmc_iobitmask.h.29.21d47a25c0df1ed3d24cd6232ec3b4e7
                           .group:00000000 wm4.spdif_iobitmask.h.29.c16f83f628828ab24aa2b72615b93e69
                           .group:00000000 wm4.spibsc_iobitmask.h.29.8ade4a581f57cd5b82569a69eb5f0d67
                           .group:00000000 wm4.sprite_iobitmask.h.29.82888597faf7ebb3bc86b5f1018a2253
                           .group:00000000 wm4.ssif_iobitmask.h.29.482529b431f1ad627a02168620c61eee
                           .group:00000000 wm4.usb_iobitmask.h.29.aae4dfd463dfdd120bf5855c9dc97483
                           .group:00000000 wm4.vdc6_iobitmask.h.29.3ce0a3f9d2209ce71e4fec48b4ecb79a
                           .group:00000000 wm4.vin_iobitmask.h.29.576a1d6e4b2cf6cbd353044865e437f2
                           .group:00000000 wm4.wdt_iobitmask.h.29.c612db09eac33fb3da8d8aaee67287a9
                           .group:00000000 wm4.rza_io_regrw.h.33.07c1ee176b41ade23637426c80e4b86a
                           .group:00000000 wm4.driver.h.34.180df73e0731406f5e50150641059ede
                           .group:00000000 wm4.r_rza2_scifa_lld_api.h.40.f15aca924d8f4510909a605ba9e2cfc9
                           .group:00000000 wm4.r_intc_lld_rza2m.h.35.148dee33e6a963828fdce2545668b517
                           .group:00000000 wm4.r_rza2_scifa_lld.h.43.012a3fef11a37869f92df11b17f0b8cf
                           .group:00000000 wm4.r_rza2_scifa_lld_cfg.h.36.61e814bf2acbefb3a77603b0f9c69f70

UNDEFINED SYMBOLS
__aeabi_uidiv
RZA_IO_RegWrite_8
RZA_IO_RegWrite_16
