
;; Function const TfLiteRegistration* tflite::MicroOpResolver<tOpCount>::FindOp(tflite::BuiltinOperator, int) const [with unsigned int tOpCount = 7u] (_ZNK6tflite15MicroOpResolverILj7EE6FindOpENS_15BuiltinOperatorEi, funcdef_no=10355, decl_uid=167466, cgraph_uid=7271, symbol_order=8102)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:38
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:38:64: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:38:64: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:38:64: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:38:64: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:35:29: note: vectorized 0 loops in function.
const TfLiteRegistration* tflite::MicroOpResolver<tOpCount>::FindOp(tflite::BuiltinOperator, int) const [with unsigned int tOpCount = 7u] (const struct MicroOpResolver * const this, BuiltinOperator op, int version)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  sizetype _1;
  const struct TfLiteRegistration * _2;
  sizetype _5;
  long int _7;
  int _11;
  unsigned int _14;
  long int _19;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0
  _14 = this_4(D)->registrations_len_;
  if (_14 == 0)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:
  _19 = (long int) op_8(D);

  <bb 4>:
  # i_15 = PHI <0(3), i_10(8)>
  # DEBUG i => i_15
  # DEBUG D#13 => i_15 * 32
  # DEBUG D#12 => D#13 + 4
  # DEBUG registration => this_4(D) + D#12
  _7 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_15].builtin_code;
  if (_7 == _19)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  _11 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_15].version;
  if (_11 == version_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # i_21 = PHI <i_15(5)>
  _5 = i_21 * 32;
  _1 = _5 + 4;
  registration_6 = this_4(D) + _1;
  goto <bb 9>;

  <bb 7>:
  i_10 = i_15 + 1;
  # DEBUG i => i_10
  # DEBUG i => i_10
  if (i_10 >= _14)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 4>;

  <bb 9>:
  # _2 = PHI <registration_6(6), 0B(7), 0B(2)>
  return _2;

}



;; Function const TfLiteRegistration* tflite::MicroOpResolver<tOpCount>::FindOp(const char*, int) const [with unsigned int tOpCount = 7u] (_ZNK6tflite15MicroOpResolverILj7EE6FindOpEPKci, funcdef_no=10356, decl_uid=167470, cgraph_uid=7272, symbol_order=8103)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:49
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:49:64: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:49:64: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:49:64: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:49:64: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:47:29: note: vectorized 0 loops in function.
const TfLiteRegistration* tflite::MicroOpResolver<tOpCount>::FindOp(const char*, int) const [with unsigned int tOpCount = 7u] (const struct MicroOpResolver * const this, const char * op, int version)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  sizetype _1;
  const struct TfLiteRegistration * _2;
  sizetype _5;
  long int _7;
  const char * _9;
  int _11;
  int _12;
  unsigned int _15;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0
  _15 = this_4(D)->registrations_len_;
  if (_15 == 0)
    goto <bb 10>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # i_16 = PHI <0(3), i_8(9)>
  # DEBUG i => i_16
  # DEBUG D#15 => i_16 * 32
  # DEBUG D#14 => D#15 + 4
  # DEBUG registration => this_4(D) + D#14
  _7 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_16].builtin_code;
  if (_7 == 32)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  _9 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_16].custom_name;
  _11 = strcmp (_9, op_10(D));
  if (_11 == 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  _12 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_16].version;
  if (_12 == version_13(D))
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # i_23 = PHI <i_16(6)>
  _5 = i_23 * 32;
  _1 = _5 + 4;
  registration_6 = this_4(D) + _1;
  goto <bb 10>;

  <bb 8>:
  i_8 = i_16 + 1;
  # DEBUG i => i_8
  # DEBUG i => i_8
  if (i_8 >= _15)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # _2 = PHI <registration_6(7), 0B(8), 0B(2)>
  return _2;

}



;; Function void tfl_ptquant_dnn_setupPre() (_Z24tfl_ptquant_dnn_setupPrev, funcdef_no=6665, decl_uid=8982, cgraph_uid=3593, symbol_order=3642)

../src/neural_networks/tensorflow_lite/TF_lite_post_training_quant/tensorflowlite_ptquant_dnn_compute.cc:52:6: note: vectorized 0 loops in function.
void tfl_ptquant_dnn_setupPre() ()
{
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  static struct MicroInterpreter static_interpreter_ptquant;
  static struct MicroOpResolver micro_op_resolver_ptquant;
  static struct MicroErrorReporter micro_error_reporter_ptquant = {.D.162759={._vptr.ErrorReporter=&MEM[(void *)&_ZTVN6tflite18MicroErrorReporterE + 8B]}};
  unsigned char _7;
  int _9;
  unsigned char _10;
  unsigned char _11;
  sizetype _15;
  long int _17;
  const uint8_t[1] * _18;
  unsigned char _22;
  int _24;
  struct TfLiteRegistration * _28;
  struct __FILE * _29;
  struct TfLiteRegistration * _31;
  struct TfLiteRegistration * _34;
  unsigned int _35;
  struct TfLiteRegistration * _37;
  unsigned int _38;
  struct TfLiteRegistration * _40;
  struct TfLiteRegistration * _43;
  struct TfLiteRegistration * _46;
  unsigned char _49;
  int _51;
  const struct Model * model_ptquant.3_52;
  struct ErrorReporter * error_reporter_ptquant.4_53;
  struct ErrorReporter * error_reporter_ptquant.4_58;
  struct MicroInterpreter * interpreter_ptquant.9_60;
  TfLiteStatus _62;
  struct ErrorReporter * error_reporter_ptquant.4_63;
  struct ErrorReporter * error_reporter_ptquant.4_65;
  struct MicroInterpreter * interpreter_ptquant.9_67;
  struct TfLiteTensor * _69;
  sizetype _71;
  const uint8_t * _72;
  short unsigned int _73;
  int _74;
  short unsigned int _75;
  sizetype _77;
  const void * _78;
  long unsigned int _79;
  long unsigned int _81;
  struct Model * _82;
  unsigned char _83;
  struct _reent * _impure_ptr.13_88;
  struct __FILE * _89;
  struct _reent * _impure_ptr.13_90;
  struct __FILE * _91;
  struct _reent * _impure_ptr.13_98;
  struct _reent * _impure_ptr.13_102;
  struct __FILE * _103;
  struct _reent * _impure_ptr.13_104;
  struct __FILE * _105;
  struct _reent * _impure_ptr.13_116;
  struct __FILE * _117;
  struct _reent * _impure_ptr.13_118;
  struct __FILE * _119;
  struct __FILE * _126;
  struct _reent * _impure_ptr.13_130;
  struct __FILE * _131;
  struct _reent * _impure_ptr.13_132;
  struct __FILE * _133;
  struct _reent * _impure_ptr.13_140;
  long unsigned int iftmp.11_142;
  struct _reent * _impure_ptr.13_144;
  struct __FILE * _145;
  struct _reent * _impure_ptr.13_146;
  struct __FILE * _147;
  unsigned int _154;
  struct _reent * _impure_ptr.13_158;
  struct __FILE * _159;
  struct _reent * _impure_ptr.13_160;
  struct __FILE * _161;
  struct _reent * _impure_ptr.13_172;
  struct __FILE * _173;
  struct _reent * _impure_ptr.13_174;
  struct __FILE * _175;
  unsigned int _258;
  struct _reent * _impure_ptr.13_259;
  struct __FILE * _260;
  struct _reent * _impure_ptr.13_262;
  struct __FILE * _263;
  unsigned int _265;
  unsigned int _266;
  unsigned int _274;
  struct _reent * _impure_ptr.13_275;
  struct __FILE * _276;
  struct _reent * _impure_ptr.13_278;
  struct __FILE * _279;
  unsigned int _281;
  unsigned int _282;
  unsigned int _290;
  struct _reent * _impure_ptr.13_291;
  struct __FILE * _292;
  struct _reent * _impure_ptr.13_294;
  struct __FILE * _295;
  unsigned int _297;
  unsigned int _298;
  unsigned int _306;
  struct _reent * _impure_ptr.13_307;
  struct __FILE * _308;
  struct _reent * _impure_ptr.13_310;
  struct __FILE * _311;
  unsigned int _313;
  unsigned int _314;
  unsigned int _322;
  struct _reent * _impure_ptr.13_323;
  struct __FILE * _324;
  struct _reent * _impure_ptr.13_326;
  struct __FILE * _327;
  unsigned int _329;
  unsigned int _330;
  unsigned int _338;
  struct _reent * _impure_ptr.13_339;
  struct __FILE * _340;
  struct _reent * _impure_ptr.13_342;
  struct __FILE * _343;
  unsigned int _345;
  unsigned int _346;

  <bb 2>:
  _7 = __atomic_load_1 (&_ZGVZ24tfl_ptquant_dnn_setupPrevE28micro_error_reporter_ptquant, 2);
  _10 = _7 & 1;
  if (_10 == 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 6>;

  <bb 4>:
  _9 = __cxa_guard_acquire (&_ZGVZ24tfl_ptquant_dnn_setupPrevE28micro_error_reporter_ptquant);
  if (_9 != 0)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 5>:
  __cxa_guard_release (&_ZGVZ24tfl_ptquant_dnn_setupPrevE28micro_error_reporter_ptquant);
  __aeabi_atexit (&micro_error_reporter_ptquant, __comp_dtor , &__dso_handle);

  <bb 6>:
  error_reporter_ptquant = &micro_error_reporter_ptquant.D.162759;
  # DEBUG buf => &g_number_plate_CNN_quant_data
  # DEBUG buf => &g_number_plate_CNN_quant_data
  # DEBUG buf => &g_number_plate_CNN_quant_data
  _81 = MEM[(uoffset_t *)&g_number_plate_CNN_quant_data];
  # DEBUG t => _81
  # DEBUG t => NULL
  _82 = &g_number_plate_CNN_quant_data + _81;
  # DEBUG buf => NULL
  # DEBUG buf => NULL
  # DEBUG buf => NULL
  model_ptquant = _82;
  # DEBUG this => _82
  # DEBUG D#5 => &MEM[(const struct Model *)_82].D.116578
  # DEBUG this => D#5
  # DEBUG field => 4
  # DEBUG defaultval => 0
  # DEBUG this => D#5
  # DEBUG field => 4
  # DEBUG this => D#5
  _18 = &MEM[(const struct Table *)_82].data_;
  # DEBUG p => _18
  _17 = MEM[(const long int *)_82];
  # DEBUG t => _17
  # DEBUG t => NULL
  # DEBUG p => NULL
  _15 = (sizetype) _17;
  _71 = -_15;
  _72 = _18 + _71;
  # DEBUG this => NULL
  # DEBUG vtable => _72
  # DEBUG p => _72
  _73 = MEM[(const short unsigned int *)_72];
  # DEBUG t => _73
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _73
  _74 = (int) _73;
  if (_74 > 4)
    goto <bb 7>;
  else
    goto <bb 9>;

  <bb 7>:
  # DEBUG p => _72 + 4
  _75 = MEM[(const short unsigned int *)_72 + 4B];
  # DEBUG t => _75
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _75
  if (_75 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _77 = (sizetype) _75;
  _78 = _18 + _77;
  # DEBUG p => _78
  _79 = MEM[(const long unsigned int *)_78];
  # DEBUG t => _79
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  if (_79 != 3)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # iftmp.11_142 = PHI <_79(8), 0(7), 0(6)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  # DEBUG this => _82
  # DEBUG D#5 => &MEM[(const struct Model *)_82].D.116578
  # DEBUG this => D#5
  # DEBUG field => 4
  # DEBUG defaultval => 0
  # DEBUG this => D#5
  # DEBUG field => 4
  # DEBUG this => D#5
  # DEBUG p => _18
  # DEBUG t => _17
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG vtable => _72
  # DEBUG p => _72
  # DEBUG t => _73
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _73
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG defaultval => NULL
  # DEBUG this => NULL
  tflite::ErrorReporter::Report (&micro_error_reporter_ptquant.D.162759, "Model provided is schema version %d not equal to supported version %d.", iftmp.11_142, 3);
  goto <bb 43>;

  <bb 10>:
  tflite::ErrorReporter::Report (&micro_error_reporter_ptquant.D.162759, "   quantized model loaded without error.");
  _22 = __atomic_load_1 (&_ZGVZ24tfl_ptquant_dnn_setupPrevE25micro_op_resolver_ptquant, 2);
  _11 = _22 & 1;
  if (_11 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 14>;

  <bb 12>:
  _24 = __cxa_guard_acquire (&_ZGVZ24tfl_ptquant_dnn_setupPrevE25micro_op_resolver_ptquant);
  if (_24 != 0)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 13>:
  # DEBUG this => &micro_op_resolver_ptquant
  # DEBUG D#3 => &micro_op_resolver_ptquant.D.167502
  # DEBUG this => D#3
  # DEBUG this => NULL
  micro_op_resolver_ptquant.D.167502._vptr.OpResolver = &MEM[(void *)&_ZTVN6tflite15MicroOpResolverILj7EEE + 8B];
  micro_op_resolver_ptquant.registrations_len_ = 0;
  # DEBUG this => NULL
  __cxa_guard_release (&_ZGVZ24tfl_ptquant_dnn_setupPrevE25micro_op_resolver_ptquant);
  __aeabi_atexit (&micro_op_resolver_ptquant, __comp_dtor , &__dso_handle);

  <bb 14>:
  _28 = tflite::ops::micro::Register_FULLY_CONNECTED ();
  # DEBUG this => &micro_op_resolver_ptquant
  # DEBUG op => 9
  # DEBUG registration => _28
  # DEBUG min_version => 4
  # DEBUG max_version => 4
  # DEBUG version => 4
  # DEBUG version => 4
  _338 = micro_op_resolver_ptquant.registrations_len_;
  if (_338 > 6)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  _impure_ptr.13_339 = _impure_ptr;
  _340 = _impure_ptr.13_339->_stdout;
  fprintf (_340, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _338, 7);
  _impure_ptr.13_342 = _impure_ptr;
  _343 = _impure_ptr.13_342->_stdout;
  fflush (_343);
  _345 = micro_op_resolver_ptquant.registrations_len_;
  # DEBUG D#4 => &micro_op_resolver_ptquant.registrations_[_345]
  # DEBUG new_registration => D#4
  _346 = _345 + 1;
  micro_op_resolver_ptquant.registrations_len_ = _346;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_345] = MEM[(const struct TfLiteRegistration &)_28];
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_345].builtin_code = 9;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_345].version = 4;
  # DEBUG version => 5
  # DEBUG version => 5
  goto <bb 17>;

  <bb 16>:
  _impure_ptr.13_172 = _impure_ptr;
  _173 = _impure_ptr.13_172->_stdout;
  fprintf (_173, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _338, 7);
  _impure_ptr.13_174 = _impure_ptr;
  _175 = _impure_ptr.13_174->_stdout;
  fflush (_175);

  <bb 17>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG min_version => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  _31 = tflite::ops::micro::Register_SOFTMAX ();
  # DEBUG this => &micro_op_resolver_ptquant
  # DEBUG op => 25
  # DEBUG registration => _31
  # DEBUG min_version => 2
  # DEBUG max_version => 2
  # DEBUG version => 2
  _322 = micro_op_resolver_ptquant.registrations_len_;
  if (_322 > 6)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  _impure_ptr.13_323 = _impure_ptr;
  _324 = _impure_ptr.13_323->_stdout;
  fprintf (_324, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _322, 7);
  _impure_ptr.13_326 = _impure_ptr;
  _327 = _impure_ptr.13_326->_stdout;
  fflush (_327);
  _329 = micro_op_resolver_ptquant.registrations_len_;
  # DEBUG D#4 => &micro_op_resolver_ptquant.registrations_[_329]
  # DEBUG new_registration => D#4
  _330 = _329 + 1;
  micro_op_resolver_ptquant.registrations_len_ = _330;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_329] = MEM[(const struct TfLiteRegistration &)_31];
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_329].builtin_code = 25;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_329].version = 2;
  # DEBUG version => 3
  # DEBUG version => 3
  goto <bb 20>;

  <bb 19>:
  _impure_ptr.13_158 = _impure_ptr;
  _159 = _impure_ptr.13_158->_stdout;
  fprintf (_159, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _322, 7);
  _impure_ptr.13_160 = _impure_ptr;
  _161 = _impure_ptr.13_160->_stdout;
  fflush (_161);

  <bb 20>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG min_version => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  _34 = tflite::ops::micro::Register_CONV_2D ();
  # DEBUG this => &micro_op_resolver_ptquant
  # DEBUG op => 3
  # DEBUG registration => _34
  # DEBUG min_version => 3
  # DEBUG max_version => 3
  # DEBUG version => 3
  _306 = micro_op_resolver_ptquant.registrations_len_;
  if (_306 > 6)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  _impure_ptr.13_307 = _impure_ptr;
  _308 = _impure_ptr.13_307->_stdout;
  fprintf (_308, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _306, 7);
  _impure_ptr.13_310 = _impure_ptr;
  _311 = _impure_ptr.13_310->_stdout;
  fflush (_311);
  _313 = micro_op_resolver_ptquant.registrations_len_;
  # DEBUG D#4 => &micro_op_resolver_ptquant.registrations_[_313]
  # DEBUG new_registration => D#4
  _314 = _313 + 1;
  micro_op_resolver_ptquant.registrations_len_ = _314;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_313] = MEM[(const struct TfLiteRegistration &)_34];
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_313].builtin_code = 3;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_313].version = 3;
  # DEBUG version => 4
  # DEBUG version => 4
  goto <bb 23>;

  <bb 22>:
  _impure_ptr.13_144 = _impure_ptr;
  _145 = _impure_ptr.13_144->_stdout;
  fprintf (_145, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _306, 7);
  _impure_ptr.13_146 = _impure_ptr;
  _147 = _impure_ptr.13_146->_stdout;
  fflush (_147);

  <bb 23>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG min_version => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  _37 = tflite::ops::micro::Register_DEPTHWISE_CONV_2D ();
  # DEBUG this => &micro_op_resolver_ptquant
  # DEBUG op => 4
  # DEBUG registration => _37
  # DEBUG min_version => 3
  # DEBUG max_version => 3
  # DEBUG version => 3
  _290 = micro_op_resolver_ptquant.registrations_len_;
  if (_290 > 6)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:
  _impure_ptr.13_291 = _impure_ptr;
  _292 = _impure_ptr.13_291->_stdout;
  fprintf (_292, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _290, 7);
  _impure_ptr.13_294 = _impure_ptr;
  _295 = _impure_ptr.13_294->_stdout;
  fflush (_295);
  _297 = micro_op_resolver_ptquant.registrations_len_;
  # DEBUG D#4 => &micro_op_resolver_ptquant.registrations_[_297]
  # DEBUG new_registration => D#4
  _298 = _297 + 1;
  micro_op_resolver_ptquant.registrations_len_ = _298;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_297] = MEM[(const struct TfLiteRegistration &)_37];
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_297].builtin_code = 4;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_297].version = 3;
  # DEBUG version => 4
  # DEBUG version => 4
  goto <bb 26>;

  <bb 25>:
  _impure_ptr.13_130 = _impure_ptr;
  _131 = _impure_ptr.13_130->_stdout;
  fprintf (_131, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _290, 7);
  _impure_ptr.13_132 = _impure_ptr;
  _133 = _impure_ptr.13_132->_stdout;
  fflush (_133);

  <bb 26>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG min_version => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  _40 = tflite::ops::micro::Register_AVERAGE_POOL_2D ();
  # DEBUG this => &micro_op_resolver_ptquant
  # DEBUG op => 1
  # DEBUG registration => _40
  # DEBUG min_version => 2
  # DEBUG max_version => 2
  # DEBUG version => 2
  _274 = micro_op_resolver_ptquant.registrations_len_;
  if (_274 > 6)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  _impure_ptr.13_275 = _impure_ptr;
  _276 = _impure_ptr.13_275->_stdout;
  fprintf (_276, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _274, 7);
  _impure_ptr.13_278 = _impure_ptr;
  _279 = _impure_ptr.13_278->_stdout;
  fflush (_279);
  _281 = micro_op_resolver_ptquant.registrations_len_;
  # DEBUG D#4 => &micro_op_resolver_ptquant.registrations_[_281]
  # DEBUG new_registration => D#4
  _282 = _281 + 1;
  micro_op_resolver_ptquant.registrations_len_ = _282;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_281] = MEM[(const struct TfLiteRegistration &)_40];
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_281].builtin_code = 1;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_281].version = 2;
  # DEBUG version => 3
  # DEBUG version => 3
  goto <bb 29>;

  <bb 28>:
  _impure_ptr.13_116 = _impure_ptr;
  _117 = _impure_ptr.13_116->_stdout;
  fprintf (_117, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _274, 7);
  _impure_ptr.13_118 = _impure_ptr;
  _119 = _impure_ptr.13_118->_stdout;
  fflush (_119);

  <bb 29>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG min_version => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  _43 = tflite::ops::micro::Register_QUANTIZE ();
  # DEBUG this => &micro_op_resolver_ptquant
  # DEBUG op => 114
  # DEBUG registration => _43
  # DEBUG min_version => 1
  # DEBUG max_version => 1
  # DEBUG version => 1
  _258 = micro_op_resolver_ptquant.registrations_len_;
  if (_258 > 6)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  _impure_ptr.13_259 = _impure_ptr;
  _260 = _impure_ptr.13_259->_stdout;
  fprintf (_260, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _258, 7);
  _impure_ptr.13_262 = _impure_ptr;
  _263 = _impure_ptr.13_262->_stdout;
  fflush (_263);
  _265 = micro_op_resolver_ptquant.registrations_len_;
  # DEBUG D#4 => &micro_op_resolver_ptquant.registrations_[_265]
  # DEBUG new_registration => D#4
  _266 = _265 + 1;
  micro_op_resolver_ptquant.registrations_len_ = _266;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_265] = MEM[(const struct TfLiteRegistration &)_43];
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_265].builtin_code = 114;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_265].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 32>;

  <bb 31>:
  _impure_ptr.13_102 = _impure_ptr;
  _103 = _impure_ptr.13_102->_stdout;
  fprintf (_103, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _258, 7);
  _impure_ptr.13_104 = _impure_ptr;
  _105 = _impure_ptr.13_104->_stdout;
  fflush (_105);

  <bb 32>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG min_version => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  _46 = tflite::ops::micro::Register_DEQUANTIZE ();
  # DEBUG this => &micro_op_resolver_ptquant
  # DEBUG op => 6
  # DEBUG registration => _46
  # DEBUG min_version => 2
  # DEBUG max_version => 2
  # DEBUG version => 2
  _154 = micro_op_resolver_ptquant.registrations_len_;
  if (_154 > 6)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  _impure_ptr.13_140 = _impure_ptr;
  _126 = _impure_ptr.13_140->_stdout;
  fprintf (_126, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _154, 7);
  _impure_ptr.13_98 = _impure_ptr;
  _29 = _impure_ptr.13_98->_stdout;
  fflush (_29);
  _35 = micro_op_resolver_ptquant.registrations_len_;
  # DEBUG D#4 => &micro_op_resolver_ptquant.registrations_[_35]
  # DEBUG new_registration => D#4
  _38 = _35 + 1;
  micro_op_resolver_ptquant.registrations_len_ = _38;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_35] = MEM[(const struct TfLiteRegistration &)_46];
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_35].builtin_code = 6;
  MEM[(struct TfLiteRegistration *)&micro_op_resolver_ptquant].registrations_[_35].version = 2;
  # DEBUG version => 3
  # DEBUG version => 3
  goto <bb 35>;

  <bb 34>:
  _impure_ptr.13_88 = _impure_ptr;
  _89 = _impure_ptr.13_88->_stdout;
  fprintf (_89, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _154, 7);
  _impure_ptr.13_90 = _impure_ptr;
  _91 = _impure_ptr.13_90->_stdout;
  fflush (_91);

  <bb 35>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG min_version => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  _49 = __atomic_load_1 (&_ZGVZ24tfl_ptquant_dnn_setupPrevE26static_interpreter_ptquant, 2);
  _83 = _49 & 1;
  if (_83 == 0)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  goto <bb 40>;

  <bb 37>:
  _51 = __cxa_guard_acquire (&_ZGVZ24tfl_ptquant_dnn_setupPrevE26static_interpreter_ptquant);
  if (_51 != 0)
    goto <bb 38>;
  else
    goto <bb 36>;

  <bb 38>:
  model_ptquant.3_52 = model_ptquant;
  error_reporter_ptquant.4_53 = error_reporter_ptquant;
  tflite::MicroInterpreter::MicroInterpreter (&static_interpreter_ptquant, model_ptquant.3_52, &micro_op_resolver_ptquant.D.167502, &tensor_arena_ptquant, 10240, error_reporter_ptquant.4_53);

  <bb 39>:
  __cxa_guard_release (&_ZGVZ24tfl_ptquant_dnn_setupPrevE26static_interpreter_ptquant);

  <bb 40>:
  interpreter_ptquant = &static_interpreter_ptquant;
  error_reporter_ptquant.4_58 = error_reporter_ptquant;
  tflite::ErrorReporter::Report (error_reporter_ptquant.4_58, "   start allocating tensors");
  interpreter_ptquant.9_60 = interpreter_ptquant;
  _62 = tflite::MicroInterpreter::AllocateTensors (interpreter_ptquant.9_60);
  # DEBUG allocate_status_ptquant => _62
  if (_62 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  error_reporter_ptquant.4_63 = error_reporter_ptquant;
  tflite::ErrorReporter::Report (error_reporter_ptquant.4_63, "AllocateTensors() failed");
  goto <bb 43>;

  <bb 42>:
  error_reporter_ptquant.4_65 = error_reporter_ptquant;
  tflite::ErrorReporter::Report (error_reporter_ptquant.4_65, "   tensors allocated without error");
  interpreter_ptquant.9_67 = interpreter_ptquant;
  _69 = tflite::MicroInterpreter::input (interpreter_ptquant.9_67, 0);
  input_ptquant = _69;

  <bb 43>:
  return;

<L23>:
  __cxa_guard_abort (&_ZGVZ24tfl_ptquant_dnn_setupPrevE26static_interpreter_ptquant);
  resx 3

}


