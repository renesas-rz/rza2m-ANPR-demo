   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"kernel_util.cc"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEE
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_S
  23              		.fnstart
  24              	.LFB3698:
  25              		.file 1 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // String Conversions -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // Copyright (C) 2008-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** /** @file ext/string_conversions.h
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****  */
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #ifndef _STRING_CONVERSIONS_H
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #define _STRING_CONVERSIONS_H 1
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #pragma GCC system_header
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #if __cplusplus < 201103L
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** # include <bits/c++0x_warning.h>
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #else
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #include <bits/c++config.h>
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #include <ext/numeric_traits.h>
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #include <bits/functexcept.h>
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #include <cstdlib>
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #include <cwchar>
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #include <cstdio>
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** #include <cerrno>
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** {
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****   // Helper for all the sto* functions.
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****   template<typename _TRet, typename _Ret = _TRet, typename _CharT,
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 	   typename... _Base>
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****     _Ret
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 	   const char* __name, const _CharT* __str, std::size_t* __idx,
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 	   _Base... __base)
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****     {
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       _Ret __ret;
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       _CharT* __endptr;
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       struct _Save_errno {
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 	_Save_errno() : _M_errno(errno) { errno = 0; }
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 	~_Save_errno() { if (errno == 0) errno = _M_errno; }
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 	int _M_errno;
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       } const __save_errno;
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       const _TRet __tmp = __convf(__str, &__endptr, __base...);
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       if (__endptr == __str)
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 	std::__throw_invalid_argument(__name);
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       else if (errno == ERANGE
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 	       || (std::__are_same<_Ret, int>::__value
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 		   && (__tmp < __numeric_traits<int>::__min
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 		       || __tmp > __numeric_traits<int>::__max)))
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 	std::__throw_out_of_range(__name);
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       else
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 	__ret = __tmp;
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       if (__idx)
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 	*__idx = __endptr - __str;
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       return __ret;
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****     }
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****   // Helper for the to_string / to_wstring functions.
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****   template<typename _String, typename _CharT = typename _String::value_type>
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****     _String
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
  26              		.loc 1 89 0
  27              		.cfi_startproc
  28              		@ args = 4, pretend = 4, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 1
  30              	.LVL0:
  31 0000 04302DE5 		str	r3, [sp, #-4]!
  32              		.save {r3}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 3, -4
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 		 const _CharT* __fmt, ...)
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****     {
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       // XXX Eventually the result will be constructed in place in
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       // the C++0x string, likely with the help of internal hooks.
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 							  * __n));
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       __builtin_va_list __args;
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       __builtin_va_start(__args, __fmt);
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       const int __len = __convf(__s, __n, __fmt, __args);
  35              		.loc 1 101 0
  36 0004 002000E3 		movw	r2, #:lower16:.LC0
  37              	.LVL1:
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
  38              		.loc 1 89 0
  39 0008 70482DE9 		push	{r4, r5, r6, fp, lr}
  40              		.save {r4, r5, r6, fp, lr}
  41              		.cfi_def_cfa_offset 24
  42              		.cfi_offset 4, -24
  43              		.cfi_offset 5, -20
  44              		.cfi_offset 6, -16
  45              		.cfi_offset 11, -12
  46              		.cfi_offset 14, -8
  47              		.setfp fp, sp, #16
  48 000c 10B08DE2 		add	fp, sp, #16
  49              		.cfi_def_cfa 11, 8
  50              		.pad #8
  51 0010 08D04DE2 		sub	sp, sp, #8
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  52              		.loc 1 99 0
  53 0014 08C08BE2 		add	ip, fp, #8
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
  54              		.loc 1 89 0
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  55              		.loc 1 96 0
  56 0018 18D04DE2 		sub	sp, sp, #24
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
  57              		.loc 1 89 0
  58 001c 0050A0E1 		mov	r5, r0
  59              		.loc 1 101 0
  60 0020 0C30A0E1 		mov	r3, ip
  61 0024 0D00A0E1 		mov	r0, sp
  62              	.LVL2:
  63 0028 002040E3 		movt	r2, #:upper16:.LC0
  64 002c 1010A0E3 		mov	r1, #16
  65              	.LVL3:
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  66              		.loc 1 99 0
  67 0030 18C00BE5 		str	ip, [fp, #-24]
  68              		.loc 1 101 0
  69 0034 FEFFFFEB 		bl	vsnprintf
  70              	.LVL4:
  71              	.LBB1147:
  72              	.LBB1148:
  73              	.LBB1149:
  74              	.LBB1150:
  75              	.LBB1151:
  76              	.LBB1152:
  77              	.LBB1153:
  78              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** /** @file bits/basic_string.tcc
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****  */
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** //
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** //
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** #pragma GCC system_header
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** {
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     void
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     {
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       if (this == &__s)
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	return;
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       if (_M_is_local())
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	if (__s._M_is_local())
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  {
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    if (length() && __s.length())
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      {
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      }
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    else if (__s.length())
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      {
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		_M_length(__s.length());
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		__s._M_set_length(0);
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		return;
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      }
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    else if (length())
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      {
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		__s._M_length(length());
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		_M_set_length(0);
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		return;
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      }
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  }
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	else
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  {
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 			      _S_local_capacity + 1);
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    _M_data(__s._M_data());
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  }
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       else
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	{
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  if (__s._M_is_local())
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    {
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 				_S_local_capacity + 1);
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      __s._M_data(_M_data());
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    }
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  else
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    {
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      _M_data(__s._M_data());
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    }
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	}
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       const size_type __tmp_length = length();
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       _M_length(__s.length());
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       __s._M_length(__tmp_length);
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     }
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     {
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       if (__capacity > max_size())
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	{
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  if (__capacity > max_size())
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    __capacity = max_size();
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	}
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       // null char_type() element.
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     }
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****   // istreambuf_iterators, etc.
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****   // pointers, calling for a different coding style.
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     template<typename _InIterator>
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       void
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		   std::input_iterator_tag)
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       {
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	size_type __len = 0;
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  {
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    ++__beg;
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  }
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	__try
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  {
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    while (__beg != __end)
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      {
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		if (__len == __capacity)
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		  {
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		    // Allocate more space.
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		    __capacity = __len + 1;
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		    _M_dispose();
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		    _M_data(__another);
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		    _M_capacity(__capacity);
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		  }
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		++__beg;
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	      }
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  }
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	__catch(...)
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  {
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    _M_dispose();
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  }
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	_M_set_length(__len);
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       }
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****     template<typename _InIterator>
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       void
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 		   std::forward_iterator_tag)
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc ****       {
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
  79              		.loc 2 217 0
  80 0038 0F0050E3 		cmp	r0, #15
  81              	.LBE1153:
  82              	.LBE1152:
  83              	.LBE1151:
  84              	.LBE1150:
  85              	.LBE1149:
  86              	.LBE1148:
  87              	.LBE1147:
  88              		.loc 1 101 0
  89 003c 0040A0E1 		mov	r4, r0
  90              	.LBB1223:
  91              	.LBB1212:
  92              	.LBB1213:
  93              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****  */
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** //
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** //
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #pragma GCC system_header
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #include <debug/debug.h>
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #include <initializer_list>
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** {
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @ingroup strings
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @ingroup sequences
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     class basic_string
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     {
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Types:
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     public:
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 							const_iterator;
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     private:
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus < 201103L
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef iterator __const_iterator;
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       };
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type		_M_string_length;
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       union
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       };
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_data(pointer __p)
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_length(size_type __length)
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_string_length = __length; }
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       pointer
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_data() const
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       pointer
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_local_data()
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
  94              		.loc 3 142 0
  95 0040 080085E2 		add	r0, r5, #8
  96              	.LBE1213:
  97              	.LBE1212:
  98              	.LBE1223:
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
  99              		.loc 1 96 0
 100 0044 0D60A0E1 		mov	r6, sp
 101              	.LVL5:
 102              	.LBB1224:
 103              	.LBB1215:
 104              	.LBB1207:
 105              	.LBB1202:
 106              	.LBB1197:
 107              	.LBB1192:
 108              	.LBB1187:
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 
 109              		.loc 2 215 0
 110 0048 14400BE5 		str	r4, [fp, #-20]
 111              	.LBE1187:
 112              	.LBE1192:
 113              	.LBE1197:
 114              	.LBE1202:
 115              	.LBE1207:
 116              	.LBE1215:
 117              	.LBB1216:
 118              	.LBB1217:
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 119              		.loc 3 110 0
 120 004c 000085E5 		str	r0, [r5]
 121              	.LVL6:
 122              	.LBE1217:
 123              	.LBE1216:
 124              	.LBB1218:
 125              	.LBB1208:
 126              	.LBB1203:
 127              	.LBB1198:
 128              	.LBB1193:
 129              	.LBB1188:
 130              		.loc 2 217 0
 131 0050 0C00008A 		bhi	.L9
 132              	.LVL7:
 133              	.LBB1154:
 134              	.LBB1155:
 135              	.LBB1156:
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_pointer
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_local_data() const
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_length(__n);
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       bool
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_is_local() const
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Create & Destroy
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       pointer
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_dispose()
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (!_M_is_local())
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<typename _InIterator>
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         void
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			 std::__false_type)
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<typename _Integer>
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         void
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<typename _InIterator>
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         void
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         }
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<typename _InIterator>
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         void
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
 226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<typename _FwdIterator>
 227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         void
 228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       allocator_type&
 235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_get_allocator()
 236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_dataplus; }
 237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const allocator_type&
 239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_get_allocator() const
 240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_dataplus; }
 241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     private:
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<typename _Tp>
 255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
 257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
 259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__pos > this->size())
 262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return __pos;
 266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
 278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       bool
 286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
 295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__n == 1)
 136              		.loc 3 297 0
 137 0054 010054E3 		cmp	r4, #1
 138 0058 1700000A 		beq	.L10
 139              	.LVL8:
 140              	.LBB1157:
 141              	.LBB1158:
 142              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****  */
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** //
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** //
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** #pragma GCC system_header
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** {
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   /**
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   template<typename _CharT>
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     struct _Char_types
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     {
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     };
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   /**
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    */
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   template<typename _CharT>
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     struct char_traits
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     {
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static void
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       { __c1 = __c2; }
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       { return __c1 == __c2; }
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       { return __c1 < __c2; }
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static int
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static std::size_t
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       length(const char_type* __s);
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static const char_type*
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static char_type*
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static char_type*
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static char_type*
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       { return __c1 == __c2; }
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       eof()
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     };
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   template<typename _CharT>
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     int
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     char_traits<_CharT>::
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     {
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	  return -1;
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	  return 1;
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       return 0;
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     }
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   template<typename _CharT>
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     std::size_t
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     char_traits<_CharT>::
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     length(const char_type* __p)
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     {
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       std::size_t __i = 0;
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****         ++__i;
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       return __i;
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     }
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   template<typename _CharT>
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     const typename char_traits<_CharT>::char_type*
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     char_traits<_CharT>::
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     {
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****           return __s + __i;
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       return 0;
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     }
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   template<typename _CharT>
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     char_traits<_CharT>::
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     {
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     }
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   template<typename _CharT>
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     char_traits<_CharT>::
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     {
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       return __s1;
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     }
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   template<typename _CharT>
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     char_traits<_CharT>::
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     {
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       return __s;
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     }
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** } // namespace
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** {
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   // 21.1
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   /**
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   */
 226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   template<class _CharT>
 227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     { };
 229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****   template<>
 233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     struct char_traits<char>
 234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****     {
 235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef char              char_type;
 236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef int               int_type;
 237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef streampos         pos_type;
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef streamoff         off_type;
 239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static void
 242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       { __c1 = __c2; }
 244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       { return __c1 == __c2; }
 248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       {
 252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	// LWG 467.
 253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       }
 256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static int
 258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       {
 260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	if (__n == 0)
 261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	  return 0;
 262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       }
 264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static size_t
 266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       length(const char_type* __s)
 267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       { return __builtin_strlen(__s); }
 268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static const char_type*
 270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       {
 272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	if (__n == 0)
 273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	  return 0;
 274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       }
 276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static char_type*
 278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       {
 280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	if (__n == 0)
 281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	  return __s1;
 282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       }
 284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       static char_type*
 286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h ****       {
 288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	if (__n == 0)
 143              		.loc 4 288 0
 144 005c 000054E3 		cmp	r4, #0
 145              	.LBE1158:
 146              	.LBE1157:
 147              	.LBE1156:
 148              	.LBE1155:
 149              	.LBE1154:
 150              	.LBE1188:
 151              	.LBE1193:
 152              	.LBE1198:
 153              	.LBE1203:
 154              	.LBE1208:
 155              	.LBE1218:
 156              	.LBB1219:
 157              	.LBB1214:
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
 158              		.loc 3 142 0
 159 0060 0030A001 		moveq	r3, r0
 160              	.LBE1214:
 161              	.LBE1219:
 162              	.LBB1220:
 163              	.LBB1209:
 164              	.LBB1204:
 165              	.LBB1199:
 166              	.LBB1194:
 167              	.LBB1189:
 168              	.LBB1169:
 169              	.LBB1167:
 170              	.LBB1165:
 171              	.LBB1161:
 172              	.LBB1159:
 173              		.loc 4 288 0
 174 0064 0E00001A 		bne	.L3
 175              	.LVL9:
 176              	.L5:
 177              	.LBE1159:
 178              	.LBE1161:
 179              	.LBE1165:
 180              	.LBE1167:
 181              	.LBE1169:
 182              	.LBB1170:
 183              	.LBB1171:
 184              	.LBB1172:
 185              	.LBB1173:
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 186              		.loc 4 243 0
 187 0068 0020A0E3 		mov	r2, #0
 188              	.LBE1173:
 189              	.LBE1172:
 190              	.LBB1175:
 191              	.LBB1176:
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 192              		.loc 3 132 0
 193 006c 044085E5 		str	r4, [r5, #4]
 194              	.LVL10:
 195              	.LBE1176:
 196              	.LBE1175:
 197              	.LBE1171:
 198              	.LBE1170:
 199              	.LBE1189:
 200              	.LBE1194:
 201              	.LBE1199:
 202              	.LBE1204:
 203              	.LBE1209:
 204              	.LBE1220:
 205              	.LBE1224:
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       __builtin_va_end(__args);
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h **** 
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****       return _String(__s, __s + __len);
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\string_conversions.h ****     }
 206              		.loc 1 106 0
 207 0070 0500A0E1 		mov	r0, r5
 208              	.LBB1225:
 209              	.LBB1221:
 210              	.LBB1210:
 211              	.LBB1205:
 212              	.LBB1200:
 213              	.LBB1195:
 214              	.LBB1190:
 215              	.LBB1179:
 216              	.LBB1178:
 217              	.LBB1177:
 218              	.LBB1174:
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 219              		.loc 4 243 0
 220 0074 0420C3E7 		strb	r2, [r3, r4]
 221              	.LVL11:
 222              	.LBE1174:
 223              	.LBE1177:
 224              	.LBE1178:
 225              	.LBE1179:
 226              	.LBE1190:
 227              	.LBE1195:
 228              	.LBE1200:
 229              	.LBE1205:
 230              	.LBE1210:
 231              	.LBE1221:
 232              	.LBE1225:
 233              		.loc 1 106 0
 234 0078 10D04BE2 		sub	sp, fp, #16
 235              		.cfi_remember_state
 236              		.cfi_def_cfa 13, 24
 237              		@ sp needed
 238 007c 7048BDE8 		pop	{r4, r5, r6, fp, lr}
 239              		.cfi_restore 14
 240              		.cfi_restore 11
 241              		.cfi_restore 6
 242              		.cfi_restore 5
 243              		.cfi_restore 4
 244              		.cfi_def_cfa_offset 4
 245              	.LVL12:
 246 0080 04D08DE2 		add	sp, sp, #4
 247              		.cfi_restore 3
 248              		.cfi_def_cfa_offset 0
 249 0084 1EFF2FE1 		bx	lr
 250              	.LVL13:
 251              	.L9:
 252              		.cfi_restore_state
 253              	.LBB1226:
 254              	.LBB1222:
 255              	.LBB1211:
 256              	.LBB1206:
 257              	.LBB1201:
 258              	.LBB1196:
 259              	.LBB1191:
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	  {
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 260              		.loc 2 219 0
 261 0088 0020A0E3 		mov	r2, #0
 262 008c 14104BE2 		sub	r1, fp, #20
 263 0090 0500A0E1 		mov	r0, r5
 264 0094 FEFFFFEB 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 265              	.LVL14:
 266              	.LBB1180:
 267              	.LBB1181:
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 268              		.loc 3 160 0
 269 0098 14301BE5 		ldr	r3, [fp, #-20]
 270              	.LBE1181:
 271              	.LBE1180:
 272              	.LBB1183:
 273              	.LBB1184:
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 274              		.loc 3 128 0
 275 009c 000085E5 		str	r0, [r5]
 276              	.LVL15:
 277              	.LBE1184:
 278              	.LBE1183:
 279              	.LBB1185:
 280              	.LBB1182:
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 281              		.loc 3 160 0
 282 00a0 083085E5 		str	r3, [r5, #8]
 283              	.LVL16:
 284              	.L3:
 285              	.LBE1182:
 286              	.LBE1185:
 287              	.LBB1186:
 288              	.LBB1168:
 289              	.LBB1166:
 290              	.LBB1162:
 291              	.LBB1160:
 289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	  return __s1;
 290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 292              		.loc 4 290 0
 293 00a4 0420A0E1 		mov	r2, r4
 294 00a8 0610A0E1 		mov	r1, r6
 295 00ac FEFFFFEB 		bl	memcpy
 296              	.LVL17:
 297 00b0 14401BE5 		ldr	r4, [fp, #-20]
 298              	.LVL18:
 299 00b4 003095E5 		ldr	r3, [r5]
 300 00b8 EAFFFFEA 		b	.L5
 301              	.LVL19:
 302              	.L10:
 303              	.LBE1160:
 304              	.LBE1162:
 305              	.LBB1163:
 306              	.LBB1164:
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 307              		.loc 4 243 0
 308 00bc 0020DDE5 		ldrb	r2, [sp]	@ zero_extendqisi2
 309 00c0 0030A0E1 		mov	r3, r0
 310 00c4 0820C5E5 		strb	r2, [r5, #8]
 311 00c8 E6FFFFEA 		b	.L5
 312              	.LBE1164:
 313              	.LBE1163:
 314              	.LBE1166:
 315              	.LBE1168:
 316              	.LBE1186:
 317              	.LBE1191:
 318              	.LBE1196:
 319              	.LBE1201:
 320              	.LBE1206:
 321              	.LBE1211:
 322              	.LBE1222:
 323              	.LBE1226:
 324              		.cfi_endproc
 325              	.LFE3698:
 326              		.fnend
 328              		.section	.text._ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei,"ax",%progbits
 329              		.align	2
 330              		.global	_ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
 331              		.syntax unified
 332              		.arm
 333              		.fpu neon
 335              	_ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei:
 336              		.fnstart
 337              	.LFB3696:
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 342 0000 001091E5 		ldr	r1, [r1]
 343 0004 003091E5 		ldr	r3, [r1]
 344 0008 030052E1 		cmp	r2, r3
 345 000c 0130A0B3 		movlt	r3, #1
 346 0010 0030A0A3 		movge	r3, #0
 347 0014 000052E3 		cmp	r2, #0
 348 0018 0030A0B3 		movlt	r3, #0
 349 001c 000053E3 		cmp	r3, #0
 350 0020 0800000A 		beq	.L15
 351 0024 021181E0 		add	r1, r1, r2, lsl #2
 352 0028 041091E5 		ldr	r1, [r1, #4]
 353 002c 000051E3 		cmp	r1, #0
 354 0030 040000BA 		blt	.L15
 355 0034 083090E5 		ldr	r3, [r0, #8]
 356 0038 000053E3 		cmp	r3, #0
 357 003c 0300000A 		beq	.L13
 358 0040 010383E0 		add	r0, r3, r1, lsl #6
 359 0044 1EFF2FE1 		bx	lr
 360              	.L15:
 361 0048 0000A0E3 		mov	r0, #0
 362 004c 1EFF2FE1 		bx	lr
 363              	.L13:
 364 0050 503090E5 		ldr	r3, [r0, #80]
 365 0054 13FF2FE1 		bx	r3
 366              		.cfi_endproc
 367              	.LFE3696:
 368              		.cantunwind
 369              		.fnend
 371              		.section	.text._ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor,"ax",%pr
 372              		.align	2
 373              		.global	_ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor
 374              		.syntax unified
 375              		.arm
 376              		.fpu neon
 378              	_ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor:
 379              		.fnstart
 380              	.LFB3274:
 381              		.file 5 "../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc"
   1:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
   3:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** you may not use this file except in compliance with the License.
   5:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** You may obtain a copy of the License at
   6:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
   7:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
   9:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** See the License for the specific language governing permissions and
  13:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** limitations under the License.
  14:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** ==============================================================================*/
  15:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include "tensorflow/lite/kernels/kernel_util.h"
  16:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  17:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include <stdint.h>
  18:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include <stdlib.h>
  19:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  20:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include <algorithm>
  21:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include <complex>
  22:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include <limits>
  23:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include <memory>
  24:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #ifndef TF_LITE_STATIC_MEMORY
  25:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include <string>
  26:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #endif  // TF_LITE_STATIC_MEMORY
  27:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  28:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include "tensorflow/lite/c/builtin_op_data.h"
  29:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include "tensorflow/lite/c/common.h"
  30:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include "tensorflow/lite/kernels/internal/cppmath.h"
  31:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include "tensorflow/lite/kernels/internal/quantization_util.h"
  32:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  33:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #if defined(__APPLE__)
  34:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #include "TargetConditionals.h"
  35:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #endif
  36:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  37:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** namespace tflite {
  38:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  39:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** namespace {
  40:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  41:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // Assumes tensor_index is a valid index (in bounds)
  42:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** inline TfLiteTensor* GetTensorAtIndex(const TfLiteContext* context,
  43:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                       int tensor_index) {
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (context->tensors != nullptr) {
  45:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
  46:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return context->GetTensor(context, tensor_index);
  48:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
  49:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
  50:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  51:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // Validate in a single place to reduce binary size
  52:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** inline TfLiteStatus ValidateTensorIndexingSafe(const TfLiteContext* context,
  53:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                                int index, int max_size,
  54:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                                const int* tensor_indices,
  55:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                                int* tensor_index) {
  56:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (index < 0 || index >= max_size) {
  57:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_KERNEL_LOG(const_cast<TfLiteContext*>(context),
  58:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        "Invalid tensor index %d (not in [0, %d))\n", index,
  59:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        max_size);
  60:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return kTfLiteError;
  61:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
  62:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (tensor_indices[index] == kTfLiteOptionalTensor) {
  63:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_KERNEL_LOG(const_cast<TfLiteContext*>(context),
  64:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        "Tensor at index %d was optional but was expected\n",
  65:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        index);
  66:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return kTfLiteError;
  67:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
  68:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  69:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *tensor_index = tensor_indices[index];
  70:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
  71:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
  72:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  73:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // Same as above but returns -1 for invalid inputs instead of status + logging
  74:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // error.
  75:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** inline int ValidateTensorIndexing(const TfLiteContext* context, int index,
  76:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                   int max_size, const int* tensor_indices) {
  77:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (index >= 0 && index < max_size) {
  78:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const int tensor_index = tensor_indices[index];
  79:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (tensor_index != kTfLiteOptionalTensor) {
  80:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return tensor_index;
  81:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     }
  82:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
  83:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return -1;
  84:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
  85:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  86:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** inline TfLiteTensor* GetMutableInput(const TfLiteContext* context,
  87:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                      const TfLiteNode* node, int index) {
  88:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const int tensor_index = ValidateTensorIndexing(
  89:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context, index, node->inputs->size, node->inputs->data);
  90:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (tensor_index < 0) {
  91:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return nullptr;
  92:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
  93:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return GetTensorAtIndex(context, tensor_index);
  94:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
  95:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
  96:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** inline TfLiteStatus GetMutableInputSafe(const TfLiteContext* context,
  97:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                         const TfLiteNode* node, int index,
  98:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                         const TfLiteTensor** tensor) {
  99:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int tensor_index;
 100:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE_OK(
 101:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context, ValidateTensorIndexingSafe(context, index, node->inputs->size,
 102:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           node->inputs->data, &tensor_index));
 103:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *tensor = GetTensorAtIndex(context, tensor_index);
 104:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 105:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 106:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 107:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }  // anonymous namespace.
 108:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 109:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** const TfLiteTensor* GetInput(const TfLiteContext* context,
 110:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                              const TfLiteNode* node, int index) {
 111:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return GetMutableInput(context, node, index);
 112:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 113:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 114:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
 115:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                           int index, const TfLiteTensor** tensor) {
 382              		.loc 5 115 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 8
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL20:
 387              	.LBB1238:
 388              	.LBB1239:
 389              	.LBB1240:
 100:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context, ValidateTensorIndexingSafe(context, index, node->inputs->size,
 390              		.loc 5 100 0
 391 0000 001091E5 		ldr	r1, [r1]
 392              	.LVL21:
 393              	.LBE1240:
 394              	.LBE1239:
 395              	.LBE1238:
 396              		.loc 5 115 0
 397 0004 30402DE9 		push	{r4, r5, lr}
 398              		.save {r4, r5, lr}
 399              		.cfi_def_cfa_offset 12
 400              		.cfi_offset 4, -12
 401              		.cfi_offset 5, -8
 402              		.cfi_offset 14, -4
 403 0008 0040A0E1 		mov	r4, r0
 404              	.LVL22:
 405              		.pad #12
 406 000c 0CD04DE2 		sub	sp, sp, #12
 407              		.cfi_def_cfa_offset 24
 408              	.LBB1261:
 409              	.LBB1258:
 410              	.LBB1249:
 100:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context, ValidateTensorIndexingSafe(context, index, node->inputs->size,
 411              		.loc 5 100 0
 412 0010 04E091E4 		ldr	lr, [r1], #4
 413              	.LVL23:
 414              	.LBB1241:
 415              	.LBB1242:
  56:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_KERNEL_LOG(const_cast<TfLiteContext*>(context),
 416              		.loc 5 56 0
 417 0014 0E0052E1 		cmp	r2, lr
 418 0018 0050A0B3 		movlt	r5, #0
 419 001c 0150A0A3 		movge	r5, #1
 420 0020 A25F95E1 		orrs	r5, r5, r2, lsr #31
 421 0024 0A00001A 		bne	.L27
  62:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_KERNEL_LOG(const_cast<TfLiteContext*>(context),
 422              		.loc 5 62 0
 423 0028 021191E7 		ldr	r1, [r1, r2, lsl #2]
 424 002c 010071E3 		cmn	r1, #1
 425 0030 0F00000A 		beq	.L28
 426              	.LVL24:
 427              	.LBE1242:
 428              	.LBE1241:
 429              	.LBE1249:
 430              	.LBB1250:
 431              	.LBB1251:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 432              		.loc 5 44 0
 433 0034 082090E5 		ldr	r2, [r0, #8]
 434              	.LVL25:
 435 0038 000052E3 		cmp	r2, #0
  45:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 436              		.loc 5 45 0
 437 003c 01038210 		addne	r0, r2, r1, lsl #6
 438              	.LVL26:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 439              		.loc 5 44 0
 440 0040 1100000A 		beq	.L29
 441              	.LVL27:
 442              	.L20:
 443              	.LBE1251:
 444              	.LBE1250:
 103:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 445              		.loc 5 103 0
 446 0044 000083E5 		str	r0, [r3]
 104:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 447              		.loc 5 104 0
 448 0048 0000A0E3 		mov	r0, #0
 449              	.LVL28:
 450              	.L23:
 451              	.LBE1258:
 452              	.LBE1261:
 116:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return GetMutableInputSafe(context, node, index, tensor);
 117:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 453              		.loc 5 117 0
 454 004c 0CD08DE2 		add	sp, sp, #12
 455              		.cfi_remember_state
 456              		.cfi_def_cfa_offset 12
 457              		@ sp needed
 458 0050 3080BDE8 		pop	{r4, r5, pc}
 459              	.LVL29:
 460              	.L27:
 461              		.cfi_restore_state
 462              	.LBB1262:
 463              	.LBB1259:
 464              	.LBB1255:
 465              	.LBB1247:
 466              	.LBB1245:
  57:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        "Invalid tensor index %d (not in [0, %d))\n", index,
 467              		.loc 5 57 0
 468 0054 001000E3 		movw	r1, #:lower16:.LC1
 469 0058 144090E5 		ldr	r4, [r0, #20]
 470 005c 0E30A0E1 		mov	r3, lr
 471              	.LVL30:
 472 0060 001040E3 		movt	r1, #:upper16:.LC1
 473 0064 34FF2FE1 		blx	r4
 474              	.LVL31:
 475 0068 0100A0E3 		mov	r0, #1
 476              	.LBE1245:
 477              	.LBE1247:
 478              	.LBE1255:
 479              	.LBE1259:
 480              	.LBE1262:
 481              		.loc 5 117 0
 482 006c 0CD08DE2 		add	sp, sp, #12
 483              		.cfi_remember_state
 484              		.cfi_def_cfa_offset 12
 485              		@ sp needed
 486 0070 3080BDE8 		pop	{r4, r5, pc}
 487              	.LVL32:
 488              	.L28:
 489              		.cfi_restore_state
 490              	.LBB1263:
 491              	.LBB1260:
 492              	.LBB1256:
 493              	.LBB1248:
 494              	.LBB1246:
 495              	.LBB1243:
 496              	.LBB1244:
  63:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        "Tensor at index %d was optional but was expected\n",
 497              		.loc 5 63 0
 498 0074 001000E3 		movw	r1, #:lower16:.LC2
 499 0078 143090E5 		ldr	r3, [r0, #20]
 500              	.LVL33:
 501 007c 001040E3 		movt	r1, #:upper16:.LC2
 502 0080 33FF2FE1 		blx	r3
 503              	.LVL34:
 504 0084 0100A0E3 		mov	r0, #1
 505 0088 EFFFFFEA 		b	.L23
 506              	.LVL35:
 507              	.L29:
 508              	.LBE1244:
 509              	.LBE1243:
 510              	.LBE1246:
 511              	.LBE1248:
 512              	.LBE1256:
 513              	.LBB1257:
 514              	.LBB1254:
 515              	.LBB1252:
 516              	.LBB1253:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 517              		.loc 5 47 0
 518 008c 502094E5 		ldr	r2, [r4, #80]
 519 0090 04308DE5 		str	r3, [sp, #4]
 520              	.LVL36:
 521 0094 32FF2FE1 		blx	r2
 522              	.LVL37:
 523 0098 04309DE5 		ldr	r3, [sp, #4]
 524              	.LVL38:
 525 009c E8FFFFEA 		b	.L20
 526              	.LBE1253:
 527              	.LBE1252:
 528              	.LBE1254:
 529              	.LBE1257:
 530              	.LBE1260:
 531              	.LBE1263:
 532              		.cfi_endproc
 533              	.LFE3274:
 534              		.fnend
 536              		.section	.text._ZN6tflite16GetVariableInputEP13TfLiteContextPK10TfLiteNodei,"ax",%progbits
 537              		.align	2
 538              		.global	_ZN6tflite16GetVariableInputEP13TfLiteContextPK10TfLiteNodei
 539              		.syntax unified
 540              		.arm
 541              		.fpu neon
 543              	_ZN6tflite16GetVariableInputEP13TfLiteContextPK10TfLiteNodei:
 544              		.fnstart
 545              	.LFB3275:
 118:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 119:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
 120:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                int index) {
 546              		.loc 5 120 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              	.LVL39:
 551 0000 001091E5 		ldr	r1, [r1]
 552              	.LVL40:
 553              	.LBB1274:
 554              	.LBB1275:
 555              	.LBB1276:
 556              	.LBB1277:
  77:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const int tensor_index = tensor_indices[index];
 557              		.loc 5 77 0
 558 0004 003091E5 		ldr	r3, [r1]
 559 0008 030052E1 		cmp	r2, r3
 560 000c 0130A0B3 		movlt	r3, #1
 561 0010 0030A0A3 		movge	r3, #0
 562 0014 000052E3 		cmp	r2, #0
 563 0018 0030A0B3 		movlt	r3, #0
 564 001c 000053E3 		cmp	r3, #0
 565 0020 0B00000A 		beq	.L31
 566              	.LBB1278:
  78:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (tensor_index != kTfLiteOptionalTensor) {
 567              		.loc 5 78 0
 568 0024 021181E0 		add	r1, r1, r2, lsl #2
 569              	.LVL41:
 570 0028 041091E5 		ldr	r1, [r1, #4]
 571              	.LVL42:
 572              	.LBE1278:
 573              	.LBE1277:
 574              	.LBE1276:
  90:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return nullptr;
 575              		.loc 5 90 0
 576 002c 000051E3 		cmp	r1, #0
 577 0030 070000BA 		blt	.L31
 578              	.LVL43:
 579              	.LBB1279:
 580              	.LBB1280:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 581              		.loc 5 44 0
 582 0034 083090E5 		ldr	r3, [r0, #8]
 583 0038 000053E3 		cmp	r3, #0
 584 003c 0700000A 		beq	.L32
  45:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 585              		.loc 5 45 0
 586 0040 010383E0 		add	r0, r3, r1, lsl #6
 587              	.LVL44:
 588              	.LBE1280:
 589              	.LBE1279:
 590              	.LBE1275:
 591              	.LBE1274:
 121:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TfLiteTensor* tensor = GetMutableInput(context, node, index);
 122:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return tensor->is_variable ? tensor : nullptr;
 592              		.loc 5 122 0
 593 0044 2D30D0E5 		ldrb	r3, [r0, #45]	@ zero_extendqisi2
 594 0048 000053E3 		cmp	r3, #0
 595 004c 0000A003 		moveq	r0, #0
 123:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 596              		.loc 5 123 0
 597 0050 1EFF2FE1 		bx	lr
 598              	.LVL45:
 599              	.L31:
 122:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 600              		.loc 5 122 0
 601 0054 0030A0E3 		mov	r3, #0
 602 0058 2D30D3E5 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 603 005c F000F0E7 		.inst	0xe7f000f0
 604              	.LVL46:
 605              	.L32:
 120:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TfLiteTensor* tensor = GetMutableInput(context, node, index);
 606              		.loc 5 120 0
 607 0060 10402DE9 		push	{r4, lr}
 608              		.save {r4, lr}
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 4, -8
 611              		.cfi_offset 14, -4
 612              	.LBB1286:
 613              	.LBB1285:
 614              	.LBB1284:
 615              	.LBB1283:
 616              	.LBB1281:
 617              	.LBB1282:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 618              		.loc 5 47 0
 619 0064 503090E5 		ldr	r3, [r0, #80]
 620 0068 33FF2FE1 		blx	r3
 621              	.LVL47:
 622              	.LBE1282:
 623              	.LBE1281:
 624              	.LBE1283:
 625              	.LBE1284:
 626              	.LBE1285:
 627              	.LBE1286:
 122:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 628              		.loc 5 122 0
 629 006c 2D30D0E5 		ldrb	r3, [r0, #45]	@ zero_extendqisi2
 630 0070 000053E3 		cmp	r3, #0
 631 0074 0000A003 		moveq	r0, #0
 632              		.loc 5 123 0
 633 0078 1080BDE8 		pop	{r4, pc}
 634              		.cfi_endproc
 635              	.LFE3275:
 636              		.fnend
 638              		.section	.text._ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei,"ax",%progbits
 639              		.align	2
 640              		.global	_ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
 641              		.syntax unified
 642              		.arm
 643              		.fpu neon
 645              	_ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei:
 646              		.fnstart
 647              	.LFB3276:
 124:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 125:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
 126:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                         int index) {
 648              		.loc 5 126 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              	.LVL48:
 127:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const int tensor_index = ValidateTensorIndexing(
 128:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context, index, node->outputs->size, node->outputs->data);
 653              		.loc 5 128 0
 654 0000 04C091E5 		ldr	ip, [r1, #4]
 655              	.LVL49:
 656              	.LBB1295:
 657              	.LBB1296:
  77:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const int tensor_index = tensor_indices[index];
 658              		.loc 5 77 0
 659 0004 00109CE5 		ldr	r1, [ip]
 660              	.LVL50:
 661 0008 000052E3 		cmp	r2, #0
 662 000c 020051A1 		cmpge	r1, r2
 663 0010 0A0000DA 		ble	.L46
 664              	.LBB1297:
  78:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (tensor_index != kTfLiteOptionalTensor) {
 665              		.loc 5 78 0
 666 0014 02218CE0 		add	r2, ip, r2, lsl #2
 667              	.LVL51:
 668 0018 041092E5 		ldr	r1, [r2, #4]
 669              	.LVL52:
 670              	.LBE1297:
 671              	.LBE1296:
 672              	.LBE1295:
 129:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (tensor_index < 0) {
 673              		.loc 5 129 0
 674 001c 000051E3 		cmp	r1, #0
 675 0020 060000BA 		blt	.L46
 676              	.LBB1298:
 677              	.LBB1299:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 678              		.loc 5 44 0
 679 0024 083090E5 		ldr	r3, [r0, #8]
 680              	.LBE1299:
 681              	.LBE1298:
 126:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const int tensor_index = ValidateTensorIndexing(
 682              		.loc 5 126 0
 683 0028 04E02DE5 		str	lr, [sp, #-4]!
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 14, -4
 686 002c 00E0A0E1 		mov	lr, r0
 687              	.LVL53:
 688              	.LBB1307:
 689              	.LBB1304:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 690              		.loc 5 44 0
 691 0030 000053E3 		cmp	r3, #0
 692 0034 0300000A 		beq	.L44
  45:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 693              		.loc 5 45 0
 694 0038 010383E0 		add	r0, r3, r1, lsl #6
 695              	.LVL54:
 696 003c 04F09DE4 		ldr	pc, [sp], #4
 697              	.LVL55:
 698              	.L46:
 699              		.cfi_def_cfa_offset 0
 700              		.cfi_restore 14
 701              	.LBE1304:
 702              	.LBE1307:
 130:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return nullptr;
 703              		.loc 5 130 0
 704 0040 0000A0E3 		mov	r0, #0
 705              	.LVL56:
 706 0044 1EFF2FE1 		bx	lr
 707              	.LVL57:
 708              	.L44:
 709              		.cfi_def_cfa_offset 4
 710              		.cfi_offset 14, -4
 711              	.LBB1308:
 712              	.LBB1305:
 713              	.LBB1300:
 714              	.LBB1301:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 715              		.loc 5 47 0
 716 0048 503090E5 		ldr	r3, [r0, #80]
 717              	.LBE1301:
 718              	.LBE1300:
 719              	.LBE1305:
 720              	.LBE1308:
 131:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 132:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return GetTensorAtIndex(context, tensor_index);
 133:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 721              		.loc 5 133 0
 722 004c 04E09DE4 		ldr	lr, [sp], #4
 723              		.cfi_restore 14
 724              		.cfi_def_cfa_offset 0
 725              	.LBB1309:
 726              	.LBB1306:
 727              	.LBB1303:
 728              	.LBB1302:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 729              		.loc 5 47 0
 730 0050 13FF2FE1 		bx	r3
 731              	.LVL58:
 732              	.LBE1302:
 733              	.LBE1303:
 734              	.LBE1306:
 735              	.LBE1309:
 736              		.cfi_endproc
 737              	.LFE3276:
 738              		.cantunwind
 739              		.fnend
 741              		.section	.text._ZN6tflite13GetOutputSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor,"ax",%pr
 742              		.align	2
 743              		.global	_ZN6tflite13GetOutputSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor
 744              		.syntax unified
 745              		.arm
 746              		.fpu neon
 748              	_ZN6tflite13GetOutputSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:
 749              		.fnstart
 750              	.LFB3277:
 134:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 135:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
 136:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                            int index, TfLiteTensor** tensor) {
 751              		.loc 5 136 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              	.LVL59:
 756              	.LBB1319:
 137:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int tensor_index;
 138:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE_OK(
 757              		.loc 5 138 0
 758 0000 041091E5 		ldr	r1, [r1, #4]
 759              	.LVL60:
 760              	.LBE1319:
 136:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int tensor_index;
 761              		.loc 5 136 0
 762 0004 30402DE9 		push	{r4, r5, lr}
 763              		.save {r4, r5, lr}
 764              		.cfi_def_cfa_offset 12
 765              		.cfi_offset 4, -12
 766              		.cfi_offset 5, -8
 767              		.cfi_offset 14, -4
 768 0008 0040A0E1 		mov	r4, r0
 769              		.pad #12
 770 000c 0CD04DE2 		sub	sp, sp, #12
 771              		.cfi_def_cfa_offset 24
 772              	.LBB1328:
 773              		.loc 5 138 0
 774 0010 04E091E4 		ldr	lr, [r1], #4
 775              	.LVL61:
 776              	.LBB1320:
 777              	.LBB1321:
  56:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_KERNEL_LOG(const_cast<TfLiteContext*>(context),
 778              		.loc 5 56 0
 779 0014 02005EE1 		cmp	lr, r2
 780 0018 0050A0C3 		movgt	r5, #0
 781 001c 0150A0D3 		movle	r5, #1
 782 0020 A25F95E1 		orrs	r5, r5, r2, lsr #31
 783 0024 0A00001A 		bne	.L62
  62:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_KERNEL_LOG(const_cast<TfLiteContext*>(context),
 784              		.loc 5 62 0
 785 0028 021191E7 		ldr	r1, [r1, r2, lsl #2]
 786              	.LVL62:
 787 002c 010071E3 		cmn	r1, #1
 788 0030 0F00000A 		beq	.L63
 789              	.LVL63:
 790              	.LBE1321:
 791              	.LBE1320:
 792              	.LBE1328:
 793              	.LBB1329:
 794              	.LBB1330:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 795              		.loc 5 44 0
 796 0034 082090E5 		ldr	r2, [r0, #8]
 797              	.LVL64:
 798 0038 000052E3 		cmp	r2, #0
  45:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 799              		.loc 5 45 0
 800 003c 01038210 		addne	r0, r2, r1, lsl #6
 801              	.LVL65:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 802              		.loc 5 44 0
 803 0040 1100000A 		beq	.L64
 804              	.LVL66:
 805              	.L55:
 806              	.LBE1330:
 807              	.LBE1329:
 139:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context, ValidateTensorIndexingSafe(context, index, node->outputs->size,
 140:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           node->outputs->data, &tensor_index));
 141:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *tensor = GetTensorAtIndex(context, tensor_index);
 808              		.loc 5 141 0
 809 0044 000083E5 		str	r0, [r3]
 142:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 810              		.loc 5 142 0
 811 0048 0000A0E3 		mov	r0, #0
 812              	.L58:
 143:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 813              		.loc 5 143 0
 814 004c 0CD08DE2 		add	sp, sp, #12
 815              		.cfi_remember_state
 816              		.cfi_def_cfa_offset 12
 817              		@ sp needed
 818 0050 3080BDE8 		pop	{r4, r5, pc}
 819              	.LVL67:
 820              	.L62:
 821              		.cfi_restore_state
 822              	.LBB1334:
 823              	.LBB1326:
 824              	.LBB1324:
  57:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        "Invalid tensor index %d (not in [0, %d))\n", index,
 825              		.loc 5 57 0
 826 0054 001000E3 		movw	r1, #:lower16:.LC1
 827              	.LVL68:
 828 0058 144090E5 		ldr	r4, [r0, #20]
 829 005c 0E30A0E1 		mov	r3, lr
 830              	.LVL69:
 831 0060 001040E3 		movt	r1, #:upper16:.LC1
 832 0064 34FF2FE1 		blx	r4
 833              	.LVL70:
 834 0068 0100A0E3 		mov	r0, #1
 835              	.LBE1324:
 836              	.LBE1326:
 837              	.LBE1334:
 838              		.loc 5 143 0
 839 006c 0CD08DE2 		add	sp, sp, #12
 840              		.cfi_remember_state
 841              		.cfi_def_cfa_offset 12
 842              		@ sp needed
 843 0070 3080BDE8 		pop	{r4, r5, pc}
 844              	.LVL71:
 845              	.L63:
 846              		.cfi_restore_state
 847              	.LBB1335:
 848              	.LBB1327:
 849              	.LBB1325:
 850              	.LBB1322:
 851              	.LBB1323:
  63:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        "Tensor at index %d was optional but was expected\n",
 852              		.loc 5 63 0
 853 0074 001000E3 		movw	r1, #:lower16:.LC2
 854 0078 143090E5 		ldr	r3, [r0, #20]
 855              	.LVL72:
 856 007c 001040E3 		movt	r1, #:upper16:.LC2
 857 0080 33FF2FE1 		blx	r3
 858              	.LVL73:
 859 0084 0100A0E3 		mov	r0, #1
 860 0088 EFFFFFEA 		b	.L58
 861              	.LVL74:
 862              	.L64:
 863              	.LBE1323:
 864              	.LBE1322:
 865              	.LBE1325:
 866              	.LBE1327:
 867              	.LBE1335:
 868              	.LBB1336:
 869              	.LBB1333:
 870              	.LBB1331:
 871              	.LBB1332:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 872              		.loc 5 47 0
 873 008c 502094E5 		ldr	r2, [r4, #80]
 874 0090 04308DE5 		str	r3, [sp, #4]
 875              	.LVL75:
 876 0094 32FF2FE1 		blx	r2
 877              	.LVL76:
 878 0098 04309DE5 		ldr	r3, [sp, #4]
 879              	.LVL77:
 880 009c E8FFFFEA 		b	.L55
 881              	.LBE1332:
 882              	.LBE1331:
 883              	.LBE1333:
 884              	.LBE1336:
 885              		.cfi_endproc
 886              	.LFE3277:
 887              		.fnend
 889              		.section	.text._ZN6tflite22GetOptionalInputTensorEPK13TfLiteContextPK10TfLiteNodei,"ax",%progbits
 890              		.align	2
 891              		.global	_ZN6tflite22GetOptionalInputTensorEPK13TfLiteContextPK10TfLiteNodei
 892              		.syntax unified
 893              		.arm
 894              		.fpu neon
 896              	_ZN6tflite22GetOptionalInputTensorEPK13TfLiteContextPK10TfLiteNodei:
 897              		.fnstart
 898              	.LFB3278:
 144:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 145:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
 146:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                            const TfLiteNode* node, int index) {
 899              		.loc 5 146 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              		@ link register save eliminated.
 904              	.LVL78:
 905 0000 001091E5 		ldr	r1, [r1]
 906              	.LVL79:
 907              	.LBB1349:
 908              	.LBB1350:
 909              	.LBB1351:
 910              	.LBB1352:
 911              	.LBB1353:
  77:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const int tensor_index = tensor_indices[index];
 912              		.loc 5 77 0
 913 0004 003091E5 		ldr	r3, [r1]
 914 0008 030052E1 		cmp	r2, r3
 915 000c 0130A0B3 		movlt	r3, #1
 916 0010 0030A0A3 		movge	r3, #0
 917 0014 000052E3 		cmp	r2, #0
 918 0018 0030A0B3 		movlt	r3, #0
 919 001c 000053E3 		cmp	r3, #0
 920 0020 0800000A 		beq	.L69
 921              	.LBB1354:
  78:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (tensor_index != kTfLiteOptionalTensor) {
 922              		.loc 5 78 0
 923 0024 021181E0 		add	r1, r1, r2, lsl #2
 924              	.LVL80:
 925 0028 041091E5 		ldr	r1, [r1, #4]
 926              	.LVL81:
 927              	.LBE1354:
 928              	.LBE1353:
 929              	.LBE1352:
  90:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return nullptr;
 930              		.loc 5 90 0
 931 002c 000051E3 		cmp	r1, #0
 932 0030 040000BA 		blt	.L69
 933              	.LVL82:
 934              	.LBB1355:
 935              	.LBB1356:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 936              		.loc 5 44 0
 937 0034 083090E5 		ldr	r3, [r0, #8]
 938 0038 000053E3 		cmp	r3, #0
 939 003c 0300000A 		beq	.L67
  45:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 940              		.loc 5 45 0
 941 0040 010383E0 		add	r0, r3, r1, lsl #6
 942              	.LVL83:
 943 0044 1EFF2FE1 		bx	lr
 944              	.LVL84:
 945              	.L69:
 946              	.LBE1356:
 947              	.LBE1355:
  91:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 948              		.loc 5 91 0
 949 0048 0000A0E3 		mov	r0, #0
 950              	.LVL85:
 951              	.LBE1351:
 952              	.LBE1350:
 953              	.LBE1349:
 147:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return GetInput(context, node, index);
 148:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 954              		.loc 5 148 0
 955 004c 1EFF2FE1 		bx	lr
 956              	.LVL86:
 957              	.L67:
 958              	.LBB1363:
 959              	.LBB1362:
 960              	.LBB1361:
 961              	.LBB1360:
 962              	.LBB1359:
 963              	.LBB1357:
 964              	.LBB1358:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 965              		.loc 5 47 0
 966 0050 503090E5 		ldr	r3, [r0, #80]
 967 0054 13FF2FE1 		bx	r3
 968              	.LVL87:
 969              	.LBE1358:
 970              	.LBE1357:
 971              	.LBE1359:
 972              	.LBE1360:
 973              	.LBE1361:
 974              	.LBE1362:
 975              	.LBE1363:
 976              		.cfi_endproc
 977              	.LFE3278:
 978              		.cantunwind
 979              		.fnend
 981              		.section	.text._ZN6tflite12GetTemporaryEP13TfLiteContextPK10TfLiteNodei,"ax",%progbits
 982              		.align	2
 983              		.global	_ZN6tflite12GetTemporaryEP13TfLiteContextPK10TfLiteNodei
 984              		.syntax unified
 985              		.arm
 986              		.fpu neon
 988              	_ZN6tflite12GetTemporaryEP13TfLiteContextPK10TfLiteNodei:
 989              		.fnstart
 990              	.LFB3279:
 149:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 150:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #ifndef TF_LITE_STATIC_MEMORY
 151:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 152:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                            int index) {
 991              		.loc 5 152 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              	.LVL88:
 153:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const int tensor_index = ValidateTensorIndexing(
 154:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context, index, node->temporaries->size, node->temporaries->data);
 996              		.loc 5 154 0
 997 0000 0CC091E5 		ldr	ip, [r1, #12]
 998              	.LVL89:
 999              	.LBB1372:
 1000              	.LBB1373:
  77:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const int tensor_index = tensor_indices[index];
 1001              		.loc 5 77 0
 1002 0004 00109CE5 		ldr	r1, [ip]
 1003              	.LVL90:
 1004 0008 000052E3 		cmp	r2, #0
 1005 000c 020051A1 		cmpge	r1, r2
 1006 0010 0A0000DA 		ble	.L74
 1007              	.LBB1374:
  78:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (tensor_index != kTfLiteOptionalTensor) {
 1008              		.loc 5 78 0
 1009 0014 02218CE0 		add	r2, ip, r2, lsl #2
 1010              	.LVL91:
 1011 0018 041092E5 		ldr	r1, [r2, #4]
 1012              	.LVL92:
 1013              	.LBE1374:
 1014              	.LBE1373:
 1015              	.LBE1372:
 155:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (tensor_index < 0) {
 1016              		.loc 5 155 0
 1017 001c 000051E3 		cmp	r1, #0
 1018 0020 060000BA 		blt	.L74
 1019              	.LBB1375:
 1020              	.LBB1376:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 1021              		.loc 5 44 0
 1022 0024 083090E5 		ldr	r3, [r0, #8]
 1023              	.LBE1376:
 1024              	.LBE1375:
 152:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const int tensor_index = ValidateTensorIndexing(
 1025              		.loc 5 152 0
 1026 0028 04E02DE5 		str	lr, [sp, #-4]!
 1027              		.cfi_def_cfa_offset 4
 1028              		.cfi_offset 14, -4
 1029 002c 00E0A0E1 		mov	lr, r0
 1030              	.LVL93:
 1031              	.LBB1384:
 1032              	.LBB1381:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 1033              		.loc 5 44 0
 1034 0030 000053E3 		cmp	r3, #0
 1035 0034 0300000A 		beq	.L72
  45:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 1036              		.loc 5 45 0
 1037 0038 010383E0 		add	r0, r3, r1, lsl #6
 1038              	.LVL94:
 1039 003c 04F09DE4 		ldr	pc, [sp], #4
 1040              	.LVL95:
 1041              	.L74:
 1042              		.cfi_def_cfa_offset 0
 1043              		.cfi_restore 14
 1044              	.LBE1381:
 1045              	.LBE1384:
 156:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return nullptr;
 1046              		.loc 5 156 0
 1047 0040 0000A0E3 		mov	r0, #0
 1048              	.LVL96:
 1049 0044 1EFF2FE1 		bx	lr
 1050              	.LVL97:
 1051              	.L72:
 1052              		.cfi_def_cfa_offset 4
 1053              		.cfi_offset 14, -4
 1054              	.LBB1385:
 1055              	.LBB1382:
 1056              	.LBB1377:
 1057              	.LBB1378:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 1058              		.loc 5 47 0
 1059 0048 503090E5 		ldr	r3, [r0, #80]
 1060              	.LBE1378:
 1061              	.LBE1377:
 1062              	.LBE1382:
 1063              	.LBE1385:
 157:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 158:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return GetTensorAtIndex(context, tensor_index);
 159:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 1064              		.loc 5 159 0
 1065 004c 04E09DE4 		ldr	lr, [sp], #4
 1066              		.cfi_restore 14
 1067              		.cfi_def_cfa_offset 0
 1068              	.LBB1386:
 1069              	.LBB1383:
 1070              	.LBB1380:
 1071              	.LBB1379:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 1072              		.loc 5 47 0
 1073 0050 13FF2FE1 		bx	r3
 1074              	.LVL98:
 1075              	.LBE1379:
 1076              	.LBE1380:
 1077              	.LBE1383:
 1078              	.LBE1386:
 1079              		.cfi_endproc
 1080              	.LFE3279:
 1081              		.cantunwind
 1082              		.fnend
 1084              		.section	.text._ZN6tflite16GetTemporarySafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor,"ax",
 1085              		.align	2
 1086              		.global	_ZN6tflite16GetTemporarySafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor
 1087              		.syntax unified
 1088              		.arm
 1089              		.fpu neon
 1091              	_ZN6tflite16GetTemporarySafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:
 1092              		.fnstart
 1093              	.LFB3280:
 160:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 161:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 162:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                               const TfLiteNode* node, int index,
 163:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                               TfLiteTensor** tensor) {
 1094              		.loc 5 163 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 8
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              	.LVL99:
 1099              	.LBB1396:
 164:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int tensor_index;
 165:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE_OK(context, ValidateTensorIndexingSafe(
 1100              		.loc 5 165 0
 1101 0000 0C1091E5 		ldr	r1, [r1, #12]
 1102              	.LVL100:
 1103              	.LBE1396:
 163:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int tensor_index;
 1104              		.loc 5 163 0
 1105 0004 30402DE9 		push	{r4, r5, lr}
 1106              		.save {r4, r5, lr}
 1107              		.cfi_def_cfa_offset 12
 1108              		.cfi_offset 4, -12
 1109              		.cfi_offset 5, -8
 1110              		.cfi_offset 14, -4
 1111 0008 0040A0E1 		mov	r4, r0
 1112              		.pad #12
 1113 000c 0CD04DE2 		sub	sp, sp, #12
 1114              		.cfi_def_cfa_offset 24
 1115              	.LBB1405:
 1116              		.loc 5 165 0
 1117 0010 04E091E4 		ldr	lr, [r1], #4
 1118              	.LVL101:
 1119              	.LBB1397:
 1120              	.LBB1398:
  56:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_KERNEL_LOG(const_cast<TfLiteContext*>(context),
 1121              		.loc 5 56 0
 1122 0014 02005EE1 		cmp	lr, r2
 1123 0018 0050A0C3 		movgt	r5, #0
 1124 001c 0150A0D3 		movle	r5, #1
 1125 0020 A25F95E1 		orrs	r5, r5, r2, lsr #31
 1126 0024 0A00001A 		bne	.L90
  62:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_KERNEL_LOG(const_cast<TfLiteContext*>(context),
 1127              		.loc 5 62 0
 1128 0028 021191E7 		ldr	r1, [r1, r2, lsl #2]
 1129              	.LVL102:
 1130 002c 010071E3 		cmn	r1, #1
 1131 0030 0F00000A 		beq	.L91
 1132              	.LVL103:
 1133              	.LBE1398:
 1134              	.LBE1397:
 1135              	.LBE1405:
 1136              	.LBB1406:
 1137              	.LBB1407:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 1138              		.loc 5 44 0
 1139 0034 082090E5 		ldr	r2, [r0, #8]
 1140              	.LVL104:
 1141 0038 000052E3 		cmp	r2, #0
  45:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 1142              		.loc 5 45 0
 1143 003c 01038210 		addne	r0, r2, r1, lsl #6
 1144              	.LVL105:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 1145              		.loc 5 44 0
 1146 0040 1100000A 		beq	.L92
 1147              	.LVL106:
 1148              	.L83:
 1149              	.LBE1407:
 1150              	.LBE1406:
 166:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                  context, index, node->temporaries->size,
 167:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                  node->temporaries->data, &tensor_index));
 168:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *tensor = GetTensorAtIndex(context, tensor_index);
 1151              		.loc 5 168 0
 1152 0044 000083E5 		str	r0, [r3]
 169:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 1153              		.loc 5 169 0
 1154 0048 0000A0E3 		mov	r0, #0
 1155              	.L86:
 170:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 1156              		.loc 5 170 0
 1157 004c 0CD08DE2 		add	sp, sp, #12
 1158              		.cfi_remember_state
 1159              		.cfi_def_cfa_offset 12
 1160              		@ sp needed
 1161 0050 3080BDE8 		pop	{r4, r5, pc}
 1162              	.LVL107:
 1163              	.L90:
 1164              		.cfi_restore_state
 1165              	.LBB1411:
 1166              	.LBB1403:
 1167              	.LBB1401:
  57:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        "Invalid tensor index %d (not in [0, %d))\n", index,
 1168              		.loc 5 57 0
 1169 0054 001000E3 		movw	r1, #:lower16:.LC1
 1170              	.LVL108:
 1171 0058 144090E5 		ldr	r4, [r0, #20]
 1172 005c 0E30A0E1 		mov	r3, lr
 1173              	.LVL109:
 1174 0060 001040E3 		movt	r1, #:upper16:.LC1
 1175 0064 34FF2FE1 		blx	r4
 1176              	.LVL110:
 1177 0068 0100A0E3 		mov	r0, #1
 1178              	.LBE1401:
 1179              	.LBE1403:
 1180              	.LBE1411:
 1181              		.loc 5 170 0
 1182 006c 0CD08DE2 		add	sp, sp, #12
 1183              		.cfi_remember_state
 1184              		.cfi_def_cfa_offset 12
 1185              		@ sp needed
 1186 0070 3080BDE8 		pop	{r4, r5, pc}
 1187              	.LVL111:
 1188              	.L91:
 1189              		.cfi_restore_state
 1190              	.LBB1412:
 1191              	.LBB1404:
 1192              	.LBB1402:
 1193              	.LBB1399:
 1194              	.LBB1400:
  63:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        "Tensor at index %d was optional but was expected\n",
 1195              		.loc 5 63 0
 1196 0074 001000E3 		movw	r1, #:lower16:.LC2
 1197 0078 143090E5 		ldr	r3, [r0, #20]
 1198              	.LVL112:
 1199 007c 001040E3 		movt	r1, #:upper16:.LC2
 1200 0080 33FF2FE1 		blx	r3
 1201              	.LVL113:
 1202 0084 0100A0E3 		mov	r0, #1
 1203 0088 EFFFFFEA 		b	.L86
 1204              	.LVL114:
 1205              	.L92:
 1206              	.LBE1400:
 1207              	.LBE1399:
 1208              	.LBE1402:
 1209              	.LBE1404:
 1210              	.LBE1412:
 1211              	.LBB1413:
 1212              	.LBB1410:
 1213              	.LBB1408:
 1214              	.LBB1409:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 1215              		.loc 5 47 0
 1216 008c 502094E5 		ldr	r2, [r4, #80]
 1217 0090 04308DE5 		str	r3, [sp, #4]
 1218              	.LVL115:
 1219 0094 32FF2FE1 		blx	r2
 1220              	.LVL116:
 1221 0098 04309DE5 		ldr	r3, [sp, #4]
 1222              	.LVL117:
 1223 009c E8FFFFEA 		b	.L83
 1224              	.LBE1409:
 1225              	.LBE1408:
 1226              	.LBE1410:
 1227              	.LBE1413:
 1228              		.cfi_endproc
 1229              	.LFE3280:
 1230              		.fnend
 1232              		.section	.text._ZN6tflite16GetIntermediatesEP13TfLiteContextPK10TfLiteNodei,"ax",%progbits
 1233              		.align	2
 1234              		.global	_ZN6tflite16GetIntermediatesEP13TfLiteContextPK10TfLiteNodei
 1235              		.syntax unified
 1236              		.arm
 1237              		.fpu neon
 1239              	_ZN6tflite16GetIntermediatesEP13TfLiteContextPK10TfLiteNodei:
 1240              		.fnstart
 1241              	.LFB3281:
 171:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 172:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 173:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                      const TfLiteNode* node, int index) {
 1242              		.loc 5 173 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246              	.LVL118:
 174:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const int tensor_index = ValidateTensorIndexing(
 175:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context, index, node->intermediates->size, node->intermediates->data);
 1247              		.loc 5 175 0
 1248 0000 08C091E5 		ldr	ip, [r1, #8]
 1249              	.LVL119:
 1250              	.LBB1422:
 1251              	.LBB1423:
  77:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const int tensor_index = tensor_indices[index];
 1252              		.loc 5 77 0
 1253 0004 00109CE5 		ldr	r1, [ip]
 1254              	.LVL120:
 1255 0008 000052E3 		cmp	r2, #0
 1256 000c 020051A1 		cmpge	r1, r2
 1257 0010 0A0000DA 		ble	.L97
 1258              	.LBB1424:
  78:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (tensor_index != kTfLiteOptionalTensor) {
 1259              		.loc 5 78 0
 1260 0014 02218CE0 		add	r2, ip, r2, lsl #2
 1261              	.LVL121:
 1262 0018 041092E5 		ldr	r1, [r2, #4]
 1263              	.LVL122:
 1264              	.LBE1424:
 1265              	.LBE1423:
 1266              	.LBE1422:
 176:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (tensor_index < 0) {
 1267              		.loc 5 176 0
 1268 001c 000051E3 		cmp	r1, #0
 1269 0020 060000BA 		blt	.L97
 1270              	.LBB1425:
 1271              	.LBB1426:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 1272              		.loc 5 44 0
 1273 0024 083090E5 		ldr	r3, [r0, #8]
 1274              	.LBE1426:
 1275              	.LBE1425:
 173:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const int tensor_index = ValidateTensorIndexing(
 1276              		.loc 5 173 0
 1277 0028 04E02DE5 		str	lr, [sp, #-4]!
 1278              		.cfi_def_cfa_offset 4
 1279              		.cfi_offset 14, -4
 1280 002c 00E0A0E1 		mov	lr, r0
 1281              	.LVL123:
 1282              	.LBB1434:
 1283              	.LBB1431:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 1284              		.loc 5 44 0
 1285 0030 000053E3 		cmp	r3, #0
 1286 0034 0300000A 		beq	.L95
  45:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 1287              		.loc 5 45 0
 1288 0038 010383E0 		add	r0, r3, r1, lsl #6
 1289              	.LVL124:
 1290 003c 04F09DE4 		ldr	pc, [sp], #4
 1291              	.LVL125:
 1292              	.L97:
 1293              		.cfi_def_cfa_offset 0
 1294              		.cfi_restore 14
 1295              	.LBE1431:
 1296              	.LBE1434:
 177:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return nullptr;
 1297              		.loc 5 177 0
 1298 0040 0000A0E3 		mov	r0, #0
 1299              	.LVL126:
 1300 0044 1EFF2FE1 		bx	lr
 1301              	.LVL127:
 1302              	.L95:
 1303              		.cfi_def_cfa_offset 4
 1304              		.cfi_offset 14, -4
 1305              	.LBB1435:
 1306              	.LBB1432:
 1307              	.LBB1427:
 1308              	.LBB1428:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 1309              		.loc 5 47 0
 1310 0048 503090E5 		ldr	r3, [r0, #80]
 1311              	.LBE1428:
 1312              	.LBE1427:
 1313              	.LBE1432:
 1314              	.LBE1435:
 178:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 179:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return GetTensorAtIndex(context, tensor_index);
 180:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 1315              		.loc 5 180 0
 1316 004c 04E09DE4 		ldr	lr, [sp], #4
 1317              		.cfi_restore 14
 1318              		.cfi_def_cfa_offset 0
 1319              	.LBB1436:
 1320              	.LBB1433:
 1321              	.LBB1430:
 1322              	.LBB1429:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 1323              		.loc 5 47 0
 1324 0050 13FF2FE1 		bx	r3
 1325              	.LVL128:
 1326              	.LBE1429:
 1327              	.LBE1430:
 1328              	.LBE1433:
 1329              	.LBE1436:
 1330              		.cfi_endproc
 1331              	.LFE3281:
 1332              		.cantunwind
 1333              		.fnend
 1335              		.section	.text._ZN6tflite20GetIntermediatesSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor,"
 1336              		.align	2
 1337              		.global	_ZN6tflite20GetIntermediatesSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor
 1338              		.syntax unified
 1339              		.arm
 1340              		.fpu neon
 1342              	_ZN6tflite20GetIntermediatesSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:
 1343              		.fnstart
 1344              	.LFB3282:
 181:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 182:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 183:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                   const TfLiteNode* node, int index,
 184:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                   TfLiteTensor** tensor) {
 1345              		.loc 5 184 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 8
 1348              		@ frame_needed = 0, uses_anonymous_args = 0
 1349              	.LVL129:
 1350              	.LBB1446:
 185:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int tensor_index;
 186:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE_OK(context, ValidateTensorIndexingSafe(
 1351              		.loc 5 186 0
 1352 0000 081091E5 		ldr	r1, [r1, #8]
 1353              	.LVL130:
 1354              	.LBE1446:
 184:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int tensor_index;
 1355              		.loc 5 184 0
 1356 0004 30402DE9 		push	{r4, r5, lr}
 1357              		.save {r4, r5, lr}
 1358              		.cfi_def_cfa_offset 12
 1359              		.cfi_offset 4, -12
 1360              		.cfi_offset 5, -8
 1361              		.cfi_offset 14, -4
 1362 0008 0040A0E1 		mov	r4, r0
 1363              		.pad #12
 1364 000c 0CD04DE2 		sub	sp, sp, #12
 1365              		.cfi_def_cfa_offset 24
 1366              	.LBB1455:
 1367              		.loc 5 186 0
 1368 0010 04E091E4 		ldr	lr, [r1], #4
 1369              	.LVL131:
 1370              	.LBB1447:
 1371              	.LBB1448:
  56:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_KERNEL_LOG(const_cast<TfLiteContext*>(context),
 1372              		.loc 5 56 0
 1373 0014 02005EE1 		cmp	lr, r2
 1374 0018 0050A0C3 		movgt	r5, #0
 1375 001c 0150A0D3 		movle	r5, #1
 1376 0020 A25F95E1 		orrs	r5, r5, r2, lsr #31
 1377 0024 0A00001A 		bne	.L113
  62:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_KERNEL_LOG(const_cast<TfLiteContext*>(context),
 1378              		.loc 5 62 0
 1379 0028 021191E7 		ldr	r1, [r1, r2, lsl #2]
 1380              	.LVL132:
 1381 002c 010071E3 		cmn	r1, #1
 1382 0030 0F00000A 		beq	.L114
 1383              	.LVL133:
 1384              	.LBE1448:
 1385              	.LBE1447:
 1386              	.LBE1455:
 1387              	.LBB1456:
 1388              	.LBB1457:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 1389              		.loc 5 44 0
 1390 0034 082090E5 		ldr	r2, [r0, #8]
 1391              	.LVL134:
 1392 0038 000052E3 		cmp	r2, #0
  45:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 1393              		.loc 5 45 0
 1394 003c 01038210 		addne	r0, r2, r1, lsl #6
 1395              	.LVL135:
  44:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return &context->tensors[tensor_index];
 1396              		.loc 5 44 0
 1397 0040 1100000A 		beq	.L115
 1398              	.LVL136:
 1399              	.L106:
 1400              	.LBE1457:
 1401              	.LBE1456:
 187:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                  context, index, node->intermediates->size,
 188:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                  node->intermediates->data, &tensor_index));
 189:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *tensor = GetTensorAtIndex(context, tensor_index);
 1402              		.loc 5 189 0
 1403 0044 000083E5 		str	r0, [r3]
 190:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 1404              		.loc 5 190 0
 1405 0048 0000A0E3 		mov	r0, #0
 1406              	.L109:
 191:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 1407              		.loc 5 191 0
 1408 004c 0CD08DE2 		add	sp, sp, #12
 1409              		.cfi_remember_state
 1410              		.cfi_def_cfa_offset 12
 1411              		@ sp needed
 1412 0050 3080BDE8 		pop	{r4, r5, pc}
 1413              	.LVL137:
 1414              	.L113:
 1415              		.cfi_restore_state
 1416              	.LBB1461:
 1417              	.LBB1453:
 1418              	.LBB1451:
  57:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        "Invalid tensor index %d (not in [0, %d))\n", index,
 1419              		.loc 5 57 0
 1420 0054 001000E3 		movw	r1, #:lower16:.LC1
 1421              	.LVL138:
 1422 0058 144090E5 		ldr	r4, [r0, #20]
 1423 005c 0E30A0E1 		mov	r3, lr
 1424              	.LVL139:
 1425 0060 001040E3 		movt	r1, #:upper16:.LC1
 1426 0064 34FF2FE1 		blx	r4
 1427              	.LVL140:
 1428 0068 0100A0E3 		mov	r0, #1
 1429              	.LBE1451:
 1430              	.LBE1453:
 1431              	.LBE1461:
 1432              		.loc 5 191 0
 1433 006c 0CD08DE2 		add	sp, sp, #12
 1434              		.cfi_remember_state
 1435              		.cfi_def_cfa_offset 12
 1436              		@ sp needed
 1437 0070 3080BDE8 		pop	{r4, r5, pc}
 1438              	.LVL141:
 1439              	.L114:
 1440              		.cfi_restore_state
 1441              	.LBB1462:
 1442              	.LBB1454:
 1443              	.LBB1452:
 1444              	.LBB1449:
 1445              	.LBB1450:
  63:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                        "Tensor at index %d was optional but was expected\n",
 1446              		.loc 5 63 0
 1447 0074 001000E3 		movw	r1, #:lower16:.LC2
 1448 0078 143090E5 		ldr	r3, [r0, #20]
 1449              	.LVL142:
 1450 007c 001040E3 		movt	r1, #:upper16:.LC2
 1451 0080 33FF2FE1 		blx	r3
 1452              	.LVL143:
 1453 0084 0100A0E3 		mov	r0, #1
 1454 0088 EFFFFFEA 		b	.L109
 1455              	.LVL144:
 1456              	.L115:
 1457              	.LBE1450:
 1458              	.LBE1449:
 1459              	.LBE1452:
 1460              	.LBE1454:
 1461              	.LBE1462:
 1462              	.LBB1463:
 1463              	.LBB1460:
 1464              	.LBB1458:
 1465              	.LBB1459:
  47:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 1466              		.loc 5 47 0
 1467 008c 502094E5 		ldr	r2, [r4, #80]
 1468 0090 04308DE5 		str	r3, [sp, #4]
 1469              	.LVL145:
 1470 0094 32FF2FE1 		blx	r2
 1471              	.LVL146:
 1472 0098 04309DE5 		ldr	r3, [sp, #4]
 1473              	.LVL147:
 1474 009c E8FFFFEA 		b	.L106
 1475              	.LBE1459:
 1476              	.LBE1458:
 1477              	.LBE1460:
 1478              	.LBE1463:
 1479              		.cfi_endproc
 1480              	.LFE3282:
 1481              		.fnend
 1483              		.section	.text._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_
 1484              		.align	2
 1485              		.global	_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd
 1486              		.syntax unified
 1487              		.arm
 1488              		.fpu neon
 1490              	_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd:
 1491              		.fnstart
 1492              	.LFB3285:
 192:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #endif  // TF_LITE_STATIC_MEMORY
 193:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 194:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // Per-axis
 195:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus PopulateConvolutionQuantizationParams(
 196:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TfLiteContext* context, const TfLiteTensor* input,
 197:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const TfLiteTensor* filter, const TfLiteTensor* bias, TfLiteTensor* output,
 198:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const TfLiteFusedActivation& activation, int32_t* multiplier, int* shift,
 199:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int32_t* output_activation_min, int32_t* output_activation_max,
 200:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int32_t* per_channel_multiplier, int32_t* per_channel_shift) {
 201:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const auto* affine_quantization =
 202:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       reinterpret_cast<TfLiteAffineQuantization*>(filter->quantization.params);
 203:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return PopulateConvolutionQuantizationParams(
 204:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context, input, filter, bias, output, activation, multiplier, shift,
 205:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       output_activation_min, output_activation_max, per_channel_multiplier,
 206:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       per_channel_shift, affine_quantization->scale->size);
 207:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 208:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 209:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // Per-axis & per-tensor
 210:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus PopulateConvolutionQuantizationParams(
 211:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TfLiteContext* context, const TfLiteTensor* input,
 212:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const TfLiteTensor* filter, const TfLiteTensor* bias, TfLiteTensor* output,
 213:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const TfLiteFusedActivation& activation, int32_t* multiplier, int* shift,
 214:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int32_t* output_activation_min, int32_t* output_activation_max,
 215:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int32_t* per_channel_multiplier, int32_t* per_channel_shift,
 216:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int num_channels) {
 217:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE_EQ(context, input->quantization.type,
 218:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 219:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE_EQ(context, filter->quantization.type,
 220:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 221:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // TODO(jianlijianli): Enable bias type check and bias scale == input scale
 222:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // * filter scale for each channel in affine quantization once bias
 223:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // quantization is properly populated.
 224:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // TF_LITE_ENSURE_EQ(context, bias->quantization.type,
 225:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // kTfLiteAffineQuantization);
 226:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 227:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // Check data type.
 228:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const auto* affine_quantization =
 229:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       reinterpret_cast<TfLiteAffineQuantization*>(filter->quantization.params);
 230:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, affine_quantization);
 231:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale);
 232:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const bool is_per_channel = affine_quantization->scale->size > 1;
 233:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (is_per_channel) {
 234:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     //  Currently only Int8/Int16 is supported for per channel quantization.
 235:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE(context,
 236:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                    input->type == kTfLiteInt8 || input->type == kTfLiteInt16);
 237:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_EQ(context, filter->type, kTfLiteInt8);
 238:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_EQ(context, affine_quantization->scale->size, num_channels);
 239:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_EQ(
 240:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         context, num_channels,
 241:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         filter->dims->data[affine_quantization->quantized_dimension]);
 242:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 243:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 244:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // Populate multiplier and shift using affine quantization.
 245:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const float input_scale = input->params.scale;
 246:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const float output_scale = output->params.scale;
 247:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const float* filter_scales = affine_quantization->scale->data;
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   for (int i = 0; i < num_channels; ++i) {
 249:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 250:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // quantization dimension (channels_out).
 251:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const float scale = is_per_channel ? filter_scales[i] : filter_scales[0];
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double filter_scale = static_cast<double>(scale);
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 254:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 255:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           static_cast<double>(output_scale);
 256:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int32_t significand;
 257:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int channel_shift;
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     QuantizeMultiplier(effective_output_scale, &significand, &channel_shift);
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 261:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 262:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 263:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // Populate scalar quantization parameters.
 264:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // This check on legacy quantization parameters is kept only for backward
 265:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // compatibility.
 266:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (input->type == kTfLiteUInt8) {
 267:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // Check bias scale == input scale * filter scale.
 268:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     double real_multiplier = 0.0;
 269:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_STATUS(GetQuantizedConvolutionMultipler(
 270:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         context, input, filter, bias, output, &real_multiplier));
 271:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int exponent;
 272:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 273:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // Populate quantization parameters with multiplier and shift.
 274:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     QuantizeMultiplier(real_multiplier, multiplier, &exponent);
 275:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *shift = -exponent;
 276:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 277:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (input->type == kTfLiteInt8 || input->type == kTfLiteUInt8 ||
 278:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       input->type == kTfLiteInt16) {
 279:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_STATUS(CalculateActivationRangeQuantized(
 280:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         context, activation, output, output_activation_min,
 281:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         output_activation_max));
 282:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 283:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 284:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 285:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 286:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus GetQuantizedConvolutionMultipler(TfLiteContext* context,
 287:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                               const TfLiteTensor* input,
 288:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                               const TfLiteTensor* filter,
 289:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                               const TfLiteTensor* bias,
 290:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                               TfLiteTensor* output,
 291:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                               double* multiplier) {
 1493              		.loc 5 291 0
 1494              		.cfi_startproc
 1495              		@ args = 8, pretend = 0, frame = 0
 1496              		@ frame_needed = 0, uses_anonymous_args = 0
 1497              	.LVL148:
 292:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const double input_product_scale = static_cast<double>(input->params.scale) *
 293:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                      static_cast<double>(filter->params.scale);
 1498              		.loc 5 293 0
 1499 0000 036A92ED 		vldr.32	s12, [r2, #12]
 1500              	.LBB1486:
 294:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // The following conditions must be guaranteed by the training pipeline.
 295:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (bias) {
 1501              		.loc 5 295 0
 1502 0004 000053E3 		cmp	r3, #0
 1503              	.LBE1486:
 292:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const double input_product_scale = static_cast<double>(input->params.scale) *
 1504              		.loc 5 292 0
 1505 0008 037AD1ED 		vldr.32	s15, [r1, #12]
 291:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const double input_product_scale = static_cast<double>(input->params.scale) *
 1506              		.loc 5 291 0
 1507 000c 00C0A0E1 		mov	ip, r0
 1508 0010 10402DE9 		push	{r4, lr}
 1509              		.save {r4, lr}
 1510              		.cfi_def_cfa_offset 8
 1511              		.cfi_offset 4, -8
 1512              		.cfi_offset 14, -4
 1513              		.pad #8
 1514 0014 08D04DE2 		sub	sp, sp, #8
 1515              		.cfi_def_cfa_offset 16
 291:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const double input_product_scale = static_cast<double>(input->params.scale) *
 1516              		.loc 5 291 0
 1517 0018 10209DE5 		ldr	r2, [sp, #16]
 1518              	.LVL149:
 292:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const double input_product_scale = static_cast<double>(input->params.scale) *
 1519              		.loc 5 292 0
 1520 001c E70AF7EE 		vcvt.f64.f32	d16, s15
 293:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // The following conditions must be guaranteed by the training pipeline.
 1521              		.loc 5 293 0
 1522 0020 C61AF7EE 		vcvt.f64.f32	d17, s12
 1523 0024 A10B60EE 		vmul.f64	d16, d16, d17
 1524              	.LVL150:
 1525              	.LBB1490:
 1526              		.loc 5 295 0
 1527 0028 0A00000A 		beq	.L117
 1528              	.LVL151:
 1529              	.LBB1487:
 296:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double bias_scale = static_cast<double>(bias->params.scale);
 1530              		.loc 5 296 0
 1531 002c 036AD3ED 		vldr.32	s13, [r3, #12]
 297:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // Here we're making sure the input_product_scale & bias_scale are about the
 298:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // same. Since we have:
 299:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // (output - output_zp) * output_scale =
 300:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // input_product_scale * input_product + bias * bias_scale ---- (0)
 301:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     //
 302:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // (0) equals:
 303:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // (input_product + bias) * input_product_scale ----- (1)
 304:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     //           +
 305:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // bias * (bias_scale - input_product_scale)   ------ (2)
 306:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     //
 307:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // For the real kernel computation, we're doing (1), so we really need to
 308:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // make sure (2) has minimum impact on the output, so:
 309:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // bias * (bias_scale - input_product_scale) / output_scale should be
 310:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // a small number for an integer.
 311:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // Since normally bias should be within a small range.
 312:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // We should expect (bias_scale - input_product_scale) / output_scale to
 313:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // be a small number like 0.02.
 314:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double scale_diff = std::abs(input_product_scale - bias_scale);
 315:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double output_scale = static_cast<double>(output->params.scale);
 1532              		.loc 5 315 0
 1533 0030 037A92ED 		vldr.32	s14, [r2, #12]
 316:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 317:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE(context, scale_diff / output_scale <= 0.02);
 1534              		.loc 5 317 0
 1535 0034 2F3BDFED 		vldr.64	d19, .L126
 296:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // Here we're making sure the input_product_scale & bias_scale are about the
 1536              		.loc 5 296 0
 1537 0038 E62AF7EE 		vcvt.f64.f32	d18, s13
 315:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 1538              		.loc 5 315 0
 1539 003c C71AF7EE 		vcvt.f64.f32	d17, s14
 314:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double output_scale = static_cast<double>(output->params.scale);
 1540              		.loc 5 314 0
 1541 0040 E20B70EE 		vsub.f64	d16, d16, d18
 1542              	.LVL152:
 1543              	.LBB1488:
 1544              	.LBB1489:
 1545              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef _GLIBCXX_CMATH
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #define _GLIBCXX_CMATH 1
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef abs
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR double
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(double __x)
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabs(__x); }
 1546              		.loc 6 86 0
 1547 0044 E00BF0EE 		vabs.f64	d16, d16
 1548              	.LBE1489:
 1549              	.LBE1488:
 1550              		.loc 5 317 0
 1551 0048 A12BC0EE 		vdiv.f64	d18, d16, d17
 1552 004c E32BF4EE 		vcmpe.f64	d18, d19
 1553 0050 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1554 0054 0C00008A 		bhi	.L124
 1555              	.LVL153:
 1556              	.L117:
 1557              	.LBE1487:
 1558              	.LBE1490:
 1559              	.LBB1491:
 1560              	.LBB1492:
 318:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 319:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return GetQuantizedConvolutionMultipler(context, input, filter, output,
 320:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           multiplier);
 321:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 322:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 323:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus GetQuantizedConvolutionMultipler(TfLiteContext* context,
 324:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                               const TfLiteTensor* input,
 325:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                               const TfLiteTensor* filter,
 326:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                               TfLiteTensor* output,
 327:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                               double* multiplier) {
 328:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const double input_product_scale =
 329:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       static_cast<double>(input->params.scale * filter->params.scale);
 1561              		.loc 5 329 0
 1562 0058 867A67EE 		vmul.f32	s15, s15, s12
 1563              	.LVL154:
 330:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, input_product_scale >= 0);
 1564              		.loc 5 330 0
 1565 005c C07AF5EE 		vcmpe.f32	s15, #0
 1566 0060 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 329:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, input_product_scale >= 0);
 1567              		.loc 5 329 0
 1568 0064 E70AF7EE 		vcvt.f64.f32	d16, s15
 1569              	.LVL155:
 1570              		.loc 5 330 0
 1571 0068 140000BA 		blt	.L125
 331:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *multiplier = input_product_scale / static_cast<double>(output->params.scale);
 1572              		.loc 5 331 0
 1573 006c 037AD2ED 		vldr.32	s15, [r2, #12]
 332:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 333:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 1574              		.loc 5 333 0
 1575 0070 0000A0E3 		mov	r0, #0
 1576              	.LVL156:
 331:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *multiplier = input_product_scale / static_cast<double>(output->params.scale);
 1577              		.loc 5 331 0
 1578 0074 14309DE5 		ldr	r3, [sp, #20]
 1579              	.LVL157:
 1580 0078 E71AF7EE 		vcvt.f64.f32	d17, s15
 1581 007c A12BC0EE 		vdiv.f64	d18, d16, d17
 1582 0080 002BC3ED 		vstr.64	d18, [r3]
 1583              	.LVL158:
 1584              	.L118:
 1585              	.LBE1492:
 1586              	.LBE1491:
 321:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 1587              		.loc 5 321 0
 1588 0084 08D08DE2 		add	sp, sp, #8
 1589              		.cfi_remember_state
 1590              		.cfi_def_cfa_offset 8
 1591              		@ sp needed
 1592 0088 1080BDE8 		pop	{r4, pc}
 1593              	.LVL159:
 1594              	.L124:
 1595              		.cfi_restore_state
 1596              	.LBB1496:
 1597              	.LBB1497:
 1598              	.LBB1498:
 317:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 1599              		.loc 5 317 0
 1600 008c 003000E3 		movw	r3, #:lower16:.LC5
 1601              	.LVL160:
 1602 0090 002000E3 		movw	r2, #:lower16:.LC3
 1603              	.LVL161:
 1604 0094 003040E3 		movt	r3, #:upper16:.LC5
 1605 0098 001000E3 		movw	r1, #:lower16:.LC4
 1606              	.LVL162:
 1607 009c 144090E5 		ldr	r4, [r0, #20]
 1608 00a0 002040E3 		movt	r2, #:upper16:.LC3
 1609 00a4 00308DE5 		str	r3, [sp]
 1610              	.LVL163:
 1611 00a8 001040E3 		movt	r1, #:upper16:.LC4
 1612 00ac 3D3100E3 		movw	r3, #317
 1613 00b0 34FF2FE1 		blx	r4
 1614              	.LVL164:
 1615 00b4 0100A0E3 		mov	r0, #1
 1616              	.LBE1498:
 1617              	.LBE1497:
 1618              	.LBE1496:
 321:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 1619              		.loc 5 321 0
 1620 00b8 08D08DE2 		add	sp, sp, #8
 1621              		.cfi_remember_state
 1622              		.cfi_def_cfa_offset 8
 1623              		@ sp needed
 1624 00bc 1080BDE8 		pop	{r4, pc}
 1625              	.LVL165:
 1626              	.L125:
 1627              		.cfi_restore_state
 1628              	.LBB1499:
 1629              	.LBB1495:
 1630              	.LBB1493:
 1631              	.LBB1494:
 330:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *multiplier = input_product_scale / static_cast<double>(output->params.scale);
 1632              		.loc 5 330 0
 1633 00c0 003000E3 		movw	r3, #:lower16:.LC6
 1634              	.LVL166:
 1635 00c4 002000E3 		movw	r2, #:lower16:.LC3
 1636              	.LVL167:
 1637 00c8 003040E3 		movt	r3, #:upper16:.LC6
 1638 00cc 001000E3 		movw	r1, #:lower16:.LC4
 1639              	.LVL168:
 1640 00d0 00308DE5 		str	r3, [sp]
 1641              	.LVL169:
 1642 00d4 0C00A0E1 		mov	r0, ip
 1643              	.LVL170:
 1644 00d8 002040E3 		movt	r2, #:upper16:.LC3
 1645 00dc 001040E3 		movt	r1, #:upper16:.LC4
 1646 00e0 14409CE5 		ldr	r4, [ip, #20]
 1647 00e4 4A3100E3 		movw	r3, #330
 1648 00e8 34FF2FE1 		blx	r4
 1649              	.LVL171:
 1650 00ec 0100A0E3 		mov	r0, #1
 1651 00f0 E3FFFFEA 		b	.L118
 1652              	.L127:
 1653 00f4 00F020E3 		.align	3
 1654              	.L126:
 1655 00f8 7B14AE47 		.word	1202590843
 1656 00fc E17A943F 		.word	1066695393
 1657              	.LBE1494:
 1658              	.LBE1493:
 1659              	.LBE1495:
 1660              	.LBE1499:
 1661              		.cfi_endproc
 1662              	.LFE3285:
 1663              		.fnend
 1665              		.section	.text._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_PS2
 1666              		.align	2
 1667              		.global	_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_PS2_Pd
 1668              		.syntax unified
 1669              		.arm
 1670              		.fpu neon
 1672              	_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_PS2_Pd:
 1673              		.fnstart
 1674              	.LFB3286:
 327:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const double input_product_scale =
 1675              		.loc 5 327 0
 1676              		.cfi_startproc
 1677              		@ args = 4, pretend = 0, frame = 0
 1678              		@ frame_needed = 0, uses_anonymous_args = 0
 1679              	.LVL172:
 329:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, input_product_scale >= 0);
 1680              		.loc 5 329 0
 1681 0000 037AD1ED 		vldr.32	s15, [r1, #12]
 1682 0004 037A92ED 		vldr.32	s14, [r2, #12]
 327:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const double input_product_scale =
 1683              		.loc 5 327 0
 1684 0008 10402DE9 		push	{r4, lr}
 1685              		.save {r4, lr}
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 4, -8
 1688              		.cfi_offset 14, -4
 1689              		.pad #8
 1690 000c 08D04DE2 		sub	sp, sp, #8
 1691              		.cfi_def_cfa_offset 16
 329:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, input_product_scale >= 0);
 1692              		.loc 5 329 0
 1693 0010 877A67EE 		vmul.f32	s15, s15, s14
 330:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *multiplier = input_product_scale / static_cast<double>(output->params.scale);
 1694              		.loc 5 330 0
 1695 0014 C07AF5EE 		vcmpe.f32	s15, #0
 1696 0018 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1697              	.LVL173:
 1698 001c 080000BA 		blt	.L132
 1699 0020 E70AF7EE 		vcvt.f64.f32	d16, s15
 1700              	.LVL174:
 1701              		.loc 5 333 0
 1702 0024 0000A0E3 		mov	r0, #0
 1703              	.LVL175:
 331:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 1704              		.loc 5 331 0
 1705 0028 037AD3ED 		vldr.32	s15, [r3, #12]
 1706 002c 10309DE5 		ldr	r3, [sp, #16]
 1707              	.LVL176:
 1708 0030 E71AF7EE 		vcvt.f64.f32	d17, s15
 1709 0034 A12BC0EE 		vdiv.f64	d18, d16, d17
 1710 0038 002BC3ED 		vstr.64	d18, [r3]
 1711              	.LVL177:
 1712              	.L130:
 334:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 1713              		.loc 5 334 0
 1714 003c 08D08DE2 		add	sp, sp, #8
 1715              		.cfi_remember_state
 1716              		.cfi_def_cfa_offset 8
 1717              		@ sp needed
 1718 0040 1080BDE8 		pop	{r4, pc}
 1719              	.LVL178:
 1720              	.L132:
 1721              		.cfi_restore_state
 1722              	.LBB1502:
 1723              	.LBB1503:
 330:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *multiplier = input_product_scale / static_cast<double>(output->params.scale);
 1724              		.loc 5 330 0
 1725 0044 00C000E3 		movw	ip, #:lower16:.LC6
 1726 0048 002000E3 		movw	r2, #:lower16:.LC3
 1727              	.LVL179:
 1728 004c 00C040E3 		movt	ip, #:upper16:.LC6
 1729 0050 001000E3 		movw	r1, #:lower16:.LC4
 1730              	.LVL180:
 1731 0054 144090E5 		ldr	r4, [r0, #20]
 1732 0058 002040E3 		movt	r2, #:upper16:.LC3
 1733 005c 00C08DE5 		str	ip, [sp]
 1734 0060 001040E3 		movt	r1, #:upper16:.LC4
 1735 0064 4A3100E3 		movw	r3, #330
 1736              	.LVL181:
 1737 0068 34FF2FE1 		blx	r4
 1738              	.LVL182:
 1739 006c 0100A0E3 		mov	r0, #1
 1740 0070 F1FFFFEA 		b	.L130
 1741              	.LBE1503:
 1742              	.LBE1502:
 1743              		.cfi_endproc
 1744              	.LFE3286:
 1745              		.fnend
 1747              		.section	.text._ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivati
 1748              		.align	2
 1749              		.global	_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12Tf
 1750              		.syntax unified
 1751              		.arm
 1752              		.fpu neon
 1754              	_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTenso
 1755              		.fnstart
 1756              	.LFB3289:
 335:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 336:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** namespace {
 337:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 338:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** inline TfLiteStatus Quantize(TfLiteContext* context, float scale,
 339:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                              int32_t zero_point, float f, int32_t& q) {
 340:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const float tmp = TfLiteRound(f / scale);
 341:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const bool no_integer_overflow_from_quantization =
 342:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       (tmp >= static_cast<float>(std::numeric_limits<int32_t>::min()) &&
 343:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****        tmp <= static_cast<float>(std::numeric_limits<int32_t>::max()));
 344:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, no_integer_overflow_from_quantization);
 345:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   q = zero_point + static_cast<int32_t>(tmp);
 346:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 347:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 348:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 349:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus CalculateActivationRangeQuantizedImpl(
 350:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TfLiteContext* context, TfLiteFusedActivation activation, int32_t qmin,
 351:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int32_t qmax, TfLiteTensor* output, int32_t* act_min, int32_t* act_max) {
 352:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const auto scale = output->params.scale;
 353:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const auto zero_point = output->params.zero_point;
 354:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 355:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int32_t tmp_q;
 356:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (activation == kTfLiteActRelu) {
 357:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_OK(context,
 358:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                       Quantize(context, scale, zero_point, 0.0, tmp_q));
 359:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *act_min = std::max(qmin, tmp_q);
 360:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *act_max = qmax;
 361:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else if (activation == kTfLiteActRelu6) {
 362:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_OK(context,
 363:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                       Quantize(context, scale, zero_point, 0.0, tmp_q));
 364:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *act_min = std::max(qmin, tmp_q);
 365:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_OK(context,
 366:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                       Quantize(context, scale, zero_point, 6.0, tmp_q));
 367:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *act_max = std::min(qmax, tmp_q);
 368:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else if (activation == kTfLiteActReluN1To1) {
 369:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_OK(context,
 370:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                       Quantize(context, scale, zero_point, -1.0, tmp_q));
 371:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *act_min = std::max(qmin, tmp_q);
 372:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_OK(context,
 373:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                       Quantize(context, scale, zero_point, 1.0, tmp_q));
 374:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *act_max = std::min(qmax, tmp_q);
 375:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 376:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *act_min = qmin;
 377:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *act_max = qmax;
 378:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 379:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 380:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 381:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }  // namespace
 382:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 383:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus CalculateActivationRangeQuantized(TfLiteContext* context,
 384:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                                TfLiteFusedActivation activation,
 385:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                                TfLiteTensor* output,
 386:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                                int32_t* act_min,
 387:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                                int32_t* act_max) {
 1757              		.loc 5 387 0
 1758              		.cfi_startproc
 1759              		@ args = 4, pretend = 0, frame = 0
 1760              		@ frame_needed = 0, uses_anonymous_args = 0
 1761              	.LVL183:
 388:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int32_t qmin = 0;
 389:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int32_t qmax = 0;
 390:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (output->type == kTfLiteUInt8) {
 1762              		.loc 5 390 0
 1763 0000 00C0D2E5 		ldrb	ip, [r2]	@ zero_extendqisi2
 387:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int32_t qmin = 0;
 1764              		.loc 5 387 0
 1765 0004 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 1766              		.save {r4, r5, r6, r7, r8, lr}
 1767              		.cfi_def_cfa_offset 24
 1768              		.cfi_offset 4, -24
 1769              		.cfi_offset 5, -20
 1770              		.cfi_offset 6, -16
 1771              		.cfi_offset 7, -12
 1772              		.cfi_offset 8, -8
 1773              		.cfi_offset 14, -4
 1774 0008 0360A0E1 		mov	r6, r3
 1775 000c 048B2DED 		vpush.64	{d8, d9}
 1776              		.vsave {d8, d9}
 1777              		.cfi_def_cfa_offset 40
 1778              		.cfi_offset 80, -40
 1779              		.cfi_offset 81, -36
 1780              		.cfi_offset 82, -32
 1781              		.cfi_offset 83, -28
 1782 0010 0050A0E1 		mov	r5, r0
 1783              		.loc 5 390 0
 1784 0014 03005CE3 		cmp	ip, #3
 387:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int32_t qmin = 0;
 1785              		.loc 5 387 0
 1786              		.pad #8
 1787 0018 08D04DE2 		sub	sp, sp, #8
 1788              		.cfi_def_cfa_offset 48
 1789              	.LVL184:
 1790              		.loc 5 390 0
 1791 001c 3E00000A 		beq	.L155
 391:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     qmin = std::numeric_limits<uint8_t>::min();
 392:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     qmax = std::numeric_limits<uint8_t>::max();
 393:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else if (output->type == kTfLiteInt8) {
 1792              		.loc 5 393 0
 1793 0020 09005CE3 		cmp	ip, #9
 1794 0024 2100000A 		beq	.L156
 394:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     qmin = std::numeric_limits<int8_t>::min();
 395:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     qmax = std::numeric_limits<int8_t>::max();
 396:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else if (output->type == kTfLiteInt16) {
 1795              		.loc 5 396 0
 1796 0028 07005CE3 		cmp	ip, #7
 1797 002c 1100001A 		bne	.L166
 397:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     qmin = std::numeric_limits<int16_t>::min();
 1798              		.loc 5 397 0
 1799 0030 0249A0E3 		mov	r4, #32768
 398:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     qmax = std::numeric_limits<int16_t>::max();
 1800              		.loc 5 398 0
 1801 0034 FF7F07E3 		movw	r7, #32767
 397:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     qmin = std::numeric_limits<int16_t>::min();
 1802              		.loc 5 397 0
 1803 0038 FF4F4FE3 		movt	r4, 65535
 1804              	.LVL185:
 1805              	.L134:
 1806              	.LBB1579:
 1807              	.LBB1580:
 1808              	.LBB1581:
 356:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_OK(context,
 1809              		.loc 5 356 0
 1810 003c 010051E3 		cmp	r1, #1
 1811 0040 038A92ED 		vldr.32	s16, [r2, #12]
 1812 0044 108092E5 		ldr	r8, [r2, #16]
 1813              	.LVL186:
 1814 0048 1E00000A 		beq	.L167
 1815              	.LVL187:
 1816              	.L136:
 1817              	.LBB1582:
 361:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_OK(context,
 1818              		.loc 5 361 0
 1819 004c 030051E3 		cmp	r1, #3
 1820 0050 3400000A 		beq	.L168
 1821              	.LBB1583:
 368:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_OK(context,
 1822              		.loc 5 368 0
 1823 0054 020051E3 		cmp	r1, #2
 1824 0058 4800000A 		beq	.L169
 377:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 1825              		.loc 5 377 0
 1826 005c 30309DE5 		ldr	r3, [sp, #48]
 1827              	.LVL188:
 1828              	.LBE1583:
 1829              	.LBE1582:
 1830              	.LBE1581:
 379:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 1831              		.loc 5 379 0
 1832 0060 0000A0E3 		mov	r0, #0
 1833              	.LVL189:
 1834              	.LBB1660:
 1835              	.LBB1645:
 1836              	.LBB1623:
 376:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *act_max = qmax;
 1837              		.loc 5 376 0
 1838 0064 004086E5 		str	r4, [r6]
 377:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 1839              		.loc 5 377 0
 1840 0068 007083E5 		str	r7, [r3]
 1841              	.LVL190:
 1842              	.L161:
 1843              	.LBE1623:
 1844              	.LBE1645:
 1845              	.LBE1660:
 1846              	.LBE1580:
 1847              	.LBE1579:
 399:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 400:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE(context, false);
 401:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 402:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 403:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return CalculateActivationRangeQuantizedImpl(context, activation, qmin, qmax,
 404:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                                output, act_min, act_max);
 405:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 1848              		.loc 5 405 0
 1849 006c 08D08DE2 		add	sp, sp, #8
 1850              		.cfi_remember_state
 1851              		.cfi_def_cfa_offset 40
 1852              		@ sp needed
 1853 0070 048BBDEC 		vldm	sp!, {d8-d9}
 1854              		.cfi_restore 82
 1855              		.cfi_restore 83
 1856              		.cfi_restore 80
 1857              		.cfi_restore 81
 1858              		.cfi_def_cfa_offset 24
 1859 0074 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1860              	.LVL191:
 1861              	.L166:
 1862              		.cfi_restore_state
 1863              	.LBB1671:
 1864              	.LBB1672:
 400:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 1865              		.loc 5 400 0
 1866 0078 003000E3 		movw	r3, #:lower16:.LC7
 1867              	.LVL192:
 1868 007c 002000E3 		movw	r2, #:lower16:.LC3
 1869              	.LVL193:
 1870 0080 003040E3 		movt	r3, #:upper16:.LC7
 1871 0084 001000E3 		movw	r1, #:lower16:.LC4
 1872              	.LVL194:
 1873 0088 144090E5 		ldr	r4, [r0, #20]
 1874 008c 002040E3 		movt	r2, #:upper16:.LC3
 1875 0090 00308DE5 		str	r3, [sp]
 1876 0094 001040E3 		movt	r1, #:upper16:.LC4
 1877 0098 193EA0E3 		mov	r3, #400
 1878 009c 34FF2FE1 		blx	r4
 1879              	.LVL195:
 1880 00a0 0100A0E3 		mov	r0, #1
 1881              	.LBE1672:
 1882              	.LBE1671:
 1883              		.loc 5 405 0
 1884 00a4 08D08DE2 		add	sp, sp, #8
 1885              		.cfi_remember_state
 1886              		.cfi_def_cfa_offset 40
 1887              		@ sp needed
 1888 00a8 048BBDEC 		vldm	sp!, {d8-d9}
 1889              		.cfi_restore 80
 1890              		.cfi_restore 81
 1891              		.cfi_restore 82
 1892              		.cfi_restore 83
 1893              		.cfi_def_cfa_offset 24
 1894 00ac F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1895              	.LVL196:
 1896              	.L156:
 1897              		.cfi_restore_state
 1898              	.LBB1673:
 1899              	.LBB1667:
 1900              	.LBB1661:
 356:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_OK(context,
 1901              		.loc 5 356 0
 1902 00b0 010051E3 		cmp	r1, #1
 1903              	.LBE1661:
 1904              	.LBE1667:
 1905              	.LBE1673:
 395:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else if (output->type == kTfLiteInt16) {
 1906              		.loc 5 395 0
 1907 00b4 7F70A0E3 		mov	r7, #127
 394:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     qmax = std::numeric_limits<int8_t>::max();
 1908              		.loc 5 394 0
 1909 00b8 7F40E0E3 		mvn	r4, #127
 1910              	.LVL197:
 1911 00bc 038A92ED 		vldr.32	s16, [r2, #12]
 1912 00c0 108092E5 		ldr	r8, [r2, #16]
 1913              	.LVL198:
 1914              	.LBB1674:
 1915              	.LBB1668:
 1916              	.LBB1662:
 356:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_OK(context,
 1917              		.loc 5 356 0
 1918 00c4 E0FFFF1A 		bne	.L136
 1919              	.LVL199:
 1920              	.L167:
 1921              	.LBB1646:
 1922              	.LBB1647:
 1923              	.LBB1648:
 1924              	.LBB1649:
 340:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const bool no_integer_overflow_from_quantization =
 1925              		.loc 5 340 0
 1926 00c8 570A9FED 		vldr.32	s0, .L171
 1927              	.LBB1650:
 1928              	.LBB1651:
 1929              	.LBB1652:
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(float __x)
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsf(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   abs(long double __x)
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsl(__x); }
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     abs(_Tp __x)
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_fabs(__x); }
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acos;
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acos(float __x)
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acosf(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acos(long double __x)
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acosl(__x); }
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     acos(_Tp __x)
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_acos(__x); }
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asin;
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asin(float __x)
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinf(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asin(long double __x)
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinl(__x); }
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     asin(_Tp __x)
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_asin(__x); }
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atan;
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan(float __x)
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanf(__x); }
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan(long double __x)
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanl(__x); }
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     atan(_Tp __x)
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_atan(__x); }
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atan2;
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan2(float __y, float __x)
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atan2(long double __y, long double __x)
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     atan2(_Tp __y, _Up __x)
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return atan2(__type(__y), __type(__x));
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ceil;
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ceil(float __x)
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ceilf(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ceil(long double __x)
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ceill(__x); }
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     ceil(_Tp __x)
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_ceil(__x); }
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cos;
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cos(float __x)
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cosf(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cos(long double __x)
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cosl(__x); }
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     cos(_Tp __x)
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_cos(__x); }
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cosh;
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cosh(float __x)
 227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_coshf(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cosh(long double __x)
 231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_coshl(__x); }
 232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     cosh(_Tp __x)
 239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_cosh(__x); }
 240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp;
 242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp(float __x)
 246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expf(__x); }
 247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp(long double __x)
 250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expl(__x); }
 251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     exp(_Tp __x)
 258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_exp(__x); }
 259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fabs;
 261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fabs(float __x)
 265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsf(__x); }
 266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fabs(long double __x)
 269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fabsl(__x); }
 270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fabs(_Tp __x)
 277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_fabs(__x); }
 278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::floor;
 280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   floor(float __x)
 284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_floorf(__x); }
 285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   floor(long double __x)
 288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_floorl(__x); }
 289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     floor(_Tp __x)
 296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_floor(__x); }
 297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmod;
 299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmod(float __x, float __y)
 303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmod(long double __x, long double __y)
 307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fmod(_Tp __x, _Up __y)
 314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fmod(__type(__x), __type(__y));
 317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::frexp;
 320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline float
 323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   frexp(float __x, int* __exp)
 324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline long double
 327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   frexp(long double __x, int* __exp)
 328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     frexp(_Tp __x, int* __exp)
 336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ldexp;
 339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ldexp(float __x, int __exp)
 343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ldexp(long double __x, int __exp)
 347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     ldexp(_Tp __x, int __exp)
 355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log;
 358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log(float __x)
 362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_logf(__x); }
 363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log(long double __x)
 366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_logl(__x); }
 367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     log(_Tp __x)
 374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_log(__x); }
 375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log10;
 377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log10(float __x)
 381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log10f(__x); }
 382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log10(long double __x)
 385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log10l(__x); }
 386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     log10(_Tp __x)
 393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_log10(__x); }
 394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::modf;
 396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline float
 399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   modf(float __x, float* __iptr)
 400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline long double
 403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   modf(long double __x, long double* __iptr)
 404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::pow;
 408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(float __x, float __y)
 412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powf(__x, __y); }
 413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(long double __x, long double __y)
 416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powl(__x, __y); }
 417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if __cplusplus < 201103L
 419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline double
 422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(double __x, int __i)
 423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powi(__x, __i); }
 424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline float
 426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(float __x, int __n)
 427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powif(__x, __n); }
 428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline long double
 430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   pow(long double __x, int __n)
 431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_powil(__x, __n); }
 432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     pow(_Tp __x, _Up __y)
 439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return pow(__type(__x), __type(__y));
 442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::sin;
 445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sin(float __x)
 449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinf(__x); }
 450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sin(long double __x)
 453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinl(__x); }
 454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     sin(_Tp __x)
 461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_sin(__x); }
 462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::sinh;
 464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sinh(float __x)
 468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinhf(__x); }
 469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sinh(long double __x)
 472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sinhl(__x); }
 473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 474:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 475:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 476:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 477:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 478:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     sinh(_Tp __x)
 480:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_sinh(__x); }
 481:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 482:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::sqrt;
 483:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 484:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 485:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 486:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sqrt(float __x)
 487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sqrtf(__x); }
 488:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 489:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 490:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   sqrt(long double __x)
 491:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_sqrtl(__x); }
 492:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 493:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 494:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 495:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 496:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 497:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 498:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     sqrt(_Tp __x)
 499:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_sqrt(__x); }
 500:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 501:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tan;
 502:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 503:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 504:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 505:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tan(float __x)
 506:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanf(__x); }
 507:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 508:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 509:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tan(long double __x)
 510:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanl(__x); }
 511:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 512:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 513:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 514:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 515:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 516:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 517:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     tan(_Tp __x)
 518:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_tan(__x); }
 519:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 520:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tanh;
 521:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 522:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 523:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 524:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tanh(float __x)
 525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanhf(__x); }
 526:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 527:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 528:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   tanh(long double __x)
 529:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_tanhl(__x); }
 530:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 531:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 532:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 533:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 534:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 535:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     double>::__type
 536:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     tanh(_Tp __x)
 537:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_tanh(__x); }
 538:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 539:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_END_NAMESPACE_VERSION
 540:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** } // namespace
 541:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 542:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if _GLIBCXX_USE_C99_MATH
 543:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 544:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 545:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** // These are possible macros imported from C99-land.
 546:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fpclassify
 547:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isfinite
 548:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isinf
 549:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isnan
 550:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isnormal
 551:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef signbit
 552:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isgreater
 553:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isgreaterequal
 554:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isless
 555:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef islessequal
 556:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef islessgreater
 557:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef isunordered
 558:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 559:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
 560:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
 561:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 562:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 563:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if __cplusplus >= 201103L
 564:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 565:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 566:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
 567:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fpclassify(float __x)
 568:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 569:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 570:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 571:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
 572:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fpclassify(double __x)
 573:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 574:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 575:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 576:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
 577:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fpclassify(long double __x)
 578:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 579:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 580:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 581:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 582:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 583:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 584:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 585:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               int>::__type
 586:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fpclassify(_Tp __x)
 587:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 588:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 589:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 590:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 591:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 592:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isfinite(float __x)
 593:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isfinite(__x); }
 594:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 595:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 596:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isfinite(double __x)
 597:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isfinite(__x); }
 598:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 599:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 600:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isfinite(long double __x)
 601:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isfinite(__x); }
 602:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 603:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 604:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 605:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 606:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 607:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 608:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isfinite(_Tp __x)
 609:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return true; }
 610:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 611:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 612:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 613:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 614:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isinf(float __x)
 615:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isinf(__x); }
 616:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 617:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 618:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 619:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::isinf;
 620:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #else
 621:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 622:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isinf(double __x)
 623:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isinf(__x); }
 624:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 625:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 626:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 627:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isinf(long double __x)
 628:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isinf(__x); }
 629:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 630:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 631:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 632:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 633:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 634:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 635:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isinf(_Tp __x)
 636:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return false; }
 637:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 638:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 639:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 640:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 641:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnan(float __x)
 642:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnan(__x); }
 643:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 644:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 645:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 646:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::isnan;
 647:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #else
 648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 649:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnan(double __x)
 650:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnan(__x); }
 651:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 652:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 653:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnan(long double __x)
 655:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnan(__x); }
 656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 657:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 658:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 660:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 661:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 662:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnan(_Tp __x)
 663:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return false; }
 664:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 665:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 666:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 667:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnormal(float __x)
 669:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnormal(__x); }
 670:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 671:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 672:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnormal(double __x)
 673:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnormal(__x); }
 674:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 675:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 676:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isnormal(long double __x)
 677:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isnormal(__x); }
 678:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 679:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 680:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 681:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 682:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 683:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 684:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnormal(_Tp __x)
 685:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __x != 0 ? true : false; }
 686:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 687:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 689:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 690:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 691:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   signbit(float __x)
 692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_signbit(__x); }
 693:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 694:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 695:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   signbit(double __x)
 696:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_signbit(__x); }
 697:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 698:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 699:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   signbit(long double __x)
 700:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_signbit(__x); }
 701:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 702:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 703:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 704:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 705:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 706:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               bool>::__type
 707:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     signbit(_Tp __x)
 708:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __x < 0 ? true : false; }
 709:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 710:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 711:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 712:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 713:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreater(float __x, float __y)
 714:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 715:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 716:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 717:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreater(double __x, double __y)
 718:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 719:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 720:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 721:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreater(long double __x, long double __y)
 722:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 723:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 724:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 725:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 726:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 727:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 728:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 729:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 730:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreater(_Tp __x, _Up __y)
 731:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 732:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 733:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 734:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 735:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 736:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 737:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 738:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 739:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreaterequal(float __x, float __y)
 740:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 741:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 742:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 743:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreaterequal(double __x, double __y)
 744:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 745:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 746:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 747:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isgreaterequal(long double __x, long double __y)
 748:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 749:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 750:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 751:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 752:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 753:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 754:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 755:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 756:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreaterequal(_Tp __x, _Up __y)
 757:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 758:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 759:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 760:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 761:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 762:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 763:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 764:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 765:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isless(float __x, float __y)
 766:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isless(__x, __y); }
 767:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 768:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 769:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isless(double __x, double __y)
 770:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isless(__x, __y); }
 771:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 772:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 773:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isless(long double __x, long double __y)
 774:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isless(__x, __y); }
 775:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 776:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 777:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 778:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 779:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 780:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 781:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 782:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isless(_Tp __x, _Up __y)
 783:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 784:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 785:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isless(__type(__x), __type(__y));
 786:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 787:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 788:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 789:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 790:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 791:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessequal(float __x, float __y)
 792:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 793:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 794:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 795:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessequal(double __x, double __y)
 796:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 797:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 798:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 799:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessequal(long double __x, long double __y)
 800:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 801:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 802:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 803:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 804:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 805:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 806:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 807:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 808:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessequal(_Tp __x, _Up __y)
 809:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 810:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 811:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 812:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 813:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 814:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 815:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 816:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 817:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessgreater(float __x, float __y)
 818:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 819:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 820:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 821:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessgreater(double __x, double __y)
 822:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 823:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 824:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 825:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   islessgreater(long double __x, long double __y)
 826:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 827:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 828:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 829:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 830:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 831:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 832:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 833:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 834:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessgreater(_Tp __x, _Up __y)
 835:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 836:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 837:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 838:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 839:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 840:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 841:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 842:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 843:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isunordered(float __x, float __y)
 844:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 845:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 846:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 847:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isunordered(double __x, double __y)
 848:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 849:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 850:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr bool
 851:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   isunordered(long double __x, long double __y)
 852:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 853:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 854:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 855:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 856:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
 857:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename
 858:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 859:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 860:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isunordered(_Tp __x, _Up __y)
 861:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 862:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 863:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 864:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 865:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 866:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 867:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #else
 868:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 869:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 870:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 871:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 872:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fpclassify(_Tp __f)
 873:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 874:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 875:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 876:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 877:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 878:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 879:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 880:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 881:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 882:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isfinite(_Tp __f)
 883:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 884:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 885:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isfinite(__type(__f));
 886:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 887:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 888:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 889:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 890:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 891:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isinf(_Tp __f)
 892:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 893:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 894:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isinf(__type(__f));
 895:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 896:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 897:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 898:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 899:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 900:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnan(_Tp __f)
 901:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 902:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 903:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isnan(__type(__f));
 904:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 905:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 906:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 907:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 908:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 909:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isnormal(_Tp __f)
 910:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 911:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 912:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isnormal(__type(__f));
 913:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 914:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 915:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 916:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 917:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 918:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     signbit(_Tp __f)
 919:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 920:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 921:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_signbit(__type(__f));
 922:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 923:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 924:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 925:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 926:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 927:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreater(_Tp __f1, _Tp __f2)
 928:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 929:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 930:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 931:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 932:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 933:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 934:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 935:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 936:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 937:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 938:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 939:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 940:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 941:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 942:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 943:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 944:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 945:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isless(_Tp __f1, _Tp __f2)
 946:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 947:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 948:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 949:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 950:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 951:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 952:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 953:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 954:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessequal(_Tp __f1, _Tp __f2)
 955:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 956:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 957:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 958:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 959:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 960:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 961:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 962:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 963:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 964:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 965:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 966:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 967:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 968:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 969:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
 970:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 971:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 					   int>::__type
 972:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     isunordered(_Tp __f1, _Tp __f2)
 973:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
 974:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 975:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 976:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
 977:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 978:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 979:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 980:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_END_NAMESPACE_VERSION
 981:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** } // namespace
 982:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 983:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 984:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 985:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 986:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #if __cplusplus >= 201103L
 987:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 988:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 989:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
 990:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acosh
 991:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acoshf
 992:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef acoshl
 993:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asinh
 994:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asinhf
 995:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef asinhl
 996:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atanh
 997:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atanhf
 998:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef atanhl
 999:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cbrt
1000:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cbrtf
1001:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef cbrtl
1002:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef copysign
1003:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef copysignf
1004:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef copysignl
1005:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erf
1006:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erff
1007:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfl
1008:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfc
1009:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfcf
1010:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef erfcl
1011:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp2
1012:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp2f
1013:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef exp2l
1014:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef expm1
1015:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef expm1f
1016:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef expm1l
1017:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fdim
1018:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fdimf
1019:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fdiml
1020:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fma
1021:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmaf
1022:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmal
1023:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmax
1024:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmaxf
1025:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmaxl
1026:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fmin
1027:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fminf
1028:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef fminl
1029:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef hypot
1030:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef hypotf
1031:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef hypotl
1032:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ilogb
1033:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ilogbf
1034:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef ilogbl
1035:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lgamma
1036:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lgammaf
1037:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lgammal
1038:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llrint
1039:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llrintf
1040:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llrintl
1041:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llround
1042:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llroundf
1043:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef llroundl
1044:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log1p
1045:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log1pf
1046:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log1pl
1047:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log2
1048:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log2f
1049:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef log2l
1050:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef logb
1051:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef logbf
1052:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef logbl
1053:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lrint
1054:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lrintf
1055:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lrintl
1056:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lround
1057:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lroundf
1058:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef lroundl
1059:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nan
1060:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nanf
1061:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nanl
1062:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nearbyint
1063:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nearbyintf
1064:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nearbyintl
1065:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nextafter
1066:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nextafterf
1067:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nextafterl
1068:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nexttoward
1069:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nexttowardf
1070:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef nexttowardl
1071:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remainder
1072:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remainderf
1073:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remainderl
1074:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remquo
1075:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remquof
1076:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef remquol
1077:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef rint
1078:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef rintf
1079:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef rintl
1080:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef round
1081:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef roundf
1082:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef roundl
1083:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbln
1084:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalblnf
1085:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalblnl
1086:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbn
1087:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbnf
1088:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef scalbnl
1089:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tgamma
1090:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tgammaf
1091:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef tgammal
1092:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef trunc
1093:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef truncf
1094:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #undef truncl
1095:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1096:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
1097:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** {
1098:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
1099:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // types
1101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::double_t;
1102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::float_t;
1103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // functions
1105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acosh;
1106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acoshf;
1107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::acoshl;
1108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asinh;
1110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asinhf;
1111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::asinhl;
1112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atanh;
1114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atanhf;
1115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::atanhl;
1116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cbrt;
1118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cbrtf;
1119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::cbrtl;
1120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::copysign;
1122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::copysignf;
1123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::copysignl;
1124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erf;
1126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erff;
1127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfl;
1128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfc;
1130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfcf;
1131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::erfcl;
1132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp2;
1134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp2f;
1135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::exp2l;
1136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::expm1;
1138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::expm1f;
1139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::expm1l;
1140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fdim;
1142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fdimf;
1143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fdiml;
1144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fma;
1146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmaf;
1147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmal;
1148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmax;
1150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmaxf;
1151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmaxl;
1152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fmin;
1154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fminf;
1155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::fminl;
1156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::hypot;
1158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::hypotf;
1159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::hypotl;
1160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ilogb;
1162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ilogbf;
1163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::ilogbl;
1164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lgamma;
1166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lgammaf;
1167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lgammal;
1168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llrint;
1170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llrintf;
1171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llrintl;
1172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llround;
1174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llroundf;
1175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::llroundl;
1176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log1p;
1178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log1pf;
1179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log1pl;
1180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log2;
1182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log2f;
1183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::log2l;
1184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::logb;
1186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::logbf;
1187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::logbl;
1188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lrint;
1190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lrintf;
1191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lrintl;
1192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lround;
1194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lroundf;
1195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::lroundl;
1196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nan;
1198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nanf;
1199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nanl;
1200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nearbyint;
1202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nearbyintf;
1203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nearbyintl;
1204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nextafter;
1206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nextafterf;
1207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nextafterl;
1208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nexttoward;
1210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nexttowardf;
1211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::nexttowardl;
1212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remainder;
1214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remainderf;
1215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remainderl;
1216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remquo;
1218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remquof;
1219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::remquol;
1220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::rint;
1222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::rintf;
1223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::rintl;
1224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::round;
1226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::roundf;
1227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::roundl;
1228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbln;
1230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalblnf;
1231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalblnl;
1232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbn;
1234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbnf;
1235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::scalbnl;
1236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tgamma;
1238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tgammaf;
1239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::tgammal;
1240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::trunc;
1242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::truncf;
1243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   using ::truncl;
1244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   /// Additional overloads.
1246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acosh(float __x)
1249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acoshf(__x); }
1250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   acosh(long double __x)
1253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_acoshl(__x); }
1254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     acosh(_Tp __x)
1261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_acosh(__x); }
1262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asinh(float __x)
1267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinhf(__x); }
1268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   asinh(long double __x)
1271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_asinhl(__x); }
1272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     asinh(_Tp __x)
1279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_asinh(__x); }
1280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atanh(float __x)
1285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanhf(__x); }
1286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   atanh(long double __x)
1289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_atanhl(__x); }
1290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     atanh(_Tp __x)
1297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_atanh(__x); }
1298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cbrt(float __x)
1303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cbrtf(__x); }
1304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   cbrt(long double __x)
1307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_cbrtl(__x); }
1308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     cbrt(_Tp __x)
1315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_cbrt(__x); }
1316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   copysign(float __x, float __y)
1321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_copysignf(__x, __y); }
1322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   copysign(long double __x, long double __y)
1325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_copysignl(__x, __y); }
1326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     copysign(_Tp __x, _Up __y)
1332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return copysign(__type(__x), __type(__y));
1335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erf(float __x)
1341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erff(__x); }
1342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erf(long double __x)
1345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erfl(__x); }
1346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     erf(_Tp __x)
1353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_erf(__x); }
1354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erfc(float __x)
1359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erfcf(__x); }
1360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   erfc(long double __x)
1363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_erfcl(__x); }
1364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     erfc(_Tp __x)
1371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_erfc(__x); }
1372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp2(float __x)
1377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_exp2f(__x); }
1378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   exp2(long double __x)
1381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_exp2l(__x); }
1382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     exp2(_Tp __x)
1389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_exp2(__x); }
1390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   expm1(float __x)
1395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expm1f(__x); }
1396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   expm1(long double __x)
1399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_expm1l(__x); }
1400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     expm1(_Tp __x)
1407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_expm1(__x); }
1408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fdim(float __x, float __y)
1413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fdimf(__x, __y); }
1414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fdim(long double __x, long double __y)
1417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fdiml(__x, __y); }
1418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fdim(_Tp __x, _Up __y)
1424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fdim(__type(__x), __type(__y));
1427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fma(float __x, float __y, float __z)
1433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fma(long double __x, long double __y, long double __z)
1437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmal(__x, __y, __z); }
1438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmax(float __x, float __y)
1453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmaxf(__x, __y); }
1454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmax(long double __x, long double __y)
1457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fmaxl(__x, __y); }
1458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fmax(_Tp __x, _Up __y)
1464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fmax(__type(__x), __type(__y));
1467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmin(float __x, float __y)
1473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fminf(__x, __y); }
1474:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1475:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1476:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   fmin(long double __x, long double __y)
1477:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_fminl(__x, __y); }
1478:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1480:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1481:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1482:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1483:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     fmin(_Tp __x, _Up __y)
1484:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1485:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1486:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return fmin(__type(__x), __type(__y));
1487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1488:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1489:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1490:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1491:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1492:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   hypot(float __x, float __y)
1493:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_hypotf(__x, __y); }
1494:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1495:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1496:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   hypot(long double __x, long double __y)
1497:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_hypotl(__x, __y); }
1498:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1499:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1500:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1501:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1502:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1503:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     hypot(_Tp __x, _Up __y)
1504:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1505:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1506:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return hypot(__type(__x), __type(__y));
1507:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1508:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1509:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1510:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1511:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
1512:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ilogb(float __x)
1513:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ilogbf(__x); }
1514:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1515:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr int
1516:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   ilogb(long double __x)
1517:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_ilogbl(__x); }
1518:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1519:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1520:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1521:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1522:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr
1523:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1524:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                     int>::__type
1525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     ilogb(_Tp __x)
1526:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_ilogb(__x); }
1527:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1528:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1529:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1530:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1531:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lgamma(float __x)
1532:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lgammaf(__x); }
1533:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1534:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1535:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lgamma(long double __x)
1536:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lgammal(__x); }
1537:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1538:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1539:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1540:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1541:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1542:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1543:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     lgamma(_Tp __x)
1544:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_lgamma(__x); }
1545:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1546:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1547:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1548:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long long
1549:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   llrint(float __x)
1550:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_llrintf(__x); }
1551:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1552:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long long
1553:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   llrint(long double __x)
1554:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_llrintl(__x); }
1555:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1556:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1557:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1558:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1559:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1560:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               long long>::__type
1561:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     llrint(_Tp __x)
1562:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_llrint(__x); }
1563:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1564:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1565:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1566:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long long
1567:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   llround(float __x)
1568:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_llroundf(__x); }
1569:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1570:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long long
1571:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   llround(long double __x)
1572:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_llroundl(__x); }
1573:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1574:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1575:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1576:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1577:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1578:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               long long>::__type
1579:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     llround(_Tp __x)
1580:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_llround(__x); }
1581:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1582:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1583:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1584:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1585:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log1p(float __x)
1586:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log1pf(__x); }
1587:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1588:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1589:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log1p(long double __x)
1590:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log1pl(__x); }
1591:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1592:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1593:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1594:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1595:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1596:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1597:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     log1p(_Tp __x)
1598:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_log1p(__x); }
1599:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1600:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1601:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1602:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   // DR 568.
1603:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1604:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log2(float __x)
1605:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log2f(__x); }
1606:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1607:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1608:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   log2(long double __x)
1609:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_log2l(__x); }
1610:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1611:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1612:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1613:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1614:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1615:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1616:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     log2(_Tp __x)
1617:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_log2(__x); }
1618:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1619:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1620:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1621:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1622:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   logb(float __x)
1623:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_logbf(__x); }
1624:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1625:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1626:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   logb(long double __x)
1627:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_logbl(__x); }
1628:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1629:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1630:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1631:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1632:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1633:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1634:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     logb(_Tp __x)
1635:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_logb(__x); }
1636:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1637:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1638:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1639:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long
1640:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lrint(float __x)
1641:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lrintf(__x); }
1642:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1643:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long
1644:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lrint(long double __x)
1645:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lrintl(__x); }
1646:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1647:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1649:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1650:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1651:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               long>::__type
1652:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     lrint(_Tp __x)
1653:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_lrint(__x); }
1654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1655:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1657:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long
1658:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lround(float __x)
1659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lroundf(__x); }
1660:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1661:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long
1662:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   lround(long double __x)
1663:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_lroundl(__x); }
1664:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1665:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1666:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1667:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1669:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               long>::__type
1670:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     lround(_Tp __x)
1671:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_lround(__x); }
1672:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1673:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1674:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1675:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1676:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nearbyint(float __x)
1677:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nearbyintf(__x); }
1678:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1679:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1680:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nearbyint(long double __x)
1681:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nearbyintl(__x); }
1682:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1683:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1684:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1685:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1686:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1687:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     nearbyint(_Tp __x)
1689:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_nearbyint(__x); }
1690:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1691:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1693:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1694:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nextafter(float __x, float __y)
1695:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nextafterf(__x, __y); }
1696:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1697:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1698:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nextafter(long double __x, long double __y)
1699:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nextafterl(__x, __y); }
1700:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1701:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1702:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1703:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1704:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1705:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     nextafter(_Tp __x, _Up __y)
1706:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1707:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1708:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return nextafter(__type(__x), __type(__y));
1709:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1710:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1711:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1712:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1713:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1714:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nexttoward(float __x, long double __y)
1715:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nexttowardf(__x, __y); }
1716:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1717:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1718:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   nexttoward(long double __x, long double __y)
1719:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_nexttowardl(__x, __y); }
1720:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1721:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1722:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1723:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1724:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1725:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1726:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     nexttoward(_Tp __x, long double __y)
1727:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_nexttoward(__x, __y); }
1728:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1729:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1730:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1731:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1732:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   remainder(float __x, float __y)
1733:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_remainderf(__x, __y); }
1734:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1735:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1736:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   remainder(long double __x, long double __y)
1737:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_remainderl(__x, __y); }
1738:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1739:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1740:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1741:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1742:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1743:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     remainder(_Tp __x, _Up __y)
1744:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1745:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1746:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return remainder(__type(__x), __type(__y));
1747:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1748:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1749:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1750:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1751:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline float
1752:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   remquo(float __x, float __y, int* __pquo)
1753:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1754:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1755:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   inline long double
1756:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   remquo(long double __x, long double __y, int* __pquo)
1757:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1758:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1759:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1760:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1761:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp, typename _Up>
1762:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1763:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1764:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     {
1765:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1766:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1767:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     }
1768:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1769:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1770:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1771:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1772:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   rint(float __x)
1773:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_rintf(__x); }
1774:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1775:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr long double
1776:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   rint(long double __x)
1777:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_rintl(__x); }
1778:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1779:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1780:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1781:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   template<typename _Tp>
1782:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1783:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****                                               double>::__type
1784:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     rint(_Tp __x)
1785:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****     { return __builtin_rint(__x); }
1786:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
1787:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** 
1788:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1789:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   constexpr float
1790:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   round(float __x)
1791:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath ****   { return __builtin_roundf(__x); }
 1930              		.loc 6 1791 0
 1931 00cc 080A80EE 		vdiv.f32	s0, s0, s16
 1932 00d0 FEFFFFEB 		bl	roundf
 1933              	.LVL200:
 1934              	.LBE1652:
 1935              	.LBE1651:
 1936              	.LBE1650:
 342:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****        tmp <= static_cast<float>(std::numeric_limits<int32_t>::max()));
 1937              		.loc 5 342 0
 1938 00d4 557ADFED 		vldr.32	s15, .L171+4
 1939 00d8 E70AB4EE 		vcmpe.f32	s0, s15
 1940 00dc 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1941 00e0 170000BA 		blt	.L151
 1942 00e4 527ADFED 		vldr.32	s15, .L171+8
 1943 00e8 E70AB4EE 		vcmpe.f32	s0, s15
 1944 00ec 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 1945 00f0 1300008A 		bhi	.L151
 1946              	.LVL201:
 345:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 1947              		.loc 5 345 0
 1948 00f4 C00ABDEE 		vcvt.s32.f32	s0, s0
 1949              	.LBE1649:
 1950              	.LBE1648:
 1951              	.LBE1647:
 1952              	.LBE1646:
 1953              	.LBE1662:
 379:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 1954              		.loc 5 379 0
 1955 00f8 0000A0E3 		mov	r0, #0
 1956              	.LBB1663:
 1957              	.LBB1656:
 1958              	.LBB1655:
 1959              	.LBB1654:
 1960              	.LBB1653:
 345:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 1961              		.loc 5 345 0
 1962 00fc 103A10EE 		vmov	r3, s0	@ int
 1963 0100 088083E0 		add	r8, r3, r8
 1964              	.LBE1653:
 1965              	.LBE1654:
 1966              	.LBE1655:
 360:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else if (activation == kTfLiteActRelu6) {
 1967              		.loc 5 360 0
 1968 0104 30309DE5 		ldr	r3, [sp, #48]
 359:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *act_max = qmax;
 1969              		.loc 5 359 0
 1970 0108 040058E1 		cmp	r8, r4
 1971 010c 0480A0B1 		movlt	r8, r4
 1972 0110 008086E5 		str	r8, [r6]
 360:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else if (activation == kTfLiteActRelu6) {
 1973              		.loc 5 360 0
 1974 0114 007083E5 		str	r7, [r3]
 1975 0118 D3FFFFEA 		b	.L161
 1976              	.LVL202:
 1977              	.L155:
 1978              	.LBE1656:
 1979              	.LBE1663:
 1980              	.LBE1668:
 1981              	.LBE1674:
 392:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else if (output->type == kTfLiteInt8) {
 1982              		.loc 5 392 0
 1983 011c FF70A0E3 		mov	r7, #255
 391:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     qmax = std::numeric_limits<uint8_t>::max();
 1984              		.loc 5 391 0
 1985 0120 0040A0E3 		mov	r4, #0
 1986 0124 C4FFFFEA 		b	.L134
 1987              	.LVL203:
 1988              	.L168:
 1989              	.LBB1675:
 1990              	.LBB1669:
 1991              	.LBB1664:
 1992              	.LBB1657:
 1993              	.LBB1624:
 1994              	.LBB1625:
 1995              	.LBB1626:
 1996              	.LBB1627:
 340:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const bool no_integer_overflow_from_quantization =
 1997              		.loc 5 340 0
 1998 0128 3F0A9FED 		vldr.32	s0, .L171
 342:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****        tmp <= static_cast<float>(std::numeric_limits<int32_t>::max()));
 1999              		.loc 5 342 0
 2000 012c 3F8ADFED 		vldr.32	s17, .L171+4
 2001              	.LBB1628:
 2002              	.LBB1629:
 2003              	.LBB1630:
 2004              		.loc 6 1791 0
 2005 0130 080A80EE 		vdiv.f32	s0, s0, s16
 2006 0134 FEFFFFEB 		bl	roundf
 2007              	.LVL204:
 2008              	.LBE1630:
 2009              	.LBE1629:
 2010              	.LBE1628:
 342:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****        tmp <= static_cast<float>(std::numeric_limits<int32_t>::max()));
 2011              		.loc 5 342 0
 2012 0138 E80AB4EE 		vcmpe.f32	s0, s17
 2013 013c 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2014 0140 1D0000AA 		bge	.L170
 2015              	.LVL205:
 2016              	.L151:
 2017              	.LBE1627:
 2018              	.LBE1626:
 2019              	.LBE1625:
 2020              	.LBE1624:
 2021              	.LBB1640:
 2022              	.LBB1584:
 2023              	.LBB1585:
 2024              	.LBB1586:
 2025              	.LBB1587:
 2026              	.LBB1588:
 2027              	.LBB1589:
 344:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   q = zero_point + static_cast<int32_t>(tmp);
 2028              		.loc 5 344 0
 2029 0144 003000E3 		movw	r3, #:lower16:.LC8
 2030 0148 002000E3 		movw	r2, #:lower16:.LC3
 2031 014c 003040E3 		movt	r3, #:upper16:.LC8
 2032 0150 001000E3 		movw	r1, #:lower16:.LC4
 2033 0154 00308DE5 		str	r3, [sp]
 2034 0158 0500A0E1 		mov	r0, r5
 2035 015c 002040E3 		movt	r2, #:upper16:.LC3
 2036 0160 001040E3 		movt	r1, #:upper16:.LC4
 2037 0164 144095E5 		ldr	r4, [r5, #20]
 2038 0168 563FA0E3 		mov	r3, #344
 2039 016c 34FF2FE1 		blx	r4
 2040              	.LVL206:
 2041 0170 0100A0E3 		mov	r0, #1
 2042              	.LBE1589:
 2043              	.LBE1588:
 2044              	.LBE1587:
 2045              	.LBE1586:
 2046              	.LBE1585:
 2047              	.LBE1584:
 2048              	.LBE1640:
 2049              	.LBE1657:
 2050              	.LBE1664:
 2051              	.LBE1669:
 2052              	.LBE1675:
 2053              		.loc 5 405 0
 2054 0174 08D08DE2 		add	sp, sp, #8
 2055              		.cfi_remember_state
 2056              		.cfi_def_cfa_offset 40
 2057              		@ sp needed
 2058 0178 048BBDEC 		vldm	sp!, {d8-d9}
 2059              		.cfi_restore 80
 2060              		.cfi_restore 81
 2061              		.cfi_restore 82
 2062              		.cfi_restore 83
 2063              		.cfi_def_cfa_offset 24
 2064 017c F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 2065              	.LVL207:
 2066              	.L169:
 2067              		.cfi_restore_state
 2068              	.LBB1676:
 2069              	.LBB1670:
 2070              	.LBB1665:
 2071              	.LBB1658:
 2072              	.LBB1641:
 2073              	.LBB1620:
 2074              	.LBB1604:
 2075              	.LBB1605:
 2076              	.LBB1606:
 342:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****        tmp <= static_cast<float>(std::numeric_limits<int32_t>::max()));
 2077              		.loc 5 342 0
 2078 0180 2A8ADFED 		vldr.32	s17, .L171+4
 340:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const bool no_integer_overflow_from_quantization =
 2079              		.loc 5 340 0
 2080 0184 000ABFEE 		vmov.f32	s0, #-1.0e+0
 2081              	.LBB1607:
 2082              	.LBB1608:
 2083              	.LBB1609:
 2084              		.loc 6 1791 0
 2085 0188 080A80EE 		vdiv.f32	s0, s0, s16
 2086 018c FEFFFFEB 		bl	roundf
 2087              	.LVL208:
 2088              	.LBE1609:
 2089              	.LBE1608:
 2090              	.LBE1607:
 342:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****        tmp <= static_cast<float>(std::numeric_limits<int32_t>::max()));
 2091              		.loc 5 342 0
 2092 0190 E80AB4EE 		vcmpe.f32	s0, s17
 2093 0194 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2094 0198 E9FFFFBA 		blt	.L151
 2095 019c 249A9FED 		vldr.32	s18, .L171+8
 2096 01a0 C90AB4EE 		vcmpe.f32	s0, s18
 2097 01a4 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2098 01a8 E5FFFF8A 		bhi	.L151
 2099              	.LVL209:
 345:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 2100              		.loc 5 345 0
 2101 01ac C07AFDEE 		vcvt.s32.f32	s15, s0
 2102              	.LBE1606:
 2103              	.LBE1605:
 2104              	.LBE1604:
 2105              	.LBB1614:
 2106              	.LBB1600:
 2107              	.LBB1596:
 340:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const bool no_integer_overflow_from_quantization =
 2108              		.loc 5 340 0
 2109 01b0 000AB7EE 		vmov.f32	s0, #1.0e+0
 2110              	.LBE1596:
 2111              	.LBE1600:
 2112              	.LBE1614:
 2113              	.LBB1615:
 2114              	.LBB1612:
 2115              	.LBB1610:
 345:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 2116              		.loc 5 345 0
 2117 01b4 903A17EE 		vmov	r3, s15	@ int
 2118 01b8 060000EA 		b	.L165
 2119              	.LVL210:
 2120              	.L170:
 2121              	.LBE1610:
 2122              	.LBE1612:
 2123              	.LBE1615:
 2124              	.LBE1620:
 2125              	.LBE1641:
 2126              	.LBB1642:
 2127              	.LBB1635:
 2128              	.LBB1633:
 2129              	.LBB1631:
 342:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****        tmp <= static_cast<float>(std::numeric_limits<int32_t>::max()));
 2130              		.loc 5 342 0
 2131 01bc 1C9A9FED 		vldr.32	s18, .L171+8
 2132 01c0 C90AB4EE 		vcmpe.f32	s0, s18
 2133 01c4 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2134 01c8 DDFFFF8A 		bhi	.L151
 2135              	.LVL211:
 345:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 2136              		.loc 5 345 0
 2137 01cc C07AFDEE 		vcvt.s32.f32	s15, s0
 2138              	.LBE1631:
 2139              	.LBE1633:
 2140              	.LBE1635:
 2141              	.LBB1636:
 2142              	.LBB1637:
 2143              	.LBB1638:
 340:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const bool no_integer_overflow_from_quantization =
 2144              		.loc 5 340 0
 2145 01d0 080AB1EE 		vmov.f32	s0, #6.0e+0
 2146              	.LBE1638:
 2147              	.LBE1637:
 2148              	.LBE1636:
 2149              	.LBB1639:
 2150              	.LBB1634:
 2151              	.LBB1632:
 345:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 2152              		.loc 5 345 0
 2153 01d4 903A17EE 		vmov	r3, s15	@ int
 2154              	.LVL212:
 2155              	.L165:
 2156              	.LBE1632:
 2157              	.LBE1634:
 2158              	.LBE1639:
 2159              	.LBE1642:
 2160              	.LBB1643:
 2161              	.LBB1621:
 2162              	.LBB1616:
 2163              	.LBB1613:
 2164              	.LBB1611:
 2165 01d8 083083E0 		add	r3, r3, r8
 2166              	.LBE1611:
 2167              	.LBE1613:
 2168              	.LBE1616:
 2169              	.LBB1617:
 2170              	.LBB1601:
 2171              	.LBB1597:
 2172              	.LBB1590:
 2173              	.LBB1591:
 2174              	.LBB1592:
 2175              		.loc 6 1791 0
 2176 01dc 080A80EE 		vdiv.f32	s0, s0, s16
 2177              	.LBE1592:
 2178              	.LBE1591:
 2179              	.LBE1590:
 2180              	.LBE1597:
 2181              	.LBE1601:
 2182              	.LBE1617:
 371:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_OK(context,
 2183              		.loc 5 371 0
 2184 01e0 040053E1 		cmp	r3, r4
 2185 01e4 0340A0A1 		movge	r4, r3
 2186              	.LVL213:
 2187 01e8 004086E5 		str	r4, [r6]
 2188              	.LVL214:
 2189              	.LBB1618:
 2190              	.LBB1602:
 2191              	.LBB1598:
 2192              	.LBB1595:
 2193              	.LBB1594:
 2194              	.LBB1593:
 2195              		.loc 6 1791 0
 2196 01ec FEFFFFEB 		bl	roundf
 2197              	.LVL215:
 2198              	.LBE1593:
 2199              	.LBE1594:
 2200              	.LBE1595:
 342:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****        tmp <= static_cast<float>(std::numeric_limits<int32_t>::max()));
 2201              		.loc 5 342 0
 2202 01f0 E80AB4EE 		vcmpe.f32	s0, s17
 2203 01f4 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2204 01f8 D1FFFFBA 		blt	.L151
 2205 01fc C90AB4EE 		vcmpe.f32	s0, s18
 2206 0200 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 2207 0204 CEFFFF8A 		bhi	.L151
 2208              	.LVL216:
 345:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 2209              		.loc 5 345 0
 2210 0208 C00ABDEE 		vcvt.s32.f32	s0, s0
 2211              	.LBE1598:
 2212              	.LBE1602:
 2213              	.LBE1618:
 2214              	.LBE1621:
 2215              	.LBE1643:
 2216              	.LBE1658:
 2217              	.LBE1665:
 379:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 2218              		.loc 5 379 0
 2219 020c 0000A0E3 		mov	r0, #0
 2220              	.LBB1666:
 2221              	.LBB1659:
 2222              	.LBB1644:
 2223              	.LBB1622:
 2224              	.LBB1619:
 2225              	.LBB1603:
 2226              	.LBB1599:
 345:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 2227              		.loc 5 345 0
 2228 0210 103A10EE 		vmov	r3, s0	@ int
 2229 0214 088083E0 		add	r8, r3, r8
 2230              	.LBE1599:
 2231              	.LBE1603:
 2232              	.LBE1619:
 374:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   } else {
 2233              		.loc 5 374 0
 2234 0218 30309DE5 		ldr	r3, [sp, #48]
 2235 021c 070058E1 		cmp	r8, r7
 2236 0220 0780A0A1 		movge	r8, r7
 2237 0224 008083E5 		str	r8, [r3]
 2238 0228 8FFFFFEA 		b	.L161
 2239              	.L172:
 2240              		.align	2
 2241              	.L171:
 2242 022c 00000000 		.word	0
 2243 0230 000000CF 		.word	-822083584
 2244 0234 0000004F 		.word	1325400064
 2245              	.LBE1622:
 2246              	.LBE1644:
 2247              	.LBE1659:
 2248              	.LBE1666:
 2249              	.LBE1670:
 2250              	.LBE1676:
 2251              		.cfi_endproc
 2252              	.LFE3289:
 2253              		.fnend
 2255              		.section	.text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS
 2256              		.align	2
 2257              		.global	_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS
 2258              		.syntax unified
 2259              		.arm
 2260              		.fpu neon
 2262              	_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfL
 2263              		.fnstart
 2264              	.LFB3284:
 216:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE_EQ(context, input->quantization.type,
 2265              		.loc 5 216 0
 2266              		.cfi_startproc
 2267              		@ args = 36, pretend = 0, frame = 24
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              	.LVL217:
 2270 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2271              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2272              		.cfi_def_cfa_offset 36
 2273              		.cfi_offset 4, -36
 2274              		.cfi_offset 5, -32
 2275              		.cfi_offset 6, -28
 2276              		.cfi_offset 7, -24
 2277              		.cfi_offset 8, -20
 2278              		.cfi_offset 9, -16
 2279              		.cfi_offset 10, -12
 2280              		.cfi_offset 11, -8
 2281              		.cfi_offset 14, -4
 2282 0004 00E0A0E1 		mov	lr, r0
 217:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 2283              		.loc 5 217 0
 2284 0008 3050D1E5 		ldrb	r5, [r1, #48]	@ zero_extendqisi2
 216:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE_EQ(context, input->quantization.type,
 2285              		.loc 5 216 0
 2286 000c 048B2DED 		vpush.64	{d8, d9}
 2287              		.vsave {d8, d9}
 2288              		.cfi_def_cfa_offset 52
 2289              		.cfi_offset 80, -52
 2290              		.cfi_offset 81, -48
 2291              		.cfi_offset 82, -44
 2292              		.cfi_offset 83, -40
 2293              		.pad #44
 2294 0010 2CD04DE2 		sub	sp, sp, #44
 2295              		.cfi_def_cfa_offset 96
 217:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 2296              		.loc 5 217 0
 2297 0014 010055E3 		cmp	r5, #1
 216:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE_EQ(context, input->quantization.type,
 2298              		.loc 5 216 0
 2299 0018 14308DE5 		str	r3, [sp, #20]
 2300 001c 10008DE5 		str	r0, [sp, #16]
 217:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 2301              		.loc 5 217 0
 2302 0020 DE00001A 		bne	.L211
 2303              	.LBB1704:
 2304              	.LBB1705:
 219:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 2305              		.loc 5 219 0
 2306 0024 3040D2E5 		ldrb	r4, [r2, #48]	@ zero_extendqisi2
 2307 0028 0270A0E1 		mov	r7, r2
 2308              	.LVL218:
 2309 002c 010054E3 		cmp	r4, #1
 2310 0030 C800001A 		bne	.L212
 229:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, affine_quantization);
 2311              		.loc 5 229 0
 2312 0034 342092E5 		ldr	r2, [r2, #52]
 2313              	.LVL219:
 230:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale);
 2314              		.loc 5 230 0
 2315 0038 000052E3 		cmp	r2, #0
 2316 003c EA01000A 		beq	.L213
 231:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const bool is_per_channel = affine_quantization->scale->size > 1;
 2317              		.loc 5 231 0
 2318 0040 00B092E5 		ldr	fp, [r2]
 2319 0044 00005BE3 		cmp	fp, #0
 2320 0048 F301000A 		beq	.L214
 232:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (is_per_channel) {
 2321              		.loc 5 232 0
 2322 004c 00C09BE5 		ldr	ip, [fp]
 2323              	.LVL220:
 2324 0050 0160A0E1 		mov	r6, r1
 233:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     //  Currently only Int8/Int16 is supported for per channel quantization.
 2325              		.loc 5 233 0
 2326 0054 01005CE3 		cmp	ip, #1
 2327 0058 E40000DA 		ble	.L179
 235:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                    input->type == kTfLiteInt8 || input->type == kTfLiteInt16);
 2328              		.loc 5 235 0
 2329 005c 0010D1E5 		ldrb	r1, [r1]	@ zero_extendqisi2
 2330              	.LVL221:
 2331 0060 071041E2 		sub	r1, r1, #7
 2332 0064 FD0011E3 		tst	r1, #253
 2333 0068 8701001A 		bne	.L215
 237:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_EQ(context, affine_quantization->scale->size, num_channels);
 2334              		.loc 5 237 0
 2335 006c 0010D7E5 		ldrb	r1, [r7]	@ zero_extendqisi2
 2336 0070 090051E3 		cmp	r1, #9
 2337 0074 7201001A 		bne	.L216
 238:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_EQ(
 2338              		.loc 5 238 0
 2339 0078 80309DE5 		ldr	r3, [sp, #128]
 2340              	.LVL222:
 2341 007c 0C0053E1 		cmp	r3, ip
 2342 0080 A001001A 		bne	.L217
 239:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         context, num_channels,
 2343              		.loc 5 239 0
 2344 0084 081092E5 		ldr	r1, [r2, #8]
 2345 0088 082097E5 		ldr	r2, [r7, #8]
 2346              	.LVL223:
 2347 008c 012182E0 		add	r2, r2, r1, lsl #2
 2348 0090 041092E5 		ldr	r1, [r2, #4]
 2349 0094 010053E1 		cmp	r3, r1
 2350 0098 8701001A 		bne	.L218
 2351              	.LVL224:
 2352 009c 080053E3 		cmp	r3, #8
 2353 00a0 60309DE5 		ldr	r3, [sp, #96]
 2354 00a4 039A96ED 		vldr.32	s18, [r6, #12]
 247:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   for (int i = 0; i < num_channels; ++i) {
 2355              		.loc 5 247 0
 2356 00a8 0080A0D3 		movle	r8, #0
 2357 00ac 24508DD2 		addle	r5, sp, #36
 2358 00b0 20408DD2 		addle	r4, sp, #32
 2359 00b4 038A93ED 		vldr.32	s16, [r3, #12]
 2360 00b8 04308BE2 		add	r3, fp, #4
 2361 00bc 18308DE5 		str	r3, [sp, #24]
 2362              	.LVL225:
 2363 00c0 C99AB7EE 		vcvt.f64.f32	d9, s18
 2364 00c4 C88AB7EE 		vcvt.f64.f32	d8, s16
 2365 00c8 760000DA 		ble	.L185
 2366 00cc 80309DE5 		ldr	r3, [sp, #128]
 2367              	.LVL226:
 2368 00d0 0080A0E3 		mov	r8, #0
 2369 00d4 1C608DE5 		str	r6, [sp, #28]
 2370 00d8 1CB08BE2 		add	fp, fp, #28
 2371 00dc 24508DE2 		add	r5, sp, #36
 2372 00e0 20408DE2 		add	r4, sp, #32
 2373 00e4 092043E2 		sub	r2, r3, #9
 2374 00e8 78309DE5 		ldr	r3, [sp, #120]
 2375 00ec 0720C2E3 		bic	r2, r2, #7
 2376 00f0 18A083E2 		add	r10, r3, #24
 2377 00f4 083082E2 		add	r3, r2, #8
 2378 00f8 7C209DE5 		ldr	r2, [sp, #124]
 2379 00fc 0360A0E1 		mov	r6, r3
 2380              	.LVL227:
 2381 0100 0730A0E1 		mov	r3, r7
 2382 0104 0870A0E1 		mov	r7, r8
 2383              	.LVL228:
 2384 0108 0380A0E1 		mov	r8, r3
 2385 010c 189082E2 		add	r9, r2, #24
 2386              	.LVL229:
 2387              	.L191:
 2388              	.LBB1706:
 2389              	.LBB1707:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2390              		.loc 5 252 0
 2391 0110 060A1BED 		vldr.32	s0, [fp, #-24]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2392              		.loc 5 258 0
 2393 0114 0510A0E1 		mov	r1, r5
 2394 0118 0400A0E1 		mov	r0, r4
 2395 011c 00F0DBF5 		pld	[fp]
 2396              	.LVL230:
 2397 0120 00F0DAF5 		pld	[r10]
 2398 0124 087087E2 		add	r7, r7, #8
 2399              	.LVL231:
 2400 0128 00F0D9F5 		pld	[r9]
 2401 012c 20B08BE2 		add	fp, fp, #32
 2402              	.LVL232:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2403              		.loc 5 252 0
 2404 0130 C00AB7EE 		vcvt.f64.f32	d0, s0
 2405              	.LVL233:
 2406 0134 20A08AE2 		add	r10, r10, #32
 2407 0138 209089E2 		add	r9, r9, #32
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2408              		.loc 5 253 0
 2409 013c 090B20EE 		vmul.f64	d0, d0, d9
 2410              	.LVL234:
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2411              		.loc 5 258 0
 2412 0140 080B80EE 		vdiv.f64	d0, d0, d8
 2413 0144 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2414              	.LVL235:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2415              		.loc 5 259 0
 2416 0148 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2417              		.loc 5 258 0
 2418 014c 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2419              		.loc 5 260 0
 2420 0150 24209DE5 		ldr	r2, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2421              		.loc 5 258 0
 2422 0154 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2423              		.loc 5 252 0
 2424 0158 0D0A1BED 		vldr.32	s0, [fp, #-52]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2425              		.loc 5 259 0
 2426 015c 38C00AE5 		str	ip, [r10, #-56]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2427              		.loc 5 260 0
 2428 0160 382009E5 		str	r2, [r9, #-56]
 2429              	.LVL236:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2430              		.loc 5 252 0
 2431 0164 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2432              		.loc 5 253 0
 2433 0168 090B20EE 		vmul.f64	d0, d0, d9
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2434              		.loc 5 258 0
 2435 016c 080B80EE 		vdiv.f64	d0, d0, d8
 2436 0170 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2437              	.LVL237:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2438              		.loc 5 259 0
 2439 0174 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2440              		.loc 5 258 0
 2441 0178 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2442              		.loc 5 260 0
 2443 017c 24209DE5 		ldr	r2, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2444              		.loc 5 258 0
 2445 0180 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2446              		.loc 5 252 0
 2447 0184 0C0A1BED 		vldr.32	s0, [fp, #-48]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2448              		.loc 5 259 0
 2449 0188 34C00AE5 		str	ip, [r10, #-52]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2450              		.loc 5 260 0
 2451 018c 342009E5 		str	r2, [r9, #-52]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2452              		.loc 5 252 0
 2453 0190 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2454              		.loc 5 253 0
 2455 0194 090B20EE 		vmul.f64	d0, d0, d9
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2456              		.loc 5 258 0
 2457 0198 080B80EE 		vdiv.f64	d0, d0, d8
 2458 019c FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2459              	.LVL238:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2460              		.loc 5 259 0
 2461 01a0 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2462              		.loc 5 258 0
 2463 01a4 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2464              		.loc 5 260 0
 2465 01a8 24209DE5 		ldr	r2, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2466              		.loc 5 258 0
 2467 01ac 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2468              		.loc 5 252 0
 2469 01b0 0B0A1BED 		vldr.32	s0, [fp, #-44]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2470              		.loc 5 259 0
 2471 01b4 30C00AE5 		str	ip, [r10, #-48]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2472              		.loc 5 260 0
 2473 01b8 302009E5 		str	r2, [r9, #-48]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2474              		.loc 5 252 0
 2475 01bc C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2476              		.loc 5 253 0
 2477 01c0 090B20EE 		vmul.f64	d0, d0, d9
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2478              		.loc 5 258 0
 2479 01c4 080B80EE 		vdiv.f64	d0, d0, d8
 2480 01c8 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2481              	.LVL239:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2482              		.loc 5 259 0
 2483 01cc 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2484              		.loc 5 258 0
 2485 01d0 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2486              		.loc 5 260 0
 2487 01d4 24209DE5 		ldr	r2, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2488              		.loc 5 258 0
 2489 01d8 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2490              		.loc 5 252 0
 2491 01dc 0A0A1BED 		vldr.32	s0, [fp, #-40]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2492              		.loc 5 259 0
 2493 01e0 2CC00AE5 		str	ip, [r10, #-44]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2494              		.loc 5 260 0
 2495 01e4 2C2009E5 		str	r2, [r9, #-44]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2496              		.loc 5 252 0
 2497 01e8 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2498              		.loc 5 253 0
 2499 01ec 090B20EE 		vmul.f64	d0, d0, d9
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2500              		.loc 5 258 0
 2501 01f0 080B80EE 		vdiv.f64	d0, d0, d8
 2502 01f4 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2503              	.LVL240:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2504              		.loc 5 259 0
 2505 01f8 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2506              		.loc 5 258 0
 2507 01fc 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2508              		.loc 5 260 0
 2509 0200 24209DE5 		ldr	r2, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2510              		.loc 5 258 0
 2511 0204 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2512              		.loc 5 252 0
 2513 0208 090A1BED 		vldr.32	s0, [fp, #-36]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2514              		.loc 5 259 0
 2515 020c 28C00AE5 		str	ip, [r10, #-40]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2516              		.loc 5 260 0
 2517 0210 282009E5 		str	r2, [r9, #-40]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2518              		.loc 5 252 0
 2519 0214 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2520              		.loc 5 253 0
 2521 0218 090B20EE 		vmul.f64	d0, d0, d9
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2522              		.loc 5 258 0
 2523 021c 080B80EE 		vdiv.f64	d0, d0, d8
 2524 0220 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2525              	.LVL241:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2526              		.loc 5 259 0
 2527 0224 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2528              		.loc 5 258 0
 2529 0228 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2530              		.loc 5 260 0
 2531 022c 24209DE5 		ldr	r2, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2532              		.loc 5 258 0
 2533 0230 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2534              		.loc 5 252 0
 2535 0234 080A1BED 		vldr.32	s0, [fp, #-32]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2536              		.loc 5 259 0
 2537 0238 24C00AE5 		str	ip, [r10, #-36]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2538              		.loc 5 260 0
 2539 023c 242009E5 		str	r2, [r9, #-36]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2540              		.loc 5 252 0
 2541 0240 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2542              		.loc 5 253 0
 2543 0244 090B20EE 		vmul.f64	d0, d0, d9
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2544              		.loc 5 258 0
 2545 0248 080B80EE 		vdiv.f64	d0, d0, d8
 2546 024c FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2547              	.LVL242:
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2548              		.loc 5 260 0
 2549 0250 24209DE5 		ldr	r2, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2550              		.loc 5 258 0
 2551 0254 0510A0E1 		mov	r1, r5
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2552              		.loc 5 259 0
 2553 0258 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2554              		.loc 5 258 0
 2555 025c 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2556              		.loc 5 252 0
 2557 0260 070A1BED 		vldr.32	s0, [fp, #-28]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2558              		.loc 5 259 0
 2559 0264 20C00AE5 		str	ip, [r10, #-32]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2560              		.loc 5 260 0
 2561 0268 202009E5 		str	r2, [r9, #-32]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2562              		.loc 5 252 0
 2563 026c C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2564              		.loc 5 253 0
 2565 0270 090B20EE 		vmul.f64	d0, d0, d9
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2566              		.loc 5 258 0
 2567 0274 080B80EE 		vdiv.f64	d0, d0, d8
 2568 0278 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2569              	.LVL243:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2570              		.loc 5 259 0
 2571 027c 20109DE5 		ldr	r1, [sp, #32]
 2572 0280 060057E1 		cmp	r7, r6
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2573              		.loc 5 260 0
 2574 0284 24209DE5 		ldr	r2, [sp, #36]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2575              		.loc 5 259 0
 2576 0288 1C100AE5 		str	r1, [r10, #-28]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2577              		.loc 5 260 0
 2578 028c 1C2009E5 		str	r2, [r9, #-28]
 2579 0290 9EFFFF1A 		bne	.L191
 2580 0294 0830A0E1 		mov	r3, r8
 2581 0298 1C609DE5 		ldr	r6, [sp, #28]
 2582 029c 0780A0E1 		mov	r8, r7
 2583              	.LVL244:
 2584 02a0 0370A0E1 		mov	r7, r3
 2585              	.LVL245:
 2586 02a4 18309DE5 		ldr	r3, [sp, #24]
 2587              	.LVL246:
 2588              	.L185:
 2589 02a8 08A1A0E1 		lsl	r10, r8, #2
 2590 02ac 18608DE5 		str	r6, [sp, #24]
 2591              	.LVL247:
 2592 02b0 0AB083E0 		add	fp, r3, r10
 2593 02b4 78309DE5 		ldr	r3, [sp, #120]
 2594 02b8 0A9083E0 		add	r9, r3, r10
 2595 02bc 7C309DE5 		ldr	r3, [sp, #124]
 2596 02c0 0AA083E0 		add	r10, r3, r10
 2597 02c4 0A60A0E1 		mov	r6, r10
 2598 02c8 05A0A0E1 		mov	r10, r5
 2599 02cc 0450A0E1 		mov	r5, r4
 2600 02d0 80409DE5 		ldr	r4, [sp, #128]
 2601              	.L192:
 2602              	.LVL248:
 251:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double filter_scale = static_cast<double>(scale);
 2603              		.loc 5 251 0
 2604 02d4 010ABBEC 		vldmia.32	fp!, {s0}
 2605              	.LVL249:
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2606              		.loc 5 258 0
 2607 02d8 0A10A0E1 		mov	r1, r10
 2608 02dc 0500A0E1 		mov	r0, r5
 2609              	.LBE1707:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 2610              		.loc 5 248 0
 2611 02e0 018088E2 		add	r8, r8, #1
 2612              	.LVL250:
 2613              	.LBB1708:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2614              		.loc 5 252 0
 2615 02e4 C00AB7EE 		vcvt.f64.f32	d0, s0
 2616              	.LVL251:
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2617              		.loc 5 253 0
 2618 02e8 090B20EE 		vmul.f64	d0, d0, d9
 2619              	.LVL252:
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2620              		.loc 5 258 0
 2621 02ec 080B80EE 		vdiv.f64	d0, d0, d8
 2622              	.LVL253:
 2623 02f0 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2624              	.LVL254:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2625              		.loc 5 259 0
 2626 02f4 20109DE5 		ldr	r1, [sp, #32]
 2627              	.LBE1708:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 2628              		.loc 5 248 0
 2629 02f8 080054E1 		cmp	r4, r8
 2630              	.LBB1709:
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2631              		.loc 5 260 0
 2632 02fc 24209DE5 		ldr	r2, [sp, #36]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2633              		.loc 5 259 0
 2634 0300 041089E4 		str	r1, [r9], #4
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2635              		.loc 5 260 0
 2636 0304 042086E4 		str	r2, [r6], #4
 2637              	.LBE1709:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 2638              		.loc 5 248 0
 2639 0308 F1FFFFCA 		bgt	.L192
 2640              	.L208:
 2641 030c 18609DE5 		ldr	r6, [sp, #24]
 2642              	.LVL255:
 2643              	.L189:
 2644              	.LBE1706:
 2645              	.LBB1713:
 266:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // Check bias scale == input scale * filter scale.
 2646              		.loc 5 266 0
 2647 0310 0030D6E5 		ldrb	r3, [r6]	@ zero_extendqisi2
 2648 0314 030053E3 		cmp	r3, #3
 2649 0318 0D01000A 		beq	.L219
 2650              	.L187:
 2651              	.LBE1713:
 2652              	.LBB1745:
 277:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       input->type == kTfLiteInt16) {
 2653              		.loc 5 277 0
 2654 031c FB0003E2 		and	r0, r3, #251
 2655 0320 090053E3 		cmp	r3, #9
 2656 0324 03005013 		cmpne	r0, #3
 2657 0328 0100A003 		moveq	r0, #1
 2658 032c 0000A013 		movne	r0, #0
 2659 0330 1700001A 		bne	.L205
 2660              	.LBB1746:
 279:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         context, activation, output, output_activation_min,
 2661              		.loc 5 279 0
 2662 0334 64309DE5 		ldr	r3, [sp, #100]
 2663 0338 10009DE5 		ldr	r0, [sp, #16]
 2664 033c 60209DE5 		ldr	r2, [sp, #96]
 2665 0340 0010D3E5 		ldrb	r1, [r3]	@ zero_extendqisi2
 2666 0344 74309DE5 		ldr	r3, [sp, #116]
 2667 0348 00308DE5 		str	r3, [sp]
 2668 034c 70309DE5 		ldr	r3, [sp, #112]
 2669 0350 FEFFFFEB 		bl	_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteT
 2670              	.LVL256:
 2671 0354 0E0000EA 		b	.L205
 2672              	.LVL257:
 2673              	.L212:
 2674              	.LBE1746:
 2675              	.LBE1745:
 219:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 2676              		.loc 5 219 0
 2677 0358 00E000E3 		movw	lr, #:lower16:.LC10
 2678 035c 00C000E3 		movw	ip, #:lower16:.LC12
 2679 0360 00E040E3 		movt	lr, #:upper16:.LC10
 2680 0364 00C040E3 		movt	ip, #:upper16:.LC12
 2681 0368 002000E3 		movw	r2, #:lower16:.LC3
 2682              	.LVL258:
 2683 036c 001000E3 		movw	r1, #:lower16:.LC9
 2684              	.LVL259:
 2685 0370 0C508DE5 		str	r5, [sp, #12]
 2686 0374 002040E3 		movt	r2, #:upper16:.LC3
 2687 0378 08408DE5 		str	r4, [sp, #8]
 2688 037c 001040E3 		movt	r1, #:upper16:.LC9
 2689 0380 144090E5 		ldr	r4, [r0, #20]
 2690 0384 DC30A0E3 		mov	r3, #220
 2691              	.LVL260:
 2692 0388 00508DE8 		stm	sp, {ip, lr}
 2693 038c 34FF2FE1 		blx	r4
 2694              	.LVL261:
 2695 0390 0500A0E1 		mov	r0, r5
 2696              	.L205:
 2697              	.LBE1705:
 2698              	.LBE1704:
 284:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 2699              		.loc 5 284 0
 2700 0394 2CD08DE2 		add	sp, sp, #44
 2701              		.cfi_remember_state
 2702              		.cfi_def_cfa_offset 52
 2703              		@ sp needed
 2704 0398 048BBDEC 		vldm	sp!, {d8-d9}
 2705              		.cfi_restore 82
 2706              		.cfi_restore 83
 2707              		.cfi_restore 80
 2708              		.cfi_restore 81
 2709              		.cfi_def_cfa_offset 36
 2710 039c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2711              	.LVL262:
 2712              	.L211:
 2713              		.cfi_restore_state
 217:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 2714              		.loc 5 217 0 discriminator 1
 2715 03a0 00C000E3 		movw	ip, #:lower16:.LC10
 2716 03a4 003000E3 		movw	r3, #:lower16:.LC11
 2717              	.LVL263:
 2718 03a8 00C040E3 		movt	ip, #:upper16:.LC10
 2719 03ac 0140A0E3 		mov	r4, #1
 2720 03b0 003040E3 		movt	r3, #:upper16:.LC11
 2721 03b4 002000E3 		movw	r2, #:lower16:.LC3
 2722              	.LVL264:
 2723 03b8 001000E3 		movw	r1, #:lower16:.LC9
 2724              	.LVL265:
 2725 03bc 08508DE5 		str	r5, [sp, #8]
 2726 03c0 002040E3 		movt	r2, #:upper16:.LC3
 2727 03c4 145090E5 		ldr	r5, [r0, #20]
 2728 03c8 001040E3 		movt	r1, #:upper16:.LC9
 2729 03cc 00308DE5 		str	r3, [sp]
 2730 03d0 04C08DE5 		str	ip, [sp, #4]
 2731 03d4 DA30A0E3 		mov	r3, #218
 2732 03d8 0C408DE5 		str	r4, [sp, #12]
 2733 03dc 35FF2FE1 		blx	r5
 2734              	.LVL266:
 2735 03e0 0400A0E1 		mov	r0, r4
 284:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 2736              		.loc 5 284 0 discriminator 1
 2737 03e4 2CD08DE2 		add	sp, sp, #44
 2738              		.cfi_remember_state
 2739              		.cfi_def_cfa_offset 52
 2740              		@ sp needed
 2741 03e8 048BBDEC 		vldm	sp!, {d8-d9}
 2742              		.cfi_restore 80
 2743              		.cfi_restore 81
 2744              		.cfi_restore 82
 2745              		.cfi_restore 83
 2746              		.cfi_def_cfa_offset 36
 2747 03ec F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2748              	.LVL267:
 2749              	.L179:
 2750              		.cfi_restore_state
 2751              	.LBB1753:
 2752              	.LBB1752:
 2753              	.LBB1747:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 2754              		.loc 5 248 0
 2755 03f0 80309DE5 		ldr	r3, [sp, #128]
 2756              	.LVL268:
 2757              	.LBE1747:
 245:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const float output_scale = output->params.scale;
 2758              		.loc 5 245 0
 2759 03f4 038A91ED 		vldr.32	s16, [r1, #12]
 2760              	.LVL269:
 2761              	.LBB1748:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 2762              		.loc 5 248 0
 2763 03f8 000053E3 		cmp	r3, #0
 2764              	.LBE1748:
 246:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const float* filter_scales = affine_quantization->scale->data;
 2765              		.loc 5 246 0
 2766 03fc 60309DE5 		ldr	r3, [sp, #96]
 2767 0400 039A93ED 		vldr.32	s18, [r3, #12]
 2768              	.LVL270:
 2769              	.LBB1749:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 2770              		.loc 5 248 0
 2771 0404 C1FFFFDA 		ble	.L189
 2772 0408 80309DE5 		ldr	r3, [sp, #128]
 2773 040c C88AB7EE 		vcvt.f64.f32	d8, s16
 2774              	.LVL271:
 2775 0410 C99AB7EE 		vcvt.f64.f32	d9, s18
 2776              	.LVL272:
 2777 0414 080053E3 		cmp	r3, #8
 2778 0418 0020A0D3 		movle	r2, #0
 2779              	.LVL273:
 2780 041c 24508DD2 		addle	r5, sp, #36
 2781 0420 20408DD2 		addle	r4, sp, #32
 2782 0424 6C0000DA 		ble	.L197
 2783 0428 092043E2 		sub	r2, r3, #9
 2784 042c 78309DE5 		ldr	r3, [sp, #120]
 2785 0430 0720C2E3 		bic	r2, r2, #7
 2786 0434 18608DE5 		str	r6, [sp, #24]
 2787 0438 088082E2 		add	r8, r2, #8
 2788 043c 0020A0E3 		mov	r2, #0
 2789 0440 18A083E2 		add	r10, r3, #24
 2790 0444 7C309DE5 		ldr	r3, [sp, #124]
 2791 0448 24508DE2 		add	r5, sp, #36
 2792 044c 20408DE2 		add	r4, sp, #32
 2793 0450 0260A0E1 		mov	r6, r2
 2794 0454 189083E2 		add	r9, r3, #24
 2795              	.LVL274:
 2796              	.L188:
 2797              	.LBB1710:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2798              		.loc 5 252 0
 2799 0458 010A9BED 		vldr.32	s0, [fp, #4]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2800              		.loc 5 258 0
 2801 045c 0510A0E1 		mov	r1, r5
 2802 0460 0400A0E1 		mov	r0, r4
 2803 0464 00F0DAF5 		pld	[r10]
 2804 0468 00F0D9F5 		pld	[r9]
 2805 046c 086086E2 		add	r6, r6, #8
 2806              	.LVL275:
 2807 0470 20A08AE2 		add	r10, r10, #32
 2808 0474 209089E2 		add	r9, r9, #32
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2809              		.loc 5 252 0
 2810 0478 C00AB7EE 		vcvt.f64.f32	d0, s0
 2811              	.LVL276:
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2812              		.loc 5 253 0
 2813 047c 080B20EE 		vmul.f64	d0, d0, d8
 2814              	.LVL277:
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2815              		.loc 5 258 0
 2816 0480 090B80EE 		vdiv.f64	d0, d0, d9
 2817 0484 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2818              	.LVL278:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2819              		.loc 5 259 0
 2820 0488 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2821              		.loc 5 258 0
 2822 048c 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2823              		.loc 5 260 0
 2824 0490 24309DE5 		ldr	r3, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2825              		.loc 5 258 0
 2826 0494 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2827              		.loc 5 252 0
 2828 0498 010A9BED 		vldr.32	s0, [fp, #4]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2829              		.loc 5 259 0
 2830 049c 38C00AE5 		str	ip, [r10, #-56]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2831              		.loc 5 260 0
 2832 04a0 383009E5 		str	r3, [r9, #-56]
 2833              	.LVL279:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2834              		.loc 5 252 0
 2835 04a4 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2836              		.loc 5 253 0
 2837 04a8 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2838              		.loc 5 258 0
 2839 04ac 090B80EE 		vdiv.f64	d0, d0, d9
 2840 04b0 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2841              	.LVL280:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2842              		.loc 5 259 0
 2843 04b4 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2844              		.loc 5 258 0
 2845 04b8 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2846              		.loc 5 260 0
 2847 04bc 24309DE5 		ldr	r3, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2848              		.loc 5 258 0
 2849 04c0 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2850              		.loc 5 252 0
 2851 04c4 010A9BED 		vldr.32	s0, [fp, #4]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2852              		.loc 5 259 0
 2853 04c8 34C00AE5 		str	ip, [r10, #-52]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2854              		.loc 5 260 0
 2855 04cc 343009E5 		str	r3, [r9, #-52]
 2856              	.LVL281:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2857              		.loc 5 252 0
 2858 04d0 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2859              		.loc 5 253 0
 2860 04d4 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2861              		.loc 5 258 0
 2862 04d8 090B80EE 		vdiv.f64	d0, d0, d9
 2863 04dc FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2864              	.LVL282:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2865              		.loc 5 259 0
 2866 04e0 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2867              		.loc 5 258 0
 2868 04e4 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2869              		.loc 5 260 0
 2870 04e8 24309DE5 		ldr	r3, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2871              		.loc 5 258 0
 2872 04ec 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2873              		.loc 5 252 0
 2874 04f0 010A9BED 		vldr.32	s0, [fp, #4]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2875              		.loc 5 259 0
 2876 04f4 30C00AE5 		str	ip, [r10, #-48]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2877              		.loc 5 260 0
 2878 04f8 303009E5 		str	r3, [r9, #-48]
 2879              	.LVL283:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2880              		.loc 5 252 0
 2881 04fc C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2882              		.loc 5 253 0
 2883 0500 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2884              		.loc 5 258 0
 2885 0504 090B80EE 		vdiv.f64	d0, d0, d9
 2886 0508 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2887              	.LVL284:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2888              		.loc 5 259 0
 2889 050c 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2890              		.loc 5 258 0
 2891 0510 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2892              		.loc 5 260 0
 2893 0514 24309DE5 		ldr	r3, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2894              		.loc 5 258 0
 2895 0518 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2896              		.loc 5 252 0
 2897 051c 010A9BED 		vldr.32	s0, [fp, #4]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2898              		.loc 5 259 0
 2899 0520 2CC00AE5 		str	ip, [r10, #-44]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2900              		.loc 5 260 0
 2901 0524 2C3009E5 		str	r3, [r9, #-44]
 2902              	.LVL285:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2903              		.loc 5 252 0
 2904 0528 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2905              		.loc 5 253 0
 2906 052c 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2907              		.loc 5 258 0
 2908 0530 090B80EE 		vdiv.f64	d0, d0, d9
 2909 0534 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2910              	.LVL286:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2911              		.loc 5 259 0
 2912 0538 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2913              		.loc 5 258 0
 2914 053c 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2915              		.loc 5 260 0
 2916 0540 24309DE5 		ldr	r3, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2917              		.loc 5 258 0
 2918 0544 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2919              		.loc 5 252 0
 2920 0548 010A9BED 		vldr.32	s0, [fp, #4]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2921              		.loc 5 259 0
 2922 054c 28C00AE5 		str	ip, [r10, #-40]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2923              		.loc 5 260 0
 2924 0550 283009E5 		str	r3, [r9, #-40]
 2925              	.LVL287:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2926              		.loc 5 252 0
 2927 0554 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2928              		.loc 5 253 0
 2929 0558 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2930              		.loc 5 258 0
 2931 055c 090B80EE 		vdiv.f64	d0, d0, d9
 2932 0560 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2933              	.LVL288:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2934              		.loc 5 259 0
 2935 0564 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2936              		.loc 5 258 0
 2937 0568 0510A0E1 		mov	r1, r5
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2938              		.loc 5 260 0
 2939 056c 24309DE5 		ldr	r3, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2940              		.loc 5 258 0
 2941 0570 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2942              		.loc 5 252 0
 2943 0574 010A9BED 		vldr.32	s0, [fp, #4]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2944              		.loc 5 259 0
 2945 0578 24C00AE5 		str	ip, [r10, #-36]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2946              		.loc 5 260 0
 2947 057c 243009E5 		str	r3, [r9, #-36]
 2948              	.LVL289:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2949              		.loc 5 252 0
 2950 0580 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2951              		.loc 5 253 0
 2952 0584 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2953              		.loc 5 258 0
 2954 0588 090B80EE 		vdiv.f64	d0, d0, d9
 2955 058c FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2956              	.LVL290:
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2957              		.loc 5 260 0
 2958 0590 24309DE5 		ldr	r3, [sp, #36]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2959              		.loc 5 258 0
 2960 0594 0510A0E1 		mov	r1, r5
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2961              		.loc 5 259 0
 2962 0598 20C09DE5 		ldr	ip, [sp, #32]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2963              		.loc 5 258 0
 2964 059c 0400A0E1 		mov	r0, r4
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2965              		.loc 5 252 0
 2966 05a0 010A9BED 		vldr.32	s0, [fp, #4]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2967              		.loc 5 259 0
 2968 05a4 20C00AE5 		str	ip, [r10, #-32]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2969              		.loc 5 260 0
 2970 05a8 203009E5 		str	r3, [r9, #-32]
 2971              	.LVL291:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 2972              		.loc 5 252 0
 2973 05ac C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 2974              		.loc 5 253 0
 2975 05b0 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 2976              		.loc 5 258 0
 2977 05b4 090B80EE 		vdiv.f64	d0, d0, d9
 2978 05b8 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 2979              	.LVL292:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2980              		.loc 5 259 0
 2981 05bc 20109DE5 		ldr	r1, [sp, #32]
 2982 05c0 080056E1 		cmp	r6, r8
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2983              		.loc 5 260 0
 2984 05c4 24309DE5 		ldr	r3, [sp, #36]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 2985              		.loc 5 259 0
 2986 05c8 1C100AE5 		str	r1, [r10, #-28]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 2987              		.loc 5 260 0
 2988 05cc 1C3009E5 		str	r3, [r9, #-28]
 2989 05d0 A0FFFF1A 		bne	.L188
 2990 05d4 0620A0E1 		mov	r2, r6
 2991 05d8 18609DE5 		ldr	r6, [sp, #24]
 2992              	.LVL293:
 2993              	.L197:
 2994 05dc 78309DE5 		ldr	r3, [sp, #120]
 2995 05e0 02A1A0E1 		lsl	r10, r2, #2
 2996 05e4 18608DE5 		str	r6, [sp, #24]
 2997 05e8 0B60A0E1 		mov	r6, fp
 2998 05ec 05B0A0E1 		mov	fp, r5
 2999 05f0 0450A0E1 		mov	r5, r4
 3000 05f4 0A9083E0 		add	r9, r3, r10
 3001 05f8 7C309DE5 		ldr	r3, [sp, #124]
 3002 05fc 80409DE5 		ldr	r4, [sp, #128]
 3003 0600 0280A0E1 		mov	r8, r2
 3004 0604 0AA083E0 		add	r10, r3, r10
 3005              	.L190:
 3006              	.LVL294:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3007              		.loc 5 252 0
 3008 0608 010A96ED 		vldr.32	s0, [r6, #4]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3009              		.loc 5 258 0
 3010 060c 0B10A0E1 		mov	r1, fp
 3011 0610 0500A0E1 		mov	r0, r5
 3012              	.LBE1710:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 3013              		.loc 5 248 0
 3014 0614 018088E2 		add	r8, r8, #1
 3015              	.LVL295:
 3016              	.LBB1711:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3017              		.loc 5 252 0
 3018 0618 C00AB7EE 		vcvt.f64.f32	d0, s0
 3019              	.LVL296:
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3020              		.loc 5 253 0
 3021 061c 080B20EE 		vmul.f64	d0, d0, d8
 3022              	.LVL297:
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3023              		.loc 5 258 0
 3024 0620 090B80EE 		vdiv.f64	d0, d0, d9
 3025 0624 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3026              	.LVL298:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3027              		.loc 5 259 0
 3028 0628 20109DE5 		ldr	r1, [sp, #32]
 3029              	.LBE1711:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 3030              		.loc 5 248 0
 3031 062c 080054E1 		cmp	r4, r8
 3032              	.LBB1712:
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3033              		.loc 5 260 0
 3034 0630 24309DE5 		ldr	r3, [sp, #36]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3035              		.loc 5 259 0
 3036 0634 041089E4 		str	r1, [r9], #4
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3037              		.loc 5 260 0
 3038 0638 04308AE4 		str	r3, [r10], #4
 3039              	.LBE1712:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 3040              		.loc 5 248 0
 3041 063c F1FFFFCA 		bgt	.L190
 3042 0640 31FFFFEA 		b	.L208
 3043              	.LVL299:
 3044              	.L216:
 3045              	.LBE1749:
 237:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_EQ(context, affine_quantization->scale->size, num_channels);
 3046              		.loc 5 237 0
 3047 0644 00C000E3 		movw	ip, #:lower16:.LC16
 3048              	.LVL300:
 3049 0648 003000E3 		movw	r3, #:lower16:.LC17
 3050              	.LVL301:
 3051 064c 08108DE5 		str	r1, [sp, #8]
 3052              	.LVL302:
 3053 0650 00C040E3 		movt	ip, #:upper16:.LC16
 3054 0654 003040E3 		movt	r3, #:upper16:.LC17
 3055 0658 09E0A0E3 		mov	lr, #9
 3056 065c 002000E3 		movw	r2, #:lower16:.LC3
 3057              	.LVL303:
 3058 0660 001000E3 		movw	r1, #:lower16:.LC9
 3059 0664 145090E5 		ldr	r5, [r0, #20]
 3060 0668 002040E3 		movt	r2, #:upper16:.LC3
 3061 066c 00308DE5 		str	r3, [sp]
 3062 0670 001040E3 		movt	r1, #:upper16:.LC9
 3063 0674 04C08DE5 		str	ip, [sp, #4]
 3064 0678 ED30A0E3 		mov	r3, #237
 3065 067c 0CE08DE5 		str	lr, [sp, #12]
 3066 0680 35FF2FE1 		blx	r5
 3067              	.LVL304:
 3068 0684 0400A0E1 		mov	r0, r4
 3069 0688 41FFFFEA 		b	.L205
 3070              	.LVL305:
 3071              	.L215:
 235:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                    input->type == kTfLiteInt8 || input->type == kTfLiteInt16);
 3072              		.loc 5 235 0
 3073 068c 003000E3 		movw	r3, #:lower16:.LC15
 3074              	.LVL306:
 3075 0690 002000E3 		movw	r2, #:lower16:.LC3
 3076              	.LVL307:
 3077 0694 003040E3 		movt	r3, #:upper16:.LC15
 3078 0698 001000E3 		movw	r1, #:lower16:.LC4
 3079 069c 145090E5 		ldr	r5, [r0, #20]
 3080 06a0 002040E3 		movt	r2, #:upper16:.LC3
 3081 06a4 00308DE5 		str	r3, [sp]
 3082              	.LVL308:
 3083 06a8 001040E3 		movt	r1, #:upper16:.LC4
 3084 06ac EC30A0E3 		mov	r3, #236
 3085 06b0 35FF2FE1 		blx	r5
 3086              	.LVL309:
 3087 06b4 0400A0E1 		mov	r0, r4
 3088 06b8 35FFFFEA 		b	.L205
 3089              	.LVL310:
 3090              	.L218:
 3091 06bc 03E0A0E1 		mov	lr, r3
 239:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         context, num_channels,
 3092              		.loc 5 239 0
 3093 06c0 00C000E3 		movw	ip, #:lower16:.LC20
 3094              	.LVL311:
 3095 06c4 08E08DE5 		str	lr, [sp, #8]
 3096              	.LVL312:
 3097 06c8 003000E3 		movw	r3, #:lower16:.LC18
 3098              	.LVL313:
 3099 06cc 10E09DE5 		ldr	lr, [sp, #16]
 3100 06d0 00C040E3 		movt	ip, #:upper16:.LC20
 3101 06d4 0C108DE5 		str	r1, [sp, #12]
 3102 06d8 003040E3 		movt	r3, #:upper16:.LC18
 3103 06dc 002000E3 		movw	r2, #:lower16:.LC3
 3104 06e0 001000E3 		movw	r1, #:lower16:.LC9
 3105 06e4 14509EE5 		ldr	r5, [lr, #20]
 3106 06e8 002040E3 		movt	r2, #:upper16:.LC3
 3107 06ec 00308DE5 		str	r3, [sp]
 3108 06f0 001040E3 		movt	r1, #:upper16:.LC9
 3109 06f4 04C08DE5 		str	ip, [sp, #4]
 3110 06f8 F130A0E3 		mov	r3, #241
 3111 06fc 35FF2FE1 		blx	r5
 3112              	.LVL314:
 3113 0700 0400A0E1 		mov	r0, r4
 3114 0704 22FFFFEA 		b	.L205
 3115              	.LVL315:
 3116              	.L217:
 238:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_EQ(
 3117              		.loc 5 238 0
 3118 0708 08C08DE5 		str	ip, [sp, #8]
 3119 070c 0310A0E1 		mov	r1, r3
 3120 0710 10C09DE5 		ldr	ip, [sp, #16]
 3121              	.LVL316:
 3122 0714 00E000E3 		movw	lr, #:lower16:.LC18
 3123 0718 003000E3 		movw	r3, #:lower16:.LC19
 3124              	.LVL317:
 3125 071c 0C108DE5 		str	r1, [sp, #12]
 3126 0720 00E040E3 		movt	lr, #:upper16:.LC18
 3127 0724 003040E3 		movt	r3, #:upper16:.LC19
 3128 0728 002000E3 		movw	r2, #:lower16:.LC3
 3129              	.LVL318:
 3130 072c 001000E3 		movw	r1, #:lower16:.LC9
 3131 0730 14509CE5 		ldr	r5, [ip, #20]
 3132 0734 002040E3 		movt	r2, #:upper16:.LC3
 3133 0738 00308DE5 		str	r3, [sp]
 3134 073c 001040E3 		movt	r1, #:upper16:.LC9
 3135 0740 04E08DE5 		str	lr, [sp, #4]
 3136 0744 EE30A0E3 		mov	r3, #238
 3137 0748 35FF2FE1 		blx	r5
 3138              	.LVL319:
 3139 074c 0400A0E1 		mov	r0, r4
 3140 0750 0FFFFFEA 		b	.L205
 3141              	.LVL320:
 3142              	.L219:
 3143              	.LBB1750:
 3144              	.LBB1714:
 3145              	.LBB1715:
 3146              	.LBB1716:
 3147              	.LBB1717:
 292:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                      static_cast<double>(filter->params.scale);
 3148              		.loc 5 292 0
 3149 0754 037AD6ED 		vldr.32	s15, [r6, #12]
 293:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // The following conditions must be guaranteed by the training pipeline.
 3150              		.loc 5 293 0
 3151 0758 036A97ED 		vldr.32	s12, [r7, #12]
 3152              	.LBB1718:
 295:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double bias_scale = static_cast<double>(bias->params.scale);
 3153              		.loc 5 295 0
 3154 075c 14309DE5 		ldr	r3, [sp, #20]
 3155              	.LBE1718:
 292:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                      static_cast<double>(filter->params.scale);
 3156              		.loc 5 292 0
 3157 0760 E70AF7EE 		vcvt.f64.f32	d16, s15
 293:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // The following conditions must be guaranteed by the training pipeline.
 3158              		.loc 5 293 0
 3159 0764 C61AF7EE 		vcvt.f64.f32	d17, s12
 3160              	.LBB1722:
 295:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double bias_scale = static_cast<double>(bias->params.scale);
 3161              		.loc 5 295 0
 3162 0768 000053E3 		cmp	r3, #0
 3163              	.LBE1722:
 293:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // The following conditions must be guaranteed by the training pipeline.
 3164              		.loc 5 293 0
 3165 076c A10B60EE 		vmul.f64	d16, d16, d17
 3166              	.LVL321:
 3167              	.LBB1723:
 295:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double bias_scale = static_cast<double>(bias->params.scale);
 3168              		.loc 5 295 0
 3169 0770 0B00000A 		beq	.L193
 3170              	.LVL322:
 3171              	.LBB1719:
 296:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // Here we're making sure the input_product_scale & bias_scale are about the
 3172              		.loc 5 296 0
 3173 0774 036AD3ED 		vldr.32	s13, [r3, #12]
 315:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 3174              		.loc 5 315 0
 3175 0778 60309DE5 		ldr	r3, [sp, #96]
 317:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3176              		.loc 5 317 0
 3177 077c 4D3BDFED 		vldr.64	d19, .L222
 296:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // Here we're making sure the input_product_scale & bias_scale are about the
 3178              		.loc 5 296 0
 3179 0780 E62AF7EE 		vcvt.f64.f32	d18, s13
 315:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 3180              		.loc 5 315 0
 3181 0784 037A93ED 		vldr.32	s14, [r3, #12]
 314:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double output_scale = static_cast<double>(output->params.scale);
 3182              		.loc 5 314 0
 3183 0788 E20B70EE 		vsub.f64	d16, d16, d18
 3184              	.LVL323:
 315:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 3185              		.loc 5 315 0
 3186 078c C71AF7EE 		vcvt.f64.f32	d17, s14
 3187              	.LVL324:
 3188              	.LBB1720:
 3189              	.LBB1721:
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 3190              		.loc 6 86 0
 3191 0790 E00BF0EE 		vabs.f64	d16, d16
 3192              	.LBE1721:
 3193              	.LBE1720:
 317:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3194              		.loc 5 317 0
 3195 0794 A12BC0EE 		vdiv.f64	d18, d16, d17
 3196 0798 E32BF4EE 		vcmpe.f64	d18, d19
 3197 079c 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 3198 07a0 2900008A 		bhi	.L220
 3199              	.LVL325:
 3200              	.L193:
 3201              	.LBE1719:
 3202              	.LBE1723:
 3203              	.LBB1724:
 3204              	.LBB1725:
 329:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, input_product_scale >= 0);
 3205              		.loc 5 329 0
 3206 07a4 867A67EE 		vmul.f32	s15, s15, s12
 3207              	.LVL326:
 330:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *multiplier = input_product_scale / static_cast<double>(output->params.scale);
 3208              		.loc 5 330 0
 3209 07a8 C07AF5EE 		vcmpe.f32	s15, #0
 3210 07ac 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 329:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, input_product_scale >= 0);
 3211              		.loc 5 329 0
 3212 07b0 E70AF7EE 		vcvt.f64.f32	d16, s15
 3213              	.LVL327:
 330:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *multiplier = input_product_scale / static_cast<double>(output->params.scale);
 3214              		.loc 5 330 0
 3215 07b4 320000BA 		blt	.L221
 3216              	.LVL328:
 331:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 3217              		.loc 5 331 0
 3218 07b8 60309DE5 		ldr	r3, [sp, #96]
 3219              	.LBE1725:
 3220              	.LBE1724:
 3221              	.LBE1717:
 3222              	.LBE1716:
 3223              	.LBE1715:
 274:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *shift = -exponent;
 3224              		.loc 5 274 0
 3225 07bc 24108DE2 		add	r1, sp, #36
 3226 07c0 68009DE5 		ldr	r0, [sp, #104]
 3227              	.LBB1741:
 3228              	.LBB1738:
 3229              	.LBB1735:
 3230              	.LBB1730:
 3231              	.LBB1728:
 331:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 3232              		.loc 5 331 0
 3233 07c4 030A93ED 		vldr.32	s0, [r3, #12]
 3234 07c8 C00AB7EE 		vcvt.f64.f32	d0, s0
 3235              	.LBE1728:
 3236              	.LBE1730:
 3237              	.LBE1735:
 3238              	.LBE1738:
 3239              	.LBE1741:
 274:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *shift = -exponent;
 3240              		.loc 5 274 0
 3241 07cc 800B80EE 		vdiv.f64	d0, d16, d0
 3242 07d0 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3243              	.LVL329:
 275:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3244              		.loc 5 275 0
 3245 07d4 24209DE5 		ldr	r2, [sp, #36]
 3246 07d8 6C109DE5 		ldr	r1, [sp, #108]
 3247 07dc 0030D6E5 		ldrb	r3, [r6]	@ zero_extendqisi2
 3248 07e0 002062E2 		rsb	r2, r2, #0
 3249 07e4 002081E5 		str	r2, [r1]
 3250 07e8 CBFEFFEA 		b	.L187
 3251              	.LVL330:
 3252              	.L213:
 3253              	.LBE1714:
 3254              	.LBE1750:
 230:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, affine_quantization->scale);
 3255              		.loc 5 230 0
 3256 07ec 003000E3 		movw	r3, #:lower16:.LC13
 3257              	.LVL331:
 3258 07f0 002000E3 		movw	r2, #:lower16:.LC3
 3259              	.LVL332:
 3260 07f4 003040E3 		movt	r3, #:upper16:.LC13
 3261 07f8 001000E3 		movw	r1, #:lower16:.LC4
 3262              	.LVL333:
 3263 07fc 145090E5 		ldr	r5, [r0, #20]
 3264 0800 002040E3 		movt	r2, #:upper16:.LC3
 3265 0804 00308DE5 		str	r3, [sp]
 3266              	.LVL334:
 3267 0808 001040E3 		movt	r1, #:upper16:.LC4
 3268 080c E630A0E3 		mov	r3, #230
 3269 0810 35FF2FE1 		blx	r5
 3270              	.LVL335:
 3271 0814 0400A0E1 		mov	r0, r4
 3272 0818 DDFEFFEA 		b	.L205
 3273              	.LVL336:
 3274              	.L214:
 231:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const bool is_per_channel = affine_quantization->scale->size > 1;
 3275              		.loc 5 231 0
 3276 081c 003000E3 		movw	r3, #:lower16:.LC14
 3277              	.LVL337:
 3278 0820 002000E3 		movw	r2, #:lower16:.LC3
 3279              	.LVL338:
 3280 0824 003040E3 		movt	r3, #:upper16:.LC14
 3281 0828 001000E3 		movw	r1, #:lower16:.LC4
 3282              	.LVL339:
 3283 082c 145090E5 		ldr	r5, [r0, #20]
 3284 0830 002040E3 		movt	r2, #:upper16:.LC3
 3285 0834 00308DE5 		str	r3, [sp]
 3286              	.LVL340:
 3287 0838 001040E3 		movt	r1, #:upper16:.LC4
 3288 083c E730A0E3 		mov	r3, #231
 3289 0840 35FF2FE1 		blx	r5
 3290              	.LVL341:
 3291 0844 0400A0E1 		mov	r0, r4
 3292 0848 D1FEFFEA 		b	.L205
 3293              	.LVL342:
 3294              	.L220:
 3295              	.LBB1751:
 3296              	.LBB1744:
 3297              	.LBB1742:
 3298              	.LBB1739:
 3299              	.LBB1736:
 3300              	.LBB1731:
 3301              	.LBB1732:
 3302              	.LBB1733:
 317:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3303              		.loc 5 317 0
 3304 084c 003000E3 		movw	r3, #:lower16:.LC5
 3305 0850 002000E3 		movw	r2, #:lower16:.LC3
 3306 0854 003040E3 		movt	r3, #:upper16:.LC5
 3307 0858 001000E3 		movw	r1, #:lower16:.LC4
 3308 085c 00308DE5 		str	r3, [sp]
 3309              	.LVL343:
 3310 0860 002040E3 		movt	r2, #:upper16:.LC3
 3311 0864 10309DE5 		ldr	r3, [sp, #16]
 3312 0868 001040E3 		movt	r1, #:upper16:.LC4
 3313 086c 144093E5 		ldr	r4, [r3, #20]
 3314 0870 0300A0E1 		mov	r0, r3
 3315 0874 3D3100E3 		movw	r3, #317
 3316 0878 34FF2FE1 		blx	r4
 3317              	.LVL344:
 3318              	.L194:
 3319              	.LBE1733:
 3320              	.LBE1732:
 3321              	.LBE1731:
 3322              	.LBE1736:
 3323              	.LBE1739:
 3324              	.LBE1742:
 269:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         context, input, filter, bias, output, &real_multiplier));
 3325              		.loc 5 269 0
 3326 087c 0100A0E3 		mov	r0, #1
 3327 0880 C3FEFFEA 		b	.L205
 3328              	.LVL345:
 3329              	.L221:
 3330              	.LBB1743:
 3331              	.LBB1740:
 3332              	.LBB1737:
 3333              	.LBB1734:
 3334              	.LBB1729:
 3335              	.LBB1726:
 3336              	.LBB1727:
 330:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *multiplier = input_product_scale / static_cast<double>(output->params.scale);
 3337              		.loc 5 330 0
 3338 0884 003000E3 		movw	r3, #:lower16:.LC6
 3339 0888 002000E3 		movw	r2, #:lower16:.LC3
 3340 088c 003040E3 		movt	r3, #:upper16:.LC6
 3341 0890 001000E3 		movw	r1, #:lower16:.LC4
 3342 0894 00308DE5 		str	r3, [sp]
 3343              	.LVL346:
 3344 0898 002040E3 		movt	r2, #:upper16:.LC3
 3345 089c 10309DE5 		ldr	r3, [sp, #16]
 3346 08a0 001040E3 		movt	r1, #:upper16:.LC4
 3347 08a4 144093E5 		ldr	r4, [r3, #20]
 3348 08a8 0300A0E1 		mov	r0, r3
 3349 08ac 4A3100E3 		movw	r3, #330
 3350 08b0 34FF2FE1 		blx	r4
 3351              	.LVL347:
 3352 08b4 F0FFFFEA 		b	.L194
 3353              	.L223:
 3354              		.align	3
 3355              	.L222:
 3356 08b8 7B14AE47 		.word	1202590843
 3357 08bc E17A943F 		.word	1066695393
 3358              	.LBE1727:
 3359              	.LBE1726:
 3360              	.LBE1729:
 3361              	.LBE1734:
 3362              	.LBE1737:
 3363              	.LBE1740:
 3364              	.LBE1743:
 3365              	.LBE1744:
 3366              	.LBE1751:
 3367              	.LBE1752:
 3368              	.LBE1753:
 3369              		.cfi_endproc
 3370              	.LFE3284:
 3371              		.fnend
 3373              		.section	.text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS
 3374              		.align	2
 3375              		.global	_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS
 3376              		.syntax unified
 3377              		.arm
 3378              		.fpu neon
 3380              	_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfL
 3381              		.fnstart
 3382              	.LFB3283:
 200:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const auto* affine_quantization =
 3383              		.loc 5 200 0
 3384              		.cfi_startproc
 3385              		@ args = 32, pretend = 0, frame = 32
 3386              		@ frame_needed = 0, uses_anonymous_args = 0
 3387              	.LVL348:
 3388 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3389              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3390              		.cfi_def_cfa_offset 36
 3391              		.cfi_offset 4, -36
 3392              		.cfi_offset 5, -32
 3393              		.cfi_offset 6, -28
 3394              		.cfi_offset 7, -24
 3395              		.cfi_offset 8, -20
 3396              		.cfi_offset 9, -16
 3397              		.cfi_offset 10, -12
 3398              		.cfi_offset 11, -8
 3399              		.cfi_offset 14, -4
 3400 0004 00E0A0E1 		mov	lr, r0
 3401              	.LBB1783:
 3402              	.LBB1784:
 217:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 3403              		.loc 5 217 0
 3404 0008 3050D1E5 		ldrb	r5, [r1, #48]	@ zero_extendqisi2
 3405              	.LBE1784:
 3406              	.LBE1783:
 200:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const auto* affine_quantization =
 3407              		.loc 5 200 0
 3408 000c 048B2DED 		vpush.64	{d8, d9}
 3409              		.vsave {d8, d9}
 3410              		.cfi_def_cfa_offset 52
 3411              		.cfi_offset 80, -52
 3412              		.cfi_offset 81, -48
 3413              		.cfi_offset 82, -44
 3414              		.cfi_offset 83, -40
 3415              		.pad #52
 3416 0010 34D04DE2 		sub	sp, sp, #52
 3417              		.cfi_def_cfa_offset 104
 3418              	.LBB1844:
 3419              	.LBB1837:
 217:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 3420              		.loc 5 217 0
 3421 0014 010055E3 		cmp	r5, #1
 3422              	.LBE1837:
 3423              	.LBE1844:
 200:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const auto* affine_quantization =
 3424              		.loc 5 200 0
 3425 0018 18308DE5 		str	r3, [sp, #24]
 3426 001c 14008DE5 		str	r0, [sp, #20]
 3427              	.LVL349:
 3428              	.LBB1845:
 3429              	.LBB1838:
 217:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 3430              		.loc 5 217 0
 3431 0020 C300001A 		bne	.L251
 3432              	.LBB1785:
 3433              	.LBB1786:
 219:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 3434              		.loc 5 219 0
 3435 0024 3040D2E5 		ldrb	r4, [r2, #48]	@ zero_extendqisi2
 3436 0028 0290A0E1 		mov	r9, r2
 3437              	.LVL350:
 3438 002c 010054E3 		cmp	r4, #1
 3439 0030 AD00001A 		bne	.L252
 3440 0034 0180A0E1 		mov	r8, r1
 3441              	.LBE1786:
 3442              	.LBE1785:
 3443              	.LBE1838:
 3444              	.LBE1845:
 202:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return PopulateConvolutionQuantizationParams(
 3445              		.loc 5 202 0
 3446 0038 341092E5 		ldr	r1, [r2, #52]
 3447              	.LVL351:
 206:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 3448              		.loc 5 206 0
 3449 003c 002091E5 		ldr	r2, [r1]
 3450              	.LVL352:
 203:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context, input, filter, bias, output, activation, multiplier, shift,
 3451              		.loc 5 203 0
 3452 0040 003092E5 		ldr	r3, [r2]
 3453              	.LVL353:
 3454              	.LBB1846:
 3455              	.LBB1839:
 3456              	.LBB1833:
 3457              	.LBB1829:
 233:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     //  Currently only Int8/Int16 is supported for per channel quantization.
 3458              		.loc 5 233 0
 3459 0044 010053E3 		cmp	r3, #1
 3460              	.LBE1829:
 3461              	.LBE1833:
 3462              	.LBE1839:
 3463              	.LBE1846:
 203:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context, input, filter, bias, output, activation, multiplier, shift,
 3464              		.loc 5 203 0
 3465 0048 1C308DE5 		str	r3, [sp, #28]
 3466              	.LVL354:
 3467              	.LBB1847:
 3468              	.LBB1840:
 3469              	.LBB1834:
 3470              	.LBB1830:
 233:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     //  Currently only Int8/Int16 is supported for per channel quantization.
 3471              		.loc 5 233 0
 3472 004c CC0000DA 		ble	.L228
 235:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                    input->type == kTfLiteInt8 || input->type == kTfLiteInt16);
 3473              		.loc 5 235 0
 3474 0050 0030D8E5 		ldrb	r3, [r8]	@ zero_extendqisi2
 3475 0054 073043E2 		sub	r3, r3, #7
 3476 0058 FD3013E2 		ands	r3, r3, #253
 3477 005c 0001001A 		bne	.L253
 237:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_EQ(context, affine_quantization->scale->size, num_channels);
 3478              		.loc 5 237 0
 3479 0060 00C0D9E5 		ldrb	ip, [r9]	@ zero_extendqisi2
 3480 0064 09005CE3 		cmp	ip, #9
 3481 0068 EA00001A 		bne	.L254
 239:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         context, num_channels,
 3482              		.loc 5 239 0
 3483 006c 08C091E5 		ldr	ip, [r1, #8]
 3484 0070 081099E5 		ldr	r1, [r9, #8]
 3485 0074 1CE09DE5 		ldr	lr, [sp, #28]
 3486 0078 0C1181E0 		add	r1, r1, ip, lsl #2
 3487 007c 041091E5 		ldr	r1, [r1, #4]
 3488 0080 01005EE1 		cmp	lr, r1
 3489 0084 0201001A 		bne	.L255
 3490              	.LVL355:
 3491 0088 68109DE5 		ldr	r1, [sp, #104]
 3492 008c 08005EE3 		cmp	lr, #8
 3493 0090 038A98ED 		vldr.32	s16, [r8, #12]
 3494 0094 039A91ED 		vldr.32	s18, [r1, #12]
 247:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   for (int i = 0; i < num_channels; ++i) {
 3495              		.loc 5 247 0
 3496 0098 041082E2 		add	r1, r2, #4
 3497 009c 24108DE5 		str	r1, [sp, #36]
 3498              	.LVL356:
 3499 00a0 C88AB7EE 		vcvt.f64.f32	d8, s16
 3500 00a4 C99AB7EE 		vcvt.f64.f32	d9, s18
 3501 00a8 4C0100DA 		ble	.L256
 3502 00ac 1C109DE5 		ldr	r1, [sp, #28]
 3503              	.LVL357:
 3504 00b0 1CA082E2 		add	r10, r2, #28
 3505 00b4 80209DE5 		ldr	r2, [sp, #128]
 3506 00b8 03B0A0E1 		mov	fp, r3
 3507 00bc 20808DE5 		str	r8, [sp, #32]
 3508 00c0 2C708DE2 		add	r7, sp, #44
 3509 00c4 091041E2 		sub	r1, r1, #9
 3510 00c8 28608DE2 		add	r6, sp, #40
 3511 00cc 0710C1E3 		bic	r1, r1, #7
 3512 00d0 185082E2 		add	r5, r2, #24
 3513 00d4 84209DE5 		ldr	r2, [sp, #132]
 3514 00d8 083081E2 		add	r3, r1, #8
 3515 00dc 0380A0E1 		mov	r8, r3
 3516              	.LVL358:
 3517 00e0 0930A0E1 		mov	r3, r9
 3518 00e4 0B90A0E1 		mov	r9, fp
 3519              	.LVL359:
 3520 00e8 03B0A0E1 		mov	fp, r3
 3521 00ec 184082E2 		add	r4, r2, #24
 3522              	.LVL360:
 3523              	.L236:
 3524              	.LBB1787:
 3525              	.LBB1788:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3526              		.loc 5 252 0
 3527 00f0 060A1AED 		vldr.32	s0, [r10, #-24]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3528              		.loc 5 258 0
 3529 00f4 0710A0E1 		mov	r1, r7
 3530 00f8 0600A0E1 		mov	r0, r6
 3531 00fc 00F0DAF5 		pld	[r10]
 3532              	.LVL361:
 3533 0100 00F0D5F5 		pld	[r5]
 3534 0104 089089E2 		add	r9, r9, #8
 3535              	.LVL362:
 3536 0108 00F0D4F5 		pld	[r4]
 3537 010c 20A08AE2 		add	r10, r10, #32
 3538              	.LVL363:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3539              		.loc 5 252 0
 3540 0110 C00AB7EE 		vcvt.f64.f32	d0, s0
 3541              	.LVL364:
 3542 0114 205085E2 		add	r5, r5, #32
 3543 0118 204084E2 		add	r4, r4, #32
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3544              		.loc 5 253 0
 3545 011c 080B20EE 		vmul.f64	d0, d0, d8
 3546              	.LVL365:
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3547              		.loc 5 258 0
 3548 0120 090B80EE 		vdiv.f64	d0, d0, d9
 3549 0124 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3550              	.LVL366:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3551              		.loc 5 259 0
 3552 0128 28C09DE5 		ldr	ip, [sp, #40]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3553              		.loc 5 258 0
 3554 012c 0710A0E1 		mov	r1, r7
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3555              		.loc 5 260 0
 3556 0130 2C209DE5 		ldr	r2, [sp, #44]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3557              		.loc 5 258 0
 3558 0134 0600A0E1 		mov	r0, r6
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3559              		.loc 5 252 0
 3560 0138 0D0A1AED 		vldr.32	s0, [r10, #-52]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3561              		.loc 5 259 0
 3562 013c 38C005E5 		str	ip, [r5, #-56]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3563              		.loc 5 260 0
 3564 0140 382004E5 		str	r2, [r4, #-56]
 3565              	.LVL367:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3566              		.loc 5 252 0
 3567 0144 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3568              		.loc 5 253 0
 3569 0148 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3570              		.loc 5 258 0
 3571 014c 090B80EE 		vdiv.f64	d0, d0, d9
 3572 0150 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3573              	.LVL368:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3574              		.loc 5 259 0
 3575 0154 28C09DE5 		ldr	ip, [sp, #40]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3576              		.loc 5 258 0
 3577 0158 0710A0E1 		mov	r1, r7
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3578              		.loc 5 260 0
 3579 015c 2C209DE5 		ldr	r2, [sp, #44]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3580              		.loc 5 258 0
 3581 0160 0600A0E1 		mov	r0, r6
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3582              		.loc 5 252 0
 3583 0164 0C0A1AED 		vldr.32	s0, [r10, #-48]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3584              		.loc 5 259 0
 3585 0168 34C005E5 		str	ip, [r5, #-52]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3586              		.loc 5 260 0
 3587 016c 342004E5 		str	r2, [r4, #-52]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3588              		.loc 5 252 0
 3589 0170 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3590              		.loc 5 253 0
 3591 0174 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3592              		.loc 5 258 0
 3593 0178 090B80EE 		vdiv.f64	d0, d0, d9
 3594 017c FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3595              	.LVL369:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3596              		.loc 5 259 0
 3597 0180 28C09DE5 		ldr	ip, [sp, #40]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3598              		.loc 5 258 0
 3599 0184 0710A0E1 		mov	r1, r7
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3600              		.loc 5 260 0
 3601 0188 2C209DE5 		ldr	r2, [sp, #44]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3602              		.loc 5 258 0
 3603 018c 0600A0E1 		mov	r0, r6
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3604              		.loc 5 252 0
 3605 0190 0B0A1AED 		vldr.32	s0, [r10, #-44]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3606              		.loc 5 259 0
 3607 0194 30C005E5 		str	ip, [r5, #-48]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3608              		.loc 5 260 0
 3609 0198 302004E5 		str	r2, [r4, #-48]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3610              		.loc 5 252 0
 3611 019c C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3612              		.loc 5 253 0
 3613 01a0 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3614              		.loc 5 258 0
 3615 01a4 090B80EE 		vdiv.f64	d0, d0, d9
 3616 01a8 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3617              	.LVL370:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3618              		.loc 5 259 0
 3619 01ac 28C09DE5 		ldr	ip, [sp, #40]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3620              		.loc 5 258 0
 3621 01b0 0710A0E1 		mov	r1, r7
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3622              		.loc 5 260 0
 3623 01b4 2C209DE5 		ldr	r2, [sp, #44]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3624              		.loc 5 258 0
 3625 01b8 0600A0E1 		mov	r0, r6
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3626              		.loc 5 252 0
 3627 01bc 0A0A1AED 		vldr.32	s0, [r10, #-40]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3628              		.loc 5 259 0
 3629 01c0 2CC005E5 		str	ip, [r5, #-44]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3630              		.loc 5 260 0
 3631 01c4 2C2004E5 		str	r2, [r4, #-44]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3632              		.loc 5 252 0
 3633 01c8 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3634              		.loc 5 253 0
 3635 01cc 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3636              		.loc 5 258 0
 3637 01d0 090B80EE 		vdiv.f64	d0, d0, d9
 3638 01d4 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3639              	.LVL371:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3640              		.loc 5 259 0
 3641 01d8 28C09DE5 		ldr	ip, [sp, #40]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3642              		.loc 5 258 0
 3643 01dc 0710A0E1 		mov	r1, r7
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3644              		.loc 5 260 0
 3645 01e0 2C209DE5 		ldr	r2, [sp, #44]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3646              		.loc 5 258 0
 3647 01e4 0600A0E1 		mov	r0, r6
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3648              		.loc 5 252 0
 3649 01e8 090A1AED 		vldr.32	s0, [r10, #-36]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3650              		.loc 5 259 0
 3651 01ec 28C005E5 		str	ip, [r5, #-40]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3652              		.loc 5 260 0
 3653 01f0 282004E5 		str	r2, [r4, #-40]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3654              		.loc 5 252 0
 3655 01f4 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3656              		.loc 5 253 0
 3657 01f8 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3658              		.loc 5 258 0
 3659 01fc 090B80EE 		vdiv.f64	d0, d0, d9
 3660 0200 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3661              	.LVL372:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3662              		.loc 5 259 0
 3663 0204 28C09DE5 		ldr	ip, [sp, #40]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3664              		.loc 5 258 0
 3665 0208 0710A0E1 		mov	r1, r7
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3666              		.loc 5 260 0
 3667 020c 2C209DE5 		ldr	r2, [sp, #44]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3668              		.loc 5 258 0
 3669 0210 0600A0E1 		mov	r0, r6
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3670              		.loc 5 252 0
 3671 0214 080A1AED 		vldr.32	s0, [r10, #-32]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3672              		.loc 5 259 0
 3673 0218 24C005E5 		str	ip, [r5, #-36]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3674              		.loc 5 260 0
 3675 021c 242004E5 		str	r2, [r4, #-36]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3676              		.loc 5 252 0
 3677 0220 C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3678              		.loc 5 253 0
 3679 0224 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3680              		.loc 5 258 0
 3681 0228 090B80EE 		vdiv.f64	d0, d0, d9
 3682 022c FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3683              	.LVL373:
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3684              		.loc 5 260 0
 3685 0230 2C209DE5 		ldr	r2, [sp, #44]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3686              		.loc 5 258 0
 3687 0234 0710A0E1 		mov	r1, r7
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3688              		.loc 5 259 0
 3689 0238 28C09DE5 		ldr	ip, [sp, #40]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3690              		.loc 5 258 0
 3691 023c 0600A0E1 		mov	r0, r6
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3692              		.loc 5 252 0
 3693 0240 070A1AED 		vldr.32	s0, [r10, #-28]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3694              		.loc 5 259 0
 3695 0244 20C005E5 		str	ip, [r5, #-32]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3696              		.loc 5 260 0
 3697 0248 202004E5 		str	r2, [r4, #-32]
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3698              		.loc 5 252 0
 3699 024c C00AB7EE 		vcvt.f64.f32	d0, s0
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3700              		.loc 5 253 0
 3701 0250 080B20EE 		vmul.f64	d0, d0, d8
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3702              		.loc 5 258 0
 3703 0254 090B80EE 		vdiv.f64	d0, d0, d9
 3704 0258 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3705              	.LVL374:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3706              		.loc 5 259 0
 3707 025c 28109DE5 		ldr	r1, [sp, #40]
 3708 0260 080059E1 		cmp	r9, r8
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3709              		.loc 5 260 0
 3710 0264 2C209DE5 		ldr	r2, [sp, #44]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3711              		.loc 5 259 0
 3712 0268 1C1005E5 		str	r1, [r5, #-28]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3713              		.loc 5 260 0
 3714 026c 1C2004E5 		str	r2, [r4, #-28]
 3715 0270 9EFFFF1A 		bne	.L236
 3716 0274 0B30A0E1 		mov	r3, fp
 3717 0278 20809DE5 		ldr	r8, [sp, #32]
 3718 027c 09B0A0E1 		mov	fp, r9
 3719              	.LVL375:
 3720 0280 0390A0E1 		mov	r9, r3
 3721              	.LVL376:
 3722 0284 24309DE5 		ldr	r3, [sp, #36]
 3723              	.LVL377:
 3724              	.L242:
 3725 0288 0B51A0E1 		lsl	r5, fp, #2
 3726 028c 20808DE5 		str	r8, [sp, #32]
 3727 0290 05A083E0 		add	r10, r3, r5
 3728 0294 80309DE5 		ldr	r3, [sp, #128]
 3729 0298 054083E0 		add	r4, r3, r5
 3730 029c 84309DE5 		ldr	r3, [sp, #132]
 3731 02a0 055083E0 		add	r5, r3, r5
 3732 02a4 0580A0E1 		mov	r8, r5
 3733 02a8 1C509DE5 		ldr	r5, [sp, #28]
 3734              	.L237:
 3735              	.LVL378:
 251:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double filter_scale = static_cast<double>(scale);
 3736              		.loc 5 251 0
 3737 02ac 010ABAEC 		vldmia.32	r10!, {s0}
 3738              	.LVL379:
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3739              		.loc 5 258 0
 3740 02b0 0710A0E1 		mov	r1, r7
 3741 02b4 0600A0E1 		mov	r0, r6
 3742              	.LBE1788:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 3743              		.loc 5 248 0
 3744 02b8 01B08BE2 		add	fp, fp, #1
 3745              	.LVL380:
 3746              	.LBB1789:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3747              		.loc 5 252 0
 3748 02bc C00AB7EE 		vcvt.f64.f32	d0, s0
 3749              	.LVL381:
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3750              		.loc 5 253 0
 3751 02c0 080B20EE 		vmul.f64	d0, d0, d8
 3752              	.LVL382:
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3753              		.loc 5 258 0
 3754 02c4 090B80EE 		vdiv.f64	d0, d0, d9
 3755              	.LVL383:
 3756 02c8 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3757              	.LVL384:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3758              		.loc 5 259 0
 3759 02cc 28109DE5 		ldr	r1, [sp, #40]
 3760              	.LBE1789:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 3761              		.loc 5 248 0
 3762 02d0 0B0055E1 		cmp	r5, fp
 3763              	.LBB1790:
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3764              		.loc 5 260 0
 3765 02d4 2C209DE5 		ldr	r2, [sp, #44]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3766              		.loc 5 259 0
 3767 02d8 041084E4 		str	r1, [r4], #4
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3768              		.loc 5 260 0
 3769 02dc 042088E4 		str	r2, [r8], #4
 3770              	.LBE1790:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 3771              		.loc 5 248 0
 3772 02e0 F1FFFFCA 		bgt	.L237
 3773 02e4 20809DE5 		ldr	r8, [sp, #32]
 3774 02e8 380000EA 		b	.L235
 3775              	.LVL385:
 3776              	.L252:
 3777              	.LBE1787:
 219:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 3778              		.loc 5 219 0
 3779 02ec 00E000E3 		movw	lr, #:lower16:.LC10
 3780 02f0 00C000E3 		movw	ip, #:lower16:.LC12
 3781 02f4 00E040E3 		movt	lr, #:upper16:.LC10
 3782 02f8 00C040E3 		movt	ip, #:upper16:.LC12
 3783 02fc 002000E3 		movw	r2, #:lower16:.LC3
 3784              	.LVL386:
 3785 0300 001000E3 		movw	r1, #:lower16:.LC9
 3786              	.LVL387:
 3787 0304 0C508DE5 		str	r5, [sp, #12]
 3788              	.LVL388:
 3789 0308 002040E3 		movt	r2, #:upper16:.LC3
 3790 030c 08408DE5 		str	r4, [sp, #8]
 3791 0310 001040E3 		movt	r1, #:upper16:.LC9
 3792 0314 144090E5 		ldr	r4, [r0, #20]
 3793 0318 DC30A0E3 		mov	r3, #220
 3794              	.LVL389:
 3795 031c 00508DE8 		stm	sp, {ip, lr}
 3796 0320 34FF2FE1 		blx	r4
 3797              	.LVL390:
 3798 0324 0500A0E1 		mov	r0, r5
 3799              	.LVL391:
 3800              	.L248:
 3801              	.LBE1830:
 3802              	.LBE1834:
 3803              	.LBE1840:
 3804              	.LBE1847:
 207:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 3805              		.loc 5 207 0
 3806 0328 34D08DE2 		add	sp, sp, #52
 3807              		.cfi_remember_state
 3808              		.cfi_def_cfa_offset 52
 3809              		@ sp needed
 3810 032c 048BBDEC 		vldm	sp!, {d8-d9}
 3811              		.cfi_restore 82
 3812              		.cfi_restore 83
 3813              		.cfi_restore 80
 3814              		.cfi_restore 81
 3815              		.cfi_def_cfa_offset 36
 3816 0330 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3817              	.LVL392:
 3818              	.L251:
 3819              		.cfi_restore_state
 3820              	.LBB1848:
 3821              	.LBB1841:
 217:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                     kTfLiteAffineQuantization);
 3822              		.loc 5 217 0
 3823 0334 00C000E3 		movw	ip, #:lower16:.LC10
 3824 0338 003000E3 		movw	r3, #:lower16:.LC11
 3825              	.LVL393:
 3826 033c 00C040E3 		movt	ip, #:upper16:.LC10
 3827 0340 0140A0E3 		mov	r4, #1
 3828 0344 003040E3 		movt	r3, #:upper16:.LC11
 3829 0348 002000E3 		movw	r2, #:lower16:.LC3
 3830              	.LVL394:
 3831 034c 001000E3 		movw	r1, #:lower16:.LC9
 3832              	.LVL395:
 3833 0350 08508DE5 		str	r5, [sp, #8]
 3834              	.LVL396:
 3835 0354 002040E3 		movt	r2, #:upper16:.LC3
 3836 0358 145090E5 		ldr	r5, [r0, #20]
 3837 035c 001040E3 		movt	r1, #:upper16:.LC9
 3838 0360 00308DE5 		str	r3, [sp]
 3839 0364 04C08DE5 		str	ip, [sp, #4]
 3840 0368 DA30A0E3 		mov	r3, #218
 3841 036c 0C408DE5 		str	r4, [sp, #12]
 3842 0370 35FF2FE1 		blx	r5
 3843              	.LVL397:
 3844 0374 0400A0E1 		mov	r0, r4
 3845              	.LBE1841:
 3846              	.LBE1848:
 207:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 3847              		.loc 5 207 0
 3848 0378 34D08DE2 		add	sp, sp, #52
 3849              		.cfi_remember_state
 3850              		.cfi_def_cfa_offset 52
 3851              		@ sp needed
 3852 037c 048BBDEC 		vldm	sp!, {d8-d9}
 3853              		.cfi_restore 80
 3854              		.cfi_restore 81
 3855              		.cfi_restore 82
 3856              		.cfi_restore 83
 3857              		.cfi_def_cfa_offset 36
 3858 0380 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3859              	.LVL398:
 3860              	.L228:
 3861              		.cfi_restore_state
 3862              	.LBB1849:
 3863              	.LBB1842:
 3864              	.LBB1835:
 3865              	.LBB1831:
 246:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const float* filter_scales = affine_quantization->scale->data;
 3866              		.loc 5 246 0
 3867 0384 68309DE5 		ldr	r3, [sp, #104]
 245:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const float output_scale = output->params.scale;
 3868              		.loc 5 245 0
 3869 0388 037A98ED 		vldr.32	s14, [r8, #12]
 3870              	.LVL399:
 246:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   const float* filter_scales = affine_quantization->scale->data;
 3871              		.loc 5 246 0
 3872 038c 030A93ED 		vldr.32	s0, [r3, #12]
 3873              	.LVL400:
 3874              	.LBB1792:
 248:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // If per-tensor quantization parameter is specified, broadcast it along the
 3875              		.loc 5 248 0
 3876 0390 0E00001A 		bne	.L235
 3877              	.LVL401:
 3878              	.LBB1791:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3879              		.loc 5 252 0
 3880 0394 017AD2ED 		vldr.32	s15, [r2, #4]
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3881              		.loc 5 258 0
 3882 0398 2C108DE2 		add	r1, sp, #44
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3883              		.loc 5 253 0
 3884 039c C71AF7EE 		vcvt.f64.f32	d17, s14
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3885              		.loc 5 258 0
 3886 03a0 28008DE2 		add	r0, sp, #40
 3887              	.LVL402:
 255:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int32_t significand;
 3888              		.loc 5 255 0
 3889 03a4 C00AB7EE 		vcvt.f64.f32	d0, s0
 3890              	.LVL403:
 252:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double effective_output_scale = static_cast<double>(input_scale) *
 3891              		.loc 5 252 0
 3892 03a8 E70AF7EE 		vcvt.f64.f32	d16, s15
 3893              	.LVL404:
 253:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                           filter_scale /
 3894              		.loc 5 253 0
 3895 03ac A10B60EE 		vmul.f64	d16, d16, d17
 3896              	.LVL405:
 258:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_multiplier[i] = significand;
 3897              		.loc 5 258 0
 3898 03b0 800B80EE 		vdiv.f64	d0, d16, d0
 3899 03b4 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 3900              	.LVL406:
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3901              		.loc 5 259 0
 3902 03b8 28209DE5 		ldr	r2, [sp, #40]
 3903 03bc 80109DE5 		ldr	r1, [sp, #128]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3904              		.loc 5 260 0
 3905 03c0 2C309DE5 		ldr	r3, [sp, #44]
 259:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     per_channel_shift[i] = channel_shift;
 3906              		.loc 5 259 0
 3907 03c4 002081E5 		str	r2, [r1]
 260:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 3908              		.loc 5 260 0
 3909 03c8 84209DE5 		ldr	r2, [sp, #132]
 3910 03cc 003082E5 		str	r3, [r2]
 3911              	.LVL407:
 3912              	.L235:
 3913              	.LBE1791:
 3914              	.LBE1792:
 3915              	.LBB1793:
 266:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // Check bias scale == input scale * filter scale.
 3916              		.loc 5 266 0
 3917 03d0 0030D8E5 		ldrb	r3, [r8]	@ zero_extendqisi2
 3918 03d4 030053E3 		cmp	r3, #3
 3919 03d8 3F00000A 		beq	.L257
 3920              	.L234:
 3921              	.LBE1793:
 3922              	.LBB1825:
 277:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       input->type == kTfLiteInt16) {
 3923              		.loc 5 277 0
 3924 03dc FB0003E2 		and	r0, r3, #251
 3925 03e0 090053E3 		cmp	r3, #9
 3926 03e4 03005013 		cmpne	r0, #3
 3927 03e8 0100A003 		moveq	r0, #1
 3928 03ec 0000A013 		movne	r0, #0
 3929 03f0 CCFFFF1A 		bne	.L248
 3930              	.LBB1826:
 279:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         context, activation, output, output_activation_min,
 3931              		.loc 5 279 0
 3932 03f4 6C309DE5 		ldr	r3, [sp, #108]
 3933 03f8 14009DE5 		ldr	r0, [sp, #20]
 3934 03fc 68209DE5 		ldr	r2, [sp, #104]
 3935 0400 0010D3E5 		ldrb	r1, [r3]	@ zero_extendqisi2
 3936 0404 7C309DE5 		ldr	r3, [sp, #124]
 3937 0408 00308DE5 		str	r3, [sp]
 3938 040c 78309DE5 		ldr	r3, [sp, #120]
 3939 0410 FEFFFFEB 		bl	_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteT
 3940              	.LVL408:
 3941 0414 C3FFFFEA 		b	.L248
 3942              	.LVL409:
 3943              	.L254:
 3944              	.LBE1826:
 3945              	.LBE1825:
 237:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     TF_LITE_ENSURE_EQ(context, affine_quantization->scale->size, num_channels);
 3946              		.loc 5 237 0
 3947 0418 08C08DE5 		str	ip, [sp, #8]
 3948              	.LVL410:
 3949 041c 00E000E3 		movw	lr, #:lower16:.LC16
 3950 0420 14C09DE5 		ldr	ip, [sp, #20]
 3951 0424 003000E3 		movw	r3, #:lower16:.LC17
 3952 0428 00E040E3 		movt	lr, #:upper16:.LC16
 3953 042c 003040E3 		movt	r3, #:upper16:.LC17
 3954 0430 0960A0E3 		mov	r6, #9
 3955 0434 002000E3 		movw	r2, #:lower16:.LC3
 3956 0438 001000E3 		movw	r1, #:lower16:.LC9
 3957 043c 14509CE5 		ldr	r5, [ip, #20]
 3958 0440 002040E3 		movt	r2, #:upper16:.LC3
 3959 0444 00308DE5 		str	r3, [sp]
 3960 0448 04E08DE5 		str	lr, [sp, #4]
 3961 044c 001040E3 		movt	r1, #:upper16:.LC9
 3962 0450 ED30A0E3 		mov	r3, #237
 3963 0454 0C608DE5 		str	r6, [sp, #12]
 3964 0458 35FF2FE1 		blx	r5
 3965              	.LVL411:
 3966 045c 0400A0E1 		mov	r0, r4
 3967 0460 B0FFFFEA 		b	.L248
 3968              	.LVL412:
 3969              	.L253:
 235:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                    input->type == kTfLiteInt8 || input->type == kTfLiteInt16);
 3970              		.loc 5 235 0
 3971 0464 003000E3 		movw	r3, #:lower16:.LC15
 3972 0468 002000E3 		movw	r2, #:lower16:.LC3
 3973 046c 003040E3 		movt	r3, #:upper16:.LC15
 3974 0470 001000E3 		movw	r1, #:lower16:.LC4
 3975 0474 145090E5 		ldr	r5, [r0, #20]
 3976 0478 002040E3 		movt	r2, #:upper16:.LC3
 3977 047c 00308DE5 		str	r3, [sp]
 3978              	.LVL413:
 3979 0480 001040E3 		movt	r1, #:upper16:.LC4
 3980 0484 EC30A0E3 		mov	r3, #236
 3981 0488 35FF2FE1 		blx	r5
 3982              	.LVL414:
 3983 048c 0400A0E1 		mov	r0, r4
 3984 0490 A4FFFFEA 		b	.L248
 3985              	.LVL415:
 3986              	.L255:
 239:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         context, num_channels,
 3987              		.loc 5 239 0
 3988 0494 08E08DE5 		str	lr, [sp, #8]
 3989              	.LVL416:
 3990 0498 00C000E3 		movw	ip, #:lower16:.LC20
 3991 049c 14E09DE5 		ldr	lr, [sp, #20]
 3992 04a0 003000E3 		movw	r3, #:lower16:.LC18
 3993 04a4 0C108DE5 		str	r1, [sp, #12]
 3994 04a8 00C040E3 		movt	ip, #:upper16:.LC20
 3995 04ac 003040E3 		movt	r3, #:upper16:.LC18
 3996 04b0 002000E3 		movw	r2, #:lower16:.LC3
 3997 04b4 001000E3 		movw	r1, #:lower16:.LC9
 3998 04b8 14509EE5 		ldr	r5, [lr, #20]
 3999 04bc 002040E3 		movt	r2, #:upper16:.LC3
 4000 04c0 00308DE5 		str	r3, [sp]
 4001 04c4 04C08DE5 		str	ip, [sp, #4]
 4002 04c8 001040E3 		movt	r1, #:upper16:.LC9
 4003 04cc F130A0E3 		mov	r3, #241
 4004 04d0 35FF2FE1 		blx	r5
 4005              	.LVL417:
 4006 04d4 0400A0E1 		mov	r0, r4
 4007 04d8 92FFFFEA 		b	.L248
 4008              	.LVL418:
 4009              	.L257:
 4010              	.LBB1827:
 4011              	.LBB1794:
 4012              	.LBB1795:
 4013              	.LBB1796:
 4014              	.LBB1797:
 292:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                      static_cast<double>(filter->params.scale);
 4015              		.loc 5 292 0
 4016 04dc 037AD8ED 		vldr.32	s15, [r8, #12]
 293:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // The following conditions must be guaranteed by the training pipeline.
 4017              		.loc 5 293 0
 4018 04e0 036A99ED 		vldr.32	s12, [r9, #12]
 4019              	.LBB1798:
 295:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double bias_scale = static_cast<double>(bias->params.scale);
 4020              		.loc 5 295 0
 4021 04e4 18309DE5 		ldr	r3, [sp, #24]
 4022              	.LBE1798:
 292:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                      static_cast<double>(filter->params.scale);
 4023              		.loc 5 292 0
 4024 04e8 E70AF7EE 		vcvt.f64.f32	d16, s15
 293:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // The following conditions must be guaranteed by the training pipeline.
 4025              		.loc 5 293 0
 4026 04ec C61AF7EE 		vcvt.f64.f32	d17, s12
 4027              	.LBB1802:
 295:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double bias_scale = static_cast<double>(bias->params.scale);
 4028              		.loc 5 295 0
 4029 04f0 000053E3 		cmp	r3, #0
 4030              	.LBE1802:
 293:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   // The following conditions must be guaranteed by the training pipeline.
 4031              		.loc 5 293 0
 4032 04f4 A10B60EE 		vmul.f64	d16, d16, d17
 4033              	.LVL419:
 4034              	.LBB1803:
 295:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double bias_scale = static_cast<double>(bias->params.scale);
 4035              		.loc 5 295 0
 4036 04f8 0B00000A 		beq	.L238
 4037              	.LVL420:
 4038              	.LBB1799:
 296:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // Here we're making sure the input_product_scale & bias_scale are about the
 4039              		.loc 5 296 0
 4040 04fc 036AD3ED 		vldr.32	s13, [r3, #12]
 315:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 4041              		.loc 5 315 0
 4042 0500 68309DE5 		ldr	r3, [sp, #104]
 317:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 4043              		.loc 5 317 0
 4044 0504 3B3BDFED 		vldr.64	d19, .L260
 296:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     // Here we're making sure the input_product_scale & bias_scale are about the
 4045              		.loc 5 296 0
 4046 0508 E62AF7EE 		vcvt.f64.f32	d18, s13
 315:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 4047              		.loc 5 315 0
 4048 050c 037A93ED 		vldr.32	s14, [r3, #12]
 314:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     const double output_scale = static_cast<double>(output->params.scale);
 4049              		.loc 5 314 0
 4050 0510 E20B70EE 		vsub.f64	d16, d16, d18
 4051              	.LVL421:
 315:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 4052              		.loc 5 315 0
 4053 0514 C71AF7EE 		vcvt.f64.f32	d17, s14
 4054              	.LVL422:
 4055              	.LBB1800:
 4056              	.LBB1801:
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\cmath **** #endif
 4057              		.loc 6 86 0
 4058 0518 E00BF0EE 		vabs.f64	d16, d16
 4059              	.LBE1801:
 4060              	.LBE1800:
 317:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 4061              		.loc 5 317 0
 4062 051c A12BC0EE 		vdiv.f64	d18, d16, d17
 4063 0520 E32BF4EE 		vcmpe.f64	d18, d19
 4064 0524 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 4065 0528 1100008A 		bhi	.L258
 4066              	.LVL423:
 4067              	.L238:
 4068              	.LBE1799:
 4069              	.LBE1803:
 4070              	.LBB1804:
 4071              	.LBB1805:
 329:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, input_product_scale >= 0);
 4072              		.loc 5 329 0
 4073 052c 867A67EE 		vmul.f32	s15, s15, s12
 4074              	.LVL424:
 330:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *multiplier = input_product_scale / static_cast<double>(output->params.scale);
 4075              		.loc 5 330 0
 4076 0530 C07AF5EE 		vcmpe.f32	s15, #0
 4077 0534 10FAF1EE 		vmrs	APSR_nzcv, FPSCR
 329:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   TF_LITE_ENSURE(context, input_product_scale >= 0);
 4078              		.loc 5 329 0
 4079 0538 E70AF7EE 		vcvt.f64.f32	d16, s15
 4080              	.LVL425:
 330:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *multiplier = input_product_scale / static_cast<double>(output->params.scale);
 4081              		.loc 5 330 0
 4082 053c 1A0000BA 		blt	.L259
 4083              	.LVL426:
 331:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 4084              		.loc 5 331 0
 4085 0540 68309DE5 		ldr	r3, [sp, #104]
 4086              	.LBE1805:
 4087              	.LBE1804:
 4088              	.LBE1797:
 4089              	.LBE1796:
 4090              	.LBE1795:
 274:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *shift = -exponent;
 4091              		.loc 5 274 0
 4092 0544 2C108DE2 		add	r1, sp, #44
 4093 0548 70009DE5 		ldr	r0, [sp, #112]
 4094              	.LBB1821:
 4095              	.LBB1818:
 4096              	.LBB1815:
 4097              	.LBB1810:
 4098              	.LBB1808:
 331:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 4099              		.loc 5 331 0
 4100 054c 030A93ED 		vldr.32	s0, [r3, #12]
 4101 0550 C00AB7EE 		vcvt.f64.f32	d0, s0
 4102              	.LBE1808:
 4103              	.LBE1810:
 4104              	.LBE1815:
 4105              	.LBE1818:
 4106              	.LBE1821:
 274:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *shift = -exponent;
 4107              		.loc 5 274 0
 4108 0554 800B80EE 		vdiv.f64	d0, d16, d0
 4109 0558 FEFFFFEB 		bl	_ZN6tflite18QuantizeMultiplierEdPlPi
 4110              	.LVL427:
 275:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 4111              		.loc 5 275 0
 4112 055c 2C209DE5 		ldr	r2, [sp, #44]
 4113 0560 74109DE5 		ldr	r1, [sp, #116]
 4114 0564 0030D8E5 		ldrb	r3, [r8]	@ zero_extendqisi2
 4115 0568 002062E2 		rsb	r2, r2, #0
 4116 056c 002081E5 		str	r2, [r1]
 4117 0570 99FFFFEA 		b	.L234
 4118              	.LVL428:
 4119              	.L258:
 4120              	.LBB1822:
 4121              	.LBB1819:
 4122              	.LBB1816:
 4123              	.LBB1811:
 4124              	.LBB1812:
 4125              	.LBB1813:
 317:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 4126              		.loc 5 317 0
 4127 0574 003000E3 		movw	r3, #:lower16:.LC5
 4128 0578 002000E3 		movw	r2, #:lower16:.LC3
 4129 057c 003040E3 		movt	r3, #:upper16:.LC5
 4130 0580 001000E3 		movw	r1, #:lower16:.LC4
 4131 0584 00308DE5 		str	r3, [sp]
 4132              	.LVL429:
 4133 0588 002040E3 		movt	r2, #:upper16:.LC3
 4134 058c 14309DE5 		ldr	r3, [sp, #20]
 4135 0590 001040E3 		movt	r1, #:upper16:.LC4
 4136 0594 144093E5 		ldr	r4, [r3, #20]
 4137 0598 0300A0E1 		mov	r0, r3
 4138 059c 3D3100E3 		movw	r3, #317
 4139 05a0 34FF2FE1 		blx	r4
 4140              	.LVL430:
 4141              	.L239:
 4142              	.LBE1813:
 4143              	.LBE1812:
 4144              	.LBE1811:
 4145              	.LBE1816:
 4146              	.LBE1819:
 4147              	.LBE1822:
 269:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         context, input, filter, bias, output, &real_multiplier));
 4148              		.loc 5 269 0
 4149 05a4 0100A0E3 		mov	r0, #1
 4150              	.LVL431:
 4151              	.LBE1794:
 4152              	.LBE1827:
 4153              	.LBE1831:
 4154              	.LBE1835:
 4155              	.LBE1842:
 4156              	.LBE1849:
 206:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 4157              		.loc 5 206 0
 4158 05a8 5EFFFFEA 		b	.L248
 4159              	.LVL432:
 4160              	.L259:
 4161              	.LBB1850:
 4162              	.LBB1843:
 4163              	.LBB1836:
 4164              	.LBB1832:
 4165              	.LBB1828:
 4166              	.LBB1824:
 4167              	.LBB1823:
 4168              	.LBB1820:
 4169              	.LBB1817:
 4170              	.LBB1814:
 4171              	.LBB1809:
 4172              	.LBB1806:
 4173              	.LBB1807:
 330:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *multiplier = input_product_scale / static_cast<double>(output->params.scale);
 4174              		.loc 5 330 0
 4175 05ac 003000E3 		movw	r3, #:lower16:.LC6
 4176 05b0 002000E3 		movw	r2, #:lower16:.LC3
 4177 05b4 003040E3 		movt	r3, #:upper16:.LC6
 4178 05b8 001000E3 		movw	r1, #:lower16:.LC4
 4179 05bc 00308DE5 		str	r3, [sp]
 4180              	.LVL433:
 4181 05c0 002040E3 		movt	r2, #:upper16:.LC3
 4182 05c4 14309DE5 		ldr	r3, [sp, #20]
 4183 05c8 001040E3 		movt	r1, #:upper16:.LC4
 4184 05cc 144093E5 		ldr	r4, [r3, #20]
 4185 05d0 0300A0E1 		mov	r0, r3
 4186 05d4 4A3100E3 		movw	r3, #330
 4187 05d8 34FF2FE1 		blx	r4
 4188              	.LVL434:
 4189 05dc F0FFFFEA 		b	.L239
 4190              	.LVL435:
 4191              	.L256:
 4192              	.LBE1807:
 4193              	.LBE1806:
 4194              	.LBE1809:
 4195              	.LBE1814:
 4196              	.LBE1817:
 4197              	.LBE1820:
 4198              	.LBE1823:
 4199              	.LBE1824:
 4200              	.LBE1828:
 247:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   for (int i = 0; i < num_channels; ++i) {
 4201              		.loc 5 247 0
 4202 05e0 03B0A0E1 		mov	fp, r3
 4203 05e4 2C708DE2 		add	r7, sp, #44
 4204 05e8 28608DE2 		add	r6, sp, #40
 4205 05ec 0130A0E1 		mov	r3, r1
 4206 05f0 24FFFFEA 		b	.L242
 4207              	.L261:
 4208 05f4 00F020E3 		.align	3
 4209              	.L260:
 4210 05f8 7B14AE47 		.word	1202590843
 4211 05fc E17A943F 		.word	1066695393
 4212              	.LBE1832:
 4213              	.LBE1836:
 4214              	.LBE1843:
 4215              	.LBE1850:
 4216              		.cfi_endproc
 4217              	.LFE3283:
 4218              		.fnend
 4220              		.section	.text._ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_,"ax",%progbits
 4221              		.align	2
 4222              		.global	_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_
 4223              		.syntax unified
 4224              		.arm
 4225              		.fpu neon
 4227              	_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_:
 4228              		.fnstart
 4229              	.LFB3290:
 406:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 407:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** bool HaveSameShapes(const TfLiteTensor* input1, const TfLiteTensor* input2) {
 4230              		.loc 5 407 0
 4231              		.cfi_startproc
 4232              		@ args = 0, pretend = 0, frame = 0
 4233              		@ frame_needed = 0, uses_anonymous_args = 0
 4234              	.LVL436:
 4235 0000 10402DE9 		push	{r4, lr}
 4236              		.save {r4, lr}
 4237              		.cfi_def_cfa_offset 8
 4238              		.cfi_offset 4, -8
 4239              		.cfi_offset 14, -4
 408:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return TfLiteIntArrayEqual(input1->dims, input2->dims);
 4240              		.loc 5 408 0
 4241 0004 081091E5 		ldr	r1, [r1, #8]
 4242              	.LVL437:
 4243 0008 080090E5 		ldr	r0, [r0, #8]
 4244              	.LVL438:
 4245 000c FEFFFFEB 		bl	TfLiteIntArrayEqual
 4246              	.LVL439:
 409:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 4247              		.loc 5 409 0
 4248 0010 000090E2 		adds	r0, r0, #0
 4249 0014 0100A013 		movne	r0, #1
 4250 0018 1080BDE8 		pop	{r4, pc}
 4251              		.cfi_endproc
 4252              	.LFE3290:
 4253              		.fnend
 4255              		.section	.text._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray,"ax",%progbits
 4256              		.align	2
 4257              		.global	_ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray
 4258              		.syntax unified
 4259              		.arm
 4260              		.fpu neon
 4262              	_ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray:
 4263              		.fnstart
 4264              	.LFB3291:
 410:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 411:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #ifndef TF_LITE_STATIC_MEMORY
 412:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 413:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // TODO(b/172067338): Having this function be part of TF_LITE_STATIC_MEMORY
 414:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // build results in a 6KB size increase, even though the function is unsused for
 415:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // that build. What appears to be happening is that while the linker drops the
 416:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // unsused function, the string library that gets pulled in is not dropped,
 417:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // resulting in the increased binary size.
 418:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** std::string GetShapeDebugString(const TfLiteIntArray* shape) {
 4265              		.loc 5 418 0
 4266              		.cfi_startproc
 4267              		.cfi_personality 0,__gxx_personality_v0
 4268              		.cfi_lsda 0,.LLSDA3291
 4269              		@ args = 0, pretend = 0, frame = 80
 4270              		@ frame_needed = 0, uses_anonymous_args = 0
 4271              	.LVL440:
 4272 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4273              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4274              		.cfi_def_cfa_offset 36
 4275              		.cfi_offset 4, -36
 4276              		.cfi_offset 5, -32
 4277              		.cfi_offset 6, -28
 4278              		.cfi_offset 7, -24
 4279              		.cfi_offset 8, -20
 4280              		.cfi_offset 9, -16
 4281              		.cfi_offset 10, -12
 4282              		.cfi_offset 11, -8
 4283              		.cfi_offset 14, -4
 4284              	.LBB2097:
 4285              	.LBB2098:
 4286              	.LBB2099:
 4287              	.LBB2100:
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4288              		.loc 3 132 0
 4289 0004 0030A0E3 		mov	r3, #0
 4290              	.LBE2100:
 4291              	.LBE2099:
 4292              	.LBE2098:
 4293              	.LBB2105:
 4294              	.LBB2106:
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
 4295              		.loc 3 142 0
 4296 0008 082080E2 		add	r2, r0, #8
 4297              	.LBE2106:
 4298              	.LBE2105:
 4299              	.LBE2097:
 4300              		.loc 5 418 0
 4301 000c 0180A0E1 		mov	r8, r1
 4302              		.pad #92
 4303 0010 5CD04DE2 		sub	sp, sp, #92
 4304              		.cfi_def_cfa_offset 128
 4305              	.LBB2112:
 4306              	.LBB2108:
 4307              	.LBB2107:
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
 4308              		.loc 3 142 0
 4309 0014 0210A0E1 		mov	r1, r2
 4310              	.LVL441:
 4311 0018 08208DE5 		str	r2, [sp, #8]
 4312              	.LVL442:
 4313              	.LBE2107:
 4314              	.LBE2108:
 4315              	.LBE2112:
 4316              		.loc 5 418 0
 4317 001c 0050A0E1 		mov	r5, r0
 4318              	.LBB2113:
 4319              	.LBB2109:
 4320              	.LBB2102:
 4321              	.LBB2101:
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4322              		.loc 3 132 0
 4323 0020 043080E5 		str	r3, [r0, #4]
 4324              	.LBE2101:
 4325              	.LBE2102:
 4326              	.LBB2103:
 4327              	.LBB2104:
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 4328              		.loc 4 243 0
 4329 0024 0830C0E5 		strb	r3, [r0, #8]
 4330              	.LBE2104:
 4331              	.LBE2103:
 4332              	.LBE2109:
 4333              	.LBE2113:
 4334              	.LBB2114:
 419:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   std::string str;
 420:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   for (int d = 0; d < shape->size; ++d) {
 4335              		.loc 5 420 0
 4336 0028 002098E5 		ldr	r2, [r8]
 4337              	.LBE2114:
 4338              	.LBB2294:
 4339              	.LBB2110:
 4340              	.LBB2111:
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4341              		.loc 3 110 0
 4342 002c 001080E5 		str	r1, [r0]
 4343              	.LVL443:
 4344              	.LBE2111:
 4345              	.LBE2110:
 4346              	.LBE2294:
 4347              	.LBB2295:
 4348              		.loc 5 420 0
 4349 0030 030052E1 		cmp	r2, r3
 4350 0034 8E0000DA 		ble	.L265
 4351              	.LBB2115:
 4352              	.LBB2116:
 298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else
 300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
 304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__n == 1)
 307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else
 309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
 313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__n == 1)
 316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else
 318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
 323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _Iterator>
 324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         static void
 325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         {
 327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}
 330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
 332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
 336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
 341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
 345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static int
 350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else
 359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return int(__d);
 360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_assign(const basic_string& __rcs);
 364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		size_type __len2);
 368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     public:
 373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Construct/copy/destroy:
 374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string()
 381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_set_length(0); }
 384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       explicit
 389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_set_length(0); }
 392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
 396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
 398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
 405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // 2402. [this constructor] shouldn't use Allocator()
 410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		   size_type __n = npos)
 412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
 422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
 428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const _CharT* __start
 431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  has no special meaning.
 443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
 451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
 460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
 461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __c  Character to use.
 462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_construct(__n, __c); }
 467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Move construct string.
 471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
 472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 474:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
 475:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        **/
 476:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(basic_string&& __str) noexcept
 477:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 478:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__str._M_is_local())
 480:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  {
 481:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 482:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 483:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  }
 484:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else
 485:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  {
 486:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 488:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  }
 489:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 490:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 491:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 492:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 493:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_length(__str.length());
 494:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__str._M_data(__str._M_local_data());
 495:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__str._M_set_length(0);
 496:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 497:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 498:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 499:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
 500:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 501:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 502:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 503:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 504:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 505:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 506:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 507:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 508:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 509:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 510:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 511:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 512:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 513:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 514:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 515:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__str._M_is_local())
 516:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  {
 517:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 518:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 519:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_length(__str.length());
 520:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 521:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  }
 522:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 523:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    || __str.get_allocator() == __a)
 524:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  {
 525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 526:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_length(__str.length());
 527:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 528:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 529:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 530:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  }
 531:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else
 532:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 533:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 534:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 535:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
 536:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 537:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 538:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
 539:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
 540:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __end  End of range.
 541:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 542:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 543:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 544:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<typename _InputIterator,
 545:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 546:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
 547:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<typename _InputIterator>
 548:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
 549:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 550:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 551:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 552:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{ _M_construct(__beg, __end); }
 553:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 554:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 555:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
 556:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 557:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ~basic_string()
 558:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_dispose(); }
 559:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 560:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 561:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 562:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
 563:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 564:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
 565:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator=(const basic_string& __str)
 566:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 567:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 568:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
 569:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  {
 570:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
 571:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
 572:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      {
 573:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		// Propagating allocator cannot free existing storage so must
 574:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		// deallocate it before replacing current allocator.
 575:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		if (__str.size() <= _S_local_capacity)
 576:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		  {
 577:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 578:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    _M_data(_M_local_data());
 579:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    _M_set_length(0);
 580:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		  }
 581:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		else
 582:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		  {
 583:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    const auto __len = __str.size();
 584:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
 585:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    // If this allocation throws there are no effects:
 586:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
 587:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 588:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    _M_data(__ptr);
 589:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    _M_capacity(__len);
 590:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    _M_set_length(__len);
 591:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		  }
 592:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      }
 593:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
 594:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  }
 595:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
 596:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->assign(__str);
 597:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 598:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 599:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 600:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 601:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
 602:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 603:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
 604:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator=(const _CharT* __s)
 605:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->assign(__s); }
 606:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 607:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 608:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
 609:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __c  Source character.
 610:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 611:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
 612:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
 613:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 614:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
 615:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator=(_CharT __c)
 616:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 617:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->assign(1, __c);
 618:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
 619:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 620:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 621:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 622:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 623:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 624:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
 625:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 626:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 627:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
 628:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        **/
 629:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // PR 58265, this should be noexcept.
 630:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 631:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 632:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
 633:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator=(basic_string&& __str)
 634:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 635:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 636:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 637:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 638:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 639:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  {
 640:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 641:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 642:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_data(_M_local_data());
 643:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_set_length(0);
 644:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  }
 645:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// Replace allocator if POCMA is true.
 646:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 647:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (!__str._M_is_local()
 649:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    && (_Alloc_traits::_S_propagate_on_move_assign()
 650:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      || _Alloc_traits::_S_always_equal()))
 651:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  {
 652:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    pointer __data = nullptr;
 653:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    size_type __capacity;
 654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    if (!_M_is_local())
 655:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      {
 656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 657:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		  {
 658:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    __data = _M_data();
 659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		    __capacity = _M_allocated_capacity;
 660:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		  }
 661:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		else
 662:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 663:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      }
 664:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 665:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 666:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_length(__str.length());
 667:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    if (__data)
 669:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      {
 670:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		__str._M_data(__data);
 671:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		__str._M_capacity(__capacity);
 672:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      }
 673:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    else
 674:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 675:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  }
 676:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else
 677:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    assign(__str);
 678:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__str.clear();
 679:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
 680:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 681:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 682:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 683:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 684:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
 685:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 686:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
 687:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
 688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 689:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
 690:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
 691:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
 693:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 694:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Iterators:
 695:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 696:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 697:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the %string.
 698:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 699:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
 700:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 701:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return iterator(_M_data()); }
 702:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 703:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 704:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 705:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  character in the %string.
 706:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 707:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_iterator
 708:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 709:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
 710:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 711:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 712:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
 713:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  character in the %string.
 714:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 715:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
 716:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 717:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
 718:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 719:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 720:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 721:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  last character in the %string.
 722:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 723:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_iterator
 724:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 725:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 726:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 727:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 728:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 729:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 730:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  order.
 731:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 732:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reverse_iterator
 733:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 734:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
 735:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 736:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 737:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 738:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 739:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  reverse element order.
 740:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 741:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reverse_iterator
 742:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 743:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 744:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 745:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 746:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 747:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 748:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  element order.
 749:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 750:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reverse_iterator
 751:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 752:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
 753:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 754:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 755:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 756:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 757:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is done in reverse element order.
 758:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 759:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reverse_iterator
 760:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 761:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 762:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 763:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 764:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 765:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 766:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  character in the %string.
 767:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 768:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_iterator
 769:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       cbegin() const noexcept
 770:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
 771:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 772:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 773:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 774:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  last character in the %string.
 775:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 776:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_iterator
 777:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       cend() const noexcept
 778:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 779:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 780:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 781:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 782:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 783:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  reverse element order.
 784:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 785:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reverse_iterator
 786:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       crbegin() const noexcept
 787:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 788:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 789:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 790:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 791:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 792:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is done in reverse element order.
 793:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 794:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reverse_iterator
 795:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       crend() const noexcept
 796:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 797:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
 798:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 799:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     public:
 800:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Capacity:
 801:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 802:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  null-termination.
 803:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
 804:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 805:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_string_length; }
 806:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 807:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 808:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  null-termination.
 809:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
 810:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 811:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_string_length; }
 812:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 813:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
 814:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
 815:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 816:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 817:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 818:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 819:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 820:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 821:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
 822:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 823:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
 824:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
 825:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 826:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 827:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 828:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 829:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
 830:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 831:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 832:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 833:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 834:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 835:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
 836:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 837:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 838:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 839:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  setting them to 0.
 840:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 841:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 842:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       resize(size_type __n)
 843:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
 844:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 845:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 846:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 847:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 848:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       shrink_to_fit() noexcept
 849:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 850:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cpp_exceptions
 851:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (capacity() > size())
 852:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  {
 853:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    try
 854:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      { reserve(0); }
 855:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    catch(...)
 856:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      { }
 857:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  }
 858:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
 859:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 860:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
 861:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 862:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 863:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
 864:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  before needing to allocate more memory.
 865:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 866:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
 867:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 868:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 869:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 870:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	                     : _M_allocated_capacity;
 871:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 872:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 873:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 874:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 875:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *          characters.
 876:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
 877:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 878:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 879:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
 880:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
 881:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
 882:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.
 883:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 884:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
 885:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
 886:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 887:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 888:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  data.
 889:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 890:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 891:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
 892:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 893:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 894:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Erases the string, making it empty.
 895:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 896:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
 897:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 898:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_set_length(0); }
 899:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 900:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 901:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 902:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
 903:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 904:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       bool
 905:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
 906:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->size() == 0; }
 907:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 908:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Element access:
 909:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 910:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 911:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
 912:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
 913:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 914:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
 915:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
 916:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 917:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  see at().)
 918:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 919:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reference
 920:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
 921:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 922:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
 923:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_data()[__pos];
 924:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 925:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 926:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 927:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 928:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
 929:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
 930:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 931:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
 932:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
 933:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 934:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  see at().)
 935:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 936:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reference
 937:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator[](size_type __pos)
 938:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 939:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
 940:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// and in C++11 mode.
 941:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
 942:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
 943:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
 944:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_data()[__pos];
 945:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 946:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 947:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 948:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 949:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
 950:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
 951:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 952:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 953:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
 954:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
 955:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
 956:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 957:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reference
 958:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       at(size_type __n) const
 959:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 960:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__n >= this->size())
 961:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 962:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
 963:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				       "(which is %zu)"),
 964:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				   __n, this->size());
 965:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_data()[__n];
 966:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 967:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 968:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 969:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 970:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
 971:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
 972:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 973:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
 974:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
 975:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
 976:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
 977:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 978:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reference
 979:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       at(size_type __n)
 980:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 981:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__n >= size())
 982:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 983:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
 984:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				       "(which is %zu)"),
 985:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				   __n, this->size());
 986:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_data()[__n];
 987:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 988:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 989:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 990:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
 991:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
 992:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  element of the %string.
 993:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
 994:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reference
 995:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       front() noexcept
 996:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
 997:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
 998:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return operator[](0);
 999:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1000:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1001:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1002:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1003:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  element of the %string.
1004:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1005:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reference
1006:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       front() const noexcept
1007:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1008:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1009:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return operator[](0);
1010:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1011:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1012:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1013:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
1014:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  element of the %string.
1015:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1016:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reference
1017:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       back() noexcept
1018:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1019:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1020:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1021:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1022:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1023:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1024:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1025:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  last element of the %string.
1026:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1027:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reference
1028:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       back() const noexcept
1029:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1030:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1031:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1032:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1033:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
1034:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1035:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Modifiers:
1036:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1037:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1038:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to append.
1039:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1040:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1041:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1042:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
1043:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->append(__str); }
1044:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1045:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1046:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a C string.
1047:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1048:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1049:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1050:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1051:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
1052:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->append(__s); }
1053:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1054:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1055:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a character.
1056:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to append.
1057:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1058:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1059:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1060:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator+=(_CharT __c)
1061:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1062:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->push_back(__c);
1063:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
1064:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1065:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1066:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1067:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1068:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1069:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1070:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1071:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1072:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1073:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1074:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1075:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
1076:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1077:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1078:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1079:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to append.
1080:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1081:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1082:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1083:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(const basic_string& __str)
1084:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1085:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1086:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1087:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a substring.
1088:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to append.
1089:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1090:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1091:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1092:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1093:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1094:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
1095:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1096:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
1097:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
1098:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1099:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n)
1101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_append(__str._M_data()
1102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a C substring.
1107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n)
1113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a C string.
1121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(const _CharT* __s)
1126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __n = traits_type::length(__s);
1129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
1135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to use.
1137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
1140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(size_type __n, _CharT __c)
1143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
1153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
1155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
1158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator,
1166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
1168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator>
1169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
1170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         basic_string&
1171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a single character.
1176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to append.
1177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
1179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       push_back(_CharT __c)
1180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __size = this->size();
1182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__size + 1 > this->capacity())
1183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->_M_set_length(__size + 1);
1186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(const basic_string& __str)
1195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->_M_assign(__str);
1197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
1198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
1208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(basic_string&& __str)
1211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this = std::move(__str);
1216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
1218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
1221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to use.
1222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
1223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
1228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
1230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
1231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
1234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
1240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
1245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n)
1250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
1257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  function returns.
1263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(const _CharT* __s)
1266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			  traits_type::length(__s));
1270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
1274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
1275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to use.
1276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  character @a __c.
1280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
1283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
1287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator,
1295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
1297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator>
1298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
1299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         basic_string&
1300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
1311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
1313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *              insert at.
1319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
1329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
1331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->replace(__p, __p, __n, __c);
1336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
1339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
1351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
1353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
1356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *              insert at.
1362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __end  End of range.
1364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is thrown.
1371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator,
1373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	iterator
1375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         {
1377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  const size_type __pos = __p - begin();
1379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}
1382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
1383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __end  End of range.
1388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
1394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator>
1396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         void
1397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
1400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
1409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
1415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
1418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to insert.
1420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
1427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0),
1431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __str._M_data(), __str.size()); }
1432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert a substring.
1435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to insert.
1437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
1439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
1443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n)
1454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
1460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
1463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.
1467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
1473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1474:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1475:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1476:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1477:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1478:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert a C string.
1480:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1481:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1482:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1483:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1484:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1485:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.
1486:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1488:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1489:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1490:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1491:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.
1492:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1493:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1494:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1495:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1496:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1497:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1498:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     traits_type::length(__s));
1499:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1500:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1501:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1502:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1503:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
1504:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1505:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1506:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1507:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1508:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1509:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.
1510:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1511:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1512:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1513:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1514:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1515:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
1516:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1517:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1518:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1519:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1520:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
1521:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1522:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1523:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert one character.
1524:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1526:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1527:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1528:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1529:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1530:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1531:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1532:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1533:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
1534:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1535:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
1536:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1537:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1538:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1539:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1540:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1541:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1542:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1543:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1544:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1545:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Remove characters.
1546:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1547:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1548:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1549:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1550:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.
1551:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1552:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1553:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1554:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1555:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1556:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1557:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
1558:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1559:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1560:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1561:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1562:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->_M_erase(_M_check(__pos, "basic_string::erase"),
1563:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		       _M_limit(__pos, __n));
1564:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
1565:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1566:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1567:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1568:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Remove one character.
1569:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1570:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
1571:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1572:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
1573:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
1574:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1575:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
1576:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       erase(__const_iterator __position)
1577:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1578:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1579:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __position < end());
1580:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __pos = __position - begin();
1581:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1582:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1583:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1584:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1585:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1586:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
1587:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1588:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1589:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1590:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1591:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1592:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1593:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1594:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
1595:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1596:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1597:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1598:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __last <= end());
1599:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         const size_type __pos = __first - begin();
1600:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->_M_erase(__pos, __last - __first);
1601:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1602:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1603:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1604:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1605:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1606:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Remove the last character.
1607:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1608:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The string must be non-empty.
1609:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
1610:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
1611:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       pop_back() noexcept
1612:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1613:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1614:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_erase(size() - 1, 1);
1615:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1616:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
1617:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1618:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1619:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1620:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1621:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
1622:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to insert.
1623:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1624:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1625:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.
1626:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1627:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1628:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1629:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1630:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1631:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1632:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1633:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  error is thrown.
1634:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1635:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1636:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1637:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1638:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1639:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1640:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1641:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
1642:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1643:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to insert.
1644:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1645:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
1646:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1647:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str.size().
1649:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1650:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1651:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1652:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1653:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1655:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
1656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1657:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1658:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2)
1660:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1661:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1662:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1663:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1664:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1665:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1666:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1667:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1669:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1670:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1671:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1672:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1673:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1674:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1675:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1676:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1677:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1678:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1679:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1680:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is thrown.
1681:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1682:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1683:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1684:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      size_type __n2)
1685:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1686:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1687:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1689:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1690:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1691:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
1693:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1694:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1695:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1696:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1697:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1698:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1699:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1700:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1701:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1702:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1703:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1704:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1705:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
1706:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1707:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1708:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1709:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1710:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1711:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1712:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1713:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1714:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1715:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
1716:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1717:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1718:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
1719:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to insert.
1720:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1721:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1722:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1723:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1724:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1725:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1726:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1727:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1728:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1729:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is thrown.
1730:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1731:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1732:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1733:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1734:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1735:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1736:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1737:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
1738:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1739:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1740:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String value to insert.
1741:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1742:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1743:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1744:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1745:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1746:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1747:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
1748:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1749:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1750:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1751:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const basic_string& __str)
1752:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
1753:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1754:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1755:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
1756:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1757:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1758:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
1759:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
1760:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1761:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1762:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1763:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1764:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
1765:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1766:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
1767:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.
1768:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1769:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1770:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1771:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const _CharT* __s, size_type __n)
1772:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1773:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1774:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= end());
1775:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
1776:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1777:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1778:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1779:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
1780:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1781:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1782:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
1783:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1784:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1785:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1786:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1787:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
1788:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1789:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1790:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1791:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1792:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
1793:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1794:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1795:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
1796:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1797:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1798:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1799:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
1800:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1801:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1802:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
1803:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to insert.
1804:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1805:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1806:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1807:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1808:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
1809:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1810:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1811:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1812:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1813:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
1814:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      _CharT __c)
1815:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1816:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1817:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= end());
1818:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
1819:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1820:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1821:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1822:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
1823:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1824:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1825:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
1826:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
1827:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1828:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1829:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1830:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1831:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1832:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1833:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
1834:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.
1835:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1836:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1837:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator,
1838:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1839:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         basic_string&
1840:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
1841:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1842:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         {
1843:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1844:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				   && __i2 <= end());
1845:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1846:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
1847:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 					   std::__false_type());
1848:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}
1849:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
1850:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator>
1851:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
1852:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
1853:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
1854:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         basic_string&
1855:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
1856:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
1857:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1858:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         {
1859:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1860:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				   && __i2 <= end());
1861:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1862:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1863:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
1864:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}
1865:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
1866:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1867:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
1868:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
1869:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1870:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1871:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
1872:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1873:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1874:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= end());
1875:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1876:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1877:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
1878:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1879:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1880:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1881:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1882:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
1883:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1884:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1885:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= end());
1886:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1887:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1888:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
1889:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1890:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1891:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1892:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1893:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      iterator __k1, iterator __k2)
1894:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1895:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1896:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= end());
1897:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1898:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1899:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
1900:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1901:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1902:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1903:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1904:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
1905:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
1906:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1907:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= end());
1908:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1909:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1910:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
1911:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
1912:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1913:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1914:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1915:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
1916:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1917:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1918:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1919:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
1920:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1921:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1922:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1923:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1924:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1925:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
1926:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.
1927:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1928:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
1929:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
1930:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
1931:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
1932:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1933:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     private:
1934:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _Integer>
1935:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	basic_string&
1936:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
1937:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
1938:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
1939:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1940:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator>
1941:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	basic_string&
1942:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
1943:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
1944:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    __false_type);
1945:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1946:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1947:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
1948:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		     _CharT __c);
1949:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1950:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1951:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
1952:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		 const size_type __len2);
1953:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1954:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
1955:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
1956:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1957:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     public:
1958:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1959:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1960:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
1961:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
1962:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
1963:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
1964:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
1965:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
1966:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1967:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
1968:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
1969:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range is thrown.
1970:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1971:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
1972:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
1973:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1974:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1975:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
1976:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  String to swap with.
1977:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1978:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
1979:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  time.
1980:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1981:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
1982:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
1983:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1984:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // String operations:
1985:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1986:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
1987:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1988:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1989:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  happen.
1990:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
1991:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const _CharT*
1992:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
1993:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_data(); }
1994:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
1995:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
1996:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
1997:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
1998:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1999:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  happen.
2000:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2001:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const _CharT*
2002:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2003:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_data(); }
2004:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2005:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2006:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2007:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2008:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       allocator_type
2009:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2010:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_get_allocator(); }
2011:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2012:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2013:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
2014:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2015:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2016:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2017:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2018:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2019:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2020:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2021:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2022:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
2023:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2024:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2025:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
2026:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2027:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2028:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a string.
2029:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to locate.
2030:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2031:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2032:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2033:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2034:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2035:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found, returns npos.
2036:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2037:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2038:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2039:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
2040:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2041:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2042:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2043:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
2044:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2045:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2046:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2047:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2048:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2049:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
2050:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2051:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2052:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2053:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
2054:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2055:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2056:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2057:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2058:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2059:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2060:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2061:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2062:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2063:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2064:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2065:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2066:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2067:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2068:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2069:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2070:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2071:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2072:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2073:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
2074:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to locate.
2075:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2076:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2077:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2078:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2079:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
2080:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2081:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2082:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2083:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2084:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
2085:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2086:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2087:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2088:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
2089:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2090:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2091:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2092:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2093:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2094:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2095:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2096:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2097:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
2098:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2099:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
2101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
2104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
2107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
2110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
2111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
2134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
2142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
2146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
2150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns npos.
2159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
2162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
2165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
2188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
2189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
2195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
2206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
2210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
2214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns npos.
2223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
2226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
2229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
2259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
2262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
2269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
2273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
2277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			size_type __n) const;
2290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
2293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
2310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
2317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
2324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
2330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
2332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
2336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
2343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns npos.
2349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		       size_type __n) const;
2353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
2355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
2361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
2363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
2373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Get a substring.
2387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
2388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  The new string.
2390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
2393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string
2398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return basic_string(*this,
2400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare to a string.
2404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
2412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
2417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(const basic_string& __str) const
2418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __size = this->size();
2420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
2421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (!__r)
2425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
2426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return __r;
2427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
2431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
2433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
2437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
2442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
2443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  strings by calling
2444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the shorter one is ordered first.
2447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
2449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
2453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
2454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
2461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
2469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  calling
2470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2474:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
2475:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2476:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2) const;
2477:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2478:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
2480:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2481:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2482:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2483:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2484:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2485:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2486:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
2487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2488:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2489:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2490:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  ordered first.
2491:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2492:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
2493:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(const _CharT* __s) const;
2494:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2495:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2496:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // 5 String::compare specification questionable
2497:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2498:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
2499:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2500:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2501:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2502:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2503:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2504:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
2505:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
2506:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
2507:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
2508:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
2509:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
2510:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
2511:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  function then compares the two string by calling
2512:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
2513:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2514:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  one is ordered first.
2515:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2516:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
2517:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
2518:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2519:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2520:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
2521:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2522:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2523:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
2524:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
2525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2526:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2527:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
2528:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
2529:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
2530:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
2531:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
2532:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
2533:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
2534:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
2535:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  function then compares the two strings by calling
2536:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
2537:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2538:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  one is ordered first.
2539:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
2540:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
2541:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  no special meaning.
2542:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
2543:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
2544:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
2545:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      size_type __n2) const;
2546:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   };
2547:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
2548:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
2549:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // Reference-counted COW string implentation
2550:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2551:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
2552:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
2553:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
2554:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2555:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @ingroup strings
2556:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @ingroup sequences
2557:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2558:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
2559:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
2560:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
2561:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
2562:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2563:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
2564:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
2565:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
2566:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
2567:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
2568:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2569:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @doctodo
2570:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2571:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2572:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  Documentation?  What's that?
2573:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
2574:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2575:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  A string looks like this:
2576:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2577:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @code
2578:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *                                        [_Rep]
2579:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *                                        _M_length
2580:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
2581:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *   _M_dataplus                          _M_refcount
2582:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
2583:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @endcode
2584:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2585:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  Where the _M_p points to the first character in the string, and
2586:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
2587:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  pointer to the header.
2588:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2589:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  This approach has the enormous advantage that a string object
2590:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
2591:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  within a single %pair of inline functions, which each compile to
2592:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
2593:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
2594:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
2595:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  object at the front.
2596:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2597:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
2598:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  not the _Rep is so that the debugger can see the string
2599:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
2600:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
2601:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  string length.)
2602:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2603:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
2604:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
2605:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  static constructors have run.  The reference-count encoding is
2606:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
2607:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  destroy the empty-string _Rep object.
2608:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
2609:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  All but the last paragraph is considered pretty conventional
2610:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  for a C++ string implementation.
2611:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   */
2612:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // 21.3  Template class basic_string
2613:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2614:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     class basic_string
2615:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     {
2616:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
2617:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2618:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Types:
2619:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     public:
2620:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef _Traits					    traits_type;
2621:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _Traits::char_type		    value_type;
2622:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef _Alloc					    allocator_type;
2623:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
2624:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
2625:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
2626:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
2627:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
2628:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
2629:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
2630:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
2631:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****                                                             const_iterator;
2632:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
2633:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
2634:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2635:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     private:
2636:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _Rep: string representation
2637:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //   Invariants:
2638:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
2639:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //      must be kept null-terminated.
2640:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //   2. _M_capacity >= _M_length
2641:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
2642:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //   3. _M_refcount has three states:
2643:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
2644:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //       0: one reference, non-const.
2645:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
2646:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
2647:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
2648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       //      empty string representation needs no constructor.
2649:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2650:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       struct _Rep_base
2651:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2652:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	size_type		_M_length;
2653:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	size_type		_M_capacity;
2654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_Atomic_word		_M_refcount;
2655:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       };
2656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2657:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       struct _Rep : _Rep_base
2658:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// Types:
2660:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
2661:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2662:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// (Public) Data members:
2663:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2664:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// The maximum number of individual char_type elements of an
2665:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// individual string is determined by _S_max_size. This is the
2666:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
2667:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
2668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
2669:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
2670:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// look like this:
2671:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
2672:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// Solving for m:
2673:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
2674:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// In addition, this implementation quarters this amount.
2675:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	static const size_type	_S_max_size;
2676:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	static const _CharT	_S_terminal;
2677:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2678:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
2679:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         // (carefully) in an empty string with one reference.
2680:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         static size_type _S_empty_rep_storage[];
2681:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2682:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         static _Rep&
2683:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
2684:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { 
2685:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
2686:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
2687:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  // be reasonably safe in this case.
2688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
2689:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
2690:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}
2691:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         bool
2693:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
2694:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         {
2695:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if defined(__GTHREADS)
2696:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
2697:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
2698:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
2699:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           // leaked or not), so a relaxed load is enough.
2700:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
2701:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
2702:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           return this->_M_refcount < 0;
2703:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
2704:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         }
2705:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2706:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         bool
2707:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
2708:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{
2709:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if defined(__GTHREADS)
2710:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
2711:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
2712:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           // but one reference concurrently with this check, so we need this
2713:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
2714:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           // _M_dispose.
2715:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
2716:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
2717:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           return this->_M_refcount > 0;
2718:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
2719:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         }
2720:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2721:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         void
2722:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
2723:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { this->_M_refcount = -1; }
2724:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2725:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         void
2726:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
2727:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { this->_M_refcount = 0; }
2728:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2729:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	void
2730:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
2731:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{
2732:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2733:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2734:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
2735:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    {
2736:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      this->_M_set_sharable();  // One reference.
2737:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      this->_M_length = __n;
2738:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
2739:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      // grrr. (per 21.3.4)
2740:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
2741:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    }
2742:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}
2743:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2744:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_CharT*
2745:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_refdata() throw()
2746:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
2747:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2748:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_CharT*
2749:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
2750:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{
2751:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
2752:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
2753:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}
2754:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2755:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// Create & Destroy
2756:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	static _Rep*
2757:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
2758:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2759:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	void
2760:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
2761:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{
2762:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2763:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2764:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
2765:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    {
2766:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
2767:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
2768:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
2769:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****               // - all but last decrements need to release to synchronize with
2770:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****               //   the last decrement that will delete the object.
2771:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****               // - the last decrement needs to acquire to synchronize with
2772:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****               //   all the previous decrements.
2773:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****               // - last but one decrement needs to release to synchronize with
2774:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
2775:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****               //   the object is not shared anymore.
2776:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
2777:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 							 -1) <= 0)
2778:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		{
2779:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
2780:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		  _M_destroy(__a);
2781:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		}
2782:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    }
2783:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}  // XXX MT
2784:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2785:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	void
2786:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_destroy(const _Alloc&) throw();
2787:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2788:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_CharT*
2789:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_refcopy() throw()
2790:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{
2791:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2792:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2793:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
2794:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
2795:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return _M_refdata();
2796:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}  // XXX MT
2797:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2798:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_CharT*
2799:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
2800:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       };
2801:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2802:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
2803:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       struct _Alloc_hider : _Alloc
2804:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2805:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
2806:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
2807:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2808:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_CharT* _M_p; // The actual data.
2809:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       };
2810:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2811:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     public:
2812:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Data Members (public):
2813:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
2814:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // size that the allocator can hold.
2815:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
2816:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
2817:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2818:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     private:
2819:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Data Members (private):
2820:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
2821:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2822:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _CharT*
2823:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
2824:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return  _M_dataplus._M_p; }
2825:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2826:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _CharT*
2827:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
2828:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return (_M_dataplus._M_p = __p); }
2829:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2830:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _Rep*
2831:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
2832:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
2833:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2834:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
2835:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // but they do not call _M_leak.
2836:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
2837:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
2838:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return iterator(_M_data()); }
2839:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2840:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
2841:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
2842:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
2843:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2844:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
2845:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
2846:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2847:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
2848:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_leak_hard();
2849:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2850:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2851:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2852:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
2853:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2854:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__pos > this->size())
2855:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
2856:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
2857:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				   __s, __pos, this->size());
2858:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return __pos;
2859:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2860:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2861:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
2862:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
2863:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2864:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
2865:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
2866:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2867:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2868:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
2869:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
2870:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
2871:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2872:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
2873:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
2874:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2875:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2876:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
2877:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       bool
2878:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
2879:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2880:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
2881:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
2882:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2883:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2884:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
2885:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
2886:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
2887:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
2888:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2889:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__n == 1)
2890:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
2891:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else
2892:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
2893:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2894:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2895:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
2896:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
2897:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2898:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__n == 1)
2899:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
2900:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else
2901:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
2902:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2903:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2904:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
2905:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
2906:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2907:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__n == 1)
2908:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
2909:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else
2910:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
2911:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2912:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2913:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
2914:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
2915:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _Iterator>
2916:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         static void
2917:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
2918:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         {
2919:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
2920:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
2921:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}
2922:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2923:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
2924:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
2925:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
2926:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2927:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
2928:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
2929:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2930:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
2931:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2932:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
2933:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
2934:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
2935:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2936:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static void
2937:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
2938:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2939:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
2940:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2941:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static int
2942:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
2943:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
2944:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
2945:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2946:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
2947:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
2948:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
2949:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
2950:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	else
2951:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return int(__d);
2952:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
2953:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2954:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
2955:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
2956:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2957:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
2958:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_leak_hard();
2959:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2960:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static _Rep&
2961:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
2962:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _Rep::_S_empty_rep(); }
2963:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2964:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     public:
2965:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Construct/copy/destroy:
2966:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
2967:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
2968:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2969:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2970:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
2971:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
2972:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string()
2973:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2974:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
2975:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
2976:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc()){ }
2977:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
2978:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2979:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2980:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
2981:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
2982:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       explicit
2983:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const _Alloc& __a);
2984:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
2985:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
2986:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2987:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
2988:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
2989:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
2990:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const basic_string& __str);
2991:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
2992:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
2993:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
2994:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
2995:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
2996:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
2997:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
2998:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		   size_type __n = npos);
2999:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3000:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3001:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
3002:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3003:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3004:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3005:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3006:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3007:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a);
3008:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3009:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3010:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3011:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
3012:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3013:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3014:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3015:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3016:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  has no special meaning.
3017:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3018:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3019:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3020:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3021:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
3022:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __s  Source C string.
3023:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3024:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3025:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
3026:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3027:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
3028:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
3029:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __c  Character to use.
3030:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3031:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3032:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3033:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3034:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3035:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3036:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Move construct string.
3037:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
3038:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3039:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3040:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
3041:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        **/
3042:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(basic_string&& __str)
3043:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3044:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3045:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
3046:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       : _M_dataplus(__str._M_dataplus)
3047:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3048:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3049:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3050:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #else
3051:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3052:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
3053:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3054:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3055:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3056:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
3057:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3058:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3059:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3060:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3061:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
3062:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3063:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3064:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
3065:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
3066:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __end  End of range.
3067:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3068:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3069:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator>
3070:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3071:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc());
3072:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3073:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3074:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
3075:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3076:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3077:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3078:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3079:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3080:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3081:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
3082:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3083:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3084:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator=(const basic_string& __str) 
3085:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->assign(__str); }
3086:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3087:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3088:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3089:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
3090:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3091:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3092:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator=(const _CharT* __s) 
3093:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->assign(__s); }
3094:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3095:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3096:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
3097:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __c  Source character.
3098:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3099:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
3100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
3101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator=(_CharT __c) 
3104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { 
3105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->assign(1, __c); 
3106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
3107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string.
3113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
3116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        **/
3117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // PR 58265, this should be noexcept.
3118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator=(basic_string&& __str)
3120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// NB: DR 1204.
3122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->swap(__str);
3123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
3124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
3129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
3132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
3134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
3135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
3137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Iterators:
3139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the %string.  Unshares the string.
3142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
3144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_leak();
3147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return iterator(_M_data());
3148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  character in the %string.
3153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_iterator
3155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
3157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
3160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  character in the %string.  Unshares the string.
3161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
3163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       end() // FIXME C++11: should be noexcept.
3164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_leak();
3166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return iterator(_M_data() + this->size());
3167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  last character in the %string.
3172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_iterator
3174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  order.  Unshares the string.
3181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reverse_iterator
3183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
3185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  reverse element order.
3190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reverse_iterator
3192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  element order.  Unshares the string.
3199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reverse_iterator
3201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
3203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is done in reverse element order.
3208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reverse_iterator
3210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  character in the %string.
3217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_iterator
3219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       cbegin() const noexcept
3220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
3221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  last character in the %string.
3225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_iterator
3227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       cend() const noexcept
3228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  reverse element order.
3234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reverse_iterator
3236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       crbegin() const noexcept
3237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is done in reverse element order.
3243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reverse_iterator
3245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       crend() const noexcept
3246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
3248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     public:
3250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Capacity:
3251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  null-termination.
3253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
3254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  null-termination.
3259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
3260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
3264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
3265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _Rep::_S_max_size; }
3267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
3272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
3274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
3275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
3279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
3280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
3286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  setting them to 0.
3290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
3292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       resize(size_type __n)
3293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
3294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
3298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cpp_exceptions
3301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (capacity() > size())
3302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  {
3303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    try
3304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      { reserve(0); }
3305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    catch(...)
3306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      { }
3307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  }
3308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
3309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
3311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
3314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  before needing to allocate more memory.
3315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
3317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_rep()->_M_capacity; }
3319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *          characters.
3323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
3324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
3327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
3328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
3329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.
3330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
3332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
3333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  data.
3336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
3338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
3339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Erases the string, making it empty.
3342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // PR 56166: this should not throw.
3344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
3345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       clear()
3346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { _M_mutate(0, this->size(), 0); }
3347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
3350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
3351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       bool
3353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
3354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->size() == 0; }
3355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Element access:
3357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
3360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
3361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
3363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
3364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  see at().)
3366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reference
3368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
3369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
3371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_data()[__pos];
3372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
3377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
3378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
3380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
3381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  see at().)  Unshares the string.
3383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reference
3385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator[](size_type __pos)
3386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
3388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	// and in C++11 mode.
3389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
3390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
3391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
3392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_leak();
3393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_data()[__pos];
3394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
3399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
3400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
3403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
3404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
3405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reference
3407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       at(size_type __n) const
3408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__n >= this->size())
3410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
3412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				       "(which is %zu)"),
3413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				   __n, this->size());
3414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_data()[__n];
3415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
3420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
3421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
3424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
3425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
3426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  unsharing the string.
3427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reference
3429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       at(size_type __n)
3430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__n >= size())
3432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
3434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				       "(which is %zu)"),
3435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				   __n, this->size());
3436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_leak();
3437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_data()[__n];
3438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
3443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  element of the %string.
3444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reference
3446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       front()
3447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
3449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return operator[](0);
3450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
3454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  element of the %string.
3455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reference
3457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       front() const noexcept
3458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
3460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return operator[](0);
3461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
3465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  element of the %string.
3466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       reference
3468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       back()
3469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
3471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
3472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3474:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3475:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
3476:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  last element of the %string.
3477:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3478:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const_reference
3479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       back() const noexcept
3480:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3481:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
3482:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
3483:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3484:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
3485:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3486:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Modifiers:
3487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3488:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
3489:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to append.
3490:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3491:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3492:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3493:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
3494:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->append(__str); }
3495:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3496:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3497:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a C string.
3498:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to append.
3499:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3500:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3501:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3502:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
3503:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->append(__s); }
3504:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3505:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3506:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a character.
3507:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to append.
3508:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3509:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3510:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3511:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator+=(_CharT __c)
3512:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { 
3513:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->push_back(__c);
3514:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
3515:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3516:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3517:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3518:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3519:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
3520:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
3521:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3522:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3523:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3524:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
3525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
3526:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
3527:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3528:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3529:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
3530:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to append.
3531:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3532:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3533:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3534:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(const basic_string& __str);
3535:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3536:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3537:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a substring.
3538:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to append.
3539:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
3540:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
3541:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3542:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
3543:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3544:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
3545:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
3546:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
3547:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
3548:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3549:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3550:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n);
3551:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3552:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3553:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a C substring.
3554:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to append.
3555:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
3556:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3557:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3558:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3559:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n);
3560:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3561:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3562:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a C string.
3563:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to append.
3564:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3565:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3566:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3567:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(const _CharT* __s)
3568:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3569:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
3570:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->append(__s, traits_type::length(__s));
3571:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3572:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3573:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3574:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
3575:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
3576:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to use.
3577:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3578:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3579:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
3580:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3581:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3582:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(size_type __n, _CharT __c);
3583:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3584:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3585:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3586:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
3587:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
3588:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3589:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3590:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3591:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
3592:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
3593:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
3594:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3595:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3596:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
3597:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
3598:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
3599:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3600:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3601:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
3602:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3603:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator>
3604:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         basic_string&
3605:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
3606:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
3607:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3608:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3609:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Append a single character.
3610:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to append.
3611:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3612:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
3613:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       push_back(_CharT __c)
3614:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { 
3615:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __len = 1 + this->size();
3616:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
3617:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  this->reserve(__len);
3618:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
3619:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
3620:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3621:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3622:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3623:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
3624:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
3625:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3626:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3627:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3628:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(const basic_string& __str);
3629:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3630:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3631:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3632:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
3633:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
3634:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3635:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3636:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
3637:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
3638:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3639:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // PR 58265, this should be noexcept.
3640:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3641:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(basic_string&& __str)
3642:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3643:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->swap(__str);
3644:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
3645:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3646:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
3647:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3649:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
3650:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to use.
3651:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
3652:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
3653:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
3655:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
3657:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
3658:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
3659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
3660:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3661:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3662:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
3663:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->assign(__str._M_data()
3664:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
3665:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    __str._M_limit(__pos, __n)); }
3666:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3667:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
3669:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to use.
3670:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
3671:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3672:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3673:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
3674:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
3675:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
3676:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3677:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3678:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n);
3679:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3680:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3681:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
3682:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to use.
3683:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3684:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3685:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
3686:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
3687:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  function returns.
3688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3689:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3690:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(const _CharT* __s)
3691:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
3693:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
3694:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3695:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3696:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3697:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
3698:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
3699:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to use.
3700:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3701:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3702:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
3703:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  character @a __c.
3704:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3705:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3706:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
3707:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
3708:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3709:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3710:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
3711:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
3712:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
3713:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3714:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3715:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
3716:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3717:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator>
3718:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         basic_string&
3719:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
3720:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
3721:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3722:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3723:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3724:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
3725:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
3726:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3727:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3728:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3729:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
3730:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
3731:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
3732:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3733:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3734:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
3735:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3736:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
3737:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to insert.
3738:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3739:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3740:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
3741:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
3742:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
3743:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3744:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
3745:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3746:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
3747:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
3748:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
3749:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3750:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3751:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
3752:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3753:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __beg  Start of range.
3754:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __end  End of range.
3755:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3756:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3757:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
3758:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
3759:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3760:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
3761:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3762:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator>
3763:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         void
3764:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
3765:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
3766:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3767:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3768:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3769:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
3770:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3771:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
3772:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3773:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3774:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
3775:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
3776:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3777:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
3778:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
3779:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3780:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
3781:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3782:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3783:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
3784:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
3785:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to insert.
3786:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3787:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3788:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3789:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
3790:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
3791:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3792:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
3793:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3794:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3795:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
3796:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
3797:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3798:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3799:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert a substring.
3800:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
3801:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  The string to insert.
3802:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
3803:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
3804:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3805:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3806:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
3807:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
3808:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3809:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
3810:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
3811:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
3812:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
3813:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
3814:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
3815:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3816:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3817:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
3818:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n)
3819:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->insert(__pos1, __str._M_data()
3820:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
3821:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
3822:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3823:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3824:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
3825:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
3826:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
3827:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
3828:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3829:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3830:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
3831:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.
3832:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3833:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
3834:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
3835:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
3836:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
3837:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
3838:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3839:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3840:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
3841:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3842:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3843:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert a C string.
3844:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
3845:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
3846:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3847:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3848:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3849:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.
3850:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3851:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
3852:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
3853:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
3854:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
3855:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.
3856:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3857:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3858:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
3859:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3860:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
3861:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
3862:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3863:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3864:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3865:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
3866:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
3867:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
3868:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to insert.
3869:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3870:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3871:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
3872:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.
3873:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3874:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
3875:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
3876:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
3877:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3878:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
3879:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3880:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3881:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
3882:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
3883:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
3884:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3885:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3886:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Insert one character.
3887:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
3888:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  The character to insert.
3889:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
3890:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3891:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3892:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
3893:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
3894:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
3895:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3896:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
3897:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3898:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
3899:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       insert(iterator __p, _CharT __c)
3900:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3901:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
3902:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
3903:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
3904:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
3905:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
3906:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3907:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3908:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3909:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Remove characters.
3910:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
3911:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
3912:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3913:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3914:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.
3915:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3916:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
3917:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
3918:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
3919:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
3920:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3921:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
3922:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3923:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3924:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
3925:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { 
3926:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
3927:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
3928:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
3929:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3930:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3931:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3932:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Remove one character.
3933:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
3934:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
3935:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3936:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
3937:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
3938:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3939:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
3940:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       erase(iterator __position)
3941:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3942:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
3943:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __position < _M_iend());
3944:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
3945:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
3946:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
3947:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
3948:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3949:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3950:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3951:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
3952:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
3953:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
3954:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
3955:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3956:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
3957:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
3958:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3959:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       iterator
3960:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       erase(iterator __first, iterator __last);
3961:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****  
3962:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3963:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3964:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Remove the last character.
3965:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3966:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The string must be non-empty.
3967:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        */
3968:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
3969:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
3970:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
3971:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
3972:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	erase(size() - 1, 1);
3973:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
3974:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
3975:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3976:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3977:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
3978:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
3979:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
3980:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to insert.
3981:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
3982:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3983:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.
3984:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3985:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
3986:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
3987:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
3988:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
3989:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
3990:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
3991:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  error is thrown.
3992:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
3993:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
3994:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
3995:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
3996:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
3997:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
3998:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
3999:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
4000:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4001:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to insert.
4002:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4003:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
4004:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
4005:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4006:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str.size().
4007:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4008:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4009:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4010:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4011:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4012:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4013:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
4014:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4015:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4016:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4017:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2)
4018:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4019:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4020:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4021:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4022:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4023:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4024:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4025:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4026:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4027:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4028:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
4029:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4030:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4031:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4032:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4033:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4034:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4035:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4036:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4037:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4038:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is thrown.
4039:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4040:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4041:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4042:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      size_type __n2);
4043:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4044:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4045:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
4046:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4047:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4048:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4049:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
4050:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4051:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4052:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4053:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4054:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4055:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4056:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4057:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4058:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  change if an error is thrown.
4059:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4060:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4061:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4062:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4063:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4064:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4065:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4066:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4067:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4068:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
4069:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4070:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4071:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
4072:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4073:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
4074:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4075:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4076:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4077:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4078:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4079:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4080:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4081:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4082:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is thrown.
4083:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4084:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4085:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4086:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4087:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4088:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4089:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4090:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
4091:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4092:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4093:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String value to insert.
4094:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
4095:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4096:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4097:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4098:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4099:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
4101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
4108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
4112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
4113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.
4120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
4131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
4135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
4156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
4173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
4178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.
4185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator>
4187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         basic_string&
4188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
4189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         {
4191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				   && __i2 <= _M_iend());
4193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}
4197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
4199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
4208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
4212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
4219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
4229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
4233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
4234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
4240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       
4242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
4245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Reference to this string.
4249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  thrown.
4256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
4258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
4259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
4260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // C++11
4261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     private:
4263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _Integer>
4264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	basic_string&
4265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
4266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    _Integer __val, __true_type)
4267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
4268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InputIterator>
4270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	basic_string&
4271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
4272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    _InputIterator __k2, __false_type);
4273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
4276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		     _CharT __c);
4277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string&
4279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
4280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		      size_type __n2);
4281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
4283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // requires special behaviour if _InIter is an integral type
4284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InIterator>
4285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         static _CharT*
4286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
4287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			 const _Alloc& __a, __false_type)
4288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{
4289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
4290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
4291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	}
4292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
4294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
4295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _Integer>
4296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         static _CharT*
4297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
4298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			 const _Alloc& __a, __true_type)
4299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
4300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 				    __end, __a); }
4301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static _CharT*
4303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
4304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _S_construct(__req, __c, __a); }
4305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InIterator>
4307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         static _CharT*
4308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
4309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	{
4310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
4311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
4312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         }
4313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
4315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _InIterator>
4316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         static _CharT*
4317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
4318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		      input_iterator_tag);
4319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
4321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
4322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       template<class _FwdIterator>
4323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         static _CharT*
4324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
4325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		     forward_iterator_tag);
4326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       static _CharT*
4328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
4329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     public:
4331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
4334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
4335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
4336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
4337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
4338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
4339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
4341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
4342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  out_of_range is thrown.
4343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
4346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
4349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  String to swap with.
4350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
4352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  time.
4353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // PR 58265, this should be noexcept.
4355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       void
4356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       swap(basic_string& __s);
4357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // String operations:
4359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
4361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
4363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  happen.
4364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const _CharT*
4366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
4367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_data(); }
4368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
4371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
4373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  happen.
4374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const _CharT*
4376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
4377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_data(); }
4378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
4381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       allocator_type
4383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
4384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return _M_dataplus; }
4385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
4388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to locate.
4389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
4390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
4391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
4392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
4394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
4395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
4396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
4397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
4400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a string.
4403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to locate.
4404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
4406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
4408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
4409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found, returns npos.
4410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
4413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
4414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
4415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
4418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to locate.
4419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
4421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
4423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
4424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
4425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
4428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
4431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character.
4435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to locate.
4436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
4438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
4440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
4441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
4442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
4445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
4448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to locate.
4449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
4451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
4453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
4454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
4455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
4458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
4459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
4460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
4463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to locate.
4464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
4465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
4466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
4467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
4469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
4470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
4471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
4472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4474:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
4475:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4476:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4477:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
4478:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to locate.
4479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
4480:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
4481:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4482:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
4483:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
4484:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
4485:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4486:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
4488:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4489:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4490:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
4491:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4492:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4493:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4494:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
4495:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to locate.
4496:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4497:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
4498:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4499:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
4500:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
4501:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
4502:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4503:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4504:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
4505:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4506:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4507:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
4508:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
4509:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4510:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
4511:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4512:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4513:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
4514:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
4515:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
4516:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4517:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4518:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
4519:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
4520:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
4521:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4522:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4523:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
4524:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
4525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
4526:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
4527:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
4528:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4529:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4530:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
4531:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
4532:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns npos.
4533:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4534:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4535:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
4536:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4537:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4538:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
4539:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
4540:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4541:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
4542:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4543:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4544:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
4545:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4546:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4547:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4548:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
4549:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4550:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4551:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
4552:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4553:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4554:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4555:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character.
4556:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to locate.
4557:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4558:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
4559:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4560:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
4561:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
4562:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
4563:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4564:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
4565:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4566:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4567:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
4568:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
4569:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4570:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4571:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
4572:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
4573:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4574:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
4575:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4576:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4577:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
4578:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
4579:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
4580:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4581:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4582:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
4583:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
4584:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
4585:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4586:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4587:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
4588:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
4589:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
4590:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
4591:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
4592:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4593:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4594:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
4595:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
4596:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns npos.
4597:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4598:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4599:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
4600:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4601:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4602:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
4603:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
4604:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4605:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
4606:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4607:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4608:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
4609:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4610:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4611:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4612:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
4613:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4614:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4615:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
4616:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4617:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4618:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4619:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
4620:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to locate.
4621:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4622:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
4623:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4624:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
4625:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
4626:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
4627:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4628:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
4629:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4630:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4631:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
4632:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
4633:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4634:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4635:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
4636:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
4637:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4638:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
4639:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4640:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
4641:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
4642:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
4643:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4644:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4645:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
4646:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
4647:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
4648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4649:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4650:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
4651:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
4652:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
4653:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
4654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
4655:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
4657:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
4658:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
4659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
4660:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4661:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4662:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
4663:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			size_type __n) const;
4664:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4665:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4666:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
4667:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
4668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4669:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
4670:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4671:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
4672:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
4673:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4674:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4675:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4676:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
4677:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4678:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4679:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
4680:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4681:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4682:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4683:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
4684:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
4685:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4686:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
4687:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
4689:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
4690:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
4691:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4693:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
4694:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT;
4695:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4696:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4697:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
4698:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
4699:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4700:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
4701:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4702:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
4703:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
4704:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
4705:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
4706:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4707:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4708:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
4709:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT
4710:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
4711:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4712:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4713:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
4714:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
4715:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
4716:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
4717:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
4718:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4719:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
4720:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
4721:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
4722:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns npos.
4723:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4724:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4725:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
4726:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		       size_type __n) const;
4727:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4728:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
4729:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
4730:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4731:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
4732:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4733:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
4734:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
4735:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
4736:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  npos.
4737:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4738:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4739:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
4740:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4741:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4742:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
4743:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4744:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4745:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4746:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
4747:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
4748:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4749:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
4750:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4751:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
4752:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
4753:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
4754:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4755:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       size_type
4756:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
4757:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	_GLIBCXX_NOEXCEPT;
4758:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4759:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4760:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Get a substring.
4761:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
4762:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
4763:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  The new string.
4764:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
4765:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4766:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
4767:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
4768:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
4769:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
4770:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4771:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string
4772:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
4773:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       { return basic_string(*this,
4774:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
4775:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4776:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4777:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare to a string.
4778:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to compare against.
4779:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4780:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4781:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
4782:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
4783:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
4784:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
4785:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
4786:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
4787:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
4788:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
4789:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4790:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
4791:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(const basic_string& __str) const
4792:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       {
4793:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __size = this->size();
4794:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
4795:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
4796:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4797:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
4798:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	if (!__r)
4799:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
4800:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return __r;
4801:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
4802:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4803:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4804:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
4805:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
4806:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
4807:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to compare against.
4808:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4809:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4810:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
4811:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
4812:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
4813:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
4814:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
4815:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
4816:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
4817:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  strings by calling
4818:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
4819:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
4820:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the shorter one is ordered first.
4821:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4822:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
4823:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
4824:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4825:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4826:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
4827:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
4828:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
4829:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __str  String to compare against.
4830:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
4831:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
4832:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4833:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4834:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
4835:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
4836:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
4837:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
4838:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
4839:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
4840:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
4841:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
4842:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
4843:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  calling
4844:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
4845:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
4846:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
4847:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4848:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
4849:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
4850:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2) const;
4851:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4852:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4853:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
4854:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
4855:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4856:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4857:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
4858:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
4859:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
4860:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
4861:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
4862:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
4863:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
4864:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  ordered first.
4865:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4866:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
4867:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(const _CharT* __s) const;
4868:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4869:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
4870:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // 5 String::compare specification questionable
4871:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4872:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
4873:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
4874:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
4875:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
4876:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4877:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4878:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
4879:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
4880:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
4881:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
4882:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
4883:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
4884:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
4885:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  function then compares the two string by calling
4886:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
4887:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
4888:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  one is ordered first.
4889:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4890:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
4891:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
4892:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4893:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       /**
4894:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
4895:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
4896:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
4897:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
4898:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
4899:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4900:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4901:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
4902:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
4903:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
4904:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
4905:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
4906:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
4907:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
4908:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
4909:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  function then compares the two strings by calling
4910:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
4911:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
4912:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  one is ordered first.
4913:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *
4914:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
4915:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****        *  no special meaning.
4916:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       */
4917:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       int
4918:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
4919:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      size_type __n2) const;
4920:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4921:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
4922:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       friend void
4923:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
4924:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 					    void* exc);
4925:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       friend const char*
4926:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
4927:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       friend void
4928:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ::_txnal_cow_string_D1(void *that);
4929:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       friend void
4930:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
4931:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** # endif
4932:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   };
4933:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
4934:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4935:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // operator+
4936:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
4937:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Concatenate two strings.
4938:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
4939:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Last string.
4940:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
4941:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
4942:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4943:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
4944:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4945:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4946:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     {
4947:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
4948:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       __str.append(__rhs);
4949:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       return __str;
4950:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     }
4951:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4952:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
4953:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Concatenate C string and string.
4954:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
4955:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Last string.
4956:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
4957:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
4958:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4959:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
4960:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
4961:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
4962:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4963:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
4964:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Concatenate character and string.
4965:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
4966:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Last string.
4967:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4968:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
4969:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4970:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
4971:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
4972:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4973:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
4974:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Concatenate string and C string.
4975:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
4976:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Last string.
4977:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4978:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
4979:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4980:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4981:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4982:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const _CharT* __rhs)
4983:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     {
4984:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
4985:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       __str.append(__rhs);
4986:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       return __str;
4987:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     }
4988:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
4989:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
4990:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Concatenate string and character.
4991:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
4992:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Last string.
4993:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4994:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
4995:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4996:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4997:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
4998:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     {
4999:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
5000:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       typedef typename __string_type::size_type		__size_type;
5001:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       __string_type __str(__lhs);
5002:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       __str.append(__size_type(1), __rhs);
5003:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       return __str;
5004:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     }
5005:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5006:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
5007:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5008:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5009:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5010:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5011:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
5012:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5013:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5014:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5015:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5016:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5017:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
5018:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5019:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5020:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5021:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5022:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5023:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     {
5024:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
5025:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
5026:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			   && __size <= __rhs.capacity());
5027:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
5028:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	            : std::move(__lhs.append(__rhs));
5029:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     }
5030:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5031:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5032:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5033:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
5034:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5035:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
5036:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5037:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5038:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5039:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(_CharT __lhs,
5040:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5041:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
5042:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5043:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5044:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5045:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5046:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const _CharT* __rhs)
5047:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
5048:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5049:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5050:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5051:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5052:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      _CharT __rhs)
5053:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
5054:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
5055:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5056:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // operator ==
5057:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5058:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test equivalence of two strings.
5059:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
5060:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Second string.
5061:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
5062:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5063:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5064:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5065:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5066:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5067:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
5068:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
5069:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5070:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT>
5071:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline
5072:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
5073:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
5074:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
5075:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return (__lhs.size() == __rhs.size()
5076:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
5077:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 						    __lhs.size())); }
5078:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5079:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5080:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test equivalence of C string and string.
5081:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  C string.
5082:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  String.
5083:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
5084:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5085:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5086:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5087:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator==(const _CharT* __lhs,
5088:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5089:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
5090:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5091:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5092:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test equivalence of string and C string.
5093:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  String.
5094:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  C string.
5095:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
5096:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5097:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5098:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5099:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const _CharT* __rhs)
5101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
5102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // operator !=
5104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test difference of two strings.
5106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
5107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Second string.
5108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
5109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
5115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
5116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test difference of C string and string.
5119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  C string.
5120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  String.
5121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
5122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator!=(const _CharT* __lhs,
5126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
5128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test difference of string and C string.
5131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  String.
5132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  C string.
5133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
5134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const _CharT* __rhs)
5139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
5140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // operator <
5142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if string precedes string.
5144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
5145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Second string.
5146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
5147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
5153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
5154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if string precedes C string.
5157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  String.
5158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  C string.
5159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
5160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const _CharT* __rhs)
5165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
5166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if C string precedes string.
5169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  C string.
5170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  String.
5171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
5172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator<(const _CharT* __lhs,
5176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
5178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // operator >
5180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if string follows string.
5182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
5183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Second string.
5184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
5185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
5191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
5192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if string follows C string.
5195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  String.
5196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  C string.
5197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
5198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const _CharT* __rhs)
5203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
5204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if C string follows string.
5207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  C string.
5208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  String.
5209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
5210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator>(const _CharT* __lhs,
5214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
5216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // operator <=
5218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if string doesn't follow string.
5220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
5221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Second string.
5222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
5223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
5229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
5230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if string doesn't follow C string.
5233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  String.
5234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  C string.
5235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
5236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const _CharT* __rhs)
5241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
5242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if C string doesn't follow string.
5245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  C string.
5246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  String.
5247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
5248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator<=(const _CharT* __lhs,
5252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
5254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // operator >=
5256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if string doesn't precede string.
5258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
5259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Second string.
5260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
5261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
5267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
5268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if string doesn't precede C string.
5271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  String.
5272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  C string.
5273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
5274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const _CharT* __rhs)
5279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
5280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Test if C string doesn't precede string.
5283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  C string.
5284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  String.
5285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
5286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline bool
5289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator>=(const _CharT* __lhs,
5290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
5292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Swap contents of two strings.
5295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __lhs  First string.
5296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __rhs  Second string.
5297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
5298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
5299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline void
5302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
5303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
5304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))
5305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { __lhs.swap(__rhs); }
5306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Read stream into a string.
5310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __is  Input stream.
5311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __str  Buffer to store into.
5312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  Reference to the input stream.
5313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
5314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
5315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
5316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
5317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  number of characters stored into @a __str.  Any previous
5318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  contents of @a __str are erased.
5319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     basic_istream<_CharT, _Traits>&
5322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
5323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
5324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<>
5326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     basic_istream<char>&
5327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
5328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Write string to a stream.
5331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __os  Output stream.
5332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __str  String to write out.
5333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  Reference to the output stream.
5334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
5335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
5336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  writing a C string.
5337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
5340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
5341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
5342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     {
5343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       // 586. string inserter not a formatted function
5345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
5346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     }
5347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Read a line from stream into a string.
5350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __is  Input stream.
5351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __str  Buffer to store into.
5352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __delim  Character marking end of line.
5353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  Reference to the input stream.
5354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
5355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  Stores characters from @a __is into @a __str until @a __delim is
5356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
5357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
5358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @a __delim is encountered, it is extracted but not stored into
5359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @a __str.
5360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     basic_istream<_CharT, _Traits>&
5363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
5364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim);
5365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /**
5367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @brief  Read a line from stream into a string.
5368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __is  Input stream.
5369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @param __str  Buffer to store into.
5370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @return  Reference to the input stream.
5371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *
5372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  Stores characters from is into @a __str until &apos;\n&apos; is
5373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
5374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
5375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  end of line is encountered, it is extracted but not stored into
5376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    *  @a __str.
5377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****    */
5378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_istream<_CharT, _Traits>&
5380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
5381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
5382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return std::getline(__is, __str, __is.widen('\n')); }
5383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
5385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /// Read a line from an rvalue stream into a string.
5386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_istream<_CharT, _Traits>&
5388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
5389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
5390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return std::getline(__is, __str, __delim); }
5391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   /// Read a line from an rvalue stream into a string.
5393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     inline basic_istream<_CharT, _Traits>&
5395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
5396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
5397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     { return std::getline(__is, __str); }
5398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif
5399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<>
5401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     basic_istream<char>&
5402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     getline(basic_istream<char>& __in, basic_string<char>& __str,
5403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    char __delim);
5404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #ifdef _GLIBCXX_USE_WCHAR_T
5406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   template<>
5407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     basic_istream<wchar_t>&
5408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****     getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
5409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    wchar_t __delim);
5410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif  
5411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
5413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** } // namespace
5414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if __cplusplus >= 201103L
5416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #include <ext/string_conversions.h>
5418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
5420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** {
5421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
5422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if _GLIBCXX_USE_C99_STDLIB
5425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // 21.4 Numeric Conversions [string.conversions].
5426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   inline int
5427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
5428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
5429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 					__idx, __base); }
5430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   inline long
5432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   stol(const string& __str, size_t* __idx = 0, int __base = 10)
5433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtol, "stol", __str.c_str(),
5434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __idx, __base); }
5435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   inline unsigned long
5437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   stoul(const string& __str, size_t* __idx = 0, int __base = 10)
5438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoul, "stoul", __str.c_str(),
5439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __idx, __base); }
5440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   inline long long
5442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   stoll(const string& __str, size_t* __idx = 0, int __base = 10)
5443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoll, "stoll", __str.c_str(),
5444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __idx, __base); }
5445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   inline unsigned long long
5447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   stoull(const string& __str, size_t* __idx = 0, int __base = 10)
5448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoull, "stoull", __str.c_str(),
5449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 			     __idx, __base); }
5450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // NB: strtof vs strtod.
5452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   inline float
5453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   stof(const string& __str, size_t* __idx = 0)
5454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
5455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   inline double
5457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   stod(const string& __str, size_t* __idx = 0)
5458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
5459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   inline long double
5461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   stold(const string& __str, size_t* __idx = 0)
5462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
5463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #endif // _GLIBCXX_USE_C99_STDLIB
5464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** #if _GLIBCXX_USE_C99_STDIO
5466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // NB: (v)snprintf vs sprintf.
5467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
5468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   // DR 1261.
5469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   inline string
5470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   to_string(int __val)
5471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
5472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 					   "%d", __val); }
 4353              		.loc 3 5472 0
 4354 0038 009000E3 		movw	r9, #:lower16:.LC0
 4355 003c 00A000E3 		movw	r10, #:lower16:vsnprintf
 4356              	.LBE2116:
 4357              	.LBE2115:
 4358              	.LBB2119:
 4359              	.LBB2120:
 4360              	.LBB2121:
 4361              	.LBB2122:
1688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 4362              		.loc 3 1688 0
 4363 0040 00B000E3 		movw	fp, #:lower16:.LC22
 4364              	.LBE2122:
 4365              	.LBE2121:
 4366              	.LBE2120:
 4367              	.LBE2119:
 4368              	.LBB2166:
 4369              	.LBB2117:
 4370              		.loc 3 5472 0
 4371 0044 009040E3 		movt	r9, #:upper16:.LC0
 4372 0048 00A040E3 		movt	r10, #:upper16:vsnprintf
 4373              	.LBE2117:
 4374              	.LBE2166:
 4375              	.LBB2167:
 4376              	.LBB2129:
 4377              	.LBB2126:
 4378              	.LBB2123:
1688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 4379              		.loc 3 1688 0
 4380 004c 00B040E3 		movt	fp, #:upper16:.LC22
 4381              	.LBE2123:
 4382              	.LBE2126:
 4383              	.LBE2129:
 4384              	.LBE2167:
 4385              		.loc 5 420 0
 4386 0050 0140A0E3 		mov	r4, #1
 4387 0054 3F0000EA 		b	.L281
 4388              	.LVL444:
 4389              	.L305:
 4390              	.LBB2168:
 4391              	.LBB2169:
 4392              		.loc 3 5472 0
 4393 0058 10008DE2 		add	r0, sp, #16
 4394 005c 0930A0E1 		mov	r3, r9
 4395 0060 1020A0E3 		mov	r2, #16
 4396 0064 0A10A0E1 		mov	r1, r10
 4397 0068 00C08DE5 		str	ip, [sp]
 4398              	.LVL445:
 4399              	.LEHB0:
 4400 006c FEFFFFEB 		bl	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPK
 4401              	.LVL446:
 4402              	.LEHE0:
 4403              	.LBE2169:
 4404              	.LBE2168:
 4405              	.LBB2171:
 4406              	.LBB2172:
 4407              	.LBB2173:
 4408              	.LBB2174:
1688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 4409              		.loc 3 1688 0
 4410 0070 0110A0E3 		mov	r1, #1
 4411 0074 003000E3 		movw	r3, #:lower16:.LC21
 4412 0078 0020A0E3 		mov	r2, #0
 4413 007c 00108DE5 		str	r1, [sp]
 4414 0080 10008DE2 		add	r0, sp, #16
 4415              	.LVL447:
 4416 0084 003040E3 		movt	r3, #:upper16:.LC21
 4417 0088 0210A0E1 		mov	r1, r2
 4418              	.LEHB1:
 4419 008c FEFFFFEB 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 4420              	.LVL448:
 4421              	.LEHE1:
 4422 0090 0030A0E1 		mov	r3, r0
 4423              	.LBE2174:
 4424              	.LBE2173:
 4425              	.LBE2172:
 4426              	.LBB2177:
 4427              	.LBB2178:
 4428              	.LBB2179:
 4429              	.LBB2180:
 4430              	.LBB2181:
 4431              	.LBB2182:
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4432              		.loc 3 110 0
 4433 0094 48608DE2 		add	r6, sp, #72
 4434 0098 40608DE5 		str	r6, [sp, #64]
 4435              	.LBE2182:
 4436              	.LBE2181:
 4437              	.LBE2180:
 4438              	.LBE2179:
 4439              	.LBE2178:
 4440              	.LBE2177:
 4441              	.LBB2205:
 4442              	.LBB2176:
 4443              	.LBB2175:
1688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 4444              		.loc 3 1688 0
 4445 009c 0070A0E1 		mov	r7, r0
 4446              	.LVL449:
 4447 00a0 082093E4 		ldr	r2, [r3], #8
 4448              	.LVL450:
 4449              	.LBE2175:
 4450              	.LBE2176:
 4451              	.LBE2205:
 4452              	.LBB2206:
 4453              	.LBB2203:
 4454              	.LBB2201:
 479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  {
 4455              		.loc 3 479 0
 4456 00a4 030052E1 		cmp	r2, r3
 4457 00a8 6800000A 		beq	.L302
 4458              	.LVL451:
 4459              	.LBB2183:
 4460              	.LBB2184:
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4461              		.loc 3 128 0
 4462 00ac 40208DE5 		str	r2, [sp, #64]
 4463              	.LVL452:
 4464              	.LBE2184:
 4465              	.LBE2183:
 487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  }
 4466              		.loc 3 487 0
 4467 00b0 082090E5 		ldr	r2, [r0, #8]
 4468              	.LVL453:
 4469              	.LBB2185:
 4470              	.LBB2186:
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4471              		.loc 3 160 0
 4472 00b4 48208DE5 		str	r2, [sp, #72]
 4473              	.LVL454:
 4474              	.L268:
 4475 00b8 040097E5 		ldr	r0, [r7, #4]
 4476              	.LVL455:
 4477              	.LBE2186:
 4478              	.LBE2185:
 4479              	.LBB2187:
 4480              	.LBB2188:
 4481              	.LBB2189:
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4482              		.loc 3 132 0
 4483 00bc 0020A0E3 		mov	r2, #0
 4484 00c0 58108DE2 		add	r1, sp, #88
 4485              	.LBE2189:
 4486              	.LBE2188:
 4487              	.LBE2187:
 4488              	.LBB2194:
 4489              	.LBB2195:
 4490 00c4 44008DE5 		str	r0, [sp, #68]
 4491              	.LVL456:
 4492              	.LBE2195:
 4493              	.LBE2194:
 4494              	.LBB2196:
 4495              	.LBB2197:
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4496              		.loc 3 128 0
 4497 00c8 003087E5 		str	r3, [r7]
 4498              	.LVL457:
 4499              	.LBE2197:
 4500              	.LBE2196:
 4501              	.LBB2198:
 4502              	.LBB2191:
 4503              	.LBB2192:
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 4504              		.loc 4 243 0
 4505 00cc 0820C7E5 		strb	r2, [r7, #8]
 4506 00d0 180031E5 		ldr	r0, [r1, #-24]!
 4507 00d4 003095E5 		ldr	r3, [r5]
 4508              	.LBE2192:
 4509              	.LBE2191:
 4510              	.LBB2193:
 4511              	.LBB2190:
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4512              		.loc 3 132 0
 4513 00d8 042087E5 		str	r2, [r7, #4]
 4514              	.LVL458:
 4515              	.LBE2190:
 4516              	.LBE2193:
 4517              	.LBE2198:
 4518              	.LBE2201:
 4519              	.LBE2203:
 4520              	.LBE2206:
 4521              	.LBE2171:
 4522              	.LBB2208:
 4523              	.LBB2209:
 648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	    && (_Alloc_traits::_S_propagate_on_move_assign()
 4524              		.loc 3 648 0
 4525 00dc 060050E1 		cmp	r0, r6
 4526 00e0 4F00000A 		beq	.L269
 4527              	.LVL459:
 4528              	.LBB2210:
 654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      {
 4529              		.loc 3 654 0
 4530 00e4 08209DE5 		ldr	r2, [sp, #8]
 4531 00e8 030052E1 		cmp	r2, r3
 4532              	.LBB2211:
 4533              	.LBB2212:
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4534              		.loc 3 132 0
 4535 00ec 44209DE5 		ldr	r2, [sp, #68]
 4536              	.LBE2212:
 4537              	.LBE2211:
 654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      {
 4538              		.loc 3 654 0
 4539 00f0 4500000A 		beq	.L303
 4540              	.LVL460:
 4541              	.LBB2214:
 4542              	.LBB2215:
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4543              		.loc 3 160 0
 4544 00f4 48109DE5 		ldr	r1, [sp, #72]
 4545              	.LBE2215:
 4546              	.LBE2214:
 668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      {
 4547              		.loc 3 668 0
 4548 00f8 000053E3 		cmp	r3, #0
 4549              	.LBB2218:
 4550              	.LBB2213:
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4551              		.loc 3 132 0
 4552 00fc 050085E8 		stm	r5, {r0, r2}
 4553              	.LBE2213:
 4554              	.LBE2218:
 659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 		  }
 4555              		.loc 3 659 0
 4556 0100 082095E5 		ldr	r2, [r5, #8]
 4557              	.LVL461:
 4558              	.LBB2219:
 4559              	.LBB2216:
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4560              		.loc 3 160 0
 4561 0104 081085E5 		str	r1, [r5, #8]
 4562              	.LVL462:
 4563              	.LBE2216:
 4564              	.LBE2219:
 668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	      {
 4565              		.loc 3 668 0
 4566 0108 4100000A 		beq	.L271
 4567              	.LVL463:
 4568              	.LBB2220:
 4569              	.LBB2221:
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4570              		.loc 3 128 0
 4571 010c 40308DE5 		str	r3, [sp, #64]
 4572              	.LVL464:
 4573              	.LBE2221:
 4574              	.LBE2220:
 4575              	.LBB2222:
 4576              	.LBB2223:
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4577              		.loc 3 160 0
 4578 0110 48208DE5 		str	r2, [sp, #72]
 4579              	.LVL465:
 4580              	.L272:
 4581              	.LBE2223:
 4582              	.LBE2222:
 4583              	.LBE2210:
 4584              	.LBE2209:
 4585              	.LBB2230:
 4586              	.LBB2231:
 4587              	.LBB2232:
 4588              	.LBB2233:
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4589              		.loc 3 132 0
 4590 0114 0020A0E3 		mov	r2, #0
 4591 0118 44208DE5 		str	r2, [sp, #68]
 4592              	.LVL466:
 4593              	.LBE2233:
 4594              	.LBE2232:
 4595              	.LBB2234:
 4596              	.LBB2235:
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 4597              		.loc 4 243 0
 4598 011c 0020C3E5 		strb	r2, [r3]
 4599              	.LVL467:
 4600 0120 40009DE5 		ldr	r0, [sp, #64]
 4601              	.LVL468:
 4602              	.LBE2235:
 4603              	.LBE2234:
 4604              	.LBE2231:
 4605              	.LBE2230:
 4606              	.LBE2208:
 4607              	.LBB2237:
 4608              	.LBB2238:
 4609              	.LBB2239:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4610              		.loc 3 180 0
 4611 0124 060050E1 		cmp	r0, r6
 4612 0128 0000000A 		beq	.L273
 4613              	.LVL469:
 4614              	.LBB2240:
 4615              	.LBB2241:
 4616              	.LBB2242:
 4617              	.LBB2243:
 4618              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****  */
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #include <new>
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #endif
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** {
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****   using std::size_t;
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****   using std::ptrdiff_t;
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****   /**
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *  @ingroup allocators
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    */
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****   template<typename _Tp>
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****     class new_allocator
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****     {
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****     public:
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef size_t     size_type;
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       template<typename _Tp1>
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****         struct rebind
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #endif
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       template<typename _Tp1>
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       pointer
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       const_pointer
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       pointer
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       { 
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 	if (__n > this->max_size())
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       }
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       void
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       deallocate(pointer __p, size_type)
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       { ::operator delete(__p); }
 4619              		.loc 7 110 0
 4620 012c FEFFFFEB 		bl	_ZdlPv
 4621              	.LVL470:
 4622              	.L273:
 4623 0130 10009DE5 		ldr	r0, [sp, #16]
 4624              	.LVL471:
 4625              	.LBE2243:
 4626              	.LBE2242:
 4627              	.LBE2241:
 4628              	.LBE2240:
 4629              	.LBE2239:
 4630              	.LBE2238:
 4631              	.LBE2237:
 4632              	.LBB2244:
 4633              	.LBB2245:
 4634              	.LBB2246:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4635              		.loc 3 180 0
 4636 0134 18308DE2 		add	r3, sp, #24
 4637 0138 030050E1 		cmp	r0, r3
 4638 013c 0000000A 		beq	.L275
 4639              	.LVL472:
 4640              	.L299:
 4641              	.LBE2246:
 4642              	.LBE2245:
 4643              	.LBE2244:
 4644              	.LBB2247:
 4645              	.LBB2248:
 4646              	.LBB2249:
 4647              	.LBB2250:
 4648              	.LBB2251:
 4649              	.LBB2252:
 4650              	.LBB2253:
 4651              		.loc 7 110 0
 4652 0140 FEFFFFEB 		bl	_ZdlPv
 4653              	.LVL473:
 4654              	.L275:
 4655              	.LBE2253:
 4656              	.LBE2252:
 4657              	.LBE2251:
 4658              	.LBE2250:
 4659              	.LBE2249:
 4660              	.LBE2248:
 4661              	.LBE2247:
 4662              		.loc 5 420 0 discriminator 2
 4663 0144 002098E5 		ldr	r2, [r8]
 4664              	.LVL474:
 4665              	.LBE2295:
 4666              	.LBB2296:
 4667              	.LBB2297:
 4668              	.LBB2298:
 4669              	.LBB2299:
 4670              	.LBB2300:
 271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 4671              		.loc 3 271 0 discriminator 2
 4672 0148 043095E5 		ldr	r3, [r5, #4]
 4673              	.LBE2300:
 4674              	.LBE2299:
 4675              	.LBE2298:
 4676              	.LBE2297:
 4677              	.LBE2296:
 4678              	.LBB2309:
 4679              		.loc 5 420 0 discriminator 2
 4680 014c 040052E1 		cmp	r2, r4
 4681 0150 014084E2 		add	r4, r4, #1
 4682              	.LVL475:
 4683 0154 440000DA 		ble	.L304
 4684              	.LVL476:
 4685              	.L281:
 421:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (str.empty())
 4686              		.loc 5 421 0
 4687 0158 000053E3 		cmp	r3, #0
 4688              	.LBB2256:
 4689              	.LBB2170:
 4690              		.loc 3 5472 0
 4691 015c 04C198E7 		ldr	ip, [r8, r4, lsl #2]
 4692              	.LBE2170:
 4693              	.LBE2256:
 4694              		.loc 5 421 0
 4695 0160 BCFFFF0A 		beq	.L305
 4696              	.LVL477:
 4697              	.LBB2257:
 4698              	.LBB2118:
 4699              		.loc 3 5472 0
 4700 0164 28008DE2 		add	r0, sp, #40
 4701 0168 0930A0E1 		mov	r3, r9
 4702 016c 1020A0E3 		mov	r2, #16
 4703 0170 0A10A0E1 		mov	r1, r10
 4704 0174 00C08DE5 		str	ip, [sp]
 4705              	.LVL478:
 4706              	.LEHB2:
 4707 0178 FEFFFFEB 		bl	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPK
 4708              	.LVL479:
 4709              	.LEHE2:
 4710              	.LBE2118:
 4711              	.LBE2257:
 4712              	.LBB2258:
 4713              	.LBB2130:
 4714              	.LBB2127:
 4715              	.LBB2124:
1688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 4716              		.loc 3 1688 0
 4717 017c 0230A0E3 		mov	r3, #2
 4718 0180 0020A0E3 		mov	r2, #0
 4719 0184 00308DE5 		str	r3, [sp]
 4720 0188 28008DE2 		add	r0, sp, #40
 4721              	.LVL480:
 4722 018c 0210A0E1 		mov	r1, r2
 4723 0190 0B30A0E1 		mov	r3, fp
 4724              	.LEHB3:
 4725 0194 FEFFFFEB 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 4726              	.LVL481:
 4727              	.LEHE3:
 4728 0198 0030A0E1 		mov	r3, r0
 4729              	.LBE2124:
 4730              	.LBE2127:
 4731              	.LBE2130:
 4732              	.LBB2131:
 4733              	.LBB2132:
 4734              	.LBB2133:
 4735              	.LBB2134:
 4736              	.LBB2135:
 4737              	.LBB2136:
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4738              		.loc 3 110 0
 4739 019c 48608DE2 		add	r6, sp, #72
 4740 01a0 40608DE5 		str	r6, [sp, #64]
 4741              	.LBE2136:
 4742              	.LBE2135:
 4743              	.LBE2134:
 4744              	.LBE2133:
 4745              	.LBE2132:
 4746              	.LBE2131:
 4747              	.LBB2162:
 4748              	.LBB2128:
 4749              	.LBB2125:
1688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 4750              		.loc 3 1688 0
 4751 01a4 0070A0E1 		mov	r7, r0
 4752              	.LVL482:
 4753 01a8 082093E4 		ldr	r2, [r3], #8
 4754              	.LVL483:
 4755              	.LBE2125:
 4756              	.LBE2128:
 4757              	.LBE2162:
 4758              	.LBB2163:
 4759              	.LBB2159:
 4760              	.LBB2156:
 479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  {
 4761              		.loc 3 479 0
 4762 01ac 030052E1 		cmp	r2, r3
 4763 01b0 1F00000A 		beq	.L306
 4764              	.LVL484:
 4765              	.LBB2137:
 4766              	.LBB2138:
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4767              		.loc 3 128 0
 4768 01b4 40208DE5 		str	r2, [sp, #64]
 4769              	.LVL485:
 4770              	.LBE2138:
 4771              	.LBE2137:
 487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  }
 4772              		.loc 3 487 0
 4773 01b8 082090E5 		ldr	r2, [r0, #8]
 4774              	.LVL486:
 4775              	.LBB2139:
 4776              	.LBB2140:
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4777              		.loc 3 160 0
 4778 01bc 48208DE5 		str	r2, [sp, #72]
 4779              	.LVL487:
 4780              	.L277:
 4781 01c0 041097E5 		ldr	r1, [r7, #4]
 4782              	.LVL488:
 4783              	.LBE2140:
 4784              	.LBE2139:
 4785              	.LBB2141:
 4786              	.LBB2142:
 4787              	.LBB2143:
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4788              		.loc 3 132 0
 4789 01c4 0020A0E3 		mov	r2, #0
 4790              	.LBE2143:
 4791              	.LBE2142:
 4792              	.LBE2141:
 4793              	.LBE2156:
 4794              	.LBE2159:
 4795              	.LBE2163:
 4796              	.LBE2258:
 4797              	.LBB2259:
 4798              	.LBB2260:
 4799              	.LBB2261:
1084:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4800              		.loc 3 1084 0
 4801 01c8 0500A0E1 		mov	r0, r5
 4802              	.LBE2261:
 4803              	.LBE2260:
 4804              	.LBE2259:
 4805              	.LBB2264:
 4806              	.LBB2164:
 4807              	.LBB2160:
 4808              	.LBB2157:
 4809              	.LBB2148:
 4810              	.LBB2149:
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4811              		.loc 3 132 0
 4812 01cc 44108DE5 		str	r1, [sp, #68]
 4813              	.LVL489:
 4814              	.LBE2149:
 4815              	.LBE2148:
 4816              	.LBB2150:
 4817              	.LBB2145:
 4818              	.LBB2146:
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\char_traits.h **** 
 4819              		.loc 4 243 0
 4820 01d0 0820C7E5 		strb	r2, [r7, #8]
 4821              	.LBE2146:
 4822              	.LBE2145:
 4823              	.LBE2150:
 4824              	.LBB2151:
 4825              	.LBB2152:
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4826              		.loc 3 128 0
 4827 01d4 003087E5 		str	r3, [r7]
 4828              	.LVL490:
 4829              	.LBE2152:
 4830              	.LBE2151:
 4831              	.LBB2153:
 4832              	.LBB2147:
 4833              	.LBB2144:
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4834              		.loc 3 132 0
 4835 01d8 042087E5 		str	r2, [r7, #4]
 4836              	.LVL491:
 4837              	.LBE2144:
 4838              	.LBE2147:
 4839              	.LBE2153:
 4840              	.LBE2157:
 4841              	.LBE2160:
 4842              	.LBE2164:
 4843              	.LBE2264:
 4844              	.LBB2265:
 4845              	.LBB2263:
 4846              	.LBB2262:
1084:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4847              		.loc 3 1084 0
 4848 01dc 44209DE5 		ldr	r2, [sp, #68]
 4849 01e0 40109DE5 		ldr	r1, [sp, #64]
 4850              	.LEHB4:
 4851 01e4 FEFFFFEB 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 4852              	.LVL492:
 4853              	.LEHE4:
 4854 01e8 40009DE5 		ldr	r0, [sp, #64]
 4855              	.LVL493:
 4856              	.LBE2262:
 4857              	.LBE2263:
 4858              	.LBE2265:
 4859              	.LBB2266:
 4860              	.LBB2267:
 4861              	.LBB2268:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4862              		.loc 3 180 0
 4863 01ec 060050E1 		cmp	r0, r6
 4864 01f0 0000000A 		beq	.L278
 4865              	.LVL494:
 4866              	.LBB2269:
 4867              	.LBB2270:
 4868              	.LBB2271:
 4869              	.LBB2272:
 4870              		.loc 7 110 0
 4871 01f4 FEFFFFEB 		bl	_ZdlPv
 4872              	.LVL495:
 4873              	.L278:
 4874 01f8 28009DE5 		ldr	r0, [sp, #40]
 4875              	.LVL496:
 4876              	.LBE2272:
 4877              	.LBE2271:
 4878              	.LBE2270:
 4879              	.LBE2269:
 4880              	.LBE2268:
 4881              	.LBE2267:
 4882              	.LBE2266:
 4883              	.LBB2273:
 4884              	.LBB2255:
 4885              	.LBB2254:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4886              		.loc 3 180 0
 4887 01fc 30308DE2 		add	r3, sp, #48
 4888 0200 030050E1 		cmp	r0, r3
 4889 0204 CDFFFF1A 		bne	.L299
 4890 0208 CDFFFFEA 		b	.L275
 4891              	.LVL497:
 4892              	.L303:
 4893              	.LBE2254:
 4894              	.LBE2255:
 4895              	.LBE2273:
 4896              	.LBB2274:
 4897              	.LBB2236:
 4898              	.LBB2227:
 4899              	.LBB2224:
 4900              	.LBB2217:
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4901              		.loc 3 160 0
 4902 020c 48309DE5 		ldr	r3, [sp, #72]
 4903 0210 0D0085E8 		stm	r5, {r0, r2, r3}
 4904              	.LVL498:
 4905              	.L271:
 4906              	.LBE2217:
 4907              	.LBE2224:
 4908              	.LBB2225:
 4909              	.LBB2226:
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 
 4910              		.loc 3 128 0
 4911 0214 40608DE5 		str	r6, [sp, #64]
 4912 0218 48608DE2 		add	r6, sp, #72
 4913 021c 0630A0E1 		mov	r3, r6
 4914 0220 BBFFFFEA 		b	.L272
 4915              	.LVL499:
 4916              	.L269:
 4917              	.LBE2226:
 4918              	.LBE2225:
 4919              	.LBE2227:
 4920              	.LBB2228:
 4921              	.LBB2229:
1196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	return *this;
 4922              		.loc 3 1196 0
 4923 0224 0500A0E1 		mov	r0, r5
 4924 0228 FEFFFFEB 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 4925              	.LVL500:
 4926 022c 40309DE5 		ldr	r3, [sp, #64]
 4927 0230 B7FFFFEA 		b	.L272
 4928              	.LVL501:
 4929              	.L306:
 4930              	.LBE2229:
 4931              	.LBE2228:
 4932              	.LBE2236:
 4933              	.LBE2274:
 4934              	.LBB2275:
 4935              	.LBB2165:
 4936              	.LBB2161:
 4937              	.LBB2158:
 4938              	.LBB2154:
 4939              	.LBB2155:
 4940              		.loc 4 290 0
 4941 0234 0310A0E1 		mov	r1, r3
 4942 0238 1020A0E3 		mov	r2, #16
 4943 023c 0600A0E1 		mov	r0, r6
 4944              	.LVL502:
 4945 0240 0C308DE5 		str	r3, [sp, #12]
 4946 0244 FEFFFFEB 		bl	memcpy
 4947              	.LVL503:
 4948 0248 0C309DE5 		ldr	r3, [sp, #12]
 4949 024c DBFFFFEA 		b	.L277
 4950              	.LVL504:
 4951              	.L302:
 4952              	.LBE2155:
 4953              	.LBE2154:
 4954              	.LBE2158:
 4955              	.LBE2161:
 4956              	.LBE2165:
 4957              	.LBE2275:
 4958              	.LBB2276:
 4959              	.LBB2207:
 4960              	.LBB2204:
 4961              	.LBB2202:
 4962              	.LBB2199:
 4963              	.LBB2200:
 4964 0250 0310A0E1 		mov	r1, r3
 4965 0254 1020A0E3 		mov	r2, #16
 4966 0258 0600A0E1 		mov	r0, r6
 4967              	.LVL505:
 4968 025c 0C308DE5 		str	r3, [sp, #12]
 4969 0260 FEFFFFEB 		bl	memcpy
 4970              	.LVL506:
 4971 0264 0C309DE5 		ldr	r3, [sp, #12]
 4972 0268 92FFFFEA 		b	.L268
 4973              	.LVL507:
 4974              	.L304:
 4975              	.LBE2200:
 4976              	.LBE2199:
 4977              	.LBE2202:
 4978              	.LBE2204:
 4979              	.LBE2207:
 4980              	.LBE2276:
 4981              	.LBE2309:
 4982              	.LBB2310:
 4983              	.LBB2307:
 4984              	.LBB2305:
 4985              	.LBB2303:
 4986              	.LBB2301:
 271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 4987              		.loc 3 271 0
 4988 026c 060173E3 		cmn	r3, #-2147483647
 4989 0270 0D00000A 		beq	.L307
 4990              	.LVL508:
 4991              	.L265:
 4992              	.LBE2301:
 4993              	.LBE2303:
1130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 4994              		.loc 3 1130 0
 4995 0274 001000E3 		movw	r1, #:lower16:.LC24
 4996 0278 0120A0E3 		mov	r2, #1
 4997 027c 001040E3 		movt	r1, #:upper16:.LC24
 4998 0280 0500A0E1 		mov	r0, r5
 4999              	.LEHB5:
 5000 0284 FEFFFFEB 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 5001              	.LVL509:
 5002              	.LEHE5:
 5003              	.LBE2305:
 5004              	.LBE2307:
 5005              	.LBE2310:
 422:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       str = "[" + std::to_string(shape->data[d]);
 423:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     else
 424:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       str += ", " + std::to_string(shape->data[d]);
 425:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 426:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   str += "]";
 427:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return str;
 428:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 5006              		.loc 5 428 0
 5007 0288 0500A0E1 		mov	r0, r5
 5008 028c 5CD08DE2 		add	sp, sp, #92
 5009              		.cfi_remember_state
 5010              		.cfi_def_cfa_offset 36
 5011              		@ sp needed
 5012 0290 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5013              	.LVL510:
 5014              	.L290:
 5015              		.cfi_restore_state
 5016              	.L284:
 5017 0294 000095E5 		ldr	r0, [r5]
 5018              	.LVL511:
 5019              	.LBB2311:
 5020              	.LBB2312:
 5021              	.LBB2313:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5022              		.loc 3 180 0
 5023 0298 08309DE5 		ldr	r3, [sp, #8]
 5024 029c 000053E1 		cmp	r3, r0
 5025 02a0 0000000A 		beq	.L289
 5026              	.LVL512:
 5027              	.LBB2314:
 5028              	.LBB2315:
 5029              	.LBB2316:
 5030              	.LBB2317:
 5031              		.loc 7 110 0
 5032 02a4 FEFFFFEB 		bl	_ZdlPv
 5033              	.LVL513:
 5034              	.L289:
 5035              	.LEHB6:
 5036 02a8 FEFFFFEB 		bl	__cxa_end_cleanup
 5037              	.LVL514:
 5038              	.LEHE6:
 5039              	.L307:
 5040              	.LBE2317:
 5041              	.LBE2316:
 5042              	.LBE2315:
 5043              	.LBE2314:
 5044              	.LBE2313:
 5045              	.LBE2312:
 5046              	.LBE2311:
 5047              	.LBB2318:
 5048              	.LBB2308:
 5049              	.LBB2306:
 5050              	.LBB2304:
 5051              	.LBB2302:
 272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h ****       }
 5052              		.loc 3 272 0
 5053 02ac 000000E3 		movw	r0, #:lower16:.LC23
 5054 02b0 000040E3 		movt	r0, #:upper16:.LC23
 5055              	.LEHB7:
 5056 02b4 FEFFFFEB 		bl	_ZSt20__throw_length_errorPKc
 5057              	.LVL515:
 5058              	.LEHE7:
 5059              	.L293:
 5060 02b8 40009DE5 		ldr	r0, [sp, #64]
 5061              	.LVL516:
 5062              	.LBE2302:
 5063              	.LBE2304:
 5064              	.LBE2306:
 5065              	.LBE2308:
 5066              	.LBE2318:
 5067              	.LBB2319:
 5068              	.LBB2277:
 5069              	.LBB2278:
 5070              	.LBB2279:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5071              		.loc 3 180 0
 5072 02bc 060050E1 		cmp	r0, r6
 5073 02c0 0000000A 		beq	.L287
 5074              	.LVL517:
 5075              	.LBB2280:
 5076              	.LBB2281:
 5077              	.LBB2282:
 5078              	.LBB2283:
 5079              		.loc 7 110 0
 5080 02c4 FEFFFFEB 		bl	_ZdlPv
 5081              	.LVL518:
 5082              	.L287:
 5083 02c8 28009DE5 		ldr	r0, [sp, #40]
 5084              	.LVL519:
 5085              	.LBE2283:
 5086              	.LBE2282:
 5087              	.LBE2281:
 5088              	.LBE2280:
 5089              	.LBE2279:
 5090              	.LBE2278:
 5091              	.LBE2277:
 5092              	.LBB2284:
 5093              	.LBB2285:
 5094              	.LBB2286:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5095              		.loc 3 180 0 discriminator 2
 5096 02cc 30308DE2 		add	r3, sp, #48
 5097 02d0 030050E1 		cmp	r0, r3
 5098 02d4 EEFFFF0A 		beq	.L284
 5099              	.LVL520:
 5100              	.L300:
 5101              	.LBB2287:
 5102              	.LBB2288:
 5103              	.LBB2289:
 5104              	.LBB2290:
 5105              		.loc 7 110 0
 5106 02d8 FEFFFFEB 		bl	_ZdlPv
 5107              	.LVL521:
 5108 02dc ECFFFFEA 		b	.L284
 5109              	.LVL522:
 5110              	.L292:
 5111 02e0 F8FFFFEA 		b	.L287
 5112              	.LVL523:
 5113              	.L291:
 5114 02e4 10009DE5 		ldr	r0, [sp, #16]
 5115              	.LVL524:
 5116              	.LBE2290:
 5117              	.LBE2289:
 5118              	.LBE2288:
 5119              	.LBE2287:
 5120              	.LBE2286:
 5121              	.LBE2285:
 5122              	.LBE2284:
 5123              	.LBB2291:
 5124              	.LBB2292:
 5125              	.LBB2293:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5126              		.loc 3 180 0
 5127 02e8 18308DE2 		add	r3, sp, #24
 5128 02ec 030050E1 		cmp	r0, r3
 5129 02f0 F8FFFF1A 		bne	.L300
 5130 02f4 E6FFFFEA 		b	.L284
 5131              	.LBE2293:
 5132              	.LBE2292:
 5133              	.LBE2291:
 5134              	.LBE2319:
 5135              		.cfi_endproc
 5136              	.LFE3291:
 5137              		.global	__gxx_personality_v0
 5138              		.personality	__gxx_personality_v0
 5139              		.handlerdata
 5140              	.LLSDA3291:
 5141 0008 FF       		.byte	0xff
 5142 0009 FF       		.byte	0xff
 5143 000a 01       		.byte	0x1
 5144 000b 2E       		.uleb128 .LLSDACSE3291-.LLSDACSB3291
 5145              	.LLSDACSB3291:
 5146 000c 6C       		.uleb128 .LEHB0-.LFB3291
 5147 000d 04       		.uleb128 .LEHE0-.LEHB0
 5148 000e 9405     		.uleb128 .L290-.LFB3291
 5149 0010 00       		.uleb128 0
 5150 0011 8C01     		.uleb128 .LEHB1-.LFB3291
 5151 0013 04       		.uleb128 .LEHE1-.LEHB1
 5152 0014 E405     		.uleb128 .L291-.LFB3291
 5153 0016 00       		.uleb128 0
 5154 0017 F802     		.uleb128 .LEHB2-.LFB3291
 5155 0019 04       		.uleb128 .LEHE2-.LEHB2
 5156 001a 9405     		.uleb128 .L290-.LFB3291
 5157 001c 00       		.uleb128 0
 5158 001d 9403     		.uleb128 .LEHB3-.LFB3291
 5159 001f 04       		.uleb128 .LEHE3-.LEHB3
 5160 0020 E005     		.uleb128 .L292-.LFB3291
 5161 0022 00       		.uleb128 0
 5162 0023 E403     		.uleb128 .LEHB4-.LFB3291
 5163 0025 04       		.uleb128 .LEHE4-.LEHB4
 5164 0026 B805     		.uleb128 .L293-.LFB3291
 5165 0028 00       		.uleb128 0
 5166 0029 8405     		.uleb128 .LEHB5-.LFB3291
 5167 002b 04       		.uleb128 .LEHE5-.LEHB5
 5168 002c 9405     		.uleb128 .L290-.LFB3291
 5169 002e 00       		.uleb128 0
 5170 002f A805     		.uleb128 .LEHB6-.LFB3291
 5171 0031 04       		.uleb128 .LEHE6-.LEHB6
 5172 0032 00       		.uleb128 0
 5173 0033 00       		.uleb128 0
 5174 0034 B405     		.uleb128 .LEHB7-.LFB3291
 5175 0036 04       		.uleb128 .LEHE7-.LEHB7
 5176 0037 9405     		.uleb128 .L290-.LFB3291
 5177 0039 00       		.uleb128 0
 5178              	.LLSDACSE3291:
 5179              		.section	.text._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray
 5180              		.fnend
 5182              		.section	.text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLit
 5183              		.align	2
 5184              		.global	_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArr
 5185              		.syntax unified
 5186              		.arm
 5187              		.fpu neon
 5189              	_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray:
 5190              		.fnstart
 5191              	.LFB3295:
 429:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 430:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus CalculateShapeForBroadcast(TfLiteContext* context,
 431:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                         const TfLiteTensor* input1,
 432:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                         const TfLiteTensor* input2,
 433:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                         TfLiteIntArray** output_shape) {
 5192              		.loc 5 433 0
 5193              		.cfi_startproc
 5194              		.cfi_personality 0,__gxx_personality_v0
 5195              		.cfi_lsda 0,.LLSDA3295
 5196              		@ args = 0, pretend = 0, frame = 80
 5197              		@ frame_needed = 0, uses_anonymous_args = 0
 5198              	.LVL525:
 5199 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5200              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5201              		.cfi_def_cfa_offset 36
 5202              		.cfi_offset 4, -36
 5203              		.cfi_offset 5, -32
 5204              		.cfi_offset 6, -28
 5205              		.cfi_offset 7, -24
 5206              		.cfi_offset 8, -20
 5207              		.cfi_offset 9, -16
 5208              		.cfi_offset 10, -12
 5209              		.cfi_offset 11, -8
 5210              		.cfi_offset 14, -4
 5211              		.pad #84
 5212 0004 54D04DE2 		sub	sp, sp, #84
 5213              		.cfi_def_cfa_offset 120
 5214              		.loc 5 433 0
 5215 0008 18108DE5 		str	r1, [sp, #24]
 5216 000c 081091E5 		ldr	r1, [r1, #8]
 5217              	.LVL526:
 5218 0010 14308DE5 		str	r3, [sp, #20]
 5219 0014 1C008DE5 		str	r0, [sp, #28]
 5220              	.LBB2320:
 5221              	.LBB2321:
 5222              		.file 8 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #ifndef TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #define TENSORFLOW_LITE_KERNELS_KERNEL_UTIL_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include <stdint.h>
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include <limits>
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/builtin_op_data.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #include "tensorflow/lite/c/common.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** namespace tflite {
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // A fair number of functions in this header have historically been inline.
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // It is ok to change functions to not be inline if the latency with
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // benchmark_model for MobileNet + MobileBERT is unaffected. If such a change is
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // made, move the newly non-inlined function declarations to the top of this
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // header file.
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetInput(context, node, kMyTensorIdx);
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetInput(const TfLiteContext* context,
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                              const TfLiteNode* node, int index);
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetInput` but returns boolean and uses output argument for tensor.
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetInputSafe(context, node, kMyTensorIdx, &my_tensor));
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetInputSafe(const TfLiteContext* context, const TfLiteNode* node,
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                           int index, const TfLiteTensor** tensor);
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetVariableInput(context, node, kMyTensorIdx);
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                int index);
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOutput(context, node, kMyTensorIdx);
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                         int index);
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetOutput` but returns boolean and uses output argument for tensor.
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetOutputSafe(context, node, kMyTensorIdx, &my_tensor));
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetOutputSafe(const TfLiteContext* context, const TfLiteNode* node,
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                            int index, TfLiteTensor** tensor);
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetOptionalInputTensor(context, node, kIdx);
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Deprecated. GetInput has the same functionality.
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                            const TfLiteNode* node, int index);
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetTemporary(context, node, kMyTensorIdx);
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteTensor* GetTemporary(TfLiteContext* context, const TfLiteNode* node,
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                            int index);
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetTemporary` but returns boolean and uses output argument for
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetTemporarySafe(context, node, kMyTensorIdx,
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetTemporarySafe(const TfLiteContext* context,
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                               const TfLiteNode* node, int index,
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                               TfLiteTensor** tensor);
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Note: You must check if result is not null:
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor = GetIntermediates(context, node, kMyTensorIdx);
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE(context, my_tensor != nullptr);
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // This is because the index might point to the optional tensor constant
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // (kTfLiteOptionalTensor) in which case there is no tensor to return.
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** const TfLiteTensor* GetIntermediates(TfLiteContext* context,
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                      const TfLiteNode* node, int index);
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Same as `GetIntermediates` but returns boolean and uses output argument for
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // tensor.
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TfLiteTensor* my_tensor;
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   TF_LITE_ENSURE_OK(context,
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     GetIntermediatesSafe(context, node, kMyTensorIdx,
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //                     &my_tensor));
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //   // can use my_tensor directly from here onwards, it is not nullptr
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** //
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** // Should be used in cases where the binary size is too large.
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** TfLiteStatus GetIntermediatesSafe(const TfLiteContext* context,
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                   const TfLiteNode* node, int index,
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****                                   TfLiteTensor** tensor);
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumDimensions(const TfLiteTensor* t) { return t->dims->size; }
 5223              		.loc 8 147 0
 5224 0018 003091E5 		ldr	r3, [r1]
 5225              	.LVL527:
 5226 001c 10108DE5 		str	r1, [sp, #16]
 5227              	.LVL528:
 5228              	.LBE2321:
 5229              	.LBE2320:
 5230              		.loc 5 433 0
 5231 0020 0C208DE5 		str	r2, [sp, #12]
 5232              	.LBB2323:
 5233              	.LBB2324:
 5234              	.LBB2325:
 5235              	.LBB2326:
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****   return t->dims->data[dim];
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumInputs(const TfLiteNode* node) { return node->inputs->size; }
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumOutputs(const TfLiteNode* node) { return node->outputs->size; }
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #ifndef TF_LITE_STATIC_MEMORY
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int NumIntermediates(const TfLiteNode* node) {
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****   return node->intermediates->size;
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** #endif  // TF_LITE_STATIC_MEMORY
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** 
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int64_t NumElements(const TfLiteIntArray* dims) {
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****   int64_t count = 1;
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****   for (int i = 0; i < dims->size; ++i) {
 5236              		.loc 8 163 0
 5237 0024 000053E3 		cmp	r3, #0
 5238              	.LBE2326:
 5239              	.LBE2325:
 5240              	.LBE2324:
 5241              	.LBE2323:
 5242              	.LBB2333:
 5243              	.LBB2322:
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 5244              		.loc 8 147 0
 5245 0028 08308DE5 		str	r3, [sp, #8]
 5246              	.LVL529:
 5247              	.LBE2322:
 5248              	.LBE2333:
 5249              	.LBB2334:
 5250              	.LBB2331:
 5251              	.LBB2329:
 5252              	.LBB2327:
 5253              		.loc 8 163 0
 5254 002c 510000DA 		ble	.L309
 5255 0030 080053E3 		cmp	r3, #8
 5256 0034 140100DA 		ble	.L338
 5257 0038 093043E2 		sub	r3, r3, #9
 5258              	.LVL530:
 5259 003c 0080A0E3 		mov	r8, #0
 5260 0040 A4E081E2 		add	lr, r1, #164
 5261 0044 0730C3E3 		bic	r3, r3, #7
 5262 0048 0100A0E3 		mov	r0, #1
 5263              	.LVL531:
 5264 004c 0010A0E3 		mov	r1, #0
 5265              	.LVL532:
 5266 0050 08C0A0E1 		mov	ip, r8
 5267 0054 083083E2 		add	r3, r3, #8
 5268 0058 04308DE5 		str	r3, [sp, #4]
 5269              	.LVL533:
 5270              	.L311:
 164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 5271              		.loc 8 164 0
 5272 005c A0801EE5 		ldr	r8, [lr, #-160]
 5273 0060 08C08CE2 		add	ip, ip, #8
 5274 0064 04309DE5 		ldr	r3, [sp, #4]
 5275 0068 9C601EE5 		ldr	r6, [lr, #-156]
 5276 006c 98401EE5 		ldr	r4, [lr, #-152]
 5277 0070 03005CE1 		cmp	ip, r3
 5278 0074 980103E0 		mul	r3, r8, r1
 5279 0078 C8BFA0E1 		asr	fp, r8, #31
 5280 007c 94501EE5 		ldr	r5, [lr, #-148]
 5281 0080 988089E0 		umull	r8, r9, r8, r0
 5282 0084 8C201EE5 		ldr	r2, [lr, #-140]
 5283 0088 00F0DEF5 		pld	[lr]
 5284 008c 20E08EE2 		add	lr, lr, #32
 5285 0090 903B23E0 		mla	r3, r0, fp, r3
 5286 0094 C6BFA0E1 		asr	fp, r6, #31
 5287 0098 960881E0 		umull	r0, r1, r6, r8
 5288              	.LVL534:
 5289 009c 099083E0 		add	r9, r3, r9
 5290              	.LVL535:
 5291 00a0 B0301EE5 		ldr	r3, [lr, #-176]
 5292 00a4 960907E0 		mul	r7, r6, r9
 5293 00a8 C49FA0E1 		asr	r9, r4, #31
 5294 00ac 987B27E0 		mla	r7, r8, fp, r7
 5295 00b0 011087E0 		add	r1, r7, r1
 5296              	.LVL536:
 5297 00b4 946087E0 		umull	r6, r7, r4, r0
 5298 00b8 94010AE0 		mul	r10, r4, r1
 5299 00bc A8101EE5 		ldr	r1, [lr, #-168]
 5300 00c0 90A92AE0 		mla	r10, r0, r9, r10
 5301 00c4 A4001EE5 		ldr	r0, [lr, #-164]
 5302              	.LVL537:
 5303 00c8 C59FA0E1 		asr	r9, r5, #31
 5304 00cc 07708AE0 		add	r7, r10, r7
 5305              	.LVL538:
 5306 00d0 950708E0 		mul	r8, r5, r7
 5307 00d4 C37FA0E1 		asr	r7, r3, #31
 5308 00d8 954685E0 		umull	r4, r5, r5, r6
 5309 00dc 968928E0 		mla	r8, r6, r9, r8
 5310 00e0 C29FA0E1 		asr	r9, r2, #31
 5311 00e4 055088E0 		add	r5, r8, r5
 5312              	.LVL539:
 5313 00e8 93050AE0 		mul	r10, r3, r5
 5314 00ec 94A72AE0 		mla	r10, r4, r7, r10
 5315 00f0 934485E0 		umull	r4, r5, r3, r4
 5316              	.LVL540:
 5317 00f4 C17FA0E1 		asr	r7, r1, #31
 5318 00f8 05508AE0 		add	r5, r10, r5
 5319              	.LVL541:
 5320 00fc 920506E0 		mul	r6, r2, r5
 5321 0100 C05FA0E1 		asr	r5, r0, #31
 5322 0104 922483E0 		umull	r2, r3, r2, r4
 5323 0108 946926E0 		mla	r6, r4, r9, r6
 5324 010c 033086E0 		add	r3, r6, r3
 5325              	.LVL542:
 5326 0110 910304E0 		mul	r4, r1, r3
 5327 0114 924724E0 		mla	r4, r2, r7, r4
 5328 0118 912283E0 		umull	r2, r3, r1, r2
 5329              	.LVL543:
 5330 011c 033084E0 		add	r3, r4, r3
 5331              	.LVL544:
 5332 0120 900303E0 		mul	r3, r0, r3
 5333 0124 900281E0 		umull	r0, r1, r0, r2
 5334 0128 923522E0 		mla	r2, r2, r5, r3
 5335              	.LVL545:
 5336 012c 011082E0 		add	r1, r2, r1
 5337              	.LVL546:
 5338 0130 C9FFFF1A 		bne	.L311
 5339 0134 0C80A0E1 		mov	r8, ip
 5340 0138 08C09DE5 		ldr	ip, [sp, #8]
 5341              	.LVL547:
 5342              	.L310:
 5343 013c 10309DE5 		ldr	r3, [sp, #16]
 5344 0140 018088E2 		add	r8, r8, #1
 5345 0144 08E183E0 		add	lr, r3, r8, lsl #2
 5346 0148 000000EA 		b	.L312
 5347              	.LVL548:
 5348              	.L363:
 5349 014c 018088E2 		add	r8, r8, #1
 5350              	.LVL549:
 5351              	.L312:
 5352 0150 04209EE4 		ldr	r2, [lr], #4
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 5353              		.loc 8 163 0
 5354 0154 08005CE1 		cmp	ip, r8
 5355              		.loc 8 164 0
 5356 0158 C25FA0E1 		asr	r5, r2, #31
 5357 015c 900503E0 		mul	r3, r0, r5
 5358 0160 923123E0 		mla	r3, r2, r1, r3
 5359 0164 900281E0 		umull	r0, r1, r0, r2
 5360              	.LVL550:
 5361 0168 011083E0 		add	r1, r3, r1
 5362              	.LVL551:
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 5363              		.loc 8 163 0
 5364 016c F6FFFFCA 		bgt	.L363
 5365              	.LVL552:
 5366              	.LBE2327:
 5367              	.LBE2329:
 5368              	.LBE2331:
 5369              	.LBE2334:
 434:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int dims1 = NumDimensions(input1);
 435:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int dims2 = NumDimensions(input2);
 436:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int out_dims = std::max(dims1, dims2);
 437:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (NumElements(input1) == 0) {
 5370              		.loc 5 437 0
 5371 0170 013090E1 		orrs	r3, r0, r1
 5372 0174 9900000A 		beq	.L313
 5373              	.L309:
 5374 0178 0C309DE5 		ldr	r3, [sp, #12]
 5375 017c 083093E5 		ldr	r3, [r3, #8]
 5376              	.LBB2335:
 5377              	.LBB2336:
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 5378              		.loc 8 147 0
 5379 0180 008093E5 		ldr	r8, [r3]
 5380              	.LVL553:
 5381 0184 04308DE5 		str	r3, [sp, #4]
 5382              	.LBE2336:
 5383              	.LBE2335:
 5384              	.LBB2337:
 5385              	.LBB2338:
 5386              	.LBB2339:
 5387              	.LBB2340:
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 5388              		.loc 8 163 0
 5389 0188 000058E3 		cmp	r8, #0
 5390 018c 520000DA 		ble	.L314
 5391 0190 080058E3 		cmp	r8, #8
 5392 0194 C10000DA 		ble	.L339
 5393 0198 0320A0E1 		mov	r2, r3
 5394 019c 093048E2 		sub	r3, r8, #9
 5395 01a0 0730C3E3 		bic	r3, r3, #7
 5396 01a4 A4E082E2 		add	lr, r2, #164
 5397 01a8 083083E2 		add	r3, r3, #8
 5398 01ac 0020A0E3 		mov	r2, #0
 5399 01b0 0100A0E3 		mov	r0, #1
 5400 01b4 0010A0E3 		mov	r1, #0
 5401 01b8 08B0A0E1 		mov	fp, r8
 5402 01bc 02C0A0E1 		mov	ip, r2
 5403 01c0 03A0A0E1 		mov	r10, r3
 5404              	.LVL554:
 5405              	.L318:
 5406              		.loc 8 164 0
 5407 01c4 A0201EE5 		ldr	r2, [lr, #-160]
 5408 01c8 08C08CE2 		add	ip, ip, #8
 5409 01cc 9C901EE5 		ldr	r9, [lr, #-156]
 5410 01d0 0A005CE1 		cmp	ip, r10
 5411 01d4 98501EE5 		ldr	r5, [lr, #-152]
 5412 01d8 94401EE5 		ldr	r4, [lr, #-148]
 5413 01dc 920101E0 		mul	r1, r2, r1
 5414 01e0 C27FA0E1 		asr	r7, r2, #31
 5415 01e4 90801EE5 		ldr	r8, [lr, #-144]
 5416 01e8 922083E0 		umull	r2, r3, r2, r0
 5417 01ec 00F0DEF5 		pld	[lr]
 5418 01f0 20E08EE2 		add	lr, lr, #32
 5419 01f4 901721E0 		mla	r1, r0, r7, r1
 5420 01f8 C97FA0E1 		asr	r7, r9, #31
 5421 01fc 033081E0 		add	r3, r1, r3
 5422              	.LVL555:
 5423 0200 990281E0 		umull	r0, r1, r9, r2
 5424 0204 990306E0 		mul	r6, r9, r3
 5425 0208 C53FA0E1 		asr	r3, r5, #31
 5426 020c 926726E0 		mla	r6, r2, r7, r6
 5427 0210 AC201EE5 		ldr	r2, [lr, #-172]
 5428              	.LVL556:
 5429 0214 C47FA0E1 		asr	r7, r4, #31
 5430 0218 011086E0 		add	r1, r6, r1
 5431              	.LVL557:
 5432 021c 950109E0 		mul	r9, r5, r1
 5433 0220 909329E0 		mla	r9, r0, r3, r9
 5434 0224 A8301EE5 		ldr	r3, [lr, #-168]
 5435 0228 950081E0 		umull	r0, r1, r5, r0
 5436              	.LVL558:
 5437 022c 011089E0 		add	r1, r9, r1
 5438              	.LVL559:
 5439 0230 C39FA0E1 		asr	r9, r3, #31
 5440 0234 940106E0 		mul	r6, r4, r1
 5441 0238 C81FA0E1 		asr	r1, r8, #31
 5442 023c 944085E0 		umull	r4, r5, r4, r0
 5443 0240 906726E0 		mla	r6, r0, r7, r6
 5444 0244 A4001EE5 		ldr	r0, [lr, #-164]
 5445              	.LVL560:
 5446 0248 C27FA0E1 		asr	r7, r2, #31
 5447 024c 055086E0 		add	r5, r6, r5
 5448              	.LVL561:
 5449 0250 980505E0 		mul	r5, r8, r5
 5450 0254 945121E0 		mla	r1, r4, r1, r5
 5451 0258 984485E0 		umull	r4, r5, r8, r4
 5452              	.LVL562:
 5453 025c 055081E0 		add	r5, r1, r5
 5454              	.LVL563:
 5455 0260 920501E0 		mul	r1, r2, r5
 5456 0264 941721E0 		mla	r1, r4, r7, r1
 5457 0268 924485E0 		umull	r4, r5, r2, r4
 5458              	.LVL564:
 5459 026c C07FA0E1 		asr	r7, r0, #31
 5460 0270 055081E0 		add	r5, r1, r5
 5461              	.LVL565:
 5462 0274 930502E0 		mul	r2, r3, r5
 5463 0278 942922E0 		mla	r2, r4, r9, r2
 5464 027c 934485E0 		umull	r4, r5, r3, r4
 5465              	.LVL566:
 5466 0280 055082E0 		add	r5, r2, r5
 5467              	.LVL567:
 5468 0284 900503E0 		mul	r3, r0, r5
 5469 0288 900481E0 		umull	r0, r1, r0, r4
 5470 028c 943724E0 		mla	r4, r4, r7, r3
 5471              	.LVL568:
 5472 0290 011084E0 		add	r1, r4, r1
 5473              	.LVL569:
 5474 0294 CAFFFF1A 		bne	.L318
 5475 0298 0B80A0E1 		mov	r8, fp
 5476 029c 0C30A0E1 		mov	r3, ip
 5477              	.LVL570:
 5478              	.L317:
 5479 02a0 01E083E2 		add	lr, r3, #1
 5480 02a4 04309DE5 		ldr	r3, [sp, #4]
 5481 02a8 0E4183E0 		add	r4, r3, lr, lsl #2
 5482 02ac 000000EA 		b	.L319
 5483              	.LVL571:
 5484              	.L364:
 5485 02b0 01E08EE2 		add	lr, lr, #1
 5486              	.LVL572:
 5487              	.L319:
 5488 02b4 042094E4 		ldr	r2, [r4], #4
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 5489              		.loc 8 163 0
 5490 02b8 0E0058E1 		cmp	r8, lr
 5491              		.loc 8 164 0
 5492 02bc C27FA0E1 		asr	r7, r2, #31
 5493 02c0 900703E0 		mul	r3, r0, r7
 5494 02c4 923123E0 		mla	r3, r2, r1, r3
 5495 02c8 900281E0 		umull	r0, r1, r0, r2
 5496              	.LVL573:
 5497 02cc 011083E0 		add	r1, r3, r1
 5498              	.LVL574:
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 5499              		.loc 8 163 0
 5500 02d0 F6FFFFCA 		bgt	.L364
 5501              	.LVL575:
 5502              	.LBE2340:
 5503              	.LBE2339:
 5504              	.LBE2338:
 5505              	.LBE2337:
 438:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *output_shape = TfLiteIntArrayCopy(input1->dims);
 439:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return kTfLiteOk;
 440:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 441:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   if (NumElements(input2) == 0) {
 5506              		.loc 5 441 0
 5507 02d4 013090E1 		orrs	r3, r0, r1
 5508 02d8 3200000A 		beq	.L365
 5509              	.L314:
 5510 02dc 08309DE5 		ldr	r3, [sp, #8]
 5511 02e0 030058E1 		cmp	r8, r3
 5512 02e4 0850A0A1 		movge	r5, r8
 5513 02e8 0350A0B1 		movlt	r5, r3
 442:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     *output_shape = TfLiteIntArrayCopy(input2->dims);
 443:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return kTfLiteOk;
 444:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 445:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   std::unique_ptr<TfLiteIntArray, void (*)(TfLiteIntArray*)> shape(
 446:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TfLiteIntArrayCreate(out_dims), TfLiteIntArrayFree);
 5514              		.loc 5 446 0
 5515 02ec 0500A0E1 		mov	r0, r5
 5516              	.LEHB8:
 5517 02f0 FEFFFFEB 		bl	TfLiteIntArrayCreate
 5518              	.LVL576:
 5519              	.LBB2344:
 447:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   for (int i = 0; i < out_dims; ++i) {
 5520              		.loc 5 447 0
 5521 02f4 000055E3 		cmp	r5, #0
 5522              	.LBE2344:
 446:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   for (int i = 0; i < out_dims; ++i) {
 5523              		.loc 5 446 0
 5524 02f8 0040A0E1 		mov	r4, r0
 5525              	.LVL577:
 5526              	.LBB2393:
 5527              		.loc 5 447 0
 5528 02fc 310000DA 		ble	.L329
 5529              	.LBB2345:
 5530              	.LBB2346:
 5531              	.LBB2347:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 5532              		.loc 8 149 0
 5533 0300 08109DE5 		ldr	r1, [sp, #8]
 5534 0304 012045E2 		sub	r2, r5, #1
 5535              	.LBE2347:
 5536              	.LBE2346:
 5537              	.LBE2345:
 5538              		.loc 5 447 0
 5539 0308 0030A0E3 		mov	r3, #0
 5540              	.LBB2386:
 5541              	.LBB2351:
 5542              	.LBB2352:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 5543              		.loc 8 149 0
 5544 030c 056048E0 		sub	r6, r8, r5
 5545              	.LBE2352:
 5546              	.LBE2351:
 5547              	.LBB2354:
 5548              	.LBB2348:
 5549 0310 18709DE5 		ldr	r7, [sp, #24]
 5550 0314 05E041E0 		sub	lr, r1, r5
 5551 0318 01C0A0E1 		mov	ip, r1
 5552 031c 0C909DE5 		ldr	r9, [sp, #12]
 5553 0320 130000EA 		b	.L330
 5554              	.LVL578:
 5555              	.L367:
 5556              	.LBE2348:
 5557              	.LBE2354:
 448:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d1 = i >= dims1 ? 1 : SizeOfDimension(input1, dims1 - i - 1);
 449:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d2 = i >= dims2 ? 1 : SizeOfDimension(input2, dims2 - i - 1);
 5558              		.loc 5 449 0
 5559 0324 080053E1 		cmp	r3, r8
 5560 0328 1C0000AA 		bge	.L361
 448:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d1 = i >= dims1 ? 1 : SizeOfDimension(input1, dims1 - i - 1);
 5561              		.loc 5 448 0
 5562 032c 0100A0E3 		mov	r0, #1
 5563              	.LVL579:
 5564              	.L322:
 5565              	.LBB2355:
 5566              	.LBB2353:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 5567              		.loc 8 149 0 discriminator 1
 5568 0330 081099E5 		ldr	r1, [r9, #8]
 5569 0334 02A086E0 		add	r10, r6, r2
 5570 0338 0A1181E0 		add	r1, r1, r10, lsl #2
 5571 033c 041091E5 		ldr	r1, [r1, #4]
 5572              	.LVL580:
 5573              	.LBE2353:
 5574              	.LBE2355:
 450:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (!(d1 == d2 || d1 == 1 || d2 == 1)) {
 5575              		.loc 5 450 0 discriminator 1
 5576 0340 000051E1 		cmp	r1, r0
 5577 0344 0400000A 		beq	.L337
 5578              		.loc 5 450 0 is_stmt 0 discriminator 2
 5579 0348 010050E3 		cmp	r0, #1
 5580 034c 01005113 		cmpne	r1, #1
 5581 0350 2A00001A 		bne	.L366
 5582              	.LVL581:
 5583              	.L325:
 5584 0354 000051E1 		cmp	r1, r0
 5585 0358 0010A0B1 		movlt	r1, r0
 5586              	.LVL582:
 5587              	.L337:
 5588              	.LBE2386:
 447:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d1 = i >= dims1 ? 1 : SizeOfDimension(input1, dims1 - i - 1);
 5589              		.loc 5 447 0 is_stmt 1
 5590 035c 013083E2 		add	r3, r3, #1
 5591              	.LVL583:
 5592              	.LBB2387:
 451:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context->ReportError(context,
 452:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                            "Given shapes, %s and %s, are not broadcastable.",
 453:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                            GetShapeDebugString(input1->dims).c_str(),
 454:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                            GetShapeDebugString(input2->dims).c_str());
 455:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return kTfLiteError;
 456:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     }
 457:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     shape->data[out_dims - i - 1] = std::max(d1, d2);
 5593              		.loc 5 457 0
 5594 0360 020184E0 		add	r0, r4, r2, lsl #2
 5595              	.LBE2387:
 447:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d1 = i >= dims1 ? 1 : SizeOfDimension(input1, dims1 - i - 1);
 5596              		.loc 5 447 0
 5597 0364 050053E1 		cmp	r3, r5
 5598              	.LBB2388:
 5599              		.loc 5 457 0
 5600 0368 041080E5 		str	r1, [r0, #4]
 5601              	.LVL584:
 5602 036c 012042E2 		sub	r2, r2, #1
 5603              	.LBE2388:
 447:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d1 = i >= dims1 ? 1 : SizeOfDimension(input1, dims1 - i - 1);
 5604              		.loc 5 447 0
 5605 0370 1400000A 		beq	.L329
 5606              	.LVL585:
 5607              	.L330:
 5608              	.LBB2389:
 448:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d2 = i >= dims2 ? 1 : SizeOfDimension(input2, dims2 - i - 1);
 5609              		.loc 5 448 0
 5610 0374 0C0053E1 		cmp	r3, ip
 5611 0378 E9FFFFAA 		bge	.L367
 5612              	.LVL586:
 5613              	.LBB2356:
 5614              	.LBB2349:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 5615              		.loc 8 149 0 discriminator 1
 5616 037c 080097E5 		ldr	r0, [r7, #8]
 5617 0380 02108EE0 		add	r1, lr, r2
 5618              	.LBE2349:
 5619              	.LBE2356:
 449:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (!(d1 == d2 || d1 == 1 || d2 == 1)) {
 5620              		.loc 5 449 0 discriminator 1
 5621 0384 080053E1 		cmp	r3, r8
 5622              	.LBB2357:
 5623              	.LBB2350:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 5624              		.loc 8 149 0 discriminator 1
 5625 0388 011180E0 		add	r1, r0, r1, lsl #2
 5626 038c 040091E5 		ldr	r0, [r1, #4]
 5627              	.LVL587:
 5628              	.LBE2350:
 5629              	.LBE2357:
 449:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (!(d1 == d2 || d1 == 1 || d2 == 1)) {
 5630              		.loc 5 449 0 discriminator 1
 5631 0390 E6FFFFBA 		blt	.L322
 5632              	.LVL588:
 450:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context->ReportError(context,
 5633              		.loc 5 450 0
 5634 0394 010050E3 		cmp	r0, #1
 449:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (!(d1 == d2 || d1 == 1 || d2 == 1)) {
 5635              		.loc 5 449 0
 5636 0398 0110A013 		movne	r1, #1
 450:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context->ReportError(context,
 5637              		.loc 5 450 0
 5638 039c ECFFFF1A 		bne	.L325
 5639              	.LVL589:
 5640              	.L361:
 449:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (!(d1 == d2 || d1 == 1 || d2 == 1)) {
 5641              		.loc 5 449 0
 5642 03a0 0110A0E3 		mov	r1, #1
 5643 03a4 ECFFFFEA 		b	.L337
 5644              	.LVL590:
 5645              	.L365:
 5646              	.LBE2389:
 5647              	.LBE2393:
 442:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return kTfLiteOk;
 5648              		.loc 5 442 0
 5649 03a8 04009DE5 		ldr	r0, [sp, #4]
 5650 03ac FEFFFFEB 		bl	TfLiteIntArrayCopy
 5651              	.LVL591:
 5652 03b0 14209DE5 		ldr	r2, [sp, #20]
 443:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 5653              		.loc 5 443 0
 5654 03b4 0030A0E3 		mov	r3, #0
 442:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return kTfLiteOk;
 5655              		.loc 5 442 0
 5656 03b8 000082E5 		str	r0, [r2]
 458:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 459:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *output_shape = shape.release();
 460:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 461:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 5657              		.loc 5 461 0
 5658 03bc 0300A0E1 		mov	r0, r3
 5659 03c0 54D08DE2 		add	sp, sp, #84
 5660              		.cfi_remember_state
 5661              		.cfi_def_cfa_offset 36
 5662              		@ sp needed
 5663 03c4 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5664              	.LVL592:
 5665              	.L329:
 5666              		.cfi_restore_state
 459:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 5667              		.loc 5 459 0
 5668 03c8 14309DE5 		ldr	r3, [sp, #20]
 5669 03cc 004083E5 		str	r4, [r3]
 5670              	.LVL593:
 460:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 5671              		.loc 5 460 0
 5672 03d0 0030A0E3 		mov	r3, #0
 5673              		.loc 5 461 0
 5674 03d4 0300A0E1 		mov	r0, r3
 5675 03d8 54D08DE2 		add	sp, sp, #84
 5676              		.cfi_remember_state
 5677              		.cfi_def_cfa_offset 36
 5678              		@ sp needed
 5679 03dc F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5680              	.LVL594:
 5681              	.L313:
 5682              		.cfi_restore_state
 438:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return kTfLiteOk;
 5683              		.loc 5 438 0
 5684 03e0 10009DE5 		ldr	r0, [sp, #16]
 5685 03e4 FEFFFFEB 		bl	TfLiteIntArrayCopy
 5686              	.LVL595:
 5687              	.LEHE8:
 5688 03e8 14209DE5 		ldr	r2, [sp, #20]
 439:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 5689              		.loc 5 439 0
 5690 03ec 0030A0E3 		mov	r3, #0
 438:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     return kTfLiteOk;
 5691              		.loc 5 438 0
 5692 03f0 000082E5 		str	r0, [r2]
 5693              		.loc 5 461 0
 5694 03f4 0300A0E1 		mov	r0, r3
 5695 03f8 54D08DE2 		add	sp, sp, #84
 5696              		.cfi_remember_state
 5697              		.cfi_def_cfa_offset 36
 5698              		@ sp needed
 5699 03fc F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5700              	.LVL596:
 5701              	.L366:
 5702              		.cfi_restore_state
 5703              	.LBB2394:
 5704              	.LBB2390:
 453:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                            GetShapeDebugString(input2->dims).c_str());
 5705              		.loc 5 453 0
 5706 0400 18309DE5 		ldr	r3, [sp, #24]
 5707              	.LVL597:
 5708 0404 20008DE2 		add	r0, sp, #32
 451:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                            "Given shapes, %s and %s, are not broadcastable.",
 5709              		.loc 5 451 0
 5710 0408 1C709DE5 		ldr	r7, [sp, #28]
 453:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                            GetShapeDebugString(input2->dims).c_str());
 5711              		.loc 5 453 0
 5712 040c 081093E5 		ldr	r1, [r3, #8]
 5713              	.LVL598:
 451:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                            "Given shapes, %s and %s, are not broadcastable.",
 5714              		.loc 5 451 0
 5715 0410 145097E5 		ldr	r5, [r7, #20]
 5716              	.LEHB9:
 453:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                            GetShapeDebugString(input2->dims).c_str());
 5717              		.loc 5 453 0
 5718 0414 FEFFFFEB 		bl	_ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray
 5719              	.LVL599:
 5720              	.LEHE9:
 454:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return kTfLiteError;
 5721              		.loc 5 454 0
 5722 0418 0C309DE5 		ldr	r3, [sp, #12]
 5723 041c 38008DE2 		add	r0, sp, #56
 5724 0420 20609DE5 		ldr	r6, [sp, #32]
 5725              	.LVL600:
 5726 0424 081093E5 		ldr	r1, [r3, #8]
 5727              	.LEHB10:
 5728 0428 FEFFFFEB 		bl	_ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray
 5729              	.LVL601:
 5730              	.LEHE10:
 5731 042c 001000E3 		movw	r1, #:lower16:.LC25
 5732 0430 0620A0E1 		mov	r2, r6
 5733 0434 0700A0E1 		mov	r0, r7
 5734 0438 001040E3 		movt	r1, #:upper16:.LC25
 5735 043c 38309DE5 		ldr	r3, [sp, #56]
 5736              	.LEHB11:
 5737 0440 35FF2FE1 		blx	r5
 5738              	.LVL602:
 5739              	.LEHE11:
 5740 0444 38009DE5 		ldr	r0, [sp, #56]
 5741              	.LVL603:
 5742              	.LBB2358:
 5743              	.LBB2359:
 5744              	.LBB2360:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5745              		.loc 3 180 0
 5746 0448 40308DE2 		add	r3, sp, #64
 5747 044c 030050E1 		cmp	r0, r3
 5748 0450 0000000A 		beq	.L326
 5749              	.LVL604:
 5750              	.LBB2361:
 5751              	.LBB2362:
 5752              	.LBB2363:
 5753              	.LBB2364:
 5754              		.loc 7 110 0
 5755 0454 FEFFFFEB 		bl	_ZdlPv
 5756              	.LVL605:
 5757              	.L326:
 5758 0458 20009DE5 		ldr	r0, [sp, #32]
 5759              	.LVL606:
 5760              	.LBE2364:
 5761              	.LBE2363:
 5762              	.LBE2362:
 5763              	.LBE2361:
 5764              	.LBE2360:
 5765              	.LBE2359:
 5766              	.LBE2358:
 5767              	.LBB2365:
 5768              	.LBB2366:
 5769              	.LBB2367:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5770              		.loc 3 180 0
 5771 045c 28308DE2 		add	r3, sp, #40
 5772 0460 030050E1 		cmp	r0, r3
 5773 0464 0000000A 		beq	.L327
 5774              	.LVL607:
 5775              	.LBB2368:
 5776              	.LBB2369:
 5777              	.LBB2370:
 5778              	.LBB2371:
 5779              		.loc 7 110 0
 5780 0468 FEFFFFEB 		bl	_ZdlPv
 5781              	.LVL608:
 5782              	.L327:
 5783              	.LBE2371:
 5784              	.LBE2370:
 5785              	.LBE2369:
 5786              	.LBE2368:
 5787              	.LBE2367:
 5788              	.LBE2366:
 5789              	.LBE2365:
 5790              	.LBE2390:
 5791              	.LBE2394:
 5792              	.LBB2395:
 5793              	.LBB2396:
 5794              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // unique_ptr implementation -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // Copyright (C) 2008-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** /** @file bits/unique_ptr.h
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****  */
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** #ifndef _UNIQUE_PTR_H
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** #define _UNIQUE_PTR_H 1
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** #include <bits/c++config.h>
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** #include <debug/assertions.h>
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** #include <type_traits>
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** #include <utility>
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** #include <tuple>
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** namespace std _GLIBCXX_VISIBILITY(default)
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** {
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****   /**
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****    * @addtogroup pointer_abstractions
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****    * @{
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****    */
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** #if _GLIBCXX_USE_DEPRECATED
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****   template<typename> class auto_ptr;
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** #endif
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****   /// Primary template of default_delete, used by unique_ptr
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****   template<typename _Tp>
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****     struct default_delete
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****     {
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /// Default constructor
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       constexpr default_delete() noexcept = default;
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /** @brief Converting constructor.
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        *
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * Allows conversion from a deleter for arrays of another type, @p _Up,
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * only if @p _Up* is convertible to @p _Tp*.
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        */
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       template<typename _Up, typename = typename
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	       enable_if<is_convertible<_Up*, _Tp*>::value>::type>
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****         default_delete(const default_delete<_Up>&) noexcept { }
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /// Calls @c delete @p __ptr
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       void
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       operator()(_Tp* __ptr) const
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       {
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	static_assert(!is_void<_Tp>::value,
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	static_assert(sizeof(_Tp)>0,
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	delete __ptr;
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       }
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****     };
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****   // DR 740 - omit specialization for array objects with a compile time length
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****   /// Specialization for arrays, default_delete.
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****   template<typename _Tp>
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****     struct default_delete<_Tp[]>
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****     {
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****     public:
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /// Default constructor
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       constexpr default_delete() noexcept = default;
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /** @brief Converting constructor.
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        *
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * Allows conversion from a deleter for arrays of another type, such as
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * a const-qualified version of @p _Tp.
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        *
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * Conversions from types derived from @c _Tp are not allowed because
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * it is unsafe to @c delete[] an array of derived types through a
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * pointer to the base type.
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        */
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       template<typename _Up, typename = typename
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	       enable_if<is_convertible<_Up(*)[], _Tp(*)[]>::value>::type>
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****         default_delete(const default_delete<_Up[]>&) noexcept { }
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /// Calls @c delete[] @p __ptr
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       template<typename _Up>
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       typename enable_if<is_convertible<_Up(*)[], _Tp(*)[]>::value>::type
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	operator()(_Up* __ptr) const
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       {
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	static_assert(sizeof(_Tp)>0,
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 		      "can't delete pointer to incomplete type");
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	delete [] __ptr;
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       }
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****     };
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****   /// 20.7.1.2 unique_ptr for single objects.
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****   template <typename _Tp, typename _Dp = default_delete<_Tp> >
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****     class unique_ptr
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****     {
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       // use SFINAE to determine whether _Del::pointer exists
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       class _Pointer
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       {
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	template<typename _Up>
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	  static typename _Up::pointer __test(typename _Up::pointer*);
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	template<typename _Up>
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	  static _Tp* __test(...);
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	typedef typename remove_reference<_Dp>::type _Del;
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       public:
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	typedef decltype(__test<_Del>(0)) type;
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       };
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       typedef std::tuple<typename _Pointer::type, _Dp>  __tuple_type;
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       __tuple_type                                      _M_t;
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****     public:
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       typedef typename _Pointer::type   pointer;
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       typedef _Tp                       element_type;
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       typedef _Dp                       deleter_type;
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       // helper template for detecting a safe conversion from another
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       // unique_ptr
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       template<typename _Up, typename _Ep>
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	using __safe_conversion_up = __and_<
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	        is_convertible<typename unique_ptr<_Up, _Ep>::pointer, pointer>,
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****                 __not_<is_array<_Up>>,
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****                 __or_<__and_<is_reference<deleter_type>,
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****                              is_same<deleter_type, _Ep>>,
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****                       __and_<__not_<is_reference<deleter_type>>,
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****                              is_convertible<_Ep, deleter_type>>
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****                 >
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****               >;
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       // Constructors.
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /// Default constructor, creates a unique_ptr that owns nothing.
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       constexpr unique_ptr() noexcept
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       : _M_t()
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       { static_assert(!is_pointer<deleter_type>::value,
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 		     "constructed with null function pointer deleter"); }
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /** Takes ownership of a pointer.
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        *
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        *
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * The deleter will be value-initialized.
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        */
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       explicit
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       unique_ptr(pointer __p) noexcept
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       : _M_t()
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       {
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	std::get<0>(_M_t) = __p;
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	static_assert(!is_pointer<deleter_type>::value,
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 		     "constructed with null function pointer deleter");
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       }
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /** Takes ownership of a pointer.
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        *
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * @param __d  A reference to a deleter.
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        *
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * The deleter will be initialized with @p __d
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        */
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       unique_ptr(pointer __p,
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	  typename conditional<is_reference<deleter_type>::value,
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	    deleter_type, const deleter_type&>::type __d) noexcept
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       : _M_t(__p, __d) { }
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /** Takes ownership of a pointer.
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        *
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * @param __d  An rvalue reference to a deleter.
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        *
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * The deleter will be initialized with @p std::move(__d)
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        */
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       unique_ptr(pointer __p,
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	  typename remove_reference<deleter_type>::type&& __d) noexcept
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       : _M_t(std::move(__p), std::move(__d))
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       { static_assert(!std::is_reference<deleter_type>::value,
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 		      "rvalue deleter bound to reference"); }
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /// Creates a unique_ptr that owns nothing.
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       constexpr unique_ptr(nullptr_t) noexcept : unique_ptr() { }
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       // Move constructors.
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /// Move constructor.
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       unique_ptr(unique_ptr&& __u) noexcept
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       : _M_t(__u.release(), std::forward<deleter_type>(__u.get_deleter())) { }
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /** @brief Converting constructor from another type
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        *
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * Requires that the pointer owned by @p __u is convertible to the
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * type of pointer owned by this object, @p __u does not own an array,
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        * and @p __u has a compatible deleter type.
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****        */
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       template<typename _Up, typename _Ep, typename = _Require<
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****                __safe_conversion_up<_Up, _Ep>,
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	       typename conditional<is_reference<_Dp>::value,
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 				    is_same<_Ep, _Dp>,
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 				    is_convertible<_Ep, _Dp>>::type>>
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	unique_ptr(unique_ptr<_Up, _Ep>&& __u) noexcept
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	: _M_t(__u.release(), std::forward<_Ep>(__u.get_deleter()))
 225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	{ }
 226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** #if _GLIBCXX_USE_DEPRECATED
 228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /// Converting constructor from @c auto_ptr
 229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       template<typename _Up, typename = _Require<
 230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	       is_convertible<_Up*, _Tp*>, is_same<_Dp, default_delete<_Tp>>>>
 231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	unique_ptr(auto_ptr<_Up>&& __u) noexcept;
 232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** #endif
 233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 
 234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       /// Destructor, invokes the deleter if the stored pointer is not null.
 235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       ~unique_ptr() noexcept
 236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h ****       {
 237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	auto& __ptr = std::get<0>(_M_t);
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	if (__ptr != nullptr)
 5795              		.loc 9 238 0
 5796 046c 000054E3 		cmp	r4, #0
 5797 0470 0100000A 		beq	.L362
 239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	  get_deleter()(__ptr);
 5798              		.loc 9 239 0
 5799 0474 0400A0E1 		mov	r0, r4
 5800 0478 FEFFFFEB 		bl	TfLiteIntArrayFree
 5801              	.LVL609:
 5802              	.L362:
 5803              	.LBE2396:
 5804              	.LBE2395:
 5805              	.LBB2397:
 5806              	.LBB2391:
 455:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     }
 5807              		.loc 5 455 0
 5808 047c 0130A0E3 		mov	r3, #1
 5809              	.LVL610:
 5810              	.LBE2391:
 5811              	.LBE2397:
 5812              		.loc 5 461 0
 5813 0480 0300A0E1 		mov	r0, r3
 5814 0484 54D08DE2 		add	sp, sp, #84
 5815              		.cfi_remember_state
 5816              		.cfi_def_cfa_offset 36
 5817              		@ sp needed
 5818 0488 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5819              	.LVL611:
 5820              	.L338:
 5821              		.cfi_restore_state
 5822              	.LBB2398:
 5823              	.LBB2332:
 5824              	.LBB2330:
 5825              	.LBB2328:
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h ****     count *= dims->data[i];
 5826              		.loc 8 163 0
 5827 048c 0080A0E3 		mov	r8, #0
 5828 0490 0100A0E3 		mov	r0, #1
 5829              	.LVL612:
 5830 0494 0010A0E3 		mov	r1, #0
 5831              	.LVL613:
 5832 0498 03C0A0E1 		mov	ip, r3
 5833 049c 26FFFFEA 		b	.L310
 5834              	.LVL614:
 5835              	.L339:
 5836              	.LBE2328:
 5837              	.LBE2330:
 5838              	.LBE2332:
 5839              	.LBE2398:
 5840              	.LBB2399:
 5841              	.LBB2343:
 5842              	.LBB2342:
 5843              	.LBB2341:
 5844 04a0 0100A0E3 		mov	r0, #1
 5845 04a4 0010A0E3 		mov	r1, #0
 5846 04a8 0030A0E3 		mov	r3, #0
 5847 04ac 7BFFFFEA 		b	.L317
 5848              	.LVL615:
 5849              	.L342:
 5850              	.L335:
 5851              	.LBE2341:
 5852              	.LBE2342:
 5853              	.LBE2343:
 5854              	.LBE2399:
 5855              	.LBB2400:
 5856              	.LBB2401:
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	  get_deleter()(__ptr);
 5857              		.loc 9 238 0
 5858 04b0 000054E3 		cmp	r4, #0
 5859 04b4 0100000A 		beq	.L336
 5860              		.loc 9 239 0
 5861 04b8 0400A0E1 		mov	r0, r4
 5862 04bc FEFFFFEB 		bl	TfLiteIntArrayFree
 5863              	.LVL616:
 5864              	.L336:
 5865              	.LEHB12:
 5866 04c0 FEFFFFEB 		bl	__cxa_end_cleanup
 5867              	.LVL617:
 5868              	.LEHE12:
 5869              	.L344:
 5870 04c4 38009DE5 		ldr	r0, [sp, #56]
 5871              	.LVL618:
 5872              	.LBE2401:
 5873              	.LBE2400:
 5874              	.LBB2402:
 5875              	.LBB2392:
 5876              	.LBB2372:
 5877              	.LBB2373:
 5878              	.LBB2374:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5879              		.loc 3 180 0
 5880 04c8 40308DE2 		add	r3, sp, #64
 5881 04cc 030050E1 		cmp	r0, r3
 5882 04d0 0000000A 		beq	.L333
 5883              	.LVL619:
 5884              	.LBB2375:
 5885              	.LBB2376:
 5886              	.LBB2377:
 5887              	.LBB2378:
 5888              		.loc 7 110 0
 5889 04d4 FEFFFFEB 		bl	_ZdlPv
 5890              	.LVL620:
 5891              	.L333:
 5892 04d8 20009DE5 		ldr	r0, [sp, #32]
 5893              	.LVL621:
 5894              	.LBE2378:
 5895              	.LBE2377:
 5896              	.LBE2376:
 5897              	.LBE2375:
 5898              	.LBE2374:
 5899              	.LBE2373:
 5900              	.LBE2372:
 5901              	.LBB2379:
 5902              	.LBB2380:
 5903              	.LBB2381:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5904              		.loc 3 180 0
 5905 04dc 28308DE2 		add	r3, sp, #40
 5906 04e0 030050E1 		cmp	r0, r3
 5907 04e4 F1FFFF0A 		beq	.L335
 5908              	.LVL622:
 5909              	.LBB2382:
 5910              	.LBB2383:
 5911              	.LBB2384:
 5912              	.LBB2385:
 5913              		.loc 7 110 0
 5914 04e8 FEFFFFEB 		bl	_ZdlPv
 5915              	.LVL623:
 5916 04ec EFFFFFEA 		b	.L335
 5917              	.LVL624:
 5918              	.L343:
 5919 04f0 F8FFFFEA 		b	.L333
 5920              	.LBE2385:
 5921              	.LBE2384:
 5922              	.LBE2383:
 5923              	.LBE2382:
 5924              	.LBE2381:
 5925              	.LBE2380:
 5926              	.LBE2379:
 5927              	.LBE2392:
 5928              	.LBE2402:
 5929              		.cfi_endproc
 5930              	.LFE3295:
 5931              		.personality	__gxx_personality_v0
 5932              		.handlerdata
 5933              	.LLSDA3295:
 5934 0008 FF       		.byte	0xff
 5935 0009 FF       		.byte	0xff
 5936 000a 01       		.byte	0x1
 5937 000b 1D       		.uleb128 .LLSDACSE3295-.LLSDACSB3295
 5938              	.LLSDACSB3295:
 5939 000c F005     		.uleb128 .LEHB8-.LFB3295
 5940 000e F801     		.uleb128 .LEHE8-.LEHB8
 5941 0010 00       		.uleb128 0
 5942 0011 00       		.uleb128 0
 5943 0012 9408     		.uleb128 .LEHB9-.LFB3295
 5944 0014 04       		.uleb128 .LEHE9-.LEHB9
 5945 0015 B009     		.uleb128 .L342-.LFB3295
 5946 0017 00       		.uleb128 0
 5947 0018 A808     		.uleb128 .LEHB10-.LFB3295
 5948 001a 04       		.uleb128 .LEHE10-.LEHB10
 5949 001b F009     		.uleb128 .L343-.LFB3295
 5950 001d 00       		.uleb128 0
 5951 001e C008     		.uleb128 .LEHB11-.LFB3295
 5952 0020 04       		.uleb128 .LEHE11-.LEHB11
 5953 0021 C409     		.uleb128 .L344-.LFB3295
 5954 0023 00       		.uleb128 0
 5955 0024 C009     		.uleb128 .LEHB12-.LFB3295
 5956 0026 04       		.uleb128 .LEHE12-.LEHB12
 5957 0027 00       		.uleb128 0
 5958 0028 00       		.uleb128 0
 5959              	.LLSDACSE3295:
 5960              		.section	.text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLit
 5961              		.fnend
 5963              		.section	.text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14Tf
 5964              		.align	2
 5965              		.global	_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14TfLiteInt
 5966              		.syntax unified
 5967              		.arm
 5968              		.fpu neon
 5970              	_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14TfLiteIntArray:
 5971              		.fnstart
 5972              	.LFB3296:
 462:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 463:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** TfLiteStatus CalculateShapeForBroadcast(TfLiteContext* context,
 464:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                         const TfLiteTensor* input1,
 465:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                         const TfLiteTensor* input2,
 466:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                         const TfLiteTensor* input3,
 467:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****                                         TfLiteIntArray** output_shape) {
 5973              		.loc 5 467 0
 5974              		.cfi_startproc
 5975              		.cfi_personality 0,__gxx_personality_v0
 5976              		.cfi_lsda 0,.LLSDA3296
 5977              		@ args = 4, pretend = 0, frame = 96
 5978              		@ frame_needed = 0, uses_anonymous_args = 0
 5979              	.LVL625:
 5980 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5981              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5982              		.cfi_def_cfa_offset 36
 5983              		.cfi_offset 4, -36
 5984              		.cfi_offset 5, -32
 5985              		.cfi_offset 6, -28
 5986              		.cfi_offset 7, -24
 5987              		.cfi_offset 8, -20
 5988              		.cfi_offset 9, -16
 5989              		.cfi_offset 10, -12
 5990              		.cfi_offset 11, -8
 5991              		.cfi_offset 14, -4
 5992 0004 0270A0E1 		mov	r7, r2
 5993              	.LBB2403:
 5994              	.LBB2404:
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 5995              		.loc 8 147 0
 5996 0008 08C092E5 		ldr	ip, [r2, #8]
 5997              	.LBE2404:
 5998              	.LBE2403:
 5999              		.loc 5 467 0
 6000 000c 0360A0E1 		mov	r6, r3
 6001              		.pad #108
 6002 0010 6CD04DE2 		sub	sp, sp, #108
 6003              		.cfi_def_cfa_offset 144
 6004              		.loc 5 467 0
 6005 0014 01A0A0E1 		mov	r10, r1
 6006              	.LVL626:
 6007              	.LBB2406:
 6008              	.LBB2407:
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** inline int SizeOfDimension(const TfLiteTensor* t, int dim) {
 6009              		.loc 8 147 0
 6010 0018 082093E5 		ldr	r2, [r3, #8]
 6011              	.LVL627:
 6012              	.LBE2407:
 6013              	.LBE2406:
 6014              	.LBB2409:
 6015              	.LBB2410:
 6016 001c 083091E5 		ldr	r3, [r1, #8]
 6017              	.LVL628:
 6018              	.LBE2410:
 6019              	.LBE2409:
 6020              	.LBB2412:
 6021              	.LBB2405:
 6022 0020 00809CE5 		ldr	r8, [ip]
 6023              	.LBE2405:
 6024              	.LBE2412:
 6025              	.LBB2413:
 6026              	.LBB2408:
 6027 0024 005092E5 		ldr	r5, [r2]
 6028              	.LBE2408:
 6029              	.LBE2413:
 6030              	.LBB2414:
 6031              	.LBB2411:
 6032 0028 009093E5 		ldr	r9, [r3]
 6033              	.LVL629:
 6034              	.LBE2411:
 6035              	.LBE2414:
 6036              		.loc 5 467 0
 6037 002c 1C008DE5 		str	r0, [sp, #28]
 6038 0030 050058E1 		cmp	r8, r5
 6039 0034 0540A0B1 		movlt	r4, r5
 6040 0038 0840A0A1 		movge	r4, r8
 6041 003c 090054E1 		cmp	r4, r9
 6042 0040 0940A0B1 		movlt	r4, r9
 6043              	.LVL630:
 468:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int dims1 = NumDimensions(input1);
 469:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int dims2 = NumDimensions(input2);
 470:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int dims3 = NumDimensions(input3);
 471:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   int out_dims = std::max(std::max(dims1, dims2), dims3);
 472:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   std::unique_ptr<TfLiteIntArray, void (*)(TfLiteIntArray*)> shape(
 473:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TfLiteIntArrayCreate(out_dims), TfLiteIntArrayFree);
 6044              		.loc 5 473 0
 6045 0044 0400A0E1 		mov	r0, r4
 6046              	.LVL631:
 6047              	.LEHB13:
 6048 0048 FEFFFFEB 		bl	TfLiteIntArrayCreate
 6049              	.LVL632:
 6050              	.LEHE13:
 6051              	.LBB2415:
 474:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   for (int i = 0; i < out_dims; ++i) {
 6052              		.loc 5 474 0
 6053 004c 000054E3 		cmp	r4, #0
 6054              	.LBE2415:
 473:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   for (int i = 0; i < out_dims; ++i) {
 6055              		.loc 5 473 0
 6056 0050 18008DE5 		str	r0, [sp, #24]
 6057              	.LVL633:
 6058              	.LBB2482:
 6059              		.loc 5 474 0
 6060 0054 610000DA 		ble	.L380
 6061              	.LBB2416:
 6062              	.LBB2417:
 6063              	.LBB2418:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 6064              		.loc 8 149 0
 6065 0058 013049E2 		sub	r3, r9, #1
 6066 005c 04B180E0 		add	fp, r0, r4, lsl #2
 6067 0060 0C308DE5 		str	r3, [sp, #12]
 6068              	.LBE2418:
 6069              	.LBE2417:
 6070              	.LBB2420:
 6071              	.LBB2421:
 6072 0064 013048E2 		sub	r3, r8, #1
 6073 0068 10308DE5 		str	r3, [sp, #16]
 6074              	.LBE2421:
 6075              	.LBE2420:
 6076              	.LBB2424:
 6077              	.LBB2425:
 6078 006c 013045E2 		sub	r3, r5, #1
 6079              	.LBE2425:
 6080              	.LBE2424:
 6081              	.LBE2416:
 6082              		.loc 5 474 0
 6083 0070 0000A0E3 		mov	r0, #0
 6084              	.LVL634:
 6085              	.LBB2477:
 6086              	.LBB2429:
 6087              	.LBB2426:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 6088              		.loc 8 149 0
 6089 0074 14308DE5 		str	r3, [sp, #20]
 6090 0078 090000EA 		b	.L381
 6091              	.LVL635:
 6092              	.L404:
 6093              	.LBE2426:
 6094              	.LBE2429:
 475:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d1 = i >= dims1 ? 1 : SizeOfDimension(input1, dims1 - i - 1);
 476:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d2 = i >= dims2 ? 1 : SizeOfDimension(input2, dims2 - i - 1);
 477:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d3 = i >= dims3 ? 1 : SizeOfDimension(input3, dims3 - i - 1);
 478:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int max_value = std::max(std::max(d1, d2), d3);
 479:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     if (!(d1 == 1 || d1 == max_value) || !(d2 == 1 || d2 == max_value) ||
 6095              		.loc 5 479 0 discriminator 4
 6096 007c 010051E3 		cmp	r1, #1
 6097 0080 03005111 		cmpne	r1, r3
 6098 0084 2900001A 		bne	.L374
 480:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         !(d3 == 1 || d3 == max_value)) {
 6099              		.loc 5 480 0
 6100 0088 03005CE1 		cmp	ip, r3
 6101 008c 01005C13 		cmpne	ip, #1
 6102 0090 2600001A 		bne	.L374
 6103              	.LBE2477:
 474:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d1 = i >= dims1 ? 1 : SizeOfDimension(input1, dims1 - i - 1);
 6104              		.loc 5 474 0
 6105 0094 010080E2 		add	r0, r0, #1
 6106              	.LVL636:
 6107              	.LBB2478:
 481:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       context->ReportError(
 482:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****           context, "Given shapes, %s, %s and %s, are not broadcastable.",
 483:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****           GetShapeDebugString(input1->dims).c_str(),
 484:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****           GetShapeDebugString(input2->dims).c_str(),
 485:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****           GetShapeDebugString(input3->dims).c_str());
 486:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return kTfLiteError;
 487:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     }
 488:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     shape->data[out_dims - i - 1] = max_value;
 6108              		.loc 5 488 0
 6109 0098 04300BE4 		str	r3, [fp], #-4
 6110              	.LVL637:
 6111              	.LBE2478:
 474:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d1 = i >= dims1 ? 1 : SizeOfDimension(input1, dims1 - i - 1);
 6112              		.loc 5 474 0
 6113 009c 040050E1 		cmp	r0, r4
 6114 00a0 4E00000A 		beq	.L380
 6115              	.LVL638:
 6116              	.L381:
 6117              	.LBB2479:
 475:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d2 = i >= dims2 ? 1 : SizeOfDimension(input2, dims2 - i - 1);
 6118              		.loc 5 475 0
 6119 00a4 000059E1 		cmp	r9, r0
 6120 00a8 00E0A0D3 		movle	lr, #0
 6121 00ac 0120A0D3 		movle	r2, #1
 6122 00b0 060000DA 		ble	.L371
 6123              	.LVL639:
 6124              	.LBB2430:
 6125              	.LBB2419:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 6126              		.loc 8 149 0 discriminator 1
 6127 00b4 08309AE5 		ldr	r3, [r10, #8]
 6128 00b8 0C209DE5 		ldr	r2, [sp, #12]
 6129 00bc 002042E0 		sub	r2, r2, r0
 6130 00c0 023183E0 		add	r3, r3, r2, lsl #2
 6131 00c4 042093E5 		ldr	r2, [r3, #4]
 6132 00c8 01E052E2 		subs	lr, r2, #1
 6133 00cc 01E0A013 		movne	lr, #1
 6134              	.LVL640:
 6135              	.L371:
 6136              	.LBE2419:
 6137              	.LBE2430:
 476:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d3 = i >= dims3 ? 1 : SizeOfDimension(input3, dims3 - i - 1);
 6138              		.loc 5 476 0 discriminator 4
 6139 00d0 000058E1 		cmp	r8, r0
 6140              	.LBB2431:
 6141              	.LBB2422:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 6142              		.loc 8 149 0 discriminator 4
 6143 00d4 083097C5 		ldrgt	r3, [r7, #8]
 6144              	.LBE2422:
 6145              	.LBE2431:
 476:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int d3 = i >= dims3 ? 1 : SizeOfDimension(input3, dims3 - i - 1);
 6146              		.loc 5 476 0 discriminator 4
 6147 00d8 0110A0D3 		movle	r1, #1
 6148              	.LBB2432:
 6149              	.LBB2423:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 6150              		.loc 8 149 0 discriminator 4
 6151 00dc 10109DC5 		ldrgt	r1, [sp, #16]
 6152 00e0 001041C0 		subgt	r1, r1, r0
 6153 00e4 013183C0 		addgt	r3, r3, r1, lsl #2
 6154 00e8 041093C5 		ldrgt	r1, [r3, #4]
 6155              	.LVL641:
 6156              	.LBE2423:
 6157              	.LBE2432:
 477:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int max_value = std::max(std::max(d1, d2), d3);
 6158              		.loc 5 477 0 discriminator 4
 6159 00ec 000055E1 		cmp	r5, r0
 6160              	.LBB2433:
 6161              	.LBB2427:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 6162              		.loc 8 149 0 discriminator 4
 6163 00f0 083096C5 		ldrgt	r3, [r6, #8]
 6164              	.LBE2427:
 6165              	.LBE2433:
 477:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     int max_value = std::max(std::max(d1, d2), d3);
 6166              		.loc 5 477 0 discriminator 4
 6167 00f4 01C0A0D3 		movle	ip, #1
 6168              	.LBB2434:
 6169              	.LBB2428:
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/tensorflow/lite/kernels\kernel_util.h **** }
 6170              		.loc 8 149 0 discriminator 4
 6171 00f8 14C09DC5 		ldrgt	ip, [sp, #20]
 6172 00fc 00C04CC0 		subgt	ip, ip, r0
 6173 0100 0C3183C0 		addgt	r3, r3, ip, lsl #2
 6174 0104 04C093C5 		ldrgt	ip, [r3, #4]
 6175              	.LVL642:
 6176 0108 010052E1 		cmp	r2, r1
 6177 010c 0130A0B1 		movlt	r3, r1
 6178 0110 0230A0A1 		movge	r3, r2
 6179 0114 0C0053E1 		cmp	r3, ip
 6180 0118 0C30A0B1 		movlt	r3, ip
 6181              	.LVL643:
 6182              	.LBE2428:
 6183              	.LBE2434:
 479:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****         !(d3 == 1 || d3 == max_value)) {
 6184              		.loc 5 479 0 discriminator 4
 6185 011c 030052E1 		cmp	r2, r3
 6186 0120 0020A003 		moveq	r2, #0
 6187 0124 01200E12 		andne	r2, lr, #1
 6188              	.LVL644:
 6189 0128 000052E3 		cmp	r2, #0
 6190 012c D2FFFF0A 		beq	.L404
 6191              	.L374:
 481:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****           context, "Given shapes, %s, %s and %s, are not broadcastable.",
 6192              		.loc 5 481 0
 6193 0130 1C809DE5 		ldr	r8, [sp, #28]
 6194              	.LVL645:
 483:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****           GetShapeDebugString(input2->dims).c_str(),
 6195              		.loc 5 483 0
 6196 0134 20008DE2 		add	r0, sp, #32
 6197              	.LVL646:
 6198 0138 08109AE5 		ldr	r1, [r10, #8]
 6199              	.LVL647:
 481:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****           context, "Given shapes, %s, %s and %s, are not broadcastable.",
 6200              		.loc 5 481 0
 6201 013c 144098E5 		ldr	r4, [r8, #20]
 6202              	.LEHB14:
 483:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****           GetShapeDebugString(input2->dims).c_str(),
 6203              		.loc 5 483 0
 6204 0140 FEFFFFEB 		bl	_ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray
 6205              	.LVL648:
 6206              	.LEHE14:
 484:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****           GetShapeDebugString(input3->dims).c_str());
 6207              		.loc 5 484 0
 6208 0144 081097E5 		ldr	r1, [r7, #8]
 6209 0148 38008DE2 		add	r0, sp, #56
 6210 014c 20509DE5 		ldr	r5, [sp, #32]
 6211              	.LVL649:
 6212              	.LEHB15:
 6213 0150 FEFFFFEB 		bl	_ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray
 6214              	.LVL650:
 6215              	.LEHE15:
 485:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return kTfLiteError;
 6216              		.loc 5 485 0
 6217 0154 081096E5 		ldr	r1, [r6, #8]
 6218 0158 50008DE2 		add	r0, sp, #80
 6219 015c 38609DE5 		ldr	r6, [sp, #56]
 6220              	.LVL651:
 6221              	.LEHB16:
 6222 0160 FEFFFFEB 		bl	_ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray
 6223              	.LVL652:
 6224              	.LEHE16:
 6225 0164 50C09DE5 		ldr	ip, [sp, #80]
 6226 0168 001000E3 		movw	r1, #:lower16:.LC26
 6227 016c 0630A0E1 		mov	r3, r6
 6228 0170 0520A0E1 		mov	r2, r5
 6229 0174 0800A0E1 		mov	r0, r8
 6230 0178 001040E3 		movt	r1, #:upper16:.LC26
 6231 017c 00C08DE5 		str	ip, [sp]
 6232              	.LEHB17:
 6233 0180 34FF2FE1 		blx	r4
 6234              	.LVL653:
 6235              	.LEHE17:
 6236 0184 50009DE5 		ldr	r0, [sp, #80]
 6237              	.LVL654:
 6238              	.LBB2435:
 6239              	.LBB2436:
 6240              	.LBB2437:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6241              		.loc 3 180 0
 6242 0188 58308DE2 		add	r3, sp, #88
 6243 018c 030050E1 		cmp	r0, r3
 6244 0190 0000000A 		beq	.L376
 6245              	.LVL655:
 6246              	.LBB2438:
 6247              	.LBB2439:
 6248              	.LBB2440:
 6249              	.LBB2441:
 6250              		.loc 7 110 0
 6251 0194 FEFFFFEB 		bl	_ZdlPv
 6252              	.LVL656:
 6253              	.L376:
 6254 0198 38009DE5 		ldr	r0, [sp, #56]
 6255              	.LVL657:
 6256              	.LBE2441:
 6257              	.LBE2440:
 6258              	.LBE2439:
 6259              	.LBE2438:
 6260              	.LBE2437:
 6261              	.LBE2436:
 6262              	.LBE2435:
 6263              	.LBB2442:
 6264              	.LBB2443:
 6265              	.LBB2444:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6266              		.loc 3 180 0
 6267 019c 40308DE2 		add	r3, sp, #64
 6268 01a0 030050E1 		cmp	r0, r3
 6269 01a4 0000000A 		beq	.L377
 6270              	.LVL658:
 6271              	.LBB2445:
 6272              	.LBB2446:
 6273              	.LBB2447:
 6274              	.LBB2448:
 6275              		.loc 7 110 0
 6276 01a8 FEFFFFEB 		bl	_ZdlPv
 6277              	.LVL659:
 6278              	.L377:
 6279 01ac 20009DE5 		ldr	r0, [sp, #32]
 6280              	.LVL660:
 6281              	.LBE2448:
 6282              	.LBE2447:
 6283              	.LBE2446:
 6284              	.LBE2445:
 6285              	.LBE2444:
 6286              	.LBE2443:
 6287              	.LBE2442:
 6288              	.LBB2449:
 6289              	.LBB2450:
 6290              	.LBB2451:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6291              		.loc 3 180 0
 6292 01b0 28308DE2 		add	r3, sp, #40
 6293 01b4 030050E1 		cmp	r0, r3
 6294 01b8 0000000A 		beq	.L378
 6295              	.LVL661:
 6296              	.LBB2452:
 6297              	.LBB2453:
 6298              	.LBB2454:
 6299              	.LBB2455:
 6300              		.loc 7 110 0
 6301 01bc FEFFFFEB 		bl	_ZdlPv
 6302              	.LVL662:
 6303              	.L378:
 6304              	.LBE2455:
 6305              	.LBE2454:
 6306              	.LBE2453:
 6307              	.LBE2452:
 6308              	.LBE2451:
 6309              	.LBE2450:
 6310              	.LBE2449:
 6311              	.LBE2479:
 6312              	.LBE2482:
 6313              	.LBB2483:
 6314              	.LBB2484:
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	  get_deleter()(__ptr);
 6315              		.loc 9 238 0
 6316 01c0 18309DE5 		ldr	r3, [sp, #24]
 6317 01c4 000053E3 		cmp	r3, #0
 6318 01c8 0100000A 		beq	.L403
 6319 01cc 0300A0E1 		mov	r0, r3
 6320              		.loc 9 239 0
 6321 01d0 FEFFFFEB 		bl	TfLiteIntArrayFree
 6322              	.LVL663:
 6323              	.L403:
 6324              	.LBE2484:
 6325              	.LBE2483:
 6326              	.LBB2485:
 6327              	.LBB2480:
 486:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     }
 6328              		.loc 5 486 0
 6329 01d4 0100A0E3 		mov	r0, #1
 6330              	.LVL664:
 6331              	.LBE2480:
 6332              	.LBE2485:
 489:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 490:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   *output_shape = shape.release();
 491:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 492:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 6333              		.loc 5 492 0
 6334 01d8 6CD08DE2 		add	sp, sp, #108
 6335              		.cfi_remember_state
 6336              		.cfi_def_cfa_offset 36
 6337              		@ sp needed
 6338 01dc F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6339              	.LVL665:
 6340              	.L380:
 6341              		.cfi_restore_state
 490:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 6342              		.loc 5 490 0
 6343 01e0 90309DE5 		ldr	r3, [sp, #144]
 491:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 6344              		.loc 5 491 0
 6345 01e4 0000A0E3 		mov	r0, #0
 490:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return kTfLiteOk;
 6346              		.loc 5 490 0
 6347 01e8 18209DE5 		ldr	r2, [sp, #24]
 6348 01ec 002083E5 		str	r2, [r3]
 6349              	.LVL666:
 6350              		.loc 5 492 0
 6351 01f0 6CD08DE2 		add	sp, sp, #108
 6352              		.cfi_remember_state
 6353              		.cfi_def_cfa_offset 36
 6354              		@ sp needed
 6355 01f4 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6356              	.LVL667:
 6357              	.L396:
 6358              		.cfi_restore_state
 6359 01f8 50009DE5 		ldr	r0, [sp, #80]
 6360              	.LVL668:
 6361              	.LBB2486:
 6362              	.LBB2481:
 6363              	.LBB2456:
 6364              	.LBB2457:
 6365              	.LBB2458:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6366              		.loc 3 180 0
 6367 01fc 58308DE2 		add	r3, sp, #88
 6368 0200 030050E1 		cmp	r0, r3
 6369 0204 0000000A 		beq	.L384
 6370              	.LVL669:
 6371              	.LBB2459:
 6372              	.LBB2460:
 6373              	.LBB2461:
 6374              	.LBB2462:
 6375              		.loc 7 110 0
 6376 0208 FEFFFFEB 		bl	_ZdlPv
 6377              	.LVL670:
 6378              	.L384:
 6379 020c 38009DE5 		ldr	r0, [sp, #56]
 6380              	.LVL671:
 6381              	.LBE2462:
 6382              	.LBE2461:
 6383              	.LBE2460:
 6384              	.LBE2459:
 6385              	.LBE2458:
 6386              	.LBE2457:
 6387              	.LBE2456:
 6388              	.LBB2463:
 6389              	.LBB2464:
 6390              	.LBB2465:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6391              		.loc 3 180 0
 6392 0210 40308DE2 		add	r3, sp, #64
 6393 0214 030050E1 		cmp	r0, r3
 6394 0218 0000000A 		beq	.L386
 6395              	.LVL672:
 6396              	.LBB2466:
 6397              	.LBB2467:
 6398              	.LBB2468:
 6399              	.LBB2469:
 6400              		.loc 7 110 0
 6401 021c FEFFFFEB 		bl	_ZdlPv
 6402              	.LVL673:
 6403              	.L386:
 6404 0220 20009DE5 		ldr	r0, [sp, #32]
 6405              	.LVL674:
 6406              	.LBE2469:
 6407              	.LBE2468:
 6408              	.LBE2467:
 6409              	.LBE2466:
 6410              	.LBE2465:
 6411              	.LBE2464:
 6412              	.LBE2463:
 6413              	.LBB2470:
 6414              	.LBB2471:
 6415              	.LBB2472:
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6416              		.loc 3 180 0
 6417 0224 28308DE2 		add	r3, sp, #40
 6418 0228 030050E1 		cmp	r0, r3
 6419 022c 0000000A 		beq	.L388
 6420              	.LVL675:
 6421              	.LBB2473:
 6422              	.LBB2474:
 6423              	.LBB2475:
 6424              	.LBB2476:
 6425              		.loc 7 110 0
 6426 0230 FEFFFFEB 		bl	_ZdlPv
 6427              	.LVL676:
 6428              	.L388:
 6429              	.LBE2476:
 6430              	.LBE2475:
 6431              	.LBE2474:
 6432              	.LBE2473:
 6433              	.LBE2472:
 6434              	.LBE2471:
 6435              	.LBE2470:
 6436              	.LBE2481:
 6437              	.LBE2486:
 6438              	.LBB2487:
 6439              	.LBB2488:
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\unique_ptr.h **** 	  get_deleter()(__ptr);
 6440              		.loc 9 238 0
 6441 0234 18309DE5 		ldr	r3, [sp, #24]
 6442 0238 000053E3 		cmp	r3, #0
 6443 023c 0100000A 		beq	.L389
 6444              		.loc 9 239 0
 6445 0240 0300A0E1 		mov	r0, r3
 6446 0244 FEFFFFEB 		bl	TfLiteIntArrayFree
 6447              	.LVL677:
 6448              	.L389:
 6449              	.LEHB18:
 6450 0248 FEFFFFEB 		bl	__cxa_end_cleanup
 6451              	.LVL678:
 6452              	.LEHE18:
 6453              	.L393:
 6454 024c F8FFFFEA 		b	.L388
 6455              	.LVL679:
 6456              	.L395:
 6457 0250 EDFFFFEA 		b	.L384
 6458              	.LVL680:
 6459              	.L394:
 6460 0254 F1FFFFEA 		b	.L386
 6461              	.LBE2488:
 6462              	.LBE2487:
 6463              		.cfi_endproc
 6464              	.LFE3296:
 6465              		.personality	__gxx_personality_v0
 6466              		.handlerdata
 6467              	.LLSDA3296:
 6468 0008 FF       		.byte	0xff
 6469 0009 FF       		.byte	0xff
 6470 000a 01       		.byte	0x1
 6471 000b 21       		.uleb128 .LLSDACSE3296-.LLSDACSB3296
 6472              	.LLSDACSB3296:
 6473 000c 48       		.uleb128 .LEHB13-.LFB3296
 6474 000d 04       		.uleb128 .LEHE13-.LEHB13
 6475 000e 00       		.uleb128 0
 6476 000f 00       		.uleb128 0
 6477 0010 C002     		.uleb128 .LEHB14-.LFB3296
 6478 0012 04       		.uleb128 .LEHE14-.LEHB14
 6479 0013 CC04     		.uleb128 .L393-.LFB3296
 6480 0015 00       		.uleb128 0
 6481 0016 D002     		.uleb128 .LEHB15-.LFB3296
 6482 0018 04       		.uleb128 .LEHE15-.LEHB15
 6483 0019 D404     		.uleb128 .L394-.LFB3296
 6484 001b 00       		.uleb128 0
 6485 001c E002     		.uleb128 .LEHB16-.LFB3296
 6486 001e 04       		.uleb128 .LEHE16-.LEHB16
 6487 001f D004     		.uleb128 .L395-.LFB3296
 6488 0021 00       		.uleb128 0
 6489 0022 8003     		.uleb128 .LEHB17-.LFB3296
 6490 0024 04       		.uleb128 .LEHE17-.LEHB17
 6491 0025 F803     		.uleb128 .L396-.LFB3296
 6492 0027 00       		.uleb128 0
 6493 0028 C804     		.uleb128 .LEHB18-.LFB3296
 6494 002a 04       		.uleb128 .LEHE18-.LEHB18
 6495 002b 00       		.uleb128 0
 6496 002c 00       		.uleb128 0
 6497              	.LLSDACSE3296:
 6498              		.section	.text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14Tf
 6499              		.fnend
 6501              		.section	.text._ZN6tflite17TfLiteTypeGetSizeE10TfLiteType,"ax",%progbits
 6502              		.align	2
 6503              		.global	_ZN6tflite17TfLiteTypeGetSizeE10TfLiteType
 6504              		.syntax unified
 6505              		.arm
 6506              		.fpu neon
 6508              	_ZN6tflite17TfLiteTypeGetSizeE10TfLiteType:
 6509              		.fnstart
 6510              	.LFB3297:
 493:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #endif  // TF_LITE_STATIC_MEMORY
 494:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 495:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** // Size of string is not constant, return 0 in such case.
 496:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** int TfLiteTypeGetSize(TfLiteType type) {
 6511              		.loc 5 496 0
 6512              		.cfi_startproc
 6513              		@ args = 0, pretend = 0, frame = 0
 6514              		@ frame_needed = 0, uses_anonymous_args = 0
 6515              		@ link register save eliminated.
 6516              	.LVL681:
 6517 0000 010040E2 		sub	r0, r0, #1
 6518              	.LVL682:
 6519 0004 7000EFE6 		uxtb	r0, r0
 6520 0008 0F0050E3 		cmp	r0, #15
 6521 000c 00300093 		movwls	r3, #:lower16:.LANCHOR0
 6522 0010 00304093 		movtls	r3, #:upper16:.LANCHOR0
 6523 0014 00019397 		ldrls	r0, [r3, r0, lsl #2]
 6524              		.loc 5 496 0
 6525 0018 0000A083 		movhi	r0, #0
 497:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   switch (type) {
 498:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteUInt8:
 499:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(uint8_t), 1);
 500:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 1;
 501:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteInt8:
 502:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(int8_t), 1);
 503:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 1;
 504:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteBool:
 505:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return sizeof(bool);
 506:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteInt16:
 507:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(int16_t), 2);
 508:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 2;
 509:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteFloat16:
 510:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(int16_t), 2);
 511:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 2;
 512:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteFloat32:
 513:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(float), 4);
 514:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 4;
 515:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteInt32:
 516:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(int32_t), 4);
 517:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 4;
 518:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteUInt32:
 519:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(uint32_t), 4);
 520:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 4;
 521:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteInt64:
 522:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(int64_t), 8);
 523:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 8;
 524:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteUInt64:
 525:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(uint64_t), 8);
 526:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 8;
 527:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteFloat64:
 528:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(double), 8);
 529:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 8;
 530:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteComplex64:
 531:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(std::complex<float>), 8);
 532:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 8;
 533:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     case kTfLiteComplex128:
 534:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       TF_LITE_ASSERT_EQ(sizeof(std::complex<double>), 16);
 535:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 16;
 536:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****     default:
 537:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****       return 0;
 538:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   }
 539:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 6526              		.loc 5 539 0
 6527 001c 1EFF2FE1 		bx	lr
 6528              		.cfi_endproc
 6529              	.LFE3297:
 6530              		.cantunwind
 6531              		.fnend
 6533              		.section	.text._ZN6tflite16IsMobilePlatformEv,"ax",%progbits
 6534              		.align	2
 6535              		.global	_ZN6tflite16IsMobilePlatformEv
 6536              		.syntax unified
 6537              		.arm
 6538              		.fpu neon
 6540              	_ZN6tflite16IsMobilePlatformEv:
 6541              		.fnstart
 6542              	.LFB3298:
 540:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** 
 541:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** bool IsMobilePlatform() {
 6543              		.loc 5 541 0
 6544              		.cfi_startproc
 6545              		@ args = 0, pretend = 0, frame = 0
 6546              		@ frame_needed = 0, uses_anonymous_args = 0
 6547              		@ link register save eliminated.
 542:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #if defined(ANDROID) || defined(__ANDROID__)
 543:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return true;
 544:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #elif defined(__APPLE__)
 545:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #if TARGET_IPHONE_SIMULATOR || TARGET_OS_IPHONE
 546:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return true;
 547:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #endif
 548:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** #endif
 549:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc ****   return false;
 550:../src/tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc **** }
 6548              		.loc 5 550 0
 6549 0000 0000A0E3 		mov	r0, #0
 6550 0004 1EFF2FE1 		bx	lr
 6551              		.cfi_endproc
 6552              	.LFE3298:
 6553              		.cantunwind
 6554              		.fnend
 6556              		.section	.rodata.CSWTCH.122,"a",%progbits
 6557              		.align	3
 6558              		.set	.LANCHOR0,. + 0
 6561              	CSWTCH.122:
 6562 0000 04000000 		.word	4
 6563 0004 04000000 		.word	4
 6564 0008 01000000 		.word	1
 6565 000c 08000000 		.word	8
 6566 0010 00000000 		.word	0
 6567 0014 01000000 		.word	1
 6568 0018 02000000 		.word	2
 6569 001c 08000000 		.word	8
 6570 0020 01000000 		.word	1
 6571 0024 02000000 		.word	2
 6572 0028 08000000 		.word	8
 6573 002c 10000000 		.word	16
 6574 0030 08000000 		.word	8
 6575 0034 00000000 		.word	0
 6576 0038 00000000 		.word	0
 6577 003c 04000000 		.word	4
 6578              		.section	.rodata._ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor.str1.4
 6579              		.align	2
 6580              	.LC1:
 6581 0000 496E7661 		.ascii	"Invalid tensor index %d (not in [0, %d))\012\000"
 6581      6C696420 
 6581      74656E73 
 6581      6F722069 
 6581      6E646578 
 6582 002a 0000     		.space	2
 6583              	.LC2:
 6584 002c 54656E73 		.ascii	"Tensor at index %d was optional but was expected\012"
 6584      6F722061 
 6584      7420696E 
 6584      64657820 
 6584      25642077 
 6585 005d 00       		.ascii	"\000"
 6586              		.section	.rodata._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray.str1.4,"aMS",%progbits,
 6587              		.align	2
 6588              	.LC21:
 6589 0000 5B00     		.ascii	"[\000"
 6590 0002 0000     		.space	2
 6591              	.LC22:
 6592 0004 2C2000   		.ascii	", \000"
 6593 0007 00       		.space	1
 6594              	.LC23:
 6595 0008 62617369 		.ascii	"basic_string::append\000"
 6595      635F7374 
 6595      72696E67 
 6595      3A3A6170 
 6595      70656E64 
 6596 001d 000000   		.space	3
 6597              	.LC24:
 6598 0020 5D00     		.ascii	"]\000"
 6599              		.section	.rodata._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfL
 6600              		.align	2
 6601              	.LC25:
 6602 0000 47697665 		.ascii	"Given shapes, %s and %s, are not broadcastable.\000"
 6602      6E207368 
 6602      61706573 
 6602      2C202573 
 6602      20616E64 
 6603              		.section	.rodata._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14
 6604              		.align	2
 6605              	.LC26:
 6606 0000 47697665 		.ascii	"Given shapes, %s, %s and %s, are not broadcastable."
 6606      6E207368 
 6606      61706573 
 6606      2C202573 
 6606      2C202573 
 6607 0033 00       		.ascii	"\000"
 6608              		.section	.rodata._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S
 6609              		.align	2
 6610              	.LC3:
 6611 0000 2E2E2F73 		.ascii	"../src/tensorflow_lite/tensorflow/lite/kernels/kern"
 6611      72632F74 
 6611      656E736F 
 6611      72666C6F 
 6611      775F6C69 
 6612 0033 656C5F75 		.ascii	"el_util.cc\000"
 6612      74696C2E 
 6612      636300
 6613 003e 0000     		.space	2
 6614              	.LC4:
 6615 0040 25733A25 		.ascii	"%s:%d %s was not true.\000"
 6615      64202573 
 6615      20776173 
 6615      206E6F74 
 6615      20747275 
 6616 0057 00       		.space	1
 6617              	.LC5:
 6618 0058 7363616C 		.ascii	"scale_diff / output_scale <= 0.02\000"
 6618      655F6469 
 6618      6666202F 
 6618      206F7574 
 6618      7075745F 
 6619 007a 0000     		.space	2
 6620              	.LC6:
 6621 007c 696E7075 		.ascii	"input_product_scale >= 0\000"
 6621      745F7072 
 6621      6F647563 
 6621      745F7363 
 6621      616C6520 
 6622              		.section	.rodata._ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActiva
 6623              		.align	2
 6624              	.LC7:
 6625 0000 66616C73 		.ascii	"false\000"
 6625      6500
 6626 0006 0000     		.space	2
 6627              	.LC8:
 6628 0008 6E6F5F69 		.ascii	"no_integer_overflow_from_quantization\000"
 6628      6E746567 
 6628      65725F6F 
 6628      76657266 
 6628      6C6F775F 
 6629              		.section	.rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTenso
 6630              		.align	2
 6631              	.LC9:
 6632 0000 25733A25 		.ascii	"%s:%d %s != %s (%d != %d)\000"
 6632      64202573 
 6632      20213D20 
 6632      25732028 
 6632      25642021 
 6633 001a 0000     		.space	2
 6634              	.LC10:
 6635 001c 6B54664C 		.ascii	"kTfLiteAffineQuantization\000"
 6635      69746541 
 6635      6666696E 
 6635      65517561 
 6635      6E74697A 
 6636 0036 0000     		.space	2
 6637              	.LC11:
 6638 0038 696E7075 		.ascii	"input->quantization.type\000"
 6638      742D3E71 
 6638      75616E74 
 6638      697A6174 
 6638      696F6E2E 
 6639 0051 000000   		.space	3
 6640              	.LC12:
 6641 0054 66696C74 		.ascii	"filter->quantization.type\000"
 6641      65722D3E 
 6641      7175616E 
 6641      74697A61 
 6641      74696F6E 
 6642 006e 0000     		.space	2
 6643              	.LC13:
 6644 0070 61666669 		.ascii	"affine_quantization\000"
 6644      6E655F71 
 6644      75616E74 
 6644      697A6174 
 6644      696F6E00 
 6645              	.LC14:
 6646 0084 61666669 		.ascii	"affine_quantization->scale\000"
 6646      6E655F71 
 6646      75616E74 
 6646      697A6174 
 6646      696F6E2D 
 6647 009f 00       		.space	1
 6648              	.LC15:
 6649 00a0 696E7075 		.ascii	"input->type == kTfLiteInt8 || input->type == kTfLit"
 6649      742D3E74 
 6649      79706520 
 6649      3D3D206B 
 6649      54664C69 
 6650 00d3 65496E74 		.ascii	"eInt16\000"
 6650      313600
 6651 00da 0000     		.space	2
 6652              	.LC16:
 6653 00dc 6B54664C 		.ascii	"kTfLiteInt8\000"
 6653      69746549 
 6653      6E743800 
 6654              	.LC17:
 6655 00e8 66696C74 		.ascii	"filter->type\000"
 6655      65722D3E 
 6655      74797065 
 6655      00
 6656 00f5 000000   		.space	3
 6657              	.LC18:
 6658 00f8 6E756D5F 		.ascii	"num_channels\000"
 6658      6368616E 
 6658      6E656C73 
 6658      00
 6659 0105 000000   		.space	3
 6660              	.LC19:
 6661 0108 61666669 		.ascii	"affine_quantization->scale->size\000"
 6661      6E655F71 
 6661      75616E74 
 6661      697A6174 
 6661      696F6E2D 
 6662 0129 000000   		.space	3
 6663              	.LC20:
 6664 012c 66696C74 		.ascii	"filter->dims->data[affine_quantization->quantized_d"
 6664      65722D3E 
 6664      64696D73 
 6664      2D3E6461 
 6664      74615B61 
 6665 015f 696D656E 		.ascii	"imension]\000"
 6665      73696F6E 
 6665      5D00
 6666              		.section	.rodata._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEc
 6667              		.align	2
 6668              	.LC0:
 6669 0000 256400   		.ascii	"%d\000"
 6670              		.text
 6671              	.Letext0:
 6672              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6673              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6674              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6675              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6676              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6677              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6678              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6679              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6680              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6681              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6682              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6683              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6684              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6685              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6686              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6687              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6688              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6689              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6690              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6691              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6692              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6693              		.file 31 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6694              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6695              		.file 33 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6696              		.file 34 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6697              		.file 35 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6698              		.file 36 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6699              		.file 37 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6700              		.file 38 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6701              		.file 39 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6702              		.file 40 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6703              		.file 41 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6704              		.file 42 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6705              		.file 43 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6706              		.file 44 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6707              		.file 45 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6708              		.file 46 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6709              		.file 47 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6710              		.file 48 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6711              		.file 49 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6712              		.file 50 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 6713              		.file 51 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
 6714              		.file 52 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
 6715              		.file 53 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
 6716              		.file 54 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6717              		.file 55 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6718              		.file 56 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6719              		.file 57 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6720              		.file 58 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6721              		.file 59 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6722              		.file 60 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 6723              		.file 61 "<built-in>"
 6724              		.file 62 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6725              		.file 63 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6726              		.file 64 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6727              		.file 65 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6728              		.file 66 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6729              		.file 67 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6730              		.file 68 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6731              		.file 69 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
 6732              		.file 70 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 6733              		.file 71 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
DEFINED SYMBOLS
                            *ABS*:00000000 kernel_util.cc
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:17     .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z.constprop.35:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:22     .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z.constprop.35:00000000 _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z.constprop.35
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6668   .rodata._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z.constprop.35.str1.4:00000000 .LC0
.ARM.extab.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z.constprop.35:00000000 $d
.ARM.exidx.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z.constprop.35:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:329    .text._ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:335    .text._ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei:00000000 _ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei
.ARM.exidx.text._ZN6tflite8GetInputEPK13TfLiteContextPK10TfLiteNodei:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:372    .text._ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:378    .text._ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor:00000000 _ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6580   .rodata._ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor.str1.4:00000000 .LC1
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6583   .rodata._ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor.str1.4:0000002c .LC2
.ARM.exidx.text._ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:537    .text._ZN6tflite16GetVariableInputEP13TfLiteContextPK10TfLiteNodei:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:543    .text._ZN6tflite16GetVariableInputEP13TfLiteContextPK10TfLiteNodei:00000000 _ZN6tflite16GetVariableInputEP13TfLiteContextPK10TfLiteNodei
.ARM.exidx.text._ZN6tflite16GetVariableInputEP13TfLiteContextPK10TfLiteNodei:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:639    .text._ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:645    .text._ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei:00000000 _ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei
.ARM.exidx.text._ZN6tflite9GetOutputEP13TfLiteContextPK10TfLiteNodei:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:742    .text._ZN6tflite13GetOutputSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:748    .text._ZN6tflite13GetOutputSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:00000000 _ZN6tflite13GetOutputSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor
.ARM.exidx.text._ZN6tflite13GetOutputSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:890    .text._ZN6tflite22GetOptionalInputTensorEPK13TfLiteContextPK10TfLiteNodei:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:896    .text._ZN6tflite22GetOptionalInputTensorEPK13TfLiteContextPK10TfLiteNodei:00000000 _ZN6tflite22GetOptionalInputTensorEPK13TfLiteContextPK10TfLiteNodei
.ARM.exidx.text._ZN6tflite22GetOptionalInputTensorEPK13TfLiteContextPK10TfLiteNodei:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:982    .text._ZN6tflite12GetTemporaryEP13TfLiteContextPK10TfLiteNodei:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:988    .text._ZN6tflite12GetTemporaryEP13TfLiteContextPK10TfLiteNodei:00000000 _ZN6tflite12GetTemporaryEP13TfLiteContextPK10TfLiteNodei
.ARM.exidx.text._ZN6tflite12GetTemporaryEP13TfLiteContextPK10TfLiteNodei:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1085   .text._ZN6tflite16GetTemporarySafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1091   .text._ZN6tflite16GetTemporarySafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:00000000 _ZN6tflite16GetTemporarySafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor
.ARM.exidx.text._ZN6tflite16GetTemporarySafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1233   .text._ZN6tflite16GetIntermediatesEP13TfLiteContextPK10TfLiteNodei:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1239   .text._ZN6tflite16GetIntermediatesEP13TfLiteContextPK10TfLiteNodei:00000000 _ZN6tflite16GetIntermediatesEP13TfLiteContextPK10TfLiteNodei
.ARM.exidx.text._ZN6tflite16GetIntermediatesEP13TfLiteContextPK10TfLiteNodei:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1336   .text._ZN6tflite20GetIntermediatesSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1342   .text._ZN6tflite20GetIntermediatesSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:00000000 _ZN6tflite20GetIntermediatesSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor
.ARM.exidx.text._ZN6tflite20GetIntermediatesSafeEPK13TfLiteContextPK10TfLiteNodeiPP12TfLiteTensor:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1484   .text._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1490   .text._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd:00000000 _ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6617   .rodata._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd.str1.4:00000058 .LC5
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6610   .rodata._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd.str1.4:00000000 .LC3
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6614   .rodata._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd.str1.4:00000040 .LC4
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6620   .rodata._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd.str1.4:0000007c .LC6
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1655   .text._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd:000000f8 $d
.ARM.exidx.text._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1666   .text._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_PS2_Pd:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1672   .text._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_PS2_Pd:00000000 _ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_PS2_Pd
.ARM.exidx.text._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_PS2_Pd:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1748   .text._ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:1754   .text._ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_:00000000 _ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6624   .rodata._ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_.str1.4:00000000 .LC7
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6627   .rodata._ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_.str1.4:00000008 .LC8
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:2242   .text._ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_:0000022c $d
.ARM.extab.text._ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_:00000000 $d
.ARM.exidx.text._ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:2256   .text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:2262   .text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i:00000000 _ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6634   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:0000001c .LC10
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6640   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:00000054 .LC12
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6631   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:00000000 .LC9
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6637   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:00000038 .LC11
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6652   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:000000dc .LC16
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6654   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:000000e8 .LC17
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6648   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:000000a0 .LC15
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6663   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:0000012c .LC20
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6657   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:000000f8 .LC18
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6660   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:00000108 .LC19
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6643   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:00000070 .LC13
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6645   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:00000084 .LC14
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:3356   .text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i:000008b8 $d
.ARM.extab.text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i:00000000 $d
.ARM.exidx.text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:3374   .text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:3380   .text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_:00000000 _ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:4210   .text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_:000005f8 $d
.ARM.extab.text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_:00000000 $d
.ARM.exidx.text._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:4221   .text._ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:4227   .text._ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_:00000000 _ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_
.ARM.exidx.text._ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:4256   .text._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:4262   .text._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray:00000000 _ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6591   .rodata._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray.str1.4:00000004 .LC22
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6588   .rodata._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray.str1.4:00000000 .LC21
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6597   .rodata._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray.str1.4:00000020 .LC24
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6594   .rodata._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray.str1.4:00000008 .LC23
.ARM.extab.text._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray:00000000 $d
.ARM.exidx.text._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:5183   .text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:5189   .text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray:00000000 _ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6601   .rodata._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray.str1.4:00000000 .LC25
.ARM.extab.text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray:00000000 $d
.ARM.exidx.text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:5964   .text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14TfLiteIntArray:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:5970   .text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14TfLiteIntArray:00000000 _ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14TfLiteIntArray
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6605   .rodata._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14TfLiteIntArray.str1.4:00000000 .LC26
.ARM.extab.text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14TfLiteIntArray:00000000 $d
.ARM.exidx.text._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14TfLiteIntArray:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6502   .text._ZN6tflite17TfLiteTypeGetSizeE10TfLiteType:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6508   .text._ZN6tflite17TfLiteTypeGetSizeE10TfLiteType:00000000 _ZN6tflite17TfLiteTypeGetSizeE10TfLiteType
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6558   .rodata.CSWTCH.122:00000000 .LANCHOR0
.ARM.exidx.text._ZN6tflite17TfLiteTypeGetSizeE10TfLiteType:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6534   .text._ZN6tflite16IsMobilePlatformEv:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6540   .text._ZN6tflite16IsMobilePlatformEv:00000000 _ZN6tflite16IsMobilePlatformEv
.ARM.exidx.text._ZN6tflite16IsMobilePlatformEv:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6557   .rodata.CSWTCH.122:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6561   .rodata.CSWTCH.122:00000000 CSWTCH.122
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6579   .rodata._ZN6tflite12GetInputSafeEPK13TfLiteContextPK10TfLiteNodeiPPK12TfLiteTensor.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6587   .rodata._ZN6tflite19GetShapeDebugStringB5cxx11EPK14TfLiteIntArray.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6600   .rodata._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6604   .rodata._ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_S4_PP14TfLiteIntArray.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6609   .rodata._ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6623   .rodata._ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6630   .rodata._ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccqq61fk.s:6667   .rodata._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z.constprop.35.str1.4:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.3e1481985cce1e923928453d8be0a65b
                           .group:00000000 wm4.stdint.h.4.659be5aa44c4ab4eb7c7cc2b24d8ceee
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.7b36b8b41abe4293fbb29540b719705c
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cconfig.h.31.1472b8c7bd4952a63a52f3f4f718f872
                           .group:00000000 wm4.cpu_defines.h.31.54d44f9d3e7c42875c5a7fd49795eb93
                           .group:00000000 wm4.cconfig.h.515.5e729db314ae74226e291b4ae081e353
                           .group:00000000 wm4.limits.89.6a37aaf13947bdd77504340a7bdcc6d8
                           .group:00000000 wm4.stdbool.h.29.01580e438512fc255c0619569742ffd3
                           .group:00000000 wm4.stddef.h.39.fa2e86d241f4df50b9327c72832885e1
                           .group:00000000 wm4.c_api_types.h.20.9b09175981ed746180e205cc0b4b2bfd
                           .group:00000000 wm4.common.h.77.124de099ec0ac4f95ebf1618a5f42cf6
                           .group:00000000 wm4.cstdlib.44.52c5efdfb0f3c176bd11e611a0b94959
                           .group:00000000 wm4.newlib.h.8.5f2124c7e712be65f83b91ff86a0b1c1
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.161.38688f2eb958a8ed58fdb61ffe554c94
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.cdefs.h.47.9bc8274c84fddbf05edd550eb0bf48cd
                           .group:00000000 wm4.stdlib.h.56.b4ddaf162082f284ba35b4444af99a9a
                           .group:00000000 wm4.cstdlib.76.ae666499c8f9b0ace1b4b23fe143da2c
                           .group:00000000 wm4.concept_check.h.31.f19605d278e56917c68a56d378be308c
                           .group:00000000 wm4.type_traits.30.2c7323a483bcd7601e8b71d2546ae284
                           .group:00000000 wm4.move.h.152.41d7b9e6779674d169b7813982cfa003
                           .group:00000000 wm4.exception_defines.h.31.ca6841b9be3287386aafc5c717935b2e
                           .group:00000000 wm4.cpp_type_traits.h.33.9f2bfd8c4471a9a299f6da3ec24c745c
                           .group:00000000 wm4.numeric_traits.h.30.aa01a98564b7e55086aad9e53c7e5c53
                           .group:00000000 wm4.assertions.h.30.51d443923f0d242550e04246a7819b39
                           .group:00000000 wm4.stl_iterator.h.1250.45f349a262f1b0d836d8edbc4b7b98ff
                           .group:00000000 wm4.debug.h.30.5c1f223b12199e851d4d42805b788ccf
                           .group:00000000 wm4.stl_algobase.h.491.aa250b69c90aafa2a0a62b8c58cd5f30
                           .group:00000000 wm4.atomic_lockfree_defines.h.31.d5c6334fb1e95c9462b052951f1411df
                           .group:00000000 wm4.math.h.13.e7cbdea54f4da98ab8f7fad4d23502b2
                           .group:00000000 wm4.cmath.46.d6e5b776115d39075860ed881d18f087
                           .group:00000000 wm4.wchar.h.2.f837619576d797e948eb58c44fac4678
                           .group:00000000 wm4.stddef.h.161.9f48187563b2a85291a91832aa425498
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.wchar.h.41.2307b469886c2ca55d92707971ac50ce
                           .group:00000000 wm4.cwchar.48.c4e882638bf84f6da89479dda6fe8e17
                           .group:00000000 wm4.locale.h.8.27d0fe4c0abbb6f8893a1fa7c1799fd9
                           .group:00000000 wm4.locale.h.16.524572cf3c2ed9856516685acdc598fe
                           .group:00000000 wm4.clocale.45.c36d2d5b631a875aa5273176b54fdf0f
                           .group:00000000 wm4.ctype.h.2.da310d2ad165ccf8b86542f76fdb938d
                           .group:00000000 wm4.cctype.45.0da5714876b0be7f2d816b53d9670403
                           .group:00000000 wm4.gthr.h.27.ceb1c66b926f052afcba57e8784df0d4
                           .group:00000000 wm4.gthrdefault.h.27.edc94d4398c0534988962be77dc3c2e1
                           .group:00000000 wm4.atomic_word.h.30.9e0ac69fd462d5e650933e05133b4afa
                           .group:00000000 wm4.allocator.h.52.0ceafb36dc1b82dbfa6b05003082e3f5
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.c3e9cb15e5af2807c4650345134c1a8a
                           .group:00000000 wm4.cstdio.45.ba8d321feb18bfc8923454067605c368
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.1ecd7b1049497a0ab61da0f6cbd4b0c6
                           .group:00000000 wm4.functional_hash.h.98.3bf7680ffcc8d24d09fa83ac1339c79d
                           .group:00000000 wm4.wctype.h.2.898a9b94aa35d125e245195b099726a8
                           .group:00000000 wm4.wctype.h.21.aec4d35c940c33b3f9c6f879c49edcd8
                           .group:00000000 wm4.cwctype.54.6582aca101688c1c3785d03bc15e2af6
                           .group:00000000 wm4.locale_facets.h.56.0d4bb655ce5e76ea564363ed7c5a34fc
                           .group:00000000 wm4.typeinfo.30.04014f5b1b4fb021c5662653bc27c750
                           .group:00000000 wm4.functional.549.0bc5b448cf999863d3841495cd6fe920
                           .group:00000000 wm4.atomic_base.h.31.692a6b53cef50ad728d4af54dfbd4448
                           .group:00000000 wm4.cmath.44.b3bcbb5fe53ec6617dec8aa8eb7b03cc
                           .group:00000000 wm4.cppmath.h.27.51580d700716589df4b364298e2ef577
                           .group:00000000 wm4.op_macros.h.42.7b718cb416a067e7bb07e7699647769b
                           .group:00000000 wm4.compatibility.h.23.702d6356326ea59aded8ef5c6c4626d5
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.cstring.45.6ab09de7fb97b576e744347688ddc8d7

UNDEFINED SYMBOLS
vsnprintf
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
memcpy
__aeabi_unwind_cpp_pr1
__aeabi_unwind_cpp_pr0
roundf
_ZN6tflite18QuantizeMultiplierEdPlPi
TfLiteIntArrayEqual
__gxx_personality_v0
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
_ZdlPv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
__cxa_end_cleanup
_ZSt20__throw_length_errorPKc
TfLiteIntArrayCreate
TfLiteIntArrayCopy
TfLiteIntArrayFree
