
;; Function std::vector<int> tflite::{anonymous}::flatbuffersVector2StdVector(const flatbuffers::Vector<long int>&) (_ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE, funcdef_no=6558, decl_uid=164546, cgraph_uid=3562, symbol_order=3594)


Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:32
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:32:38: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:32:38: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:32:38: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:32:38: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:28:18: note: vectorized 0 loops in function.
std::vector<int> tflite::{anonymous}::flatbuffersVector2StdVector(const flatbuffers::Vector<long int>&) (const struct Vector & fVector)
{
  int * D.211964;
  int * const __last;
  int * const __first;
  const ptrdiff_t _Num;
  int * D.211953;
  struct move_iterator __first;
  struct move_iterator __last;
  struct move_iterator D.211914;
  struct move_iterator D.211913;
  size_t i;
  value_type D.165670;
  const uoffset_t * pretmp_2;
  long unsigned int _7;
  long unsigned int _9;
  long unsigned int _15;
  const long int * _16;
  long int _17;
  int * _18;
  int * pretmp_19;
  int * prephitmp_32;
  int * _37;
  int * _41;
  unsigned int _50;
  int * _51;
  int * _56;
  int * prephitmp_57;
  int * pretmp_60;
  long unsigned int _63;

  <bb 2>:
  # DEBUG this => stdVector_5(D)
  # DEBUG D#55 => &stdVector_5(D)->D.165613
  # DEBUG this => D#55
  # DEBUG D#54 => &D#55->_M_impl
  # DEBUG this => D#54
  # DEBUG this => D#54
  # DEBUG this => D#54
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct _Vector_impl *)stdVector_5(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)stdVector_5(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)stdVector_5(D)]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => fVector_6(D)
  _9 = fVector_6(D)->length_;
  # DEBUG t => _9
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => stdVector_5(D)
  # DEBUG __n => _9
  # DEBUG D#27 => stdVector_5(D)
  # DEBUG this => D#27
  # DEBUG D#26 => D#27
  # DEBUG D#25 => &D#26->D.165613
  # DEBUG this => D#25
  # DEBUG this => NULL
  # DEBUG __a => D#24
  # DEBUG D#23 => D#24
  # DEBUG D#22 => D#23
  # DEBUG this => D#22
  if (_9 > 1073741823)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("vector::reserve");

  <bb 4>:
  # DEBUG D#9 => stdVector_5(D)
  # DEBUG D#9 => stdVector_5(D)
  # DEBUG this => D#9
  # DEBUG this => D#9
  if (_9 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  return stdVector_5(D);

  <bb 6>:
  # DEBUG this => stdVector_5(D)
  # DEBUG this => NULL
  # DEBUG __old_size => NULL
  # DEBUG __i => 0B
  # DEBUG this => NULL
  # DEBUG __i => 0B
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG __i => 0B
  # DEBUG this => NULL
  # DEBUG __i => 0B
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG D#71 => stdVector_5(D)
  # DEBUG __n => _9
  # DEBUG this => D#71
  # DEBUG D#70 => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => &D#69->D.165613
  # DEBUG D#63 => D#68
  # DEBUG __n => _9
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#61 => &D#62->_M_impl
  # DEBUG D#60 => D#61
  # DEBUG __n => _9
  # DEBUG __a => D#60
  # DEBUG D#59 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#58 => 0B
  # DEBUG __n => _9
  # DEBUG this => D#57
  # DEBUG D.211962 => D#58
  # DEBUG D#56 => D#57
  # DEBUG D#22 => D#56
  # DEBUG this => D#22
  _50 = _9 * 4;
  _51 = operator new (_50);
  goto <bb 8>;

<L7>:
  goto <bb 21> (<L5>);

  <bb 8>:
  # DEBUG __n => NULL
  # DEBUG __n => NULL
  # DEBUG __n => NULL
  # DEBUG __result => NULL
  # DEBUG D#67 => &D#70->D.165613
  # DEBUG this => D#67
  # DEBUG this => NULL
  # DEBUG __first => 0B
  # DEBUG __last => 0B
  # DEBUG __result => NULL
  # DEBUG D.211920 => D#66
  # DEBUG __first => 0B
  # DEBUG __last => 0B
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => 0B
  # DEBUG __last => 0B
  # DEBUG __result => NULL
  # DEBUG __first => 0B
  # DEBUG __last => 0B
  # DEBUG __result => NULL
  # DEBUG __it$_M_current => 0B
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it$_M_current => 0B
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => 0B
  # DEBUG __last => 0B
  # DEBUG __result => NULL
  # DEBUG __it => 0B
  # DEBUG __it => NULL
  # DEBUG __it => 0B
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG _Num => 0
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG _Num => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG _Num => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG _Num => NULL
  # DEBUG __result => NULL
  # DEBUG __it$_M_current => NULL
  # DEBUG __it$_M_current => NULL
  # DEBUG _Num => NULL
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG _Num => NULL
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG _Num => NULL
  # DEBUG __result => NULL
  # DEBUG _Num => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __n => NULL
  # DEBUG _Num => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __tmp => NULL
  _37 = stdVector_5(D)->D.165613._M_impl._M_start;
  # DEBUG D#80 => stdVector_5(D)->D.165613._M_impl._M_finish
  # DEBUG D#72 => &stdVector_5(D)->D.165613
  # DEBUG this => D#72
  # DEBUG this => NULL
  # DEBUG __first => _37
  # DEBUG __last => D#80
  # DEBUG D.211444 => NULL
  # DEBUG D#20 => _37
  # DEBUG D#21 => D#80
  # DEBUG __first => D#20
  # DEBUG __last => D#21
  # DEBUG D#19 => D#21
  # DEBUG D#18 => D#20
  # DEBUG D#16 => D#18
  # DEBUG D#17 => D#19
  # DEBUG D.210871 => D#16
  # DEBUG D.210870 => D#17
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D.211444 => NULL
  # DEBUG D#79 => &stdVector_5(D)->D.165613
  # DEBUG D#78 => stdVector_5(D)->D.165613._M_impl._M_end_of_storage
  # DEBUG D#77 => (int) D#78
  # DEBUG D#76 => (int) _37
  # DEBUG D#75 => D#77 - D#76
  # DEBUG D#74 => D#75 /[ex] 4
  # DEBUG D#73 => (unsigned int) D#74
  # DEBUG this => D#79
  # DEBUG __p => _37
  # DEBUG __n => D#73
  if (_37 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#34 => &D#79->_M_impl
  # DEBUG D#32 => D#34
  # DEBUG D#33 => D#73
  # DEBUG __p => _37
  # DEBUG __a => D#32
  # DEBUG __n => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG D#28 => D#30
  # DEBUG D#29 => D#31
  # DEBUG __p => _37
  # DEBUG this => D#28
  # DEBUG D.211911 => D#29
  operator delete (_37);
  # DEBUG __p => NULL

  <bb 10>:
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __n => NULL
  stdVector_5(D)->D.165613._M_impl._M_start = _51;
  stdVector_5(D)->D.165613._M_impl._M_finish = _51;
  _41 = _51 + _50;
  stdVector_5(D)->D.165613._M_impl._M_end_of_storage = _41;
  # DEBUG i => 0
  # DEBUG this => fVector_6(D)
  _63 = fVector_6(D)->length_;
  # DEBUG t => _63
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_63 != 0)
    goto <bb 11>;
  else
    goto <bb 5>;

  <bb 11>:
  pretmp_2 = &MEM[(void *)fVector_6(D) + 4B];

  <bb 12>:
  # i_64 = PHI <0(11), i_12(19)>
  # prephitmp_57 = PHI <_51(11), pretmp_60(19)>
  # prephitmp_32 = PHI <_41(11), pretmp_19(19)>
  # DEBUG i => i_64
  # DEBUG this => NULL
  # DEBUG this => fVector_6(D)
  # DEBUG i => i_64
  # DEBUG this => fVector_6(D)
  # DEBUG t => _63
  # DEBUG t => NULL
  # DEBUG this => NULL
  # DEBUG this => fVector_6(D)
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG i => i_64
  _15 = i_64 * 4;
  _16 = pretmp_2 + _15;
  _17 = *_16;
  # DEBUG t => _17
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG i => NULL
  # DEBUG this => NULL
  # DEBUG i => NULL
  D.165670 = _17;
  # DEBUG this => stdVector_5(D)
  # DEBUG __x => &D.165670
  # DEBUG __t => &D.165670
  # DEBUG __t => NULL
  # DEBUG this => stdVector_5(D)
  # DEBUG __args#0 => &D.165670
  # DEBUG D#104 => stdVector_5(D)->D.165613._M_impl._M_finish
  if (prephitmp_32 != prephitmp_57)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 13>:
  # DEBUG D#94 => &stdVector_5(D)->D.165613._M_impl
  # DEBUG __t => &D.165670
  # DEBUG __t => NULL
  # DEBUG D#50 => D#94
  # DEBUG __p => D#104
  # DEBUG __a => D#50
  # DEBUG D#49 => D#51
  # DEBUG __args#0 => D#49
  # DEBUG D#48 => D#50
  # DEBUG __t => D#49
  # DEBUG __t => NULL
  # DEBUG D#46 => D#48
  # DEBUG __p => D#104
  # DEBUG this => D#46
  # DEBUG D#45 => D#47
  # DEBUG __args#0 => D#45
  # DEBUG __t => D#45
  # DEBUG __t => NULL
  # DEBUG D#1 => 4
  # DEBUG __p => D#104
  # DEBUG D.210981 => D#1
  # DEBUG __p => NULL
  if (prephitmp_57 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  *prephitmp_57 = _17;

  <bb 15>:
  # DEBUG __p => NULL
  # DEBUG __p => NULL
  _56 = prephitmp_57 + 4;
  stdVector_5(D)->D.165613._M_impl._M_finish = _56;
  goto <bb 18>;

  <bb 16>:
  # DEBUG __t => &D.165670
  # DEBUG __t => NULL
  std::vector<int>::_M_emplace_back_aux<int> (stdVector_5(D), &D.165670);
  goto <bb 18>;

<L8>:
  goto <bb 21> (<L5>);

  <bb 18>:
  # DEBUG this => NULL
  # DEBUG __args#0 => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  D.165670 ={v} {CLOBBER};
  i_12 = i_64 + 1;
  # DEBUG i => i_12
  # DEBUG i => i_12
  # DEBUG this => fVector_6(D)
  _7 = fVector_6(D)->length_;
  # DEBUG t => _7
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_7 > i_12)
    goto <bb 19>;
  else
    goto <bb 5>;

  <bb 19>:
  pretmp_60 = stdVector_5(D)->D.165613._M_impl._M_finish;
  pretmp_19 = stdVector_5(D)->D.165613._M_impl._M_end_of_storage;
  goto <bb 12>;

<L6>:

<L5>:
  # DEBUG __n => NULL
  # DEBUG __n => NULL
  D.165670 ={v} {CLOBBER};
  # DEBUG this => stdVector_5(D)
  _18 = stdVector_5(D)->D.165613._M_impl._M_start;
  # DEBUG D#44 => stdVector_5(D)->D.165613._M_impl._M_finish
  # DEBUG D#42 => &stdVector_5(D)->D.165613
  # DEBUG this => D#42
  # DEBUG this => NULL
  # DEBUG __first => _18
  # DEBUG __last => D#44
  # DEBUG D.211680 => NULL
  # DEBUG D#20 => _18
  # DEBUG D#21 => D#44
  # DEBUG __first => D#20
  # DEBUG __last => D#21
  # DEBUG D#19 => D#21
  # DEBUG D#18 => D#20
  # DEBUG D#16 => D#18
  # DEBUG D#17 => D#19
  # DEBUG D.210871 => D#16
  # DEBUG D.210870 => D#17
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D.211680 => NULL
  # DEBUG D#43 => &stdVector_5(D)->D.165613
  # DEBUG this => D#43
  # DEBUG D#41 => D#43->_M_impl._M_end_of_storage
  # DEBUG D#40 => (int) D#41
  # DEBUG D#39 => (int) _18
  # DEBUG D#38 => D#40 - D#39
  # DEBUG D#37 => D#38 /[ex] 4
  # DEBUG D#36 => (unsigned int) D#37
  # DEBUG this => D#43
  # DEBUG __p => _18
  # DEBUG __n => D#36
  if (_18 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG D#34 => &D#43->_M_impl
  # DEBUG D#32 => D#34
  # DEBUG D#33 => D#36
  # DEBUG __p => _18
  # DEBUG __a => D#32
  # DEBUG __n => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG D#28 => D#30
  # DEBUG D#29 => D#31
  # DEBUG __p => _18
  # DEBUG this => D#28
  # DEBUG D.211692 => D#29
  operator delete (_18);
  # DEBUG __p => NULL

  <bb 23>:
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __n => NULL
  # DEBUG D#35 => &D#43->_M_impl
  # DEBUG this => D#35
  # DEBUG this => D#35
  # DEBUG this => D#35
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  resx 1

}



;; Function void tflite::PrintInterpreterState(tflite::MicroInterpreter*) (_ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE, funcdef_no=6563, decl_uid=164508, cgraph_uid=3567, symbol_order=3599)


Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:122
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:122:3: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:122:3: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:122:3: note: not vectorized: multiple nested loops.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:122:3: note: bad loop form.

Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: === vect_analyze_loop_form ===
split exit edge.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: === get_loop_niters ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: not vectorized: number of iterations cannot be computed.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: bad loop form.

Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: === vect_analyze_loop_form ===
split exit edge.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: === get_loop_niters ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: not vectorized: number of iterations cannot be computed.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: bad loop form.

Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:111
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:111:3: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:111:3: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:111:3: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:111:3: note: bad loop form.

Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: === vect_analyze_loop_form ===
split exit edge.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: === get_loop_niters ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: not vectorized: number of iterations cannot be computed.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:50:21: note: bad loop form.

Analyzing loop at c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_iterator.h:880
c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_iterator.h:880:27: note: ===== analyze_loop_nest =====
c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_iterator.h:880:27: note: === vect_analyze_loop_form ===
c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_iterator.h:880:27: note: not vectorized: control flow in loop.
c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_iterator.h:880:27: note: bad loop form.

Analyzing loop at c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_iterator.h:880
c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_iterator.h:880:27: note: ===== analyze_loop_nest =====
c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_iterator.h:880:27: note: === vect_analyze_loop_form ===
c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_iterator.h:880:27: note: not vectorized: control flow in loop.
c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_iterator.h:880:27: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp:102:6: note: vectorized 0 loops in function.
void tflite::PrintInterpreterState(tflite::MicroInterpreter*) (struct MicroInterpreter * interpreter)
{
  int k;
  int k;
  int k;
  const int * SR.72;
  const int * SR.72;
  const struct TfLiteRegistration * const node_and_reg$registration;
  struct TfLiteIntArray * const node_and_reg$outputs;
  struct TfLiteIntArray * const node_and_reg$inputs;
  static const char * const names[127] = {"ADD", "AVERAGE_POOL_2D", "CONCATENATION", "CONV_2D", "DEPTHWISE_CONV_2D", "DEPTH_TO_SPACE", "DEQUANTIZE", "EMBEDDING_LOOKUP", "FLOOR", "FULLY_CONNECTED", "HASHTABLE_LOOKUP", "L2_NORMALIZATION", "L2_POOL_2D", "LOCAL_RESPONSE_NORMALIZATION", "LOGISTIC", "LSH_PROJECTION", "LSTM", "MAX_POOL_2D", "MUL", "RELU", "RELU_N1_TO_1", "RELU6", "RESHAPE", "RESIZE_BILINEAR", "RNN", "SOFTMAX", "SPACE_TO_DEPTH", "SVDF", "TANH", "CONCAT_EMBEDDINGS", "SKIP_GRAM", "CALL", "CUSTOM", "EMBEDDING_LOOKUP_SPARSE", "PAD", "UNIDIRECTIONAL_SEQUENCE_RNN", "GATHER", "BATCH_TO_SPACE_ND", "SPACE_TO_BATCH_ND", "TRANSPOSE", "MEAN", "SUB", "DIV", "SQUEEZE", "UNIDIRECTIONAL_SEQUENCE_LSTM", "STRIDED_SLICE", "BIDIRECTIONAL_SEQUENCE_RNN", "EXP", "TOPK_V2", "SPLIT", "LOG_SOFTMAX", "DELEGATE", "BIDIRECTIONAL_SEQUENCE_LSTM", "CAST", "PRELU", "MAXIMUM", "ARG_MAX", "MINIMUM", "LESS", "NEG", "PADV2", "GREATER", "GREATER_EQUAL", "LESS_EQUAL", "SELECT", "SLICE", "SIN", "TRANSPOSE_CONV", "SPARSE_TO_DENSE", "TILE", "EXPAND_DIMS", "EQUAL", "NOT_EQUAL", "LOG", "SUM", "SQRT", "RSQRT", "SHAPE", "POW", "ARG_MIN", "FAKE_QUANT", "REDUCE_PROD", "REDUCE_MAX", "PACK", "LOGICAL_OR", "ONE_HOT", "LOGICAL_AND", "LOGICAL_NOT", "UNPACK", "REDUCE_MIN", "FLOOR_DIV", "REDUCE_ANY", "SQUARE", "ZEROS_LIKE", "FILL", "FLOOR_MOD", "RANGE", "RESIZE_NEAREST_NEIGHBOR", "LEAKY_RELU", "SQUARED_DIFFERENCE", "MIRROR_PAD", "ABS", "SPLIT_V", "UNIQUE", "CEIL", "REVERSE_V2", "ADD_N", "GATHER_ND", "COS", "WHERE", "RANK", "ELU", "REVERSE_SEQUENCE", "MATRIX_DIAG", "QUANTIZE", "MATRIX_SET_DIAG", "ROUND", "HARD_SWISH", "IF", "WHILE", "NON_MAX_SUPPRESSION_V4", "NON_MAX_SUPPRESSION_V5", "SCATTER_ND", "SELECT_V2", "DENSIFY", "SEGMENT_SUM", 0B};
  unsigned char * p;
  unsigned char * p;
  size_t node_index;
  size_t tensor_index;
  struct vector D.165860;
  struct vector D.165859;
  short unsigned int _8;
  int _10;
  short unsigned int _13;
  const uint8_t * _18;
  sizetype _23;
  struct TfLiteTensor * _26;
  const char * _27;
  TfLiteType _28;
  sizetype _29;
  TfLiteAllocationType _30;
  long int _31;
  unsigned int _32;
  unsigned int _33;
  double _34;
  struct TfLiteIntArray * _36;
  const uint8_t[1] * _40;
  const char * _42;
  long int _44;
  unsigned int _45;
  unsigned int _46;
  const char * const * _47;
  const char * _48;
  unsigned int _57;
  unsigned int _58;
  struct NodeAndRegistration * _59;
  const struct Vector * _60;
  const struct Vector * _61;
  const struct SubGraph * _62;
  const struct SubGraph * _63;
  sizetype _65;
  long unsigned int _67;
  const struct Vector * iftmp.3_68;
  const struct Vector * iftmp.3_69;
  long unsigned int _71;
  const uint8_t[1] * _73;
  long int _74;
  sizetype _75;
  sizetype _76;
  const uint8_t * _77;
  short unsigned int _78;
  int _79;
  short unsigned int _80;
  sizetype _82;
  long unsigned int _84;
  const struct Vector * iftmp.3_85;
  const struct Vector * iftmp.3_86;
  int * _87;
  int * _88;
  const char * _89;
  const char * _90;
  const char * _91;
  const char * _92;
  long unsigned int _93;
  unsigned int _94;
  const struct NodeAndRegistration & _95;
  int * _96;
  int * _97;
  int * _107;
  int * _108;
  int _110;
  const int * _111;
  int * _112;
  int * _113;
  int _115;
  const int * _116;
  int _117;
  int _119;
  const struct Vector * _121;
  int _122;
  int _124;
  long unsigned int _126;
  int _127;
  int _129;
  int _165;
  int _171;
  unsigned int _179;
  signed int _180;
  int _185;

  <bb 2>:
  _57 = MEM[(unsigned int *)interpreter_7(D) + 16B];
  # DEBUG D#2 => interpreter_7(D)
  # DEBUG this => D#2
  _60 = MEM[(const struct Vector * *)interpreter_7(D) + 136B];
  # DEBUG D#4 => interpreter_7(D)
  # DEBUG this => D#4
  # DEBUG this => _60
  _71 = _60->length_;
  # DEBUG t => _71
  # DEBUG t => NULL
  # DEBUG this => NULL
  printf ("Interpreter has %zu tensors and %zu nodes\n", _57, _71);
  printf ("Inputs:");
  _62 = MEM[(const struct SubGraph * *)interpreter_7(D) + 140B];
  # DEBUG D#6 => interpreter_7(D)
  # DEBUG this => D#6
  # DEBUG this => _62
  # DEBUG D#5 => &_62->D.106973
  # DEBUG this => D#5
  # DEBUG field => 6
  # DEBUG this => D#5
  # DEBUG field => 6
  # DEBUG this => D#5
  # DEBUG field => 6
  # DEBUG this => D#5
  _40 = &MEM[(const struct Table *)_62].data_;
  # DEBUG p => _40
  _31 = MEM[(const long int *)_62];
  # DEBUG t => _31
  # DEBUG t => NULL
  # DEBUG p => NULL
  _29 = (sizetype) _31;
  _23 = -_29;
  _18 = _40 + _23;
  # DEBUG this => NULL
  # DEBUG vtable => _18
  # DEBUG p => _18
  _13 = MEM[(const short unsigned int *)_18];
  # DEBUG t => _13
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _13
  _10 = (int) _13;
  if (_10 > 6)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG p => _18 + 6
  _8 = MEM[(const short unsigned int *)_18 + 6B];
  # DEBUG t => _8
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _8
  _65 = (sizetype) _8;
  p_66 = _40 + _65;
  # DEBUG p => p_66
  if (_8 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  # DEBUG p => p_66
  _67 = MEM[(const long unsigned int *)p_66];
  # DEBUG t => _67
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.3_68 = p_66 + _67;

  <bb 5>:
  # iftmp.3_69 = PHI <0B(3), iftmp.3_68(4), 0B(2)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  D.165859 = tflite::{anonymous}::flatbuffersVector2StdVector (iftmp.3_69); [return slot optimization]
  # DEBUG v => &D.165859
  # DEBUG __for_range => &D.165859
  _107 = MEM[(int * *)&D.165859];
  # DEBUG D#10 => &D.165859
  # DEBUG this => D#10
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG SR.72 => _107
  _108 = MEM[(int * *)&D.165859 + 4B];
  # DEBUG D#11 => &D.165859
  # DEBUG this => D#11
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG SR.73 => _108
  # DEBUG SR.72 => _107
  # DEBUG __lhs => &__for_begin
  # DEBUG __rhs => &__for_end
  # DEBUG this => &__for_begin
  # DEBUG this => NULL
  # DEBUG this => &__for_end
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_107 != _108)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  # DEBUG D#14 => {CLOBBER}
  # DEBUG SR.72 => D#14
  # DEBUG D#15 => {CLOBBER}
  # DEBUG SR.73 => D#15
  __builtin_putchar (10);
  goto <bb 12>;

  <bb 7>:

  <bb 8>:
  # SR.72_176 = PHI <_107(7), _111(10)>
  # DEBUG SR.72 => SR.72_176
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => &__for_begin
  # DEBUG this => NULL
  # DEBUG it => NULL
  _110 = *SR.72_176;
  printf (" %d", _110);

  <bb 9>:
  # DEBUG this => &__for_begin
  _111 = SR.72_176 + 4;
  # DEBUG SR.72 => _111
  # DEBUG SR.72 => _111
  # DEBUG __lhs => &__for_begin
  # DEBUG __rhs => &__for_end
  # DEBUG this => &__for_begin
  # DEBUG this => NULL
  # DEBUG this => &__for_end
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_108 != _111)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 10>:
  goto <bb 8>;

<L21>:
  goto <bb 64> (<L9>);

  <bb 12>:
  # DEBUG v => NULL
  # DEBUG SR.72 => NULL
  # DEBUG this => &D.165859
  _87 = D.165859.D.165613._M_impl._M_start;
  # DEBUG D#44 => D.165859.D.165613._M_impl._M_finish
  # DEBUG D#42 => &D.165859.D.165613
  # DEBUG this => D#42
  # DEBUG this => NULL
  # DEBUG __first => _87
  # DEBUG __last => D#44
  # DEBUG D.211746 => NULL
  # DEBUG D#20 => _87
  # DEBUG D#21 => D#44
  # DEBUG __first => D#20
  # DEBUG __last => D#21
  # DEBUG D#19 => D#21
  # DEBUG D#18 => D#20
  # DEBUG D#16 => D#18
  # DEBUG D#17 => D#19
  # DEBUG D.210871 => D#16
  # DEBUG D.210870 => D#17
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D.211746 => NULL
  # DEBUG D#43 => &D.165859.D.165613
  # DEBUG this => D#43
  # DEBUG D#41 => D#43->_M_impl._M_end_of_storage
  # DEBUG D#40 => (int) D#41
  # DEBUG D#39 => (int) _87
  # DEBUG D#38 => D#40 - D#39
  # DEBUG D#37 => D#38 /[ex] 4
  # DEBUG D#36 => (unsigned int) D#37
  # DEBUG this => D#43
  # DEBUG __p => _87
  # DEBUG __n => D#36
  if (_87 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # DEBUG D#34 => &D#43->_M_impl
  # DEBUG D#32 => D#34
  # DEBUG D#33 => D#36
  # DEBUG __p => _87
  # DEBUG __a => D#32
  # DEBUG __n => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG D#28 => D#30
  # DEBUG D#29 => D#31
  # DEBUG __p => _87
  # DEBUG this => D#28
  # DEBUG D.211758 => D#29
  operator delete (_87);
  # DEBUG __p => NULL

  <bb 14>:
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __n => NULL
  # DEBUG D#35 => &D#43->_M_impl
  # DEBUG this => D#35
  # DEBUG this => D#35
  # DEBUG this => D#35
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  D.165859 ={v} {CLOBBER};
  printf ("Outputs:");
  _63 = MEM[(const struct SubGraph * *)interpreter_7(D) + 140B];
  # DEBUG D#8 => interpreter_7(D)
  # DEBUG this => D#8
  # DEBUG this => _63
  # DEBUG D#7 => &_63->D.106973
  # DEBUG this => D#7
  # DEBUG field => 8
  # DEBUG this => D#7
  # DEBUG field => 8
  # DEBUG this => D#7
  # DEBUG field => 8
  # DEBUG this => D#7
  _73 = &MEM[(const struct Table *)_63].data_;
  # DEBUG p => _73
  _74 = MEM[(const long int *)_63];
  # DEBUG t => _74
  # DEBUG t => NULL
  # DEBUG p => NULL
  _75 = (sizetype) _74;
  _76 = -_75;
  _77 = _73 + _76;
  # DEBUG this => NULL
  # DEBUG vtable => _77
  # DEBUG p => _77
  _78 = MEM[(const short unsigned int *)_77];
  # DEBUG t => _78
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG vtsize => _78
  _79 = (int) _78;
  if (_79 > 8)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 15>:
  # DEBUG p => _77 + 8
  _80 = MEM[(const short unsigned int *)_77 + 8B];
  # DEBUG t => _80
  # DEBUG t => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG field_offset => _80
  _82 = (sizetype) _80;
  p_83 = _73 + _82;
  # DEBUG p => p_83
  if (_80 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG p => p_83
  _84 = MEM[(const long unsigned int *)p_83];
  # DEBUG t => _84
  # DEBUG t => NULL
  # DEBUG p => NULL
  iftmp.3_85 = p_83 + _84;

  <bb 17>:
  # iftmp.3_86 = PHI <0B(15), iftmp.3_85(16), 0B(14)>
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG field => NULL
  # DEBUG p => NULL
  # DEBUG this => NULL
  # DEBUG p => NULL
  # DEBUG p => NULL
  D.165860 = tflite::{anonymous}::flatbuffersVector2StdVector (iftmp.3_86); [return slot optimization]
  # DEBUG v => &D.165860
  # DEBUG __for_range => &D.165860
  _112 = MEM[(int * *)&D.165860];
  # DEBUG D#10 => &D.165860
  # DEBUG this => D#10
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG SR.72 => _112
  _113 = MEM[(int * *)&D.165860 + 4B];
  # DEBUG D#11 => &D.165860
  # DEBUG this => D#11
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG SR.73 => _113
  # DEBUG SR.72 => _112
  # DEBUG __lhs => &__for_begin
  # DEBUG __rhs => &__for_end
  # DEBUG this => &__for_begin
  # DEBUG this => NULL
  # DEBUG this => &__for_end
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_112 != _113)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  # DEBUG D#14 => {CLOBBER}
  # DEBUG SR.72 => D#14
  # DEBUG D#15 => {CLOBBER}
  # DEBUG SR.73 => D#15
  __builtin_putchar (10);
  goto <bb 24>;

  <bb 19>:

  <bb 20>:
  # SR.72_167 = PHI <_112(19), _116(22)>
  # DEBUG SR.72 => SR.72_167
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => &__for_begin
  # DEBUG this => NULL
  # DEBUG it => NULL
  _115 = *SR.72_167;
  printf (" %d", _115);

  <bb 21>:
  # DEBUG this => &__for_begin
  _116 = SR.72_167 + 4;
  # DEBUG SR.72 => _116
  # DEBUG SR.72 => _116
  # DEBUG __lhs => &__for_begin
  # DEBUG __rhs => &__for_end
  # DEBUG this => &__for_begin
  # DEBUG this => NULL
  # DEBUG this => &__for_end
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_113 != _116)
    goto <bb 22>;
  else
    goto <bb 18>;

  <bb 22>:
  goto <bb 20>;

<L23>:
  goto <bb 68> (<L10>);

  <bb 24>:
  # DEBUG v => NULL
  # DEBUG SR.72 => NULL
  # DEBUG this => &D.165860
  _88 = D.165860.D.165613._M_impl._M_start;
  # DEBUG D#44 => D.165860.D.165613._M_impl._M_finish
  # DEBUG D#42 => &D.165860.D.165613
  # DEBUG this => D#42
  # DEBUG this => NULL
  # DEBUG __first => _88
  # DEBUG __last => D#44
  # DEBUG D.211766 => NULL
  # DEBUG D#20 => _88
  # DEBUG D#21 => D#44
  # DEBUG __first => D#20
  # DEBUG __last => D#21
  # DEBUG D#19 => D#21
  # DEBUG D#18 => D#20
  # DEBUG D#16 => D#18
  # DEBUG D#17 => D#19
  # DEBUG D.210871 => D#16
  # DEBUG D.210870 => D#17
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D.211766 => NULL
  # DEBUG D#43 => &D.165860.D.165613
  # DEBUG this => D#43
  # DEBUG D#41 => D#43->_M_impl._M_end_of_storage
  # DEBUG D#40 => (int) D#41
  # DEBUG D#39 => (int) _88
  # DEBUG D#38 => D#40 - D#39
  # DEBUG D#37 => D#38 /[ex] 4
  # DEBUG D#36 => (unsigned int) D#37
  # DEBUG this => D#43
  # DEBUG __p => _88
  # DEBUG __n => D#36
  if (_88 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#34 => &D#43->_M_impl
  # DEBUG D#32 => D#34
  # DEBUG D#33 => D#36
  # DEBUG __p => _88
  # DEBUG __a => D#32
  # DEBUG __n => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG D#28 => D#30
  # DEBUG D#29 => D#31
  # DEBUG __p => _88
  # DEBUG this => D#28
  # DEBUG D.211778 => D#29
  operator delete (_88);
  # DEBUG __p => NULL

  <bb 26>:
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __n => NULL
  # DEBUG D#35 => &D#43->_M_impl
  # DEBUG this => D#35
  # DEBUG this => D#35
  # DEBUG this => D#35
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  D.165860 ={v} {CLOBBER};
  __builtin_putchar (10);
  # DEBUG tensor_index => 0
  # DEBUG tensor_index => 0
  _179 = MEM[(unsigned int *)interpreter_7(D) + 16B];
  # DEBUG D#2 => interpreter_7(D)
  # DEBUG this => D#2
  if (_179 != 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  __builtin_putchar (10);
  # DEBUG node_index => 0
  # DEBUG node_index => 0
  _121 = MEM[(const struct Vector * *)interpreter_7(D) + 136B];
  # DEBUG D#4 => interpreter_7(D)
  # DEBUG this => D#4
  # DEBUG this => _121
  _126 = _121->length_;
  # DEBUG t => _126
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (_126 != 0)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 28>:

  <bb 29>:
  # tensor_index_160 = PHI <0(28), tensor_index_38(41)>
  # DEBUG tensor_index => tensor_index_160
  # DEBUG D#2 => interpreter_7(D)
  # DEBUG this => D#2
  _26 = tflite::MicroInterpreter::tensor (interpreter_7(D), tensor_index_160);
  # DEBUG tensor => _26
  _27 = _26->name;
  _28 = _26->type;
  # DEBUG type => _28
  if (_28 <= 10)
    goto <bb 30> (<L17>);
  else
    goto <bb 31> (<L18>);

<L17>:
  _91 = CSWTCH.20[_28];

  # _92 = PHI <"(invalid)"(29), _91(30)>
<L18>:
<L19>:
  # DEBUG type => NULL
  _30 = _26->allocation_type;
  # DEBUG type => _30
  if (_30 <= 4)
    goto <bb 32> (<L13>);
  else
    goto <bb 33> (<L14>);

<L13>:
  _89 = CSWTCH.22[_30];

  # _90 = PHI <"(invalid)"(31), _89(32)>
<L14>:
<L15>:
  # DEBUG type => NULL
  _32 = _26->bytes;
  _33 = _32 >> 20;
  _180 = (signed int) _33;
  _34 = (double) _180;
  printf ("Tensor %3zu %-20s %10s %15s %10zu bytes (%4.1f MB) ", tensor_index_160, _27, _92, _90, _32, _34);
  _36 = _26->dims;
  # DEBUG v => _36
  if (_36 == 0B)
    goto <bb 36>;
  else
    goto <bb 34>;

  <bb 34>:
  # DEBUG k => 0
  _165 = MEM[(const struct TfLiteIntArray *)_36].size;
  if (_165 <= 0)
    goto <bb 35>;
  else
    goto <bb 37>;

  <bb 35>:
  __builtin_putchar (10);
  goto <bb 40>;

  <bb 36>:
  __builtin_puts (&" (null)"[0]);
  goto <bb 40>;

  <bb 37>:

  <bb 38>:
  # k_166 = PHI <0(37), k_120(39)>
  # DEBUG k => k_166
  _119 = MEM[(const struct TfLiteIntArray *)_36].data[k_166];
  printf (" %d", _119);
  k_120 = k_166 + 1;
  # DEBUG k => k_120
  # DEBUG k => k_120
  _117 = MEM[(const struct TfLiteIntArray *)_36].size;
  if (_117 <= k_120)
    goto <bb 73>;
  else
    goto <bb 39>;

  <bb 73>:
  goto <bb 35>;

  <bb 39>:
  goto <bb 38>;

  <bb 40>:
  # DEBUG v => NULL
  # DEBUG k => NULL
  tensor_index_38 = tensor_index_160 + 1;
  # DEBUG tensor_index => tensor_index_38
  # DEBUG tensor_index => tensor_index_38
  _58 = MEM[(unsigned int *)interpreter_7(D) + 16B];
  # DEBUG D#2 => interpreter_7(D)
  # DEBUG this => D#2
  if (tensor_index_38 < _58)
    goto <bb 41>;
  else
    goto <bb 27>;

  <bb 41>:
  goto <bb 29>;

  <bb 42>:
  return;

  <bb 43>:

  <bb 44>:
  # node_index_159 = PHI <0(43), node_index_54(62)>
  # DEBUG node_index => node_index_159
  # DEBUG D#4 => interpreter_7(D)
  # DEBUG this => D#4
  # DEBUG t => NULL
  # DEBUG this => NULL
  _59 = MEM[(struct NodeAndRegistration * *)interpreter_7(D)];
  # DEBUG D#3 => interpreter_7(D)
  # DEBUG node_index => (int) node_index_159
  # DEBUG this => D#3
  _94 = node_index_159 * 40;
  _95 = _59 + _94;
  node_and_reg$inputs_41 = MEM[(const struct NodeAndRegistration &)_95];
  # DEBUG node_and_reg$inputs => node_and_reg$inputs_41
  node_and_reg$outputs_24 = MEM[(const struct NodeAndRegistration &)_95 + 4];
  # DEBUG node_and_reg$outputs => node_and_reg$outputs_24
  node_and_reg$registration_72 = MEM[(const struct NodeAndRegistration &)_95 + 36];
  # DEBUG node_and_reg$registration => node_and_reg$registration_72
  # DEBUG node_index => NULL
  # DEBUG node => &node_and_reg.node
  # DEBUG reg => node_and_reg$registration_72
  _42 = node_and_reg$registration_72->custom_name;
  if (_42 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  printf ("Node %3zu Operator Custom Name %s\n", node_index_159, _42);
  goto <bb 47>;

  <bb 46>:
  _44 = node_and_reg$registration_72->builtin_code;
  _45 = (unsigned int) _44;
  _46 = _45 * 4;
  _47 = &names + _46;
  _48 = *_47;
  printf ("Node %3zu Operator Builtin Code %3ld %s\n", node_index_159, _44, _48);

  <bb 47>:
  printf ("  Inputs:");
  # DEBUG v => node_and_reg$inputs_41
  if (node_and_reg$inputs_41 == 0B)
    goto <bb 50>;
  else
    goto <bb 48>;

  <bb 48>:
  # DEBUG k => 0
  _171 = MEM[(const struct TfLiteIntArray *)node_and_reg$inputs_41].size;
  if (_171 <= 0)
    goto <bb 49>;
  else
    goto <bb 51>;

  <bb 49>:
  __builtin_putchar (10);
  goto <bb 54>;

  <bb 50>:
  __builtin_puts (&" (null)"[0]);
  goto <bb 54>;

  <bb 51>:

  <bb 52>:
  # k_173 = PHI <0(51), k_130(53)>
  # DEBUG k => k_173
  _129 = MEM[(const struct TfLiteIntArray *)node_and_reg$inputs_41].data[k_173];
  printf (" %d", _129);
  k_130 = k_173 + 1;
  # DEBUG k => k_130
  # DEBUG k => k_130
  _127 = MEM[(const struct TfLiteIntArray *)node_and_reg$inputs_41].size;
  if (_127 <= k_130)
    goto <bb 72>;
  else
    goto <bb 53>;

  <bb 72>:
  goto <bb 49>;

  <bb 53>:
  goto <bb 52>;

  <bb 54>:
  # DEBUG v => NULL
  # DEBUG k => NULL
  printf ("  Outputs:");
  # DEBUG v => node_and_reg$outputs_24
  if (node_and_reg$outputs_24 == 0B)
    goto <bb 57>;
  else
    goto <bb 55>;

  <bb 55>:
  # DEBUG k => 0
  _185 = MEM[(const struct TfLiteIntArray *)node_and_reg$outputs_24].size;
  if (_185 <= 0)
    goto <bb 56>;
  else
    goto <bb 58>;

  <bb 56>:
  __builtin_putchar (10);
  goto <bb 61>;

  <bb 57>:
  __builtin_puts (&" (null)"[0]);
  goto <bb 61>;

  <bb 58>:

  <bb 59>:
  # k_168 = PHI <0(58), k_125(60)>
  # DEBUG k => k_168
  _124 = MEM[(const struct TfLiteIntArray *)node_and_reg$outputs_24].data[k_168];
  printf (" %d", _124);
  k_125 = k_168 + 1;
  # DEBUG k => k_125
  # DEBUG k => k_125
  _122 = MEM[(const struct TfLiteIntArray *)node_and_reg$outputs_24].size;
  if (_122 <= k_125)
    goto <bb 71>;
  else
    goto <bb 60>;

  <bb 71>:
  goto <bb 56>;

  <bb 60>:
  goto <bb 59>;

  <bb 61>:
  # DEBUG v => NULL
  # DEBUG k => NULL
  # DEBUG D#95 => {CLOBBER}
  # DEBUG node_and_reg$inputs => D#95
  # DEBUG D#96 => {CLOBBER}
  # DEBUG node_and_reg$outputs => D#96
  # DEBUG D#97 => {CLOBBER}
  # DEBUG node_and_reg$registration => D#97
  node_index_54 = node_index_159 + 1;
  # DEBUG node_index => node_index_54
  # DEBUG node_index => node_index_54
  _61 = MEM[(const struct Vector * *)interpreter_7(D) + 136B];
  # DEBUG D#4 => interpreter_7(D)
  # DEBUG this => D#4
  # DEBUG this => _61
  _93 = _61->length_;
  # DEBUG t => _93
  # DEBUG t => NULL
  # DEBUG this => NULL
  if (node_index_54 < _93)
    goto <bb 62>;
  else
    goto <bb 42>;

  <bb 62>:
  goto <bb 44>;

<L20>:

<L9>:
  # DEBUG this => &D.165859
  _96 = D.165859.D.165613._M_impl._M_start;
  # DEBUG D#44 => D.165859.D.165613._M_impl._M_finish
  # DEBUG D#42 => &D.165859.D.165613
  # DEBUG this => D#42
  # DEBUG this => NULL
  # DEBUG __first => _96
  # DEBUG __last => D#44
  # DEBUG D.211809 => NULL
  # DEBUG D#20 => _96
  # DEBUG D#21 => D#44
  # DEBUG __first => D#20
  # DEBUG __last => D#21
  # DEBUG D#19 => D#21
  # DEBUG D#18 => D#20
  # DEBUG D#16 => D#18
  # DEBUG D#17 => D#19
  # DEBUG D.210871 => D#16
  # DEBUG D.210870 => D#17
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D.211809 => NULL
  # DEBUG D#43 => &D.165859.D.165613
  # DEBUG this => D#43
  # DEBUG D#41 => D#43->_M_impl._M_end_of_storage
  # DEBUG D#40 => (int) D#41
  # DEBUG D#39 => (int) _96
  # DEBUG D#38 => D#40 - D#39
  # DEBUG D#37 => D#38 /[ex] 4
  # DEBUG D#36 => (unsigned int) D#37
  # DEBUG this => D#43
  # DEBUG __p => _96
  # DEBUG __n => D#36
  if (_96 != 0B)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  # DEBUG D#34 => &D#43->_M_impl
  # DEBUG D#32 => D#34
  # DEBUG D#33 => D#36
  # DEBUG __p => _96
  # DEBUG __a => D#32
  # DEBUG __n => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG D#28 => D#30
  # DEBUG D#29 => D#31
  # DEBUG __p => _96
  # DEBUG this => D#28
  # DEBUG D.211821 => D#29
  operator delete (_96);
  # DEBUG __p => NULL

  <bb 66>:
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __n => NULL
  # DEBUG D#35 => &D#43->_M_impl
  # DEBUG this => D#35
  # DEBUG this => D#35
  # DEBUG this => D#35
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  D.165859 ={v} {CLOBBER};
  resx 1

<L22>:

<L10>:
  # DEBUG this => &D.165860
  _97 = D.165860.D.165613._M_impl._M_start;
  # DEBUG D#44 => D.165860.D.165613._M_impl._M_finish
  # DEBUG D#42 => &D.165860.D.165613
  # DEBUG this => D#42
  # DEBUG this => NULL
  # DEBUG __first => _97
  # DEBUG __last => D#44
  # DEBUG D.211829 => NULL
  # DEBUG D#20 => _97
  # DEBUG D#21 => D#44
  # DEBUG __first => D#20
  # DEBUG __last => D#21
  # DEBUG D#19 => D#21
  # DEBUG D#18 => D#20
  # DEBUG D#16 => D#18
  # DEBUG D#17 => D#19
  # DEBUG D.210871 => D#16
  # DEBUG D.210870 => D#17
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D.211829 => NULL
  # DEBUG D#43 => &D.165860.D.165613
  # DEBUG this => D#43
  # DEBUG D#41 => D#43->_M_impl._M_end_of_storage
  # DEBUG D#40 => (int) D#41
  # DEBUG D#39 => (int) _97
  # DEBUG D#38 => D#40 - D#39
  # DEBUG D#37 => D#38 /[ex] 4
  # DEBUG D#36 => (unsigned int) D#37
  # DEBUG this => D#43
  # DEBUG __p => _97
  # DEBUG __n => D#36
  if (_97 != 0B)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG D#34 => &D#43->_M_impl
  # DEBUG D#32 => D#34
  # DEBUG D#33 => D#36
  # DEBUG __p => _97
  # DEBUG __a => D#32
  # DEBUG __n => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG D#28 => D#30
  # DEBUG D#29 => D#31
  # DEBUG __p => _97
  # DEBUG this => D#28
  # DEBUG D.211841 => D#29
  operator delete (_97);
  # DEBUG __p => NULL

  <bb 70>:
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __n => NULL
  # DEBUG D#35 => &D#43->_M_impl
  # DEBUG this => D#35
  # DEBUG this => D#35
  # DEBUG this => D#35
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  D.165860 ={v} {CLOBBER};
  resx 3

}


