
;; Function virtual int tflite::MicroErrorReporter::Report(const char*, va_list) (_ZN6tflite18MicroErrorReporter6ReportEPKcSt9__va_list, funcdef_no=9, decl_uid=5630, cgraph_uid=9, symbol_order=9)


Analyzing loop at ../src/tensorflow_lite/src/tensorflow/lite/micro/micro_error_reporter.cpp:25
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_error_reporter.cpp:25:19: note: ===== analyze_loop_nest =====
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_error_reporter.cpp:25:19: note: === vect_analyze_loop_form ===
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_error_reporter.cpp:25:19: note: not vectorized: control flow in loop.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_error_reporter.cpp:25:19: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/micro_error_reporter.cpp:63:5: note: vectorized 0 loops in function.
virtual int tflite::MicroErrorReporter::Report(const char*, va_list) (struct MicroErrorReporter * const this, const char * format, struct va_list args)
{
  void * args$__ap;
  void * D.5763;
  void * D.5764;
  void * D.5761;
  void * D.5762;
  void * D.5759;
  void * D.5760;
  char output_cache[65];
  int output_cache_index;
  const char * current;
  const char next;
  struct va_list args;
  char _5;
  bool _7;
  bool _8;
  bool _9;
  int _12;
  char * _13;
  double _14;
  float _15;
  char _32;
  char _43;
  bool _62;
  bool _63;

  <bb 2>:
  # DEBUG format => format_2(D)
  args$__ap_11 = MEM[(struct  *)&args];
  # DEBUG args$__ap => args$__ap_11
  # DEBUG output_cache_size => 64
  # DEBUG output_cache_index => 0
  # DEBUG current => format_2(D)
  # DEBUG current => format_2(D)
  # DEBUG output_cache_index => 0
  _32 = *format_2(D);
  if (_32 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 21>;

  <bb 4>:

  <bb 5>:
  # current_30 = PHI <format_2(D)(4), current_19(18)>
  # _43 = PHI <_32(4), _5(18)>
  # output_cache_index_54 = PHI <0(4), output_cache_index_20(18)>
  # args$__ap_22 = PHI <args$__ap_11(4), args$__ap_4(18)>
  # DEBUG args$__ap => args$__ap_22
  # DEBUG current => current_30
  # DEBUG output_cache_index => output_cache_index_54
  if (_43 == 37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  next_6 = MEM[(const char *)current_30 + 1B];
  # DEBUG next => next_6
  _7 = next_6 == 100;
  _8 = next_6 == 115;
  _9 = _7 | _8;
  _62 = next_6 == 102;
  _63 = _9 | _62;
  if (_63 != 0)
    goto <bb 7>;
  else
    goto <bb 15>;

  <bb 7>:
  current_10 = current_30 + 1;
  # DEBUG current => current_10
  if (output_cache_index_54 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  output_cache[output_cache_index_54] = 0;
  DebugLog (&output_cache);

  <bb 9>:
  # DEBUG output_cache_index => 0
  if (next_6 == 100)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _59 = args$__ap_22 + 4;
  # DEBUG args$__ap => _59
  _12 = MEM[(int *)args$__ap_22];
  DebugLogInt32 (_12);
  # DEBUG current => current_10
  # DEBUG output_cache_index => 0
  goto <bb 17>;

  <bb 11>:
  if (_9 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _57 = args$__ap_22 + 4;
  # DEBUG args$__ap => _57
  _13 = MEM[(char * *)args$__ap_22];
  DebugLog (_13);
  # DEBUG current => current_10
  # DEBUG output_cache_index => 0
  goto <bb 17>;

  <bb 13>:
  _64 = args$__ap_22 + 7;
  _67 = _64 & 4294967288B;
  _58 = _67 + 8;
  # DEBUG args$__ap => _58
  _14 = MEM[(double *)_67];
  _15 = (float) _14;
  DebugLogFloat (_15);
  # DEBUG current => current_10
  # DEBUG output_cache_index => 0
  goto <bb 17>;

  <bb 14>:
  output_cache[output_cache_index_54] = _43;
  output_cache_index_16 = output_cache_index_54 + 1;
  # DEBUG output_cache_index => output_cache_index_16

  <bb 15>:
  # output_cache_index_17 = PHI <output_cache_index_54(6), output_cache_index_16(14)>
  # DEBUG current => current_30
  # DEBUG output_cache_index => output_cache_index_17
  if (output_cache_index_17 > 63)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  output_cache[output_cache_index_17] = 0;
  DebugLog (&output_cache);

  <bb 17>:
  # output_cache_index_20 = PHI <0(10), 0(16), output_cache_index_17(15), 0(12), 0(13)>
  # current_68 = PHI <current_10(10), current_30(16), current_30(15), current_10(12), current_10(13)>
  # args$__ap_4 = PHI <_59(10), args$__ap_22(16), args$__ap_22(15), _57(12), _58(13)>
  # DEBUG args$__ap => args$__ap_4
  # DEBUG output_cache_index => output_cache_index_20
  current_19 = current_68 + 1;
  # DEBUG current => current_19
  # DEBUG current => current_19
  # DEBUG output_cache_index => output_cache_index_20
  _5 = MEM[(const char *)current_68 + 1B];
  if (_5 == 0)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 5>;

  <bb 19>:
  # output_cache_index_65 = PHI <output_cache_index_20(17)>
  if (output_cache_index_65 != 0)
    goto <bb 20>;
  else
    goto <bb 3>;

  <bb 20>:
  output_cache[output_cache_index_65] = 0;
  DebugLog (&output_cache);

  <bb 21>:
  DebugLog ("\r\n");
  output_cache ={v} {CLOBBER};
  # DEBUG format => NULL
  # DEBUG next => NULL
  # DEBUG current => NULL
  # DEBUG output_cache_index => NULL
  return 0;

}


