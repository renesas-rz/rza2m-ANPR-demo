
;; Function const TfLiteRegistration* tflite::MicroOpResolver<tOpCount>::FindOp(tflite::BuiltinOperator, int) const [with unsigned int tOpCount = 128u] (_ZNK6tflite15MicroOpResolverILj128EE6FindOpENS_15BuiltinOperatorEi, funcdef_no=9537, decl_uid=158513, cgraph_uid=6798, symbol_order=7599)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:38
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:38:64: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:38:64: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:38:64: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:38:64: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:35:29: note: vectorized 0 loops in function.
const TfLiteRegistration* tflite::MicroOpResolver<tOpCount>::FindOp(tflite::BuiltinOperator, int) const [with unsigned int tOpCount = 128u] (const struct MicroOpResolver * const this, BuiltinOperator op, int version)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  sizetype _1;
  const struct TfLiteRegistration * _2;
  sizetype _5;
  long int _7;
  int _11;
  unsigned int _14;
  long int _19;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0
  _14 = this_4(D)->registrations_len_;
  if (_14 == 0)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:
  _19 = (long int) op_8(D);

  <bb 4>:
  # i_15 = PHI <0(3), i_10(8)>
  # DEBUG i => i_15
  # DEBUG D#11 => i_15 * 32
  # DEBUG D#10 => D#11 + 4
  # DEBUG registration => this_4(D) + D#10
  _7 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_15].builtin_code;
  if (_7 == _19)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  _11 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_15].version;
  if (_11 == version_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # i_21 = PHI <i_15(5)>
  _5 = i_21 * 32;
  _1 = _5 + 4;
  registration_6 = this_4(D) + _1;
  goto <bb 9>;

  <bb 7>:
  i_10 = i_15 + 1;
  # DEBUG i => i_10
  # DEBUG i => i_10
  if (i_10 >= _14)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 4>;

  <bb 9>:
  # _2 = PHI <registration_6(6), 0B(7), 0B(2)>
  return _2;

}



;; Function const TfLiteRegistration* tflite::MicroOpResolver<tOpCount>::FindOp(const char*, int) const [with unsigned int tOpCount = 128u] (_ZNK6tflite15MicroOpResolverILj128EE6FindOpEPKci, funcdef_no=9538, decl_uid=158517, cgraph_uid=6799, symbol_order=7600)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:49
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:49:64: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:49:64: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:49:64: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:49:64: note: bad loop form.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:47:29: note: vectorized 0 loops in function.
const TfLiteRegistration* tflite::MicroOpResolver<tOpCount>::FindOp(const char*, int) const [with unsigned int tOpCount = 128u] (const struct MicroOpResolver * const this, const char * op, int version)
{
  const struct TfLiteRegistration & registration;
  unsigned int i;
  sizetype _1;
  const struct TfLiteRegistration * _2;
  sizetype _5;
  long int _7;
  const char * _9;
  int _11;
  int _12;
  unsigned int _15;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0
  _15 = this_4(D)->registrations_len_;
  if (_15 == 0)
    goto <bb 10>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # i_16 = PHI <0(3), i_8(9)>
  # DEBUG i => i_16
  # DEBUG D#13 => i_16 * 32
  # DEBUG D#12 => D#13 + 4
  # DEBUG registration => this_4(D) + D#12
  _7 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_16].builtin_code;
  if (_7 == 32)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  _9 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_16].custom_name;
  _11 = strcmp (_9, op_10(D));
  if (_11 == 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  _12 = MEM[(const struct TfLiteRegistration &)this_4(D)].registrations_[i_16].version;
  if (_12 == version_13(D))
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # i_23 = PHI <i_16(6)>
  _5 = i_23 * 32;
  _1 = _5 + 4;
  registration_6 = this_4(D) + _1;
  goto <bb 10>;

  <bb 8>:
  i_8 = i_16 + 1;
  # DEBUG i => i_8
  # DEBUG i => i_8
  if (i_8 >= _15)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # _2 = PHI <registration_6(7), 0B(8), 0B(2)>
  return _2;

}



;; Function tflite::ops::micro::AllOpsResolver::AllOpsResolver() (_ZN6tflite3ops5micro14AllOpsResolverC2Ev, funcdef_no=6011, decl_uid=158601, cgraph_uid=3272, symbol_order=3304)


Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.

Analyzing loop at C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: ===== analyze_loop_nest =====
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: === vect_analyze_loop_form ===
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: not vectorized: control flow in loop.
C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro/micro_mutable_op_resolver.h:62:7: note: bad loop form.
../src/tensorflow_lite/src/tensorflow/lite/micro/kernels/all_ops_resolver.cpp:23:1: note: vectorized 0 loops in function.
tflite::ops::micro::AllOpsResolver::AllOpsResolver() (struct AllOpsResolver * const this)
{
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  int version;
  struct TfLiteRegistration * _7;
  struct TfLiteRegistration * _10;
  struct TfLiteRegistration * _13;
  unsigned int _14;
  struct TfLiteRegistration * _16;
  struct _reent * _impure_ptr.0_17;
  struct TfLiteRegistration * _19;
  struct __FILE * _20;
  struct TfLiteRegistration * _22;
  struct TfLiteRegistration * _25;
  struct _reent * _impure_ptr.0_26;
  struct TfLiteRegistration * _28;
  struct __FILE * _29;
  struct TfLiteRegistration * _31;
  struct TfLiteRegistration * _34;
  unsigned int _35;
  struct TfLiteRegistration * _37;
  unsigned int _38;
  struct TfLiteRegistration * _40;
  struct TfLiteRegistration * _43;
  struct TfLiteRegistration * _46;
  struct TfLiteRegistration * _49;
  struct TfLiteRegistration * _52;
  struct TfLiteRegistration * _55;
  struct TfLiteRegistration * _58;
  struct TfLiteRegistration * _61;
  unsigned int _62;
  struct TfLiteRegistration * _64;
  struct _reent * _impure_ptr.0_65;
  struct TfLiteRegistration * _67;
  struct __FILE * _68;
  struct TfLiteRegistration * _70;
  struct TfLiteRegistration * _73;
  struct _reent * _impure_ptr.0_74;
  struct TfLiteRegistration * _76;
  struct __FILE * _77;
  struct TfLiteRegistration * _79;
  struct TfLiteRegistration * _82;
  unsigned int _83;
  struct TfLiteRegistration * _85;
  unsigned int _86;
  struct TfLiteRegistration * _88;
  struct TfLiteRegistration * _91;
  struct TfLiteRegistration * _94;
  struct TfLiteRegistration * _97;
  struct TfLiteRegistration * _100;
  struct TfLiteRegistration * _103;
  struct TfLiteRegistration * _106;
  struct TfLiteRegistration * _109;
  unsigned int _110;
  struct TfLiteRegistration * _112;
  struct _reent * _impure_ptr.0_113;
  struct TfLiteRegistration * _115;
  struct __FILE * _116;
  struct TfLiteRegistration * _118;
  struct TfLiteRegistration * _121;
  struct _reent * _impure_ptr.0_122;
  struct TfLiteRegistration * _124;
  struct __FILE * _125;
  struct TfLiteRegistration * _127;
  struct TfLiteRegistration * _130;
  unsigned int _131;
  struct TfLiteRegistration * _133;
  unsigned int _134;
  struct TfLiteRegistration * _136;
  struct TfLiteRegistration * _139;
  struct TfLiteRegistration * _142;
  struct TfLiteRegistration * _145;
  struct TfLiteRegistration * _148;
  struct _reent * _impure_ptr.0_153;
  struct __FILE * _154;
  struct _reent * _impure_ptr.0_155;
  struct __FILE * _156;
  struct _reent * _impure_ptr.0_167;
  struct __FILE * _168;
  struct _reent * _impure_ptr.0_169;
  struct __FILE * _170;
  unsigned int pretmp_178;
  unsigned int ivtmp_180;
  struct _reent * _impure_ptr.0_181;
  struct __FILE * _182;
  struct _reent * _impure_ptr.0_183;
  struct __FILE * _184;
  unsigned int prephitmp_185;
  unsigned int ivtmp_186;
  unsigned int ivtmp_187;
  unsigned int prephitmp_188;
  unsigned int pretmp_189;
  unsigned int ivtmp_190;
  unsigned int prephitmp_192;
  unsigned int ivtmp_193;
  unsigned int ivtmp_194;
  struct _reent * _impure_ptr.0_195;
  struct __FILE * _196;
  struct _reent * _impure_ptr.0_197;
  struct __FILE * _198;
  struct _reent * _impure_ptr.0_199;
  struct __FILE * _200;
  struct _reent * _impure_ptr.0_201;
  struct __FILE * _202;
  unsigned int _203;
  unsigned int _204;
  unsigned int ivtmp_208;
  struct _reent * _impure_ptr.0_209;
  struct __FILE * _210;
  struct _reent * _impure_ptr.0_211;
  struct __FILE * _212;
  unsigned int pretmp_213;
  unsigned int pretmp_214;
  unsigned int pretmp_215;
  unsigned int pretmp_216;
  unsigned int prephitmp_217;
  unsigned int pretmp_218;
  unsigned int pretmp_220;
  unsigned int ivtmp_221;
  unsigned int ivtmp_222;
  struct _reent * _impure_ptr.0_223;
  struct __FILE * _224;
  struct _reent * _impure_ptr.0_225;
  struct __FILE * _226;
  struct _reent * _impure_ptr.0_227;
  struct __FILE * _228;
  struct _reent * _impure_ptr.0_229;
  struct __FILE * _230;
  unsigned int _231;
  unsigned int _232;
  unsigned int _233;
  unsigned int ivtmp_235;
  unsigned int ivtmp_236;
  struct _reent * _impure_ptr.0_237;
  struct __FILE * _238;
  struct _reent * _impure_ptr.0_239;
  struct __FILE * _240;
  struct _reent * _impure_ptr.0_241;
  struct __FILE * _242;
  struct _reent * _impure_ptr.0_243;
  struct __FILE * _244;
  unsigned int _245;
  unsigned int _246;
  unsigned int _247;
  unsigned int pretmp_250;
  struct _reent * _impure_ptr.0_251;
  struct __FILE * _252;
  struct _reent * _impure_ptr.0_253;
  struct __FILE * _254;
  unsigned int prephitmp_255;
  unsigned int pretmp_256;
  unsigned int pretmp_257;
  unsigned int prephitmp_258;
  unsigned int pretmp_259;
  unsigned int pretmp_260;
  unsigned int ivtmp_263;
  unsigned int ivtmp_264;
  struct _reent * _impure_ptr.0_265;
  struct __FILE * _266;
  struct _reent * _impure_ptr.0_267;
  struct __FILE * _268;
  struct _reent * _impure_ptr.0_269;
  struct __FILE * _270;
  struct _reent * _impure_ptr.0_271;
  struct __FILE * _272;
  unsigned int _273;
  unsigned int _274;
  struct __FILE * _275;
  unsigned int ivtmp_277;
  unsigned int ivtmp_278;
  struct _reent * _impure_ptr.0_279;
  struct __FILE * _280;
  struct _reent * _impure_ptr.0_281;
  struct __FILE * _282;
  struct _reent * _impure_ptr.0_283;
  struct __FILE * _284;
  struct _reent * _impure_ptr.0_285;
  struct __FILE * _286;
  unsigned int _287;
  unsigned int _288;
  struct _reent * _impure_ptr.0_289;
  unsigned int ivtmp_291;
  unsigned int ivtmp_292;
  struct _reent * _impure_ptr.0_293;
  struct __FILE * _294;
  struct _reent * _impure_ptr.0_295;
  struct __FILE * _296;
  struct _reent * _impure_ptr.0_297;
  struct __FILE * _298;
  struct _reent * _impure_ptr.0_299;
  struct __FILE * _300;
  unsigned int _301;
  unsigned int _302;
  unsigned int ivtmp_305;
  unsigned int ivtmp_306;
  struct _reent * _impure_ptr.0_307;
  struct __FILE * _308;
  struct _reent * _impure_ptr.0_309;
  struct __FILE * _310;
  struct _reent * _impure_ptr.0_311;
  struct __FILE * _312;
  struct _reent * _impure_ptr.0_313;
  struct __FILE * _314;
  unsigned int _315;
  unsigned int _316;
  struct __FILE * _317;
  unsigned int ivtmp_319;
  unsigned int ivtmp_320;
  struct _reent * _impure_ptr.0_321;
  struct __FILE * _322;
  struct _reent * _impure_ptr.0_323;
  struct __FILE * _324;
  struct _reent * _impure_ptr.0_325;
  struct __FILE * _326;
  struct _reent * _impure_ptr.0_327;
  struct __FILE * _328;
  unsigned int _329;
  unsigned int _330;
  struct _reent * _impure_ptr.0_331;
  struct _reent * _impure_ptr.0_335;
  struct __FILE * _336;
  struct _reent * _impure_ptr.0_337;
  struct __FILE * _338;
  unsigned int _345;
  struct _reent * _impure_ptr.0_349;
  struct __FILE * _350;
  struct _reent * _impure_ptr.0_351;
  struct __FILE * _352;
  struct _reent * _impure_ptr.0_363;
  struct __FILE * _364;
  struct _reent * _impure_ptr.0_365;
  struct __FILE * _366;
  unsigned int ivtmp_375;
  unsigned int ivtmp_376;
  struct _reent * _impure_ptr.0_377;
  struct __FILE * _378;
  struct _reent * _impure_ptr.0_379;
  struct __FILE * _380;
  struct _reent * _impure_ptr.0_381;
  struct __FILE * _382;
  struct _reent * _impure_ptr.0_383;
  struct __FILE * _384;
  unsigned int _385;
  unsigned int _386;
  unsigned int ivtmp_389;
  unsigned int ivtmp_390;
  struct _reent * _impure_ptr.0_391;
  struct __FILE * _392;
  struct _reent * _impure_ptr.0_393;
  struct __FILE * _394;
  struct _reent * _impure_ptr.0_395;
  struct __FILE * _396;
  struct _reent * _impure_ptr.0_397;
  struct __FILE * _398;
  unsigned int _399;
  unsigned int _400;
  unsigned int ivtmp_403;
  unsigned int ivtmp_404;
  struct _reent * _impure_ptr.0_405;
  struct __FILE * _406;
  struct _reent * _impure_ptr.0_407;
  struct __FILE * _408;
  struct _reent * _impure_ptr.0_409;
  struct __FILE * _410;
  struct _reent * _impure_ptr.0_411;
  struct __FILE * _412;
  unsigned int _413;
  unsigned int _414;
  unsigned int prephitmp_417;
  unsigned int ivtmp_418;
  struct _reent * _impure_ptr.0_419;
  struct __FILE * _420;
  struct _reent * _impure_ptr.0_421;
  struct __FILE * _422;
  struct _reent * _impure_ptr.0_423;
  struct __FILE * _424;
  struct _reent * _impure_ptr.0_425;
  struct __FILE * _426;
  unsigned int _427;
  unsigned int _428;
  unsigned int prephitmp_431;
  unsigned int ivtmp_432;
  struct _reent * _impure_ptr.0_433;
  struct __FILE * _434;
  struct _reent * _impure_ptr.0_435;
  struct __FILE * _436;
  struct _reent * _impure_ptr.0_437;
  struct __FILE * _438;
  struct _reent * _impure_ptr.0_439;
  struct __FILE * _440;
  unsigned int _441;
  unsigned int _442;
  unsigned int prephitmp_445;
  unsigned int ivtmp_446;
  struct _reent * _impure_ptr.0_447;
  struct __FILE * _448;
  struct _reent * _impure_ptr.0_449;
  struct __FILE * _450;
  struct _reent * _impure_ptr.0_451;
  struct __FILE * _452;
  struct _reent * _impure_ptr.0_453;
  struct __FILE * _454;
  unsigned int _455;
  unsigned int _456;
  unsigned int _457;
  struct _reent * _impure_ptr.0_461;
  struct __FILE * _462;
  struct _reent * _impure_ptr.0_463;
  struct __FILE * _464;
  unsigned int _471;
  struct _reent * _impure_ptr.0_475;
  struct __FILE * _476;
  struct _reent * _impure_ptr.0_477;
  struct __FILE * _478;
  struct _reent * _impure_ptr.0_489;
  struct __FILE * _490;
  struct _reent * _impure_ptr.0_491;
  struct __FILE * _492;
  struct __FILE * _499;
  struct _reent * _impure_ptr.0_503;
  struct __FILE * _504;
  struct _reent * _impure_ptr.0_505;
  struct __FILE * _506;
  struct _reent * _impure_ptr.0_513;
  struct _reent * _impure_ptr.0_517;
  struct __FILE * _518;
  struct _reent * _impure_ptr.0_519;
  struct __FILE * _520;
  struct _reent * _impure_ptr.0_531;
  struct __FILE * _532;
  struct _reent * _impure_ptr.0_533;
  struct __FILE * _534;
  struct __FILE * _541;
  struct _reent * _impure_ptr.0_545;
  struct __FILE * _546;
  struct _reent * _impure_ptr.0_547;
  struct __FILE * _548;
  struct _reent * _impure_ptr.0_555;
  struct _reent * _impure_ptr.0_559;
  struct __FILE * _560;
  struct _reent * _impure_ptr.0_561;
  struct __FILE * _562;
  unsigned int _569;
  struct _reent * _impure_ptr.0_573;
  struct __FILE * _574;
  struct _reent * _impure_ptr.0_575;
  struct __FILE * _576;
  struct _reent * _impure_ptr.0_587;
  struct __FILE * _588;
  struct _reent * _impure_ptr.0_589;
  struct __FILE * _590;
  struct _reent * _impure_ptr.0_601;
  struct __FILE * _602;
  struct _reent * _impure_ptr.0_603;
  struct __FILE * _604;
  struct _reent * _impure_ptr.0_615;
  struct __FILE * _616;
  struct _reent * _impure_ptr.0_617;
  struct __FILE * _618;
  struct _reent * _impure_ptr.0_629;
  struct __FILE * _630;
  struct _reent * _impure_ptr.0_631;
  struct __FILE * _632;
  struct _reent * _impure_ptr.0_643;
  struct __FILE * _644;
  struct _reent * _impure_ptr.0_645;
  struct __FILE * _646;
  struct _reent * _impure_ptr.0_657;
  struct __FILE * _658;
  struct _reent * _impure_ptr.0_659;
  struct __FILE * _660;
  struct _reent * _impure_ptr.0_671;
  struct __FILE * _672;
  struct _reent * _impure_ptr.0_673;
  struct __FILE * _674;
  unsigned int _681;
  struct _reent * _impure_ptr.0_685;
  struct __FILE * _686;
  struct _reent * _impure_ptr.0_687;
  struct __FILE * _688;
  unsigned int _695;
  unsigned int prephitmp_697;
  unsigned int ivtmp_698;
  struct _reent * _impure_ptr.0_699;
  struct __FILE * _700;
  struct _reent * _impure_ptr.0_701;
  struct __FILE * _702;
  struct _reent * _impure_ptr.0_703;
  struct __FILE * _704;
  struct _reent * _impure_ptr.0_705;
  struct __FILE * _706;
  unsigned int _707;
  unsigned int _708;
  unsigned int prephitmp_711;
  unsigned int ivtmp_712;
  struct _reent * _impure_ptr.0_713;
  struct __FILE * _714;
  struct _reent * _impure_ptr.0_715;
  struct __FILE * _716;
  struct _reent * _impure_ptr.0_717;
  struct __FILE * _718;
  struct _reent * _impure_ptr.0_719;
  struct __FILE * _720;
  unsigned int _721;
  unsigned int _722;
  struct __FILE * _723;
  unsigned int prephitmp_725;
  unsigned int ivtmp_726;
  struct _reent * _impure_ptr.0_727;
  struct __FILE * _728;
  struct _reent * _impure_ptr.0_729;
  struct __FILE * _730;
  struct _reent * _impure_ptr.0_731;
  struct __FILE * _732;
  struct _reent * _impure_ptr.0_733;
  struct __FILE * _734;
  unsigned int _735;
  unsigned int _736;
  struct _reent * _impure_ptr.0_737;
  unsigned int prephitmp_739;
  unsigned int ivtmp_740;
  struct _reent * _impure_ptr.0_741;
  struct __FILE * _742;
  struct _reent * _impure_ptr.0_743;
  struct __FILE * _744;
  struct _reent * _impure_ptr.0_745;
  struct __FILE * _746;
  struct _reent * _impure_ptr.0_747;
  struct __FILE * _748;
  unsigned int _749;
  unsigned int _750;
  unsigned int prephitmp_753;
  unsigned int ivtmp_754;
  struct _reent * _impure_ptr.0_755;
  struct __FILE * _756;
  struct _reent * _impure_ptr.0_757;
  struct __FILE * _758;
  struct _reent * _impure_ptr.0_759;
  struct __FILE * _760;
  struct _reent * _impure_ptr.0_761;
  struct __FILE * _762;
  unsigned int _763;
  unsigned int _764;
  struct __FILE * _765;
  struct _reent * _impure_ptr.0_769;
  struct __FILE * _770;
  struct _reent * _impure_ptr.0_771;
  struct __FILE * _772;
  struct _reent * _impure_ptr.0_779;
  unsigned int prephitmp_781;
  unsigned int ivtmp_782;
  struct _reent * _impure_ptr.0_783;
  struct __FILE * _784;
  struct _reent * _impure_ptr.0_785;
  struct __FILE * _786;
  struct _reent * _impure_ptr.0_787;
  struct __FILE * _788;
  struct _reent * _impure_ptr.0_789;
  struct __FILE * _790;
  unsigned int _791;
  unsigned int _792;
  unsigned int _793;
  struct _reent * _impure_ptr.0_797;
  struct __FILE * _798;
  struct _reent * _impure_ptr.0_799;
  struct __FILE * _800;
  unsigned int prephitmp_809;
  unsigned int ivtmp_810;
  struct _reent * _impure_ptr.0_811;
  struct __FILE * _812;
  struct _reent * _impure_ptr.0_813;
  struct __FILE * _814;
  struct _reent * _impure_ptr.0_815;
  struct __FILE * _816;
  struct _reent * _impure_ptr.0_817;
  struct __FILE * _818;
  unsigned int _819;
  unsigned int _820;
  unsigned int pretmp_1239;
  unsigned int pretmp_1240;
  unsigned int prephitmp_1241;
  unsigned int prephitmp_1263;
  unsigned int pretmp_1264;
  unsigned int pretmp_1265;
  unsigned int pretmp_1266;
  unsigned int prephitmp_1267;
  unsigned int pretmp_1268;
  unsigned int pretmp_1279;
  unsigned int ivtmp_1280;
  unsigned int prephitmp_1281;
  unsigned int ivtmp_1282;
  unsigned int pretmp_1283;
  unsigned int ivtmp_1284;
  unsigned int ivtmp_1290;
  unsigned int prephitmp_1291;
  unsigned int ivtmp_1292;
  unsigned int _1305;
  struct _reent * _impure_ptr.0_1306;
  struct __FILE * _1307;
  struct _reent * _impure_ptr.0_1309;
  struct __FILE * _1310;
  unsigned int _1312;
  unsigned int _1313;
  unsigned int _1321;
  struct _reent * _impure_ptr.0_1322;
  struct __FILE * _1323;
  struct _reent * _impure_ptr.0_1325;
  struct __FILE * _1326;
  unsigned int _1328;
  unsigned int _1329;
  unsigned int _1337;
  struct _reent * _impure_ptr.0_1338;
  struct __FILE * _1339;
  struct _reent * _impure_ptr.0_1341;
  struct __FILE * _1342;
  unsigned int _1344;
  unsigned int _1345;
  unsigned int _1353;
  struct _reent * _impure_ptr.0_1354;
  struct __FILE * _1355;
  struct _reent * _impure_ptr.0_1357;
  struct __FILE * _1358;
  unsigned int _1360;
  unsigned int _1361;
  unsigned int _1369;
  struct _reent * _impure_ptr.0_1370;
  struct __FILE * _1371;
  struct _reent * _impure_ptr.0_1373;
  struct __FILE * _1374;
  unsigned int _1376;
  unsigned int _1377;
  unsigned int _1385;
  struct _reent * _impure_ptr.0_1386;
  struct __FILE * _1387;
  struct _reent * _impure_ptr.0_1389;
  struct __FILE * _1390;
  unsigned int _1392;
  unsigned int _1393;
  unsigned int _1401;
  struct _reent * _impure_ptr.0_1402;
  struct __FILE * _1403;
  struct _reent * _impure_ptr.0_1405;
  struct __FILE * _1406;
  unsigned int _1408;
  unsigned int _1409;
  unsigned int _1417;
  struct _reent * _impure_ptr.0_1418;
  struct __FILE * _1419;
  struct _reent * _impure_ptr.0_1421;
  struct __FILE * _1422;
  unsigned int _1424;
  unsigned int _1425;
  unsigned int _1433;
  struct _reent * _impure_ptr.0_1434;
  struct __FILE * _1435;
  struct _reent * _impure_ptr.0_1437;
  struct __FILE * _1438;
  unsigned int _1440;
  unsigned int _1441;
  unsigned int _1449;
  struct _reent * _impure_ptr.0_1450;
  struct __FILE * _1451;
  struct _reent * _impure_ptr.0_1453;
  struct __FILE * _1454;
  unsigned int _1456;
  unsigned int _1457;
  unsigned int _1465;
  struct _reent * _impure_ptr.0_1466;
  struct __FILE * _1467;
  struct _reent * _impure_ptr.0_1469;
  struct __FILE * _1470;
  unsigned int _1472;
  unsigned int _1473;
  unsigned int _1481;
  struct _reent * _impure_ptr.0_1482;
  struct __FILE * _1483;
  struct _reent * _impure_ptr.0_1485;
  struct __FILE * _1486;
  unsigned int _1488;
  unsigned int _1489;
  unsigned int prephitmp_1494;
  unsigned int _1497;
  struct _reent * _impure_ptr.0_1498;
  struct __FILE * _1499;
  struct _reent * _impure_ptr.0_1501;
  struct __FILE * _1502;
  unsigned int _1504;
  unsigned int _1505;
  unsigned int prephitmp_1510;
  unsigned int _1513;
  struct _reent * _impure_ptr.0_1514;
  struct __FILE * _1515;
  struct _reent * _impure_ptr.0_1517;
  struct __FILE * _1518;
  unsigned int _1520;
  unsigned int _1521;
  unsigned int prephitmp_1526;
  unsigned int _1529;
  struct _reent * _impure_ptr.0_1530;
  struct __FILE * _1531;
  struct _reent * _impure_ptr.0_1533;
  struct __FILE * _1534;
  unsigned int _1536;
  unsigned int _1537;
  unsigned int prephitmp_1542;
  unsigned int _1545;
  struct _reent * _impure_ptr.0_1546;
  struct __FILE * _1547;
  struct _reent * _impure_ptr.0_1549;
  struct __FILE * _1550;
  unsigned int _1552;
  unsigned int _1553;
  unsigned int prephitmp_1558;
  unsigned int _1561;
  struct _reent * _impure_ptr.0_1562;
  struct __FILE * _1563;
  struct _reent * _impure_ptr.0_1565;
  struct __FILE * _1566;
  unsigned int _1568;
  unsigned int _1569;
  unsigned int prephitmp_1574;
  unsigned int _1577;
  struct _reent * _impure_ptr.0_1578;
  struct __FILE * _1579;
  struct _reent * _impure_ptr.0_1581;
  struct __FILE * _1582;
  unsigned int _1584;
  unsigned int _1585;
  unsigned int prephitmp_1590;
  unsigned int _1593;
  struct _reent * _impure_ptr.0_1594;
  struct __FILE * _1595;
  struct _reent * _impure_ptr.0_1597;
  struct __FILE * _1598;
  unsigned int _1600;
  unsigned int _1601;
  unsigned int prephitmp_1606;
  unsigned int _1609;
  struct _reent * _impure_ptr.0_1610;
  struct __FILE * _1611;
  struct _reent * _impure_ptr.0_1613;
  struct __FILE * _1614;
  unsigned int _1616;
  unsigned int _1617;
  unsigned int prephitmp_1622;
  unsigned int _1625;
  struct _reent * _impure_ptr.0_1626;
  struct __FILE * _1627;
  struct _reent * _impure_ptr.0_1629;
  struct __FILE * _1630;
  unsigned int _1632;
  unsigned int _1633;
  unsigned int prephitmp_1638;
  unsigned int prephitmp_1655;
  unsigned int prephitmp_1656;
  unsigned int prephitmp_1657;
  unsigned int prephitmp_1658;
  unsigned int prephitmp_1659;
  unsigned int prephitmp_1660;
  unsigned int prephitmp_1661;
  unsigned int prephitmp_1662;
  unsigned int prephitmp_1663;
  unsigned int prephitmp_1664;
  unsigned int prephitmp_1665;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # DEBUG D#8 => &this_2(D)->D.158603
  # DEBUG this => D#8
  # DEBUG D#5 => &D#8->D.158577
  # DEBUG this => D#5
  # DEBUG D#4 => &D#5->D.158558
  # DEBUG this => D#4
  # DEBUG this => NULL
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = 0;
  # DEBUG this => NULL
  # DEBUG this => NULL
  this_2(D)->D.158603.D.158577.D.158558._vptr.OpResolver = &MEM[(void *)&_ZTVN6tflite3ops5micro14AllOpsResolverE + 8B];
  # DEBUG D#14 => &this_2(D)->D.158603.D.158577
  _7 = tflite::ops::micro::Register_FULLY_CONNECTED ();
  # DEBUG this => D#14
  # DEBUG op => 9
  # DEBUG registration => _7
  # DEBUG max_version => 4
  # DEBUG min_version => 1
  # DEBUG version => 1
  pretmp_214 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 3>:
  # version_354 = PHI <version_822(6), 1(2)>
  # prephitmp_417 = PHI <_820(6), pretmp_214(2)>
  # ivtmp_222 = PHI <ivtmp_194(6), 4(2)>
  # DEBUG version => version_354
  if (prephitmp_417 > 127)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  # prephitmp_1659 = PHI <prephitmp_417(3)>
  _impure_ptr.0_811 = _impure_ptr;
  _812 = _impure_ptr.0_811->_stdout;
  fprintf (_812, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1659, 128);
  _impure_ptr.0_813 = _impure_ptr;
  _814 = _impure_ptr.0_813->_stdout;
  fflush (_814);
  goto <bb 7>;

  <bb 5>:
  _impure_ptr.0_815 = _impure_ptr;
  _816 = _impure_ptr.0_815->_stdout;
  fprintf (_816, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_417, 128);
  _impure_ptr.0_817 = _impure_ptr;
  _818 = _impure_ptr.0_817->_stdout;
  fflush (_818);
  _819 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_819]
  # DEBUG new_registration => D#6
  _820 = _819 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _820;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_819] = MEM[(const struct TfLiteRegistration &)_7];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_819].builtin_code = 9;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_819].version = version_354;
  version_822 = version_354 + 1;
  # DEBUG version => version_822
  # DEBUG version => version_822
  ivtmp_194 = ivtmp_222 - 1;
  if (ivtmp_194 == 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 3>;

  <bb 7>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _10 = tflite::ops::micro::Register_MAX_POOL_2D ();
  # DEBUG this => D#14
  # DEBUG op => 17
  # DEBUG registration => _10
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1625 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1625 > 127)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  _impure_ptr.0_1626 = _impure_ptr;
  _1627 = _impure_ptr.0_1626->_stdout;
  fprintf (_1627, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1625, 128);
  _impure_ptr.0_1629 = _impure_ptr;
  _1630 = _impure_ptr.0_1629->_stdout;
  fflush (_1630);
  _1632 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1632]
  # DEBUG new_registration => D#6
  _1633 = _1632 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1633;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1632] = MEM[(const struct TfLiteRegistration &)_10];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1632].builtin_code = 17;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1632].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 10>;

  <bb 9>:
  _impure_ptr.0_797 = _impure_ptr;
  _798 = _impure_ptr.0_797->_stdout;
  fprintf (_798, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1625, 128);
  _impure_ptr.0_799 = _impure_ptr;
  _800 = _impure_ptr.0_799->_stdout;
  fflush (_800);

  <bb 10>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _13 = tflite::ops::micro::Register_SOFTMAX ();
  # DEBUG this => D#14
  # DEBUG op => 25
  # DEBUG registration => _13
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_215 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 11>:
  # version_353 = PHI <version_794(14), 1(10)>
  # prephitmp_431 = PHI <_792(14), pretmp_215(10)>
  # ivtmp_264 = PHI <ivtmp_236(14), 2(10)>
  # DEBUG version => version_353
  if (prephitmp_431 > 127)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # prephitmp_1658 = PHI <prephitmp_431(11)>
  _impure_ptr.0_783 = _impure_ptr;
  _784 = _impure_ptr.0_783->_stdout;
  fprintf (_784, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1658, 128);
  _impure_ptr.0_785 = _impure_ptr;
  _786 = _impure_ptr.0_785->_stdout;
  fflush (_786);
  goto <bb 15>;

  <bb 13>:
  _impure_ptr.0_787 = _impure_ptr;
  _788 = _impure_ptr.0_787->_stdout;
  fprintf (_788, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_431, 128);
  _impure_ptr.0_789 = _impure_ptr;
  _790 = _impure_ptr.0_789->_stdout;
  fflush (_790);
  _791 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_791]
  # DEBUG new_registration => D#6
  _792 = _791 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _792;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_791] = MEM[(const struct TfLiteRegistration &)_13];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_791].builtin_code = 25;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_791].version = version_353;
  version_794 = version_353 + 1;
  # DEBUG version => version_794
  # DEBUG version => version_794
  ivtmp_236 = ivtmp_264 - 1;
  if (ivtmp_236 == 0)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 11>;

  <bb 15>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _16 = tflite::ops::micro::Register_LOGISTIC ();
  # DEBUG this => D#14
  # DEBUG op => 14
  # DEBUG registration => _16
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1609 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1609 > 127)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  _impure_ptr.0_1610 = _impure_ptr;
  _1611 = _impure_ptr.0_1610->_stdout;
  fprintf (_1611, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1609, 128);
  _impure_ptr.0_1613 = _impure_ptr;
  _1614 = _impure_ptr.0_1613->_stdout;
  fflush (_1614);
  _1616 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1616]
  # DEBUG new_registration => D#6
  _1617 = _1616 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1617;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1616] = MEM[(const struct TfLiteRegistration &)_16];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1616].builtin_code = 14;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1616].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 18>;

  <bb 17>:
  _impure_ptr.0_769 = _impure_ptr;
  _770 = _impure_ptr.0_769->_stdout;
  fprintf (_770, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1609, 128);
  _impure_ptr.0_771 = _impure_ptr;
  _772 = _impure_ptr.0_771->_stdout;
  fflush (_772);

  <bb 18>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _19 = tflite::ops::micro::Register_SVDF ();
  # DEBUG this => D#14
  # DEBUG op => 27
  # DEBUG registration => _19
  # DEBUG max_version => 3
  # DEBUG version => 1
  pretmp_1264 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 19>:
  # version_348 = PHI <version_766(22), 1(18)>
  # prephitmp_445 = PHI <_764(22), pretmp_1264(18)>
  # ivtmp_292 = PHI <ivtmp_278(22), 3(18)>
  # DEBUG version => version_348
  if (prephitmp_445 > 127)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # prephitmp_1657 = PHI <prephitmp_445(19)>
  _impure_ptr.0_755 = _impure_ptr;
  _756 = _impure_ptr.0_755->_stdout;
  fprintf (_756, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1657, 128);
  _impure_ptr.0_757 = _impure_ptr;
  _758 = _impure_ptr.0_757->_stdout;
  fflush (_758);
  goto <bb 23>;

  <bb 21>:
  _impure_ptr.0_759 = _impure_ptr;
  _760 = _impure_ptr.0_759->_stdout;
  fprintf (_760, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_445, 128);
  _impure_ptr.0_761 = _impure_ptr;
  _762 = _impure_ptr.0_761->_stdout;
  fflush (_762);
  _763 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_763]
  # DEBUG new_registration => D#6
  _764 = _763 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _764;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_763] = MEM[(const struct TfLiteRegistration &)_19];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_763].builtin_code = 27;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_763].version = version_348;
  version_766 = version_348 + 1;
  # DEBUG version => version_766
  # DEBUG version => version_766
  ivtmp_278 = ivtmp_292 - 1;
  if (ivtmp_278 == 0)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  goto <bb 19>;

  <bb 23>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _22 = tflite::ops::micro::Register_CONV_2D ();
  # DEBUG this => D#14
  # DEBUG op => 3
  # DEBUG registration => _22
  # DEBUG max_version => 3
  # DEBUG version => 1
  pretmp_218 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 24>:
  # version_346 = PHI <version_752(27), 1(23)>
  # prephitmp_697 = PHI <_750(27), pretmp_218(23)>
  # ivtmp_320 = PHI <ivtmp_306(27), 3(23)>
  # DEBUG version => version_346
  if (prephitmp_697 > 127)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # prephitmp_1656 = PHI <prephitmp_697(24)>
  _impure_ptr.0_741 = _impure_ptr;
  _742 = _impure_ptr.0_741->_stdout;
  fprintf (_742, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1656, 128);
  _impure_ptr.0_743 = _impure_ptr;
  _744 = _impure_ptr.0_743->_stdout;
  fflush (_744);
  goto <bb 28>;

  <bb 26>:
  _impure_ptr.0_745 = _impure_ptr;
  _746 = _impure_ptr.0_745->_stdout;
  fprintf (_746, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_697, 128);
  _impure_ptr.0_747 = _impure_ptr;
  _748 = _impure_ptr.0_747->_stdout;
  fflush (_748);
  _749 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_749]
  # DEBUG new_registration => D#6
  _750 = _749 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _750;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_749] = MEM[(const struct TfLiteRegistration &)_22];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_749].builtin_code = 3;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_749].version = version_346;
  version_752 = version_346 + 1;
  # DEBUG version => version_752
  # DEBUG version => version_752
  ivtmp_306 = ivtmp_320 - 1;
  if (ivtmp_306 == 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  goto <bb 24>;

  <bb 28>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _25 = tflite::ops::micro::Register_CONCATENATION ();
  # DEBUG this => D#14
  # DEBUG op => 2
  # DEBUG registration => _25
  # DEBUG max_version => 3
  # DEBUG version => 1
  pretmp_1266 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 29>:
  # version_1196 = PHI <version_738(32), 1(28)>
  # prephitmp_711 = PHI <_736(32), pretmp_1266(28)>
  # ivtmp_390 = PHI <ivtmp_376(32), 3(28)>
  # DEBUG version => version_1196
  if (prephitmp_711 > 127)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # prephitmp_1655 = PHI <prephitmp_711(29)>
  _impure_ptr.0_727 = _impure_ptr;
  _728 = _impure_ptr.0_727->_stdout;
  fprintf (_728, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1655, 128);
  _impure_ptr.0_729 = _impure_ptr;
  _730 = _impure_ptr.0_729->_stdout;
  fflush (_730);
  goto <bb 33>;

  <bb 31>:
  _impure_ptr.0_731 = _impure_ptr;
  _732 = _impure_ptr.0_731->_stdout;
  fprintf (_732, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_711, 128);
  _impure_ptr.0_733 = _impure_ptr;
  _734 = _impure_ptr.0_733->_stdout;
  fflush (_734);
  _735 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_735]
  # DEBUG new_registration => D#6
  _736 = _735 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _736;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_735] = MEM[(const struct TfLiteRegistration &)_25];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_735].builtin_code = 2;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_735].version = version_1196;
  version_738 = version_1196 + 1;
  # DEBUG version => version_738
  # DEBUG version => version_738
  ivtmp_376 = ivtmp_390 - 1;
  if (ivtmp_376 == 0)
    goto <bb 33>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 29>;

  <bb 33>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _28 = tflite::ops::micro::Register_DEPTHWISE_CONV_2D ();
  # DEBUG this => D#14
  # DEBUG op => 4
  # DEBUG registration => _28
  # DEBUG max_version => 3
  # DEBUG version => 1
  pretmp_1268 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 34>:
  # version_1195 = PHI <version_724(37), 1(33)>
  # prephitmp_725 = PHI <_722(37), pretmp_1268(33)>
  # ivtmp_418 = PHI <ivtmp_404(37), 3(33)>
  # DEBUG version => version_1195
  if (prephitmp_725 > 127)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # prephitmp_1638 = PHI <prephitmp_725(34)>
  _impure_ptr.0_713 = _impure_ptr;
  _714 = _impure_ptr.0_713->_stdout;
  fprintf (_714, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1638, 128);
  _impure_ptr.0_715 = _impure_ptr;
  _716 = _impure_ptr.0_715->_stdout;
  fflush (_716);
  goto <bb 38>;

  <bb 36>:
  _impure_ptr.0_717 = _impure_ptr;
  _718 = _impure_ptr.0_717->_stdout;
  fprintf (_718, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_725, 128);
  _impure_ptr.0_719 = _impure_ptr;
  _720 = _impure_ptr.0_719->_stdout;
  fflush (_720);
  _721 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_721]
  # DEBUG new_registration => D#6
  _722 = _721 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _722;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_721] = MEM[(const struct TfLiteRegistration &)_28];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_721].builtin_code = 4;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_721].version = version_1195;
  version_724 = version_1195 + 1;
  # DEBUG version => version_724
  # DEBUG version => version_724
  ivtmp_404 = ivtmp_418 - 1;
  if (ivtmp_404 == 0)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 37>:
  goto <bb 34>;

  <bb 38>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _31 = tflite::ops::micro::Register_AVERAGE_POOL_2D ();
  # DEBUG this => D#14
  # DEBUG op => 1
  # DEBUG registration => _31
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_250 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 39>:
  # version_1194 = PHI <version_710(42), 1(38)>
  # prephitmp_739 = PHI <_708(42), pretmp_250(38)>
  # ivtmp_446 = PHI <ivtmp_432(42), 2(38)>
  # DEBUG version => version_1194
  if (prephitmp_739 > 127)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # prephitmp_1622 = PHI <prephitmp_739(39)>
  _impure_ptr.0_699 = _impure_ptr;
  _700 = _impure_ptr.0_699->_stdout;
  fprintf (_700, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1622, 128);
  _impure_ptr.0_701 = _impure_ptr;
  _702 = _impure_ptr.0_701->_stdout;
  fflush (_702);
  goto <bb 43>;

  <bb 41>:
  _impure_ptr.0_703 = _impure_ptr;
  _704 = _impure_ptr.0_703->_stdout;
  fprintf (_704, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_739, 128);
  _impure_ptr.0_705 = _impure_ptr;
  _706 = _impure_ptr.0_705->_stdout;
  fflush (_706);
  _707 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_707]
  # DEBUG new_registration => D#6
  _708 = _707 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _708;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_707] = MEM[(const struct TfLiteRegistration &)_31];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_707].builtin_code = 1;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_707].version = version_1194;
  version_710 = version_1194 + 1;
  # DEBUG version => version_710
  # DEBUG version => version_710
  ivtmp_432 = ivtmp_446 - 1;
  if (ivtmp_432 == 0)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 39>;

  <bb 43>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _34 = tflite::ops::micro::Register_ABS ();
  # DEBUG this => D#14
  # DEBUG op => 101
  # DEBUG registration => _34
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1593 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1593 > 127)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:
  _impure_ptr.0_1594 = _impure_ptr;
  _1595 = _impure_ptr.0_1594->_stdout;
  fprintf (_1595, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1593, 128);
  _impure_ptr.0_1597 = _impure_ptr;
  _1598 = _impure_ptr.0_1597->_stdout;
  fflush (_1598);
  _1600 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1600]
  # DEBUG new_registration => D#6
  _1601 = _1600 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1601;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1600] = MEM[(const struct TfLiteRegistration &)_34];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1600].builtin_code = 101;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1600].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 46>;

  <bb 45>:
  _impure_ptr.0_685 = _impure_ptr;
  _686 = _impure_ptr.0_685->_stdout;
  fprintf (_686, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1593, 128);
  _impure_ptr.0_687 = _impure_ptr;
  _688 = _impure_ptr.0_687->_stdout;
  fflush (_688);

  <bb 46>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _37 = tflite::ops::micro::Register_SIN ();
  # DEBUG this => D#14
  # DEBUG op => 66
  # DEBUG registration => _37
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1577 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1577 > 127)
    goto <bb 48>;
  else
    goto <bb 47>;

  <bb 47>:
  _impure_ptr.0_1578 = _impure_ptr;
  _1579 = _impure_ptr.0_1578->_stdout;
  fprintf (_1579, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1577, 128);
  _impure_ptr.0_1581 = _impure_ptr;
  _1582 = _impure_ptr.0_1581->_stdout;
  fflush (_1582);
  _1584 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1584]
  # DEBUG new_registration => D#6
  _1585 = _1584 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1585;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1584] = MEM[(const struct TfLiteRegistration &)_37];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1584].builtin_code = 66;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1584].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 49>;

  <bb 48>:
  _impure_ptr.0_671 = _impure_ptr;
  _672 = _impure_ptr.0_671->_stdout;
  fprintf (_672, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1577, 128);
  _impure_ptr.0_673 = _impure_ptr;
  _674 = _impure_ptr.0_673->_stdout;
  fflush (_674);

  <bb 49>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _40 = tflite::ops::micro::Register_COS ();
  # DEBUG this => D#14
  # DEBUG op => 108
  # DEBUG registration => _40
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1561 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1561 > 127)
    goto <bb 51>;
  else
    goto <bb 50>;

  <bb 50>:
  _impure_ptr.0_1562 = _impure_ptr;
  _1563 = _impure_ptr.0_1562->_stdout;
  fprintf (_1563, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1561, 128);
  _impure_ptr.0_1565 = _impure_ptr;
  _1566 = _impure_ptr.0_1565->_stdout;
  fflush (_1566);
  _1568 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1568]
  # DEBUG new_registration => D#6
  _1569 = _1568 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1569;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1568] = MEM[(const struct TfLiteRegistration &)_40];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1568].builtin_code = 108;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1568].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 52>;

  <bb 51>:
  _impure_ptr.0_657 = _impure_ptr;
  _658 = _impure_ptr.0_657->_stdout;
  fprintf (_658, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1561, 128);
  _impure_ptr.0_659 = _impure_ptr;
  _660 = _impure_ptr.0_659->_stdout;
  fflush (_660);

  <bb 52>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _43 = tflite::ops::micro::Register_LOG ();
  # DEBUG this => D#14
  # DEBUG op => 73
  # DEBUG registration => _43
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1545 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1545 > 127)
    goto <bb 54>;
  else
    goto <bb 53>;

  <bb 53>:
  _impure_ptr.0_1546 = _impure_ptr;
  _1547 = _impure_ptr.0_1546->_stdout;
  fprintf (_1547, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1545, 128);
  _impure_ptr.0_1549 = _impure_ptr;
  _1550 = _impure_ptr.0_1549->_stdout;
  fflush (_1550);
  _1552 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1552]
  # DEBUG new_registration => D#6
  _1553 = _1552 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1553;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1552] = MEM[(const struct TfLiteRegistration &)_43];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1552].builtin_code = 73;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1552].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 55>;

  <bb 54>:
  _impure_ptr.0_643 = _impure_ptr;
  _644 = _impure_ptr.0_643->_stdout;
  fprintf (_644, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1545, 128);
  _impure_ptr.0_645 = _impure_ptr;
  _646 = _impure_ptr.0_645->_stdout;
  fflush (_646);

  <bb 55>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _46 = tflite::ops::micro::Register_SQRT ();
  # DEBUG this => D#14
  # DEBUG op => 75
  # DEBUG registration => _46
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1529 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1529 > 127)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 56>:
  _impure_ptr.0_1530 = _impure_ptr;
  _1531 = _impure_ptr.0_1530->_stdout;
  fprintf (_1531, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1529, 128);
  _impure_ptr.0_1533 = _impure_ptr;
  _1534 = _impure_ptr.0_1533->_stdout;
  fflush (_1534);
  _1536 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1536]
  # DEBUG new_registration => D#6
  _1537 = _1536 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1537;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1536] = MEM[(const struct TfLiteRegistration &)_46];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1536].builtin_code = 75;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1536].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 58>;

  <bb 57>:
  _impure_ptr.0_629 = _impure_ptr;
  _630 = _impure_ptr.0_629->_stdout;
  fprintf (_630, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1529, 128);
  _impure_ptr.0_631 = _impure_ptr;
  _632 = _impure_ptr.0_631->_stdout;
  fflush (_632);

  <bb 58>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _49 = tflite::ops::micro::Register_RSQRT ();
  # DEBUG this => D#14
  # DEBUG op => 76
  # DEBUG registration => _49
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1513 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1513 > 127)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:
  _impure_ptr.0_1514 = _impure_ptr;
  _1515 = _impure_ptr.0_1514->_stdout;
  fprintf (_1515, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1513, 128);
  _impure_ptr.0_1517 = _impure_ptr;
  _1518 = _impure_ptr.0_1517->_stdout;
  fflush (_1518);
  _1520 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1520]
  # DEBUG new_registration => D#6
  _1521 = _1520 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1521;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1520] = MEM[(const struct TfLiteRegistration &)_49];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1520].builtin_code = 76;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1520].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 61>;

  <bb 60>:
  _impure_ptr.0_615 = _impure_ptr;
  _616 = _impure_ptr.0_615->_stdout;
  fprintf (_616, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1513, 128);
  _impure_ptr.0_617 = _impure_ptr;
  _618 = _impure_ptr.0_617->_stdout;
  fflush (_618);

  <bb 61>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _52 = tflite::ops::micro::Register_SQUARE ();
  # DEBUG this => D#14
  # DEBUG op => 92
  # DEBUG registration => _52
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1497 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1497 > 127)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 62>:
  _impure_ptr.0_1498 = _impure_ptr;
  _1499 = _impure_ptr.0_1498->_stdout;
  fprintf (_1499, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1497, 128);
  _impure_ptr.0_1501 = _impure_ptr;
  _1502 = _impure_ptr.0_1501->_stdout;
  fflush (_1502);
  _1504 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1504]
  # DEBUG new_registration => D#6
  _1505 = _1504 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1505;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1504] = MEM[(const struct TfLiteRegistration &)_52];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1504].builtin_code = 92;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1504].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 64>;

  <bb 63>:
  _impure_ptr.0_601 = _impure_ptr;
  _602 = _impure_ptr.0_601->_stdout;
  fprintf (_602, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1497, 128);
  _impure_ptr.0_603 = _impure_ptr;
  _604 = _impure_ptr.0_603->_stdout;
  fflush (_604);

  <bb 64>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _55 = tflite::ops::micro::Register_PRELU ();
  # DEBUG this => D#14
  # DEBUG op => 54
  # DEBUG registration => _55
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1481 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1481 > 127)
    goto <bb 66>;
  else
    goto <bb 65>;

  <bb 65>:
  _impure_ptr.0_1482 = _impure_ptr;
  _1483 = _impure_ptr.0_1482->_stdout;
  fprintf (_1483, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1481, 128);
  _impure_ptr.0_1485 = _impure_ptr;
  _1486 = _impure_ptr.0_1485->_stdout;
  fflush (_1486);
  _1488 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1488]
  # DEBUG new_registration => D#6
  _1489 = _1488 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1489;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1488] = MEM[(const struct TfLiteRegistration &)_55];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1488].builtin_code = 54;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1488].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 67>;

  <bb 66>:
  _impure_ptr.0_587 = _impure_ptr;
  _588 = _impure_ptr.0_587->_stdout;
  fprintf (_588, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1481, 128);
  _impure_ptr.0_589 = _impure_ptr;
  _590 = _impure_ptr.0_589->_stdout;
  fflush (_590);

  <bb 67>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _58 = tflite::ops::micro::Register_FLOOR ();
  # DEBUG this => D#14
  # DEBUG op => 8
  # DEBUG registration => _58
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1465 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1465 > 127)
    goto <bb 69>;
  else
    goto <bb 68>;

  <bb 68>:
  _impure_ptr.0_1466 = _impure_ptr;
  _1467 = _impure_ptr.0_1466->_stdout;
  fprintf (_1467, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1465, 128);
  _impure_ptr.0_1469 = _impure_ptr;
  _1470 = _impure_ptr.0_1469->_stdout;
  fflush (_1470);
  _1472 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1472]
  # DEBUG new_registration => D#6
  _1473 = _1472 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1473;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1472] = MEM[(const struct TfLiteRegistration &)_58];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1472].builtin_code = 8;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1472].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 70>;

  <bb 69>:
  _impure_ptr.0_573 = _impure_ptr;
  _574 = _impure_ptr.0_573->_stdout;
  fprintf (_574, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1465, 128);
  _impure_ptr.0_575 = _impure_ptr;
  _576 = _impure_ptr.0_575->_stdout;
  fflush (_576);

  <bb 70>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _61 = tflite::ops::micro::Register_MAXIMUM ();
  # DEBUG this => D#14
  # DEBUG op => 55
  # DEBUG registration => _61
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1449 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1449 > 127)
    goto <bb 72>;
  else
    goto <bb 71>;

  <bb 71>:
  _impure_ptr.0_1450 = _impure_ptr;
  _1451 = _impure_ptr.0_1450->_stdout;
  fprintf (_1451, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1449, 128);
  _impure_ptr.0_1453 = _impure_ptr;
  _1454 = _impure_ptr.0_1453->_stdout;
  fflush (_1454);
  _1456 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1456]
  # DEBUG new_registration => D#6
  _1457 = _1456 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1457;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1456] = MEM[(const struct TfLiteRegistration &)_61];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1456].builtin_code = 55;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1456].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 73>;

  <bb 72>:
  _impure_ptr.0_559 = _impure_ptr;
  _560 = _impure_ptr.0_559->_stdout;
  fprintf (_560, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1449, 128);
  _impure_ptr.0_561 = _impure_ptr;
  _562 = _impure_ptr.0_561->_stdout;
  fflush (_562);

  <bb 73>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _64 = tflite::ops::micro::Register_MINIMUM ();
  # DEBUG this => D#14
  # DEBUG op => 57
  # DEBUG registration => _64
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1433 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1433 > 127)
    goto <bb 75>;
  else
    goto <bb 74>;

  <bb 74>:
  _impure_ptr.0_1434 = _impure_ptr;
  _1435 = _impure_ptr.0_1434->_stdout;
  fprintf (_1435, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1433, 128);
  _impure_ptr.0_1437 = _impure_ptr;
  _1438 = _impure_ptr.0_1437->_stdout;
  fflush (_1438);
  _1440 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1440]
  # DEBUG new_registration => D#6
  _1441 = _1440 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1441;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1440] = MEM[(const struct TfLiteRegistration &)_64];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1440].builtin_code = 57;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1440].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 76>;

  <bb 75>:
  _impure_ptr.0_545 = _impure_ptr;
  _546 = _impure_ptr.0_545->_stdout;
  fprintf (_546, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1433, 128);
  _impure_ptr.0_547 = _impure_ptr;
  _548 = _impure_ptr.0_547->_stdout;
  fflush (_548);

  <bb 76>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _67 = tflite::ops::micro::Register_ARG_MAX ();
  # DEBUG this => D#14
  # DEBUG op => 56
  # DEBUG registration => _67
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1417 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1417 > 127)
    goto <bb 78>;
  else
    goto <bb 77>;

  <bb 77>:
  _impure_ptr.0_1418 = _impure_ptr;
  _1419 = _impure_ptr.0_1418->_stdout;
  fprintf (_1419, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1417, 128);
  _impure_ptr.0_1421 = _impure_ptr;
  _1422 = _impure_ptr.0_1421->_stdout;
  fflush (_1422);
  _1424 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1424]
  # DEBUG new_registration => D#6
  _1425 = _1424 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1425;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1424] = MEM[(const struct TfLiteRegistration &)_67];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1424].builtin_code = 56;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1424].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 79>;

  <bb 78>:
  _impure_ptr.0_531 = _impure_ptr;
  _532 = _impure_ptr.0_531->_stdout;
  fprintf (_532, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1417, 128);
  _impure_ptr.0_533 = _impure_ptr;
  _534 = _impure_ptr.0_533->_stdout;
  fflush (_534);

  <bb 79>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _70 = tflite::ops::micro::Register_ARG_MIN ();
  # DEBUG this => D#14
  # DEBUG op => 79
  # DEBUG registration => _70
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1401 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1401 > 127)
    goto <bb 81>;
  else
    goto <bb 80>;

  <bb 80>:
  _impure_ptr.0_1402 = _impure_ptr;
  _1403 = _impure_ptr.0_1402->_stdout;
  fprintf (_1403, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1401, 128);
  _impure_ptr.0_1405 = _impure_ptr;
  _1406 = _impure_ptr.0_1405->_stdout;
  fflush (_1406);
  _1408 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1408]
  # DEBUG new_registration => D#6
  _1409 = _1408 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1409;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1408] = MEM[(const struct TfLiteRegistration &)_70];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1408].builtin_code = 79;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1408].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 82>;

  <bb 81>:
  _impure_ptr.0_517 = _impure_ptr;
  _518 = _impure_ptr.0_517->_stdout;
  fprintf (_518, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1401, 128);
  _impure_ptr.0_519 = _impure_ptr;
  _520 = _impure_ptr.0_519->_stdout;
  fflush (_520);

  <bb 82>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _73 = tflite::ops::micro::Register_LOGICAL_OR ();
  # DEBUG this => D#14
  # DEBUG op => 84
  # DEBUG registration => _73
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1385 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1385 > 127)
    goto <bb 84>;
  else
    goto <bb 83>;

  <bb 83>:
  _impure_ptr.0_1386 = _impure_ptr;
  _1387 = _impure_ptr.0_1386->_stdout;
  fprintf (_1387, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1385, 128);
  _impure_ptr.0_1389 = _impure_ptr;
  _1390 = _impure_ptr.0_1389->_stdout;
  fflush (_1390);
  _1392 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1392]
  # DEBUG new_registration => D#6
  _1393 = _1392 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1393;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1392] = MEM[(const struct TfLiteRegistration &)_73];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1392].builtin_code = 84;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1392].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 85>;

  <bb 84>:
  _impure_ptr.0_503 = _impure_ptr;
  _504 = _impure_ptr.0_503->_stdout;
  fprintf (_504, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1385, 128);
  _impure_ptr.0_505 = _impure_ptr;
  _506 = _impure_ptr.0_505->_stdout;
  fflush (_506);

  <bb 85>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _76 = tflite::ops::micro::Register_LOGICAL_AND ();
  # DEBUG this => D#14
  # DEBUG op => 86
  # DEBUG registration => _76
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1369 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1369 > 127)
    goto <bb 87>;
  else
    goto <bb 86>;

  <bb 86>:
  _impure_ptr.0_1370 = _impure_ptr;
  _1371 = _impure_ptr.0_1370->_stdout;
  fprintf (_1371, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1369, 128);
  _impure_ptr.0_1373 = _impure_ptr;
  _1374 = _impure_ptr.0_1373->_stdout;
  fflush (_1374);
  _1376 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1376]
  # DEBUG new_registration => D#6
  _1377 = _1376 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1377;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1376] = MEM[(const struct TfLiteRegistration &)_76];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1376].builtin_code = 86;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1376].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 88>;

  <bb 87>:
  _impure_ptr.0_489 = _impure_ptr;
  _490 = _impure_ptr.0_489->_stdout;
  fprintf (_490, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1369, 128);
  _impure_ptr.0_491 = _impure_ptr;
  _492 = _impure_ptr.0_491->_stdout;
  fflush (_492);

  <bb 88>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _79 = tflite::ops::micro::Register_LOGICAL_NOT ();
  # DEBUG this => D#14
  # DEBUG op => 87
  # DEBUG registration => _79
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1353 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1353 > 127)
    goto <bb 90>;
  else
    goto <bb 89>;

  <bb 89>:
  _impure_ptr.0_1354 = _impure_ptr;
  _1355 = _impure_ptr.0_1354->_stdout;
  fprintf (_1355, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1353, 128);
  _impure_ptr.0_1357 = _impure_ptr;
  _1358 = _impure_ptr.0_1357->_stdout;
  fflush (_1358);
  _1360 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1360]
  # DEBUG new_registration => D#6
  _1361 = _1360 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1361;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1360] = MEM[(const struct TfLiteRegistration &)_79];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1360].builtin_code = 87;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1360].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 91>;

  <bb 90>:
  _impure_ptr.0_475 = _impure_ptr;
  _476 = _impure_ptr.0_475->_stdout;
  fprintf (_476, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1353, 128);
  _impure_ptr.0_477 = _impure_ptr;
  _478 = _impure_ptr.0_477->_stdout;
  fflush (_478);

  <bb 91>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _82 = tflite::ops::micro::Register_RESHAPE ();
  # DEBUG this => D#14
  # DEBUG op => 22
  # DEBUG registration => _82
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1337 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1337 > 127)
    goto <bb 93>;
  else
    goto <bb 92>;

  <bb 92>:
  _impure_ptr.0_1338 = _impure_ptr;
  _1339 = _impure_ptr.0_1338->_stdout;
  fprintf (_1339, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1337, 128);
  _impure_ptr.0_1341 = _impure_ptr;
  _1342 = _impure_ptr.0_1341->_stdout;
  fflush (_1342);
  _1344 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1344]
  # DEBUG new_registration => D#6
  _1345 = _1344 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1345;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1344] = MEM[(const struct TfLiteRegistration &)_82];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1344].builtin_code = 22;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1344].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 94>;

  <bb 93>:
  _impure_ptr.0_461 = _impure_ptr;
  _462 = _impure_ptr.0_461->_stdout;
  fprintf (_462, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1337, 128);
  _impure_ptr.0_463 = _impure_ptr;
  _464 = _impure_ptr.0_463->_stdout;
  fflush (_464);

  <bb 94>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _85 = tflite::ops::micro::Register_EQUAL ();
  # DEBUG this => D#14
  # DEBUG op => 71
  # DEBUG registration => _85
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_256 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 95>:
  # version_1193 = PHI <version_458(98), 1(94)>
  # prephitmp_753 = PHI <_456(98), pretmp_256(94)>
  # ivtmp_712 = PHI <ivtmp_698(98), 2(94)>
  # DEBUG version => version_1193
  if (prephitmp_753 > 127)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  # prephitmp_1606 = PHI <prephitmp_753(95)>
  _impure_ptr.0_447 = _impure_ptr;
  _448 = _impure_ptr.0_447->_stdout;
  fprintf (_448, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1606, 128);
  _impure_ptr.0_449 = _impure_ptr;
  _450 = _impure_ptr.0_449->_stdout;
  fflush (_450);
  goto <bb 99>;

  <bb 97>:
  _impure_ptr.0_451 = _impure_ptr;
  _452 = _impure_ptr.0_451->_stdout;
  fprintf (_452, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_753, 128);
  _impure_ptr.0_453 = _impure_ptr;
  _454 = _impure_ptr.0_453->_stdout;
  fflush (_454);
  _455 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_455]
  # DEBUG new_registration => D#6
  _456 = _455 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _456;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_455] = MEM[(const struct TfLiteRegistration &)_85];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_455].builtin_code = 71;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_455].version = version_1193;
  version_458 = version_1193 + 1;
  # DEBUG version => version_458
  # DEBUG version => version_458
  ivtmp_698 = ivtmp_712 - 1;
  if (ivtmp_698 == 0)
    goto <bb 99>;
  else
    goto <bb 98>;

  <bb 98>:
  goto <bb 95>;

  <bb 99>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _88 = tflite::ops::micro::Register_NOT_EQUAL ();
  # DEBUG this => D#14
  # DEBUG op => 72
  # DEBUG registration => _88
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_257 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 100>:
  # version_344 = PHI <version_444(103), 1(99)>
  # prephitmp_781 = PHI <_442(103), pretmp_257(99)>
  # ivtmp_740 = PHI <ivtmp_726(103), 2(99)>
  # DEBUG version => version_344
  if (prephitmp_781 > 127)
    goto <bb 101>;
  else
    goto <bb 102>;

  <bb 101>:
  # prephitmp_1590 = PHI <prephitmp_781(100)>
  _impure_ptr.0_433 = _impure_ptr;
  _434 = _impure_ptr.0_433->_stdout;
  fprintf (_434, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1590, 128);
  _impure_ptr.0_435 = _impure_ptr;
  _436 = _impure_ptr.0_435->_stdout;
  fflush (_436);
  goto <bb 104>;

  <bb 102>:
  _impure_ptr.0_437 = _impure_ptr;
  _438 = _impure_ptr.0_437->_stdout;
  fprintf (_438, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_781, 128);
  _impure_ptr.0_439 = _impure_ptr;
  _440 = _impure_ptr.0_439->_stdout;
  fflush (_440);
  _441 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_441]
  # DEBUG new_registration => D#6
  _442 = _441 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _442;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_441] = MEM[(const struct TfLiteRegistration &)_88];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_441].builtin_code = 72;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_441].version = version_344;
  version_444 = version_344 + 1;
  # DEBUG version => version_444
  # DEBUG version => version_444
  ivtmp_726 = ivtmp_740 - 1;
  if (ivtmp_726 == 0)
    goto <bb 104>;
  else
    goto <bb 103>;

  <bb 103>:
  goto <bb 100>;

  <bb 104>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _91 = tflite::ops::micro::Register_GREATER ();
  # DEBUG this => D#14
  # DEBUG op => 61
  # DEBUG registration => _91
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_1240 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 105>:
  # version_343 = PHI <version_430(108), 1(104)>
  # prephitmp_809 = PHI <_428(108), pretmp_1240(104)>
  # ivtmp_782 = PHI <ivtmp_754(108), 2(104)>
  # DEBUG version => version_343
  if (prephitmp_809 > 127)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  # prephitmp_1574 = PHI <prephitmp_809(105)>
  _impure_ptr.0_419 = _impure_ptr;
  _420 = _impure_ptr.0_419->_stdout;
  fprintf (_420, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1574, 128);
  _impure_ptr.0_421 = _impure_ptr;
  _422 = _impure_ptr.0_421->_stdout;
  fflush (_422);
  goto <bb 109>;

  <bb 107>:
  _impure_ptr.0_423 = _impure_ptr;
  _424 = _impure_ptr.0_423->_stdout;
  fprintf (_424, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_809, 128);
  _impure_ptr.0_425 = _impure_ptr;
  _426 = _impure_ptr.0_425->_stdout;
  fflush (_426);
  _427 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_427]
  # DEBUG new_registration => D#6
  _428 = _427 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _428;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_427] = MEM[(const struct TfLiteRegistration &)_91];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_427].builtin_code = 61;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_427].version = version_343;
  version_430 = version_343 + 1;
  # DEBUG version => version_430
  # DEBUG version => version_430
  ivtmp_754 = ivtmp_782 - 1;
  if (ivtmp_754 == 0)
    goto <bb 109>;
  else
    goto <bb 108>;

  <bb 108>:
  goto <bb 105>;

  <bb 109>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _94 = tflite::ops::micro::Register_GREATER_EQUAL ();
  # DEBUG this => D#14
  # DEBUG op => 62
  # DEBUG registration => _94
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_260 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 110>:
  # version_1192 = PHI <version_416(113), 1(109)>
  # prephitmp_1241 = PHI <_414(113), pretmp_260(109)>
  # ivtmp_180 = PHI <ivtmp_810(113), 2(109)>
  # DEBUG version => version_1192
  if (prephitmp_1241 > 127)
    goto <bb 111>;
  else
    goto <bb 112>;

  <bb 111>:
  # prephitmp_1558 = PHI <prephitmp_1241(110)>
  _impure_ptr.0_405 = _impure_ptr;
  _406 = _impure_ptr.0_405->_stdout;
  fprintf (_406, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1558, 128);
  _impure_ptr.0_407 = _impure_ptr;
  _408 = _impure_ptr.0_407->_stdout;
  fflush (_408);
  goto <bb 114>;

  <bb 112>:
  _impure_ptr.0_409 = _impure_ptr;
  _410 = _impure_ptr.0_409->_stdout;
  fprintf (_410, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_1241, 128);
  _impure_ptr.0_411 = _impure_ptr;
  _412 = _impure_ptr.0_411->_stdout;
  fflush (_412);
  _413 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_413]
  # DEBUG new_registration => D#6
  _414 = _413 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _414;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_413] = MEM[(const struct TfLiteRegistration &)_94];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_413].builtin_code = 62;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_413].version = version_1192;
  version_416 = version_1192 + 1;
  # DEBUG version => version_416
  # DEBUG version => version_416
  ivtmp_810 = ivtmp_180 - 1;
  if (ivtmp_810 == 0)
    goto <bb 114>;
  else
    goto <bb 113>;

  <bb 113>:
  goto <bb 110>;

  <bb 114>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _97 = tflite::ops::micro::Register_LESS ();
  # DEBUG this => D#14
  # DEBUG op => 58
  # DEBUG registration => _97
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_259 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 115>:
  # version_342 = PHI <version_402(118), 1(114)>
  # prephitmp_258 = PHI <_400(118), pretmp_259(114)>
  # ivtmp_187 = PHI <ivtmp_186(118), 2(114)>
  # DEBUG version => version_342
  if (prephitmp_258 > 127)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # prephitmp_1660 = PHI <prephitmp_258(115)>
  _impure_ptr.0_391 = _impure_ptr;
  _392 = _impure_ptr.0_391->_stdout;
  fprintf (_392, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1660, 128);
  _impure_ptr.0_393 = _impure_ptr;
  _394 = _impure_ptr.0_393->_stdout;
  fflush (_394);
  goto <bb 119>;

  <bb 117>:
  _impure_ptr.0_395 = _impure_ptr;
  _396 = _impure_ptr.0_395->_stdout;
  fprintf (_396, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_258, 128);
  _impure_ptr.0_397 = _impure_ptr;
  _398 = _impure_ptr.0_397->_stdout;
  fflush (_398);
  _399 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_399]
  # DEBUG new_registration => D#6
  _400 = _399 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _400;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_399] = MEM[(const struct TfLiteRegistration &)_97];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_399].builtin_code = 58;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_399].version = version_342;
  version_402 = version_342 + 1;
  # DEBUG version => version_402
  # DEBUG version => version_402
  ivtmp_186 = ivtmp_187 - 1;
  if (ivtmp_186 == 0)
    goto <bb 119>;
  else
    goto <bb 118>;

  <bb 118>:
  goto <bb 115>;

  <bb 119>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _100 = tflite::ops::micro::Register_LESS_EQUAL ();
  # DEBUG this => D#14
  # DEBUG op => 63
  # DEBUG registration => _100
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_1239 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 120>:
  # version_341 = PHI <version_388(123), 1(119)>
  # prephitmp_255 = PHI <_386(123), pretmp_1239(119)>
  # ivtmp_193 = PHI <ivtmp_190(123), 2(119)>
  # DEBUG version => version_341
  if (prephitmp_255 > 127)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  # prephitmp_1661 = PHI <prephitmp_255(120)>
  _impure_ptr.0_377 = _impure_ptr;
  _378 = _impure_ptr.0_377->_stdout;
  fprintf (_378, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1661, 128);
  _impure_ptr.0_379 = _impure_ptr;
  _380 = _impure_ptr.0_379->_stdout;
  fflush (_380);
  goto <bb 124>;

  <bb 122>:
  _impure_ptr.0_381 = _impure_ptr;
  _382 = _impure_ptr.0_381->_stdout;
  fprintf (_382, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_255, 128);
  _impure_ptr.0_383 = _impure_ptr;
  _384 = _impure_ptr.0_383->_stdout;
  fflush (_384);
  _385 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_385]
  # DEBUG new_registration => D#6
  _386 = _385 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _386;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_385] = MEM[(const struct TfLiteRegistration &)_100];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_385].builtin_code = 63;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_385].version = version_341;
  version_388 = version_341 + 1;
  # DEBUG version => version_388
  # DEBUG version => version_388
  ivtmp_190 = ivtmp_193 - 1;
  if (ivtmp_190 == 0)
    goto <bb 124>;
  else
    goto <bb 123>;

  <bb 123>:
  goto <bb 120>;

  <bb 124>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _103 = tflite::ops::micro::Register_CEIL ();
  # DEBUG this => D#14
  # DEBUG op => 104
  # DEBUG registration => _103
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1321 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1321 > 127)
    goto <bb 126>;
  else
    goto <bb 125>;

  <bb 125>:
  _impure_ptr.0_1322 = _impure_ptr;
  _1323 = _impure_ptr.0_1322->_stdout;
  fprintf (_1323, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1321, 128);
  _impure_ptr.0_1325 = _impure_ptr;
  _1326 = _impure_ptr.0_1325->_stdout;
  fflush (_1326);
  _1328 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1328]
  # DEBUG new_registration => D#6
  _1329 = _1328 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1329;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1328] = MEM[(const struct TfLiteRegistration &)_103];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1328].builtin_code = 104;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1328].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 127>;

  <bb 126>:
  _impure_ptr.0_363 = _impure_ptr;
  _364 = _impure_ptr.0_363->_stdout;
  fprintf (_364, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1321, 128);
  _impure_ptr.0_365 = _impure_ptr;
  _366 = _impure_ptr.0_365->_stdout;
  fflush (_366);

  <bb 127>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _106 = tflite::ops::micro::Register_ROUND ();
  # DEBUG this => D#14
  # DEBUG op => 116
  # DEBUG registration => _106
  # DEBUG max_version => 1
  # DEBUG version => 1
  _1305 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_1305 > 127)
    goto <bb 129>;
  else
    goto <bb 128>;

  <bb 128>:
  _impure_ptr.0_1306 = _impure_ptr;
  _1307 = _impure_ptr.0_1306->_stdout;
  fprintf (_1307, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _1305, 128);
  _impure_ptr.0_1309 = _impure_ptr;
  _1310 = _impure_ptr.0_1309->_stdout;
  fflush (_1310);
  _1312 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_1312]
  # DEBUG new_registration => D#6
  _1313 = _1312 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _1313;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1312] = MEM[(const struct TfLiteRegistration &)_106];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1312].builtin_code = 116;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_1312].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 130>;

  <bb 129>:
  _impure_ptr.0_349 = _impure_ptr;
  _350 = _impure_ptr.0_349->_stdout;
  fprintf (_350, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _1305, 128);
  _impure_ptr.0_351 = _impure_ptr;
  _352 = _impure_ptr.0_351->_stdout;
  fflush (_352);

  <bb 130>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _109 = tflite::ops::micro::Register_STRIDED_SLICE ();
  # DEBUG this => D#14
  # DEBUG op => 45
  # DEBUG registration => _109
  # DEBUG max_version => 1
  # DEBUG version => 1
  _110 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_110 > 127)
    goto <bb 132>;
  else
    goto <bb 131>;

  <bb 131>:
  _impure_ptr.0_113 = _impure_ptr;
  _116 = _impure_ptr.0_113->_stdout;
  fprintf (_116, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _110, 128);
  _impure_ptr.0_122 = _impure_ptr;
  _125 = _impure_ptr.0_122->_stdout;
  fflush (_125);
  _131 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_131]
  # DEBUG new_registration => D#6
  _134 = _131 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _134;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_131] = MEM[(const struct TfLiteRegistration &)_109];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_131].builtin_code = 45;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_131].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 133>;

  <bb 132>:
  _impure_ptr.0_335 = _impure_ptr;
  _336 = _impure_ptr.0_335->_stdout;
  fprintf (_336, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _110, 128);
  _impure_ptr.0_337 = _impure_ptr;
  _338 = _impure_ptr.0_337->_stdout;
  fflush (_338);

  <bb 133>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _112 = tflite::ops::micro::Register_PACK ();
  # DEBUG this => D#14
  # DEBUG op => 83
  # DEBUG registration => _112
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_220 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 134>:
  # version_1191 = PHI <version_332(137), 1(133)>
  # prephitmp_1267 = PHI <_330(137), pretmp_220(133)>
  # ivtmp_221 = PHI <ivtmp_208(137), 2(133)>
  # DEBUG version => version_1191
  if (prephitmp_1267 > 127)
    goto <bb 135>;
  else
    goto <bb 136>;

  <bb 135>:
  # prephitmp_1526 = PHI <prephitmp_1267(134)>
  _impure_ptr.0_321 = _impure_ptr;
  _322 = _impure_ptr.0_321->_stdout;
  fprintf (_322, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1526, 128);
  _impure_ptr.0_323 = _impure_ptr;
  _324 = _impure_ptr.0_323->_stdout;
  fflush (_324);
  goto <bb 138>;

  <bb 136>:
  _impure_ptr.0_325 = _impure_ptr;
  _326 = _impure_ptr.0_325->_stdout;
  fprintf (_326, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_1267, 128);
  _impure_ptr.0_327 = _impure_ptr;
  _328 = _impure_ptr.0_327->_stdout;
  fflush (_328);
  _329 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_329]
  # DEBUG new_registration => D#6
  _330 = _329 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _330;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_329] = MEM[(const struct TfLiteRegistration &)_112];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_329].builtin_code = 83;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_329].version = version_1191;
  version_332 = version_1191 + 1;
  # DEBUG version => version_332
  # DEBUG version => version_332
  ivtmp_208 = ivtmp_221 - 1;
  if (ivtmp_208 == 0)
    goto <bb 138>;
  else
    goto <bb 137>;

  <bb 137>:
  goto <bb 134>;

  <bb 138>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _115 = tflite::ops::micro::Register_PAD ();
  # DEBUG this => D#14
  # DEBUG op => 34
  # DEBUG registration => _115
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_1265 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 139>:
  # version_340 = PHI <version_318(142), 1(138)>
  # prephitmp_217 = PHI <_316(142), pretmp_1265(138)>
  # ivtmp_263 = PHI <ivtmp_235(142), 2(138)>
  # DEBUG version => version_340
  if (prephitmp_217 > 127)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  # prephitmp_1662 = PHI <prephitmp_217(139)>
  _impure_ptr.0_307 = _impure_ptr;
  _308 = _impure_ptr.0_307->_stdout;
  fprintf (_308, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1662, 128);
  _impure_ptr.0_309 = _impure_ptr;
  _310 = _impure_ptr.0_309->_stdout;
  fflush (_310);
  goto <bb 143>;

  <bb 141>:
  _impure_ptr.0_311 = _impure_ptr;
  _312 = _impure_ptr.0_311->_stdout;
  fprintf (_312, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_217, 128);
  _impure_ptr.0_313 = _impure_ptr;
  _314 = _impure_ptr.0_313->_stdout;
  fflush (_314);
  _315 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_315]
  # DEBUG new_registration => D#6
  _316 = _315 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _316;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_315] = MEM[(const struct TfLiteRegistration &)_115];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_315].builtin_code = 34;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_315].version = version_340;
  version_318 = version_340 + 1;
  # DEBUG version => version_318
  # DEBUG version => version_318
  ivtmp_235 = ivtmp_263 - 1;
  if (ivtmp_235 == 0)
    goto <bb 143>;
  else
    goto <bb 142>;

  <bb 142>:
  goto <bb 139>;

  <bb 143>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _118 = tflite::ops::micro::Register_PADV2 ();
  # DEBUG this => D#14
  # DEBUG op => 60
  # DEBUG registration => _118
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_216 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 144>:
  # version_339 = PHI <version_304(147), 1(143)>
  # prephitmp_1263 = PHI <_302(147), pretmp_216(143)>
  # ivtmp_291 = PHI <ivtmp_277(147), 2(143)>
  # DEBUG version => version_339
  if (prephitmp_1263 > 127)
    goto <bb 145>;
  else
    goto <bb 146>;

  <bb 145>:
  # prephitmp_1542 = PHI <prephitmp_1263(144)>
  _impure_ptr.0_293 = _impure_ptr;
  _294 = _impure_ptr.0_293->_stdout;
  fprintf (_294, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1542, 128);
  _impure_ptr.0_295 = _impure_ptr;
  _296 = _impure_ptr.0_295->_stdout;
  fflush (_296);
  goto <bb 148>;

  <bb 146>:
  _impure_ptr.0_297 = _impure_ptr;
  _298 = _impure_ptr.0_297->_stdout;
  fprintf (_298, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_1263, 128);
  _impure_ptr.0_299 = _impure_ptr;
  _300 = _impure_ptr.0_299->_stdout;
  fflush (_300);
  _301 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_301]
  # DEBUG new_registration => D#6
  _302 = _301 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _302;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_301] = MEM[(const struct TfLiteRegistration &)_118];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_301].builtin_code = 60;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_301].version = version_339;
  version_304 = version_339 + 1;
  # DEBUG version => version_304
  # DEBUG version => version_304
  ivtmp_277 = ivtmp_291 - 1;
  if (ivtmp_277 == 0)
    goto <bb 148>;
  else
    goto <bb 147>;

  <bb 147>:
  goto <bb 144>;

  <bb 148>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _121 = tflite::ops::micro::Register_SPLIT ();
  # DEBUG this => D#14
  # DEBUG op => 49
  # DEBUG registration => _121
  # DEBUG max_version => 3
  # DEBUG version => 1
  pretmp_213 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 149>:
  # version_334 = PHI <version_290(152), 1(148)>
  # prephitmp_192 = PHI <_288(152), pretmp_213(148)>
  # ivtmp_319 = PHI <ivtmp_305(152), 3(148)>
  # DEBUG version => version_334
  if (prephitmp_192 > 127)
    goto <bb 150>;
  else
    goto <bb 151>;

  <bb 150>:
  # prephitmp_1663 = PHI <prephitmp_192(149)>
  _impure_ptr.0_279 = _impure_ptr;
  _280 = _impure_ptr.0_279->_stdout;
  fprintf (_280, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1663, 128);
  _impure_ptr.0_281 = _impure_ptr;
  _282 = _impure_ptr.0_281->_stdout;
  fflush (_282);
  goto <bb 153>;

  <bb 151>:
  _impure_ptr.0_283 = _impure_ptr;
  _284 = _impure_ptr.0_283->_stdout;
  fprintf (_284, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_192, 128);
  _impure_ptr.0_285 = _impure_ptr;
  _286 = _impure_ptr.0_285->_stdout;
  fflush (_286);
  _287 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_287]
  # DEBUG new_registration => D#6
  _288 = _287 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _288;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_287] = MEM[(const struct TfLiteRegistration &)_121];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_287].builtin_code = 49;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_287].version = version_334;
  version_290 = version_334 + 1;
  # DEBUG version => version_290
  # DEBUG version => version_290
  ivtmp_305 = ivtmp_319 - 1;
  if (ivtmp_305 == 0)
    goto <bb 153>;
  else
    goto <bb 152>;

  <bb 152>:
  goto <bb 149>;

  <bb 153>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _124 = tflite::ops::micro::Register_UNPACK ();
  # DEBUG this => D#14
  # DEBUG op => 88
  # DEBUG registration => _124
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_1283 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 154>:
  # version_262 = PHI <version_276(157), 1(153)>
  # prephitmp_1281 = PHI <_274(157), pretmp_1283(153)>
  # ivtmp_389 = PHI <ivtmp_375(157), 2(153)>
  # DEBUG version => version_262
  if (prephitmp_1281 > 127)
    goto <bb 155>;
  else
    goto <bb 156>;

  <bb 155>:
  # prephitmp_1510 = PHI <prephitmp_1281(154)>
  _impure_ptr.0_265 = _impure_ptr;
  _266 = _impure_ptr.0_265->_stdout;
  fprintf (_266, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1510, 128);
  _impure_ptr.0_267 = _impure_ptr;
  _268 = _impure_ptr.0_267->_stdout;
  fflush (_268);
  goto <bb 158>;

  <bb 156>:
  _impure_ptr.0_269 = _impure_ptr;
  _270 = _impure_ptr.0_269->_stdout;
  fprintf (_270, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_1281, 128);
  _impure_ptr.0_271 = _impure_ptr;
  _272 = _impure_ptr.0_271->_stdout;
  fflush (_272);
  _273 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_273]
  # DEBUG new_registration => D#6
  _274 = _273 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _274;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_273] = MEM[(const struct TfLiteRegistration &)_124];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_273].builtin_code = 88;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_273].version = version_262;
  version_276 = version_262 + 1;
  # DEBUG version => version_276
  # DEBUG version => version_276
  ivtmp_375 = ivtmp_389 - 1;
  if (ivtmp_375 == 0)
    goto <bb 158>;
  else
    goto <bb 157>;

  <bb 157>:
  goto <bb 154>;

  <bb 158>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _127 = tflite::ops::micro::Register_NEG ();
  # DEBUG this => D#14
  # DEBUG op => 59
  # DEBUG registration => _127
  # DEBUG max_version => 1
  # DEBUG version => 1
  _62 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_62 > 127)
    goto <bb 160>;
  else
    goto <bb 159>;

  <bb 159>:
  _impure_ptr.0_65 = _impure_ptr;
  _68 = _impure_ptr.0_65->_stdout;
  fprintf (_68, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _62, 128);
  _impure_ptr.0_74 = _impure_ptr;
  _77 = _impure_ptr.0_74->_stdout;
  fflush (_77);
  _83 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_83]
  # DEBUG new_registration => D#6
  _86 = _83 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _86;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_83] = MEM[(const struct TfLiteRegistration &)_127];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_83].builtin_code = 59;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_83].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 161>;

  <bb 160>:
  _impure_ptr.0_251 = _impure_ptr;
  _252 = _impure_ptr.0_251->_stdout;
  fprintf (_252, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _62, 128);
  _impure_ptr.0_253 = _impure_ptr;
  _254 = _impure_ptr.0_253->_stdout;
  fflush (_254);

  <bb 161>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _130 = tflite::ops::micro::Register_ADD ();
  # DEBUG this => D#14
  # DEBUG op => 0
  # DEBUG registration => _130
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_189 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 162>:
  # version_1244 = PHI <version_248(165), 1(161)>
  # prephitmp_188 = PHI <_246(165), pretmp_189(161)>
  # ivtmp_1280 = PHI <ivtmp_403(165), 2(161)>
  # DEBUG version => version_1244
  if (prephitmp_188 > 127)
    goto <bb 163>;
  else
    goto <bb 164>;

  <bb 163>:
  # prephitmp_1664 = PHI <prephitmp_188(162)>
  _impure_ptr.0_237 = _impure_ptr;
  _238 = _impure_ptr.0_237->_stdout;
  fprintf (_238, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1664, 128);
  _impure_ptr.0_239 = _impure_ptr;
  _240 = _impure_ptr.0_239->_stdout;
  fflush (_240);
  goto <bb 166>;

  <bb 164>:
  _impure_ptr.0_241 = _impure_ptr;
  _242 = _impure_ptr.0_241->_stdout;
  fprintf (_242, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_188, 128);
  _impure_ptr.0_243 = _impure_ptr;
  _244 = _impure_ptr.0_243->_stdout;
  fflush (_244);
  _245 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_245]
  # DEBUG new_registration => D#6
  _246 = _245 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _246;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_245] = MEM[(const struct TfLiteRegistration &)_130];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_245].builtin_code = 0;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_245].version = version_1244;
  version_248 = version_1244 + 1;
  # DEBUG version => version_248
  # DEBUG version => version_248
  ivtmp_403 = ivtmp_1280 - 1;
  if (ivtmp_403 == 0)
    goto <bb 166>;
  else
    goto <bb 165>;

  <bb 165>:
  goto <bb 162>;

  <bb 166>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _133 = tflite::ops::micro::Register_MUL ();
  # DEBUG this => D#14
  # DEBUG op => 18
  # DEBUG registration => _133
  # DEBUG max_version => 3
  # DEBUG version => 1
  pretmp_1279 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 167>:
  # version_1243 = PHI <version_234(170), 1(166)>
  # prephitmp_185 = PHI <_232(170), pretmp_1279(166)>
  # ivtmp_1284 = PHI <ivtmp_1282(170), 3(166)>
  # DEBUG version => version_1243
  if (prephitmp_185 > 127)
    goto <bb 168>;
  else
    goto <bb 169>;

  <bb 168>:
  # prephitmp_1665 = PHI <prephitmp_185(167)>
  _impure_ptr.0_223 = _impure_ptr;
  _224 = _impure_ptr.0_223->_stdout;
  fprintf (_224, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1665, 128);
  _impure_ptr.0_225 = _impure_ptr;
  _226 = _impure_ptr.0_225->_stdout;
  fflush (_226);
  goto <bb 171>;

  <bb 169>:
  _impure_ptr.0_227 = _impure_ptr;
  _228 = _impure_ptr.0_227->_stdout;
  fprintf (_228, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_185, 128);
  _impure_ptr.0_229 = _impure_ptr;
  _230 = _impure_ptr.0_229->_stdout;
  fflush (_230);
  _231 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_231]
  # DEBUG new_registration => D#6
  _232 = _231 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _232;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_231] = MEM[(const struct TfLiteRegistration &)_133];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_231].builtin_code = 18;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_231].version = version_1243;
  version_234 = version_1243 + 1;
  # DEBUG version => version_234
  # DEBUG version => version_234
  ivtmp_1282 = ivtmp_1284 - 1;
  if (ivtmp_1282 == 0)
    goto <bb 171>;
  else
    goto <bb 170>;

  <bb 170>:
  goto <bb 167>;

  <bb 171>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _136 = tflite::ops::micro::Register_QUANTIZE ();
  # DEBUG this => D#14
  # DEBUG op => 114
  # DEBUG registration => _136
  # DEBUG max_version => 1
  # DEBUG version => 1
  _14 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_14 > 127)
    goto <bb 173>;
  else
    goto <bb 172>;

  <bb 172>:
  _impure_ptr.0_17 = _impure_ptr;
  _20 = _impure_ptr.0_17->_stdout;
  fprintf (_20, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _14, 128);
  _impure_ptr.0_26 = _impure_ptr;
  _29 = _impure_ptr.0_26->_stdout;
  fflush (_29);
  _35 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_35]
  # DEBUG new_registration => D#6
  _38 = _35 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _38;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_35] = MEM[(const struct TfLiteRegistration &)_136];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_35].builtin_code = 114;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_35].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 174>;

  <bb 173>:
  _impure_ptr.0_209 = _impure_ptr;
  _210 = _impure_ptr.0_209->_stdout;
  fprintf (_210, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _14, 128);
  _impure_ptr.0_211 = _impure_ptr;
  _212 = _impure_ptr.0_211->_stdout;
  fflush (_212);

  <bb 174>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _139 = tflite::ops::micro::Register_DEQUANTIZE ();
  # DEBUG this => D#14
  # DEBUG op => 6
  # DEBUG registration => _139
  # DEBUG max_version => 2
  # DEBUG version => 1
  pretmp_178 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;

  <bb 175>:
  # version_1242 = PHI <version_206(178), 1(174)>
  # prephitmp_1291 = PHI <_204(178), pretmp_178(174)>
  # ivtmp_1292 = PHI <ivtmp_1290(178), 2(174)>
  # DEBUG version => version_1242
  if (prephitmp_1291 > 127)
    goto <bb 176>;
  else
    goto <bb 177>;

  <bb 176>:
  # prephitmp_1494 = PHI <prephitmp_1291(175)>
  _impure_ptr.0_195 = _impure_ptr;
  _196 = _impure_ptr.0_195->_stdout;
  fprintf (_196, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", prephitmp_1494, 128);
  _impure_ptr.0_197 = _impure_ptr;
  _198 = _impure_ptr.0_197->_stdout;
  fflush (_198);
  goto <bb 179>;

  <bb 177>:
  _impure_ptr.0_199 = _impure_ptr;
  _200 = _impure_ptr.0_199->_stdout;
  fprintf (_200, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", prephitmp_1291, 128);
  _impure_ptr.0_201 = _impure_ptr;
  _202 = _impure_ptr.0_201->_stdout;
  fflush (_202);
  _203 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_203]
  # DEBUG new_registration => D#6
  _204 = _203 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _204;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_203] = MEM[(const struct TfLiteRegistration &)_139];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_203].builtin_code = 6;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_203].version = version_1242;
  version_206 = version_1242 + 1;
  # DEBUG version => version_206
  # DEBUG version => version_206
  ivtmp_1290 = ivtmp_1292 - 1;
  if (ivtmp_1290 == 0)
    goto <bb 179>;
  else
    goto <bb 178>;

  <bb 178>:
  goto <bb 175>;

  <bb 179>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _142 = tflite::ops::micro::Register_RELU ();
  # DEBUG this => D#14
  # DEBUG op => 19
  # DEBUG registration => _142
  # DEBUG max_version => 1
  # DEBUG version => 1
  _345 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_345 > 127)
    goto <bb 181>;
  else
    goto <bb 180>;

  <bb 180>:
  _impure_ptr.0_331 = _impure_ptr;
  _317 = _impure_ptr.0_331->_stdout;
  fprintf (_317, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _345, 128);
  _impure_ptr.0_289 = _impure_ptr;
  _275 = _impure_ptr.0_289->_stdout;
  fflush (_275);
  _247 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_247]
  # DEBUG new_registration => D#6
  _233 = _247 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _233;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_247] = MEM[(const struct TfLiteRegistration &)_142];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_247].builtin_code = 19;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_247].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 182>;

  <bb 181>:
  _impure_ptr.0_181 = _impure_ptr;
  _182 = _impure_ptr.0_181->_stdout;
  fprintf (_182, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _345, 128);
  _impure_ptr.0_183 = _impure_ptr;
  _184 = _impure_ptr.0_183->_stdout;
  fflush (_184);

  <bb 182>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _145 = tflite::ops::micro::Register_RELU6 ();
  # DEBUG this => D#14
  # DEBUG op => 21
  # DEBUG registration => _145
  # DEBUG max_version => 1
  # DEBUG version => 1
  _569 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_569 > 127)
    goto <bb 184>;
  else
    goto <bb 183>;

  <bb 183>:
  _impure_ptr.0_555 = _impure_ptr;
  _541 = _impure_ptr.0_555->_stdout;
  fprintf (_541, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _569, 128);
  _impure_ptr.0_513 = _impure_ptr;
  _499 = _impure_ptr.0_513->_stdout;
  fflush (_499);
  _471 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_471]
  # DEBUG new_registration => D#6
  _457 = _471 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _457;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_471] = MEM[(const struct TfLiteRegistration &)_145];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_471].builtin_code = 21;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_471].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 185>;

  <bb 184>:
  _impure_ptr.0_167 = _impure_ptr;
  _168 = _impure_ptr.0_167->_stdout;
  fprintf (_168, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _569, 128);
  _impure_ptr.0_169 = _impure_ptr;
  _170 = _impure_ptr.0_169->_stdout;
  fflush (_170);

  <bb 185>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  _148 = tflite::ops::micro::Register_MEAN ();
  # DEBUG this => D#14
  # DEBUG op => 40
  # DEBUG registration => _148
  # DEBUG max_version => 1
  # DEBUG version => 1
  _793 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  if (_793 > 127)
    goto <bb 187>;
  else
    goto <bb 186>;

  <bb 186>:
  _impure_ptr.0_779 = _impure_ptr;
  _765 = _impure_ptr.0_779->_stdout;
  fprintf (_765, "\r        MicroOpResolver.AddBuiltin : registrations_len_ (%d) < tOpCount (%d)\n", _793, 128);
  _impure_ptr.0_737 = _impure_ptr;
  _723 = _impure_ptr.0_737->_stdout;
  fflush (_723);
  _695 = MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_;
  # DEBUG D#6 => &D#14->registrations_[_695]
  # DEBUG new_registration => D#6
  _681 = _695 + 1;
  MEM[(struct MicroOpResolver *)this_2(D)].registrations_len_ = _681;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_695] = MEM[(const struct TfLiteRegistration &)_148];
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_695].builtin_code = 40;
  MEM[(struct TfLiteRegistration *)this_2(D)].registrations_[_695].version = 1;
  # DEBUG version => 2
  # DEBUG version => 2
  goto <bb 188>;

  <bb 187>:
  _impure_ptr.0_153 = _impure_ptr;
  _154 = _impure_ptr.0_153->_stdout;
  fprintf (_154, "\rError: MicroOpResolver.AddBuiltin : registrations_len_ (%d) >= tOpCount (%d)\n", _793, 128);
  _impure_ptr.0_155 = _impure_ptr;
  _156 = _impure_ptr.0_155->_stdout;
  fflush (_156);

  <bb 188>:
  # DEBUG this => NULL
  # DEBUG op => NULL
  # DEBUG registration => NULL
  # DEBUG max_version => NULL
  # DEBUG version => NULL
  # DEBUG min_version => NULL
  return this_2(D);

}


