   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"micro_optional_debug_tools.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_,"axG",%progbits,_ZNSt6vectorI
  17              		.align	2
  18              		.weak	_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_
  19              		.syntax unified
  20              		.arm
  21              		.fpu neon
  23              	_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_:
  24              		.fnstart
  25              	.LFB9114:
  26              		.file 1 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** /*
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  *
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * Copyright (c) 1994
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * Hewlett-Packard Company
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  *
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * representations about the suitability of this software for any
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  *
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  *
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * Copyright (c) 1996
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  *
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * representations about the suitability of this  software for any
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  */
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** /** @file bits/vector.tcc
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****  */
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #ifndef _VECTOR_TCC
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #define _VECTOR_TCC 1
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** {
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     void
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     reserve(size_type __n)
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     {
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       if (__n > this->max_size())
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       if (this->capacity() < __n)
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	{
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  const size_type __old_size = size();
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  pointer __tmp = _M_allocate_and_copy(__n,
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			_M_get_Tp_allocator());
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			- this->_M_impl._M_start);
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	}
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     }
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #if __cplusplus >= 201103L
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     template<typename... _Args>
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       void
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       {
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  {
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  }
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	else
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _M_emplace_back_aux(std::forward<_Args>(__args)...);
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       }
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #endif
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #else
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     insert(iterator __position, const value_type& __x)
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     {
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       const size_type __n = __position - begin();
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  && __position == end())
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	{
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish, __x);
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  ++this->_M_impl._M_finish;
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	}
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       else
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	{
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  const auto __pos = begin() + (__position - cbegin());
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    {
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      _Tp __x_copy = __x;
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      _M_insert_aux(__pos, std::move(__x_copy));
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    }
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  else
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _M_insert_aux(__pos, __x);
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #else
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _M_insert_aux(__position, __x);
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #endif
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	}
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     }
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     _M_erase(iterator __position)
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     {
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       if (__position + 1 != end())
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       --this->_M_impl._M_finish;
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       return __position;
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     }
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     _M_erase(iterator __first, iterator __last)
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     {
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       if (__first != __last)
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	{
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  if (__last != end())
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	}
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       return __first;
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     }
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     vector<_Tp, _Alloc>&
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     {
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       if (&__x != this)
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	{
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    {
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	        {
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		  // replacement allocator cannot free existing storage
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		  this->clear();
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 				this->_M_impl._M_end_of_storage
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 				- this->_M_impl._M_start);
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		}
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 				   __x._M_get_Tp_allocator());
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    }
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #endif
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  const size_type __xlen = __x.size();
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  if (__xlen > capacity())
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    {
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 						   __x.end());
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    }
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  else if (size() >= __xlen)
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    {
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			    end(), _M_get_Tp_allocator());
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    }
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  else
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    {
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			this->_M_impl._M_start);
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 					  __x._M_impl._M_finish,
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    }
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	}
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       return *this;
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     }
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     void
 225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     {
 228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       if (__n > capacity())
 229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	{
 230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	}
 233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       else if (__n > size())
 234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	{
 235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  std::fill(begin(), end(), __val);
 236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  this->_M_impl._M_finish =
 237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 					  __n - size(), __val,
 239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	}
 241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       else
 242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     }
 244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     template<typename _InputIterator>
 247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       void
 248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		    std::input_iterator_tag)
 251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       {
 252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	     ++__cur, ++__first)
 255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  *__cur = *__first;
 256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	if (__first == __last)
 257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _M_erase_at_end(__cur);
 258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	else
 259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  insert(end(), __first, __last);
 260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       }
 261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       void
 265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		    std::forward_iterator_tag)
 268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       {
 269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	if (__len > capacity())
 272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  {
 273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			  _M_get_Tp_allocator());
 276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			  this->_M_impl._M_end_of_storage
 278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			  - this->_M_impl._M_start);
 279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  }
 283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	else if (size() >= __len)
 284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	else
 286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  {
 287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _ForwardIterator __mid = __first;
 288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    std::advance(__mid, size());
 289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    this->_M_impl._M_finish =
 291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  }
 295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       }
 296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     template<typename... _Args>
 300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       typename vector<_Tp, _Alloc>::iterator
 301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       emplace(const_iterator __position, _Args&&... __args)
 303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       {
 304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	const size_type __n = __position - begin();
 305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage
 306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    && __position == end())
 307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  {
 308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  }
 312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	else
 313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _M_insert_aux(begin() + (__position - cbegin()),
 314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			std::forward<_Args>(__args)...);
 315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       }
 317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     template<typename... _Args>
 320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       void
 321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       _M_insert_aux(iterator __position, _Args&&... __args)
 323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #else
 324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     void
 326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #endif
 329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     {
 330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	{
 332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			           _GLIBCXX_MOVE(*(this->_M_impl._M_finish
 334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 				                   - 1)));
 335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  ++this->_M_impl._M_finish;
 336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #if __cplusplus < 201103L
 337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _Tp __x_copy = __x;
 338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #endif
 339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 				  this->_M_impl._M_finish - 2,
 341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 				  this->_M_impl._M_finish - 1);
 342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #if __cplusplus < 201103L
 343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  *__position = __x_copy;
 344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #else
 345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  *__position = _Tp(std::forward<_Args>(__args)...);
 346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #endif
 347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	}
 348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       else
 349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	{
 350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  const size_type __len =
 351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _M_check_len(size_type(1), "vector::_M_insert_aux");
 352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  const size_type __elems_before = __position - begin();
 353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  pointer __new_start(this->_M_allocate(__len));
 354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  pointer __new_finish(__new_start);
 355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  __try
 356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    {
 357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      // The order of the three operations is dictated by the C++0x
 358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      // case, where the moves could alter a new element belonging
 359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      // to the existing vector.  This is an issue only for callers
 360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      // taking the element by const lvalue ref (see 23.1/13).
 361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl,
 362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		                       __new_start + __elems_before,
 363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 				       std::forward<_Args>(__args)...);
 365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #else
 366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	                               __x);
 367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #endif
 368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      __new_finish = pointer();
 369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      __new_finish
 371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		(this->_M_impl._M_start, __position.base(),
 373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      ++__new_finish;
 376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      __new_finish
 378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		(__position.base(), this->_M_impl._M_finish,
 380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    }
 382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****           __catch(...)
 383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    {
 384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      if (!__new_finish)
 385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		_Alloc_traits::destroy(this->_M_impl,
 386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		                       __new_start + __elems_before);
 387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      else
 388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      _M_deallocate(__new_start, __len);
 390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      __throw_exception_again;
 391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    }
 392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			_M_get_Tp_allocator());
 394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
 395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
 396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			- this->_M_impl._M_start);
 397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __new_start;
 398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __new_finish;
 399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = __new_start + __len;
 400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	}
 401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     }
 402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****     template<typename... _Args>
 406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       void
 407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
  27              		.loc 1 407 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32              	.LBB698:
  33              	.LBB699:
  34              	.LBB700:
  35              	.LBB701:
  36              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** /*
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  *
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  *
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  *
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  *
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  *
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  */
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****  */
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** {
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     struct _Vector_base
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     {
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        	pointer;
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       struct _Vector_impl 
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : public _Tp_alloc_type
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	pointer _M_start;
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	pointer _M_finish;
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	_Vector_impl()
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	{ }
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	{ }
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_start(), _M_finish(), _M_end_of_storage()
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	{ }
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	{
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       };
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     public:
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _Tp_alloc_type&
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       allocator_type
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _Vector_base()
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _M_impl() { }
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _M_impl()
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _M_impl(__a)
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _M_impl(__a)
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	else
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  {
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  }
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     public:
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       pointer
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	if (__p)
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     private:
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     };
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****   /**
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  individual elements in any order.
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  @ingroup sequences
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****   */
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     {
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Concept requirements.
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus < 201103L
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     public:
 228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef _Tp					 value_type;
 229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_iterator;
 236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef size_t					 size_type;
 239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     protected:
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       using _Base::_M_impl;
 246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     public:
 249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector()
 256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _Base() { }
 260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       explicit
 266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _Base(__a) { }
 268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  constructed elements.
 277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       explicit
 279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _Base(__n, __a)
 281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _Base(__n, __a)
 294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
 296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       explicit
 305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _Base(__n, __a)
 308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  but any extra memory in
 318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector(const vector& __x)
 321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _Base(__x.size(),
 322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { this->_M_impl._M_finish =
 324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector(vector&& __x) noexcept
 338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _Base(std::move(__x)) { }
 339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { this->_M_impl._M_finish =
 344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _Base(std::move(__rv), __m)
 353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	if (__rv.get_allocator() != __m)
 355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  {
 356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    __rv.clear();
 361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  }
 362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       : _Base(__a)
 378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  [first,last).
 392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator,
 402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	: _Base(__a)
 406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
 408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator>
 409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	: _Base(__a)
 412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         {
 413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
 417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  responsibility.
 424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator()); }
 428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector&
 438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       operator=(const vector& __x);
 439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 445:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 446:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  if the allocators permit it).
 447:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 448:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 449:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector&
 450:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 451:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 452:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         constexpr bool __move_storage =
 453:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 454:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 455:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 456:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	return *this;
 457:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 458:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 459:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 460:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 461:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 462:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 463:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 464:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  initializer list @a __l.
 465:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 466:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 467:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 468:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 469:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 470:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       vector&
 471:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 472:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 473:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 474:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	return *this;
 475:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 476:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 477:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 478:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 479:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 480:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 481:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 482:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 483:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 484:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 485:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 486:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 487:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 488:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 489:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 490:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 491:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 492:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 493:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 494:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 495:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 496:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 497:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 498:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  range [__first,__last).
 499:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 500:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 501:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 502:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 503:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 504:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 505:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator,
 506:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 507:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
 508:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 509:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 510:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
 511:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator>
 512:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
 513:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 514:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         {
 515:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 516:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 517:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 518:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
 519:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 520:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 521:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 522:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 523:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 524:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 525:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 526:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 527:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  initializer list @a __l.
 528:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 529:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 530:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 531:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 532:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 533:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 534:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 535:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 536:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 537:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 538:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 539:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       using _Base::get_allocator;
 540:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 541:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // iterators
 542:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 543:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 544:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 545:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  element order.
 546:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 547:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       iterator
 548:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 549:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 550:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 551:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 552:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 553:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 554:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  element order.
 555:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 556:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_iterator
 557:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 558:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 559:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 560:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 561:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 562:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 563:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  element order.
 564:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 565:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       iterator
 566:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 567:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 568:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 569:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 570:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 571:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 572:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  ordinary element order.
 573:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 574:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_iterator
 575:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 576:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 577:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 578:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 579:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 580:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 581:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  element order.
 582:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 583:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       reverse_iterator
 584:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 585:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 586:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 587:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 588:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 589:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 590:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  reverse element order.
 591:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 592:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_reverse_iterator
 593:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 594:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 595:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 596:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 597:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 598:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 599:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  in reverse element order.
 600:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 601:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       reverse_iterator
 602:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 603:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 604:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 605:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 606:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 607:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 608:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  is done in reverse element order.
 609:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 610:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_reverse_iterator
 611:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 612:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 613:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 614:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 615:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 616:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 617:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 618:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  element order.
 619:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 620:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_iterator
 621:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       cbegin() const noexcept
 622:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 623:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 624:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 625:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 626:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 627:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  ordinary element order.
 628:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 629:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_iterator
 630:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       cend() const noexcept
 631:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 632:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 633:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 634:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 635:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 636:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  reverse element order.
 637:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 638:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_reverse_iterator
 639:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       crbegin() const noexcept
 640:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 641:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 642:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 643:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 644:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 645:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  is done in reverse element order.
 646:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 647:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_reverse_iterator
 648:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       crend() const noexcept
 649:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 650:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 651:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 652:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 653:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 654:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       size_type
 655:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
  37              		.loc 2 656 0
  38 0000 0C0090E8 		ldm	r0, {r2, r3}
  39              	.LBE701:
  40              	.LBE700:
  41              	.LBE699:
  42              	.LBE698:
  43              		.loc 1 407 0
  44 0004 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  45              		.save {r4, r5, r6, r7, r8, r9, r10, lr}
  46              		.cfi_def_cfa_offset 32
  47              		.cfi_offset 4, -32
  48              		.cfi_offset 5, -28
  49              		.cfi_offset 6, -24
  50              		.cfi_offset 7, -20
  51              		.cfi_offset 8, -16
  52              		.cfi_offset 9, -12
  53              		.cfi_offset 10, -8
  54              		.cfi_offset 14, -4
  55              		.loc 1 407 0
  56 0008 0060A0E1 		mov	r6, r0
  57              	.LVL1:
  58 000c 0190A0E1 		mov	r9, r1
  59              	.LBB710:
  60              	.LBB708:
  61              	.LBB703:
  62              	.LBB702:
  63              		.loc 2 656 0
  64 0010 023043E0 		sub	r3, r3, r2
  65              	.LBE702:
  66              	.LBE703:
  67              	.LBB704:
  68              	.LBB705:
  69              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** /*
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  */
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****  */
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** {
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<bool _BoolType>
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __iter_swap
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static void
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         {
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****             _ValueType1;
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	}
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<>
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __iter_swap<true>
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static void 
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         {
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****           swap(*__a, *__b);
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         }
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #endif
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   Nothing.
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  iterators themselves.
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline void
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ValueType1;
 131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ValueType2;
 133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ValueType2>)
 136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ValueType1>)
 138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ReferenceType1;
 141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	_ReferenceType2;
 143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #else
 148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #endif
 150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _ForwardIterator2
 166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       return __first2;
 179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  preprocessor macro.
 191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline const _Tp&
 195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       if (__b < __a)
 201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       return __a;
 203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  preprocessor macro.
 215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _Tp>
 217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline const _Tp&
 219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       // concept requirements
 222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       if (__a < __b)
  70              		.loc 3 224 0
  71 0014 4331B0E1 		asrs	r3, r3, #2
  72 0018 0400000A 		beq	.L9
  73              	.LVL2:
  74              	.LBE705:
  75              	.LBE704:
 657:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 658:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 659:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       size_type
 660:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 661:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 662:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 663:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 664:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 665:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 666:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 667:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 668:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 669:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 670:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 671:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 672:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 673:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 674:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       resize(size_type __new_size)
 675:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 676:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	if (__new_size > size())
 677:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 678:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	else if (__new_size < size())
 679:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 680:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 681:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 682:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 683:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 684:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 685:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 686:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 687:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 688:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 689:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 690:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 691:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  given data.
 692:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 693:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 694:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 695:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 696:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	if (__new_size > size())
 697:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 698:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	else if (__new_size < size())
 699:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 700:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 701:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
 702:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 703:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 704:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 705:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 706:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 707:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 708:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 709:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 710:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 711:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  given data.
 712:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 713:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 714:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 715:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 716:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	if (__new_size > size())
 717:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 718:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	else if (__new_size < size())
 719:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 720:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 721:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 722:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 723:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 724:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 725:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 726:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       shrink_to_fit()
 727:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 728:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 729:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 730:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 731:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 732:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 733:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 734:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       size_type
 735:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 736:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 737:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
 738:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 739:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 740:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 741:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  equal end().)
 742:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 743:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       bool
 744:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 745:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return begin() == end(); }
 746:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 747:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 748:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 749:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *          elements.
 750:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
 751:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 752:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 753:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
 754:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 755:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
 756:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  thrown.
 757:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 758:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 759:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
 760:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
 761:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 762:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  and copying of %vector data.
 763:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 764:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 765:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       reserve(size_type __n);
 766:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 767:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // element access
 768:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 769:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 770:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
 771:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  accessed.
 772:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
 773:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 774:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 775:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
 776:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 777:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  see at().)
 778:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 779:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       reference
 780:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 781:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 782:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 783:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 784:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 785:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
 786:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  accessed.
 787:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 788:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 789:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 790:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
 791:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 792:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  see at().)
 793:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 794:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_reference
 795:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 796:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 797:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 798:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     protected:
 799:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /// Safety check used only from at().
 800:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 801:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
 802:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 803:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	if (__n >= this->size())
 804:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 805:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
 806:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 				       "(which is %zu)"),
 807:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 				   __n, this->size());
 808:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 809:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 810:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     public:
 811:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 812:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 813:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
 814:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  accessed.
 815:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
 816:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 817:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 818:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
 819:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 820:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
 821:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 822:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       reference
 823:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       at(size_type __n)
 824:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 825:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	_M_range_check(__n);
 826:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	return (*this)[__n]; 
 827:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 828:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 829:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 830:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 831:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
 832:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  accessed.
 833:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 834:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 835:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 836:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
 837:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 838:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
 839:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 840:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_reference
 841:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       at(size_type __n) const
 842:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 843:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	_M_range_check(__n);
 844:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	return (*this)[__n];
 845:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 846:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 847:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 848:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
 849:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  element of the %vector.
 850:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 851:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       reference
 852:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
 853:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return *begin(); }
 854:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 855:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 856:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
 857:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  element of the %vector.
 858:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 859:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_reference
 860:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
 861:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return *begin(); }
 862:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 863:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 864:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
 865:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  element of the %vector.
 866:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 867:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       reference
 868:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
 869:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return *(end() - 1); }
 870:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       
 871:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 872:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
 873:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  last element of the %vector.
 874:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 875:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_reference
 876:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
 877:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return *(end() - 1); }
 878:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 879:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 880:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 881:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // data access
 882:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 883:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
 884:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
 885:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 886:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 887:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _Tp*
 888:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
 889:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       pointer
 890:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 891:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
 892:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 893:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 894:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 895:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const _Tp*
 896:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
 897:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       const_pointer
 898:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 899:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
 900:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 901:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 902:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
 903:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 904:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
 905:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
 906:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 907:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
 908:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
 909:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
 910:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
 911:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  available.
 912:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 913:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 914:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       push_back(const value_type& __x)
 915:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 916:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 917:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  {
 918:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 919:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	                             __x);
 920:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
 921:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  }
 922:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	else
 923:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 924:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_emplace_back_aux(__x);
 925:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
 926:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_insert_aux(end(), __x);
 927:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 928:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 929:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 930:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 931:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 932:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       push_back(value_type&& __x)
 933:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 934:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 935:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename... _Args>
 936:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
 937:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         emplace_back(_Args&&... __args);
 938:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
 939:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 940:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 941:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Removes last element.
 942:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 943:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
 944:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 945:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
 946:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
 947:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  called.
 948:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 949:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
 950:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
 951:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
 952:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
 953:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 954:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 955:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 956:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 957:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 958:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
 959:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 960:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
 961:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 962:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 963:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
 964:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
 965:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
 966:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
 967:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  std::list.
 968:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 969:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename... _Args>
 970:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         iterator
 971:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         emplace(const_iterator __position, _Args&&... __args);
 972:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 973:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 974:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 975:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 976:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
 977:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 978:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 979:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
 980:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
 981:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 982:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
 983:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 984:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       iterator
 985:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
 986:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
 987:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
 988:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 989:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
 990:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
 991:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 992:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
 993:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
 994:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
 995:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 996:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
 997:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
 998:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       iterator
 999:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1000:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
1001:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1002:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1003:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
1004:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1005:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1006:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1007:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1008:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1009:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1010:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1011:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1012:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1013:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
1014:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       iterator
1015:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1016:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return emplace(__position, std::move(__x)); }
1017:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1018:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
1019:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1020:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1021:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1022:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1023:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the 
1024:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1025:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  specified by @a position.
1026:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1027:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1028:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1029:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  consider using std::list.
1030:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
1031:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       iterator
1032:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1033:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return this->insert(__position, __l.begin(), __l.end()); }
1034:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
1035:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1036:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1037:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
1038:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1039:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1040:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1041:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1042:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1043:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1044:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1045:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1046:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1047:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1048:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1049:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  consider using std::list.
1050:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
1051:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       iterator
1052:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1053:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
1054:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1055:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1056:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	return begin() + __offset;
1057:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
1058:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
1059:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
1060:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1061:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1062:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1063:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1064:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1065:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1066:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1067:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1068:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1069:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1070:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  consider using std::list.
1071:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
1072:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
1073:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1074:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1075:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
1076:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1077:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1078:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
1079:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1080:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1081:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1082:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1083:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1084:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1085:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1086:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1087:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  by @a pos.
1088:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1089:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1090:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1091:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  consider using std::list.
1092:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
1093:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator,
1094:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1095:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         iterator
1096:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         insert(const_iterator __position, _InputIterator __first,
1097:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	       _InputIterator __last)
1098:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         {
1099:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  return begin() + __offset;
1103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
1104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
1105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
1106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  by @a pos.
1114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  consider using std::list.
1118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
1119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator>
1120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1121:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         insert(iterator __position, _InputIterator __first,
1122:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	       _InputIterator __last)
1123:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         {
1124:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1125:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1126:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1127:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
1128:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
1129:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1130:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
1131:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1132:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1133:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1134:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1135:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1136:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1137:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1138:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1139:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1140:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1141:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1142:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1143:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1144:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
1145:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       iterator
1146:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1147:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       erase(const_iterator __position)
1148:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1149:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
1150:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       erase(iterator __position)
1151:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1152:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
1153:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1154:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
1155:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1156:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1157:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1158:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *                  erased.
1159:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1160:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1161:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1162:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1163:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1164:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1165:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1166:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1167:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1168:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1169:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1171:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
1172:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       iterator
1173:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1174:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1175:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
1176:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	const auto __beg = begin();
1177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1178:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1179:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
1180:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
1181:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1182:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1183:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
1184:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1185:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
1186:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1187:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1188:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *
1189:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1190:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1191:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1192:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1193:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
1194:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
1195:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1196:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
1197:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1198:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1199:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	                          __x._M_get_Tp_allocator());
1200:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
1201:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1202:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
1203:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1204:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1205:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1206:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  the user's responsibility.
1207:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
1208:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
1209:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1210:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1211:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1212:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****     protected:
1213:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       /**
1214:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1215:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1216:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****        */
1217:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1218:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         pointer
1219:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_allocate_and_copy(size_type __n,
1220:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1221:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         {
1222:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1223:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  __try
1224:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    {
1225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	      return __result;
1228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    }
1229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  __catch(...)
1230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    {
1231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	      __throw_exception_again;
1233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    }
1234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
1235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _Integer>
1244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         {
1247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(static_cast<size_type>(__n));
1248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
1252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator>
1255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			       __false_type)
1258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         {
1259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    iterator_category _IterCategory;
1261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last, _IterCategory());
1262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
1263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator>
1266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_range_initialize(_InputIterator __first,
1268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			    _InputIterator __last, std::input_iterator_tag)
1269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         {
1270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  for (; __first != __last; ++__first)
1271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    emplace_back(*__first);
1273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
1274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    push_back(*__first);
1275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
1276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
1277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_range_initialize(_ForwardIterator __first,
1282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			    _ForwardIterator __last, std::forward_iterator_tag)
1283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         {
1284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = this->_M_allocate(__n);
1286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
1292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
1296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
1298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
1302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
1306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
1308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
1312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
1313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // assignment work for the range versions.
1316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _Integer>
1322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         { _M_fill_assign(__n, __val); }
1325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator>
1328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			   __false_type)
1331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         {
1332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    iterator_category _IterCategory;
1334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_assign_aux(__first, __last, _IterCategory());
1335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
1336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator>
1339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_assign_aux(_InputIterator __first, _InputIterator __last,
1341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // to be the same thing.
1351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
1352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Internal insert functions follow.
1356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _Integer>
1362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			   __true_type)
1365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         { _M_fill_insert(__pos, __n, __val); }
1366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator>
1369:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1370:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_insert_dispatch(iterator __pos, _InputIterator __first,
1371:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1372:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         {
1373:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1374:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	    iterator_category _IterCategory;
1375:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last, _IterCategory());
1376:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	}
1377:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1378:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1379:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _InputIterator>
1380:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1381:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_range_insert(iterator __pos, _InputIterator __first,
1382:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1383:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1384:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1385:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1386:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1387:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_range_insert(iterator __pos, _ForwardIterator __first,
1388:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1389:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1390:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1391:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // the same thing.
1392:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
1393:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1394:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1395:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1396:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by resize(n).
1397:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
1398:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1399:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1400:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       bool
1401:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1402:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
1403:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1404:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by insert(p,x)
1405:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1406:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       void
1407:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #else
1409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename... _Args>
1410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_insert_aux(iterator __position, _Args&&... __args);
1412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       template<typename... _Args>
1414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         void
1415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****         _M_emplace_back_aux(_Args&&... __args);
1416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** #endif
1417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       // Called by the latter.
1419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       size_type
1420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
1421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       {
1422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
1423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
1424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
1425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	const size_type __len = size() + std::max(size(), __n);
  76              		.loc 2 1425 0
  77 001c 8350A0E1 		lsl	r5, r3, #1
  78              	.LVL3:
1426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
  79              		.loc 2 1426 0
  80 0020 050053E1 		cmp	r3, r5
  81 0024 1F00009A 		bls	.L21
  82              	.L10:
  83 0028 0350E0E3 		mvn	r5, #3
  84              	.LVL4:
  85 002c 000000EA 		b	.L2
  86              	.LVL5:
  87              	.L9:
  88              	.LBB707:
  89              	.LBB706:
  90              		.loc 3 224 0
  91 0030 0450A0E3 		mov	r5, #4
  92              	.LVL6:
  93              	.L2:
  94              	.LBE706:
  95              	.LBE707:
  96              	.LBE708:
  97              	.LBE710:
  98              	.LBB711:
  99              	.LBB712:
 100              	.LBB713:
 101              	.LBB714:
 102              	.LBB715:
 103              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
   1:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****  */
  28:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  29:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  32:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #include <new>
  34:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #endif
  39:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  40:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** {
  42:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  44:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****   using std::size_t;
  45:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****   using std::ptrdiff_t;
  46:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  47:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****   /**
  48:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *  @ingroup allocators
  50:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *
  51:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  53:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  54:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *
  55:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****    */
  57:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****   template<typename _Tp>
  58:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****     class new_allocator
  59:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****     {
  60:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****     public:
  61:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef size_t     size_type;
  62:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  64:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  65:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  66:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  67:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       template<typename _Tp1>
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****         struct rebind
  71:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  73:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  74:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #endif
  78:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  79:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       template<typename _Tp1>
  84:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  86:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  88:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       pointer
  89:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  91:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  92:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       const_pointer
  93:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  95:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
  96:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       pointer
  99:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       { 
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 	if (__n > this->max_size())
 102:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 103:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 104              		.loc 4 104 0
 105 0034 0500A0E1 		mov	r0, r5
 106              	.LVL7:
 107 0038 FEFFFFEB 		bl	_Znwj
 108              	.LVL8:
 109 003c 0070A0E1 		mov	r7, r0
 110              	.LVL9:
 111              	.L8:
 112              	.LBE715:
 113              	.LBE714:
 114              	.LBE713:
 115              	.LBE712:
 116              	.LBE711:
 117              	.LBB717:
 118              	.LBB718:
 656:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 
 119              		.loc 2 656 0
 120 0040 008096E5 		ldr	r8, [r6]
 121 0044 044096E5 		ldr	r4, [r6, #4]
 122 0048 002099E5 		ldr	r2, [r9]
 123 004c 084044E0 		sub	r4, r4, r8
 124 0050 4431A0E1 		asr	r3, r4, #2
 125              	.LVL10:
 126              	.LBE718:
 127              	.LBE717:
 128              	.LBB719:
 129              	.LBB720:
 130              	.LBB721:
 105:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       }
 106:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 107:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       void
 109:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       deallocate(pointer __p, size_type)
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       { ::operator delete(__p); }
 111:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 112:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       size_type
 113:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 114:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 115:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 116:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 117:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 118:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****         void
 119:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****         construct(_Up* __p, _Args&&... __args)
 120:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 131              		.loc 4 120 0
 132 0054 040077E1 		cmn	r7, r4
 133 0058 04208717 		strne	r2, [r7, r4]
 134              	.LVL11:
 135              	.LBE721:
 136              	.LBE720:
 137              	.LBE719:
 138              	.LBB722:
 139              	.LBB723:
 140              	.LBB724:
 141              	.LBB725:
 142              	.LBB726:
 143              	.LBB727:
 144              	.LBB728:
 145              	.LBB729:
 146              	.LBB730:
 147              	.LBB731:
 148              	.LBB732:
 225:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 226:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       return __a;
 227:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 228:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 229:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 230:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 231:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 232:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 233:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 234:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 235:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 236:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 237:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 238:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 239:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 240:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 241:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 242:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline const _Tp&
 243:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 244:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 245:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 246:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 247:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 248:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       return __a;
 249:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 250:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 251:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   /**
 252:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 253:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 254:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 255:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 256:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 257:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 258:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *
 259:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 260:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 261:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   */
 262:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 263:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 264:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline const _Tp&
 265:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 266:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 267:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 268:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 269:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	return __b;
 270:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       return __a;
 271:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     }
 272:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 273:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 274:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 275:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _Iterator>
 276:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     inline _Iterator
 277:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 278:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     { return __it; }
 279:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 280:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 281:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 282:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 283:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 284:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 285:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 286:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<bool, bool, typename>
 287:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __copy_move
 288:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 289:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 290:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static _OI
 291:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 292:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         {
 293:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 294:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	    *__result = *__first;
 295:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  return __result;
 296:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	}
 297:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
 298:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 299:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 300:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<typename _Category>
 301:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 302:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 303:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 304:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static _OI
 305:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 306:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         {
 307:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 308:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 309:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  return __result;
 310:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	}
 311:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
 312:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #endif
 313:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 314:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<>
 315:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 316:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 317:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 318:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static _OI
 319:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 320:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         { 
 321:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 322:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 323:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	    {
 324:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	      *__result = *__first;
 325:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	      ++__first;
 326:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	      ++__result;
 327:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	    }
 328:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  return __result;
 329:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	}
 330:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
 331:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 332:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 333:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<>
 334:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 335:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 336:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 337:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static _OI
 338:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 339:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         { 
 340:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 341:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 342:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	    {
 343:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 344:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	      ++__first;
 345:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	      ++__result;
 346:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	    }
 347:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  return __result;
 348:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	}
 349:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     };
 350:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #endif
 351:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 
 352:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****   template<bool _IsMove>
 353:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 354:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****     {
 355:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****       template<typename _Tp>
 356:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         static _Tp*
 357:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 358:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h ****         {
 359:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 360:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 361:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 362:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 363:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 364:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 365:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** #endif
 366:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 367:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	  if (_Num)
 149              		.loc 3 367 0
 150 005c 000053E3 		cmp	r3, #0
 151 0060 0900001A 		bne	.L22
 152              	.LVL12:
 153              	.LBE732:
 154              	.LBE731:
 155              	.LBE730:
 156              	.LBE729:
 157              	.LBE728:
 158              	.LBE727:
 159              	.LBE726:
 160              	.LBE725:
 161              	.LBE724:
 162              	.LBE723:
 163              	.LBE722:
 164              	.LBB753:
 165              	.LBB754:
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 166              		.loc 2 177 0
 167 0064 000058E3 		cmp	r8, #0
 168              	.LBE754:
 169              	.LBE753:
 408:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       _M_emplace_back_aux(_Args&&... __args)
 409:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       {
 410:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	const size_type __len =
 411:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  _M_check_len(size_type(1), "vector::_M_emplace_back_aux");
 412:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	pointer __new_start(this->_M_allocate(__len));
 413:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	pointer __new_finish(__new_start);
 414:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	__try
 415:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  {
 416:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, __new_start + size(),
 417:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 418:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    __new_finish = pointer();
 419:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 420:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    __new_finish
 421:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      = std::__uninitialized_move_if_noexcept_a
 422:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      (this->_M_impl._M_start, this->_M_impl._M_finish,
 423:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	       __new_start, _M_get_Tp_allocator());
 424:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 
 425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    ++__new_finish;
 170              		.loc 1 425 0
 171 0068 044084E2 		add	r4, r4, #4
 172              	.LVL13:
 173 006c 044087E0 		add	r4, r7, r4
 174              	.LVL14:
 175              	.LBB759:
 176              	.LBB758:
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 177              		.loc 2 177 0
 178 0070 0100000A 		beq	.L7
 179              	.LVL15:
 180              	.L6:
 181              	.LBB755:
 182              	.LBB756:
 183              	.LBB757:
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 184              		.loc 4 110 0
 185 0074 0800A0E1 		mov	r0, r8
 186 0078 FEFFFFEB 		bl	_ZdlPv
 187              	.LVL16:
 188              	.L7:
 189              	.LBE757:
 190              	.LBE756:
 191              	.LBE755:
 192              	.LBE758:
 193              	.LBE759:
 426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  }
 427:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	__catch(...)
 428:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  {
 429:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    if (!__new_finish)
 430:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      _Alloc_traits::destroy(this->_M_impl, __new_start + size());
 431:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    else
 432:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	      std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 433:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    _M_deallocate(__new_start, __len);
 434:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	    __throw_exception_again;
 435:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  }
 436:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 437:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		      _M_get_Tp_allocator());
 438:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	_M_deallocate(this->_M_impl._M_start,
 439:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		      this->_M_impl._M_end_of_storage
 440:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 		      - this->_M_impl._M_start);
 441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	this->_M_impl._M_start = __new_start;
 442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	this->_M_impl._M_finish = __new_finish;
 443:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	this->_M_impl._M_end_of_storage = __new_start + __len;
 194              		.loc 1 443 0
 195 007c 055087E0 		add	r5, r7, r5
 441:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	this->_M_impl._M_finish = __new_finish;
 196              		.loc 1 441 0
 197 0080 007086E5 		str	r7, [r6]
 442:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	this->_M_impl._M_end_of_storage = __new_start + __len;
 198              		.loc 1 442 0
 199 0084 300086E9 		stmib	r6, {r4, r5}
 444:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       }
 200              		.loc 1 444 0
 201 0088 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 202              	.LVL17:
 203              	.L22:
 204              	.LBB760:
 205              	.LBB751:
 206              	.LBB749:
 207              	.LBB747:
 208              	.LBB745:
 209              	.LBB743:
 210              	.LBB741:
 211              	.LBB739:
 212              	.LBB737:
 213              	.LBB735:
 214              	.LBB733:
 368:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 215              		.loc 3 368 0
 216 008c 0420A0E1 		mov	r2, r4
 217 0090 0810A0E1 		mov	r1, r8
 218 0094 0700A0E1 		mov	r0, r7
 219              	.LBE733:
 220              	.LBE735:
 221              	.LBE737:
 222              	.LBE739:
 223              	.LBE741:
 224              	.LBE743:
 225              	.LBE745:
 226              	.LBE747:
 227              	.LBE749:
 228              	.LBE751:
 229              	.LBE760:
 425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  }
 230              		.loc 1 425 0
 231 0098 044084E2 		add	r4, r4, #4
 232              	.LBB761:
 233              	.LBB752:
 234              	.LBB750:
 235              	.LBB748:
 236              	.LBB746:
 237              	.LBB744:
 238              	.LBB742:
 239              	.LBB740:
 240              	.LBB738:
 241              	.LBB736:
 242              	.LBB734:
 243              		.loc 3 368 0
 244 009c FEFFFFEB 		bl	memmove
 245              	.LVL18:
 246              	.LBE734:
 247              	.LBE736:
 248              	.LBE738:
 249              	.LBE740:
 250              	.LBE742:
 251              	.LBE744:
 252              	.LBE746:
 253              	.LBE748:
 254              	.LBE750:
 255              	.LBE752:
 256              	.LBE761:
 425:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  }
 257              		.loc 1 425 0
 258 00a0 044087E0 		add	r4, r7, r4
 259              	.LVL19:
 260 00a4 F2FFFFEA 		b	.L6
 261              	.LVL20:
 262              	.L21:
 263              	.LBB762:
 264              	.LBB709:
 265              		.loc 2 1426 0
 266 00a8 070175E3 		cmn	r5, #-1073741823
 267 00ac DDFFFF8A 		bhi	.L10
 268              	.LVL21:
 269              	.LBE709:
 270              	.LBE762:
 271              	.LBB763:
 272              	.LBB716:
 170:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h ****       }
 273              		.loc 2 170 0
 274 00b0 000055E3 		cmp	r5, #0
 275 00b4 8351A011 		lslne	r5, r3, #3
 276 00b8 DDFFFF1A 		bne	.L2
 277 00bc 0570A0E1 		mov	r7, r5
 278 00c0 DEFFFFEA 		b	.L8
 279              	.LBE716:
 280              	.LBE763:
 281              		.cfi_endproc
 282              	.LFE9114:
 283              		.fnend
 285              		.section	.text._ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE,"
 286              		.align	2
 287              		.syntax unified
 288              		.arm
 289              		.fpu neon
 291              	_ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE:
 292              		.fnstart
 293              	.LFB6558:
 294              		.file 5 "../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp"
   1:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** /* Copyright 2017 The TensorFlow Authors. All Rights Reserved.
   2:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
   3:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** Licensed under the Apache License, Version 2.0 (the "License");
   4:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** you may not use this file except in compliance with the License.
   5:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** You may obtain a copy of the License at
   6:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
   7:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     http://www.apache.org/licenses/LICENSE-2.0
   8:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
   9:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** Unless required by applicable law or agreed to in writing, software
  10:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** distributed under the License is distributed on an "AS IS" BASIS,
  11:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** See the License for the specific language governing permissions and
  13:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** limitations under the License.
  14:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** ==============================================================================*/
  15:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** #include "tensorflow/lite/micro/micro_optional_debug_tools.h"
  16:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
  17:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** // `cinttypes` requires `__STDC_FORMAT_MACROS` to be defined to expose `PRId32`.
  18:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** #ifndef __STDC_FORMAT_MACROS
  19:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** #define __STDC_FORMAT_MACROS
  20:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** #endif
  21:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
  22:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** #include <cinttypes>
  23:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
  24:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** #include "tensorflow/lite/schema/schema_generated.h"
  25:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** namespace tflite {
  26:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** namespace {
  27:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
  28:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** std::vector<int> flatbuffersVector2StdVector(
  29:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     const flatbuffers::Vector<int32_t>& fVector) {
 295              		.loc 5 29 0
 296              		.cfi_startproc
 297              		.cfi_personality 0,__gxx_personality_v0
 298              		.cfi_lsda 0,.LLSDA6558
 299              		@ args = 0, pretend = 0, frame = 8
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              	.LVL22:
 302              	.LBB835:
 303              	.LBB836:
 304              		.file 6 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /*
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  * Copyright 2014 Google Inc. All rights reserved.
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  *
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  * you may not use this file except in compliance with the License.
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  * You may obtain a copy of the License at
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  *
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  *
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  * Unless required by applicable law or agreed to in writing, software
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  * See the License for the specific language governing permissions and
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  * limitations under the License.
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  */
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** #ifndef FLATBUFFERS_H_
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** #define FLATBUFFERS_H_
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** #include "third_party/flatbuffers/include/flatbuffers/base.h"
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** #if defined(FLATBUFFERS_NAN_DEFAULTS)
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** #include <cmath>
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** #endif
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** namespace flatbuffers {
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Generic 'operator==' with conditional specialisations.
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> inline bool IsTheSameAs(T e, T def) { return e == def; }
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** #if defined(FLATBUFFERS_NAN_DEFAULTS) && \
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     (!defined(_MSC_VER) || _MSC_VER >= 1800)
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Like `operator==(e, def)` with weak NaN if T=(float|double).
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<> inline bool IsTheSameAs<float>(float e, float def) {
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return (e == def) || (std::isnan(def) && std::isnan(e));
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<> inline bool IsTheSameAs<double>(double e, double def) {
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return (e == def) || (std::isnan(def) && std::isnan(e));
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** #endif
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Wrapper for uoffset_t to allow safe template specialization.
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Value is allowed to be 0 to indicate a null object (see e.g. AddOffset).
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> struct Offset {
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t o;
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset() : o(0) {}
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset(uoffset_t _o) : o(_o) {}
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<void> Union() const { return Offset<void>(o); }
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool IsNull() const { return !o; }
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** inline void EndianCheck() {
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   int endiantest = 1;
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // If this fails, see FLATBUFFERS_LITTLEENDIAN above.
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FLATBUFFERS_ASSERT(*reinterpret_cast<char *>(&endiantest) ==
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                      FLATBUFFERS_LITTLEENDIAN);
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   (void)endiantest;
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> FLATBUFFERS_CONSTEXPR size_t AlignOf() {
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #ifdef _MSC_VER
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return __alignof(T);
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #else
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #ifndef alignof
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       return __alignof__(T);
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #else
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       return alignof(T);
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #endif
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // When we read serialized data from memory, in the case of most scalars,
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // we want to just read T, but in the case of Offset, we want to actually
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // perform the indirection and return a pointer.
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // The template specialization below does just that.
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // It is wrapped in a struct since function templates can't overload on the
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // return type like this.
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // The typedef is for the convenience of callers of this function
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // (avoiding the need for a trailing return decltype)
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> struct IndirectHelper {
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef T return_type;
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef T mutable_return_type;
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   static const size_t element_stride = sizeof(T);
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   static return_type Read(const uint8_t *p, uoffset_t i) {
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return EndianScalar((reinterpret_cast<const T *>(p))[i]);
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> struct IndirectHelper<Offset<T>> {
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef const T *return_type;
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef T *mutable_return_type;
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   static const size_t element_stride = sizeof(uoffset_t);
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   static return_type Read(const uint8_t *p, uoffset_t i) {
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     p += i * sizeof(uoffset_t);
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return reinterpret_cast<return_type>(p + ReadScalar<uoffset_t>(p));
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> struct IndirectHelper<const T *> {
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef const T *return_type;
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef T *mutable_return_type;
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   static const size_t element_stride = sizeof(T);
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   static return_type Read(const uint8_t *p, uoffset_t i) {
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return reinterpret_cast<const T *>(p + i * sizeof(T));
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // An STL compatible iterator implementation for Vector below, effectively
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // calling Get() for every element.
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T, typename IT> struct VectorIterator {
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef std::random_access_iterator_tag iterator_category;
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef IT value_type;
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef ptrdiff_t difference_type;
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef IT *pointer;
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef IT &reference;
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator(const uint8_t *data, uoffset_t i)
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       : data_(data + IndirectHelper<T>::element_stride * i) {}
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator(const VectorIterator &other) : data_(other.data_) {}
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator() : data_(nullptr) {}
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator &operator=(const VectorIterator &other) {
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     data_ = other.data_;
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return *this;
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #if !defined(FLATBUFFERS_CPP98_STL)
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator &operator=(VectorIterator &&other) {
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     data_ = other.data_;
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return *this;
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif  // !defined(FLATBUFFERS_CPP98_STL)
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool operator==(const VectorIterator &other) const {
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return data_ == other.data_;
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool operator<(const VectorIterator &other) const {
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return data_ < other.data_;
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool operator!=(const VectorIterator &other) const {
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return data_ != other.data_;
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   difference_type operator-(const VectorIterator &other) const {
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return (data_ - other.data_) / IndirectHelper<T>::element_stride;
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   IT operator*() const { return IndirectHelper<T>::Read(data_, 0); }
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   IT operator->() const { return IndirectHelper<T>::Read(data_, 0); }
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator &operator++() {
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     data_ += IndirectHelper<T>::element_stride;
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return *this;
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator operator++(int) {
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     VectorIterator temp(data_, 0);
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     data_ += IndirectHelper<T>::element_stride;
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return temp;
 164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 165:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 166:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator operator+(const uoffset_t &offset) const {
 167:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return VectorIterator(data_ + offset * IndirectHelper<T>::element_stride,
 168:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                           0);
 169:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 170:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 171:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator &operator+=(const uoffset_t &offset) {
 172:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     data_ += offset * IndirectHelper<T>::element_stride;
 173:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return *this;
 174:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 175:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 176:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator &operator--() {
 177:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     data_ -= IndirectHelper<T>::element_stride;
 178:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return *this;
 179:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 180:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 181:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator operator--(int) {
 182:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     VectorIterator temp(data_, 0);
 183:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     data_ -= IndirectHelper<T>::element_stride;
 184:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return temp;
 185:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 186:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 187:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator operator-(const uoffset_t &offset) const {
 188:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return VectorIterator(data_ - offset * IndirectHelper<T>::element_stride,
 189:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                           0);
 190:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 191:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 192:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorIterator &operator-=(const uoffset_t &offset) {
 193:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     data_ -= offset * IndirectHelper<T>::element_stride;
 194:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return *this;
 195:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 196:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 197:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  private:
 198:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const uint8_t *data_;
 199:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
 200:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 201:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename Iterator> struct VectorReverseIterator :
 202:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   public std::reverse_iterator<Iterator> {
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 204:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   explicit VectorReverseIterator(Iterator iter) : iter_(iter) {}
 205:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 206:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typename Iterator::value_type operator*() const { return *(iter_ - 1); }
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 208:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typename Iterator::value_type operator->() const { return *(iter_ - 1); }
 209:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 210:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  private:
 211:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Iterator iter_;
 212:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
 213:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 214:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** struct String;
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // This is used as a helper type for accessing vectors.
 217:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Vector::data() assumes the vector elements start after the length field.
 218:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> class Vector {
 219:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  public:
 220:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef VectorIterator<T, typename IndirectHelper<T>::mutable_return_type>
 221:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       iterator;
 222:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef VectorIterator<T, typename IndirectHelper<T>::return_type>
 223:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       const_iterator;
 224:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef VectorReverseIterator<iterator> reverse_iterator;
 225:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef VectorReverseIterator<const_iterator> const_reverse_iterator;
 226:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t size() const { return EndianScalar(length_); }
 305              		.loc 6 227 0
 306 0000 002091E5 		ldr	r2, [r1]
 307              	.LBE836:
 308              	.LBE835:
 309              	.LBB837:
 310              	.LBB838:
 311              	.LBB839:
 312              	.LBB840:
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	{ }
 313              		.loc 2 87 0
 314 0004 0030A0E3 		mov	r3, #0
 315              	.LBE840:
 316              	.LBE839:
 317              	.LBE838:
 318              	.LBE837:
 319              		.loc 5 29 0
 320 0008 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 321              		.save {r4, r5, r6, r7, r8, lr}
 322              		.cfi_def_cfa_offset 24
 323              		.cfi_offset 4, -24
 324              		.cfi_offset 5, -20
 325              		.cfi_offset 6, -16
 326              		.cfi_offset 7, -12
 327              		.cfi_offset 8, -8
 328              		.cfi_offset 14, -4
 329 000c 0050A0E1 		mov	r5, r0
 330              		.pad #8
 331 0010 08D04DE2 		sub	sp, sp, #8
 332              		.cfi_def_cfa_offset 32
 333              	.LBB847:
 334              	.LBB845:
 335              	.LBB843:
 336              	.LBB841:
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	{ }
 337              		.loc 2 87 0
 338 0014 003080E5 		str	r3, [r0]
 339              	.LBE841:
 340              	.LBE843:
 341              	.LBE845:
 342              	.LBE847:
 343              	.LBB848:
 344              	.LBB849:
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
 345              		.loc 1 68 0
 346 0018 070172E3 		cmn	r2, #-1073741823
 347              	.LBE849:
 348              	.LBE848:
 349              	.LBB874:
 350              	.LBB846:
 351              	.LBB844:
 352              	.LBB842:
  87:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	{ }
 353              		.loc 2 87 0
 354 001c 043080E5 		str	r3, [r0, #4]
 355 0020 083080E5 		str	r3, [r0, #8]
 356              	.LVL23:
 357              	.LBE842:
 358              	.LBE844:
 359              	.LBE846:
 360              	.LBE874:
 361              	.LBB875:
 362              	.LBB869:
  68:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
 363              		.loc 1 68 0
 364 0024 2E00008A 		bhi	.L48
 365              	.LVL24:
 366              	.LBB850:
  70:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	{
 367              		.loc 1 70 0
 368 0028 000052E3 		cmp	r2, #0
 369 002c 0200001A 		bne	.L49
 370              	.LVL25:
 371              	.L23:
 372              	.LBE850:
 373              	.LBE869:
 374              	.LBE875:
  30:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   std::vector<int> stdVector;
  31:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   stdVector.reserve(fVector.size());
  32:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   for (size_t i = 0; i < fVector.size(); i++) {
  33:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     stdVector.push_back(fVector.Get(i));
  34:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
  35:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   return stdVector;
  36:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }
 375              		.loc 5 36 0
 376 0030 0500A0E1 		mov	r0, r5
 377 0034 08D08DE2 		add	sp, sp, #8
 378              		.cfi_remember_state
 379              		.cfi_def_cfa_offset 24
 380              		@ sp needed
 381 0038 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 382              	.LVL26:
 383              	.L49:
 384              		.cfi_restore_state
 385              	.LBB876:
 386              	.LBB870:
 387              	.LBB866:
 388              	.LBB851:
 389              	.LBB852:
 390              	.LBB853:
 391              	.LBB854:
 392              	.LBB855:
 393              	.LBB856:
 394              	.LBB857:
 395              	.LBB858:
 104:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h ****       }
 396              		.loc 4 104 0
 397 003c 0261A0E1 		lsl	r6, r2, #2
 398 0040 0170A0E1 		mov	r7, r1
 399              	.LVL27:
 400 0044 0600A0E1 		mov	r0, r6
 401              	.LVL28:
 402              	.LEHB0:
 403 0048 FEFFFFEB 		bl	_Znwj
 404              	.LVL29:
 405 004c 0040A0E1 		mov	r4, r0
 406              	.LVL30:
 407              	.LBE858:
 408              	.LBE857:
 409              	.LBE856:
 410              	.LBE855:
 411              	.LBE854:
 412              	.LBE853:
 413              	.LBE852:
  76:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 			_M_get_Tp_allocator());
 414              		.loc 1 76 0
 415 0050 000095E5 		ldr	r0, [r5]
 416              	.LVL31:
 417              	.LBB859:
 418              	.LBB860:
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 419              		.loc 2 177 0
 420 0054 000050E3 		cmp	r0, #0
 421 0058 0000000A 		beq	.L26
 422              	.LVL32:
 423              	.LBB861:
 424              	.LBB862:
 425              	.LBB863:
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 426              		.loc 4 110 0
 427 005c FEFFFFEB 		bl	_ZdlPv
 428              	.LVL33:
 429              	.L26:
 430              	.LBE863:
 431              	.LBE862:
 432              	.LBE861:
 433              	.LBE860:
 434              	.LBE859:
 435              	.LBE851:
 436              	.LBE866:
 437              	.LBE870:
 438              	.LBE876:
 439              	.LBB877:
  32:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     stdVector.push_back(fVector.Get(i));
 440              		.loc 5 32 0
 441 0060 001097E5 		ldr	r1, [r7]
 442              	.LBE877:
 443              	.LBB897:
 444              	.LBB871:
 445              	.LBB867:
 446              	.LBB864:
  83:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	}
 447              		.loc 1 83 0
 448 0064 062084E0 		add	r2, r4, r6
 449 0068 082085E5 		str	r2, [r5, #8]
 450              	.LVL34:
  81:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
 451              		.loc 1 81 0
 452 006c 004085E5 		str	r4, [r5]
 453              	.LBE864:
 454              	.LBE867:
 455              	.LBE871:
 456              	.LBE897:
 457              	.LBB898:
  32:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     stdVector.push_back(fVector.Get(i));
 458              		.loc 5 32 0
 459 0070 000051E3 		cmp	r1, #0
 460              	.LBE898:
 461              	.LBB899:
 462              	.LBB872:
 463              	.LBB868:
 464              	.LBB865:
  82:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 465              		.loc 1 82 0
 466 0074 044085E5 		str	r4, [r5, #4]
 467              	.LBE865:
 468              	.LBE868:
 469              	.LBE872:
 470              	.LBE899:
 471              	.LBB900:
  32:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     stdVector.push_back(fVector.Get(i));
 472              		.loc 5 32 0
 473 0078 ECFFFF0A 		beq	.L23
 474 007c 0780A0E1 		mov	r8, r7
 475 0080 0060A0E3 		mov	r6, #0
 476 0084 080000EA 		b	.L31
 477              	.LVL35:
 478              	.L50:
 479              	.LBB878:
 480              	.LBB879:
 481              	.LBB880:
 482              	.LBB881:
 483              	.LBB882:
 484              	.LBB883:
 485              		.loc 4 120 0
 486 0088 000054E3 		cmp	r4, #0
 487              	.LBE883:
 488              	.LBE882:
 489              	.LBE881:
  98:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  }
 490              		.loc 1 98 0
 491 008c 044084E2 		add	r4, r4, #4
 492              	.LBB886:
 493              	.LBB885:
 494              	.LBB884:
 495 0090 04300415 		strne	r3, [r4, #-4]
 496              	.LVL36:
 497              	.LBE884:
 498              	.LBE885:
 499              	.LBE886:
 500 0094 044085E5 		str	r4, [r5, #4]
 501              	.LVL37:
 502              	.L30:
 503              	.LBE880:
 504              	.LBE879:
 505              	.LBE878:
  32:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     stdVector.push_back(fVector.Get(i));
 506              		.loc 5 32 0 discriminator 3
 507 0098 016086E2 		add	r6, r6, #1
 508              	.LVL38:
 509 009c 060051E1 		cmp	r1, r6
 510 00a0 E2FFFF9A 		bls	.L23
 511 00a4 044095E5 		ldr	r4, [r5, #4]
 512 00a8 082095E5 		ldr	r2, [r5, #8]
 513              	.LVL39:
 514              	.L31:
 515              	.LBB891:
 516              	.LBB892:
 517              	.LBB893:
 518              	.LBB894:
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 519              		.loc 6 86 0
 520 00ac 0430B8E5 		ldr	r3, [r8, #4]!
 521              	.LVL40:
 522              	.LBE894:
 523              	.LBE893:
 524              	.LBE892:
 525              	.LBE891:
 526              	.LBB895:
 527              	.LBB889:
 528              	.LBB887:
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  {
 529              		.loc 1 94 0
 530 00b0 040052E1 		cmp	r2, r4
 531              	.LBE887:
 532              	.LBE889:
 533              	.LBE895:
  33:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 534              		.loc 5 33 0
 535 00b4 04308DE5 		str	r3, [sp, #4]
 536              	.LVL41:
 537              	.LBB896:
 538              	.LBB890:
 539              	.LBB888:
  94:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc **** 	  {
 540              		.loc 1 94 0
 541 00b8 F2FFFF1A 		bne	.L50
 101:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       }
 542              		.loc 1 101 0
 543 00bc 04108DE2 		add	r1, sp, #4
 544              	.LVL42:
 545 00c0 0500A0E1 		mov	r0, r5
 546 00c4 FEFFFFEB 		bl	_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_
 547              	.LVL43:
 548              	.LEHE0:
 549 00c8 001097E5 		ldr	r1, [r7]
 550 00cc F1FFFFEA 		b	.L30
 551              	.LVL44:
 552              	.L34:
 553              	.LBE888:
 554              	.LBE890:
 555              	.LBE896:
 556              	.LBE900:
 557              	.LBB901:
 558              	.LBB902:
 426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator()); }
 559              		.loc 2 426 0
 560 00d0 000095E5 		ldr	r0, [r5]
 561              	.LVL45:
 562              	.LBB903:
 563              	.LBB904:
 564              	.LBB905:
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 565              		.loc 2 177 0
 566 00d4 000050E3 		cmp	r0, #0
 567 00d8 0000000A 		beq	.L33
 568              	.LVL46:
 569              	.LBB906:
 570              	.LBB907:
 571              	.LBB908:
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 572              		.loc 4 110 0
 573 00dc FEFFFFEB 		bl	_ZdlPv
 574              	.LVL47:
 575              	.L33:
 576              	.LEHB1:
 577 00e0 FEFFFFEB 		bl	__cxa_end_cleanup
 578              	.LVL48:
 579              	.LEHE1:
 580              	.L48:
 581              	.LBE908:
 582              	.LBE907:
 583              	.LBE906:
 584              	.LBE905:
 585              	.LBE904:
 586              	.LBE903:
 587              	.LBE902:
 588              	.LBE901:
 589              	.LBB909:
 590              	.LBB873:
  69:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\vector.tcc ****       if (this->capacity() < __n)
 591              		.loc 1 69 0
 592 00e4 000000E3 		movw	r0, #:lower16:.LC0
 593              	.LVL49:
 594 00e8 000040E3 		movt	r0, #:upper16:.LC0
 595              	.LEHB2:
 596 00ec FEFFFFEB 		bl	_ZSt20__throw_length_errorPKc
 597              	.LVL50:
 598              	.LEHE2:
 599              	.LBE873:
 600              	.LBE909:
 601              		.cfi_endproc
 602              	.LFE6558:
 603              		.global	__gxx_personality_v0
 604              		.personality	__gxx_personality_v0
 605              		.handlerdata
 606              	.LLSDA6558:
 607 0008 FF       		.byte	0xff
 608 0009 FF       		.byte	0xff
 609 000a 01       		.byte	0x1
 610 000b 11       		.uleb128 .LLSDACSE6558-.LLSDACSB6558
 611              	.LLSDACSB6558:
 612 000c 48       		.uleb128 .LEHB0-.LFB6558
 613 000d 8001     		.uleb128 .LEHE0-.LEHB0
 614 000f D001     		.uleb128 .L34-.LFB6558
 615 0011 00       		.uleb128 0
 616 0012 E001     		.uleb128 .LEHB1-.LFB6558
 617 0014 04       		.uleb128 .LEHE1-.LEHB1
 618 0015 00       		.uleb128 0
 619 0016 00       		.uleb128 0
 620 0017 EC01     		.uleb128 .LEHB2-.LFB6558
 621 0019 04       		.uleb128 .LEHE2-.LEHB2
 622 001a D001     		.uleb128 .L34-.LFB6558
 623 001c 00       		.uleb128 0
 624              	.LLSDACSE6558:
 625              		.section	.text._ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE
 626              		.fnend
 628              		.section	.text._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE,"ax",%progbits
 629              		.align	2
 630              		.global	_ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE
 631              		.syntax unified
 632              		.arm
 633              		.fpu neon
 635              	_ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE:
 636              		.fnstart
 637              	.LFB6563:
  37:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
  38:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** void PrintIntVector(const std::vector<int>& v) {
  39:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   for (const auto& it : v) {
  40:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", it);
  41:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
  42:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   printf("\n");
  43:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }
  44:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
  45:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** void PrintTfLiteIntVector(const TfLiteIntArray* v) {
  46:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   if (!v) {
  47:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" (null)\n");
  48:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     return;
  49:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   for (int k = 0; k < v->size; k++) {
  51:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", v->data[k]);
  52:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
  53:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   printf("\n");
  54:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }
  55:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
  56:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** const char* TensorTypeName(TfLiteType type) {
  57:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   switch (type) {
  58:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteNoType:
  59:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteNoType";
  60:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteFloat32:
  61:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteFloat32";
  62:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteInt32:
  63:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteInt32";
  64:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteUInt8:
  65:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteUInt8";
  66:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteInt8:
  67:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteInt8";
  68:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteInt64:
  69:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteInt64";
  70:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteString:
  71:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteString";
  72:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteBool:
  73:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteBool";
  74:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteInt16:
  75:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteInt16";
  76:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteComplex64:
  77:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteComplex64";
  78:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteFloat16:
  79:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteFloat16";
  80:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
  81:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   return "(invalid)";
  82:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }
  83:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
  84:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** const char* AllocTypeName(TfLiteAllocationType type) {
  85:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   switch (type) {
  86:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteMemNone:
  87:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteMemNone";
  88:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteMmapRo:
  89:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteMmapRo";
  90:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteDynamic:
  91:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteDynamic";
  92:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteArenaRw:
  93:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteArenaRw";
  94:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     case kTfLiteArenaRwPersistent:
  95:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       return "kTfLiteArenaRwPersistent";
  96:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
  97:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   return "(invalid)";
  98:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }
  99:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }  // namespace
 100:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
 101:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** // Prints a dump of what tensors and what nodes are in the interpreter.
 102:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** void PrintInterpreterState(MicroInterpreter* interpreter) {
 638              		.loc 5 102 0
 639              		.cfi_startproc
 640              		.cfi_personality 0,__gxx_personality_v0
 641              		.cfi_lsda 0,.LLSDA6563
 642              		@ args = 0, pretend = 0, frame = 32
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              	.LVL51:
 645 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 646              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 647              		.cfi_def_cfa_offset 36
 648              		.cfi_offset 4, -36
 649              		.cfi_offset 5, -32
 650              		.cfi_offset 6, -28
 651              		.cfi_offset 7, -24
 652              		.cfi_offset 8, -20
 653              		.cfi_offset 9, -16
 654              		.cfi_offset 10, -12
 655              		.cfi_offset 11, -8
 656              		.cfi_offset 14, -4
 657 0004 0070A0E1 		mov	r7, r0
 658              	.LVL52:
 659              	.LBB1038:
 660              	.LBB1039:
 661              	.LBB1040:
 662              		.loc 6 227 0
 663 0008 883097E5 		ldr	r3, [r7, #136]
 664              	.LBE1040:
 665              	.LBE1039:
 666              	.LBE1038:
 103:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   printf("Interpreter has %zu tensors and %zu nodes\n",
 104:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****          interpreter->tensors_size(), interpreter->operators_size());
 667              		.loc 5 104 0
 668 000c 000000E3 		movw	r0, #:lower16:.LC2
 669              	.LVL53:
 102:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   printf("Interpreter has %zu tensors and %zu nodes\n",
 670              		.loc 5 102 0
 671              		.pad #52
 672 0010 34D04DE2 		sub	sp, sp, #52
 673              		.cfi_def_cfa_offset 88
 674              		.loc 5 104 0
 675 0014 000040E3 		movt	r0, #:upper16:.LC2
 676 0018 101097E5 		ldr	r1, [r7, #16]
 677 001c 002093E5 		ldr	r2, [r3]
 678              	.LEHB3:
 679 0020 FEFFFFEB 		bl	printf
 680              	.LVL54:
 105:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   printf("Inputs:");
 681              		.loc 5 105 0
 682 0024 000000E3 		movw	r0, #:lower16:.LC3
 683 0028 000040E3 		movt	r0, #:upper16:.LC3
 684 002c FEFFFFEB 		bl	printf
 685              	.LVL55:
 686 0030 8C2097E5 		ldr	r2, [r7, #140]
 687              	.LVL56:
 688              	.LBB1041:
 689              	.LBB1042:
 690              	.LBB1043:
 691              	.LBB1044:
 692              	.LBB1045:
 693              	.LBB1046:
 694              	.LBB1047:
 695              	.LBB1048:
 696              	.LBB1049:
 228:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 229:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Deprecated: use size(). Here for backwards compatibility.
 230:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FLATBUFFERS_ATTRIBUTE(deprecated("use size() instead"))
 231:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t Length() const { return size(); }
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 233:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef typename IndirectHelper<T>::return_type return_type;
 234:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef typename IndirectHelper<T>::mutable_return_type mutable_return_type;
 235:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 236:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return_type Get(uoffset_t i) const {
 237:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(i < size());
 238:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return IndirectHelper<T>::Read(Data(), i);
 239:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return_type operator[](uoffset_t i) const { return Get(i); }
 242:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 243:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // If this is a Vector of enums, T will be its storage type, not the enum
 244:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // type. This function makes it convenient to retrieve value with enum
 245:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // type E.
 246:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename E> E GetEnum(uoffset_t i) const {
 247:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return static_cast<E>(Get(i));
 248:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 249:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 250:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // If this a vector of unions, this does the cast for you. There's no check
 251:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // to make sure this is the right type!
 252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename U> const U *GetAs(uoffset_t i) const {
 253:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return reinterpret_cast<const U *>(Get(i));
 254:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 255:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 256:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // If this a vector of unions, this does the cast for you. There's no check
 257:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // to make sure this is actually a string!
 258:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const String *GetAsString(uoffset_t i) const {
 259:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return reinterpret_cast<const String *>(Get(i));
 260:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 261:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 262:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const void *GetStructFromOffset(size_t o) const {
 263:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return reinterpret_cast<const void *>(Data() + o);
 264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 265:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 266:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   iterator begin() { return iterator(Data(), 0); }
 267:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const_iterator begin() const { return const_iterator(Data(), 0); }
 268:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 269:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   iterator end() { return iterator(Data(), size()); }
 270:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const_iterator end() const { return const_iterator(Data(), size()); }
 271:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 272:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   reverse_iterator rbegin() { return reverse_iterator(end()); }
 273:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const_reverse_iterator rbegin() const { return const_reverse_iterator(end()); }
 274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 275:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   reverse_iterator rend() { return reverse_iterator(end()); }
 276:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const_reverse_iterator rend() const { return const_reverse_iterator(end()); }
 277:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 278:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const_iterator cbegin() const { return begin(); }
 279:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 280:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const_iterator cend() const { return end(); }
 281:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 282:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const_reverse_iterator crbegin() const { return rbegin(); }
 283:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 284:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const_reverse_iterator crend() const { return rend(); }
 285:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 286:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Change elements if you have a non-const pointer to this object.
 287:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Scalars only. See reflection.h, and the documentation.
 288:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void Mutate(uoffset_t i, const T &val) {
 289:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(i < size());
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     WriteScalar(data() + i, val);
 291:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Change an element of a vector of tables (or strings).
 294:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // "val" points to the new table/string, as you can obtain from
 295:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // e.g. reflection::AddFlatBuffer().
 296:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void MutateOffset(uoffset_t i, const uint8_t *val) {
 297:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(i < size());
 298:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     static_assert(sizeof(T) == sizeof(uoffset_t), "Unrelated types");
 299:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     WriteScalar(data() + i,
 300:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                 static_cast<uoffset_t>(val - (Data() + i * sizeof(uoffset_t))));
 301:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 302:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 303:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Get a mutable pointer to tables/strings inside this vector.
 304:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   mutable_return_type GetMutableObject(uoffset_t i) const {
 305:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(i < size());
 306:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return const_cast<mutable_return_type>(IndirectHelper<T>::Read(Data(), i));
 307:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 308:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 309:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // The raw data in little endian format. Use with care.
 310:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const uint8_t *Data() const {
 311:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return reinterpret_cast<const uint8_t *>(&length_ + 1);
 312:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 313:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 314:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *Data() { return reinterpret_cast<uint8_t *>(&length_ + 1); }
 315:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 316:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Similarly, but typed, much like std::vector::data
 317:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const T *data() const { return reinterpret_cast<const T *>(Data()); }
 318:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   T *data() { return reinterpret_cast<T *>(Data()); }
 319:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 320:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename K> return_type LookupByKey(K key) const {
 321:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     void *search_result = std::bsearch(
 322:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         &key, Data(), size(), IndirectHelper<T>::element_stride, KeyCompare<K>);
 323:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 324:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (!search_result) {
 325:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       return nullptr;  // Key not found.
 326:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
 327:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 328:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     const uint8_t *element = reinterpret_cast<const uint8_t *>(search_result);
 329:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 330:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return IndirectHelper<T>::Read(element, 0);
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 332:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  protected:
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // This class is only used to access pre-existing data. Don't ever
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // try to construct these manually.
 336:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Vector();
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t length_;
 339:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 340:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  private:
 341:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // This class is a pointer. Copying will therefore create an invalid object.
 342:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Private and unimplemented copy constructor.
 343:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Vector(const Vector &);
 344:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 345:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename K> static int KeyCompare(const void *ap, const void *bp) {
 346:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     const K *key = reinterpret_cast<const K *>(ap);
 347:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     const uint8_t *data = reinterpret_cast<const uint8_t *>(bp);
 348:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto table = IndirectHelper<T>::Read(data, 0);
 349:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 350:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // std::bsearch compares with the operands transposed, so we negate the
 351:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // result here.
 352:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return -table->KeyCompareWithValue(*key);
 353:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 354:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
 355:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 356:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Represent a vector much like the template above, but in this case we
 357:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // don't know what the element types are (used with reflection.h).
 358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** class VectorOfAny {
 359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  public:
 360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t size() const { return EndianScalar(length_); }
 361:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 362:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const uint8_t *Data() const {
 363:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return reinterpret_cast<const uint8_t *>(&length_ + 1);
 364:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 365:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *Data() { return reinterpret_cast<uint8_t *>(&length_ + 1); }
 366:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 367:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  protected:
 368:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorOfAny();
 369:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 370:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t length_;
 371:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 372:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  private:
 373:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   VectorOfAny(const VectorOfAny &);
 374:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
 375:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 376:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** #ifndef FLATBUFFERS_CPP98_STL
 377:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T, typename U>
 378:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** Vector<Offset<T>> *VectorCast(Vector<Offset<U>> *ptr) {
 379:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   static_assert(std::is_base_of<T, U>::value, "Unrelated types");
 380:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return reinterpret_cast<Vector<Offset<T>> *>(ptr);
 381:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 382:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 383:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T, typename U>
 384:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** const Vector<Offset<T>> *VectorCast(const Vector<Offset<U>> *ptr) {
 385:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   static_assert(std::is_base_of<T, U>::value, "Unrelated types");
 386:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return reinterpret_cast<const Vector<Offset<T>> *>(ptr);
 387:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 388:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** #endif
 389:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 390:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Convenient helper function to get the length of any vector, regardless
 391:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // of whether it is null or not (the field is not set).
 392:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> static inline size_t VectorLength(const Vector<T> *v) {
 393:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return v ? v->size() : 0;
 394:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 395:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 396:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Lexicographically compare two strings (possibly containing nulls), and
 397:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // return true if the first is less than the second.
 398:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** static inline bool StringLessThan(const char *a_data, uoffset_t a_size,
 399:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                   const char *b_data, uoffset_t b_size) {
 400:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const auto cmp = memcmp(a_data, b_data, (std::min)(a_size, b_size));
 401:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return cmp == 0 ? a_size < b_size : cmp < 0;
 402:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 403:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 404:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** struct String : public Vector<char> {
 405:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const char *c_str() const { return reinterpret_cast<const char *>(Data()); }
 406:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   std::string str() const { return std::string(c_str(), size()); }
 407:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 408:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 409:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #ifdef FLATBUFFERS_HAS_STRING_VIEW
 410:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   flatbuffers::string_view string_view() const {
 411:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return flatbuffers::string_view(c_str(), size());
 412:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 413:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif // FLATBUFFERS_HAS_STRING_VIEW
 414:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 415:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 416:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool operator<(const String &o) const {
 417:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return StringLessThan(this->data(), this->size(), o.data(), o.size());
 418:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 419:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
 420:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 421:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Convenience function to get std::string from a String returning an empty
 422:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // string on null pointer.
 423:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** static inline std::string GetString(const String * str) {
 424:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return str ? str->str() : "";
 425:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 426:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 427:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Convenience function to get char* from a String returning an empty string on
 428:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // null pointer.
 429:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** static inline const char * GetCstring(const String * str) {
 430:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return str ? str->c_str() : "";
 431:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 432:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 433:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Allocator interface. This is flatbuffers-specific and meant only for
 434:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // `vector_downward` usage.
 435:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** class Allocator {
 436:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  public:
 437:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   virtual ~Allocator() {}
 438:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 439:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Allocate `size` bytes of memory.
 440:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   virtual uint8_t *allocate(size_t size) = 0;
 441:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 442:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Deallocate `size` bytes of memory at `p` allocated by this allocator.
 443:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   virtual void deallocate(uint8_t *p, size_t size) = 0;
 444:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 445:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Reallocate `new_size` bytes of memory, replacing the old region of size
 446:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // `old_size` at `p`. In contrast to a normal realloc, this grows downwards,
 447:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // and is intended specifcally for `vector_downward` use.
 448:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // `in_use_back` and `in_use_front` indicate how much of `old_size` is
 449:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // actually in use at each end, and needs to be copied.
 450:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   virtual uint8_t *reallocate_downward(uint8_t *old_p, size_t old_size,
 451:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                        size_t new_size, size_t in_use_back,
 452:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                        size_t in_use_front) {
 453:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(new_size > old_size);  // vector_downward only grows
 454:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     uint8_t *new_p = allocate(new_size);
 455:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     memcpy_downward(old_p, old_size, new_p, new_size, in_use_back,
 456:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                     in_use_front);
 457:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     deallocate(old_p, old_size);
 458:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return new_p;
 459:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 460:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 461:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  protected:
 462:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Called by `reallocate_downward` to copy memory from `old_p` of `old_size`
 463:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // to `new_p` of `new_size`. Only memory of size `in_use_front` and
 464:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // `in_use_back` will be copied from the front and back of the old memory
 465:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // allocation.
 466:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void memcpy_downward(uint8_t *old_p, size_t old_size,
 467:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                        uint8_t *new_p, size_t new_size,
 468:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                        size_t in_use_back, size_t in_use_front) {
 469:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     memcpy(new_p + new_size - in_use_back, old_p + old_size - in_use_back,
 470:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****            in_use_back);
 471:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     memcpy(new_p, old_p, in_use_front);
 472:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 473:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
 474:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 475:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // DefaultAllocator uses new/delete to allocate memory regions
 476:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** class DefaultAllocator : public Allocator {
 477:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  public:
 478:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *allocate(size_t size) FLATBUFFERS_OVERRIDE {
 479:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return new uint8_t[size];
 480:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 481:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 482:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void deallocate(uint8_t *p, size_t) FLATBUFFERS_OVERRIDE {
 483:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     delete[] p;
 484:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 485:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 486:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   static void dealloc(void *p, size_t) {
 487:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     delete[] static_cast<uint8_t *>(p);
 488:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 489:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
 490:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 491:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // These functions allow for a null allocator to mean use the default allocator,
 492:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // as used by DetachedBuffer and vector_downward below.
 493:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // This is to avoid having a statically or dynamically allocated default
 494:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // allocator, or having to move it between the classes that may own it.
 495:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** inline uint8_t *Allocate(Allocator *allocator, size_t size) {
 496:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return allocator ? allocator->allocate(size)
 497:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                    : DefaultAllocator().allocate(size);
 498:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 499:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 500:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** inline void Deallocate(Allocator *allocator, uint8_t *p, size_t size) {
 501:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   if (allocator) allocator->deallocate(p, size);
 502:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   else DefaultAllocator().deallocate(p, size);
 503:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 504:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 505:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** inline uint8_t *ReallocateDownward(Allocator *allocator, uint8_t *old_p,
 506:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                    size_t old_size, size_t new_size,
 507:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                    size_t in_use_back, size_t in_use_front) {
 508:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return allocator
 509:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       ? allocator->reallocate_downward(old_p, old_size, new_size,
 510:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                        in_use_back, in_use_front)
 511:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       : DefaultAllocator().reallocate_downward(old_p, old_size, new_size,
 512:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                                in_use_back, in_use_front);
 513:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 514:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 515:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // DetachedBuffer is a finished flatbuffer memory region, detached from its
 516:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // builder. The original memory region and allocator are also stored so that
 517:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // the DetachedBuffer can manage the memory lifetime.
 518:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** class DetachedBuffer {
 519:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  public:
 520:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   DetachedBuffer()
 521:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       : allocator_(nullptr),
 522:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         own_allocator_(false),
 523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         buf_(nullptr),
 524:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         reserved_(0),
 525:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         cur_(nullptr),
 526:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         size_(0) {}
 527:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 528:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   DetachedBuffer(Allocator *allocator, bool own_allocator, uint8_t *buf,
 529:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                  size_t reserved, uint8_t *cur, size_t sz)
 530:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       : allocator_(allocator),
 531:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         own_allocator_(own_allocator),
 532:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         buf_(buf),
 533:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         reserved_(reserved),
 534:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         cur_(cur),
 535:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         size_(sz) {}
 536:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 537:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 538:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #if !defined(FLATBUFFERS_CPP98_STL)
 539:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 540:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   DetachedBuffer(DetachedBuffer &&other)
 541:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       : allocator_(other.allocator_),
 542:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         own_allocator_(other.own_allocator_),
 543:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         buf_(other.buf_),
 544:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         reserved_(other.reserved_),
 545:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         cur_(other.cur_),
 546:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         size_(other.size_) {
 547:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     other.reset();
 548:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 549:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 550:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif  // !defined(FLATBUFFERS_CPP98_STL)
 551:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 552:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 553:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 554:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #if !defined(FLATBUFFERS_CPP98_STL)
 555:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 556:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   DetachedBuffer &operator=(DetachedBuffer &&other) {
 557:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     destroy();
 558:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 559:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     allocator_ = other.allocator_;
 560:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     own_allocator_ = other.own_allocator_;
 561:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_ = other.buf_;
 562:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     reserved_ = other.reserved_;
 563:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     cur_ = other.cur_;
 564:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     size_ = other.size_;
 565:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 566:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     other.reset();
 567:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 568:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return *this;
 569:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 570:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 571:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif  // !defined(FLATBUFFERS_CPP98_STL)
 572:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 573:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 574:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   ~DetachedBuffer() { destroy(); }
 575:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 576:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const uint8_t *data() const { return cur_; }
 577:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 578:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *data() { return cur_; }
 579:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 580:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t size() const { return size_; }
 581:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 582:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 583:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #if 0  // disabled for now due to the ordering of classes in this header
 584:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template <class T>
 585:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool Verify() const {
 586:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Verifier verifier(data(), size());
 587:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return verifier.Verify<T>(nullptr);
 588:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 589:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 590:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template <class T>
 591:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const T* GetRoot() const {
 592:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return flatbuffers::GetRoot<T>(data());
 593:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 594:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 595:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template <class T>
 596:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   T* GetRoot() {
 597:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return flatbuffers::GetRoot<T>(data());
 598:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 599:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif
 600:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 601:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 602:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 603:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #if !defined(FLATBUFFERS_CPP98_STL)
 604:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 605:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // These may change access mode, leave these at end of public section
 606:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FLATBUFFERS_DELETE_FUNC(DetachedBuffer(const DetachedBuffer &other))
 607:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FLATBUFFERS_DELETE_FUNC(
 608:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       DetachedBuffer &operator=(const DetachedBuffer &other))
 609:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 610:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif  // !defined(FLATBUFFERS_CPP98_STL)
 611:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 612:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 613:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** protected:
 614:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Allocator *allocator_;
 615:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool own_allocator_;
 616:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *buf_;
 617:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t reserved_;
 618:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *cur_;
 619:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t size_;
 620:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 621:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   inline void destroy() {
 622:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (buf_) Deallocate(allocator_, buf_, reserved_);
 623:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (own_allocator_ && allocator_) { delete allocator_; }
 624:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     reset();
 625:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 626:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 627:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   inline void reset() {
 628:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     allocator_ = nullptr;
 629:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     own_allocator_ = false;
 630:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_ = nullptr;
 631:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     reserved_ = 0;
 632:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     cur_ = nullptr;
 633:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     size_ = 0;
 634:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 635:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
 636:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 637:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // This is a minimal replication of std::vector<uint8_t> functionality,
 638:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // except growing from higher to lower addresses. i.e push_back() inserts data
 639:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // in the lowest address in the vector.
 640:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Since this vector leaves the lower part unused, we support a "scratch-pad"
 641:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // that can be stored there for temporary data, to share the allocated space.
 642:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Essentially, this supports 2 std::vectors in a single buffer.
 643:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** class vector_downward {
 644:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  public:
 645:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   explicit vector_downward(size_t initial_size,
 646:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                            Allocator *allocator,
 647:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                            bool own_allocator,
 648:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                            size_t buffer_minalign)
 649:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       : allocator_(allocator),
 650:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         own_allocator_(own_allocator),
 651:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         initial_size_(initial_size),
 652:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         buffer_minalign_(buffer_minalign),
 653:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         reserved_(0),
 654:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         buf_(nullptr),
 655:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         cur_(nullptr),
 656:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         scratch_(nullptr) {}
 657:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 658:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 659:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #if !defined(FLATBUFFERS_CPP98_STL)
 660:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   vector_downward(vector_downward &&other)
 661:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #else
 662:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   vector_downward(vector_downward &other)
 663:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif  // defined(FLATBUFFERS_CPP98_STL)
 664:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 665:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     : allocator_(other.allocator_),
 666:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       own_allocator_(other.own_allocator_),
 667:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       initial_size_(other.initial_size_),
 668:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       buffer_minalign_(other.buffer_minalign_),
 669:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       reserved_(other.reserved_),
 670:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       buf_(other.buf_),
 671:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       cur_(other.cur_),
 672:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       scratch_(other.scratch_) {
 673:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // No change in other.allocator_
 674:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // No change in other.initial_size_
 675:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // No change in other.buffer_minalign_
 676:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     other.own_allocator_ = false;
 677:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     other.reserved_ = 0;
 678:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     other.buf_ = nullptr;
 679:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     other.cur_ = nullptr;
 680:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     other.scratch_ = nullptr;
 681:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 682:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 683:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 684:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #if !defined(FLATBUFFERS_CPP98_STL)
 685:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 686:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   vector_downward &operator=(vector_downward &&other) {
 687:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Move construct a temporary and swap idiom
 688:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     vector_downward temp(std::move(other));
 689:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(temp);
 690:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return *this;
 691:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 692:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 693:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif  // defined(FLATBUFFERS_CPP98_STL)
 694:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 695:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 696:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   ~vector_downward() {
 697:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     clear_buffer();
 698:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     clear_allocator();
 699:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 700:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 701:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void reset() {
 702:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     clear_buffer();
 703:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     clear();
 704:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 705:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 706:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void clear() {
 707:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (buf_) {
 708:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       cur_ = buf_ + reserved_;
 709:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     } else {
 710:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       reserved_ = 0;
 711:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       cur_ = nullptr;
 712:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
 713:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     clear_scratch();
 714:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 715:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 716:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void clear_scratch() {
 717:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     scratch_ = buf_;
 718:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 719:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 720:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void clear_allocator() {
 721:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (own_allocator_ && allocator_) { delete allocator_; }
 722:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     allocator_ = nullptr;
 723:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     own_allocator_ = false;
 724:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 725:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 726:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void clear_buffer() {
 727:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (buf_) Deallocate(allocator_, buf_, reserved_);
 728:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_ = nullptr;
 729:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 730:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 731:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Relinquish the pointer to the caller.
 732:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *release_raw(size_t &allocated_bytes, size_t &offset) {
 733:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto *buf = buf_;
 734:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     allocated_bytes = reserved_;
 735:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     offset = static_cast<size_t>(cur_ - buf_);
 736:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 737:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // release_raw only relinquishes the buffer ownership.
 738:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Does not deallocate or reset the allocator. Destructor will do that.
 739:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_ = nullptr;
 740:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     clear();
 741:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return buf;
 742:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 743:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 744:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Relinquish the pointer to the caller.
 745:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   DetachedBuffer release() {
 746:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // allocator ownership (if any) is transferred to DetachedBuffer.
 747:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     DetachedBuffer fb(allocator_, own_allocator_, buf_, reserved_, cur_,
 748:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                       size());
 749:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (own_allocator_) {
 750:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       allocator_ = nullptr;
 751:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       own_allocator_ = false;
 752:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
 753:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_ = nullptr;
 754:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     clear();
 755:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return fb;
 756:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 757:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 758:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t ensure_space(size_t len) {
 759:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(cur_ >= scratch_ && scratch_ >= buf_);
 760:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (len > static_cast<size_t>(cur_ - scratch_)) { reallocate(len); }
 761:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Beyond this, signed offsets may not have enough range:
 762:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // (FlatBuffers > 2GB not supported).
 763:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(size() < FLATBUFFERS_MAX_BUFFER_SIZE);
 764:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return len;
 765:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 766:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 767:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   inline uint8_t *make_space(size_t len) {
 768:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     size_t space = ensure_space(len);
 769:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     cur_ -= space;
 770:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return cur_;
 771:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 772:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 773:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Returns nullptr if using the DefaultAllocator.
 774:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Allocator *get_custom_allocator() { return allocator_; }
 775:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 776:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t size() const {
 777:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return static_cast<uoffset_t>(reserved_ - (cur_ - buf_));
 778:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 779:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 780:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t scratch_size() const {
 781:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return static_cast<uoffset_t>(scratch_ - buf_);
 782:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 783:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 784:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t capacity() const { return reserved_; }
 785:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 786:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *data() const {
 787:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(cur_);
 788:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return cur_;
 789:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 790:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 791:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *scratch_data() const {
 792:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(buf_);
 793:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return buf_;
 794:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 795:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 796:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *scratch_end() const {
 797:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(scratch_);
 798:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return scratch_;
 799:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 800:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 801:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *data_at(size_t offset) const { return buf_ + reserved_ - offset; }
 802:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 803:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void push(const uint8_t *bytes, size_t num) {
 804:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     memcpy(make_space(num), bytes, num);
 805:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 806:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 807:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Specialized version of push() that avoids memcpy call for small data.
 808:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> void push_small(const T &little_endian_t) {
 809:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     make_space(sizeof(T));
 810:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     *reinterpret_cast<T *>(cur_) = little_endian_t;
 811:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 812:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 813:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> void scratch_push_small(const T &t) {
 814:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     ensure_space(sizeof(T));
 815:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     *reinterpret_cast<T *>(scratch_) = t;
 816:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     scratch_ += sizeof(T);
 817:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 818:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 819:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // fill() is most frequently called with small byte counts (<= 4),
 820:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // which is why we're using loops rather than calling memset.
 821:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void fill(size_t zero_pad_bytes) {
 822:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     make_space(zero_pad_bytes);
 823:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     for (size_t i = 0; i < zero_pad_bytes; i++) cur_[i] = 0;
 824:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 825:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 826:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Version for when we know the size is larger.
 827:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void fill_big(size_t zero_pad_bytes) {
 828:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     memset(make_space(zero_pad_bytes), 0, zero_pad_bytes);
 829:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 830:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 831:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void pop(size_t bytes_to_remove) { cur_ += bytes_to_remove; }
 832:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void scratch_pop(size_t bytes_to_remove) { scratch_ -= bytes_to_remove; }
 833:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 834:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void swap(vector_downward &other) {
 835:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     using std::swap;
 836:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(allocator_, other.allocator_);
 837:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(own_allocator_, other.own_allocator_);
 838:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(initial_size_, other.initial_size_);
 839:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(buffer_minalign_, other.buffer_minalign_);
 840:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(reserved_, other.reserved_);
 841:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(buf_, other.buf_);
 842:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(cur_, other.cur_);
 843:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(scratch_, other.scratch_);
 844:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 845:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 846:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void swap_allocator(vector_downward &other) {
 847:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     using std::swap;
 848:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(allocator_, other.allocator_);
 849:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(own_allocator_, other.own_allocator_);
 850:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 851:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 852:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  private:
 853:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // You shouldn't really be copying instances of this class.
 854:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FLATBUFFERS_DELETE_FUNC(vector_downward(const vector_downward &))
 855:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FLATBUFFERS_DELETE_FUNC(vector_downward &operator=(const vector_downward &))
 856:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 857:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Allocator *allocator_;
 858:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool own_allocator_;
 859:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t initial_size_;
 860:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t buffer_minalign_;
 861:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t reserved_;
 862:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *buf_;
 863:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *cur_;  // Points at location between empty (below) and used (above).
 864:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *scratch_;  // Points to the end of the scratchpad in use.
 865:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 866:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void reallocate(size_t len) {
 867:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto old_reserved = reserved_;
 868:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto old_size = size();
 869:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto old_scratch_size = scratch_size();
 870:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     reserved_ += (std::max)(len,
 871:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                             old_reserved ? old_reserved / 2 : initial_size_);
 872:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     reserved_ = (reserved_ + buffer_minalign_ - 1) & ~(buffer_minalign_ - 1);
 873:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (buf_) {
 874:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       buf_ = ReallocateDownward(allocator_, buf_, old_reserved, reserved_,
 875:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                 old_size, old_scratch_size);
 876:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     } else {
 877:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       buf_ = Allocate(allocator_, reserved_);
 878:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
 879:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     cur_ = buf_ + reserved_ - old_size;
 880:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     scratch_ = buf_ + old_scratch_size;
 881:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 882:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
 883:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 884:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Converts a Field ID to a virtual table offset.
 885:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** inline voffset_t FieldIndexToOffset(voffset_t field_id) {
 886:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Should correspond to what EndTable() below builds up.
 887:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const int fixed_fields = 2;  // Vtable size and Object Size.
 888:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return static_cast<voffset_t>((field_id + fixed_fields) * sizeof(voffset_t));
 889:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 890:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 891:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T, typename Alloc>
 892:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** const T *data(const std::vector<T, Alloc> &v) {
 893:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return v.empty() ? nullptr : &v.front();
 894:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 895:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T, typename Alloc> T *data(std::vector<T, Alloc> &v) {
 896:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return v.empty() ? nullptr : &v.front();
 897:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
 898:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 899:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// @endcond
 900:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 901:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// @addtogroup flatbuffers_cpp_api
 902:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// @{
 903:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// @class FlatBufferBuilder
 904:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// @brief Helper class to hold data needed in creation of a FlatBuffer.
 905:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// To serialize data, you typically call one of the `Create*()` functions in
 906:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// the generated code, which in turn call a sequence of `StartTable`/
 907:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// `PushElement`/`AddElement`/`EndTable`, or the builtin `CreateString`/
 908:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// `CreateVector` functions. Do this is depth-first order to build up a tree to
 909:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// the root. `Finish()` wraps up the buffer ready for transport.
 910:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** class FlatBufferBuilder {
 911:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  public:
 912:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Default constructor for FlatBufferBuilder.
 913:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] initial_size The initial size of the buffer, in bytes. Defaults
 914:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// to `1024`.
 915:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] allocator An `Allocator` to use. If null will use
 916:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// `DefaultAllocator`.
 917:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] own_allocator Whether the builder/vector should own the
 918:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// allocator. Defaults to / `false`.
 919:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] buffer_minalign Force the buffer to be aligned to the given
 920:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// minimum alignment upon reallocation. Only needed if you intend to store
 921:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// types with custom alignment AND you wish to read the buffer in-place
 922:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// directly after creation.
 923:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   explicit FlatBufferBuilder(size_t initial_size = 1024,
 924:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                              Allocator *allocator = nullptr,
 925:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                              bool own_allocator = false,
 926:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                              size_t buffer_minalign =
 927:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                  AlignOf<largest_scalar_t>())
 928:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       : buf_(initial_size, allocator, own_allocator, buffer_minalign),
 929:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         num_field_loc(0),
 930:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         max_voffset_(0),
 931:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         nested(false),
 932:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         finished(false),
 933:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         minalign_(1),
 934:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         force_defaults_(false),
 935:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         dedup_vtables_(true),
 936:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         string_pool(nullptr) {
 937:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     EndianCheck();
 938:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 939:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 940:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 941:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Move constructor for FlatBufferBuilder.
 942:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #if !defined(FLATBUFFERS_CPP98_STL)
 943:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FlatBufferBuilder(FlatBufferBuilder &&other)
 944:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #else
 945:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FlatBufferBuilder(FlatBufferBuilder &other)
 946:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif  // #if !defined(FLATBUFFERS_CPP98_STL)
 947:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     : buf_(1024, nullptr, false, AlignOf<largest_scalar_t>()),
 948:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       num_field_loc(0),
 949:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       max_voffset_(0),
 950:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       nested(false),
 951:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       finished(false),
 952:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       minalign_(1),
 953:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       force_defaults_(false),
 954:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       dedup_vtables_(true),
 955:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       string_pool(nullptr) {
 956:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     EndianCheck();
 957:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Default construct and swap idiom.
 958:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Lack of delegating constructors in vs2010 makes it more verbose than needed.
 959:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Swap(other);
 960:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 961:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 962:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 963:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 964:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #if !defined(FLATBUFFERS_CPP98_STL)
 965:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 966:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Move assignment operator for FlatBufferBuilder.
 967:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FlatBufferBuilder &operator=(FlatBufferBuilder &&other) {
 968:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Move construct a temporary and swap idiom
 969:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FlatBufferBuilder temp(std::move(other));
 970:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Swap(temp);
 971:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return *this;
 972:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 973:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
 974:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif  // defined(FLATBUFFERS_CPP98_STL)
 975:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
 976:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 977:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void Swap(FlatBufferBuilder &other) {
 978:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     using std::swap;
 979:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.swap(other.buf_);
 980:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(num_field_loc, other.num_field_loc);
 981:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(max_voffset_, other.max_voffset_);
 982:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(nested, other.nested);
 983:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(finished, other.finished);
 984:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(minalign_, other.minalign_);
 985:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(force_defaults_, other.force_defaults_);
 986:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(dedup_vtables_, other.dedup_vtables_);
 987:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     swap(string_pool, other.string_pool);
 988:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 989:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 990:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   ~FlatBufferBuilder() {
 991:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (string_pool) delete string_pool;
 992:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 993:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 994:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void Reset() {
 995:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Clear();       // clear builder state
 996:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.reset();  // deallocate buffer
 997:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 998:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 999:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Reset all the state in this FlatBufferBuilder so it can be reused
1000:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// to construct another buffer.
1001:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void Clear() {
1002:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     ClearOffsets();
1003:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.clear();
1004:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     nested = false;
1005:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     finished = false;
1006:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     minalign_ = 1;
1007:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (string_pool) string_pool->clear();
1008:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1009:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1010:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief The current size of the serialized buffer, counting from the end.
1011:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns an `uoffset_t` with the current size of the buffer.
1012:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t GetSize() const { return buf_.size(); }
1013:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1014:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Get the serialized buffer (after you call `Finish()`).
1015:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns an `uint8_t` pointer to the FlatBuffer data inside the
1016:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// buffer.
1017:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *GetBufferPointer() const {
1018:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Finished();
1019:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return buf_.data();
1020:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1021:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1022:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Get a pointer to an unfinished buffer.
1023:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a `uint8_t` pointer to the unfinished buffer.
1024:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *GetCurrentBufferPointer() const { return buf_.data(); }
1025:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1026:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Get the released pointer to the serialized buffer.
1027:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @warning Do NOT attempt to use this FlatBufferBuilder afterwards!
1028:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return A `FlatBuffer` that owns the buffer and its allocator and
1029:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// behaves similar to a `unique_ptr` with a deleter.
1030:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FLATBUFFERS_ATTRIBUTE(deprecated("use Release() instead")) DetachedBuffer
1031:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   ReleaseBufferPointer() {
1032:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Finished();
1033:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return buf_.release();
1034:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1035:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1036:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Get the released DetachedBuffer.
1037:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return A `DetachedBuffer` that owns the buffer and its allocator.
1038:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   DetachedBuffer Release() {
1039:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Finished();
1040:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return buf_.release();
1041:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1042:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1043:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Get the released pointer to the serialized buffer.
1044:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param The size of the memory block containing
1045:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// the serialized `FlatBuffer`.
1046:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param The offset from the released pointer where the finished
1047:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// `FlatBuffer` starts.
1048:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return A raw pointer to the start of the memory block containing
1049:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// the serialized `FlatBuffer`.
1050:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @remark If the allocator is owned, it gets deleted when the destructor is called..
1051:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *ReleaseRaw(size_t &size, size_t &offset) {
1052:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Finished();
1053:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return buf_.release_raw(size, offset);
1054:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1055:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1056:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief get the minimum alignment this buffer needs to be accessed
1057:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// properly. This is only known once all elements have been written (after
1058:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// you call Finish()). You can use this information if you need to embed
1059:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// a FlatBuffer in some other buffer, such that you can later read it
1060:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// without first having to copy it into its own buffer.
1061:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t GetBufferMinAlignment() {
1062:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Finished();
1063:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return minalign_;
1064:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1065:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1066:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @cond FLATBUFFERS_INTERNAL
1067:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void Finished() const {
1068:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // If you get this assert, you're attempting to get access a buffer
1069:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // which hasn't been finished yet. Be sure to call
1070:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // FlatBufferBuilder::Finish with your root table.
1071:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // If you really need to access an unfinished buffer, call
1072:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // GetCurrentBufferPointer instead.
1073:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(finished);
1074:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1075:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @endcond
1076:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1077:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief In order to save space, fields that are set to their default value
1078:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// don't get serialized into the buffer.
1079:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] bool fd When set to `true`, always serializes default values that are set.
1080:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// Optional fields which are not set explicitly, will still not be serialized.
1081:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void ForceDefaults(bool fd) { force_defaults_ = fd; }
1082:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1083:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief By default vtables are deduped in order to save space.
1084:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] bool dedup When set to `true`, dedup vtables.
1085:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void DedupVtables(bool dedup) { dedup_vtables_ = dedup; }
1086:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1087:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @cond FLATBUFFERS_INTERNAL
1088:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void Pad(size_t num_bytes) { buf_.fill(num_bytes); }
1089:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1090:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void TrackMinAlign(size_t elem_size) {
1091:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (elem_size > minalign_) minalign_ = elem_size;
1092:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1093:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1094:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void Align(size_t elem_size) {
1095:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     TrackMinAlign(elem_size);
1096:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.fill(PaddingBytes(buf_.size(), elem_size));
1097:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1098:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1099:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void PushFlatBuffer(const uint8_t *bytes, size_t size) {
1100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PushBytes(bytes, size);
1101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     finished = true;
1102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void PushBytes(const uint8_t *bytes, size_t size) { buf_.push(bytes, size); }
1105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void PopBytes(size_t amount) { buf_.pop(amount); }
1107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> void AssertScalarT() {
1109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // The code assumes power of 2 sizes and endian-swap-ability.
1110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     static_assert(flatbuffers::is_scalar<T>::value, "T must be a scalar type");
1111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Write a single aligned scalar to the buffer
1114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> uoffset_t PushElement(T element) {
1115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     AssertScalarT<T>();
1116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     T litle_endian_element = EndianScalar(element);
1117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Align(sizeof(T));
1118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.push_small(litle_endian_element);
1119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return GetSize();
1120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> uoffset_t PushElement(Offset<T> off) {
1123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Special case for offsets: see ReferTo below.
1124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return PushElement(ReferTo(off.o));
1125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // When writing fields, we track where they are, so we can create correct
1128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // vtables later.
1129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void TrackField(voffset_t field, uoffset_t off) {
1130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FieldLoc fl = { off, field };
1131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.scratch_push_small(fl);
1132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     num_field_loc++;
1133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     max_voffset_ = (std::max)(max_voffset_, field);
1134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Like PushElement, but additionally tracks the field this represents.
1137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> void AddElement(voffset_t field, T e, T def) {
1138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // We don't serialize values equal to the default.
1139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (IsTheSameAs(e, def) && !force_defaults_) return;
1140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto off = PushElement(e);
1141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     TrackField(field, off);
1142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> void AddOffset(voffset_t field, Offset<T> off) {
1145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (off.IsNull()) return;  // Don't store.
1146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     AddElement(field, ReferTo(off.o), static_cast<uoffset_t>(0));
1147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> void AddStruct(voffset_t field, const T *structptr) {
1150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (!structptr) return;  // Default, don't store.
1151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Align(AlignOf<T>());
1152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.push_small(*structptr);
1153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     TrackField(field, GetSize());
1154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void AddStructOffset(voffset_t field, uoffset_t off) {
1157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     TrackField(field, off);
1158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Offsets initially are relative to the end of the buffer (downwards).
1161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // This function converts them to be relative to the current location
1162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // in the buffer (when stored here), pointing upwards.
1163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t ReferTo(uoffset_t off) {
1164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Align to ensure GetSize() below is correct.
1165:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Align(sizeof(uoffset_t));
1166:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Offset must refer to something already in buffer.
1167:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(off && off <= GetSize());
1168:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return GetSize() - off + static_cast<uoffset_t>(sizeof(uoffset_t));
1169:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1170:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1171:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void NotNested() {
1172:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // If you hit this, you're trying to construct a Table/Vector/String
1173:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // during the construction of its parent table (between the MyTableBuilder
1174:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // and table.Finish().
1175:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Move the creation of these sub-objects to above the MyTableBuilder to
1176:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // not get this assert.
1177:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Ignoring this assert may appear to work in simple cases, but the reason
1178:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // it is here is that storing objects in-line may cause vtable offsets
1179:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // to not fit anymore. It also leads to vtable duplication.
1180:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(!nested);
1181:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // If you hit this, fields were added outside the scope of a table.
1182:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(!num_field_loc);
1183:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1184:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1185:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // From generated code (or from the parser), we call StartTable/EndTable
1186:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // with a sequence of AddElement calls in between.
1187:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t StartTable() {
1188:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     NotNested();
1189:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     nested = true;
1190:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return GetSize();
1191:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1192:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1193:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // This finishes one serialized object by generating the vtable if it's a
1194:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // table, comparing it against existing vtables, and writing the
1195:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // resulting vtable offset.
1196:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t EndTable(uoffset_t start) {
1197:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // If you get this assert, a corresponding StartTable wasn't called.
1198:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(nested);
1199:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Write the vtable offset, which is the start of any Table.
1200:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // We fill it's value later.
1201:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto vtableoffsetloc = PushElement<soffset_t>(0);
1202:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Write a vtable, which consists entirely of voffset_t elements.
1203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // It starts with the number of offsets, followed by a type id, followed
1204:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // by the offsets themselves. In reverse:
1205:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Include space for the last offset and ensure empty tables have a
1206:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // minimum size.
1207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     max_voffset_ =
1208:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         (std::max)(static_cast<voffset_t>(max_voffset_ + sizeof(voffset_t)),
1209:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                    FieldIndexToOffset(0));
1210:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.fill_big(max_voffset_);
1211:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto table_object_size = vtableoffsetloc - start;
1212:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Vtable use 16bit offsets.
1213:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(table_object_size < 0x10000);
1214:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     WriteScalar<voffset_t>(buf_.data() + sizeof(voffset_t),
1215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                            static_cast<voffset_t>(table_object_size));
1216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     WriteScalar<voffset_t>(buf_.data(), max_voffset_);
1217:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Write the offsets into the table
1218:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     for (auto it = buf_.scratch_end() - num_field_loc * sizeof(FieldLoc);
1219:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****          it < buf_.scratch_end(); it += sizeof(FieldLoc)) {
1220:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       auto field_location = reinterpret_cast<FieldLoc *>(it);
1221:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       auto pos = static_cast<voffset_t>(vtableoffsetloc - field_location->off);
1222:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       // If this asserts, it means you've set a field twice.
1223:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       FLATBUFFERS_ASSERT(
1224:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****           !ReadScalar<voffset_t>(buf_.data() + field_location->id));
1225:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       WriteScalar<voffset_t>(buf_.data() + field_location->id, pos);
1226:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
1227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     ClearOffsets();
1228:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto vt1 = reinterpret_cast<voffset_t *>(buf_.data());
1229:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto vt1_size = ReadScalar<voffset_t>(vt1);
1230:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto vt_use = GetSize();
1231:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // See if we already have generated a vtable with this exact same
1232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // layout before. If so, make it point to the old one, remove this one.
1233:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (dedup_vtables_) {
1234:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       for (auto it = buf_.scratch_data(); it < buf_.scratch_end();
1235:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****            it += sizeof(uoffset_t)) {
1236:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         auto vt_offset_ptr = reinterpret_cast<uoffset_t *>(it);
1237:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         auto vt2 = reinterpret_cast<voffset_t *>(buf_.data_at(*vt_offset_ptr));
1238:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         auto vt2_size = *vt2;
1239:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         if (vt1_size != vt2_size || 0 != memcmp(vt2, vt1, vt1_size)) continue;
1240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         vt_use = *vt_offset_ptr;
1241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         buf_.pop(GetSize() - vtableoffsetloc);
1242:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         break;
1243:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       }
1244:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
1245:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // If this is a new vtable, remember it.
1246:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (vt_use == GetSize()) { buf_.scratch_push_small(vt_use); }
1247:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Fill the vtable offset we created above.
1248:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // The offset points from the beginning of the object to where the
1249:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // vtable is stored.
1250:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Offsets default direction is downward in memory for future format
1251:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // flexibility (storing all vtables at the start of the file).
1252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     WriteScalar(buf_.data_at(vtableoffsetloc),
1253:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                 static_cast<soffset_t>(vt_use) -
1254:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                     static_cast<soffset_t>(vtableoffsetloc));
1255:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1256:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     nested = false;
1257:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return vtableoffsetloc;
1258:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1259:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1260:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FLATBUFFERS_ATTRIBUTE(deprecated("call the version above instead"))
1261:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t EndTable(uoffset_t start, voffset_t /*numfields*/) {
1262:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return EndTable(start);
1263:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1265:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // This checks a required field has been set in a given table that has
1266:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // just been constructed.
1267:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> void Required(Offset<T> table, voffset_t field);
1268:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1269:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t StartStruct(size_t alignment) {
1270:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Align(alignment);
1271:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return GetSize();
1272:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1273:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t EndStruct() { return GetSize(); }
1275:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1276:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void ClearOffsets() {
1277:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.scratch_pop(num_field_loc * sizeof(FieldLoc));
1278:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     num_field_loc = 0;
1279:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     max_voffset_ = 0;
1280:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1281:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1282:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Aligns such that when "len" bytes are written, an object can be written
1283:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // after it with "alignment" without padding.
1284:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void PreAlign(size_t len, size_t alignment) {
1285:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     TrackMinAlign(alignment);
1286:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.fill(PaddingBytes(GetSize() + len, alignment));
1287:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1288:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> void PreAlign(size_t len) {
1289:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     AssertScalarT<T>();
1290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PreAlign(len, sizeof(T));
1291:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @endcond
1293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1294:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Store a string in the buffer, which can contain any binary data.
1295:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] str A const char pointer to the data to be stored as a string.
1296:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] len The number of bytes that should be stored from `str`.
1297:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns the offset in the buffer where the string starts.
1298:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<String> CreateString(const char *str, size_t len) {
1299:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     NotNested();
1300:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PreAlign<uoffset_t>(len + 1);  // Always 0-terminated.
1301:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.fill(1);
1302:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PushBytes(reinterpret_cast<const uint8_t *>(str), len);
1303:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PushElement(static_cast<uoffset_t>(len));
1304:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Offset<String>(GetSize());
1305:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1306:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1307:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Store a string in the buffer, which is null-terminated.
1308:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] str A const char pointer to a C-string to add to the buffer.
1309:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns the offset in the buffer where the string starts.
1310:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<String> CreateString(const char *str) {
1311:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateString(str, strlen(str));
1312:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1313:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1314:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Store a string in the buffer, which is null-terminated.
1315:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] str A char pointer to a C-string to add to the buffer.
1316:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns the offset in the buffer where the string starts.
1317:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<String> CreateString(char *str) {
1318:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateString(str, strlen(str));
1319:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1320:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1321:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Store a string in the buffer, which can contain any binary data.
1322:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] str A const reference to a std::string to store in the buffer.
1323:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns the offset in the buffer where the string starts.
1324:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<String> CreateString(const std::string &str) {
1325:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateString(str.c_str(), str.length());
1326:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1327:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1328:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
1329:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #ifdef FLATBUFFERS_HAS_STRING_VIEW
1330:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Store a string in the buffer, which can contain any binary data.
1331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] str A const string_view to copy in to the buffer.
1332:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns the offset in the buffer where the string starts.
1333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<String> CreateString(flatbuffers::string_view str) {
1334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateString(str.data(), str.size());
1335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1336:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif // FLATBUFFERS_HAS_STRING_VIEW
1337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
1338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1339:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Store a string in the buffer, which can contain any binary data.
1340:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] str A const pointer to a `String` struct to add to the buffer.
1341:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns the offset in the buffer where the string starts
1342:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<String> CreateString(const String *str) {
1343:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return str ? CreateString(str->c_str(), str->size()) : 0;
1344:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1345:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1346:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Store a string in the buffer, which can contain any binary data.
1347:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] str A const reference to a std::string like type with support
1348:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// of T::c_str() and T::length() to store in the buffer.
1349:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns the offset in the buffer where the string starts.
1350:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> Offset<String> CreateString(const T &str) {
1351:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateString(str.c_str(), str.length());
1352:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1353:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1354:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Store a string in the buffer, which can contain any binary data.
1355:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// If a string with this exact contents has already been serialized before,
1356:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// instead simply returns the offset of the existing string.
1357:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] str A const char pointer to the data to be stored as a string.
1358:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] len The number of bytes that should be stored from `str`.
1359:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns the offset in the buffer where the string starts.
1360:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<String> CreateSharedString(const char *str, size_t len) {
1361:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (!string_pool)
1362:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       string_pool = new StringOffsetMap(StringOffsetCompare(buf_));
1363:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto size_before_string = buf_.size();
1364:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Must first serialize the string, since the set is all offsets into
1365:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // buffer.
1366:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto off = CreateString(str, len);
1367:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto it = string_pool->find(off);
1368:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // If it exists we reuse existing serialized data!
1369:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (it != string_pool->end()) {
1370:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       // We can remove the string we serialized.
1371:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       buf_.pop(buf_.size() - size_before_string);
1372:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       return *it;
1373:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
1374:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Record this string for future use.
1375:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     string_pool->insert(off);
1376:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return off;
1377:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1378:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1379:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Store a string in the buffer, which null-terminated.
1380:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// If a string with this exact contents has already been serialized before,
1381:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// instead simply returns the offset of the existing string.
1382:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] str A const char pointer to a C-string to add to the buffer.
1383:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns the offset in the buffer where the string starts.
1384:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<String> CreateSharedString(const char *str) {
1385:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateSharedString(str, strlen(str));
1386:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1387:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1388:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Store a string in the buffer, which can contain any binary data.
1389:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// If a string with this exact contents has already been serialized before,
1390:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// instead simply returns the offset of the existing string.
1391:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] str A const reference to a std::string to store in the buffer.
1392:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns the offset in the buffer where the string starts.
1393:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<String> CreateSharedString(const std::string &str) {
1394:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateSharedString(str.c_str(), str.length());
1395:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1396:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1397:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Store a string in the buffer, which can contain any binary data.
1398:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// If a string with this exact contents has already been serialized before,
1399:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// instead simply returns the offset of the existing string.
1400:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] str A const pointer to a `String` struct to add to the buffer.
1401:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns the offset in the buffer where the string starts
1402:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<String> CreateSharedString(const String *str) {
1403:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateSharedString(str->c_str(), str->size());
1404:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1405:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1406:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @cond FLATBUFFERS_INTERNAL
1407:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t EndVector(size_t len) {
1408:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(nested);  // Hit if no corresponding StartVector.
1409:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     nested = false;
1410:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return PushElement(static_cast<uoffset_t>(len));
1411:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1412:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1413:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void StartVector(size_t len, size_t elemsize) {
1414:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     NotNested();
1415:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     nested = true;
1416:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PreAlign<uoffset_t>(len * elemsize);
1417:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PreAlign(len * elemsize, elemsize);  // Just in case elemsize > uoffset_t.
1418:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1419:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1420:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Call this right before StartVector/CreateVector if you want to force the
1421:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // alignment to be something different than what the element size would
1422:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // normally dictate.
1423:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // This is useful when storing a nested_flatbuffer in a vector of bytes,
1424:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // or when storing SIMD floats, etc.
1425:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void ForceVectorAlignment(size_t len, size_t elemsize, size_t alignment) {
1426:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PreAlign(len * elemsize, alignment);
1427:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1428:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1429:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Similar to ForceVectorAlignment but for String fields.
1430:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void ForceStringAlignment(size_t len, size_t alignment) {
1431:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PreAlign((len + 1) * sizeof(char), alignment);
1432:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1433:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1434:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @endcond
1435:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1436:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize an array into a FlatBuffer `vector`.
1437:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the array elements.
1438:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] v A pointer to the array of type `T` to serialize into the
1439:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// buffer as a `vector`.
1440:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] len The number of elements to serialize.
1441:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1442:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1443:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> Offset<Vector<T>> CreateVector(const T *v, size_t len) {
1444:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // If this assert hits, you're specifying a template argument that is
1445:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // causing the wrong overload to be selected, remove it.
1446:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     AssertScalarT<T>();
1447:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     StartVector(len, sizeof(T));
1448:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // clang-format off
1449:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #if FLATBUFFERS_LITTLEENDIAN
1450:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       PushBytes(reinterpret_cast<const uint8_t *>(v), len * sizeof(T));
1451:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #else
1452:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       if (sizeof(T) == 1) {
1453:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         PushBytes(reinterpret_cast<const uint8_t *>(v), len);
1454:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       } else {
1455:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         for (auto i = len; i > 0; ) {
1456:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****           PushElement(v[--i]);
1457:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         }
1458:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       }
1459:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #endif
1460:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // clang-format on
1461:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Offset<Vector<T>>(EndVector(len));
1462:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1463:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1464:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
1465:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<Offset<T>>> CreateVector(const Offset<T> *v, size_t len) {
1466:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     StartVector(len, sizeof(Offset<T>));
1467:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     for (auto i = len; i > 0;) { PushElement(v[--i]); }
1468:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Offset<Vector<Offset<T>>>(EndVector(len));
1469:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1470:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1471:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize a `std::vector` into a FlatBuffer `vector`.
1472:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the `std::vector` elements.
1473:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param v A const reference to the `std::vector` to serialize into the
1474:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// buffer as a `vector`.
1475:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1476:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1477:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> Offset<Vector<T>> CreateVector(const std::vector<T> &v) {
1478:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVector(data(v), v.size());
1479:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1480:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1481:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // vector<bool> may be implemented using a bit-set, so we can't access it as
1482:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // an array. Instead, read elements manually.
1483:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Background: https://isocpp.org/blog/2012/11/on-vectorbool
1484:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<uint8_t>> CreateVector(const std::vector<bool> &v) {
1485:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     StartVector(v.size(), sizeof(uint8_t));
1486:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     for (auto i = v.size(); i > 0;) {
1487:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       PushElement(static_cast<uint8_t>(v[--i]));
1488:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
1489:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Offset<Vector<uint8_t>>(EndVector(v.size()));
1490:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1491:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1492:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
1493:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #ifndef FLATBUFFERS_CPP98_STL
1494:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize values returned by a function into a FlatBuffer `vector`.
1495:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// This is a convenience function that takes care of iteration for you.
1496:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the `std::vector` elements.
1497:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param f A function that takes the current iteration 0..vector_size-1 and
1498:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// returns any type that you can construct a FlatBuffers vector out of.
1499:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1500:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1501:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> Offset<Vector<T>> CreateVector(size_t vector_size,
1502:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       const std::function<T (size_t i)> &f) {
1503:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     std::vector<T> elems(vector_size);
1504:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     for (size_t i = 0; i < vector_size; i++) elems[i] = f(i);
1505:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVector(elems);
1506:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1507:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif
1508:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
1509:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1510:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize values returned by a function into a FlatBuffer `vector`.
1511:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// This is a convenience function that takes care of iteration for you.
1512:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the `std::vector` elements.
1513:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param f A function that takes the current iteration 0..vector_size-1,
1514:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// and the state parameter returning any type that you can construct a
1515:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// FlatBuffers vector out of.
1516:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param state State passed to f.
1517:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1518:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1519:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T, typename F, typename S>
1520:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<T>> CreateVector(size_t vector_size, F f, S *state) {
1521:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     std::vector<T> elems(vector_size);
1522:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     for (size_t i = 0; i < vector_size; i++) elems[i] = f(i, state);
1523:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVector(elems);
1524:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1525:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1526:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize a `std::vector<std::string>` into a FlatBuffer `vector`.
1527:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// This is a convenience function for a common case.
1528:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param v A const reference to the `std::vector` to serialize into the
1529:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// buffer as a `vector`.
1530:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1531:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1532:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<Offset<String>>> CreateVectorOfStrings(
1533:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       const std::vector<std::string> &v) {
1534:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     std::vector<Offset<String>> offsets(v.size());
1535:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     for (size_t i = 0; i < v.size(); i++) offsets[i] = CreateString(v[i]);
1536:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVector(offsets);
1537:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1538:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1539:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize an array of structs into a FlatBuffer `vector`.
1540:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the struct array elements.
1541:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] v A pointer to the array of type `T` to serialize into the
1542:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// buffer as a `vector`.
1543:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] len The number of elements to serialize.
1544:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1545:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1546:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
1547:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<const T *>> CreateVectorOfStructs(const T *v, size_t len) {
1548:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     StartVector(len * sizeof(T) / AlignOf<T>(), AlignOf<T>());
1549:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PushBytes(reinterpret_cast<const uint8_t *>(v), sizeof(T) * len);
1550:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Offset<Vector<const T *>>(EndVector(len));
1551:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1552:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1553:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize an array of native structs into a FlatBuffer `vector`.
1554:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the struct array elements.
1555:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam S The data type of the native struct array elements.
1556:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] v A pointer to the array of type `S` to serialize into the
1557:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// buffer as a `vector`.
1558:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] len The number of elements to serialize.
1559:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1560:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1561:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T, typename S>
1562:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<const T *>> CreateVectorOfNativeStructs(const S *v,
1563:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                                         size_t len) {
1564:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     extern T Pack(const S &);
1565:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     typedef T (*Pack_t)(const S &);
1566:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     std::vector<T> vv(len);
1567:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     std::transform(v, v + len, vv.begin(), static_cast<Pack_t&>(Pack));
1568:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVectorOfStructs<T>(vv.data(), vv.size());
1569:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1570:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1571:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format off
1572:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #ifndef FLATBUFFERS_CPP98_STL
1573:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize an array of structs into a FlatBuffer `vector`.
1574:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the struct array elements.
1575:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] f A function that takes the current iteration 0..vector_size-1
1576:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// and a pointer to the struct that must be filled.
1577:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1578:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1579:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// This is mostly useful when flatbuffers are generated with mutation
1580:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// accessors.
1581:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> Offset<Vector<const T *>> CreateVectorOfStructs(
1582:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       size_t vector_size, const std::function<void(size_t i, T *)> &filler) {
1583:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     T* structs = StartVectorOfStructs<T>(vector_size);
1584:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     for (size_t i = 0; i < vector_size; i++) {
1585:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       filler(i, structs);
1586:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       structs++;
1587:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
1588:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return EndVectorOfStructs<T>(vector_size);
1589:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1590:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   #endif
1591:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // clang-format on
1592:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1593:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize an array of structs into a FlatBuffer `vector`.
1594:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the struct array elements.
1595:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] f A function that takes the current iteration 0..vector_size-1,
1596:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// a pointer to the struct that must be filled and the state argument.
1597:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] state Arbitrary state to pass to f.
1598:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1599:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1600:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// This is mostly useful when flatbuffers are generated with mutation
1601:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// accessors.
1602:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T, typename F, typename S>
1603:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<const T *>> CreateVectorOfStructs(size_t vector_size, F f,
1604:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                                   S *state) {
1605:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     T *structs = StartVectorOfStructs<T>(vector_size);
1606:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     for (size_t i = 0; i < vector_size; i++) {
1607:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       f(i, structs, state);
1608:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       structs++;
1609:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
1610:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return EndVectorOfStructs<T>(vector_size);
1611:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1612:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1613:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize a `std::vector` of structs into a FlatBuffer `vector`.
1614:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the `std::vector` struct elements.
1615:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in]] v A const reference to the `std::vector` of structs to
1616:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// serialize into the buffer as a `vector`.
1617:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1618:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1619:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T, typename Alloc>
1620:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<const T *>> CreateVectorOfStructs(
1621:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       const std::vector<T, Alloc> &v) {
1622:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVectorOfStructs(data(v), v.size());
1623:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1624:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1625:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize a `std::vector` of native structs into a FlatBuffer
1626:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// `vector`.
1627:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the `std::vector` struct elements.
1628:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam S The data type of the `std::vector` native struct elements.
1629:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in]] v A const reference to the `std::vector` of structs to
1630:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// serialize into the buffer as a `vector`.
1631:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1632:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1633:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T, typename S>
1634:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<const T *>> CreateVectorOfNativeStructs(
1635:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       const std::vector<S> &v) {
1636:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVectorOfNativeStructs<T, S>(data(v), v.size());
1637:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1638:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1639:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @cond FLATBUFFERS_INTERNAL
1640:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> struct StructKeyComparator {
1641:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     bool operator()(const T &a, const T &b) const {
1642:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       return a.KeyCompareLessThan(&b);
1643:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
1644:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1645:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****    private:
1646:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     StructKeyComparator &operator=(const StructKeyComparator &);
1647:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   };
1648:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @endcond
1649:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1650:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize a `std::vector` of structs into a FlatBuffer `vector`
1651:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// in sorted order.
1652:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the `std::vector` struct elements.
1653:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in]] v A const reference to the `std::vector` of structs to
1654:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// serialize into the buffer as a `vector`.
1655:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1656:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1657:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
1658:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<const T *>> CreateVectorOfSortedStructs(std::vector<T> *v) {
1659:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVectorOfSortedStructs(data(*v), v->size());
1660:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1661:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1662:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize a `std::vector` of native structs into a FlatBuffer
1663:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// `vector` in sorted order.
1664:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the `std::vector` struct elements.
1665:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam S The data type of the `std::vector` native struct elements.
1666:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in]] v A const reference to the `std::vector` of structs to
1667:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// serialize into the buffer as a `vector`.
1668:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1669:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1670:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T, typename S>
1671:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<const T *>> CreateVectorOfSortedNativeStructs(
1672:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       std::vector<S> *v) {
1673:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVectorOfSortedNativeStructs<T, S>(data(*v), v->size());
1674:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1675:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1676:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize an array of structs into a FlatBuffer `vector` in sorted
1677:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// order.
1678:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the struct array elements.
1679:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] v A pointer to the array of type `T` to serialize into the
1680:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// buffer as a `vector`.
1681:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] len The number of elements to serialize.
1682:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1683:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1684:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
1685:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<const T *>> CreateVectorOfSortedStructs(T *v, size_t len) {
1686:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     std::sort(v, v + len, StructKeyComparator<T>());
1687:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVectorOfStructs(v, len);
1688:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1689:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1690:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize an array of native structs into a FlatBuffer `vector` in
1691:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// sorted order.
1692:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the struct array elements.
1693:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam S The data type of the native struct array elements.
1694:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] v A pointer to the array of type `S` to serialize into the
1695:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// buffer as a `vector`.
1696:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] len The number of elements to serialize.
1697:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1698:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1699:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T, typename S>
1700:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<const T *>> CreateVectorOfSortedNativeStructs(S *v,
1701:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                                               size_t len) {
1702:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     extern T Pack(const S &);
1703:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     typedef T (*Pack_t)(const S &);
1704:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     std::vector<T> vv(len);
1705:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     std::transform(v, v + len, vv.begin(), static_cast<Pack_t&>(Pack));
1706:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVectorOfSortedStructs<T>(vv, len);
1707:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1708:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1709:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @cond FLATBUFFERS_INTERNAL
1710:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> struct TableKeyComparator {
1711:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     TableKeyComparator(vector_downward &buf) : buf_(buf) {}
1712:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     bool operator()(const Offset<T> &a, const Offset<T> &b) const {
1713:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       auto table_a = reinterpret_cast<T *>(buf_.data_at(a.o));
1714:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       auto table_b = reinterpret_cast<T *>(buf_.data_at(b.o));
1715:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       return table_a->KeyCompareLessThan(table_b);
1716:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
1717:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     vector_downward &buf_;
1718:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1719:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****    private:
1720:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     TableKeyComparator &operator=(const TableKeyComparator &);
1721:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   };
1722:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @endcond
1723:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1724:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize an array of `table` offsets as a `vector` in the buffer
1725:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// in sorted order.
1726:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type that the offset refers to.
1727:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] v An array of type `Offset<T>` that contains the `table`
1728:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// offsets to store in the buffer in sorted order.
1729:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] len The number of elements to store in the `vector`.
1730:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1731:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1732:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
1733:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<Offset<T>>> CreateVectorOfSortedTables(Offset<T> *v,
1734:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                                        size_t len) {
1735:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     std::sort(v, v + len, TableKeyComparator<T>(buf_));
1736:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVector(v, len);
1737:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1738:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1739:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Serialize an array of `table` offsets as a `vector` in the buffer
1740:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// in sorted order.
1741:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type that the offset refers to.
1742:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] v An array of type `Offset<T>` that contains the `table`
1743:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// offsets to store in the buffer in sorted order.
1744:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @return Returns a typed `Offset` into the serialized data indicating
1745:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// where the vector is stored.
1746:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
1747:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<Offset<T>>> CreateVectorOfSortedTables(
1748:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       std::vector<Offset<T>> *v) {
1749:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateVectorOfSortedTables(data(*v), v->size());
1750:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1751:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1752:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Specialized version of `CreateVector` for non-copying use cases.
1753:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// Write the data any time later to the returned buffer pointer `buf`.
1754:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] len The number of elements to store in the `vector`.
1755:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] elemsize The size of each element in the `vector`.
1756:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[out] buf A pointer to a `uint8_t` pointer that can be
1757:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// written to at a later time to serialize the data into a `vector`
1758:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// in the buffer.
1759:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t CreateUninitializedVector(size_t len, size_t elemsize,
1760:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                       uint8_t **buf) {
1761:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     NotNested();
1762:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     StartVector(len, elemsize);
1763:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.make_space(len * elemsize);
1764:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto vec_start = GetSize();
1765:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto vec_end = EndVector(len);
1766:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     *buf = buf_.data_at(vec_start);
1767:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return vec_end;
1768:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1769:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1770:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Specialized version of `CreateVector` for non-copying use cases.
1771:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// Write the data any time later to the returned buffer pointer `buf`.
1772:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @tparam T The data type of the data that will be stored in the buffer
1773:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// as a `vector`.
1774:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] len The number of elements to store in the `vector`.
1775:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[out] buf A pointer to a pointer of type `T` that can be
1776:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// written to at a later time to serialize the data into a `vector`
1777:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// in the buffer.
1778:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
1779:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<T>> CreateUninitializedVector(size_t len, T **buf) {
1780:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     AssertScalarT<T>();
1781:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateUninitializedVector(len, sizeof(T),
1782:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                      reinterpret_cast<uint8_t **>(buf));
1783:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1784:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1785:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
1786:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<const T*>> CreateUninitializedVectorOfStructs(size_t len, T **buf) {
1787:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return CreateUninitializedVector(len, sizeof(T),
1788:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                      reinterpret_cast<uint8_t **>(buf));
1789:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1790:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1791:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1792:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // @brief Create a vector of scalar type T given as input a vector of scalar
1793:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // type U, useful with e.g. pre "enum class" enums, or any existing scalar
1794:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // data of the wrong type.
1795:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T, typename U>
1796:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<T>> CreateVectorScalarCast(const U *v, size_t len) {
1797:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     AssertScalarT<T>();
1798:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     AssertScalarT<U>();
1799:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     StartVector(len, sizeof(T));
1800:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     for (auto i = len; i > 0;) { PushElement(static_cast<T>(v[--i])); }
1801:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Offset<Vector<T>>(EndVector(len));
1802:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1803:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1804:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Write a struct by itself, typically to be part of a union.
1805:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> Offset<const T *> CreateStruct(const T &structobj) {
1806:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     NotNested();
1807:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Align(AlignOf<T>());
1808:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.push_small(structobj);
1809:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Offset<const T *>(GetSize());
1810:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1811:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1812:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief The length of a FlatBuffer file header.
1813:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   static const size_t kFileIdentifierLength = 4;
1814:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1815:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Finish serializing a buffer by writing the root offset.
1816:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @param[in] file_identifier If a `file_identifier` is given, the buffer
1817:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// will be prefixed with a standard FlatBuffers file header.
1818:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
1819:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void Finish(Offset<T> root, const char *file_identifier = nullptr) {
1820:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Finish(root.o, file_identifier, false);
1821:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1822:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1823:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// @brief Finish a buffer with a 32 bit size field pre-fixed (size of the
1824:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// buffer following the size field). These buffers are NOT compatible
1825:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// with standard buffers created by Finish, i.e. you can't call GetRoot
1826:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// on them, you have to use GetSizePrefixedRoot instead.
1827:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// All >32 bit quantities in this buffer will be aligned when the whole
1828:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// size pre-fixed buffer is aligned.
1829:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   /// These kinds of buffers are useful for creating a stream of FlatBuffers.
1830:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
1831:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void FinishSizePrefixed(Offset<T> root,
1832:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                           const char *file_identifier = nullptr) {
1833:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Finish(root.o, file_identifier, true);
1834:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1835:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1836:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void SwapBufAllocator(FlatBufferBuilder &other) {
1837:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.swap_allocator(other.buf_);
1838:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1839:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1840:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** protected:
1841:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1842:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // You shouldn't really be copying instances of this class.
1843:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FlatBufferBuilder(const FlatBufferBuilder &);
1844:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   FlatBufferBuilder &operator=(const FlatBufferBuilder &);
1845:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1846:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   void Finish(uoffset_t root, const char *file_identifier, bool size_prefix) {
1847:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     NotNested();
1848:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     buf_.clear_scratch();
1849:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // This will cause the whole buffer to be aligned.
1850:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PreAlign((size_prefix ? sizeof(uoffset_t) : 0) + sizeof(uoffset_t) +
1851:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                  (file_identifier ? kFileIdentifierLength : 0),
1852:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****              minalign_);
1853:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (file_identifier) {
1854:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       FLATBUFFERS_ASSERT(strlen(file_identifier) == kFileIdentifierLength);
1855:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       PushBytes(reinterpret_cast<const uint8_t *>(file_identifier),
1856:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                 kFileIdentifierLength);
1857:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
1858:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     PushElement(ReferTo(root));  // Location of root.
1859:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (size_prefix) { PushElement(GetSize()); }
1860:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     finished = true;
1861:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1862:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1863:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   struct FieldLoc {
1864:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     uoffset_t off;
1865:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     voffset_t id;
1866:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   };
1867:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1868:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   vector_downward buf_;
1869:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1870:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Accumulating offsets of table members while it is being built.
1871:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // We store these in the scratch pad of buf_, after the vtable offsets.
1872:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t num_field_loc;
1873:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Track how much of the vtable is in use, so we can output the most compact
1874:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // possible vtable.
1875:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   voffset_t max_voffset_;
1876:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1877:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Ensure objects are not nested.
1878:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool nested;
1879:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1880:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Ensure the buffer is finished before it is being accessed.
1881:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool finished;
1882:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1883:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t minalign_;
1884:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1885:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool force_defaults_;  // Serialize values equal to their defaults anyway.
1886:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1887:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool dedup_vtables_;
1888:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1889:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   struct StringOffsetCompare {
1890:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     StringOffsetCompare(const vector_downward &buf) : buf_(&buf) {}
1891:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     bool operator()(const Offset<String> &a, const Offset<String> &b) const {
1892:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       auto stra = reinterpret_cast<const String *>(buf_->data_at(a.o));
1893:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       auto strb = reinterpret_cast<const String *>(buf_->data_at(b.o));
1894:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       return StringLessThan(stra->data(), stra->size(),
1895:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                             strb->data(), strb->size());
1896:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
1897:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     const vector_downward *buf_;
1898:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   };
1899:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1900:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // For use with CreateSharedString. Instantiated on first use only.
1901:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   typedef std::set<Offset<String>, StringOffsetCompare> StringOffsetMap;
1902:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   StringOffsetMap *string_pool;
1903:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1904:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  private:
1905:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Allocates space for a vector of structures.
1906:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Must be completed with EndVectorOfStructs().
1907:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> T *StartVectorOfStructs(size_t vector_size) {
1908:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     StartVector(vector_size * sizeof(T) / AlignOf<T>(), AlignOf<T>());
1909:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return reinterpret_cast<T *>(buf_.make_space(vector_size * sizeof(T)));
1910:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1911:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1912:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // End the vector of structues in the flatbuffers.
1913:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Vector should have previously be started with StartVectorOfStructs().
1914:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
1915:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Offset<Vector<const T *>> EndVectorOfStructs(size_t vector_size) {
1916:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Offset<Vector<const T *>>(EndVector(vector_size));
1917:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1918:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
1919:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// @}
1920:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1921:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// @cond FLATBUFFERS_INTERNAL
1922:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Helpers to get a typed pointer to the root object contained in the buffer.
1923:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> T *GetMutableRoot(void *buf) {
1924:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   EndianCheck();
1925:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return reinterpret_cast<T *>(
1926:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       reinterpret_cast<uint8_t *>(buf) +
1927:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       EndianScalar(*reinterpret_cast<uoffset_t *>(buf)));
1928:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
1929:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1930:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> const T *GetRoot(const void *buf) {
1931:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return GetMutableRoot<T>(const_cast<void *>(buf));
1932:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
1933:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1934:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> const T *GetSizePrefixedRoot(const void *buf) {
1935:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return GetRoot<T>(reinterpret_cast<const uint8_t *>(buf) + sizeof(uoffset_t));
1936:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
1937:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1938:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// Helpers to get a typed pointer to objects that are currently being built.
1939:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// @warning Creating new objects will lead to reallocations and invalidates
1940:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// the pointer!
1941:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T>
1942:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** T *GetMutableTemporaryPointer(FlatBufferBuilder &fbb, Offset<T> offset) {
1943:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return reinterpret_cast<T *>(fbb.GetCurrentBufferPointer() + fbb.GetSize() -
1944:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                offset.o);
1945:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
1946:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1947:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T>
1948:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** const T *GetTemporaryPointer(FlatBufferBuilder &fbb, Offset<T> offset) {
1949:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return GetMutableTemporaryPointer<T>(fbb, offset);
1950:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
1951:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1952:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// @brief Get a pointer to the the file_identifier section of the buffer.
1953:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// @return Returns a const char pointer to the start of the file_identifier
1954:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// characters in the buffer.  The returned char * has length
1955:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// 'flatbuffers::FlatBufferBuilder::kFileIdentifierLength'.
1956:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// This function is UNDEFINED for FlatBuffers whose schema does not include
1957:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// a file_identifier (likely points at padding or the start of a the root
1958:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** /// vtable).
1959:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** inline const char *GetBufferIdentifier(const void *buf, bool size_prefixed = false) {
1960:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return reinterpret_cast<const char *>(buf) +
1961:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****          ((size_prefixed) ? 2 * sizeof(uoffset_t) : sizeof(uoffset_t));
1962:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
1963:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1964:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Helper to see if the identifier in a buffer has the expected value.
1965:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** inline bool BufferHasIdentifier(const void *buf, const char *identifier, bool size_prefixed = false
1966:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   return strncmp(GetBufferIdentifier(buf, size_prefixed), identifier,
1967:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                  FlatBufferBuilder::kFileIdentifierLength) == 0;
1968:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** }
1969:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1970:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Helper class to verify the integrity of a FlatBuffer
1971:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** class Verifier FLATBUFFERS_FINAL_CLASS {
1972:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  public:
1973:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   Verifier(const uint8_t *buf, size_t buf_len, uoffset_t _max_depth = 64,
1974:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****            uoffset_t _max_tables = 1000000, bool _check_alignment = true)
1975:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       : buf_(buf),
1976:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         size_(buf_len),
1977:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         depth_(0),
1978:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         max_depth_(_max_depth),
1979:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         num_tables_(0),
1980:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         max_tables_(_max_tables),
1981:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         upper_bound_(0),
1982:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         check_alignment_(_check_alignment)
1983:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   {
1984:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     FLATBUFFERS_ASSERT(size_ < FLATBUFFERS_MAX_BUFFER_SIZE);
1985:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
1986:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
1987:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Central location where any verification failures register.
1988:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool Check(bool ok) const {
1989:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // clang-format off
1990:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #ifdef FLATBUFFERS_DEBUG_VERIFICATION_FAILURE
1991:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       FLATBUFFERS_ASSERT(ok);
1992:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #endif
1993:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #ifdef FLATBUFFERS_TRACK_VERIFIER_BUFFER_SIZE
1994:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       if (!ok)
1995:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         upper_bound_ = 0;
1996:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #endif
1997:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // clang-format on
1998:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return ok;
1999:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2000:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2001:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Verify any range within the buffer.
2002:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool Verify(size_t elem, size_t elem_len) const {
2003:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // clang-format off
2004:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #ifdef FLATBUFFERS_TRACK_VERIFIER_BUFFER_SIZE
2005:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       auto upper_bound = elem + elem_len;
2006:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       if (upper_bound_ < upper_bound)
2007:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         upper_bound_ =  upper_bound;
2008:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #endif
2009:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // clang-format on
2010:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Check(elem_len < size_ && elem <= size_ - elem_len);
2011:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2012:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2013:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> bool VerifyAlignment(size_t elem) const {
2014:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return (elem & (sizeof(T) - 1)) == 0 || !check_alignment_;
2015:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2016:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2017:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Verify a range indicated by sizeof(T).
2018:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> bool Verify(size_t elem) const {
2019:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return VerifyAlignment<T>(elem) && Verify(elem, sizeof(T));
2020:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2021:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2022:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Verify relative to a known-good base pointer.
2023:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool Verify(const uint8_t *base, voffset_t elem_off, size_t elem_len) const {
2024:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Verify(static_cast<size_t>(base - buf_) + elem_off, elem_len);
2025:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2026:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2027:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> bool Verify(const uint8_t *base, voffset_t elem_off)
2028:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       const {
2029:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Verify(static_cast<size_t>(base - buf_) + elem_off, sizeof(T));
2030:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2031:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2032:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Verify a pointer (may be NULL) of a table type.
2033:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> bool VerifyTable(const T *table) {
2034:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return !table || table->Verify(*this);
2035:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2036:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2037:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Verify a pointer (may be NULL) of any vector type.
2038:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> bool VerifyVector(const Vector<T> *vec) const {
2039:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return !vec || VerifyVectorOrString(reinterpret_cast<const uint8_t *>(vec),
2040:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                         sizeof(T));
2041:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2042:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2043:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Verify a pointer (may be NULL) of a vector to struct.
2044:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> bool VerifyVector(const Vector<const T *> *vec) const {
2045:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return VerifyVector(reinterpret_cast<const Vector<T> *>(vec));
2046:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2047:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2048:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Verify a pointer (may be NULL) to string.
2049:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool VerifyString(const String *str) const {
2050:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     size_t end;
2051:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return !str ||
2052:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****            (VerifyVectorOrString(reinterpret_cast<const uint8_t *>(str),
2053:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                                  1, &end) &&
2054:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****             Verify(end, 1) &&      // Must have terminator
2055:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****             Check(buf_[end] == '\0'));  // Terminating byte must be 0.
2056:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2057:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2058:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Common code between vectors and strings.
2059:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool VerifyVectorOrString(const uint8_t *vec, size_t elem_size,
2060:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****                     size_t *end = nullptr) const {
2061:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto veco = static_cast<size_t>(vec - buf_);
2062:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Check we can read the size field.
2063:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (!Verify<uoffset_t>(veco)) return false;
2064:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Check the whole array. If this is a string, the byte past the array
2065:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // must be 0.
2066:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto size = ReadScalar<uoffset_t>(vec);
2067:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto max_elems = FLATBUFFERS_MAX_BUFFER_SIZE / elem_size;
2068:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (!Check(size < max_elems))
2069:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       return false;  // Protect against byte_size overflowing.
2070:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto byte_size = sizeof(size) + elem_size * size;
2071:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (end) *end = veco + byte_size;
2072:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Verify(veco, byte_size);
2073:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2074:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2075:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Special case for string contents, after the above has been called.
2076:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool VerifyVectorOfStrings(const Vector<Offset<String>> *vec) const {
2077:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (vec) {
2078:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       for (uoffset_t i = 0; i < vec->size(); i++) {
2079:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         if (!VerifyString(vec->Get(i))) return false;
2080:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       }
2081:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
2082:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return true;
2083:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2084:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2085:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Special case for table contents, after the above has been called.
2086:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> bool VerifyVectorOfTables(const Vector<Offset<T>> *vec) {
2087:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (vec) {
2088:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       for (uoffset_t i = 0; i < vec->size(); i++) {
2089:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         if (!vec->Get(i)->Verify(*this)) return false;
2090:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       }
2091:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
2092:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return true;
2093:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2094:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2095:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool VerifyTableStart(const uint8_t *table) {
2096:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Check the vtable offset.
2097:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto tableo = static_cast<size_t>(table - buf_);
2098:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (!Verify<soffset_t>(tableo)) return false;
2099:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // This offset may be signed, but doing the substraction unsigned always
2100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // gives the result we want.
2101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto vtableo = tableo - static_cast<size_t>(ReadScalar<soffset_t>(table));
2102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Check the vtable size field, then check vtable fits in its entirety.
2103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return VerifyComplexity() && Verify<voffset_t>(vtableo) &&
2104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****            VerifyAlignment<voffset_t>(ReadScalar<voffset_t>(buf_ + vtableo)) &&
2105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****            Verify(vtableo, ReadScalar<voffset_t>(buf_ + vtableo));
2106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T>
2109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool VerifyBufferFromStart(const char *identifier, size_t start) {
2110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (identifier &&
2111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         (size_ < 2 * sizeof(flatbuffers::uoffset_t) ||
2112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****          !BufferHasIdentifier(buf_ + start, identifier))) {
2113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       return false;
2114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     }
2115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Call T::Verify, which must be in the generated code for this type.
2117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto o = VerifyOffset(start);
2118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return o && reinterpret_cast<const T *>(buf_ + start + o)->Verify(*this)
2119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // clang-format off
2120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #ifdef FLATBUFFERS_TRACK_VERIFIER_BUFFER_SIZE
2121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****            && GetComputedSize()
2122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #endif
2123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****         ;
2124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // clang-format on
2125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Verify this whole buffer, starting with root type T.
2128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> bool VerifyBuffer() { return VerifyBuffer<T>(nullptr); }
2129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> bool VerifyBuffer(const char *identifier) {
2131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return VerifyBufferFromStart<T>(identifier, 0);
2132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> bool VerifySizePrefixedBuffer(const char *identifier) {
2135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Verify<uoffset_t>(0U) &&
2136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****            ReadScalar<uoffset_t>(buf_) == size_ - sizeof(uoffset_t) &&
2137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****            VerifyBufferFromStart<T>(identifier, sizeof(uoffset_t));
2138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t VerifyOffset(size_t start) const {
2141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (!Verify<uoffset_t>(start)) return 0;
2142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto o = ReadScalar<uoffset_t>(buf_ + start);
2143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // May not point to itself.
2144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (!Check(o != 0)) return 0;
2145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Can't wrap around / buffers are max 2GB.
2146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (!Check(static_cast<soffset_t>(o) >= 0)) return 0;
2147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // Must be inside the buffer to create a pointer from it (pointer outside
2148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // buffer is UB).
2149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (!Verify(start + o, 1)) return 0;
2150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return o;
2151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t VerifyOffset(const uint8_t *base, voffset_t start) const {
2154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return VerifyOffset(static_cast<size_t>(base - buf_) + start);
2155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Called at the start of a table to increase counters measuring data
2158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // structure depth and amount, and possibly bails out with false if
2159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // limits set by the constructor have been hit. Needs to be balanced
2160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // with EndTable().
2161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool VerifyComplexity() {
2162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     depth_++;
2163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     num_tables_++;
2164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return Check(depth_ <= max_depth_ && num_tables_ <= max_tables_);
2165:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2166:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2167:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Called at the end of a table to pop the depth count.
2168:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool EndTable() {
2169:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     depth_--;
2170:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return true;
2171:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2172:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2173:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // Returns the message size in bytes
2174:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t GetComputedSize() const {
2175:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // clang-format off
2176:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #ifdef FLATBUFFERS_TRACK_VERIFIER_BUFFER_SIZE
2177:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       uintptr_t size = upper_bound_;
2178:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       // Align the size to uoffset_t
2179:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       size = (size - 1 + sizeof(uoffset_t)) & ~(sizeof(uoffset_t) - 1);
2180:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       return (size > size_) ?  0 : size;
2181:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #else
2182:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       // Must turn on FLATBUFFERS_TRACK_VERIFIER_BUFFER_SIZE for this to work.
2183:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       (void)upper_bound_;
2184:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       FLATBUFFERS_ASSERT(false);
2185:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       return 0;
2186:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     #endif
2187:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // clang-format on
2188:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2189:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2190:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  private:
2191:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const uint8_t *buf_;
2192:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   size_t size_;
2193:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t depth_;
2194:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t max_depth_;
2195:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t num_tables_;
2196:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t max_tables_;
2197:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   mutable size_t upper_bound_;
2198:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool check_alignment_;
2199:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
2200:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2201:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // Convenient way to bundle a buffer and its length, to pass it around
2202:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // typed by its root.
2203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // A BufferRef does not own its buffer.
2204:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** struct BufferRefBase {};  // for std::is_base_of
2205:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** template<typename T> struct BufferRef : BufferRefBase {
2206:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   BufferRef() : buf(nullptr), len(0), must_free(false) {}
2207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   BufferRef(uint8_t *_buf, uoffset_t _len)
2208:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****       : buf(_buf), len(_len), must_free(false) {}
2209:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2210:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   ~BufferRef() {
2211:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     if (must_free) free(buf);
2212:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2213:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2214:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const T *GetRoot() const { return flatbuffers::GetRoot<T>(buf); }
2215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool Verify() {
2217:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     Verifier verifier(buf, len);
2218:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return verifier.VerifyBuffer<T>(nullptr);
2219:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2220:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2221:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *buf;
2222:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uoffset_t len;
2223:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   bool must_free;
2224:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
2225:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2226:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // "structs" are flat structures that do not have an offset table, thus
2227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // always have all members present and do not support forwards/backwards
2228:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // compatible extensions.
2229:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2230:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** class Struct FLATBUFFERS_FINAL_CLASS {
2231:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  public:
2232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> T GetField(uoffset_t o) const {
2233:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return ReadScalar<T>(&data_[o]);
2234:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2235:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2236:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> T GetStruct(uoffset_t o) const {
2237:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return reinterpret_cast<T>(&data_[o]);
2238:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2239:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const uint8_t *GetAddressOf(uoffset_t o) const { return &data_[o]; }
2241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t *GetAddressOf(uoffset_t o) { return &data_[o]; }
2242:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2243:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  private:
2244:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   uint8_t data_[1];
2245:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** };
2246:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2247:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // "tables" use an offset table (possibly shared) that allows fields to be
2248:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** // omitted and added at will, but uses an extra indirection to read.
2249:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** class Table {
2250:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****  public:
2251:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   const uint8_t *GetVTable() const {
2252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return data_ - ReadScalar<soffset_t>(data_);
 697              		.loc 6 2252 0
 698 0034 003092E5 		ldr	r3, [r2]
 699 0038 033042E0 		sub	r3, r2, r3
 700              	.LVL57:
 701              	.LBE1049:
 702              	.LBE1048:
2253:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2254:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2255:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // This gets the field offset for any of the functions below it, or 0
2256:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   // if the field was not present.
2257:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   voffset_t GetOptionalFieldOffset(voffset_t field) const {
2258:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // The vtable offset is always at the start.
2259:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto vtable = GetVTable();
2260:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // The first element is the size of the vtable (fields + type id + itself).
2261:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto vtsize = ReadScalar<voffset_t>(vtable);
2262:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // If the field we're accessing is outside the vtable, we're reading older
2263:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     // data, so it's the same as if the offset was 0 (not present).
2264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return field < vtsize ? ReadScalar<voffset_t>(vtable + field) : 0;
 703              		.loc 6 2264 0
 704 003c B010D3E1 		ldrh	r1, [r3]
 705 0040 060051E3 		cmp	r1, #6
 706              	.LBE1047:
 707              	.LBE1046:
2265:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2266:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2267:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename T> T GetField(voffset_t field, T defaultval) const {
2268:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto field_offset = GetOptionalFieldOffset(field);
2269:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return field_offset ? ReadScalar<T>(data_ + field_offset) : defaultval;
2270:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
2271:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
2272:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   template<typename P> P GetPointer(voffset_t field) {
2273:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto field_offset = GetOptionalFieldOffset(field);
2274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     auto p = data_ + field_offset;
2275:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return field_offset ? reinterpret_cast<P>(p + ReadScalar<uoffset_t>(p))
 708              		.loc 6 2275 0
 709 0044 0010A0D3 		movle	r1, #0
 710              	.LBB1053:
 711              	.LBB1052:
2264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 712              		.loc 6 2264 0
 713 0048 040000DA 		ble	.L52
 714              	.LVL58:
 715              	.LBB1050:
 716              	.LBB1051:
 717              		.file 7 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #ifndef FLATBUFFERS_BASE_H_
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #define FLATBUFFERS_BASE_H_
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // clang-format off
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // If activate should be declared and included first.
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if defined(FLATBUFFERS_MEMORY_LEAK_TRACKING) && \
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     defined(_MSC_VER) && defined(_DEBUG)
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // The _CRTDBG_MAP_ALLOC inside <crtdbg.h> will replace
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // calloc/free (etc) to its debug version using #define directives.
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define _CRTDBG_MAP_ALLOC
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #include <stdlib.h>
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #include <crtdbg.h>
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // Replace operator new by trace-enabled version.
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define DEBUG_NEW new(_NORMAL_BLOCK, __FILE__, __LINE__)
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define new DEBUG_NEW
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if !defined(FLATBUFFERS_ASSERT)
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <assert.h>
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #define FLATBUFFERS_ASSERT assert
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #elif defined(FLATBUFFERS_ASSERT_INCLUDE)
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Include file with forward declaration
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include FLATBUFFERS_ASSERT_INCLUDE
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #ifndef ARDUINO
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <cstdint>
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <cstddef>
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <cstdlib>
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <cstring>
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if defined(ARDUINO) && !defined(ARDUINOSTL_M_H)
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #include <utility>
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #else
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #include <utility>
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <string>
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <type_traits>
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <vector>
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <set>
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <algorithm>
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <iterator>
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include <memory>
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #ifdef _STLPORT_VERSION
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_CPP98_STL
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #ifndef FLATBUFFERS_CPP98_STL
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #include <functional>
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #include "third_party/flatbuffers/include/flatbuffers/stl_emulation.h"
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Note the __clang__ check is needed, because clang presents itself
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // as an older GNUC compiler (4.2).
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Clang 3.3 and later implement all of the ISO C++ 2011 standard.
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Clang 3.4 and later implement all of the ISO C++ 2014 standard.
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // http://clang.llvm.org/cxx_status.html
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Note the MSVC value '__cplusplus' may be incorrect:
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // The '__cplusplus' predefined macro in the MSVC stuck at the value 199711L,
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // indicating (erroneously!) that the compiler conformed to the C++98 Standard.
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // This value should be correct starting from MSVC2017-15.7-Preview-3.
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // The '__cplusplus' will be valid only if MSVC2017-15.7-P3 and the `/Zc:__cplusplus` switch is set
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Workaround (for details see MSDN):
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Use the _MSC_VER and _MSVC_LANG definition instead of the __cplusplus  for compatibility.
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // The _MSVC_LANG macro reports the Standard version regardless of the '/Zc:__cplusplus' switch.
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if defined(__GNUC__) && !defined(__clang__)
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_GCC (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__)
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #else
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_GCC 0
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if defined(__clang__)
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_CLANG (__clang_major__ * 10000 + __clang_minor__ * 100 + __clang_patchlevel__
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #else
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_CLANG 0
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** /// @cond FLATBUFFERS_INTERNAL
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if __cplusplus <= 199711L && \
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     (!defined(_MSC_VER) || _MSC_VER < 1600) && \
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     (!defined(__GNUC__) || \
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__ < 40400))
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #error A C++11 compatible compiler with support for the auto typing is \
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****          required for FlatBuffers.
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #error __cplusplus _MSC_VER __GNUC__  __GNUC_MINOR__  __GNUC_PATCHLEVEL__
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if !defined(__clang__) && \
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     defined(__GNUC__) && \
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__ < 40600)
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // Backwards compatability for g++ 4.4, and 4.5 which don't have the nullptr
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // and constexpr keywords. Note the __clang__ check is needed, because clang
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // presents itself as an older GNUC compiler.
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #ifndef nullptr_t
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     const class nullptr_t {
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     public:
 104:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       template<class T> inline operator T*() const { return 0; }
 105:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     private:
 106:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       void operator&() const;
 107:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     } nullptr = {};
 108:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #endif
 109:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #ifndef constexpr
 110:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define constexpr const
 111:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #endif
 112:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
 113:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 114:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // The wire format uses a little endian encoding (since that's efficient for
 115:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // the common platforms).
 116:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if defined(__s390x__)
 117:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_LITTLEENDIAN 0
 118:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif // __s390x__
 119:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if !defined(FLATBUFFERS_LITTLEENDIAN)
 120:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #if defined(__GNUC__) || defined(__clang__)
 121:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #if (defined(__BIG_ENDIAN__) || \
 122:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****          (defined(__BYTE_ORDER__) && __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__))
 123:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       #define FLATBUFFERS_LITTLEENDIAN 0
 124:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #else
 125:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       #define FLATBUFFERS_LITTLEENDIAN 1
 126:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #endif // __BIG_ENDIAN__
 127:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #elif defined(_MSC_VER)
 128:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #if defined(_M_PPC)
 129:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       #define FLATBUFFERS_LITTLEENDIAN 0
 130:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #else
 131:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       #define FLATBUFFERS_LITTLEENDIAN 1
 132:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #endif
 133:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #else
 134:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #error Unable to determine endianness, define FLATBUFFERS_LITTLEENDIAN.
 135:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #endif
 136:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif // !defined(FLATBUFFERS_LITTLEENDIAN)
 137:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 138:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #define FLATBUFFERS_VERSION_MAJOR 1
 139:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #define FLATBUFFERS_VERSION_MINOR 11
 140:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #define FLATBUFFERS_VERSION_REVISION 0
 141:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #define FLATBUFFERS_STRING_EXPAND(X) #X
 142:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #define FLATBUFFERS_STRING(X) FLATBUFFERS_STRING_EXPAND(X)
 143:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 144:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if (!defined(_MSC_VER) || _MSC_VER > 1600) && \
 145:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     (!defined(__GNUC__) || (__GNUC__ * 100 + __GNUC_MINOR__ >= 407)) || \
 146:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     defined(__clang__)
 147:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_FINAL_CLASS final
 148:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_OVERRIDE override
 149:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_VTABLE_UNDERLYING_TYPE : flatbuffers::voffset_t
 150:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #else
 151:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_FINAL_CLASS
 152:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_OVERRIDE
 153:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_VTABLE_UNDERLYING_TYPE
 154:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
 155:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 156:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if (!defined(_MSC_VER) || _MSC_VER >= 1900) && \
 157:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     (!defined(__GNUC__) || (__GNUC__ * 100 + __GNUC_MINOR__ >= 406)) || \
 158:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     (defined(__cpp_constexpr) && __cpp_constexpr >= 200704)
 159:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_CONSTEXPR constexpr
 160:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #else
 161:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_CONSTEXPR const
 162:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
 163:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 164:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if (defined(__cplusplus) && __cplusplus >= 201402L) || \
 165:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     (defined(__cpp_constexpr) && __cpp_constexpr >= 201304)
 166:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_CONSTEXPR_CPP14 FLATBUFFERS_CONSTEXPR
 167:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #else
 168:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_CONSTEXPR_CPP14
 169:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
 170:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 171:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if (defined(__GXX_EXPERIMENTAL_CXX0X__) && (__GNUC__ * 100 + __GNUC_MINOR__ >= 406)) || \
 172:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     (defined(_MSC_FULL_VER) && (_MSC_FULL_VER >= 190023026)) || \
 173:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     defined(__clang__)
 174:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_NOEXCEPT noexcept
 175:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #else
 176:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_NOEXCEPT
 177:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
 178:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 179:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // NOTE: the FLATBUFFERS_DELETE_FUNC macro may change the access mode to
 180:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // private, so be sure to put it at the end or reset access mode explicitly.
 181:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if (!defined(_MSC_VER) || _MSC_FULL_VER >= 180020827) && \
 182:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     (!defined(__GNUC__) || (__GNUC__ * 100 + __GNUC_MINOR__ >= 404)) || \
 183:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     defined(__clang__)
 184:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_DELETE_FUNC(func) func = delete;
 185:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #else
 186:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_DELETE_FUNC(func) private: func;
 187:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
 188:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 189:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #ifndef FLATBUFFERS_HAS_STRING_VIEW
 190:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // Only provide flatbuffers::string_view if __has_include can be used
 191:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // to detect a header that provides an implementation
 192:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #if defined(__has_include)
 193:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     // Check for std::string_view (in c++17)
 194:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #if __has_include(<string_view>) && (__cplusplus >= 201606 || _HAS_CXX17)
 195:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       #include <string_view>
 196:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       namespace flatbuffers {
 197:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****         typedef std::string_view string_view;
 198:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       }
 199:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       #define FLATBUFFERS_HAS_STRING_VIEW 1
 200:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     // Check for std::experimental::string_view (in c++14, compiler-dependent)
 201:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #elif __has_include(<experimental/string_view>) && (__cplusplus >= 201411)
 202:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       #include <experimental/string_view>
 203:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       namespace flatbuffers {
 204:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****         typedef std::experimental::string_view string_view;
 205:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       }
 206:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       #define FLATBUFFERS_HAS_STRING_VIEW 1
 207:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #endif
 208:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #endif // __has_include
 209:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif // !FLATBUFFERS_HAS_STRING_VIEW
 210:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 211:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #ifndef FLATBUFFERS_HAS_NEW_STRTOD
 212:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // Modern (C++11) strtod and strtof functions are available for use.
 213:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // 1) nan/inf strings as argument of strtod;
 214:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // 2) hex-float  as argument of  strtod/strtof.
 215:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #if (defined(_MSC_VER) && _MSC_VER >= 1900) || \
 216:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       (defined(__GNUC__) && (__GNUC__ * 100 + __GNUC_MINOR__ >= 409)) || \
 217:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       (defined(__clang__))
 218:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define FLATBUFFERS_HAS_NEW_STRTOD 1
 219:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #endif
 220:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif // !FLATBUFFERS_HAS_NEW_STRTOD
 221:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 222:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #ifndef FLATBUFFERS_LOCALE_INDEPENDENT
 223:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // Enable locale independent functions {strtof_l, strtod_l,strtoll_l, strtoull_l}.
 224:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // They are part of the POSIX-2008 but not part of the C/C++ standard.
 225:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // GCC/Clang have definition (_XOPEN_SOURCE>=700) if POSIX-2008.
 226:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #if ((defined(_MSC_VER) && _MSC_VER >= 1800)            || \
 227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****        (defined(_XOPEN_SOURCE) && (_XOPEN_SOURCE>=700)))
 228:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define FLATBUFFERS_LOCALE_INDEPENDENT 1
 229:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #else
 230:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define FLATBUFFERS_LOCALE_INDEPENDENT 0
 231:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #endif
 232:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif  // !FLATBUFFERS_LOCALE_INDEPENDENT
 233:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 234:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Suppress Undefined Behavior Sanitizer (recoverable only). Usage:
 235:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // - __supress_ubsan__("undefined")
 236:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // - __supress_ubsan__("signed-integer-overflow")
 237:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if defined(__clang__)
 238:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define __supress_ubsan__(type) __attribute__((no_sanitize(type)))
 239:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #elif defined(__GNUC__) && (__GNUC__ * 100 + __GNUC_MINOR__ >= 409)
 240:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define __supress_ubsan__(type) __attribute__((no_sanitize_undefined))
 241:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #else
 242:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define __supress_ubsan__(type)
 243:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
 244:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 245:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // This is constexpr function used for checking compile-time constants.
 246:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Avoid `#pragma warning(disable: 4127) // C4127: expression is constant`.
 247:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** template<typename T> FLATBUFFERS_CONSTEXPR inline bool IsConstTrue(T t) {
 248:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   return !!t;
 249:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** }
 250:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 251:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Enable C++ attribute [[]] if std:c++17 or higher.
 252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if ((__cplusplus >= 201703L) \
 253:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     || (defined(_MSVC_LANG) &&  (_MSVC_LANG >= 201703L)))
 254:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   // All attributes unknown to an implementation are ignored without causing an error.
 255:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_ATTRIBUTE(attr) [[attr]]
 256:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 257:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_FALLTHROUGH() [[fallthrough]]
 258:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #else
 259:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #define FLATBUFFERS_ATTRIBUTE(attr)
 260:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 261:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #if FLATBUFFERS_CLANG >= 30800
 262:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define FLATBUFFERS_FALLTHROUGH() [[clang::fallthrough]]
 263:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #elif FLATBUFFERS_GCC >= 70300
 264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define FLATBUFFERS_FALLTHROUGH() [[gnu::fallthrough]]
 265:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #else
 266:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define FLATBUFFERS_FALLTHROUGH()
 267:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #endif
 268:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
 269:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 270:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** /// @endcond
 271:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 272:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** /// @file
 273:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** namespace flatbuffers {
 274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 275:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** /// @cond FLATBUFFERS_INTERNAL
 276:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Our default offset / size type, 32bit on purpose on 64bit systems.
 277:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Also, using a consistent offset type maintains compatibility of serialized
 278:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // offset values between 32bit and 64bit systems.
 279:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** typedef uint32_t uoffset_t;
 280:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 281:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Signed offsets for references that can go in both directions.
 282:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** typedef int32_t soffset_t;
 283:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 284:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // Offset/index used in v-tables, can be changed to uint8_t in
 285:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // format forks to save a bit of space if desired.
 286:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** typedef uint16_t voffset_t;
 287:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 288:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** typedef uintmax_t largest_scalar_t;
 289:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 290:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // In 32bits, this evaluates to 2GB - 1
 291:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #define FLATBUFFERS_MAX_BUFFER_SIZE ((1ULL << (sizeof(soffset_t) * 8 - 1)) - 1)
 292:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 293:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // We support aligning the contents of buffers up to this size.
 294:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #define FLATBUFFERS_MAX_ALIGNMENT 16
 295:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 296:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if defined(_MSC_VER)
 297:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #pragma warning(push)
 298:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #pragma warning(disable: 4127) // C4127: conditional expression is constant
 299:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
 300:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 301:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** template<typename T> T EndianSwap(T t) {
 302:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #if defined(_MSC_VER)
 303:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define FLATBUFFERS_BYTESWAP16 _byteswap_ushort
 304:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define FLATBUFFERS_BYTESWAP32 _byteswap_ulong
 305:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define FLATBUFFERS_BYTESWAP64 _byteswap_uint64
 306:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #else
 307:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #if defined(__GNUC__) && __GNUC__ * 100 + __GNUC_MINOR__ < 408 && !defined(__clang__)
 308:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       // __builtin_bswap16 was missing prior to GCC 4.8.
 309:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       #define FLATBUFFERS_BYTESWAP16(x) \
 310:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****         static_cast<uint16_t>(__builtin_bswap32(static_cast<uint32_t>(x) << 16))
 311:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #else
 312:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****       #define FLATBUFFERS_BYTESWAP16 __builtin_bswap16
 313:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #endif
 314:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define FLATBUFFERS_BYTESWAP32 __builtin_bswap32
 315:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     #define FLATBUFFERS_BYTESWAP64 __builtin_bswap64
 316:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #endif
 317:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   if (sizeof(T) == 1) {   // Compile-time if-then's.
 318:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     return t;
 319:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   } else if (sizeof(T) == 2) {
 320:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     union { T t; uint16_t i; } u;
 321:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     u.t = t;
 322:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     u.i = FLATBUFFERS_BYTESWAP16(u.i);
 323:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     return u.t;
 324:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   } else if (sizeof(T) == 4) {
 325:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     union { T t; uint32_t i; } u;
 326:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     u.t = t;
 327:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     u.i = FLATBUFFERS_BYTESWAP32(u.i);
 328:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     return u.t;
 329:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   } else if (sizeof(T) == 8) {
 330:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     union { T t; uint64_t i; } u;
 331:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     u.t = t;
 332:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     u.i = FLATBUFFERS_BYTESWAP64(u.i);
 333:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     return u.t;
 334:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   } else {
 335:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     FLATBUFFERS_ASSERT(0);
 336:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   }
 337:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** }
 338:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 339:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #if defined(_MSC_VER)
 340:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #pragma warning(pop)
 341:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** #endif
 342:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 343:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 344:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** template<typename T> T EndianScalar(T t) {
 345:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #if FLATBUFFERS_LITTLEENDIAN
 346:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     return t;
 347:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #else
 348:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****     return EndianSwap(t);
 349:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   #endif
 350:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** }
 351:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** 
 352:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** template<typename T>
 353:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** // UBSAN: C++ aliasing type rules, see std::bit_cast<> for details.
 354:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** __supress_ubsan__("alignment")
 355:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h **** T ReadScalar(const void *p) {
 356:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\base.h ****   return EndianScalar(*reinterpret_cast<const T *>(p));
 718              		.loc 7 356 0
 719 004c B610D3E1 		ldrh	r1, [r3, #6]
 720              	.LVL59:
 721              	.LBE1051:
 722              	.LBE1050:
 723              	.LBE1052:
 724              	.LBE1053:
 725              		.loc 6 2275 0
 726 0050 000051E3 		cmp	r1, #0
2274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return field_offset ? reinterpret_cast<P>(p + ReadScalar<uoffset_t>(p))
 727              		.loc 6 2274 0
 728 0054 013082E0 		add	r3, r2, r1
 729              	.LVL60:
 730              		.loc 6 2275 0
 731 0058 01109217 		ldrne	r1, [r2, r1]
 732              	.LVL61:
 733 005c 01108310 		addne	r1, r3, r1
 734              	.LVL62:
 735              	.L52:
 736              	.LBE1045:
 737              	.LBE1044:
 738              	.LBE1043:
 739              	.LBE1042:
 740              	.LBE1041:
 106:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   PrintIntVector(flatbuffersVector2StdVector(interpreter->inputs()));
 741              		.loc 5 106 0
 742 0060 24008DE2 		add	r0, sp, #36
 743 0064 FEFFFFEB 		bl	_ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE
 744              	.LVL63:
 745              	.LEHE3:
 746 0068 24409DE5 		ldr	r4, [sp, #36]
 747              	.LVL64:
 748 006c 28609DE5 		ldr	r6, [sp, #40]
 749              	.LVL65:
 750              	.LBB1054:
 751              	.LBB1055:
 752              	.LBB1056:
  39:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", it);
 753              		.loc 5 39 0
 754 0070 060054E1 		cmp	r4, r6
  40:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 755              		.loc 5 40 0
 756 0074 00500013 		movwne	r5, #:lower16:.LC4
 757 0078 00504013 		movtne	r5, #:upper16:.LC4
  39:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", it);
 758              		.loc 5 39 0
 759 007c 0400000A 		beq	.L56
 760              	.LVL66:
 761              	.L55:
  40:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 762              		.loc 5 40 0
 763 0080 041094E4 		ldr	r1, [r4], #4
 764              	.LVL67:
 765 0084 0500A0E1 		mov	r0, r5
 766              	.LEHB4:
 767 0088 FEFFFFEB 		bl	printf
 768              	.LVL68:
  39:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", it);
 769              		.loc 5 39 0
 770 008c 040056E1 		cmp	r6, r4
 771 0090 FAFFFF1A 		bne	.L55
 772              	.LVL69:
 773              	.L56:
 774              	.LBE1056:
  42:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }
 775              		.loc 5 42 0
 776 0094 0A00A0E3 		mov	r0, #10
 777 0098 FEFFFFEB 		bl	putchar
 778              	.LVL70:
 779              	.LEHE4:
 780              	.LBE1055:
 781              	.LBE1054:
 782              	.LBB1057:
 783              	.LBB1058:
 426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator()); }
 784              		.loc 2 426 0
 785 009c 24009DE5 		ldr	r0, [sp, #36]
 786              	.LVL71:
 787              	.LBB1059:
 788              	.LBB1060:
 789              	.LBB1061:
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 790              		.loc 2 177 0
 791 00a0 000050E3 		cmp	r0, #0
 792 00a4 0000000A 		beq	.L57
 793              	.LVL72:
 794              	.LBB1062:
 795              	.LBB1063:
 796              	.LBB1064:
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 797              		.loc 4 110 0
 798 00a8 FEFFFFEB 		bl	_ZdlPv
 799              	.LVL73:
 800              	.L57:
 801              	.LBE1064:
 802              	.LBE1063:
 803              	.LBE1062:
 804              	.LBE1061:
 805              	.LBE1060:
 806              	.LBE1059:
 807              	.LBE1058:
 808              	.LBE1057:
 107:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   printf("Outputs:");
 809              		.loc 5 107 0
 810 00ac 000000E3 		movw	r0, #:lower16:.LC5
 811 00b0 000040E3 		movt	r0, #:upper16:.LC5
 812              	.LEHB5:
 813 00b4 FEFFFFEB 		bl	printf
 814              	.LVL74:
 815 00b8 8C2097E5 		ldr	r2, [r7, #140]
 816              	.LVL75:
 817              	.LBB1065:
 818              	.LBB1066:
 819              	.LBB1067:
 820              	.LBB1068:
 821              	.LBB1069:
 822              	.LBB1070:
 823              	.LBB1071:
 824              	.LBB1072:
 825              	.LBB1073:
2252:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 826              		.loc 6 2252 0
 827 00bc 003092E5 		ldr	r3, [r2]
 828 00c0 033042E0 		sub	r3, r2, r3
 829              	.LVL76:
 830              	.LBE1073:
 831              	.LBE1072:
2264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 832              		.loc 6 2264 0
 833 00c4 B010D3E1 		ldrh	r1, [r3]
 834 00c8 080051E3 		cmp	r1, #8
 835              	.LBE1071:
 836              	.LBE1070:
 837              		.loc 6 2275 0
 838 00cc 0010A0D3 		movle	r1, #0
 839              	.LBB1077:
 840              	.LBB1076:
2264:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****   }
 841              		.loc 6 2264 0
 842 00d0 040000DA 		ble	.L58
 843              	.LVL77:
 844              	.LBB1074:
 845              	.LBB1075:
 846              		.loc 7 356 0
 847 00d4 B810D3E1 		ldrh	r1, [r3, #8]
 848              	.LVL78:
 849              	.LBE1075:
 850              	.LBE1074:
 851              	.LBE1076:
 852              	.LBE1077:
 853              		.loc 6 2275 0
 854 00d8 000051E3 		cmp	r1, #0
2274:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h ****     return field_offset ? reinterpret_cast<P>(p + ReadScalar<uoffset_t>(p))
 855              		.loc 6 2274 0
 856 00dc 013082E0 		add	r3, r2, r1
 857              	.LVL79:
 858              		.loc 6 2275 0
 859 00e0 01109217 		ldrne	r1, [r2, r1]
 860              	.LVL80:
 861 00e4 01108310 		addne	r1, r3, r1
 862              	.LVL81:
 863              	.L58:
 864              	.LBE1069:
 865              	.LBE1068:
 866              	.LBE1067:
 867              	.LBE1066:
 868              	.LBE1065:
 108:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   PrintIntVector(flatbuffersVector2StdVector(interpreter->outputs()));
 869              		.loc 5 108 0
 870 00e8 24008DE2 		add	r0, sp, #36
 871              	.LVL82:
 872 00ec FEFFFFEB 		bl	_ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE
 873              	.LVL83:
 874              	.LEHE5:
 875 00f0 24409DE5 		ldr	r4, [sp, #36]
 876              	.LVL84:
 877 00f4 28609DE5 		ldr	r6, [sp, #40]
 878              	.LVL85:
 879              	.LBB1078:
 880              	.LBB1079:
 881              	.LBB1080:
  39:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", it);
 882              		.loc 5 39 0
 883 00f8 060054E1 		cmp	r4, r6
  40:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 884              		.loc 5 40 0
 885 00fc 00500013 		movwne	r5, #:lower16:.LC4
 886 0100 00504013 		movtne	r5, #:upper16:.LC4
  39:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", it);
 887              		.loc 5 39 0
 888 0104 0400000A 		beq	.L62
 889              	.LVL86:
 890              	.L61:
  40:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 891              		.loc 5 40 0
 892 0108 041094E4 		ldr	r1, [r4], #4
 893              	.LVL87:
 894 010c 0500A0E1 		mov	r0, r5
 895              	.LEHB6:
 896 0110 FEFFFFEB 		bl	printf
 897              	.LVL88:
  39:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", it);
 898              		.loc 5 39 0
 899 0114 040056E1 		cmp	r6, r4
 900 0118 FAFFFF1A 		bne	.L61
 901              	.LVL89:
 902              	.L62:
 903              	.LBE1080:
  42:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }
 904              		.loc 5 42 0
 905 011c 0A00A0E3 		mov	r0, #10
 906 0120 FEFFFFEB 		bl	putchar
 907              	.LVL90:
 908              	.LEHE6:
 909              	.LBE1079:
 910              	.LBE1078:
 911              	.LBB1081:
 912              	.LBB1082:
 426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator()); }
 913              		.loc 2 426 0
 914 0124 24009DE5 		ldr	r0, [sp, #36]
 915              	.LVL91:
 916              	.LBB1083:
 917              	.LBB1084:
 918              	.LBB1085:
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 919              		.loc 2 177 0
 920 0128 000050E3 		cmp	r0, #0
 921 012c 0000000A 		beq	.L63
 922              	.LVL92:
 923              	.LBB1086:
 924              	.LBB1087:
 925              	.LBB1088:
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 926              		.loc 4 110 0
 927 0130 FEFFFFEB 		bl	_ZdlPv
 928              	.LVL93:
 929              	.L63:
 930              	.LBE1088:
 931              	.LBE1087:
 932              	.LBE1086:
 933              	.LBE1085:
 934              	.LBE1084:
 935              	.LBE1083:
 936              	.LBE1082:
 937              	.LBE1081:
 109:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   printf("\n");
 938              		.loc 5 109 0
 939 0134 0A00A0E3 		mov	r0, #10
 940              	.LEHB7:
 941 0138 FEFFFFEB 		bl	putchar
 942              	.LVL94:
 943              	.LBB1089:
 110:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   for (size_t tensor_index = 0; tensor_index < interpreter->tensors_size();
 944              		.loc 5 111 0
 945 013c 103097E5 		ldr	r3, [r7, #16]
 946 0140 000053E3 		cmp	r3, #0
 947 0144 3700000A 		beq	.L75
 948              	.LBB1090:
 112:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****        tensor_index++) {
 113:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     TfLiteTensor* tensor = interpreter->tensor(static_cast<int>(tensor_index));
 114:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf("Tensor %3zu %-20s %10s %15s %10zu bytes (%4.1f MB) ", tensor_index,
 949              		.loc 5 114 0 discriminator 2
 950 0148 009000E3 		movw	r9, #:lower16:.LC1
 951 014c 00B000E3 		movw	fp, #:lower16:.LANCHOR0
 952 0150 003000E3 		movw	r3, #:lower16:.LANCHOR1
 953 0154 009040E3 		movt	r9, #:upper16:.LC1
 954 0158 00B040E3 		movt	fp, #:upper16:.LANCHOR0
 955              	.LBE1090:
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****        tensor_index++) {
 956              		.loc 5 111 0 discriminator 2
 957 015c 0080A0E3 		mov	r8, #0
 958 0160 003040E3 		movt	r3, #:upper16:.LANCHOR1
 959 0164 14308DE5 		str	r3, [sp, #20]
 960              	.LVL95:
 961              	.L74:
 962              	.LBB1096:
 113:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf("Tensor %3zu %-20s %10s %15s %10zu bytes (%4.1f MB) ", tensor_index,
 963              		.loc 5 113 0 discriminator 2
 964 0168 0810A0E1 		mov	r1, r8
 965 016c 0700A0E1 		mov	r0, r7
 966 0170 FEFFFFEB 		bl	_ZN6tflite16MicroInterpreter6tensorEj
 967              	.LVL96:
 968 0174 0040A0E1 		mov	r4, r0
 969              	.LVL97:
 970              		.loc 5 114 0 discriminator 2
 971 0178 0030D0E5 		ldrb	r3, [r0]	@ zero_extendqisi2
 972              	.LVL98:
 973 017c 18C094E5 		ldr	ip, [r4, #24]
 974 0180 1410D0E5 		ldrb	r1, [r0, #20]	@ zero_extendqisi2
 975 0184 202090E5 		ldr	r2, [r0, #32]
 976 0188 0A0053E3 		cmp	r3, #10
 115:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****            tensor->name, TensorTypeName(tensor->type),
 116:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****            AllocTypeName(tensor->allocation_type), tensor->bytes,
 117:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****            static_cast<double>(tensor->bytes / (1 << 20)));
 977              		.loc 5 117 0 discriminator 2
 978 018c 04C08DE5 		str	ip, [sp, #4]
 114:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****            tensor->name, TensorTypeName(tensor->type),
 979              		.loc 5 114 0 discriminator 2
 980 0190 0930A081 		movhi	r3, r9
 981              	.LVL99:
 982              		.loc 5 117 0 discriminator 2
 983 0194 2CCAA0E1 		lsr	ip, ip, #20
 984 0198 03319B97 		ldrls	r3, [fp, r3, lsl #2]
 985 019c 040051E3 		cmp	r1, #4
 986 01a0 14009D95 		ldrls	r0, [sp, #20]
 987              	.LVL100:
 114:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****            tensor->name, TensorTypeName(tensor->type),
 988              		.loc 5 114 0 discriminator 2
 989 01a4 0910A081 		movhi	r1, r9
 990              	.LVL101:
 991 01a8 90CA07EE 		vmov	s15, ip	@ int
 992 01ac E70BF8EE 		vcvt.f64.s32	d16, s15
 993 01b0 01119097 		ldrls	r1, [r0, r1, lsl #2]
 994              		.loc 5 117 0 discriminator 2
 995 01b4 000000E3 		movw	r0, #:lower16:.LC6
 996 01b8 000040E3 		movt	r0, #:upper16:.LC6
 997 01bc 00108DE5 		str	r1, [sp]
 998 01c0 0810A0E1 		mov	r1, r8
 999 01c4 020BCDED 		vstr.64	d16, [sp, #8]
 1000 01c8 FEFFFFEB 		bl	printf
 1001              	.LVL102:
 118:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     PrintTfLiteIntVector(tensor->dims);
 1002              		.loc 5 118 0 discriminator 2
 1003 01cc 08A094E5 		ldr	r10, [r4, #8]
 1004              	.LVL103:
 1005              	.LBB1091:
 1006              	.LBB1092:
  46:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" (null)\n");
 1007              		.loc 5 46 0 discriminator 2
 1008 01d0 00005AE3 		cmp	r10, #0
 1009 01d4 6800000A 		beq	.L69
 1010              	.LVL104:
 1011              	.LBB1093:
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", v->data[k]);
 1012              		.loc 5 50 0
 1013 01d8 00309AE5 		ldr	r3, [r10]
 1014 01dc 000053E3 		cmp	r3, #0
  51:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 1015              		.loc 5 51 0
 1016 01e0 006000C3 		movwgt	r6, #:lower16:.LC4
 1017 01e4 04508AC2 		addgt	r5, r10, #4
 1018 01e8 006040C3 		movtgt	r6, #:upper16:.LC4
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", v->data[k]);
 1019              		.loc 5 50 0
 1020 01ec 0040A0C3 		movgt	r4, #0
 1021              	.LVL105:
 1022 01f0 060000DA 		ble	.L72
 1023              	.LVL106:
 1024              	.L73:
  51:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 1025              		.loc 5 51 0
 1026 01f4 041095E4 		ldr	r1, [r5], #4
 1027 01f8 0600A0E1 		mov	r0, r6
 1028 01fc FEFFFFEB 		bl	printf
 1029              	.LVL107:
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", v->data[k]);
 1030              		.loc 5 50 0
 1031 0200 00309AE5 		ldr	r3, [r10]
 1032 0204 014084E2 		add	r4, r4, #1
 1033              	.LVL108:
 1034 0208 040053E1 		cmp	r3, r4
 1035 020c F8FFFFCA 		bgt	.L73
 1036              	.LVL109:
 1037              	.L72:
 1038              	.LBE1093:
  53:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }
 1039              		.loc 5 53 0
 1040 0210 0A00A0E3 		mov	r0, #10
 1041 0214 FEFFFFEB 		bl	putchar
 1042              	.LVL110:
 1043              	.L71:
 1044              	.LBE1092:
 1045              	.LBE1091:
 1046              	.LBE1096:
 111:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****        tensor_index++) {
 1047              		.loc 5 111 0
 1048 0218 103097E5 		ldr	r3, [r7, #16]
 1049 021c 018088E2 		add	r8, r8, #1
 1050              	.LVL111:
 1051 0220 030058E1 		cmp	r8, r3
 1052 0224 CFFFFF3A 		bcc	.L74
 1053              	.LVL112:
 1054              	.L75:
 1055              	.LBE1089:
 119:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 120:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   printf("\n");
 1056              		.loc 5 120 0
 1057 0228 0A00A0E3 		mov	r0, #10
 1058 022c FEFFFFEB 		bl	putchar
 1059              	.LVL113:
 1060              	.LBB1098:
 1061              	.LBB1099:
 1062              	.LBB1100:
 1063              	.LBB1101:
 227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 1064              		.loc 6 227 0
 1065 0230 883097E5 		ldr	r3, [r7, #136]
 1066              	.LBE1101:
 1067              	.LBE1100:
 1068              	.LBE1099:
 121:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** 
 122:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   for (size_t node_index = 0; node_index < interpreter->operators_size();
 1069              		.loc 5 122 0
 1070 0234 003093E5 		ldr	r3, [r3]
 1071 0238 000053E3 		cmp	r3, #0
 1072 023c 4500000A 		beq	.L51
 1073 0240 0080A0E3 		mov	r8, #0
 1074              	.LBB1104:
 123:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****        node_index++) {
 124:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     const NodeAndRegistration node_and_reg =
 125:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****         interpreter->node_and_registration(static_cast<int>(node_index));
 126:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     const TfLiteNode& node = node_and_reg.node;
 127:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     const TfLiteRegistration* reg = node_and_reg.registration;
 128:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     if (reg->custom_name != nullptr) {
 129:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       printf("Node %3zu Operator Custom Name %s\n", node_index,
 130:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****              reg->custom_name);
 131:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     } else {
 132:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       printf("Node %3zu Operator Builtin Code %3" PRId32 " %s\n", node_index,
 1075              		.loc 5 132 0
 1076 0244 003000E3 		movw	r3, #:lower16:_ZZN6tflite24EnumNamesBuiltinOperatorEvE5names
 133:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****              reg->builtin_code, EnumNamesBuiltinOperator()[reg->builtin_code]);
 1077              		.loc 5 133 0
 1078 0248 002000E3 		movw	r2, #:lower16:.LC9
 130:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     } else {
 1079              		.loc 5 130 0
 1080 024c 001000E3 		movw	r1, #:lower16:.LC8
 1081              	.LBE1104:
 122:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****        node_index++) {
 1082              		.loc 5 122 0
 1083 0250 0890A0E1 		mov	r9, r8
 1084              	.LBB1117:
 132:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****              reg->builtin_code, EnumNamesBuiltinOperator()[reg->builtin_code]);
 1085              		.loc 5 132 0
 1086 0254 003040E3 		movt	r3, #:upper16:_ZZN6tflite24EnumNamesBuiltinOperatorEvE5names
 1087              		.loc 5 133 0
 1088 0258 002040E3 		movt	r2, #:upper16:.LC9
 130:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     } else {
 1089              		.loc 5 130 0
 1090 025c 001040E3 		movt	r1, #:upper16:.LC8
 132:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****              reg->builtin_code, EnumNamesBuiltinOperator()[reg->builtin_code]);
 1091              		.loc 5 132 0
 1092 0260 18308DE5 		str	r3, [sp, #24]
 1093              		.loc 5 133 0
 1094 0264 1C208DE5 		str	r2, [sp, #28]
 130:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     } else {
 1095              		.loc 5 130 0
 1096 0268 14108DE5 		str	r1, [sp, #20]
 1097              	.LVL114:
 1098              	.L88:
 1099              	.LBB1105:
 1100              	.LBB1106:
 1101              		.file 8 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/
   1:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** /* Copyright 2018 The TensorFlow Authors. All Rights Reserved.
   2:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
   3:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** Licensed under the Apache License, Version 2.0 (the "License");
   4:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** you may not use this file except in compliance with the License.
   5:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** You may obtain a copy of the License at
   6:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
   7:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     http://www.apache.org/licenses/LICENSE-2.0
   8:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
   9:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** Unless required by applicable law or agreed to in writing, software
  10:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** distributed under the License is distributed on an "AS IS" BASIS,
  11:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** See the License for the specific language governing permissions and
  13:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** limitations under the License.
  14:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** ==============================================================================*/
  15:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** #ifndef TENSORFLOW_LITE_MICRO_MICRO_INTERPRETER_H_
  16:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** #define TENSORFLOW_LITE_MICRO_MICRO_INTERPRETER_H_
  17:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  18:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** #include "tensorflow/lite/c/common.h"
  19:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** #include "tensorflow/lite/core/api/error_reporter.h"
  20:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** #include "tensorflow/lite/core/api/op_resolver.h"
  21:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** #include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
  22:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** #include "tensorflow/lite/micro/micro_allocator.h"
  23:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** #include "tensorflow/lite/schema/schema_generated.h"
  24:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** #include "tensorflow/lite/type_to_tflitetype.h"
  25:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  26:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** namespace tflite {
  27:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  28:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** class MicroInterpreter {
  29:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****  public:
  30:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // The lifetime of the model, op resolver, tensor arena, and error reporter
  31:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // must be at least as long as that of the interpreter object, since the
  32:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // interpreter may need to access them at any time. This means that you should
  33:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // usually create them with the same scope as each other, for example having
  34:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // them all allocated on the stack as local variables through a top-level
  35:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // function.
  36:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // The interpreter doesn't do any deallocation of any of the pointed-to
  37:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // objects, ownership remains with the caller.
  38:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   MicroInterpreter(const Model* model, const OpResolver& op_resolver,
  39:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****                    uint8_t* tensor_arena, size_t tensor_arena_size,
  40:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****                    ErrorReporter* error_reporter);
  41:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  42:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // Runs through the model and allocates all necessary input, output and
  43:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // intermediate tensors.
  44:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   TfLiteStatus AllocateTensors();
  45:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  46:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   TfLiteStatus Invoke();
  47:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  48:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   size_t tensors_size() const { return context_.tensors_size; }
  49:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   TfLiteTensor* tensor(size_t tensor_index);
  50:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   template <class T>
  51:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   T* typed_tensor(int tensor_index) {
  52:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     if (TfLiteTensor* tensor_ptr = tensor(tensor_index)) {
  53:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****       if (tensor_ptr->type == typeToTfLiteType<T>()) {
  54:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****         return GetTensorData<T>(tensor_ptr);
  55:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****       }
  56:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     }
  57:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     return nullptr;
  58:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   }
  59:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  60:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   TfLiteTensor* input(size_t index);
  61:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   size_t inputs_size() const { return subgraph_->inputs()->Length(); }
  62:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   const flatbuffers::Vector<int32_t>& inputs() const {
  63:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     return *subgraph_->inputs();
  64:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   }
  65:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   TfLiteTensor* input_tensor(size_t index) { return input(index); }
  66:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   template <class T>
  67:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   T* typed_input_tensor(int tensor_index) {
  68:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     if (TfLiteTensor* tensor_ptr = input_tensor(tensor_index)) {
  69:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****       if (tensor_ptr->type == typeToTfLiteType<T>()) {
  70:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****         return GetTensorData<T>(tensor_ptr);
  71:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****       }
  72:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     }
  73:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     return nullptr;
  74:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   }
  75:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  76:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   TfLiteTensor* output(size_t index);
  77:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   size_t outputs_size() const { return subgraph_->outputs()->Length(); }
  78:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   const flatbuffers::Vector<int32_t>& outputs() const {
  79:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     return *subgraph_->outputs();
  80:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   }
  81:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   TfLiteTensor* output_tensor(size_t index) { return output(index); }
  82:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   template <class T>
  83:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   T* typed_output_tensor(int tensor_index) {
  84:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     if (TfLiteTensor* tensor_ptr = output_tensor(tensor_index)) {
  85:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****       if (tensor_ptr->type == typeToTfLiteType<T>()) {
  86:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****         return GetTensorData<T>(tensor_ptr);
  87:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****       }
  88:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     }
  89:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     return nullptr;
  90:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   }
  91:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  92:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // Reset all variable tensors to the default value.
  93:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   TfLiteStatus ResetVariableTensors();
  94:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  95:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   TfLiteStatus initialization_status() const { return initialization_status_; }
  96:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  97:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   ErrorReporter* error_reporter() { return error_reporter_; }
  98:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
  99:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   size_t operators_size() const { return operators_->size(); }
 100:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h **** 
 101:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   // For debugging only.
 102:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****   const NodeAndRegistration node_and_registration(int node_index) const {
 103:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/tensorflow/lite/micro\micro_interpreter.h ****     return node_and_registrations_[node_index];
 1102              		.loc 8 103 0
 1103 026c 002097E5 		ldr	r2, [r7]
 1104 0270 083082E0 		add	r3, r2, r8
 1105 0274 085092E7 		ldr	r5, [r2, r8]
 1106              	.LVL115:
 1107 0278 241093E5 		ldr	r1, [r3, #36]
 1108 027c 044093E5 		ldr	r4, [r3, #4]
 1109              	.LVL116:
 1110              	.LBE1106:
 1111              	.LBE1105:
 128:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****       printf("Node %3zu Operator Custom Name %s\n", node_index,
 1112              		.loc 5 128 0
 1113 0280 182091E5 		ldr	r2, [r1, #24]
 1114 0284 000052E3 		cmp	r2, #0
 1115 0288 3400000A 		beq	.L76
 130:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     } else {
 1116              		.loc 5 130 0
 1117 028c 0910A0E1 		mov	r1, r9
 1118              	.LVL117:
 1119 0290 14009DE5 		ldr	r0, [sp, #20]
 1120 0294 FEFFFFEB 		bl	printf
 1121              	.LVL118:
 1122              	.L77:
 134:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     }
 135:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf("  Inputs:");
 1123              		.loc 5 135 0
 1124 0298 000000E3 		movw	r0, #:lower16:.LC10
 1125 029c 000040E3 		movt	r0, #:upper16:.LC10
 1126 02a0 FEFFFFEB 		bl	printf
 1127              	.LVL119:
 1128              	.LBB1107:
 1129              	.LBB1108:
  46:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" (null)\n");
 1130              		.loc 5 46 0
 1131 02a4 000055E3 		cmp	r5, #0
 1132 02a8 3B00000A 		beq	.L78
 1133              	.LVL120:
 1134              	.LBB1109:
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", v->data[k]);
 1135              		.loc 5 50 0
 1136 02ac 003095E5 		ldr	r3, [r5]
 1137 02b0 000053E3 		cmp	r3, #0
  51:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 1138              		.loc 5 51 0
 1139 02b4 006000C3 		movwgt	r6, #:lower16:.LC4
 1140 02b8 04A085C2 		addgt	r10, r5, #4
 1141 02bc 006040C3 		movtgt	r6, #:upper16:.LC4
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", v->data[k]);
 1142              		.loc 5 50 0
 1143 02c0 00B0A0C3 		movgt	fp, #0
 1144 02c4 060000DA 		ble	.L81
 1145              	.LVL121:
 1146              	.L82:
  51:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 1147              		.loc 5 51 0
 1148 02c8 04109AE4 		ldr	r1, [r10], #4
 1149 02cc 0600A0E1 		mov	r0, r6
 1150 02d0 FEFFFFEB 		bl	printf
 1151              	.LVL122:
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", v->data[k]);
 1152              		.loc 5 50 0
 1153 02d4 003095E5 		ldr	r3, [r5]
 1154 02d8 01B08BE2 		add	fp, fp, #1
 1155              	.LVL123:
 1156 02dc 0B0053E1 		cmp	r3, fp
 1157 02e0 F8FFFFCA 		bgt	.L82
 1158              	.LVL124:
 1159              	.L81:
 1160              	.LBE1109:
  53:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }
 1161              		.loc 5 53 0
 1162 02e4 0A00A0E3 		mov	r0, #10
 1163 02e8 FEFFFFEB 		bl	putchar
 1164              	.LVL125:
 1165              	.L80:
 1166              	.LBE1108:
 1167              	.LBE1107:
 136:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     PrintTfLiteIntVector(node.inputs);
 137:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf("  Outputs:");
 1168              		.loc 5 137 0
 1169 02ec 000000E3 		movw	r0, #:lower16:.LC11
 1170 02f0 000040E3 		movt	r0, #:upper16:.LC11
 1171 02f4 FEFFFFEB 		bl	printf
 1172              	.LVL126:
 1173              	.LBB1111:
 1174              	.LBB1112:
  46:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" (null)\n");
 1175              		.loc 5 46 0
 1176 02f8 000054E3 		cmp	r4, #0
 1177 02fc 2200000A 		beq	.L83
 1178              	.LVL127:
 1179              	.LBB1113:
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", v->data[k]);
 1180              		.loc 5 50 0
 1181 0300 003094E5 		ldr	r3, [r4]
 1182 0304 000053E3 		cmp	r3, #0
  51:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 1183              		.loc 5 51 0
 1184 0308 005000C3 		movwgt	r5, #:lower16:.LC4
 1185              	.LVL128:
 1186 030c 04B084C2 		addgt	fp, r4, #4
 1187 0310 005040C3 		movtgt	r5, #:upper16:.LC4
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", v->data[k]);
 1188              		.loc 5 50 0
 1189 0314 0060A0C3 		movgt	r6, #0
 1190 0318 060000DA 		ble	.L86
 1191              	.LVL129:
 1192              	.L87:
  51:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 1193              		.loc 5 51 0
 1194 031c 04109BE4 		ldr	r1, [fp], #4
 1195 0320 0500A0E1 		mov	r0, r5
 1196 0324 FEFFFFEB 		bl	printf
 1197              	.LVL130:
  50:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     printf(" %d", v->data[k]);
 1198              		.loc 5 50 0
 1199 0328 003094E5 		ldr	r3, [r4]
 1200 032c 016086E2 		add	r6, r6, #1
 1201              	.LVL131:
 1202 0330 060053E1 		cmp	r3, r6
 1203 0334 F8FFFFCA 		bgt	.L87
 1204              	.LVL132:
 1205              	.L86:
 1206              	.LBE1113:
  53:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }
 1207              		.loc 5 53 0
 1208 0338 0A00A0E3 		mov	r0, #10
 1209 033c FEFFFFEB 		bl	putchar
 1210              	.LVL133:
 1211              	.L85:
 1212              	.LBE1112:
 1213              	.LBE1111:
 1214              	.LBE1117:
 1215              	.LBB1118:
 1216              	.LBB1103:
 1217              	.LBB1102:
 227:C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite/src/third_party/flatbuffers/include/flatbuffers\flatbuffers.h **** 
 1218              		.loc 6 227 0
 1219 0340 883097E5 		ldr	r3, [r7, #136]
 1220              	.LBE1102:
 1221              	.LBE1103:
 1222              	.LBE1118:
 122:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****        node_index++) {
 1223              		.loc 5 122 0
 1224 0344 019089E2 		add	r9, r9, #1
 1225              	.LVL134:
 1226 0348 288088E2 		add	r8, r8, #40
 1227 034c 003093E5 		ldr	r3, [r3]
 1228 0350 030059E1 		cmp	r9, r3
 1229 0354 C4FFFF3A 		bcc	.L88
 1230              	.LVL135:
 1231              	.L51:
 1232              	.LBE1098:
 138:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     PrintTfLiteIntVector(node.outputs);
 139:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****   }
 140:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp **** }
 1233              		.loc 5 140 0
 1234 0358 34D08DE2 		add	sp, sp, #52
 1235              		.cfi_remember_state
 1236              		.cfi_def_cfa_offset 36
 1237              		@ sp needed
 1238 035c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1239              	.LVL136:
 1240              	.L76:
 1241              		.cfi_restore_state
 1242              	.LBB1121:
 1243              	.LBB1119:
 133:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     }
 1244              		.loc 5 133 0
 1245 0360 142091E5 		ldr	r2, [r1, #20]
 1246 0364 0910A0E1 		mov	r1, r9
 1247              	.LVL137:
 1248 0368 18309DE5 		ldr	r3, [sp, #24]
 1249              	.LVL138:
 1250 036c 1C009DE5 		ldr	r0, [sp, #28]
 1251 0370 023193E7 		ldr	r3, [r3, r2, lsl #2]
 1252 0374 FEFFFFEB 		bl	printf
 1253              	.LVL139:
 1254 0378 C6FFFFEA 		b	.L77
 1255              	.LVL140:
 1256              	.L69:
 1257              	.LBE1119:
 1258              	.LBE1121:
 1259              	.LBB1122:
 1260              	.LBB1097:
 1261              	.LBB1095:
 1262              	.LBB1094:
  47:../src/tensorflow_lite/src/tensorflow/lite/micro/micro_optional_debug_tools.cpp ****     return;
 1263              		.loc 5 47 0
 1264 037c 000000E3 		movw	r0, #:lower16:.LC7
 1265 0380 000040E3 		movt	r0, #:upper16:.LC7
 1266 0384 FEFFFFEB 		bl	puts
 1267              	.LVL141:
 1268 0388 A2FFFFEA 		b	.L71
 1269              	.LVL142:
 1270              	.L83:
 1271              	.LBE1094:
 1272              	.LBE1095:
 1273              	.LBE1097:
 1274              	.LBE1122:
 1275              	.LBB1123:
 1276              	.LBB1120:
 1277              	.LBB1115:
 1278              	.LBB1114:
 1279 038c 000000E3 		movw	r0, #:lower16:.LC7
 1280 0390 000040E3 		movt	r0, #:upper16:.LC7
 1281 0394 FEFFFFEB 		bl	puts
 1282              	.LVL143:
 1283 0398 E8FFFFEA 		b	.L85
 1284              	.LVL144:
 1285              	.L78:
 1286              	.LBE1114:
 1287              	.LBE1115:
 1288              	.LBB1116:
 1289              	.LBB1110:
 1290 039c 000000E3 		movw	r0, #:lower16:.LC7
 1291 03a0 000040E3 		movt	r0, #:upper16:.LC7
 1292 03a4 FEFFFFEB 		bl	puts
 1293              	.LVL145:
 1294 03a8 CFFFFFEA 		b	.L80
 1295              	.LVL146:
 1296              	.L100:
 1297              	.L122:
 1298              	.LBE1110:
 1299              	.LBE1116:
 1300              	.LBE1120:
 1301              	.LBE1123:
 1302              	.LBB1124:
 1303              	.LBB1125:
 426:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator()); }
 1304              		.loc 2 426 0
 1305 03ac 24009DE5 		ldr	r0, [sp, #36]
 1306              	.LVL147:
 1307              	.LBB1126:
 1308              	.LBB1127:
 1309              	.LBB1128:
 177:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1310              		.loc 2 177 0
 1311 03b0 000050E3 		cmp	r0, #0
 1312 03b4 0000000A 		beq	.L92
 1313              	.LVL148:
 1314              	.LBB1129:
 1315              	.LBB1130:
 1316              	.LBB1131:
 110:c:\program files (x86)\gnu tools arm embedded\6 2017-q2-update\arm-none-eabi\include\c++\6.3.1\ext\new_allocator.h **** 
 1317              		.loc 4 110 0
 1318 03b8 FEFFFFEB 		bl	_ZdlPv
 1319              	.LVL149:
 1320              	.L92:
 1321 03bc FEFFFFEB 		bl	__cxa_end_cleanup
 1322              	.LVL150:
 1323              	.LEHE7:
 1324              	.L99:
 1325 03c0 F9FFFFEA 		b	.L122
 1326              	.LBE1131:
 1327              	.LBE1130:
 1328              	.LBE1129:
 1329              	.LBE1128:
 1330              	.LBE1127:
 1331              	.LBE1126:
 1332              	.LBE1125:
 1333              	.LBE1124:
 1334              		.cfi_endproc
 1335              	.LFE6563:
 1336              		.personality	__gxx_personality_v0
 1337              		.handlerdata
 1338              	.LLSDA6563:
 1339 0008 FF       		.byte	0xff
 1340 0009 FF       		.byte	0xff
 1341 000a 01       		.byte	0x1
 1342 000b 1B       		.uleb128 .LLSDACSE6563-.LLSDACSB6563
 1343              	.LLSDACSB6563:
 1344 000c 20       		.uleb128 .LEHB3-.LFB6563
 1345 000d 48       		.uleb128 .LEHE3-.LEHB3
 1346 000e 00       		.uleb128 0
 1347 000f 00       		.uleb128 0
 1348 0010 8801     		.uleb128 .LEHB4-.LFB6563
 1349 0012 14       		.uleb128 .LEHE4-.LEHB4
 1350 0013 C007     		.uleb128 .L99-.LFB6563
 1351 0015 00       		.uleb128 0
 1352 0016 B401     		.uleb128 .LEHB5-.LFB6563
 1353 0018 3C       		.uleb128 .LEHE5-.LEHB5
 1354 0019 00       		.uleb128 0
 1355 001a 00       		.uleb128 0
 1356 001b 9002     		.uleb128 .LEHB6-.LFB6563
 1357 001d 14       		.uleb128 .LEHE6-.LEHB6
 1358 001e AC07     		.uleb128 .L100-.LFB6563
 1359 0020 00       		.uleb128 0
 1360 0021 B802     		.uleb128 .LEHB7-.LFB6563
 1361 0023 8805     		.uleb128 .LEHE7-.LEHB7
 1362 0025 00       		.uleb128 0
 1363 0026 00       		.uleb128 0
 1364              	.LLSDACSE6563:
 1365              		.section	.text._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE
 1366              		.fnend
 1368              		.weak	_ZZN6tflite24EnumNamesBuiltinOperatorEvE5names
 1369              		.section	.rodata._ZZN6tflite24EnumNamesBuiltinOperatorEvE5names,"aG",%progbits,_ZZN6tflite24EnumNa
 1370              		.align	2
 1373              	_ZZN6tflite24EnumNamesBuiltinOperatorEvE5names:
 1374 0000 08010000 		.word	.LC28
 1375 0004 0C010000 		.word	.LC29
 1376 0008 1C010000 		.word	.LC30
 1377 000c 2C010000 		.word	.LC31
 1378 0010 34010000 		.word	.LC32
 1379 0014 48010000 		.word	.LC33
 1380 0018 58010000 		.word	.LC34
 1381 001c 64010000 		.word	.LC35
 1382 0020 78010000 		.word	.LC36
 1383 0024 80010000 		.word	.LC37
 1384 0028 90010000 		.word	.LC38
 1385 002c A4010000 		.word	.LC39
 1386 0030 B8010000 		.word	.LC40
 1387 0034 C4010000 		.word	.LC41
 1388 0038 E4010000 		.word	.LC42
 1389 003c F0010000 		.word	.LC43
 1390 0040 00020000 		.word	.LC44
 1391 0044 08020000 		.word	.LC45
 1392 0048 14020000 		.word	.LC46
 1393 004c 18020000 		.word	.LC47
 1394 0050 20020000 		.word	.LC48
 1395 0054 30020000 		.word	.LC49
 1396 0058 38020000 		.word	.LC50
 1397 005c 40020000 		.word	.LC51
 1398 0060 50020000 		.word	.LC52
 1399 0064 54020000 		.word	.LC53
 1400 0068 5C020000 		.word	.LC54
 1401 006c 6C020000 		.word	.LC55
 1402 0070 74020000 		.word	.LC56
 1403 0074 7C020000 		.word	.LC57
 1404 0078 90020000 		.word	.LC58
 1405 007c 9C020000 		.word	.LC59
 1406 0080 A4020000 		.word	.LC60
 1407 0084 AC020000 		.word	.LC61
 1408 0088 C4020000 		.word	.LC62
 1409 008c C8020000 		.word	.LC63
 1410 0090 E4020000 		.word	.LC64
 1411 0094 EC020000 		.word	.LC65
 1412 0098 00030000 		.word	.LC66
 1413 009c 14030000 		.word	.LC67
 1414 00a0 20030000 		.word	.LC68
 1415 00a4 28030000 		.word	.LC69
 1416 00a8 2C030000 		.word	.LC70
 1417 00ac 30030000 		.word	.LC71
 1418 00b0 38030000 		.word	.LC72
 1419 00b4 58030000 		.word	.LC73
 1420 00b8 68030000 		.word	.LC74
 1421 00bc 84030000 		.word	.LC75
 1422 00c0 88030000 		.word	.LC76
 1423 00c4 90030000 		.word	.LC77
 1424 00c8 98030000 		.word	.LC78
 1425 00cc A4030000 		.word	.LC79
 1426 00d0 B0030000 		.word	.LC80
 1427 00d4 CC030000 		.word	.LC81
 1428 00d8 D4030000 		.word	.LC82
 1429 00dc DC030000 		.word	.LC83
 1430 00e0 E4030000 		.word	.LC84
 1431 00e4 EC030000 		.word	.LC85
 1432 00e8 F4030000 		.word	.LC86
 1433 00ec FC030000 		.word	.LC87
 1434 00f0 00040000 		.word	.LC88
 1435 00f4 08040000 		.word	.LC89
 1436 00f8 10040000 		.word	.LC90
 1437 00fc 20040000 		.word	.LC91
 1438 0100 2C040000 		.word	.LC92
 1439 0104 34040000 		.word	.LC93
 1440 0108 3C040000 		.word	.LC94
 1441 010c 40040000 		.word	.LC95
 1442 0110 50040000 		.word	.LC96
 1443 0114 60040000 		.word	.LC97
 1444 0118 68040000 		.word	.LC98
 1445 011c 74040000 		.word	.LC99
 1446 0120 7C040000 		.word	.LC100
 1447 0124 88040000 		.word	.LC101
 1448 0128 8C040000 		.word	.LC102
 1449 012c 90040000 		.word	.LC103
 1450 0130 98040000 		.word	.LC104
 1451 0134 A0040000 		.word	.LC105
 1452 0138 A8040000 		.word	.LC106
 1453 013c AC040000 		.word	.LC107
 1454 0140 B4040000 		.word	.LC108
 1455 0144 C0040000 		.word	.LC109
 1456 0148 CC040000 		.word	.LC110
 1457 014c D8040000 		.word	.LC111
 1458 0150 E0040000 		.word	.LC112
 1459 0154 EC040000 		.word	.LC113
 1460 0158 F4040000 		.word	.LC114
 1461 015c 00050000 		.word	.LC115
 1462 0160 0C050000 		.word	.LC116
 1463 0164 14050000 		.word	.LC117
 1464 0168 20050000 		.word	.LC118
 1465 016c 2C050000 		.word	.LC119
 1466 0170 38050000 		.word	.LC120
 1467 0174 40050000 		.word	.LC121
 1468 0178 4C050000 		.word	.LC122
 1469 017c 54050000 		.word	.LC123
 1470 0180 60050000 		.word	.LC124
 1471 0184 68050000 		.word	.LC125
 1472 0188 80050000 		.word	.LC126
 1473 018c 8C050000 		.word	.LC127
 1474 0190 A0050000 		.word	.LC128
 1475 0194 AC050000 		.word	.LC129
 1476 0198 B0050000 		.word	.LC130
 1477 019c B8050000 		.word	.LC131
 1478 01a0 C0050000 		.word	.LC132
 1479 01a4 C8050000 		.word	.LC133
 1480 01a8 D4050000 		.word	.LC134
 1481 01ac DC050000 		.word	.LC135
 1482 01b0 E8050000 		.word	.LC136
 1483 01b4 EC050000 		.word	.LC137
 1484 01b8 F4050000 		.word	.LC138
 1485 01bc FC050000 		.word	.LC139
 1486 01c0 00060000 		.word	.LC140
 1487 01c4 14060000 		.word	.LC141
 1488 01c8 20060000 		.word	.LC142
 1489 01cc 2C060000 		.word	.LC143
 1490 01d0 3C060000 		.word	.LC144
 1491 01d4 44060000 		.word	.LC145
 1492 01d8 50060000 		.word	.LC146
 1493 01dc 54060000 		.word	.LC147
 1494 01e0 5C060000 		.word	.LC148
 1495 01e4 74060000 		.word	.LC149
 1496 01e8 8C060000 		.word	.LC150
 1497 01ec 98060000 		.word	.LC151
 1498 01f0 A4060000 		.word	.LC152
 1499 01f4 AC060000 		.word	.LC153
 1500 01f8 00000000 		.word	0
 1501              		.weak	_ZN11flatbuffers25flatbuffer_version_stringE
 1502              		.section	.data._ZN11flatbuffers25flatbuffer_version_stringE,"aw",%progbits
 1503              		.align	2
 1506              	_ZN11flatbuffers25flatbuffer_version_stringE:
 1507 0000 B8060000 		.word	.LC154
 1508              		.section	.rodata.CSWTCH.20,"a",%progbits
 1509              		.align	3
 1510              		.set	.LANCHOR0,. + 0
 1513              	CSWTCH.20:
 1514 0000 5C000000 		.word	.LC17
 1515 0004 6C000000 		.word	.LC18
 1516 0008 7C000000 		.word	.LC19
 1517 000c 8C000000 		.word	.LC20
 1518 0010 9C000000 		.word	.LC21
 1519 0014 AC000000 		.word	.LC22
 1520 0018 BC000000 		.word	.LC23
 1521 001c C8000000 		.word	.LC24
 1522 0020 D8000000 		.word	.LC25
 1523 0024 EC000000 		.word	.LC26
 1524 0028 F8000000 		.word	.LC27
 1525              		.section	.rodata.CSWTCH.22,"a",%progbits
 1526              		.align	3
 1527              		.set	.LANCHOR1,. + 0
 1530              	CSWTCH.22:
 1531 0000 00000000 		.word	.LC12
 1532 0004 10000000 		.word	.LC13
 1533 0008 20000000 		.word	.LC14
 1534 000c 30000000 		.word	.LC15
 1535 0010 4C000000 		.word	.LC16
 1536              		.section	.rodata._ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE
 1537              		.align	2
 1538              	.LC0:
 1539 0000 76656374 		.ascii	"vector::reserve\000"
 1539      6F723A3A 
 1539      72657365 
 1539      72766500 
 1540              		.section	.rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4,"aMS",%progbits,
 1541              		.align	2
 1542              	.LC1:
 1543 0000 28696E76 		.ascii	"(invalid)\000"
 1543      616C6964 
 1543      2900
 1544 000a 0000     		.space	2
 1545              	.LC2:
 1546 000c 496E7465 		.ascii	"Interpreter has %zu tensors and %zu nodes\012\000"
 1546      72707265 
 1546      74657220 
 1546      68617320 
 1546      257A7520 
 1547 0037 00       		.space	1
 1548              	.LC3:
 1549 0038 496E7075 		.ascii	"Inputs:\000"
 1549      74733A00 
 1550              	.LC4:
 1551 0040 20256400 		.ascii	" %d\000"
 1552              	.LC5:
 1553 0044 4F757470 		.ascii	"Outputs:\000"
 1553      7574733A 
 1553      00
 1554 004d 000000   		.space	3
 1555              	.LC6:
 1556 0050 54656E73 		.ascii	"Tensor %3zu %-20s %10s %15s %10zu bytes (%4.1f MB) "
 1556      6F722025 
 1556      337A7520 
 1556      252D3230 
 1556      73202531 
 1557 0083 00       		.ascii	"\000"
 1558              	.LC7:
 1559 0084 20286E75 		.ascii	" (null)\000"
 1559      6C6C2900 
 1560              	.LC8:
 1561 008c 4E6F6465 		.ascii	"Node %3zu Operator Custom Name %s\012\000"
 1561      2025337A 
 1561      75204F70 
 1561      65726174 
 1561      6F722043 
 1562 00af 00       		.space	1
 1563              	.LC9:
 1564 00b0 4E6F6465 		.ascii	"Node %3zu Operator Builtin Code %3ld %s\012\000"
 1564      2025337A 
 1564      75204F70 
 1564      65726174 
 1564      6F722042 
 1565 00d9 000000   		.space	3
 1566              	.LC10:
 1567 00dc 2020496E 		.ascii	"  Inputs:\000"
 1567      70757473 
 1567      3A00
 1568 00e6 0000     		.space	2
 1569              	.LC11:
 1570 00e8 20204F75 		.ascii	"  Outputs:\000"
 1570      74707574 
 1570      733A00
 1571              		.section	.rodata.str1.4,"aMS",%progbits,1
 1572              		.align	2
 1573              	.LC12:
 1574 0000 6B54664C 		.ascii	"kTfLiteMemNone\000"
 1574      6974654D 
 1574      656D4E6F 
 1574      6E6500
 1575 000f 00       		.space	1
 1576              	.LC13:
 1577 0010 6B54664C 		.ascii	"kTfLiteMmapRo\000"
 1577      6974654D 
 1577      6D617052 
 1577      6F00
 1578 001e 0000     		.space	2
 1579              	.LC14:
 1580 0020 6B54664C 		.ascii	"kTfLiteArenaRw\000"
 1580      69746541 
 1580      72656E61 
 1580      527700
 1581 002f 00       		.space	1
 1582              	.LC15:
 1583 0030 6B54664C 		.ascii	"kTfLiteArenaRwPersistent\000"
 1583      69746541 
 1583      72656E61 
 1583      52775065 
 1583      72736973 
 1584 0049 000000   		.space	3
 1585              	.LC16:
 1586 004c 6B54664C 		.ascii	"kTfLiteDynamic\000"
 1586      69746544 
 1586      796E616D 
 1586      696300
 1587 005b 00       		.space	1
 1588              	.LC17:
 1589 005c 6B54664C 		.ascii	"kTfLiteNoType\000"
 1589      6974654E 
 1589      6F547970 
 1589      6500
 1590 006a 0000     		.space	2
 1591              	.LC18:
 1592 006c 6B54664C 		.ascii	"kTfLiteFloat32\000"
 1592      69746546 
 1592      6C6F6174 
 1592      333200
 1593 007b 00       		.space	1
 1594              	.LC19:
 1595 007c 6B54664C 		.ascii	"kTfLiteInt32\000"
 1595      69746549 
 1595      6E743332 
 1595      00
 1596 0089 000000   		.space	3
 1597              	.LC20:
 1598 008c 6B54664C 		.ascii	"kTfLiteUInt8\000"
 1598      69746555 
 1598      496E7438 
 1598      00
 1599 0099 000000   		.space	3
 1600              	.LC21:
 1601 009c 6B54664C 		.ascii	"kTfLiteInt64\000"
 1601      69746549 
 1601      6E743634 
 1601      00
 1602 00a9 000000   		.space	3
 1603              	.LC22:
 1604 00ac 6B54664C 		.ascii	"kTfLiteString\000"
 1604      69746553 
 1604      7472696E 
 1604      6700
 1605 00ba 0000     		.space	2
 1606              	.LC23:
 1607 00bc 6B54664C 		.ascii	"kTfLiteBool\000"
 1607      69746542 
 1607      6F6F6C00 
 1608              	.LC24:
 1609 00c8 6B54664C 		.ascii	"kTfLiteInt16\000"
 1609      69746549 
 1609      6E743136 
 1609      00
 1610 00d5 000000   		.space	3
 1611              	.LC25:
 1612 00d8 6B54664C 		.ascii	"kTfLiteComplex64\000"
 1612      69746543 
 1612      6F6D706C 
 1612      65783634 
 1612      00
 1613 00e9 000000   		.space	3
 1614              	.LC26:
 1615 00ec 6B54664C 		.ascii	"kTfLiteInt8\000"
 1615      69746549 
 1615      6E743800 
 1616              	.LC27:
 1617 00f8 6B54664C 		.ascii	"kTfLiteFloat16\000"
 1617      69746546 
 1617      6C6F6174 
 1617      313600
 1618 0107 00       		.space	1
 1619              	.LC28:
 1620 0108 41444400 		.ascii	"ADD\000"
 1621              	.LC29:
 1622 010c 41564552 		.ascii	"AVERAGE_POOL_2D\000"
 1622      4147455F 
 1622      504F4F4C 
 1622      5F324400 
 1623              	.LC30:
 1624 011c 434F4E43 		.ascii	"CONCATENATION\000"
 1624      4154454E 
 1624      4154494F 
 1624      4E00
 1625 012a 0000     		.space	2
 1626              	.LC31:
 1627 012c 434F4E56 		.ascii	"CONV_2D\000"
 1627      5F324400 
 1628              	.LC32:
 1629 0134 44455054 		.ascii	"DEPTHWISE_CONV_2D\000"
 1629      48574953 
 1629      455F434F 
 1629      4E565F32 
 1629      4400
 1630 0146 0000     		.space	2
 1631              	.LC33:
 1632 0148 44455054 		.ascii	"DEPTH_TO_SPACE\000"
 1632      485F544F 
 1632      5F535041 
 1632      434500
 1633 0157 00       		.space	1
 1634              	.LC34:
 1635 0158 44455155 		.ascii	"DEQUANTIZE\000"
 1635      414E5449 
 1635      5A4500
 1636 0163 00       		.space	1
 1637              	.LC35:
 1638 0164 454D4245 		.ascii	"EMBEDDING_LOOKUP\000"
 1638      4444494E 
 1638      475F4C4F 
 1638      4F4B5550 
 1638      00
 1639 0175 000000   		.space	3
 1640              	.LC36:
 1641 0178 464C4F4F 		.ascii	"FLOOR\000"
 1641      5200
 1642 017e 0000     		.space	2
 1643              	.LC37:
 1644 0180 46554C4C 		.ascii	"FULLY_CONNECTED\000"
 1644      595F434F 
 1644      4E4E4543 
 1644      54454400 
 1645              	.LC38:
 1646 0190 48415348 		.ascii	"HASHTABLE_LOOKUP\000"
 1646      5441424C 
 1646      455F4C4F 
 1646      4F4B5550 
 1646      00
 1647 01a1 000000   		.space	3
 1648              	.LC39:
 1649 01a4 4C325F4E 		.ascii	"L2_NORMALIZATION\000"
 1649      4F524D41 
 1649      4C495A41 
 1649      54494F4E 
 1649      00
 1650 01b5 000000   		.space	3
 1651              	.LC40:
 1652 01b8 4C325F50 		.ascii	"L2_POOL_2D\000"
 1652      4F4F4C5F 
 1652      324400
 1653 01c3 00       		.space	1
 1654              	.LC41:
 1655 01c4 4C4F4341 		.ascii	"LOCAL_RESPONSE_NORMALIZATION\000"
 1655      4C5F5245 
 1655      53504F4E 
 1655      53455F4E 
 1655      4F524D41 
 1656 01e1 000000   		.space	3
 1657              	.LC42:
 1658 01e4 4C4F4749 		.ascii	"LOGISTIC\000"
 1658      53544943 
 1658      00
 1659 01ed 000000   		.space	3
 1660              	.LC43:
 1661 01f0 4C53485F 		.ascii	"LSH_PROJECTION\000"
 1661      50524F4A 
 1661      45435449 
 1661      4F4E00
 1662 01ff 00       		.space	1
 1663              	.LC44:
 1664 0200 4C53544D 		.ascii	"LSTM\000"
 1664      00
 1665 0205 000000   		.space	3
 1666              	.LC45:
 1667 0208 4D41585F 		.ascii	"MAX_POOL_2D\000"
 1667      504F4F4C 
 1667      5F324400 
 1668              	.LC46:
 1669 0214 4D554C00 		.ascii	"MUL\000"
 1670              	.LC47:
 1671 0218 52454C55 		.ascii	"RELU\000"
 1671      00
 1672 021d 000000   		.space	3
 1673              	.LC48:
 1674 0220 52454C55 		.ascii	"RELU_N1_TO_1\000"
 1674      5F4E315F 
 1674      544F5F31 
 1674      00
 1675 022d 000000   		.space	3
 1676              	.LC49:
 1677 0230 52454C55 		.ascii	"RELU6\000"
 1677      3600
 1678 0236 0000     		.space	2
 1679              	.LC50:
 1680 0238 52455348 		.ascii	"RESHAPE\000"
 1680      41504500 
 1681              	.LC51:
 1682 0240 52455349 		.ascii	"RESIZE_BILINEAR\000"
 1682      5A455F42 
 1682      494C494E 
 1682      45415200 
 1683              	.LC52:
 1684 0250 524E4E00 		.ascii	"RNN\000"
 1685              	.LC53:
 1686 0254 534F4654 		.ascii	"SOFTMAX\000"
 1686      4D415800 
 1687              	.LC54:
 1688 025c 53504143 		.ascii	"SPACE_TO_DEPTH\000"
 1688      455F544F 
 1688      5F444550 
 1688      544800
 1689 026b 00       		.space	1
 1690              	.LC55:
 1691 026c 53564446 		.ascii	"SVDF\000"
 1691      00
 1692 0271 000000   		.space	3
 1693              	.LC56:
 1694 0274 54414E48 		.ascii	"TANH\000"
 1694      00
 1695 0279 000000   		.space	3
 1696              	.LC57:
 1697 027c 434F4E43 		.ascii	"CONCAT_EMBEDDINGS\000"
 1697      41545F45 
 1697      4D424544 
 1697      44494E47 
 1697      5300
 1698 028e 0000     		.space	2
 1699              	.LC58:
 1700 0290 534B4950 		.ascii	"SKIP_GRAM\000"
 1700      5F475241 
 1700      4D00
 1701 029a 0000     		.space	2
 1702              	.LC59:
 1703 029c 43414C4C 		.ascii	"CALL\000"
 1703      00
 1704 02a1 000000   		.space	3
 1705              	.LC60:
 1706 02a4 43555354 		.ascii	"CUSTOM\000"
 1706      4F4D00
 1707 02ab 00       		.space	1
 1708              	.LC61:
 1709 02ac 454D4245 		.ascii	"EMBEDDING_LOOKUP_SPARSE\000"
 1709      4444494E 
 1709      475F4C4F 
 1709      4F4B5550 
 1709      5F535041 
 1710              	.LC62:
 1711 02c4 50414400 		.ascii	"PAD\000"
 1712              	.LC63:
 1713 02c8 554E4944 		.ascii	"UNIDIRECTIONAL_SEQUENCE_RNN\000"
 1713      49524543 
 1713      54494F4E 
 1713      414C5F53 
 1713      45515545 
 1714              	.LC64:
 1715 02e4 47415448 		.ascii	"GATHER\000"
 1715      455200
 1716 02eb 00       		.space	1
 1717              	.LC65:
 1718 02ec 42415443 		.ascii	"BATCH_TO_SPACE_ND\000"
 1718      485F544F 
 1718      5F535041 
 1718      43455F4E 
 1718      4400
 1719 02fe 0000     		.space	2
 1720              	.LC66:
 1721 0300 53504143 		.ascii	"SPACE_TO_BATCH_ND\000"
 1721      455F544F 
 1721      5F424154 
 1721      43485F4E 
 1721      4400
 1722 0312 0000     		.space	2
 1723              	.LC67:
 1724 0314 5452414E 		.ascii	"TRANSPOSE\000"
 1724      53504F53 
 1724      4500
 1725 031e 0000     		.space	2
 1726              	.LC68:
 1727 0320 4D45414E 		.ascii	"MEAN\000"
 1727      00
 1728 0325 000000   		.space	3
 1729              	.LC69:
 1730 0328 53554200 		.ascii	"SUB\000"
 1731              	.LC70:
 1732 032c 44495600 		.ascii	"DIV\000"
 1733              	.LC71:
 1734 0330 53515545 		.ascii	"SQUEEZE\000"
 1734      455A4500 
 1735              	.LC72:
 1736 0338 554E4944 		.ascii	"UNIDIRECTIONAL_SEQUENCE_LSTM\000"
 1736      49524543 
 1736      54494F4E 
 1736      414C5F53 
 1736      45515545 
 1737 0355 000000   		.space	3
 1738              	.LC73:
 1739 0358 53545249 		.ascii	"STRIDED_SLICE\000"
 1739      4445445F 
 1739      534C4943 
 1739      4500
 1740 0366 0000     		.space	2
 1741              	.LC74:
 1742 0368 42494449 		.ascii	"BIDIRECTIONAL_SEQUENCE_RNN\000"
 1742      52454354 
 1742      494F4E41 
 1742      4C5F5345 
 1742      5155454E 
 1743 0383 00       		.space	1
 1744              	.LC75:
 1745 0384 45585000 		.ascii	"EXP\000"
 1746              	.LC76:
 1747 0388 544F504B 		.ascii	"TOPK_V2\000"
 1747      5F563200 
 1748              	.LC77:
 1749 0390 53504C49 		.ascii	"SPLIT\000"
 1749      5400
 1750 0396 0000     		.space	2
 1751              	.LC78:
 1752 0398 4C4F475F 		.ascii	"LOG_SOFTMAX\000"
 1752      534F4654 
 1752      4D415800 
 1753              	.LC79:
 1754 03a4 44454C45 		.ascii	"DELEGATE\000"
 1754      47415445 
 1754      00
 1755 03ad 000000   		.space	3
 1756              	.LC80:
 1757 03b0 42494449 		.ascii	"BIDIRECTIONAL_SEQUENCE_LSTM\000"
 1757      52454354 
 1757      494F4E41 
 1757      4C5F5345 
 1757      5155454E 
 1758              	.LC81:
 1759 03cc 43415354 		.ascii	"CAST\000"
 1759      00
 1760 03d1 000000   		.space	3
 1761              	.LC82:
 1762 03d4 5052454C 		.ascii	"PRELU\000"
 1762      5500
 1763 03da 0000     		.space	2
 1764              	.LC83:
 1765 03dc 4D415849 		.ascii	"MAXIMUM\000"
 1765      4D554D00 
 1766              	.LC84:
 1767 03e4 4152475F 		.ascii	"ARG_MAX\000"
 1767      4D415800 
 1768              	.LC85:
 1769 03ec 4D494E49 		.ascii	"MINIMUM\000"
 1769      4D554D00 
 1770              	.LC86:
 1771 03f4 4C455353 		.ascii	"LESS\000"
 1771      00
 1772 03f9 000000   		.space	3
 1773              	.LC87:
 1774 03fc 4E454700 		.ascii	"NEG\000"
 1775              	.LC88:
 1776 0400 50414456 		.ascii	"PADV2\000"
 1776      3200
 1777 0406 0000     		.space	2
 1778              	.LC89:
 1779 0408 47524541 		.ascii	"GREATER\000"
 1779      54455200 
 1780              	.LC90:
 1781 0410 47524541 		.ascii	"GREATER_EQUAL\000"
 1781      5445525F 
 1781      45515541 
 1781      4C00
 1782 041e 0000     		.space	2
 1783              	.LC91:
 1784 0420 4C455353 		.ascii	"LESS_EQUAL\000"
 1784      5F455155 
 1784      414C00
 1785 042b 00       		.space	1
 1786              	.LC92:
 1787 042c 53454C45 		.ascii	"SELECT\000"
 1787      435400
 1788 0433 00       		.space	1
 1789              	.LC93:
 1790 0434 534C4943 		.ascii	"SLICE\000"
 1790      4500
 1791 043a 0000     		.space	2
 1792              	.LC94:
 1793 043c 53494E00 		.ascii	"SIN\000"
 1794              	.LC95:
 1795 0440 5452414E 		.ascii	"TRANSPOSE_CONV\000"
 1795      53504F53 
 1795      455F434F 
 1795      4E5600
 1796 044f 00       		.space	1
 1797              	.LC96:
 1798 0450 53504152 		.ascii	"SPARSE_TO_DENSE\000"
 1798      53455F54 
 1798      4F5F4445 
 1798      4E534500 
 1799              	.LC97:
 1800 0460 54494C45 		.ascii	"TILE\000"
 1800      00
 1801 0465 000000   		.space	3
 1802              	.LC98:
 1803 0468 45585041 		.ascii	"EXPAND_DIMS\000"
 1803      4E445F44 
 1803      494D5300 
 1804              	.LC99:
 1805 0474 45515541 		.ascii	"EQUAL\000"
 1805      4C00
 1806 047a 0000     		.space	2
 1807              	.LC100:
 1808 047c 4E4F545F 		.ascii	"NOT_EQUAL\000"
 1808      45515541 
 1808      4C00
 1809 0486 0000     		.space	2
 1810              	.LC101:
 1811 0488 4C4F4700 		.ascii	"LOG\000"
 1812              	.LC102:
 1813 048c 53554D00 		.ascii	"SUM\000"
 1814              	.LC103:
 1815 0490 53515254 		.ascii	"SQRT\000"
 1815      00
 1816 0495 000000   		.space	3
 1817              	.LC104:
 1818 0498 52535152 		.ascii	"RSQRT\000"
 1818      5400
 1819 049e 0000     		.space	2
 1820              	.LC105:
 1821 04a0 53484150 		.ascii	"SHAPE\000"
 1821      4500
 1822 04a6 0000     		.space	2
 1823              	.LC106:
 1824 04a8 504F5700 		.ascii	"POW\000"
 1825              	.LC107:
 1826 04ac 4152475F 		.ascii	"ARG_MIN\000"
 1826      4D494E00 
 1827              	.LC108:
 1828 04b4 46414B45 		.ascii	"FAKE_QUANT\000"
 1828      5F515541 
 1828      4E5400
 1829 04bf 00       		.space	1
 1830              	.LC109:
 1831 04c0 52454455 		.ascii	"REDUCE_PROD\000"
 1831      43455F50 
 1831      524F4400 
 1832              	.LC110:
 1833 04cc 52454455 		.ascii	"REDUCE_MAX\000"
 1833      43455F4D 
 1833      415800
 1834 04d7 00       		.space	1
 1835              	.LC111:
 1836 04d8 5041434B 		.ascii	"PACK\000"
 1836      00
 1837 04dd 000000   		.space	3
 1838              	.LC112:
 1839 04e0 4C4F4749 		.ascii	"LOGICAL_OR\000"
 1839      43414C5F 
 1839      4F5200
 1840 04eb 00       		.space	1
 1841              	.LC113:
 1842 04ec 4F4E455F 		.ascii	"ONE_HOT\000"
 1842      484F5400 
 1843              	.LC114:
 1844 04f4 4C4F4749 		.ascii	"LOGICAL_AND\000"
 1844      43414C5F 
 1844      414E4400 
 1845              	.LC115:
 1846 0500 4C4F4749 		.ascii	"LOGICAL_NOT\000"
 1846      43414C5F 
 1846      4E4F5400 
 1847              	.LC116:
 1848 050c 554E5041 		.ascii	"UNPACK\000"
 1848      434B00
 1849 0513 00       		.space	1
 1850              	.LC117:
 1851 0514 52454455 		.ascii	"REDUCE_MIN\000"
 1851      43455F4D 
 1851      494E00
 1852 051f 00       		.space	1
 1853              	.LC118:
 1854 0520 464C4F4F 		.ascii	"FLOOR_DIV\000"
 1854      525F4449 
 1854      5600
 1855 052a 0000     		.space	2
 1856              	.LC119:
 1857 052c 52454455 		.ascii	"REDUCE_ANY\000"
 1857      43455F41 
 1857      4E5900
 1858 0537 00       		.space	1
 1859              	.LC120:
 1860 0538 53515541 		.ascii	"SQUARE\000"
 1860      524500
 1861 053f 00       		.space	1
 1862              	.LC121:
 1863 0540 5A45524F 		.ascii	"ZEROS_LIKE\000"
 1863      535F4C49 
 1863      4B4500
 1864 054b 00       		.space	1
 1865              	.LC122:
 1866 054c 46494C4C 		.ascii	"FILL\000"
 1866      00
 1867 0551 000000   		.space	3
 1868              	.LC123:
 1869 0554 464C4F4F 		.ascii	"FLOOR_MOD\000"
 1869      525F4D4F 
 1869      4400
 1870 055e 0000     		.space	2
 1871              	.LC124:
 1872 0560 52414E47 		.ascii	"RANGE\000"
 1872      4500
 1873 0566 0000     		.space	2
 1874              	.LC125:
 1875 0568 52455349 		.ascii	"RESIZE_NEAREST_NEIGHBOR\000"
 1875      5A455F4E 
 1875      45415245 
 1875      53545F4E 
 1875      45494748 
 1876              	.LC126:
 1877 0580 4C45414B 		.ascii	"LEAKY_RELU\000"
 1877      595F5245 
 1877      4C5500
 1878 058b 00       		.space	1
 1879              	.LC127:
 1880 058c 53515541 		.ascii	"SQUARED_DIFFERENCE\000"
 1880      5245445F 
 1880      44494646 
 1880      4552454E 
 1880      434500
 1881 059f 00       		.space	1
 1882              	.LC128:
 1883 05a0 4D495252 		.ascii	"MIRROR_PAD\000"
 1883      4F525F50 
 1883      414400
 1884 05ab 00       		.space	1
 1885              	.LC129:
 1886 05ac 41425300 		.ascii	"ABS\000"
 1887              	.LC130:
 1888 05b0 53504C49 		.ascii	"SPLIT_V\000"
 1888      545F5600 
 1889              	.LC131:
 1890 05b8 554E4951 		.ascii	"UNIQUE\000"
 1890      554500
 1891 05bf 00       		.space	1
 1892              	.LC132:
 1893 05c0 4345494C 		.ascii	"CEIL\000"
 1893      00
 1894 05c5 000000   		.space	3
 1895              	.LC133:
 1896 05c8 52455645 		.ascii	"REVERSE_V2\000"
 1896      5253455F 
 1896      563200
 1897 05d3 00       		.space	1
 1898              	.LC134:
 1899 05d4 4144445F 		.ascii	"ADD_N\000"
 1899      4E00
 1900 05da 0000     		.space	2
 1901              	.LC135:
 1902 05dc 47415448 		.ascii	"GATHER_ND\000"
 1902      45525F4E 
 1902      4400
 1903 05e6 0000     		.space	2
 1904              	.LC136:
 1905 05e8 434F5300 		.ascii	"COS\000"
 1906              	.LC137:
 1907 05ec 57484552 		.ascii	"WHERE\000"
 1907      4500
 1908 05f2 0000     		.space	2
 1909              	.LC138:
 1910 05f4 52414E4B 		.ascii	"RANK\000"
 1910      00
 1911 05f9 000000   		.space	3
 1912              	.LC139:
 1913 05fc 454C5500 		.ascii	"ELU\000"
 1914              	.LC140:
 1915 0600 52455645 		.ascii	"REVERSE_SEQUENCE\000"
 1915      5253455F 
 1915      53455155 
 1915      454E4345 
 1915      00
 1916 0611 000000   		.space	3
 1917              	.LC141:
 1918 0614 4D415452 		.ascii	"MATRIX_DIAG\000"
 1918      49585F44 
 1918      49414700 
 1919              	.LC142:
 1920 0620 5155414E 		.ascii	"QUANTIZE\000"
 1920      54495A45 
 1920      00
 1921 0629 000000   		.space	3
 1922              	.LC143:
 1923 062c 4D415452 		.ascii	"MATRIX_SET_DIAG\000"
 1923      49585F53 
 1923      45545F44 
 1923      49414700 
 1924              	.LC144:
 1925 063c 524F554E 		.ascii	"ROUND\000"
 1925      4400
 1926 0642 0000     		.space	2
 1927              	.LC145:
 1928 0644 48415244 		.ascii	"HARD_SWISH\000"
 1928      5F535749 
 1928      534800
 1929 064f 00       		.space	1
 1930              	.LC146:
 1931 0650 494600   		.ascii	"IF\000"
 1932 0653 00       		.space	1
 1933              	.LC147:
 1934 0654 5748494C 		.ascii	"WHILE\000"
 1934      4500
 1935 065a 0000     		.space	2
 1936              	.LC148:
 1937 065c 4E4F4E5F 		.ascii	"NON_MAX_SUPPRESSION_V4\000"
 1937      4D41585F 
 1937      53555050 
 1937      52455353 
 1937      494F4E5F 
 1938 0673 00       		.space	1
 1939              	.LC149:
 1940 0674 4E4F4E5F 		.ascii	"NON_MAX_SUPPRESSION_V5\000"
 1940      4D41585F 
 1940      53555050 
 1940      52455353 
 1940      494F4E5F 
 1941 068b 00       		.space	1
 1942              	.LC150:
 1943 068c 53434154 		.ascii	"SCATTER_ND\000"
 1943      5445525F 
 1943      4E4400
 1944 0697 00       		.space	1
 1945              	.LC151:
 1946 0698 53454C45 		.ascii	"SELECT_V2\000"
 1946      43545F56 
 1946      3200
 1947 06a2 0000     		.space	2
 1948              	.LC152:
 1949 06a4 44454E53 		.ascii	"DENSIFY\000"
 1949      49465900 
 1950              	.LC153:
 1951 06ac 5345474D 		.ascii	"SEGMENT_SUM\000"
 1951      454E545F 
 1951      53554D00 
 1952              	.LC154:
 1953 06b8 466C6174 		.ascii	"FlatBuffers 1.11.0\000"
 1953      42756666 
 1953      65727320 
 1953      312E3131 
 1953      2E3000
 1954              		.text
 1955              	.Letext0:
 1956              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 1957              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1958              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1959              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1960              		.file 13 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
 1961              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1962              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1963              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1964              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1965              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1966              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1967              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1968              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1969              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1970              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1971              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1972              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1973              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1974              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1975              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1976              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1977              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1978              		.file 31 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1979              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1980              		.file 33 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1981              		.file 34 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1982              		.file 35 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1983              		.file 36 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1984              		.file 37 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1985              		.file 38 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1986              		.file 39 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1987              		.file 40 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1988              		.file 41 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1989              		.file 42 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1990              		.file 43 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1991              		.file 44 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1992              		.file 45 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1993              		.file 46 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1994              		.file 47 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1995              		.file 48 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1996              		.file 49 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1997              		.file 50 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1998              		.file 51 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1999              		.file 52 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2000              		.file 53 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2001              		.file 54 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2002              		.file 55 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2003              		.file 56 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2004              		.file 57 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2005              		.file 58 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2006              		.file 59 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2007              		.file 60 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 2008              		.file 61 "<built-in>"
 2009              		.file 62 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2010              		.file 63 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2011              		.file 64 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2012              		.file 65 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2013              		.file 66 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2014              		.file 67 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2015              		.file 68 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2016              		.file 69 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2017              		.file 70 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2018              		.file 71 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2019              		.file 72 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2020              		.file 73 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
 2021              		.file 74 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
 2022              		.file 75 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
 2023              		.file 76 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
 2024              		.file 77 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
 2025              		.file 78 "C:/Renesas/e2studio_2021_01_workspace_RZA2M_ANPR/ANPR_RZA2M_GR_MANGO/src/tensorflow_lite
 2026              		.file 79 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2027              		.file 80 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2028              		.file 81 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 micro_optional_debug_tools.cpp
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:17     .text._ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:23     .text._ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_:00000000 _ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_
.ARM.exidx.text._ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:286    .text._ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:291    .text._ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE:00000000 _ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1538   .rodata._ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE.str1.4:00000000 .LC0
.ARM.extab.text._ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE:00000000 $d
.ARM.exidx.text._ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:629    .text._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE:00000000 $a
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:635    .text._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE:00000000 _ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1545   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:0000000c .LC2
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1548   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:00000038 .LC3
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1550   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:00000040 .LC4
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1552   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:00000044 .LC5
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1542   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:00000000 .LC1
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1510   .rodata.CSWTCH.20:00000000 .LANCHOR0
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1527   .rodata.CSWTCH.22:00000000 .LANCHOR1
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1555   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:00000050 .LC6
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1373   .rodata._ZZN6tflite24EnumNamesBuiltinOperatorEvE5names:00000000 _ZZN6tflite24EnumNamesBuiltinOperatorEvE5names
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1563   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:000000b0 .LC9
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1560   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:0000008c .LC8
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1566   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:000000dc .LC10
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1569   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:000000e8 .LC11
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1558   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:00000084 .LC7
.ARM.extab.text._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE:00000000 $d
.ARM.exidx.text._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1370   .rodata._ZZN6tflite24EnumNamesBuiltinOperatorEvE5names:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1506   .data._ZN11flatbuffers25flatbuffer_version_stringE:00000000 _ZN11flatbuffers25flatbuffer_version_stringE
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1503   .data._ZN11flatbuffers25flatbuffer_version_stringE:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1509   .rodata.CSWTCH.20:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1513   .rodata.CSWTCH.20:00000000 CSWTCH.20
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1526   .rodata.CSWTCH.22:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1530   .rodata.CSWTCH.22:00000000 CSWTCH.22
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1537   .rodata._ZN6tflite12_GLOBAL__N_127flatbuffersVector2StdVectorERKN11flatbuffers6VectorIlEE.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1541   .rodata._ZN6tflite21PrintInterpreterStateEPNS_16MicroInterpreterE.str1.4:00000000 $d
C:\Users\a5050395\AppData\Local\Temp\ccZL6TgS.s:1572   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.3e1481985cce1e923928453d8be0a65b
                           .group:00000000 wm4.stdbool.h.29.01580e438512fc255c0619569742ffd3
                           .group:00000000 wm4.stddef.h.39.fa2e86d241f4df50b9327c72832885e1
                           .group:00000000 wm4.stdint.h.4.659be5aa44c4ab4eb7c7cc2b24d8ceee
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.7b36b8b41abe4293fbb29540b719705c
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.common.h.74.d1c749358f63fd6c2f210828f8b4cd93
                           .group:00000000 wm4.cconfig.h.31.1472b8c7bd4952a63a52f3f4f718f872
                           .group:00000000 wm4.cpu_defines.h.31.54d44f9d3e7c42875c5a7fd49795eb93
                           .group:00000000 wm4.cconfig.h.515.5e729db314ae74226e291b4ae081e353
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4.newlib.h.8.5f2124c7e712be65f83b91ff86a0b1c1
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:00000000 wm4.assert.h.11.a5d97ca77559a42890313c4941c01fd9
                           .group:00000000 wm4.cstddef.40.7f59894b65c26f8fc669473914a0ef3e
                           .group:00000000 wm4.cstdlib.44.52c5efdfb0f3c176bd11e611a0b94959
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.161.38688f2eb958a8ed58fdb61ffe554c94
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.cdefs.h.47.9bc8274c84fddbf05edd550eb0bf48cd
                           .group:00000000 wm4.stdlib.h.56.b4ddaf162082f284ba35b4444af99a9a
                           .group:00000000 wm4.cstdlib.76.ae666499c8f9b0ace1b4b23fe143da2c
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.cstring.45.6ab09de7fb97b576e744347688ddc8d7
                           .group:00000000 wm4.concept_check.h.31.f19605d278e56917c68a56d378be308c
                           .group:00000000 wm4.type_traits.30.2c7323a483bcd7601e8b71d2546ae284
                           .group:00000000 wm4.move.h.152.41d7b9e6779674d169b7813982cfa003
                           .group:00000000 wm4.exception_defines.h.31.ca6841b9be3287386aafc5c717935b2e
                           .group:00000000 wm4.cpp_type_traits.h.33.9f2bfd8c4471a9a299f6da3ec24c745c
                           .group:00000000 wm4.numeric_traits.h.30.aa01a98564b7e55086aad9e53c7e5c53
                           .group:00000000 wm4.assertions.h.30.51d443923f0d242550e04246a7819b39
                           .group:00000000 wm4.stl_iterator.h.1250.45f349a262f1b0d836d8edbc4b7b98ff
                           .group:00000000 wm4.debug.h.30.5c1f223b12199e851d4d42805b788ccf
                           .group:00000000 wm4.stl_algobase.h.491.aa250b69c90aafa2a0a62b8c58cd5f30
                           .group:00000000 wm4.wchar.h.2.f837619576d797e948eb58c44fac4678
                           .group:00000000 wm4.stddef.h.161.9f48187563b2a85291a91832aa425498
                           .group:00000000 wm4.wchar.h.21.37bb9285f4f71a2fcf02ef9fd25c9a14
                           .group:00000000 wm4.cwchar.48.c4e882638bf84f6da89479dda6fe8e17
                           .group:00000000 wm4.atomic_lockfree_defines.h.31.d5c6334fb1e95c9462b052951f1411df
                           .group:00000000 wm4.allocator.h.52.0ceafb36dc1b82dbfa6b05003082e3f5
                           .group:00000000 wm4.locale.h.8.27d0fe4c0abbb6f8893a1fa7c1799fd9
                           .group:00000000 wm4.locale.h.16.524572cf3c2ed9856516685acdc598fe
                           .group:00000000 wm4.clocale.45.c36d2d5b631a875aa5273176b54fdf0f
                           .group:00000000 wm4.ctype.h.2.da310d2ad165ccf8b86542f76fdb938d
                           .group:00000000 wm4.cctype.45.0da5714876b0be7f2d816b53d9670403
                           .group:00000000 wm4.gthr.h.27.ceb1c66b926f052afcba57e8784df0d4
                           .group:00000000 wm4.gthrdefault.h.27.edc94d4398c0534988962be77dc3c2e1
                           .group:00000000 wm4.atomic_word.h.30.9e0ac69fd462d5e650933e05133b4afa
                           .group:00000000 wm4.alloc_traits.h.31.c41c7c4789404962122a4e991dfa3abf
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.c3e9cb15e5af2807c4650345134c1a8a
                           .group:00000000 wm4.cstdio.45.ba8d321feb18bfc8923454067605c368
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.1ecd7b1049497a0ab61da0f6cbd4b0c6
                           .group:00000000 wm4.functional_hash.h.98.3bf7680ffcc8d24d09fa83ac1339c79d
                           .group:00000000 wm4.limits.38.55aefcf041805b6211ca3649dd2ab1b5
                           .group:00000000 wm4.wctype.h.2.898a9b94aa35d125e245195b099726a8
                           .group:00000000 wm4.wctype.h.21.aec4d35c940c33b3f9c6f879c49edcd8
                           .group:00000000 wm4.cwctype.54.6582aca101688c1c3785d03bc15e2af6
                           .group:00000000 wm4.locale_facets.h.56.0d4bb655ce5e76ea564363ed7c5a34fc
                           .group:00000000 wm4.typeinfo.30.04014f5b1b4fb021c5662653bc27c750
                           .group:00000000 wm4.functional.549.0bc5b448cf999863d3841495cd6fe920
                           .group:00000000 wm4.atomic_base.h.31.692a6b53cef50ad728d4af54dfbd4448
                           .group:00000000 wm4.stl_emulation.h.18.72d566602cd2e716402a6928e3edf4ed
                           .group:00000000 wm4.base.h.74.eee81b807ef32ceff7c7eabe822cf57f
                           .group:00000000 wm4.flatbuffers.h.2477.2aadc491b8e4d83e70221d9051efe203
                           .group:00000000 wm4.assert.h.11.7043852a511d37ae606afa012e67e471
                           .group:00000000 wm4.op_macros.h.43.66619c1e711dfae040a47e0bf92cc0c3
                           .group:00000000 wm4.compatibility.h.23.0a6b14d7c4bab6f72cf3c37a8bb36c28
                           .group:00000000 wm4.math.h.13.e7cbdea54f4da98ab8f7fad4d23502b2
                           .group:00000000 wm4.cmath.46.d6e5b776115d39075860ed881d18f087
                           .group:00000000 wm4.inttypes.h.14.d76379e1484484ef6b6b246cc782d8dc
                           .group:00000000 wm4.inttypes.h.23.73ff1ea04b6018cd02b26f6fdc94fae9

UNDEFINED SYMBOLS
_Znwj
_ZdlPv
memmove
__aeabi_unwind_cpp_pr0
__gxx_personality_v0
__cxa_end_cleanup
_ZSt20__throw_length_errorPKc
printf
putchar
_ZN6tflite16MicroInterpreter6tensorEj
puts
